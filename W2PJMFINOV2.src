#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PJMFINOV2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_COLUMN30
Onevent BEFORE_AREA Gosub AV_COLUMN30 From W2PJMFINOV2
Return

$AV_COLUMN30
If func PJMFINOV0.COLGETFMT(27)<>""
 Chgfmt [M]COLUMN30(indice) With func PJMFINOV0.COLGETFMT(27)
Else
 Chgfmt [M]COLUMN30(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN31
Onevent BEFORE_AREA Gosub AV_COLUMN31 From W2PJMFINOV2
Return

$AV_COLUMN31
If func PJMFINOV0.COLGETFMT(28)<>""
 Chgfmt [M]COLUMN31(indice) With func PJMFINOV0.COLGETFMT(28)
Else
 Chgfmt [M]COLUMN31(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN32
Onevent BEFORE_AREA Gosub AV_COLUMN32 From W2PJMFINOV2
Return

$AV_COLUMN32
If func PJMFINOV0.COLGETFMT(29)<>""
 Chgfmt [M]COLUMN32(indice) With func PJMFINOV0.COLGETFMT(29)
Else
 Chgfmt [M]COLUMN32(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN33
Onevent BEFORE_AREA Gosub AV_COLUMN33 From W2PJMFINOV2
Return

$AV_COLUMN33
If func PJMFINOV0.COLGETFMT(30)<>""
 Chgfmt [M]COLUMN33(indice) With func PJMFINOV0.COLGETFMT(30)
Else
 Chgfmt [M]COLUMN33(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN34
Onevent BEFORE_AREA Gosub AV_COLUMN34 From W2PJMFINOV2
Return

$AV_COLUMN34
If func PJMFINOV0.COLGETFMT(31)<>""
 Chgfmt [M]COLUMN34(indice) With func PJMFINOV0.COLGETFMT(31)
Else
 Chgfmt [M]COLUMN34(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN35
Onevent BEFORE_AREA Gosub AV_COLUMN35 From W2PJMFINOV2
Return

$AV_COLUMN35
If func PJMFINOV0.COLGETFMT(32)<>""
 Chgfmt [M]COLUMN35(indice) With func PJMFINOV0.COLGETFMT(32)
Else
 Chgfmt [M]COLUMN35(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN36
Onevent BEFORE_AREA Gosub AV_COLUMN36 From W2PJMFINOV2
Return

$AV_COLUMN36
If func PJMFINOV0.COLGETFMT(33)<>""
 Chgfmt [M]COLUMN36(indice) With func PJMFINOV0.COLGETFMT(33)
Else
 Chgfmt [M]COLUMN36(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN37
Onevent BEFORE_AREA Gosub AV_COLUMN37 From W2PJMFINOV2
Return

$AV_COLUMN37
If func PJMFINOV0.COLGETFMT(34)<>""
 Chgfmt [M]COLUMN37(indice) With func PJMFINOV0.COLGETFMT(34)
Else
 Chgfmt [M]COLUMN37(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN38
Onevent BEFORE_AREA Gosub AV_COLUMN38 From W2PJMFINOV2
Return

$AV_COLUMN38
If func PJMFINOV0.COLGETFMT(35)<>""
 Chgfmt [M]COLUMN38(indice) With func PJMFINOV0.COLGETFMT(35)
Else
 Chgfmt [M]COLUMN38(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN39
Onevent BEFORE_AREA Gosub AV_COLUMN39 From W2PJMFINOV2
Return

$AV_COLUMN39
If func PJMFINOV0.COLGETFMT(36)<>""
 Chgfmt [M]COLUMN39(indice) With func PJMFINOV0.COLGETFMT(36)
Else
 Chgfmt [M]COLUMN39(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN40
Onevent BEFORE_AREA Gosub AV_COLUMN40 From W2PJMFINOV2
Return

$AV_COLUMN40
If func PJMFINOV0.COLGETFMT(37)<>""
 Chgfmt [M]COLUMN40(indice) With func PJMFINOV0.COLGETFMT(37)
Else
 Chgfmt [M]COLUMN40(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN41
Onevent BEFORE_AREA Gosub AV_COLUMN41 From W2PJMFINOV2
Return

$AV_COLUMN41
If func PJMFINOV0.COLGETFMT(38)<>""
 Chgfmt [M]COLUMN41(indice) With func PJMFINOV0.COLGETFMT(38)
Else
 Chgfmt [M]COLUMN41(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN42
Onevent BEFORE_AREA Gosub AV_COLUMN42 From W2PJMFINOV2
Return

$AV_COLUMN42
If func PJMFINOV0.COLGETFMT(39)<>""
 Chgfmt [M]COLUMN42(indice) With func PJMFINOV0.COLGETFMT(39)
Else
 Chgfmt [M]COLUMN42(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN43
Onevent BEFORE_AREA Gosub AV_COLUMN43 From W2PJMFINOV2
Return

$AV_COLUMN43
If func PJMFINOV0.COLGETFMT(40)<>""
 Chgfmt [M]COLUMN43(indice) With func PJMFINOV0.COLGETFMT(40)
Else
 Chgfmt [M]COLUMN43(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_BUDCOD
Return

$ON_XSL
Onevent INIT_AREA Call D_XSL(zc) From W2PJMFINOV2
Return

Subprog D_XSL(VALEUR)
Variable Clbfile VALEUR
If varinit([M]XSL,indice)=0
 Call INIXSL(VALEUR,"ANOMV") From INTRUTILA
Endif
Gosub _AFF
End

$TIT_COL
Local Char TITCL(200)(1..39)
Raz TITCL
Case BASPAG
 When "NBLIG"
  TITCL(1) = func PJMFINOV0.COL_GET_TITLE(1)
  TITCL(2) = func PJMFINOV0.COL_GET_TITLE(3)
  TITCL(3) = func PJMFINOV0.COL_GET_TITLE(4)
  TITCL(4) = func PJMFINOV0.COL_GET_TITLE(5)
  TITCL(5) = func PJMFINOV0.COL_GET_TITLE(6)
  TITCL(6) = func PJMFINOV0.COL_GET_TITLE(7)
  TITCL(7) = func PJMFINOV0.COL_GET_TITLE(8)
  TITCL(8) = func PJMFINOV0.COL_GET_TITLE(9)
  TITCL(9) = func PJMFINOV0.COL_GET_TITLE(10)
  TITCL(10) = func PJMFINOV0.COL_GET_TITLE(11)
  TITCL(11) = func PJMFINOV0.COL_GET_TITLE(12)
  TITCL(12) = func PJMFINOV0.COL_GET_TITLE(13)
  TITCL(13) = func PJMFINOV0.COL_GET_TITLE(14)
  TITCL(14) = func PJMFINOV0.COL_GET_TITLE(15)
  TITCL(15) = func PJMFINOV0.COL_GET_TITLE(16)
  TITCL(16) = func PJMFINOV0.COL_GET_TITLE(17)
  TITCL(17) = func PJMFINOV0.COL_GET_TITLE(18)
  TITCL(18) = func PJMFINOV0.COL_GET_TITLE(19)
  TITCL(19) = func PJMFINOV0.COL_GET_TITLE(20)
  TITCL(20) = func PJMFINOV0.COL_GET_TITLE(21)
  TITCL(21) = func PJMFINOV0.COL_GET_TITLE(22)
  TITCL(22) = func PJMFINOV0.COL_GET_TITLE(23)
  TITCL(23) = func PJMFINOV0.COL_GET_TITLE(24)
  TITCL(24) = func PJMFINOV0.COL_GET_TITLE(25)
  TITCL(25) = func PJMFINOV0.COL_GET_TITLE(26)
  TITCL(26) = func PJMFINOV0.COL_GET_TITLE(27)
  TITCL(27) = func PJMFINOV0.COL_GET_TITLE(28)
  TITCL(28) = func PJMFINOV0.COL_GET_TITLE(29)
  TITCL(29) = func PJMFINOV0.COL_GET_TITLE(30)
  TITCL(30) = func PJMFINOV0.COL_GET_TITLE(31)
  TITCL(31) = func PJMFINOV0.COL_GET_TITLE(32)
  TITCL(32) = func PJMFINOV0.COL_GET_TITLE(33)
  TITCL(33) = func PJMFINOV0.COL_GET_TITLE(34)
  TITCL(34) = func PJMFINOV0.COL_GET_TITLE(35)
  TITCL(35) = func PJMFINOV0.COL_GET_TITLE(36)
  TITCL(36) = func PJMFINOV0.COL_GET_TITLE(37)
  TITCL(37) = func PJMFINOV0.COL_GET_TITLE(38)
  TITCL(38) = func PJMFINOV0.COL_GET_TITLE(39)
  TITCL(39) = func PJMFINOV0.COL_GET_TITLE(40)
  If !GORITITCOL
   Titcol [M]NBLIG TITCL(1) For OBJFATHER
   Titcol [M]NBLIG TITCL(2) For COLUMN6
   Titcol [M]NBLIG TITCL(3) For COLUMN7
   Titcol [M]NBLIG TITCL(4) For COLUMN8
   Titcol [M]NBLIG TITCL(5) For COLUMN9
   Titcol [M]NBLIG TITCL(6) For COLUMN10
   Titcol [M]NBLIG TITCL(7) For COLUMN11
   Titcol [M]NBLIG TITCL(8) For COLUMN12
   Titcol [M]NBLIG TITCL(9) For COLUMN13
   Titcol [M]NBLIG TITCL(10) For COLUMN14
   Titcol [M]NBLIG TITCL(11) For COLUMN15
   Titcol [M]NBLIG TITCL(12) For COLUMN16
   Titcol [M]NBLIG TITCL(13) For COLUMN17
   Titcol [M]NBLIG TITCL(14) For COLUMN18
   Titcol [M]NBLIG TITCL(15) For COLUMN19
   Titcol [M]NBLIG TITCL(16) For COLUMN20
   Titcol [M]NBLIG TITCL(17) For COLUMN21
   Titcol [M]NBLIG TITCL(18) For COLUMN22
   Titcol [M]NBLIG TITCL(19) For COLUMN23
   Titcol [M]NBLIG TITCL(20) For COLUMN24
   Titcol [M]NBLIG TITCL(21) For COLUMN25
   Titcol [M]NBLIG TITCL(22) For COLUMN26
   Titcol [M]NBLIG TITCL(23) For COLUMN27
   Titcol [M]NBLIG TITCL(24) For COLUMN28
   Titcol [M]NBLIG TITCL(25) For COLUMN29
   Titcol [M]NBLIG TITCL(26) For COLUMN30
   Titcol [M]NBLIG TITCL(27) For COLUMN31
   Titcol [M]NBLIG TITCL(28) For COLUMN32
   Titcol [M]NBLIG TITCL(29) For COLUMN33
   Titcol [M]NBLIG TITCL(30) For COLUMN34
   Titcol [M]NBLIG TITCL(31) For COLUMN35
   Titcol [M]NBLIG TITCL(32) For COLUMN36
   Titcol [M]NBLIG TITCL(33) For COLUMN37
   Titcol [M]NBLIG TITCL(34) For COLUMN38
   Titcol [M]NBLIG TITCL(35) For COLUMN39
   Titcol [M]NBLIG TITCL(36) For COLUMN40
   Titcol [M]NBLIG TITCL(37) For COLUMN41
   Titcol [M]NBLIG TITCL(38) For COLUMN42
   Titcol [M]NBLIG TITCL(39) For COLUMN43
  Else
   Titcol [M:PFOV2]NBLIG TITCL(1) For OBJFATHER
   Titcol [M:PFOV2]NBLIG TITCL(2) For COLUMN6
   Titcol [M:PFOV2]NBLIG TITCL(3) For COLUMN7
   Titcol [M:PFOV2]NBLIG TITCL(4) For COLUMN8
   Titcol [M:PFOV2]NBLIG TITCL(5) For COLUMN9
   Titcol [M:PFOV2]NBLIG TITCL(6) For COLUMN10
   Titcol [M:PFOV2]NBLIG TITCL(7) For COLUMN11
   Titcol [M:PFOV2]NBLIG TITCL(8) For COLUMN12
   Titcol [M:PFOV2]NBLIG TITCL(9) For COLUMN13
   Titcol [M:PFOV2]NBLIG TITCL(10) For COLUMN14
   Titcol [M:PFOV2]NBLIG TITCL(11) For COLUMN15
   Titcol [M:PFOV2]NBLIG TITCL(12) For COLUMN16
   Titcol [M:PFOV2]NBLIG TITCL(13) For COLUMN17
   Titcol [M:PFOV2]NBLIG TITCL(14) For COLUMN18
   Titcol [M:PFOV2]NBLIG TITCL(15) For COLUMN19
   Titcol [M:PFOV2]NBLIG TITCL(16) For COLUMN20
   Titcol [M:PFOV2]NBLIG TITCL(17) For COLUMN21
   Titcol [M:PFOV2]NBLIG TITCL(18) For COLUMN22
   Titcol [M:PFOV2]NBLIG TITCL(19) For COLUMN23
   Titcol [M:PFOV2]NBLIG TITCL(20) For COLUMN24
   Titcol [M:PFOV2]NBLIG TITCL(21) For COLUMN25
   Titcol [M:PFOV2]NBLIG TITCL(22) For COLUMN26
   Titcol [M:PFOV2]NBLIG TITCL(23) For COLUMN27
   Titcol [M:PFOV2]NBLIG TITCL(24) For COLUMN28
   Titcol [M:PFOV2]NBLIG TITCL(25) For COLUMN29
   Titcol [M:PFOV2]NBLIG TITCL(26) For COLUMN30
   Titcol [M:PFOV2]NBLIG TITCL(27) For COLUMN31
   Titcol [M:PFOV2]NBLIG TITCL(28) For COLUMN32
   Titcol [M:PFOV2]NBLIG TITCL(29) For COLUMN33
   Titcol [M:PFOV2]NBLIG TITCL(30) For COLUMN34
   Titcol [M:PFOV2]NBLIG TITCL(31) For COLUMN35
   Titcol [M:PFOV2]NBLIG TITCL(32) For COLUMN36
   Titcol [M:PFOV2]NBLIG TITCL(33) For COLUMN37
   Titcol [M:PFOV2]NBLIG TITCL(34) For COLUMN38
   Titcol [M:PFOV2]NBLIG TITCL(35) For COLUMN39
   Titcol [M:PFOV2]NBLIG TITCL(36) For COLUMN40
   Titcol [M:PFOV2]NBLIG TITCL(37) For COLUMN41
   Titcol [M:PFOV2]NBLIG TITCL(38) For COLUMN42
   Titcol [M:PFOV2]NBLIG TITCL(39) For COLUMN43
  Endif
Endcase
Return

$CHG_STY
Return


