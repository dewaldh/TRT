#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Supervisor
## ACLA-CLASSE ## AAUTILIS
# 2018-08-27 12:18:43 821

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "AAUTILIS_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0AAUTILIS
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
If this.BPA<>null
 [L]ASTATUS = fmet this.BPA._AERROR(_CTX,_SUPP)
Endif
For AINDCLA=1 To maxtab(this.BID)
 If this.BID(AINDCLA)<>null
  [L]ASTATUS = fmet this.BID(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.ADP)
 If this.ADP(AINDCLA)<>null
  [L]ASTATUS = fmet this.ADP(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0AAUTILIS
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
If this.BPA<>null
 [L]ASTATUS = fmet this.BPA._ADELERRORS(_APARAM)
Endif
For AINDCLA=1 To maxtab(this.BID)
 If this.BID(AINDCLA)<>null
  [L]ASTATUS = fmet this.BID(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.ADP)
 If this.ADP(AINDCLA)<>null
  [L]ASTATUS = fmet this.ADP(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0AAUTILIS
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
If this.BPA<>null
 [L]ASTATUS = fmet this.BPA._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPA')
Endif
For AINDCLA=1 To maxtab(this.BID)
 If this.BID(AINDCLA)<>null
  [L]ASTATUS = fmet this.BID(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BID('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.ADP)
 If this.ADP(AINDCLA)<>null
  [L]ASTATUS = fmet this.ADP(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'ADP('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0AAUTILIS
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_BLB
Case [L]_PRONAME
 When "AUSPIC"
  If fmet this.AGETATTRIBUTE("AUSPIC","$isLoaded")<>"true"
   Gosub READ_BLB_AUSPIC
  Else
   [L]_BLB = this.AUSPIC
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("AUSPIC","$contentType","image")
   [L]_CNT = "image"
  Endif
Endcase
Return

$READ_BLB_AUSPIC
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File ABLOB [WABB]
Else
Local File =this.ACTX.AFOLDER+".ABLOB" [WABB]
Endif
Raz [L]_BLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WABB]CODBLB = [L]_KEYVALTAB(1)
[F:WABB]IDENT1 = [L]_KEYVALTAB(2)
[F:WABB]IDENT2 = [L]_KEYVALTAB(3)
[F:WABB]IDENT3 = [L]_KEYVALTAB(4)
Read [WABB] =
If !fstat
 [L]_BLB = [F:WABB]BLOB
Endif
LogicClose File [WABB]
Return

$READ_EXI_AUSPIC
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File ABLOB [WABB]
Else
Local File =this.ACTX.AFOLDER+".ABLOB" [WABB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WABB]CODBLB = "AUSPIC"
[F:WABB]IDENT1 = this.USR
[F:WABB]IDENT2 = ""
[F:WABB]IDENT3 = ""
Look [WABB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WABB]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "ADP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"ADP",this)
 When "BID"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BID",this)
 When "BPA"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPA",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "ADP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"ADP","C_ADOPARAUS",this)
 When "BID"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BID","C_BID",this)
 When "BPA"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPA","C_BPADDRESS",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "ADP"
  [L]_ALINE = 0
 When "BID"
  [L]_ALINE = 0
 When "BPA"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "ADP"
  [L]_ALINE = 1
 When "BID"
  [L]_ALINE = 1
 When "BPA"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "USR"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



