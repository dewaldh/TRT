#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan-Sales orders
# Supervisor
## CRUD-CLASSE ## CCMPLASOD
# 2018-08-27 13:13:32 591


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPSOD [CCMSOD_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMPLASOD") From ASYRCOM : Endif
Local Instance CCMPLASOD Using R_CCMPLASOD

If !SILENCE : Call TRACE("3 --> New Instance R_CCMPLASOD") From ASYRCOM : Endif
CCMPLASOD = NewInstance R_CCMPLASOD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMSOD_]CCMSOD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPSOD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLASOD.AREAD([CCMSOD_]CRID,[CCMSOD_]LINENO))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMPLASOD.CCMSOD.CRID ="-num$(CCMPLASOD.CCMSOD.CRID)) From ASYRCOM
 Call TRACE("CCMPLASOD.CCMSOD.LINENO ="-num$(CCMPLASOD.CCMSOD.LINENO)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMPLASOD.CCMSOD.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMPLASOD.CCMSOD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMSOD_]
FreeGroup CCMPLASOD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMPLASOD,ACLE,ASTATUS,_ETAG)
Variable Instance CCMPLASOD Using R_CCMPLASOD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File CCMIMPSOD [CCMSOD]
Default File [F:CCMSOD]
Read [F:CCMSOD]CCMSOD0 = [L]_CRID;[L]_LINENO
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMSOD]UPDTICK)>0
 [L]_ETAG = num$([F:CCMSOD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMPLASOD,ACLE,ASTATUS)
Variable Instance CCMPLASOD Using R_CCMPLASOD
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLASOD.AREAD([L]_CRID,[L]_LINENO))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMPLASOD,_CRID,_LINENO,ASTATUS)
Variable Instance CCMPLASOD Using R_CCMPLASOD
Value Char _CRID
Value Shortint _LINENO
Variable Integer ASTATUS

If CCMPLASOD = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLASOD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMPLASOD.APARENT=null
 [L]A_I = CCMPLASOD.freeSnapshot
 CCMPLASOD.snapshotEnabled = 0
 CCMPLASOD.setAccessorEnabled = 0
Endif

If fmet CCMPLASOD.ACTX.AGETAFCRIGHT(CCMPLASOD,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMSOD]
Read [F:CCMSOD]CCMSOD0 = [L]_CRID;[L]_LINENO
If fstat
[L]A_ERROR = [L]_CRID+"~"+num$([L]_LINENO)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMPLASOD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMPLASOD.ACTX.AGETAFCRIGHTR(CCMPLASOD,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMPLASOD.ACTX.ASTACRITROLE(CCMPLASOD,[L]_CRID+"~"+num$([L]_LINENO)
& ,"CCM","CCMSOD",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLASOD.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMPLASOD.CCMSOD.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLASOD.CCMSOD.AREAD([L]_CRID,[L]_LINENO))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLASOD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMPLASOD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLASOD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMPLASOD.APARENT=null
 CCMPLASOD.snapshotEnabled = 1
 CCMPLASOD.setAccessorEnabled = 1
Endif
LogicClose File [CCMSOD]
End



