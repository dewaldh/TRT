#<AdxTL>@(#)0.0.0.0 $Revision$Class Company
# Supervisor
## CRUD-CLASSE ## COMPANY
# 2018-08-27 12:29:58 150


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(COMPANY,ASTATUS)
Variable Instance COMPANY Using C_COMPANY
Variable Integer ASTATUS

If COMPANY = null : End : Endif

Gosub _AVARIABLES From WMC00COMPANY

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_COMPANY

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(COMPANY,ASTATUS)
Variable Instance COMPANY Using C_COMPANY
Variable Integer ASTATUS

If COMPANY = null : End : Endif

Gosub AVARIABLES From WMC00COMPANY
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_COMPANY
Else
 Gosub AINSERT_COMPANY
Endif

Gosub _AINSERT_AFTER
[L]A_I = COMPANY.freeSnapshot
COMPANY.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet COMPANY._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet COMPANY._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet COMPANY._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If COMPANY.ASTALIN = [V]CST_ANEWDEL : Return : Endif
COMPANY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(COMPANY.BPA) : # BPADDRESS -- 2
 If COMPANY.BPA(A_N2) <> null
& and !find(COMPANY.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(COMPANY.BID) : # BID -- 3
 If COMPANY.BID(A_N2) <> null
& and !find(COMPANY.BID(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(COMPANY.BPA) : # BPADDRESS -- 2
 If COMPANY.BPA(A_N2) <> null
& and !find(COMPANY.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(COMPANY.BID) : # BID -- 3
 If COMPANY.BID(A_N2) <> null
& and !find(COMPANY.BID(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_COMPANY
Trbegin [F:CPY]
 Gosub AINSERT_COMPANY
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_COMPANY
Raz [F:CPY]
[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( COMPANY.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( COMPANY.ASTALIN,[V]CST_AUPD) & 
& fmet COMPANY.AGETATTRIBUTE("LOGO","$isLoaded")="true")
[L]ASTATUS = func WMC00COMPANY._MAJSQL_COMPANY_LOGO(COMPANY,COMPANY.LOGO)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00COMPANY._MAJSQL_COMPANY(COMPANY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
For A_N2=1 To maxtab(COMPANY.BPA)
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(COMPANY.BID)
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If COMPANY.snapshotEnabled=1
 [L]A_RETIK = COMPANY.revertUpdTick
Endif
[L]ASTATUS = max(fmet COMPANY.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(COMPANY.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 COMPANY.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(COMPANY.BPA)
 If COMPANY.BPA(A_N2) <> null
  [L]ASTATUS2 = fmet COMPANY.BPA(A_N2)._AINSERT_AFTER
  If COMPANY.BPA(A_N2).ASTALIN=[V]CST_ADEL or COMPANY.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance COMPANY.BPA(A_N2)
   COMPANY.BPA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(COMPANY.BID)
 If COMPANY.BID(A_N2) <> null
  [L]ASTATUS2 = fmet COMPANY.BID(A_N2)._AINSERT_AFTER
  If COMPANY.BID(A_N2).ASTALIN=[V]CST_ADEL or COMPANY.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance COMPANY.BID(A_N2)
   COMPANY.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



