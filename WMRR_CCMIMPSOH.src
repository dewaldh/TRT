#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Sales orders
# Supervisor
## CRUD-CLASSE ## CCMIMPSOH
# 2018-08-27 13:12:12 887


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPSOH [CCMSOH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMIMPSOH") From ASYRCOM : Endif
Local Instance CCMIMPSOH Using R_CCMIMPSOH

If !SILENCE : Call TRACE("3 --> New Instance R_CCMIMPSOH") From ASYRCOM : Endif
CCMIMPSOH = NewInstance R_CCMIMPSOH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMSOH_]CCMSOH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPSOH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.AREAD([CCMSOH_]CRID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMIMPSOH.CCMSOH.CRID ="-num$(CCMIMPSOH.CCMSOH.CRID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMIMPSOH.CCMSOH.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMIMPSOH.CCMSOH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMSOH_]
FreeGroup CCMIMPSOH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMIMPSOH,ACLE,ASTATUS,_ETAG)
Variable Instance CCMIMPSOH Using R_CCMIMPSOH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File CCMIMPSOH [CCMSOH]
Default File [F:CCMSOH]
Read [F:CCMSOH]CCMSOH0 = [L]_CRID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMSOH]UPDTICK)>0
 [L]_ETAG = num$([F:CCMSOH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMIMPSOH,ACLE,ASTATUS)
Variable Instance CCMIMPSOH Using R_CCMIMPSOH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.AREAD([L]_CRID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMIMPSOH,_CRID,ASTATUS)
Variable Instance CCMIMPSOH Using R_CCMIMPSOH
Value Char _CRID
Variable Integer ASTATUS

If CCMIMPSOH = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPSOH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMIMPSOH.APARENT=null
 [L]A_I = CCMIMPSOH.freeSnapshot
 CCMIMPSOH.snapshotEnabled = 0
 CCMIMPSOH.setAccessorEnabled = 0
Endif

If fmet CCMIMPSOH.ACTX.AGETAFCRIGHT(CCMIMPSOH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMSOH]
Read [F:CCMSOH]CCMSOH0 = [L]_CRID
If fstat
[L]A_ERROR = [L]_CRID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMIMPSOH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMIMPSOH.ACTX.AGETAFCRIGHTR(CCMIMPSOH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMIMPSOH.ACTX.ASTACRITROLE(CCMIMPSOH,[L]_CRID
& ,"CCM","CCMSOH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMIMPSOH.CCMSOH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.CCMSOH.AREAD([L]_CRID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMIMPSOH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMIMPSOH.APARENT=null
 CCMIMPSOH.snapshotEnabled = 1
 CCMIMPSOH.setAccessorEnabled = 1
Endif
LogicClose File [CCMSOH]
End



