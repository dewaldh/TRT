#<AdxTL>@(#)0.0.0.0 $Revision$Class Product-site totals
# Supervisor
## CRUD-CLASSE ## ITMMVT
# 2018-08-27 12:35:42 958


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ITMMVT [ITV_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ITMMVT") From ASYRCOM : Endif
Local Instance ITMMVT Using C_ITMMVT

If !SILENCE : Call TRACE("3 --> New Instance C_ITMMVT") From ASYRCOM : Endif
ITMMVT = NewInstance C_ITMMVT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ITV_]ITV0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ITMMVT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.AREAD([ITV_]ITMREF,[ITV_]STOFCY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ITMMVT.ITMREF ="-num$(ITMMVT.ITMREF)) From ASYRCOM
 Call TRACE("ITMMVT.STOFCY ="-num$(ITMMVT.STOFCY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ITMMVT.AKEYS)
  Call TRACE("-"-num$(I)-":"-ITMMVT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ITV_]
FreeGroup ITMMVT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ITMMVT,ACLE,ASTATUS,_ETAG)
Variable Instance ITMMVT Using C_ITMMVT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _ITMREF(20)
Local Char _STOFCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STOFCY = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File ITMMVT [ITV]
Default File [F:ITV]
Read [F:ITV]ITV0 = [L]_ITMREF;[L]_STOFCY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ITV]UPDTICK)>0
 [L]_ETAG = num$([F:ITV]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ITMMVT,ACLE,ASTATUS)
Variable Instance ITMMVT Using C_ITMMVT
Value Char ACLE
Variable Integer ASTATUS
Local Char _ITMREF(20)
Local Char _STOFCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STOFCY = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.AREAD([L]_ITMREF,[L]_STOFCY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ITMMVT,_ITMREF,_STOFCY,ASTATUS)
Variable Instance ITMMVT Using C_ITMMVT
Value Char _ITMREF
Value Char _STOFCY
Variable Integer ASTATUS

If ITMMVT = null : End : Endif

Gosub AVARIABLES From WMC00ITMMVT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ITMMVT.APARENT=null
 [L]A_I = ITMMVT.freeSnapshot
 ITMMVT.snapshotEnabled = 0
 ITMMVT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ITMMVT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ITMMVT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ITMMVT.APARENT=null
 ITMMVT.snapshotEnabled = 1
 ITMMVT.setAccessorEnabled = 1
Endif
LogicClose File [ITV]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ITMMVT._ACTION_PARAM("AREAD_BEFORE",[L]_ITMREF,[L]_STOFCY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:ITV]
Read [F:ITV]ITV0 = [L]_ITMREF;[L]_STOFCY
If fstat
[L]A_ERROR = [L]_ITMREF+"~"+[L]_STOFCY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ITMMVT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:ITV]AUUID)>0 & [F:ITV]AUUID=NullUuid
 [F:ITV]AUUID = getUuid
Endif
SetInstance ITMMVT With [F:ITV]
ITMMVT.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:ITV]ALABAVC([L]A_I-1)<>0 or [F:ITV]ALABCST([L]A_I-1)<>0 or [F:ITV]LLABCST([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  ITMMVT.CALABAVC(A_NEWCOL) = NewInstance  C_ITMMVT_CALABAVC(ITMMVT.ACTX,NullUuid,[L]A_I,ITMMVT,"CALABAVC") AllocGroup ITMMVT
  ITMMVT.CALABAVC(A_NEWCOL).ALABAVC = [F:ITV]ALABAVC([L]A_I-1)
  ITMMVT.CALABAVC(A_NEWCOL).ALABCST = [F:ITV]ALABCST([L]A_I-1)
  ITMMVT.CALABAVC(A_NEWCOL).LLABCST = [F:ITV]LLABCST([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.CALABAVC(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:ITV]AMACAVC([L]A_I-1)<>0 or [F:ITV]AMACCST([L]A_I-1)<>0 or [F:ITV]LMACCST([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  ITMMVT.CAMACAVC(A_NEWCOL) = NewInstance  C_ITMMVT_CAMACAVC(ITMMVT.ACTX,NullUuid,[L]A_I,ITMMVT,"CAMACAVC") AllocGroup ITMMVT
  ITMMVT.CAMACAVC(A_NEWCOL).AMACAVC = [F:ITV]AMACAVC([L]A_I-1)
  ITMMVT.CAMACAVC(A_NEWCOL).AMACCST = [F:ITV]AMACCST([L]A_I-1)
  ITMMVT.CAMACAVC(A_NEWCOL).LMACCST = [F:ITV]LMACCST([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.CAMACAVC(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 6
 If ([F:ITV]AMATAVC([L]A_I-1)<>0 or [F:ITV]AMATCST([L]A_I-1)<>0 or [F:ITV]LMATCST([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  ITMMVT.CAMATAVC(A_NEWCOL) = NewInstance  C_ITMMVT_CAMATAVC(ITMMVT.ACTX,NullUuid,[L]A_I,ITMMVT,"CAMATAVC") AllocGroup ITMMVT
  ITMMVT.CAMATAVC(A_NEWCOL).AMATAVC = [F:ITV]AMATAVC([L]A_I-1)
  ITMMVT.CAMATAVC(A_NEWCOL).AMATCST = [F:ITV]AMATCST([L]A_I-1)
  ITMMVT.CAMATAVC(A_NEWCOL).LMATCST = [F:ITV]LMATCST([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.CAMATAVC(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 12
 If ([F:ITV]CUNDAT([L]A_I-1)<>[00/00/0000] or [F:ITV]CUNQTYCLC([L]A_I-1)<>0 or [F:ITV]CUNQTYNEW([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  ITMMVT.CCUNDAT(A_NEWCOL) = NewInstance  C_ITMMVT_CCUNDAT(ITMMVT.ACTX,NullUuid,[L]A_I,ITMMVT,"CCUNDAT") AllocGroup ITMMVT
  ITMMVT.CCUNDAT(A_NEWCOL).CUNDAT = [F:ITV]CUNDAT([L]A_I-1)
  ITMMVT.CCUNDAT(A_NEWCOL).CUNQTYCLC = [F:ITV]CUNQTYCLC([L]A_I-1)
  ITMMVT.CCUNDAT(A_NEWCOL).CUNQTYNEW = [F:ITV]CUNQTYNEW([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.CCUNDAT(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet ITMMVT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



