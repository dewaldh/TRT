#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################
# FILE NAME   : SPEYBBVAL
# DESCRIPTION : Business Batch Validation
######################################################################################################
# DATE        : 11-10-2018
# AUTHOR      : Dewald Henning
# COMPANY     : Leverage Technologies
#-----------------------------------------------------------------------------------------------------
# Epics Code  : DFCX1-27
#-----------------------------------------------------------------------------------------------------
######################################################################################################

$ACTION
  Case ACTION
    When "YBBPST"  :   Gosub POST
    When Default
  Endcase
Return

$POST
Local Char MESSAGE(255) : MESSAGE = "Post business batch "-[M:YBB0]YBATNBR-" to journals?"
  Call OUINON(MESSAGE,OK)  From GESECRAN
  Case OK
     When 2: Goto PST_BUSBAT  #yes
  Endcase

Return

$PST_BUSBAT
#Open Tables
If clalev([F:YBBS])= 0  : Local File YBBSIM     [YBBS] : Endif
If clalev([F:YBBD])= 0  : Local File YBBDETAIL  [YBBD] : Endif

  #Set Batch Number
  Local Char YBATNBR(50) : [L]YBATNBR = [M:YBB0]YBATNBR
  Local Char NAME(255)   : [L]NAME =  [L]YBATNBR+"_"+format$("D:YYMMDDhhmmss",date$)
  Local Char TRACE(255)
  Local Char XMSG(250)(99)
  Local Char XMOT(250)
  Local Integer XCONTA : XCONTA = 0
  Local Char YCUR(3) : [L]YCUR = "AUD"

  #Start Trace
  Call OUVRE_TRACE("Business Batch Post") From LECFIC
  Call ECR_TRACE("Start Date: " + num$(datetime$),0) From GESECRAN

  NAME = "BBGL" + format$("D:YYMMDDhhmmss",date$)

  #OPEN File To Write GL DATA For IMPORTING
  Openo filpath('tmp',NAME,'DAT'),-1 Using [ZGL]

  Iomode adxium 50 Using [ZGL]
  Iomode adxirs chr$(13)+ chr$(10) Using [ZGL]
  Iomode adxifs ',' Using [ZGL]

  #--- Write File Start ---#

  Local Integer YPRE_TRANSNBR
  Local Char YSNS(3)
  Local Char YLEDTYP(3) : [L]YLEDTYP = "1"
  Local Char YDACDIA(5) : [L]YDACDIA = "STDCO"
  Local Decimal YAMTCUR
  Local Char YBATDAT(10) : [L]YBATDAT = num$(format$("D:YYYYMMDD", [M:YBB0]YBATDAT))
  Local Char YSTA(1) : YSTA = "1" #Temp Status ALWAYS
  Local Char YCAT(1)
  If [M:YBB0]YBATCAT = 1 : YCAT = "1" : Endif #Actual
  If [M:YBB0]YBATCAT = 2 : YCAT = "5" : Endif #Template

  #For [F:YBBS] Where [F:YBBS]YBATNBR = [L]YBATNBR

  #Next

  #--- Write File Start ---#
  Local Integer DI, SI
  Local Char QUERY(255)(0..)

  QUERY(0) =  "SELECT YBATNBR_0, YENTTYP_0, YJOU_0, YTRANSNBR_0, YDETDES_0, YFCY_0, YCOA_0, YACC_0, YLIGDES_0, YCTRL_0, YBP_0, YDEB_0, YCDT_0, YTAX_0, YREF_0, YPJT_0,"
  QUERY(1) -= "YDIE0_0, YCCE0_0,YDIE1_0, YCCE1_0,YDIE2_0, YCCE2_0,YDIE3_0, YCCE3_0,YDIE4_0, YCCE4_0,YGSTAMT_0, YAMTTAX_0, YLIG_0, YBAN_0"
  QUERY(2) -= "From YBBSIM"
  QUERY(3) -= "Where YBATNBR_0 = '"+[L]YBATNBR+"'"
  QUERY(4) -=
& "GROUP By YFCY_0, YBATNBR_0, YENTTYP_0, YJOU_0, YTRANSNBR_0, YDETDES_0, YCOA_0, YACC_0, YLIGDES_0, YCTRL_0, YBP_0, YDEB_0, YCDT_0, YTAX_0, YREF_0, YPJT_0,YDIE0_0, YCCE0_0,YDIE1_0, YCCE1_0,"
  QUERY(5) -= "YDIE2_0, YCCE2_0,YDIE3_0, YCCE3_0,YDIE4_0, YCCE4_0,YGSTAMT_0, YAMTTAX_0, YLIG_0, YBAN_0"
  QUERY(6) -= "Order By YTRANSNBR_0 ASC"

  For (Char YBATNBR, Char YENTTYP, Char YJOU, Integer YTRANSNBR, Char YDETDES, Char YFCY,
&     Char YCOA, Char YACC, Char YLIGDES, Char YCTRL, Char YBP, Decimal YDEB, Decimal YCDT,
&     Char YTAX, Char YREF, Char YPJT, Char YDIE0, Char YCCE0,Char YDIE1, Char YCCE1,
&     Char YDIE2, Char YCCE2, Char YDIE3, Char YCCE3, Char YDIE4, Char YCCE4,
&     Decimal YGSTAMT, Decimal YAMTTAX, Integer YLIG, Char YBAN)
&     From "5" Sql QUERY As [YGLD]
    SI += 1
    If YPRE_TRANSNBR <> [F:YGLD]YTRANSNBR
      #Create Header
      Local Char YNAM(4) : YNAM = format$("D:mmss",date$)
      Call CREATE_GL_HEADER([F:YGLD]YFCY, [F:YGLD]YENTTYP, [F:YGLD]YBATNBR+num$(SI)+"_"+YNAM, [M:YBB0]YBATDES, YBATDAT, [F:YGLD]YJOU, YCAT, YSTA, "AUD", YDACDIA)
      YPRE_TRANSNBR = [F:YGLD]YTRANSNBR
      [L]DI = 0
    Endif

    If [F:YGLD]YDEB = 0 : [L]YAMTCUR = [F:YGLD]YCDT : [L]YSNS = "1"   : Endif
    If [F:YGLD]YCDT = 0 : [L]YAMTCUR = [F:YGLD]YDEB : [L]YSNS = "-1"  : Endif
    [L]DI += 1
    Call CREATE_GL_DETAIL(num$([L]DI), num$([L]DI), [F:YGLD]YFCY, [L]YLEDTYP, [F:YGLD]YCTRL,[F:YGLD]YACC,
&                       [F:YGLD]YBP, num$([L]YAMTCUR), [L]YSNS, [F:YGLD]YLIGDES, [F:YGLD]YREF, [F:YGLD]YTAX,
&                       [F:YGLD]YPJT)

    #Check for Analytical Lines
    If [F:YGLD]YCCE0 <> "" or [F:YGLD]YCCE1 <> "" or [F:YGLD]YCCE2 <> ""  or [F:YGLD]YCCE3 <> ""  or [F:YGLD]YCCE4 <> "" Then
      Local Char YQTY(1) : YQTY = "1"
      [L]DI += 1
      Call CREATE_GL_ADETAIL(num$([L]DI), [F:YGLD]DIE0, [F:YGLD]CCE0, [F:YGLD]DIE1, [F:YGLD]CCE1, [F:YGLD]DIE2, [F:YGLD]CCE2, [F:YGLD]DIE3, [F:YGLD]CCE3, [F:YGLD]DIE4, [F:YGLD]CCE4, YQTY, num$([L]
& YAMTCUR))
    Endif

  #--- Write File End ---#
  Next

  #Close file before import
  Openo  Using [ZGL]

  Gosub OUVRE From GIMPOBJ

  Call IMPORTSIL("YGASTEMP", filpath('tmp',NAME,'DAT')) From GIMPOBJ
  #Log messages and error handling
  #https://sagecity.na.sage.com/support_communities/sage_erp_x3/f/sage-x3-general-discussion-forum/104136/importsil---capture-log-messages

  Call ECR_TRACE("End Date: " + num$(datetime$),0) From GESECRAN

  TRACE = GTRACE
  Raz XMSG

  Call FERME_TRACE() From LECFIC
  Call LEC_TRACE From LECFIC

  If filinfo(filpath("TRA",TRACE,"tra",0),7) > 0

    Openi filpath("TRA",TRACE,"tra",0) Using [XLL]

    Repeat
     Rdseq XMOT Using [XLL]

      If seg$(XMOT ,1,1) = "<"
        XMSG(XCONTA) = XMOT + chr$(10)
        XCONTA += 1
      Endif

    Until fstat <> 0
    Openi Using [XLL]

  Endif

#Close Tables
If clalev([F:YBBS])= 0  : Close Local File [F:YBBS] : Endif

Return


#------------------
# GL Header
#------------------
Subprog CREATE_GL_HEADER(FCY,TYP,NUM,DESVCR,ACCDAT,JOU,CAT,STA,CUR,DACDIA)
Value Char FCY
Value Char TYP
Value Char NUM
Value Char DESVCR
Value Char ACCDAT
Value Char JOU
Value Char CAT
Value Char STA
Value Char CUR
Value Char DACDIA

  Wrseq 'G,'+
&       FCY + ','+
&       TYP + ','+
&       NUM + ','+
&       DESVCR + ','+
&       ACCDAT + ','+
&       JOU + ','+
&       CAT + ','+
&       STA + ','+
&       CUR + ','+
&       DACDIA
& Using [ZGL]

End

#------------------
# GL Detail
#------------------
Subprog CREATE_GL_DETAIL(LIN,IDTLIN,FCYLIN,LEDTYP,SAC,ACC,BPR,AMTCUR,SNS,DES,FREREF,TAX,PJTLIN)

Value Char   LIN
Value Char   IDTLIN
Value Char   FCYLIN
Value Char   LEDTYP
Value Char   SAC
Value Char   ACC
Value Char   BPR
Value Char   AMTCUR
Value Char   SNS
Value Char   DES
Value Char   FREREF
Value Char   TAX
Value Char   PJTLIN

  Wrseq 'D,'+
&       LIN + ','+
&       IDTLIN + ','+
&       FCYLIN + ','+
&       LEDTYP + ','+
&       SAC + ','+
&       ACC + ','+
&       BPR + ','+
&       AMTCUR + ','+
&       SNS + ','+
&       DES + ','+
&       FREREF + ','+
&       TAX + ','+
&       PJTLIN
& Using [ZGL]

End

#------------------
# GL Analytical
#------------------
Subprog CREATE_GL_ADETAIL(ANALIN,DIE0,CCE0,DIE1,CCE1,DIE2,CCE2,DIE3,CCE3,DIE4,CCE4,QTY,AMTCUR)

#Dimentions
Value Char     ANALIN
Value Char     DIE0
Value Char     CCE0
Value Char     DIE1
Value Char     CCE1
Value Char     DIE2
Value Char     CCE2
Value Char     DIE3
Value Char     CCE3
Value Char     DIE4
Value Char     CCE4
Value Char     QTY
Value Char     AMTCUR

  Wrseq 'A,'+
&       ANALIN + ','+
&       DIE0 + ','+
&       CCE0 + ','+
&       DIE1 + ','+
&       CCE1 + ','+
&       DIE2 + ','+
&       CCE2 + ','+
&       DIE3 + ','+
&       CCE3 + ','+
&       DIE4 + ','+
&       CCE4 + ','+
&       QTY + ','+
&       AMTCUR
& Using [ZGL]


End

