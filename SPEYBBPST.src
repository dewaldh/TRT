#<AdxTL>@(#)0.0.0.0 $Revision$ 
######################################################################################################
# FILE NAME   : SPEYBBVAL
# DESCRIPTION : Business Batch Post to Journals
######################################################################################################
# DATE        : 11-29-2018
# AUTHOR      : Dewald Henning
# COMPANY     : Leverage Technologies
# VERSION     : 2.3
#-----------------------------------------------------------------------------------------------------
# Epics Code  : DFCX1-27
#-----------------------------------------------------------------------------------------------------
######################################################################################################

$ACTION
  Case ACTION
    When "YBBPST"  :   Gosub POST
    When Default
  Endcase
Return

$POST
If clalev([F:YBBH])= 0  : Local File YBBHEADER [YBBH] : Endif
Read [F:YBBH]YBBH0 = [M:YBB0]YBATNBR

Local Char MESSAGE(255) : MESSAGE = func AFNC.MES1(mess(44,6259,1),[M:YBB0]YBATNBR) #"Post business batch "-[M:YBB0]YBATNBR-" to journals?"
If [F:YBBH]YBATSTA = 2
  Call OUINON(MESSAGE,OK)  From GESECRAN
  Case OK
      When 2: Gosub PRE_SIMULATION_VALIDATIONS
        #Obsolete record error fix
        Gosub RELIT From GOBJSUB
  Endcase
Endif


Return

#DEW : DFCX1-142 - 5/12/2018 - START
#--------------------------------------
# Validate Simulation before Post
#--------------------------------------
$PRE_SIMULATION_VALIDATIONS

Local Char YBATNBR(50) : [L]YBATNBR = [M:YBB0]YBATNBR
Local Integer I : I = 0
Local Char QRY(250)

#Call Validations
Call VAL_BUSBAT(YBATNBR) From SPEYBBVAL

#Check if Errors exist
QRY = "SELECT COUNT(YLIG_0) FROM YBBERR WHERE YBATNBR_0 = '"+[L]YBATNBR+"'"
For (Integer YCNT) From "5" Sql QRY As [YLNK]
  I = [F:YLNK]YCNT
Next

If I = 0 Then
  Gosub $PST_BUSBAT
Else
  GMESSAGE =  mess(43,6259,1)
Endif

Return
#DEW : DFCX1-142 - 5/12/2018 - END

#--------------------------------------
# Post Business Batch
#--------------------------------------
$PST_BUSBAT
#Open Tables
If clalev([F:YBBS])= 0  : Local File YBBSIM     [YBBS] : Endif
If clalev([F:YBPS]) = 0 : Local File YBBPSIM    [YBPS]  : Endif
If clalev([F:YJOU]) = 0 : Local File GJOURNAL   [YJOU]  : Endif

  #Set Batch Number
  Local Char YBATNBR(50) : [L]YBATNBR = [M:YBB0]YBATNBR
  Local Char NAME(255)   : [L]NAME =  [L]YBATNBR+"_"+format$("D:YYMMDDhhmmss",date$)
  Local Char TRACE(255)
  Local Char XMSG(250)(99)
  Local Char XMOT(250)
  Local Integer XCONTA : XCONTA = 0
  Local Char YCUR(3) : [L]YCUR = "AUD"

  #Delete post records
  Delete [F:YBPS]YBPS0 = YBATNBR

  #Start Trace
  Call OUVRE_TRACE("Business Batch Post") From LECFIC
  Call ECR_TRACE("Start Date: " + num$(datetime$),0) From GESECRAN

  #NAME = "BBGL" + format$("D:YYMMDDhhmmss",date$)

  #OPEN File To Write GL DATA For IMPORTING
  Openo filpath('tmp',NAME,'DAT'),-1 Using [ZGL]

  Iomode adxium 50 Using [ZGL]
  Iomode adxirs chr$(13)+ chr$(10) Using [ZGL]
  Iomode adxifs ',' Using [ZGL]

  #--- Write File Start ---#

  Local Integer YPRE_TRANSNBR, YIECRE
  Local Char YPRE_IEFCY(10)
  Local Char YSNS(3)
  Local Char YLEDTYP(3) : [L]YLEDTYP = "1"
  Local Char YDACDIA(5) : [L]YDACDIA = "STDCO"
  Local Decimal YAMTCUR
  Local Char YBATDAT(10) : [L]YBATDAT = num$(format$("D:DDMMYYYY", [M:YBB0]YBATDAT))
  Local Char YCURDAT(10) : [L]YCURDAT = num$(format$("D:DDMMYYYY", date$))
  Local Char YSTA(1) : YSTA = "1" #Temp Status ALWAYS
  Local Char YCAT(1)
  If [M:YBB0]YBATCAT = 1 : YCAT = "1" : Endif #Actual
  If [M:YBB0]YBATCAT = 2 : YCAT = "5" : Endif #Template

  #--- Write File Start ---#
  Local Integer DI, SI
  Local Char QUERY(255)(0..)

  QUERY(0) =  "SELECT YBATNBR_0, YENTTYP_0, YJOU_0, YTRANSNBR_0, YDETDES_0, YFCY_0, YCOA_0, YACC_0, YLIGDES_0, YCTRL_0, YBP_0, YDEB_0, YCDT_0, YTAX_0, YREF_0, YFREF_0, YPJT_0,"
  QUERY(1) -= "YDIE0_0, YCCE0_0,YDIE1_0, YCCE1_0,YDIE2_0, YCCE2_0,YDIE3_0, YCCE3_0,YDIE4_0, YCCE4_0,YGSTAMT_0, YAMTTAX_0, YLIG_0, YBAN_0, YFRMFCY_0, YTOFCY_0"
  QUERY(2) -= "From YBBSIM"
  QUERY(3) -= "Where YBATNBR_0 = '"+[L]YBATNBR+"'"
  QUERY(4) -=
& "GROUP By YFCY_0, YBATNBR_0, YENTTYP_0, YJOU_0, YTRANSNBR_0, YDETDES_0, YCOA_0, YACC_0, YLIGDES_0, YCTRL_0, YBP_0, YDEB_0, YCDT_0, YTAX_0, YREF_0, YFREF_0, YPJT_0,YDIE0_0, YCCE0_0,YDIE1_0, YCCE1_0,"
  QUERY(5) -= "YDIE2_0, YCCE2_0,YDIE3_0, YCCE3_0,YDIE4_0, YCCE4_0,YGSTAMT_0, YAMTTAX_0, YLIG_0, YBAN_0, YFRMFCY_0, YTOFCY_0"
  QUERY(6) -= "Order By YTRANSNBR_0 ASC"

  For (Char YBATNBR, Char YENTTYP, Char YJOU, Integer YTRANSNBR, Char YDETDES, Char YFCY,
&     Char YCOA, Char YACC, Char YLIGDES, Char YCTRL, Char YBP, Decimal YDEB, Decimal YCDT,
&     Char YTAX, Char YHEAREF, Char YREF, Char YPJT, Char YDIE0, Char YCCE0,Char YDIE1, Char YCCE1,
&     Char YDIE2, Char YCCE2, Char YDIE3, Char YCCE3, Char YDIE4, Char YCCE4,
&     Decimal YGSTAMT, Decimal YAMTTAX, Integer YLIG, Char YBAN, Char YFRMFCY, Char YTOFCY)
&     From "5" Sql QUERY As [YGLD]
    SI += 1
    #Get Batch Type from Journal -- We need this for the IE transaction type
    Read [F:YJOU]JOU0 = [F:YGLD]YJOU

      YIECRE = 0
      If [L]YPRE_IEFCY = "" : [L]YPRE_IEFCY = [F:YGLD]YFCY : YIECRE = 1 : Endif #Set First Readable Site for IE type
      If [L]YPRE_TRANSNBR = 0 : [L]YPRE_TRANSNBR = [F:YGLD]YTRANSNBR : Endif #Set First Transaction Number for IE type

      #1. Same Transaction Number, different site
      If [L]YPRE_IEFCY <> [F:YGLD]YFCY and [L]YPRE_TRANSNBR = [F:YGLD]YTRANSNBR
        YIECRE = 1
        [L]YPRE_IEFCY = [F:YGLD]YFCY
      #2. Same site, different transaction number
      Elsif [L]YPRE_IEFCY = [F:YGLD]YFCY and [L]YPRE_TRANSNBR <> [F:YGLD]YTRANSNBR
        YIECRE = 1
        [L]YPRE_TRANSNBR = [F:YGLD]YTRANSNBR
      #3. Different Site, different Transaction number
      Elsif [L]YPRE_IEFCY <> [F:YGLD]YFCY and [L]YPRE_TRANSNBR <> [F:YGLD]YTRANSNBR
        YIECRE = 1
        [L]YPRE_TRANSNBR = [F:YGLD]YTRANSNBR
        [L]YPRE_IEFCY = [F:YGLD]YFCY
      Endif

      #Validations for valid header passed
      If YIECRE <> 0
        #Get PJM Number per transaction
        Local Char PJTQRY(250)
        Local Char DISTPJT(30)
        DISTPJT = ""
        PJTQRY = "SELECT DISTINCT YPJT_0 FROM YBBSIM Where YBATNBR_0 = '"+[L]YBATNBR+"' AND YFCY_0 = '"+num$([F:YGLD]YFCY)+"'"

        For (Char YPJT) From "5" Sql PJTQRY As [YPJTQ]
          DISTPJT = [F:YPJTQ]YPJT
        Next
        #Create Header
        Local Char AUD(3) : AUD = "AUD"
        Call CREATE_GL_HEADER([F:YGLD]YFCY, [F:YGLD]YENTTYP,[F:YGLD]YBATNBR+"-"+num$([F:YGLD]YTRANSNBR)+"-"+[F:YGLD]YFCY, [M:YBB0]YBATDES,
&         YBATDAT, [F:YGLD]YJOU, YCAT, YSTA, AUD, YDACDIA,[L]YBATNBR, [F:YGLD]YHEAREF,[L]YCURDAT,[L]YCURDAT,[L]YCURDAT,[L]YBATDAT,DISTPJT)
        YPRE_TRANSNBR = [F:YGLD]YTRANSNBR
        [L]DI = 0
        #Insert Post records
        [F:YBPS]YBATNBRSRC = [L]YBATNBR
        [F:YBPS]YTYP = [F:YGLD]YENTTYP
        [F:YBPS]YNUM = [F:YGLD]YBATNBR+"-"+num$([F:YGLD]YTRANSNBR)+"-"+[F:YGLD]YFCY
        [F:YBPS]YDESVCR = [M:YBB0]YBATDES
        [F:YBPS]YSTA = "Processed"
        Write [F:YBPS]

      Endif

    If [F:YGLD]YDEB = 0 : [L]YAMTCUR = [F:YGLD]YCDT : [L]YSNS = "-1"   : Endif
    If [F:YGLD]YCDT = 0 : [L]YAMTCUR = [F:YGLD]YDEB : [L]YSNS = "1"  : Endif
    [L]DI += 1
    Call CREATE_GL_DETAIL(num$([L]DI), num$([L]DI), [F:YGLD]YFCY, [L]YLEDTYP, [F:YGLD]YCTRL,[F:YGLD]YACC,
&                       [F:YGLD]YBP, num$([L]YAMTCUR), [L]YSNS, [F:YGLD]YLIGDES, [F:YGLD]YREF, [F:YGLD]YTAX,
&                       [F:YGLD]YPJT,[F:YGLD]YFRMFCY, [F:YGLD]YTOFCY)
    #Check for Analytical Lines
    If [F:YGLD]YCCE0 <> "" or [F:YGLD]YCCE1 <> "" or [F:YGLD]YCCE2 <> ""  or [F:YGLD]YCCE3 <> ""  or [F:YGLD]YCCE4 <> "" Then
      Local Char YQTY(1) : YQTY = "1"
      [L]DI += 1
      Call CREATE_GL_ADETAIL(num$([L]DI), [F:YGLD]YDIE0, [F:YGLD]YCCE0, [F:YGLD]YDIE1, [F:YGLD]YCCE1,
&                            [F:YGLD]YDIE2, [F:YGLD]YCCE2, [F:YGLD]YDIE3, [F:YGLD]YCCE3, [F:YGLD]YDIE4,
&                            [F:YGLD]YCCE4, YQTY, num$([L]YAMTCUR))
    Endif
  #--- Write File End ---#
  Next

  #Close file before import
  Openo  Using [ZGL]

  Gosub OUVRE From GIMPOBJ

  #Call Import YGASTEMP
  Call IMPORTSIL("YGASIMP", filpath('tmp',NAME,'DAT')) From GIMPOBJ
  Call ECR_TRACE("End Date: " + num$(datetime$),0) From GESECRAN
  TRACE = GTRACE
  Raz XMSG

  Call FERME_TRACE() From LECFIC
  Call LEC_TRACE From LECFIC

  Local Integer ICR, INC

  If filinfo(filpath("TRA",TRACE,"tra",0),7) > 0

    Openi filpath("TRA",TRACE,"tra",0) Using [XLL]

    Repeat
     Rdseq XMOT Using [XLL]
      #Success
      If left$(XMOT,11)="Creation of"
        ICR += 1
        #Based on the Length of the Batch type when need to calculate the keyindex
        Local Char TEXT(255), TYP(5), KEYINDEX(30)
        Local Integer LENTYP, LENTXT
        LENTXT = len(XMOT)
        TYP = vireblc(seg$(XMOT, 12,17),3)
        LENTYP = 13 + len(TYP)
        KEYINDEX =  vireblc(seg$(XMOT, LENTYP,LENTXT),3)
        Read [F:YBPS]YBPS2 = KEYINDEX
        If fstat = 0 Then
          [F:YBPS]YSTA = "Posted"
          Rewrite [F:YBPS]
        Endif
      Endif
      #Errors
      If left$(XMOT,5)="<0001"
        INC += 1
        Read [F:YBPS]YBPS2 = seg$(XMOT, 19,36)
        If fstat = 0 Then
          [F:YBPS]YSTA = seg$(XMOT,60,200)
          Rewrite [F:YBPS]
        Endif
      Endif

    Until fstat <> 0
    Openi Using [XLL]

  Endif

  #Set Status to 'Post Errors' after modfication
  If clalev([F:YBBH0]) = 0 : Local File YBBHEADER [F:YBBH0] : Endif
  Read [F:YBBH0]YBBH0 = [M:YBB0]YBATNBR
  If INC > 0
    [F:YBBH0]YBATSTA = 5
  Else
    [F:YBBH0]YBATSTA = 4
  Endif
  If fstat = 0
    Rewrite [F:YBBH0]
    [M:YBB0]YBATSTA = [F:YBBH0]YBATSTA
    Affzo [M:YBB0]
  Endif
  If clalev([F:YBBH0]) = 0 : Close Local File [F:YBBH0] : Endif

  #Error and Status Updates
  Local Char SQRY(250)(0..)
  Local Integer YS, YC
  SQRY(0) = "select YNUM_0, YSTA_0, YTYP_0 from YBBPSIM where YBATNBRSRC_0 = '"+[M:YBB0]YBATNBR+"'"
   For (Char YNUM, Char YSTA, Char YTYP) From "5" Sql SQRY As [LSQL]
    YC += 1
    If [F:LSQL]YSTA = "Posted"
      YS += 1
    Endif
   Next
  #Number of Posted vs the total number
  If YC = YS Then
    If clalev([F:HAE]) = 0 : Local File GACCENTRY [F:HAE]  : Endif
    #Update Status - Approved by Richard Race-Lyaons
    Filter [F:YBPS] Where [F:YBPS]YBATNBRSRC = [M:YBB0]YBATNBR
    For [F:YBPS]
      Read [F:HAE]HAE0 = [F:YBPS]YTYP;[F:YBPS]YNUM
      [F:HAE]STA = 2
      Rewrite [F:HAE]
    Next
    Filter [F:YBPS]

    If clalev([F:HAE]) = 0 : Close Local File [F:HAE]  : Endif
  Endif

#Close Tables
If clalev([F:YJOU]) = 0 : Close Local File [F:YJOU]  : Endif
If clalev([F:YBBS]) = 0 : Close Local File [F:YBBS]  : Endif
If clalev([F:YBPS]) = 0 : Close Local File [F:YBPS] : Endif

Return

#------------------
# GL Header
#------------------
Subprog CREATE_GL_HEADER(FCY,TYP,NUM,DESVCR,ACCDAT,JOU,CAT,STA,CUR,DACDIA,BPRVCR,REF, ENTDAT, DUDDAT, VALDAT, BPRDATVCR,PJT)
Value Char FCY
Value Char TYP
Value Char NUM
Value Char DESVCR
Value Char ACCDAT
Value Char JOU
Value Char CAT
Value Char STA
Value Char CUR
Value Char DACDIA
Value Char BPRVCR
Value Char REF
Value Char ENTDAT
Value Char DUDDAT
Value Char VALDAT
Value Char BPRDATVCR
Value Char PJT

Local Char ORIGIN(1) : ORIGIN = "22"  #-- Origin 22 = AP/AR IE

  Wrseq 'G|'+
&       FCY + '|'+
&       TYP + '|'+
&       NUM + '|'+
&       DESVCR + '|'+
&       ACCDAT + '|'+
&       JOU + '|'+
&       CAT + '|'+
&       STA + '|'+
&       CUR + '|'+
&       DACDIA + '|'+
&       ORIGIN + '|'+
&       BPRVCR + '|'+
&       REF + '|' +
&       ENTDAT + '|' +
&       DUDDAT + '|' +
&       VALDAT + '|' +
&       BPRDATVCR + '|' +
&       PJT
& Using [ZGL]

End

#------------------
# GL Detail
#------------------
Subprog CREATE_GL_DETAIL(LIN,IDTLIN,FCYLIN,LEDTYP,SAC,ACC,BPR,AMTCUR,SNS,DES,FREREF,TAX,PJTLIN,YFRMFCY,YTOFCY)

Value Char   LIN
Value Char   IDTLIN
Value Char   FCYLIN
Value Char   LEDTYP
Value Char   SAC
Value Char   ACC
Value Char   BPR
Value Char   AMTCUR
Value Char   SNS
Value Char   DES
Value Char   FREREF
Value Char   TAX
Value Char   PJTLIN
Value Char   YFRMFCY
Value Char   YTOFCY

  Wrseq 'D|'+
&       LIN + '|'+
&       IDTLIN + '|'+
&       FCYLIN + '|'+
&       LEDTYP + '|'+
&       SAC + '|'+
&       ACC + '|'+
&       BPR + '|'+
&       AMTCUR + '|'+
&       SNS + '|'+
&       DES + '|'+
&       FREREF + '|'+
&       TAX + '|'+
&       PJTLIN + '|'+
&       YFRMFCY + '|'+
&       YTOFCY
& Using [ZGL]

End

#------------------
# GL Analytical
#------------------
Subprog CREATE_GL_ADETAIL(ANALIN,DIE0,CCE0,DIE1,CCE1,DIE2,CCE2,DIE3,CCE3,DIE4,CCE4,QTY,AMTCUR)

#Dimentions
Value Char     ANALIN
Value Char     DIE0
Value Char     CCE0
Value Char     DIE1
Value Char     CCE1
Value Char     DIE2
Value Char     CCE2
Value Char     DIE3
Value Char     CCE3
Value Char     DIE4
Value Char     CCE4
Value Char     QTY
Value Char     AMTCUR

  Wrseq 'A|'+
&       ANALIN + '|'+
&       DIE0 + '|'+
&       CCE0 + '|'+
&       DIE1 + '|'+
&       CCE1 + '|'+
&       DIE2 + '|'+
&       CCE2 + '|'+
&       DIE3 + '|'+
&       CCE3 + '|'+
&       DIE4 + '|'+
&       CCE4 + '|'+
&       QTY + '|'+
&       AMTCUR
& Using [ZGL]


End

