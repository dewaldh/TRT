#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################
# FILE NAME   : SPEYBBVAL
# DESCRIPTION : Business Batch Validation
######################################################################################################
# DATE        : 11-10-2018
# AUTHOR      : Dewald Henning
# COMPANY     : Leverage Technologies
#-----------------------------------------------------------------------------------------------------
# Epics Code  : DFCX1-27
#-----------------------------------------------------------------------------------------------------
######################################################################################################

$ACTION
  Case ACTION
    When "YBBPST"  :   Gosub POST
    When Default
  Endcase
Return

$POST
Local Char MESSAGE(255) : MESSAGE = "Post business batch "-[M:YBB0]YBATNBR-" to journals?"
  Call OUINON(MESSAGE,OK)  From GESECRAN
  Case OK
     When 2: Goto PST_BUSBAT  #yes
  Endcase

Return

$PST_BUSBAT
#Open Tables
If clalev([F:YBBS])= 0  : Local File YBBSIM     [YBBS] : Endif
If clalev([F:YBBD])= 0  : Local File YBBDETAIL  [YBBD] : Endif

  #Set Batch Number
  Local Char YBATNBR(50) : [L]YBATNBR = [M:YBB0]YBATNBR
  Local Char NAME(255)   :   [L]NAME =  [L]YBATNBR+"_"+format$("D:YYMMDDhhmmss",date$)
  Local Char TRACE(255)
  Local Char XMSG(250)(99)
  Local Char XMOT(250)
  Local Integer XCONTA : XCONTA = 0

  #Start Trace
  Call OUVRE_TRACE("Business Batch Post") From LECFIC
  Call ECR_TRACE("Start Date: " + num$(datetime$),0) From GESECRAN

  NAME = "BBGL" + format$("D:YYMMDDhhmmss",date$)

  #OPEN File To Write GL DATA For IMPORTING
  Openo filpath('tmp',NAME,'DAT'),-1 Using [ZGL]

  Iomode adxium 50 Using [ZGL]
  Iomode adxirs chr$(13)+ chr$(10) Using [ZGL]
  Iomode adxifs ',' Using [ZGL]

#--- Write File Start ---#

Read [F:YBBS]YBBS1 = [L]YBATNBR

Local Integer PTRANSNBR, I
Local Char CFCY(5), NFCY(5)

For [F:YBBS]YBBS1 Where [F:YBBS]YBATNBR =  [L]YBATNBR
  #Get Prev Trans no and set Current Transno [CTRNNO]
  If [L]PTRANSNBR = 0 or [L]PTRANSNBR <> [F:YBBS]YTRANSNBR
    [L]PTRANSNBR = [F:YBBS]YTRANSNBR
    #-- Write Header
    Local Integer YSTA : YSTA = 1 #Temp Status ALWAYS
    Local Integer YCAT
    If [M:YBB0]YBATCAT = 1 : YCAT = 1 : Endif #Actual
    If [M:YBB0]YBATCAT = 2 : YCAT = 5 : Endif #Template
    Call CREATE_GL_HEADER([F:YBBS]YENTTYP,[L]YBATNBR,[F:YBBS]YFCY,[F:YBBS]YJOU,num$([M:YBB0]YBATDAT),[M:YBB0]YBATREF,"AUD",num$(YSTA),num$(YCAT),"")
    I = 0 # Set to zero for start of new transaction no
  Else
    #-- Write Detail
    I += 1
    #TODO: BATCHTYP
    Call CREATE_GL_DETAIL(num$(I), "BATTYP", num$(I), [F:YBBS]YFCY, [F:YBBS]YCTRL, [F:YBBS]YACC, [F:YBBS]YBP, [F:YBBS]YLIGDES, "", num$([F:YBBS]YAMTTAX), "AUD")
    #Check for valid dimensions
    If [F:YBBS]YCCE0 <> "" or [F:YBBS]YCCE1 <> "" or [F:YBBS]YCCE2 <> ""  or [F:YBBS]YCCE3 <> ""  or [F:YBBS]YCCE4 <> "" Then
      #-- Write Analytical
      I += 1
      Local Char YQTY(1) : YQTY = "1" #TODO: ???
      Call CREATE_GL_ADETAIL(num$(I), [F:YBBS]YDIE0, [F:YBBS]YCCE0, [F:YBBS]YDIE1, [F:YBBS]YCCE1, [F:YBBS]YDIE2, [F:YBBS]YCCE2, [F:YBBS]YDIE3, [F:YBBS]YCCE3, [F:YBBS]YDIE4, [F:YBBS]YCCE4, YQTY, num$([
& F:YBBS]YAMTTAX))
    Endif
  Endif

Next

#--- Write File End ---#

  #Close file before import
  Openo  Using [ZGL]

  Gosub OUVRE From GIMPOBJ

  Call IMPORTSIL("YGASTEMP", filpath('tmp',NAME,'DAT')) From GIMPOBJ
  #Log messages and error handling
  #https://sagecity.na.sage.com/support_communities/sage_erp_x3/f/sage-x3-general-discussion-forum/104136/importsil---capture-log-messages

  Call ECR_TRACE("End Date: " + num$(datetime$),0) From GESECRAN

  TRACE = GTRACE
  Raz XMSG

  #End Trace
  Call FERME_TRACE() From LECFIC
  Call LEC_TRACE From LECFIC

  If filinfo(filpath("TRA",TRACE,"tra",0),7) > 0

    Openi filpath("TRA",TRACE,"tra",0) Using [XLL]

    Repeat
     Rdseq XMOT Using [XLL]

      If seg$(XMOT ,1,1) = "<"
        XMSG(XCONTA) = XMOT + chr$(10)
        XCONTA += 1
      Endif

    Until fstat <> 0
    Openi Using [XLL]

  Endif

#Close Tables
If clalev([F:YBBS])= 0  : Close Local File [F:YBBS] : Endif

Return


#------------------
# GL Header
#------------------
Subprog CREATE_GL_HEADER(HTYP,HNUM,HFCY,HJOU,HACCDAT,HREF,HCUR,HSTA,HCAT,HDACDIA)
Value Char HTYP
Value Char HNUM
Value Char HFCY
Value Char HJOU
Value Char HACCDAT
Value Char HREF
Value Char HCUR
Value Char HSTA
Value Char HCAT
Value Char HDACDIA


Local Char HEADER(255)

  Raz HEADER
  HEADER ="G,"
  HEADER += HTYP +","
  HEADER += HNUM +","
  HEADER += HFCY +","
  HEADER += HJOU +","
  HEADER += HACCDAT +","
  HEADER += HREF +","
  HEADER += HCUR +","
  HEADER += HSTA +","
  HEADER += HCAT +","
  HEADER += HDACDIA

  Wrseq HEADER Using   [ZGL]

End

#------------------
# GL Detail
#------------------
Subprog CREATE_GL_DETAIL(LIN,LEDTYP,IDTLIN,FCYLIN,SAC,ACC,BPR,DES,SNS,AMTCUR,CUR)

Value Char   LIN
Value Char   LEDTYP
Value Char   IDTLIN
Value Char   FCYLIN
Value Char   SAC
Value Char   ACC
Value Char   BPR
Value Char   DES
Value Char   SNS
Value Char   AMTCUR
Value Char   CUR

  Local Char LINES(255)
  Raz LINES
  LINES ="D,"
  LINES += LIN +","
  LINES += LEDTYP +","
  LINES += IDTLIN +","
  LINES += FCYLIN +","
  LINES += num$(SAC) +","
  LINES += ACC +","
  LINES += BPR +","
  LINES += DES +","
  LINES += SNS +","
  LINES += AMTCUR +","
  LINES += CUR

  Wrseq LINES Using   [ZGL]

End

#------------------
# GL Analytical
#------------------
Subprog CREATE_GL_ADETAIL(ALIN,DDIE0,DCCE0,DDIE1,DCCE1,DDIE2,DCCE2,DDIE3,DCCE3,DDIE4,DCCE4,DQTY,DAMTCUR)

#Dimentions
Value Char     ALIN   #Order Information
Value Char     DDIE0     #DIE 0
Value Char     DCCE0     #CCE 0
Value Char     DDIE1     #DIE 0
Value Char     DCCE1     #CCE 0
Value Char     DDIE2     #DIE 0
Value Char     DCCE2     #CCE 0
Value Char     DDIE3     #DIE 0
Value Char     DCCE3     #CCE 0
Value Char     DDIE4     #CCE 0
Value Char     DCCE4     #CCE 0
Value Char     DQTY      #Quantity
Value Char     DAMTCUR   #Entry Amount

  Local Char DLINES(255)
  Raz DLINES
  DLINES ="A,"
  DLINES +=ALIN +","
  DLINES +=DDIE0 +","
  DLINES +=DCCE0 +","
  DLINES +=DDIE1 +","
  DLINES +=DCCE1 +","
  DLINES +=DDIE2 +","
  DLINES +=DCCE2 +","
  DLINES +=DDIE3 +","
  DLINES +=DCCE3 +","
  DLINES +=DDIE4 +","
  DLINES +=DCCE4 +","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +="" + ","
  DLINES +=DQTY +","
  DLINES +=DAMTCUR

Wrseq DLINES Using [ZGL]

End

