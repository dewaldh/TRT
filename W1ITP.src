#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ITP 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:04:03"
A_USER  = "ADMIN"
A_STAMP = "20180828000403"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBITP"
  If [M]NBITP=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ITP [ITP]
Gosub HORODAT
Local Inpbox "ITP" From GFONCTION At A_STAMP With A_WINDPREV Mask [ITP] As [SIM_]
Grizo [ITP]5
Grizo [ITP]10
Grizo [ITP]15
Grizo [ITP]20
Grizo [ITP]25
Grizo [ITP]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ITP]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=20 : Y1(0)=1 : Y2(0)=24
X1(1)=21 : X2(1)=80 : Y1(1)=1 : Y2(1)=9
X1(2)=21 : X2(2)=80 : Y1(2)=10 : Y2(2)=15
X1(3)=21 : X2(3)=80 : Y1(3)=16 : Y2(3)=20
X1(4)=21 : X2(4)=80 : Y1(4)=21 : Y2(4)=22
X1(5)=21 : X2(5)=80 : Y1(5)=23 : Y2(5)=24
Return

$ON_NBITP
Onevent BEFORE_INPUT Call AS_NBITP From W1ITP
Onevent CONTROL Call C_NBITP From W1ITP
Onevent AFTER_LINE Call APRES_NBITP From W1ITP
Return

Subprog AS_NBITP
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4685,GBOUT1) From OBJDIV
## Action STD
Call AS_NBITP From SUBITP
Onkey 129 Titled GBOUT1 Call B1_NBITP From W1ITP
Gosub _AFF
End

Subprog C_NBITP
Local Decimal BASPAG
## Action STD
Call C_NBITP From SUBITP
If mkstat : GERR = 1 : GZONE = "NBITP" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBITP
Local Decimal BASPAG
If !GWEBSERV
 ## Action ACLOB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ACLOB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBITP" : PROGSUB = "SUBITP" : PROGSPE = "SPEITP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:ITP]TEX(nolign-1)
 PARMSK(2) = "ITP"
 PARMSK(3) = "TRTX3TEX"
 PARMSK(4) = ""
 PARMSK(5) = "0"
 PARMSK(6) = "1"
 Call TRAITE_NUM(BASPAG,PARMSK,"","ACLOB","ACLOB",3,"XYACLOB") From GTRAITE
 [M:ITP]TEX(nolign-1) = PARMSK(1)
 ACTION = "BB1_NBITP" : PROGSUB = "SUBITP" : PROGSPE = "SPEITP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog APRES_NBITP
Local Decimal BASPAG
## Action STD
Call APRES_NBITP From SUBITP
If mkstat : End : Endif
Gosub _AFF
End

$ON_BPSNUM
Onevent CONTROL Call C_BPSNUM(zc) From W1ITP
Onevent AFTER_AREA Call AP_BPSNUM(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_BPSNUM From W1ITP
Onevent BEFORE_INPUT Call AS_BPSNUM(zc) From W1ITP
Return

Subprog AS_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1515,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPSNUM(zc) From W1ITP
Onkey   2 Titled GBOUTS Call S_BPSNUM(zc) From W1ITP
Onkey 144 Titled GBOUTP Call P_BPSNUM(zc) From W1ITP
Onkey 146 Titled GBOUTA Call SA_BPSNUM(zc) From W1ITP
Gosub _AFF
End

Subprog C_BPSNUM(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
If !GWEBSERV
 If !mkstat
  ## Action BPSCHOICE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "BPSCHOICE"
  Call S_TAB_CHAR(VALEUR,PARMSK,"BPSCHOICE","TRTSEL","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
 Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("BPS","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
 If !mkstat
  ## Action STD
  Call C_BPSNUM(VALEUR) From SUBITP
  If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog AP_BPSNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_BPSNUM(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
Gosub _AFF
End

$AMM_BPSNUM
Call AM_BPSNUM(zc)
If !mkstat & GOBJET
 zoncou = "BPSNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPSNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_BPSNUM(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZBPSNUM)")>indice
 [M]BPSNUM(indice) = VALEUR
 Affzo ZBPSNUM(indice)
Endif
Gosub _AFF
End

Subprog S_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "BPS"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BPSNUM(VALEUR)
Variable Char    VALEUR()
Call OBJET("BPS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BPS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BPS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBPSNUM
Onevent BEFORE_AREA Gosub AV_ZBPSNUM From W1ITP
Return

$AV_ZBPSNUM
If clalev([F:BPS])=0 : Local File BPSUPPLIER [BPS] : Endif
Call LECTURE("BPS",num$([M]BPSNUM(indice)),"") From CONTOBJ
zc = [F:BPS]BPSNAM
Gosub _AFF
Return

$ON_DOUFLG
Onevent INIT_AREA Call D_DOUFLG(zc) From W1ITP
Return

Subprog D_DOUFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DOUFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PURMINQTY
Onevent BEFORE_AREA Gosub AV_PURMINQTY From W1ITP
Return

$AV_PURMINQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]ITPPUU (nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_CPRAMT
Onevent BEFORE_AREA Gosub AV_CPRAMT From W1ITP
Return

$AV_CPRAMT
## Action PARDEV
Gosub _AFF
Return

$ON_ITPQUAFLG
Onevent INIT_AREA Call D_ITPQUAFLG(zc) From W1ITP
Return

Subprog D_ITPQUAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ITPQUAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STCNUM
Return

$ON_ITPPUU
Return

$ON_ITPPCU
Return

$ON_LOAECCFLG
Onevent INIT_AREA Call D_LOAECCFLG(zc) From W1ITP
Return

Subprog D_LOAECCFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]LOAECCFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BOMALT
Return

$ON_CTMBPSFLG
Onevent INIT_AREA Call D_CTMBPSFLG(zc) From W1ITP
Return

Subprog D_CTMBPSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CTMBPSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BETFCY
Onevent INIT_AREA Call D_BETFCY(zc) From W1ITP
Return

Subprog D_BETFCY(VALEUR)
Variable Integer VALEUR
If varinit([M]BETFCY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITPQLYCRD
Return

$ON_ITPMATTOL
Return

$ON_XITMREFBPS
Onevent AFTER_CHANGE Gosub AMM_XITMREFBPS From W1ITP
Return

$AMM_XITMREFBPS
Call AM_XITMREFBPS(zc)
If !mkstat & GOBJET
 zoncou = "XITMREFBPS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XITMREFBPS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XITMREFBPS(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XITMREFBPS" : GZNUM = 3948 : Endif
Gosub _AFF
End

$ON_XITMDESBPS
Onevent AFTER_CHANGE Gosub AMM_XITMDESBPS From W1ITP
Return

$AMM_XITMDESBPS
Call AM_XITMDESBPS(zc)
If !mkstat & GOBJET
 zoncou = "XITMDESBPS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XITMDESBPS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XITMDESBPS(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XITMDESBPS" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_XEANCODBPS
Onevent AFTER_CHANGE Gosub AMM_XEANCODBPS From W1ITP
Return

$AMM_XEANCODBPS
Call AM_XEANCODBPS(zc)
If !mkstat & GOBJET
 zoncou = "XEANCODBPS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XEANCODBPS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XEANCODBPS(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XEANCODBPS" : GZNUM = 1854 : Endif
Gosub _AFF
End

$ON_XDOUFLG
Onevent BEFORE_INPUT Call AS_XDOUFLG(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XDOUFLG From W1ITP
Onevent INIT_AREA Call D_XDOUFLG(zc) From W1ITP
Return

Subprog D_XDOUFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]XDOUFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_XDOUFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_XDOUFLG(VALEUR) From SUBITP
If mkstat=2
 [M]XDOUFLG(INDIC) = VALEUR
 Affzo XDOUFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_XDOUFLG
Call AM_XDOUFLG(zc)
If !mkstat & GOBJET
 zoncou = "XDOUFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XDOUFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_XDOUFLG(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XDOUFLG" : GZNUM = 3935 : Endif
Gosub _AFF
End

$ON_XCPRCOE
Onevent CONTROL Call C_XCPRCOE(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XCPRCOE From W1ITP
Onevent INIT_AREA Call D_XCPRCOE(zc) From W1ITP
Return

Subprog D_XCPRCOE(VALEUR)
Variable Decimal VALEUR
If varinit([M]XCPRCOE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_XCPRCOE(VALEUR)
Variable Decimal VALEUR
## Action CONTCPR
Call CONTCPR(VALEUR) From TRTX3
If mkstat : GERR = 1 : GZONE = "XCPRCOE" : GZNUM = 3950 : Endif
Gosub _AFF
End

$AMM_XCPRCOE
Call AM_XCPRCOE(zc)
If !mkstat & GOBJET
 zoncou = "XCPRCOE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XCPRCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XCPRCOE(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XCPRCOE" : GZNUM = 3950 : Endif
Gosub _AFF
End

$ON_XCPRAMT
Onevent BEFORE_AREA Gosub AV_XCPRAMT From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XCPRAMT From W1ITP
Onevent CONTROL Call C_XCPRAMT(zc) From W1ITP
Return

$AV_XCPRAMT
## Action PARDEV
Gosub _AFF
Return

Subprog C_XCPRAMT(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_XCPRAMT
Call AM_XCPRAMT(zc)
If !mkstat & GOBJET
 zoncou = "XCPRAMT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XCPRAMT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XCPRAMT(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XCPRAMT" : GZNUM = 48557 : Endif
Gosub _AFF
End

$ON_CUR3
Return

$ON_XSTCNUM
Onevent CONTROL Call C_XSTCNUM(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XSTCNUM From W1ITP
Onevent BEFORE_INPUT Call AS_XSTCNUM(zc) From W1ITP
Return

Subprog AS_XSTCNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(49730,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_XSTCNUM(zc) From W1ITP
Onkey   2 Titled GBOUTS Call S_XSTCNUM(zc) From W1ITP
Gosub _AFF
End

Subprog C_XSTCNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "XSTCNUM" : GZNUM = 49730 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_XSTCNUM(VALEUR) From SUBITP
 If mkstat : GERR = 1 : GZONE = "XSTCNUM" : GZNUM = 49730 : Endif
Endif
Gosub _AFF
End

$AMM_XSTCNUM
Call AM_XSTCNUM(zc)
If !mkstat & GOBJET
 zoncou = "XSTCNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XSTCNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XSTCNUM(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XSTCNUM" : GZNUM = 49730 : Endif
Gosub _AFF
End

Subprog S_XSTCNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VCRSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VCRSEL"
 PARMSK(1) = "STC"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"VCRSEL","TRTDIV","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_XSTCNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VCRTUN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VCRTUN"
 Call OBJET_CHAR(VALEUR,"STC","") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_STCNUMITF
Onevent BEFORE_INPUT Call AS_STCNUMITF(zc) From W1ITP
Onevent INIT_AREA Call D_STCNUMITF(zc) From W1ITP
Return

Subprog D_STCNUMITF(VALEUR)
Variable Char    VALEUR()
If varinit([M]STCNUMITF,indice)=0
 VALEUR = "131"
Endif
Gosub _AFF
End

Subprog AS_STCNUMITF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(52022,GBOUTI) From OBJDIV
Onkey 178 Titled GBOUTI Call CL_STCNUMITF(zc) From W1ITP
Gosub _AFF
End

Subprog CL_STCNUMITF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STCITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STCITF"
 PARMSK(1) = [M:ITM0]ITMREF
 PARMSK(2) = [M:ITP]BPSNUM(max(0,nolign-1))
 PARMSK(3) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"FSTCITF","TRTSTCITF","SPESTCITF") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_XMATTOL
Onevent AFTER_CHANGE Gosub AMM_XMATTOL From W1ITP
Onevent CONTROL Call C_XMATTOL(zc) From W1ITP
Onevent BEFORE_INPUT Call AS_XMATTOL(zc) From W1ITP
Return

Subprog AS_XMATTOL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(43884,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_XMATTOL(zc) From W1ITP
Onkey   2 Titled GBOUTS Call S_XMATTOL(zc) From W1ITP
Onkey 144 Titled GBOUTP Call P_XMATTOL(zc) From W1ITP
Onkey 146 Titled GBOUTA Call SA_XMATTOL(zc) From W1ITP
Gosub _AFF
End

Subprog C_XMATTOL(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("MAT","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "XMATTOL" : GZNUM = 43884 : Endif
Gosub _AFF
End

$AMM_XMATTOL
Call AM_XMATTOL(zc)
If !mkstat & GOBJET
 zoncou = "XMATTOL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XMATTOL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XMATTOL(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XMATTOL" : GZNUM = 43884 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZXMATTOL)")>indice
 [M]XMATTOL(indice) = VALEUR
 Affzo ZXMATTOL(indice)
Endif
Gosub _AFF
End

Subprog S_XMATTOL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "MAT"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_XMATTOL(VALEUR)
Variable Char    VALEUR()
Call OBJET("MAT",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_XMATTOL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "MAT"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_XMATTOL(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("MAT",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZXMATTOL
Onevent BEFORE_AREA Gosub AV_ZXMATTOL From W1ITP
Return

$AV_ZXMATTOL
If clalev([F:MAT])=0 : Local File MATCHTOL [MAT] : Endif
Call LECTURE("MAT",num$([M]XMATTOL(indice)),"") From CONTOBJ
zc = [F:MAT]TOLDES
Gosub _AFF
Return

$ON_XBETFCY
Onevent INIT_AREA Call D_XBETFCY(zc) From W1ITP
Return

Subprog D_XBETFCY(VALEUR)
Variable Integer VALEUR
If varinit([M]XBETFCY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XPUU
Onevent BEFORE_INPUT Call AS_XPUU(zc) From W1ITP
Onevent CONTROL Call C_XPUU(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XPUU From W1ITP
Return

Subprog AS_XPUU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_XPUU(VALEUR) From SUBITP
If mkstat=2
 [M]XPUU(INDIC) = VALEUR
 Affzo XPUU(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_XPUU(zc) From W1ITP
Onkey   2 Titled GBOUTS Call S_XPUU(zc) From W1ITP
Onkey 144 Titled GBOUTP Call P_XPUU(zc) From W1ITP
Onkey 146 Titled GBOUTA Call SA_XPUU(zc) From W1ITP
Gosub _AFF
End

Subprog C_XPUU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "XPUU" : GZNUM = 1858 : Endif
If !mkstat
 ## Action STD
 Call C_XPUU(VALEUR) From SUBITP
 If mkstat : GERR = 1 : GZONE = "XPUU" : GZNUM = 1858 : Endif
Endif
Gosub _AFF
End

$AMM_XPUU
Call AM_XPUU(zc)
If !mkstat & GOBJET
 zoncou = "XPUU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XPUU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XPUU(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPUU" : GZNUM = 1858 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZXPUU)")>indice
 [M]XPUU(indice) = VALEUR
 Affzo ZXPUU(indice)
Endif
Gosub _AFF
End

Subprog S_XPUU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TUN"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_XPUU(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_XPUU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_XPUU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZXPUU
Onevent BEFORE_AREA Gosub AV_ZXPUU From W1ITP
Return

$AV_ZXPUU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]XPUU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_XPURMINQTY
Onevent BEFORE_AREA Gosub AV_XPURMINQTY From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XPURMINQTY From W1ITP
Return

$AV_XPURMINQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]XPUU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]XPURMINQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$AMM_XPURMINQTY
Call AM_XPURMINQTY(zc)
If !mkstat & GOBJET
 zoncou = "XPURMINQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XPURMINQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XPURMINQTY(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPURMINQTY" : GZNUM = 5014 : Endif
Gosub _AFF
End

$ON_XPUU2
Onevent BEFORE_AREA Gosub AV_XPUU2 From W1ITP
Return

$AV_XPUU2
zc = [M:ITP]XPUU
Gosub _AFF
Return

$ON_XPUUSTUCOE
Onevent BEFORE_INPUT Call AS_XPUUSTUCOE(zc) From W1ITP
Onevent CONTROL Call C_XPUUSTUCOE(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XPUUSTUCOE From W1ITP
Return

Subprog AS_XPUUSTUCOE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_XPUUSTUCOE(VALEUR) From SUBITP
If mkstat=2
 [M]XPUUSTUCOE(INDIC) = VALEUR
 Affzo XPUUSTUCOE(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_XPUUSTUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_XPUUSTUCOE(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPUUSTUCOE" : GZNUM = 1860 : Endif
Gosub _AFF
End

$AMM_XPUUSTUCOE
Call AM_XPUUSTUCOE(zc)
If !mkstat & GOBJET
 zoncou = "XPUUSTUCOE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XPUUSTUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XPUUSTUCOE(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPUUSTUCOE" : GZNUM = 1860 : Endif
Gosub _AFF
End

$ON_XLOAECCFLG
Onevent AFTER_CHANGE Gosub AMM_XLOAECCFLG From W1ITP
Onevent INIT_AREA Call D_XLOAECCFLG(zc) From W1ITP
Onevent BEFORE_INPUT Call AS_XLOAECCFLG(zc) From W1ITP
Return

Subprog D_XLOAECCFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]XLOAECCFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_XLOAECCFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_XLOAECCFLG
Call AM_XLOAECCFLG(zc)
If !mkstat & GOBJET
 zoncou = "XLOAECCFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XLOAECCFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_XLOAECCFLG(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XLOAECCFLG" : GZNUM = 53648 : Endif
Gosub _AFF
End

$ON_XPCU
Onevent AFTER_CHANGE Gosub AMM_XPCU From W1ITP
Onevent CONTROL Call C_XPCU(zc) From W1ITP
Onevent BEFORE_INPUT Call AS_XPCU(zc) From W1ITP
Return

Subprog AS_XPCU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_XPCU(zc) From W1ITP
Onkey   2 Titled GBOUTS Call S_XPCU(zc) From W1ITP
Onkey 144 Titled GBOUTP Call P_XPCU(zc) From W1ITP
Onkey 146 Titled GBOUTA Call SA_XPCU(zc) From W1ITP
Gosub _AFF
End

Subprog C_XPCU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!C",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "XPCU" : GZNUM = 5200 : Endif
Gosub _AFF
End

$AMM_XPCU
Call AM_XPCU(zc)
If !mkstat & GOBJET
 zoncou = "XPCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XPCU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_XPCU(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPCU" : GZNUM = 5200 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZXPCU)")>indice
 [M]XPCU(indice) = VALEUR
 Affzo ZXPCU(indice)
Endif
Gosub _AFF
End

Subprog S_XPCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TUN"
PARMSK(2) = "!C"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_XPCU(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_XPCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_XPCU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZXPCU
Onevent BEFORE_AREA Gosub AV_ZXPCU From W1ITP
Return

$AV_ZXPCU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]XPCU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_XPCUPUUCOE
Onevent BEFORE_INPUT Call AS_XPCUPUUCOE(zc) From W1ITP
Onevent CONTROL Call C_XPCUPUUCOE(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XPCUPUUCOE From W1ITP
Return

Subprog AS_XPCUPUUCOE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_XPCUPUUCOE(VALEUR) From SUBITP
If mkstat=2
 [M]XPCUPUUCOE(INDIC) = VALEUR
 Affzo XPCUPUUCOE(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_XPCUPUUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_XPCUPUUCOE(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPCUPUUCOE" : GZNUM = 4875 : Endif
Gosub _AFF
End

$AMM_XPCUPUUCOE
Call AM_XPCUPUUCOE(zc)
If !mkstat & GOBJET
 zoncou = "XPCUPUUCOE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XPCUPUUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XPCUPUUCOE(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPCUPUUCOE" : GZNUM = 4875 : Endif
Gosub _AFF
End

$ON_XPCUSTUCOE
Onevent BEFORE_AREA Gosub AV_XPCUSTUCOE From W1ITP
Return

$AV_XPCUSTUCOE
zc = arr([M:ITP]XPCUPUUCOE*[M:ITP]XPUUSTUCOE,10^-6)
Gosub _AFF
Return

$ON_XPIO
Onevent AFTER_CHANGE Gosub AMM_XPIO From W1ITP
Return

$AMM_XPIO
Call AM_XPIO(zc)
If !mkstat & GOBJET
 zoncou = "XPIO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XPIO(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XPIO(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XPIO" : GZNUM = 1164 : Endif
Gosub _AFF
End

$ON_XQLYMRK
Onevent AFTER_CHANGE Gosub AMM_XQLYMRK From W1ITP
Return

$AMM_XQLYMRK
Call AM_XQLYMRK(zc)
If !mkstat & GOBJET
 zoncou = "XQLYMRK" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XQLYMRK(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XQLYMRK(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XQLYMRK" : GZNUM = 1767 : Endif
Gosub _AFF
End

$ON_XQUAFLG
Onevent BEFORE_INPUT Call AS_XQUAFLG(zc) From W1ITP
Onevent AFTER_CHANGE Gosub AMM_XQUAFLG From W1ITP
Onevent INIT_AREA Call D_XQUAFLG(zc) From W1ITP
Return

Subprog D_XQUAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]XQUAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_XQUAFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_XQUAFLG(VALEUR) From SUBITP
If mkstat=2
 [M]XQUAFLG(INDIC) = VALEUR
 Affzo XQUAFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_XQUAFLG
Call AM_XQUAFLG(zc)
If !mkstat & GOBJET
 zoncou = "XQUAFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XQUAFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_XQUAFLG(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XQUAFLG" : GZNUM = 3802 : Endif
Gosub _AFF
End

$ON_XQUAFRY
Onevent AFTER_CHANGE Gosub AMM_XQUAFRY From W1ITP
Return

$AMM_XQUAFRY
Call AM_XQUAFRY(zc)
If !mkstat & GOBJET
 zoncou = "XQUAFRY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_XQUAFRY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_XQUAFRY(VALEUR) From SUBITP
If mkstat : GERR = 1 : GZONE = "XQUAFRY" : GZNUM = 19019 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2ITP
Return

$TIT_COL
Gosub TIT_COL From W2ITP
Return


