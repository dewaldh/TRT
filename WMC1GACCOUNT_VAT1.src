#<AdxTL>@(#)0.0.0.0 $Revision$Class Accounts
# Supervisor
## ACLA-CLASSE ## GACCOUNT_VAT1
# 2018-08-27 12:32:35 059


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : VAT Tax ( Field VAT 5)
####################################################################

$SET_VAT
If [L]_AOLDVAL<>this.VAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VAT
 Gosub PROPAGATE_VAT
Endif
Return

$INIT_VAT
Gosub DECLARE_VAR From WMC0GACCOUNT_VAT1
[L]CURPRO = "VAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VAT
Gosub DECLARE_VAR From WMC0GACCOUNT_VAT1
[L]CURPRO = "VAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VAT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VAT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VAT
[L]CURPRO = "VAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VAT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VAT
[L]CURPRO = "VAT"
If vireblc(this.VAT,2)<>vireblc(format$("K:5c",this.VAT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VAT
[L]CURPRO = "VAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VAT
[L]CURPRO = "VAT"
If vireblc(this.VAT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPVAT.ACTRLREF(this,"VAT",this.VAT,this.VAT,"","")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.VAT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_VAT
this.isReadonly = 0
[L]CURPRO = "VAT"
Gosub _LNKPRO_VAT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VAT
Gosub DECLARE_VAR From WMC0GACCOUNT_VAT1
[L]CURPRO = "VAT"
$_LNKPRO_VAT
If vireblc(this.VAT,2)<>""
 # Link TABVAT
 Local File TABVAT [WTVT]
 Read [F:WTVT]TVT0 = this.VAT;""
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVAT" & ZONE="SHOAXX" & IDENT1=[F:WTVT]vat & IDENT2=[F:WTVT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VAT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVAT" & ZONE="DESAXX" & IDENT1=[F:WTVT]vat & IDENT2=[F:WTVT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VAT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTVT]
Endif
Return




