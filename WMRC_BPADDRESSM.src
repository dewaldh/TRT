#<AdxTL>@(#)0.0.0.0 $Revision$Class Addresses
# Supervisor
## CRUD-CLASSE ## BPADDRESSM
# 2018-08-27 13:04:55 877


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BPADDRESSM,ASTATUS)
Variable Instance BPADDRESSM Using R_BPADDRESSM
Variable Integer ASTATUS

If BPADDRESSM = null : End : Endif

Gosub AVARIABLES From WMR00BPADDRESSM
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BPADDRESSM
Else
 Gosub AINSERT_BPADDRESSM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = BPADDRESSM.freeSnapshot
BPADDRESSM.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
BPADDRESSM.ASTALIN = [V]CST_ANEW
BPADDRESSM.BPA.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BPADDRESSM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BPADDRESSM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BPADDRESSM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BPADDRESSM.BPA.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BPADDRESSM.BPA.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLTEL)
 If BPADDRESSM.BPA.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLTEL([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLWEB)
 If BPADDRESSM.BPA.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLWEB([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLTEL)
 If BPADDRESSM.BPA.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLTEL([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLWEB)
 If BPADDRESSM.BPA.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLWEB([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BPADDRESSM
Trbegin [F:BPA]
 Gosub AINSERT_BPADDRESSM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BPADDRESSM.BPA.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BPADDRESSM.BPA.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLTEL)
 If BPADDRESSM.BPA.COLTEL([L]A_I)<>null
  If BPADDRESSM.BPA.COLTEL([L]A_I).ASTALIN=[V]CST_ADEL or BPADDRESSM.BPA.COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BPADDRESSM.BPA.COLTEL([L]A_I)
   BPADDRESSM.BPA.COLTEL([L]A_I) = null
  Elsif BPADDRESSM.BPA.COLTEL([L]A_I).ASTALIN <> [V]CST_ALL
   BPADDRESSM.BPA.COLTEL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLWEB)
 If BPADDRESSM.BPA.COLWEB([L]A_I)<>null
  If BPADDRESSM.BPA.COLWEB([L]A_I).ASTALIN=[V]CST_ADEL or BPADDRESSM.BPA.COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BPADDRESSM.BPA.COLWEB([L]A_I)
   BPADDRESSM.BPA.COLWEB([L]A_I) = null
  Elsif BPADDRESSM.BPA.COLWEB([L]A_I).ASTALIN <> [V]CST_ALL
   BPADDRESSM.BPA.COLWEB([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
Return

#-----------------------------------------------------#
$AINSERT_BPADDRESSM
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If BPADDRESSM.snapshotEnabled=1
 [L]A_RETIK = BPADDRESSM.revertUpdTick
Endif
[L]ASTATUS = max(fmet BPADDRESSM.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



