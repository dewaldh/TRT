#<AdxTL>@(#)0.0.0.0 $Revision$Class Rate at a given date
# Supervisor
## CRUD-CLASSE ## PJMCOSTDAT
# 2018-08-27 12:40:07 865


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMCOSTDAT [PCD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMCOSTDAT") From ASYRCOM : Endif
Local Instance PJMCOSTDAT Using C_PJMCOSTDAT

If !SILENCE : Call TRACE("3 --> New Instance C_PJMCOSTDAT") From ASYRCOM : Endif
PJMCOSTDAT = NewInstance C_PJMCOSTDAT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PCD_]CSTD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMCOSTDAT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTDAT.AREAD([PCD_]PCCCOD,[PCD_]PCCDATCST))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMCOSTDAT.PCCCOD ="-num$(PJMCOSTDAT.PCCCOD)) From ASYRCOM
 Call TRACE("PJMCOSTDAT.PCCDATCST ="-num$(PJMCOSTDAT.PCCDATCST)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMCOSTDAT.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMCOSTDAT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PCD_]
FreeGroup PJMCOSTDAT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMCOSTDAT,ACLE,ASTATUS,_ETAG)
Variable Instance PJMCOSTDAT Using C_PJMCOSTDAT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PCCCOD(15)
Local Date _PCCDATCST
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PCCCOD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PCCDATCST = func ASYRSUB.DATE_TO_ADX([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File PJMCOSTDAT [PCD]
Default File [F:PCD]
Read [F:PCD]CSTD0 = [L]_PCCCOD;[L]_PCCDATCST
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PCD]UPDTICK)>0
 [L]_ETAG = num$([F:PCD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMCOSTDAT,ACLE,ASTATUS)
Variable Instance PJMCOSTDAT Using C_PJMCOSTDAT
Value Char ACLE
Variable Integer ASTATUS
Local Char _PCCCOD(15)
Local Date _PCCDATCST
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PCCCOD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PCCDATCST = func ASYRSUB.DATE_TO_ADX([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTDAT.AREAD([L]_PCCCOD,[L]_PCCDATCST))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMCOSTDAT,_PCCCOD,_PCCDATCST,ASTATUS)
Variable Instance PJMCOSTDAT Using C_PJMCOSTDAT
Value Char _PCCCOD
Value Date _PCCDATCST
Variable Integer ASTATUS

If PJMCOSTDAT = null : End : Endif

Gosub AVARIABLES From WMC00PJMCOSTDAT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMCOSTDAT.APARENT=null
 [L]A_I = PJMCOSTDAT.freeSnapshot
 PJMCOSTDAT.snapshotEnabled = 0
 PJMCOSTDAT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMCOSTDAT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTDAT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMCOSTDAT.APARENT=null
 PJMCOSTDAT.snapshotEnabled = 1
 PJMCOSTDAT.setAccessorEnabled = 1
Endif
LogicClose File [PCD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTDAT._ACTION_PARAM("AREAD_BEFORE",[L]_PCCCOD,[L]_PCCDATCST))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PCD]
Read [F:PCD]CSTD0 = [L]_PCCCOD;[L]_PCCDATCST
If fstat
[L]A_ERROR = [L]_PCCCOD+"~"+num$([L]_PCCDATCST)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMCOSTDAT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PCD]AUUID)>0 & [F:PCD]AUUID=NullUuid
 [F:PCD]AUUID = getUuid
Endif
SetInstance PJMCOSTDAT With [F:PCD]
PJMCOSTDAT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTDAT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



