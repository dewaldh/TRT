#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SYNCW 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:48"
A_USER  = "ADMIN"
A_STAMP = "20180828001548"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SYNCW [DIA]
Gosub HORODAT
Local Inpbox "SYNCW" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Grizo [DIA]10
Grizo [DIA]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=25 : X2(0)=88 : Y1(0)=5 : Y2(0)=7
X1(1)=25 : X2(1)=88 : Y1(1)=8 : Y2(1)=21
X1(2)=25 : X2(2)=88 : Y1(2)=22 : Y2(2)=23
Return

$ON_STOFCY
Onevent CONTROL Call C_STOFCY(zc) From W1SYNCW
Onevent AFTER_CHANGE Gosub AMM_STOFCY From W1SYNCW
Onevent BEFORE_INPUT Call AS_STOFCY(zc) From W1SYNCW
Return

Subprog AS_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_STOFCY(zc) From W1SYNCW
Onkey   2 Titled GBOUTS Call S_STOFCY(zc) From W1SYNCW
Onkey 144 Titled GBOUTP Call P_STOFCY(zc) From W1SYNCW
Onkey 146 Titled GBOUTA Call SA_STOFCY(zc) From W1SYNCW
Gosub _AFF
End

Subprog C_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","D",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_STOFCY
Call AM_STOFCY(zc)
If !mkstat & GOBJET
 zoncou = "STOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STOFCY(VALEUR) From FUNSYNCW
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSTOFCY)")>indice
 [M]STOFCY(indice) = VALEUR
 Affzo ZSTOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "D"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1SYNCW
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1SYNCW
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1SYNCW
Return

Subprog IB_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREF(VALEUR)
## Action STD
Call AS_ITMREF(VALEUR) From FUNSYNCW
If mkstat=2
 [M]ITMREF(INDIC) = VALEUR
 Affzo ITMREF(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_ITMREF(zc) From W1SYNCW
Onkey 170 Titled GBOUT13 Call B13_ITMREF(zc) From W1SYNCW
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1SYNCW
Onkey 144 Titled GBOUTP Call P_ITMREF(zc) From W1SYNCW
Onkey 146 Titled GBOUTA Call SA_ITMREF(zc) From W1SYNCW
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREF(VALEUR) From FUNSYNCW
   If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZITMREF)")>indice
 [M]ITMREF(indice) = VALEUR
 Affzo ZITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = "1234"
 PARMSK(4) = "234"
 PARMSK(5) = "234"
 PARMSK(6) = date$
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1SYNCW
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_SO
Onevent INIT_AREA Call D_SO(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_SO(zc) From W1SYNCW
Return

Subprog D_SO(VALEUR)
Variable Integer VALEUR
If varinit([M]SO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_SO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SOREGEN
Onevent INIT_AREA Call D_SOREGEN(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_SOREGEN(zc) From W1SYNCW
Return

Subprog D_SOREGEN(VALEUR)
Variable Integer VALEUR
If varinit([M]SOREGEN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_SOREGEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PO
Onevent INIT_AREA Call D_PO(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_PO(zc) From W1SYNCW
Return

Subprog D_PO(VALEUR)
Variable Integer VALEUR
If varinit([M]PO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_POREGEN
Onevent INIT_AREA Call D_POREGEN(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_POREGEN(zc) From W1SYNCW
Return

Subprog D_POREGEN(VALEUR)
Variable Integer VALEUR
If varinit([M]POREGEN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_POREGEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WO
Onevent INIT_AREA Call D_WO(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_WO(zc) From W1SYNCW
Return

Subprog D_WO(VALEUR)
Variable Integer VALEUR
If varinit([M]WO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_WO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WOREGEN
Onevent INIT_AREA Call D_WOREGEN(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_WOREGEN(zc) From W1SYNCW
Return

Subprog D_WOREGEN(VALEUR)
Variable Integer VALEUR
If varinit([M]WOREGEN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_WOREGEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MW
Onevent INIT_AREA Call D_MW(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_MW(zc) From W1SYNCW
Return

Subprog D_MW(VALEUR)
Variable Integer VALEUR
If varinit([M]MW,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MW(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_EO
Onevent INIT_AREA Call D_EO(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_EO(zc) From W1SYNCW
Return

Subprog D_EO(VALEUR)
Variable Integer VALEUR
If varinit([M]EO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_EO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_EOREGEN
Onevent INIT_AREA Call D_EOREGEN(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_EOREGEN(zc) From W1SYNCW
Return

Subprog D_EOREGEN(VALEUR)
Variable Integer VALEUR
If varinit([M]EOREGEN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_EOREGEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MS
Onevent INIT_AREA Call D_MS(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_MS(zc) From W1SYNCW
Return

Subprog D_MS(VALEUR)
Variable Integer VALEUR
If varinit([M]MS,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SC
Onevent INIT_AREA Call D_SC(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_SC(zc) From W1SYNCW
Return

Subprog D_SC(VALEUR)
Variable Integer VALEUR
If varinit([M]SC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_SC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TR
Onevent INIT_AREA Call D_TR(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_TR(zc) From W1SYNCW
Return

Subprog D_TR(VALEUR)
Variable Integer VALEUR
If varinit([M]TR,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TP
Onevent INIT_AREA Call D_TP(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_TP(zc) From W1SYNCW
Return

Subprog D_TP(VALEUR)
Variable Integer VALEUR
If varinit([M]TP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BW
Onevent INIT_AREA Call D_BW(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_BW(zc) From W1SYNCW
Return

Subprog D_BW(VALEUR)
Variable Integer VALEUR
If varinit([M]BW,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_BW(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITV
Onevent CONTROL Call C_ITV(zc) From W1SYNCW
Onevent INIT_AREA Call D_ITV(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_ITV(zc) From W1SYNCW
Return

Subprog D_ITV(VALEUR)
Variable Integer VALEUR
If varinit([M]ITV,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ITV(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ITV(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ITV(VALEUR) From FUNSYNCW
If mkstat : GERR = 1 : GZONE = "ITV" : GZNUM = 12101 : Endif
Gosub _AFF
End

$ON_CTLDAT
Onevent INIT_AREA Call D_CTLDAT(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_CTLDAT(zc) From W1SYNCW
Return

Subprog D_CTLDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]CTLDAT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CTLDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MTOLINK
Onevent INIT_AREA Call D_MTOLINK(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_MTOLINK(zc) From W1SYNCW
Return

Subprog D_MTOLINK(VALEUR)
Variable Integer VALEUR
If varinit([M]MTOLINK,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MTOLINK(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AUTCOR
Onevent INIT_AREA Call D_AUTCOR(zc) From W1SYNCW
Onevent BEFORE_INPUT Call AS_AUTCOR(zc) From W1SYNCW
Return

Subprog D_AUTCOR(VALEUR)
Variable Integer VALEUR
If varinit([M]AUTCOR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AUTCOR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


