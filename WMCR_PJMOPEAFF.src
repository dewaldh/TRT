#<AdxTL>@(#)0.0.0.0 $Revision$Class Employee assignment
# Supervisor
## CRUD-CLASSE ## PJMOPEAFF
# 2018-09-17 03:51:53 800


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMOPEAFF [PJOA_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMOPEAFF") From ASYRCOM : Endif
Local Instance PJMOPEAFF Using C_PJMOPEAFF

If !SILENCE : Call TRACE("3 --> New Instance C_PJMOPEAFF") From ASYRCOM : Endif
PJMOPEAFF = NewInstance C_PJMOPEAFF AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PJOA_]PJOA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMOPEAFF") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.AREAD([PJOA_]OPPNUM,[PJOA_]TASCOD,[PJOA_]OPENUM,[PJOA_]OPESPLNUM,[PJOA_]POANUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMOPEAFF.OPPNUM ="-num$(PJMOPEAFF.OPPNUM)) From ASYRCOM
 Call TRACE("PJMOPEAFF.TASCOD ="-num$(PJMOPEAFF.TASCOD)) From ASYRCOM
 Call TRACE("PJMOPEAFF.OPENUM ="-num$(PJMOPEAFF.OPENUM)) From ASYRCOM
 Call TRACE("PJMOPEAFF.OPESPLNUM ="-num$(PJMOPEAFF.OPESPLNUM)) From ASYRCOM
 Call TRACE("PJMOPEAFF.POANUM ="-num$(PJMOPEAFF.POANUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMOPEAFF.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMOPEAFF.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PJOA_]
FreeGroup PJMOPEAFF
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMOPEAFF,ACLE,ASTATUS,_ETAG)
Variable Instance PJMOPEAFF Using C_PJMOPEAFF
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Shortint _OPENUM
Local Shortint _OPESPLNUM
Local Integer _POANUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPENUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_OPESPLNUM = val([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_POANUM = val([L]CLE(5)) : Endif
Raz [L]_ETAG
Local File PJMOPEAFF [PJOA]
Default File [F:PJOA]
Read [F:PJOA]PJOA0 = [L]_OPPNUM;[L]_TASCOD;[L]_OPENUM;[L]_OPESPLNUM;[L]_POANUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PJOA]UPDTICK)>0
 [L]_ETAG = num$([F:PJOA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMOPEAFF,ACLE,ASTATUS)
Variable Instance PJMOPEAFF Using C_PJMOPEAFF
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Shortint _OPENUM
Local Shortint _OPESPLNUM
Local Integer _POANUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPENUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_OPESPLNUM = val([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_POANUM = val([L]CLE(5)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.AREAD([L]_OPPNUM,[L]_TASCOD,[L]_OPENUM,[L]_OPESPLNUM,[L]_POANUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMOPEAFF,_OPPNUM,_TASCOD,_OPENUM,_OPESPLNUM,_POANUM,ASTATUS)
Variable Instance PJMOPEAFF Using C_PJMOPEAFF
Value Char _OPPNUM
Value Char _TASCOD
Value Shortint _OPENUM
Value Shortint _OPESPLNUM
Value Integer _POANUM
Variable Integer ASTATUS

If PJMOPEAFF = null : End : Endif

Gosub AVARIABLES From WMC00PJMOPEAFF
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMOPEAFF.APARENT=null
 [L]A_I = PJMOPEAFF.freeSnapshot
 PJMOPEAFF.snapshotEnabled = 0
 PJMOPEAFF.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMOPEAFF.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMOPEAFF.APARENT=null
 PJMOPEAFF.snapshotEnabled = 1
 PJMOPEAFF.setAccessorEnabled = 1
Endif
LogicClose File [PJOA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_TASCOD,[L]_OPENUM,[L]_OPESPLNUM,[L]_POANUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PJOA]
Read [F:PJOA]PJOA0 = [L]_OPPNUM;[L]_TASCOD;[L]_OPENUM;[L]_OPESPLNUM;[L]_POANUM
If fstat
 [L]A_ERROR = [L]_OPPNUM+"~"+[L]_TASCOD+"~"+num$([L]_OPENUM)+"~"+num$([L]_OPESPLNUM)+"~"+num$([L]_POANUM)
& 
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMOPEAFF,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PJOA]AUUID)>0 & [F:PJOA]AUUID=NullUuid
 [F:PJOA]AUUID = getUuid
Endif
If dim([F:PJOA]POALGDES)>0: Raz [F:PJOA]POALGDES: Endif
If dim([F:PJOA]POALGCOM)>0: Raz [F:PJOA]POALGCOM: Endif
SetInstance PJMOPEAFF With [F:PJOA]
PJMOPEAFF.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PJMOPEAFF" & ZONE="POADES" & IDENT1=PJMOPEAFF.KEYCONCAT & IDENT2=AVOID.ACHAR
 Call ASETTEXTRA(PJMOPEAFF.AXX,PJMOPEAFF.AllocGrp(),"POADES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMOPEAFF.AXX(maxtab(PJMOPEAFF.AXX)).FLG = 0
Next AXX
If !len(fmet PJMOPEAFF.AGETTEXTRA("POADES"))
 Call ASETTEXTRA(PJMOPEAFF.AXX,PJMOPEAFF.AllocGrp(),"POADES",
& fmet PJMOPEAFF.AGETTEXTRALAN("POADES",PJMOPEAFF.ACTX.AFOLD.ALANGDEF),
& PJMOPEAFF.ACTX.LAN) From ASYRSUB
Endif

Return



