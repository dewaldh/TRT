#<AdxTL>@(#)0.0.0.0 $Revision$Class User initialization
# Supervisor
## CRUD-CLASSE ## AUTILISINI
# 2018-08-27 13:03:51 392


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(AUTILISINI,ASTATUS)
Variable Instance AUTILISINI Using R_AUTILISINI
Variable Integer ASTATUS

If AUTILISINI = null : End : Endif

Gosub AVARIABLES From WMR00AUTILISINI
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_AUTILISINI
Else
 Gosub ADELETE_AUTILISINI
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
AUTILISINI.ASTALIN = [V]CST_ADEL
AUTILISINI.AUS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(AUTILISINI.AUS,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If AUTILISINI.AUS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AUTILISINI.AUS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AUS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AUTILISINI.AUS.FNCCOL)
 If AUTILISINI.AUS.FNCCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AUS.FNCCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If AUTILISINI.AUS.BPA(A_N2) <> null
& and AUTILISINI.AUS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AUTILISINI.AUS.BID) : # BID -- 3
 If AUTILISINI.AUS.BID(A_N2) <> null
& and AUTILISINI.AUS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
A_N2=1
If AUTILISINI.AUS.BPA(A_N2) <> null
& and AUTILISINI.AUS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AUTILISINI.AUS.BID) : # BID -- 3
 If AUTILISINI.AUS.BID(A_N2) <> null
& and AUTILISINI.AUS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(AUTILISINI.AUS.FNCCOL)
 If AUTILISINI.AUS.FNCCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AUS.FNCCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AUS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_AUTILISINI
Trbegin [F:AUS]
 Gosub ADELETE_AUTILISINI
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_AUTILISINI
[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AUS._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If AUTILISINI.snapshotEnabled=1
 [L]A_RETIK = AUTILISINI.revertUpdTick
Endif
[L]ASTATUS = max(fmet AUTILISINI.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



