#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import format definition
# Supervisor
## CRUD-CLASSE ## BSIFILFMT
# 2018-08-27 13:07:39 518


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSIFILFMT,ASTATUS)
Variable Instance BSIFILFMT Using R_BSIFILFMT
Variable Integer ASTATUS

If BSIFILFMT = null : End : Endif

Gosub AVARIABLES From WMR00BSIFILFMT
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSIFILFMT
Else
 Gosub AUPDATE_BSIFILFMT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSIFILFMT.freeSnapshot
BSIFILFMT.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
BSIFILFMT.ASTALIN = [V]CST_AUPD
BSIFILFMT.BSIFFM.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = BSIFILFMT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSIFILFMT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIFILFMT._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIFILFMT._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIFILFMT._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSIFILFMT.BSIFFM.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIFILFMT.BSIFFM.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSIFILFMT.BSIFFM.ASTALIN)<>""
 [L]A_ASTALIN = BSIFILFMT.BSIFFM.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.BSIFFM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(BSIFILFMT.BSIFFM.LINES) : # BSIFILFMTD -- 2
 If BSIFILFMT.BSIFFM.LINES(A_N2) <> null
& and BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN<>[V]CST_ANEW & BSIFILFMT.BSIFFM.ASTALIN=[V]CST_ADEL
   BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN=[V]CST_ANEW & find(BSIFILFMT.BSIFFM.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.BSIFFM.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(BSIFILFMT.BSIFFM.LINES) : # BSIFILFMTD -- 2
 If BSIFILFMT.BSIFFM.LINES(A_N2) <> null
& and BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.BSIFFM.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(BSIFILFMT.BSIFFM.ASTALIN)<>""
 [L]A_ASTALIN = BSIFILFMT.BSIFFM.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.BSIFFM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSIFILFMT
Trbegin [F:BSIFFM]
 Gosub AUPDATE_BSIFILFMT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSIFILFMT.BSIFFM.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIFILFMT.BSIFFM.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIFILFMT.BSIFFM.LINES)
 If BSIFILFMT.BSIFFM.LINES(A_N2) <> null
  If BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSIFILFMT.BSIFFM.LINES(A_N2)
   BSIFILFMT.BSIFFM.LINES(A_N2) = null
  Elsif BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_BSIFILFMT
[L]A_ASTALIN = BSIFILFMT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.BSIFFM._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSIFILFMT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If BSIFILFMT.snapshotEnabled=1
 [L]A_RETIK = BSIFILFMT.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIFILFMT.BSIFFM.LINES)
 If BSIFILFMT.BSIFFM.LINES(A_N2) <> null
  If BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   BSIFILFMT.BSIFFM.LINES(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet BSIFILFMT.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



