#<AdxTL>@(#)0.0.0.0 $Revision$Class Miscellaneous table 
# Supervisor
## CRUD-CLASSE ## ATABDIV
# 2018-08-27 12:22:59 007

Gosub TEST From WMCR_ATABDIV : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,NUMTAB,CODE)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# ATABDIV : ATABDIV
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet ATABDIV._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = ATABDIV.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(ATABDIV.ACTX.AFOLDER,nomap,"")>0
 Local File ATABDIV [ADI]
 Local File ATABDIV [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =ATABDIV.ACTX.AFOLDER+".ATABDIV" [ADI]
 Local File =ATABDIV.ACTX.AFOLDER+".ATABDIV" [AAA_]
 Local File =ATABDIV.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIV.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [ADI] With
& [AAA_]CODE = NUMTAB+CODE
& As [LNK_]
Return

############################################################################################
### ATABDIV(WADI)
############################################################################################
Funprog  _MAJSQL_ATABDIV(WADI)
Variable Instance WADI Using C_ATABDIV
Local Integer ASTATUS,A_I,A_J
Default File [F:ADI]
If WADI.ASTALIN=[V]CST_ANEW
 Call INICRE(WADI) From ASYRSUB
 SetInstance [F:ADI] With WADI
 For J=1 To maxtab(WADI.AXX)
  If WADI.AXX(J)<>null & WADI.AXX(J).PRO= "LNGDES" & WADI.AXX(J).FLG>0
   Call MAJTEXTRALAN(WADI,WADI.AXX(J).TEX,"ATABDIV","LNGDES",WADI.AXX(J).LAN,num$(WADI.NUMTAB),WADI.CODE,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WADI.AXX)
  If WADI.AXX(J)<>null & WADI.AXX(J).PRO= "SHODES" & WADI.AXX(J).FLG>0
   Call MAJTEXTRALAN(WADI,WADI.AXX(J).TEX,"ATABDIV","SHODES",WADI.AXX(J).LAN,num$(WADI.NUMTAB),WADI.CODE,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ADI]
 If fstat
  Call FSTA("ADI",WADI,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WADI.updTick = [F:ADI]updTick
Elsif WADI.ASTALIN=[V]CST_ALL or WADI.ASTALIN=[V]CST_AUPD
 Call INIUPD(WADI) From ASYRSUB
 SetInstance [F:ADI] With WADI
 For J=1 To maxtab(WADI.AXX)
  If WADI.AXX(J)<>null & WADI.AXX(J).PRO= "LNGDES" & WADI.AXX(J).FLG>0
   Call MAJTEXTRALAN(WADI,WADI.AXX(J).TEX,"ATABDIV","LNGDES",WADI.AXX(J).LAN,num$(WADI.NUMTAB),WADI.CODE,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WADI.AXX)
  If WADI.AXX(J)<>null & WADI.AXX(J).PRO= "SHODES" & WADI.AXX(J).FLG>0
   Call MAJTEXTRALAN(WADI,WADI.AXX(J).TEX,"ATABDIV","SHODES",WADI.AXX(J).LAN,num$(WADI.NUMTAB),WADI.CODE,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WADI,"ATABDIV")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ADI]CODE = [F:ADI]NUMTAB;[F:ADI]CODE
 If fstat
  Call FSTA("ADI",WADI,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WADI.updTick = [F:ADI]updTick
Elsif WADI.ASTALIN=[V]CST_ADEL
 SetInstance [F:ADI] With WADI
 For J=1 To maxtab(WADI.AXX)
  If WADI.AXX(J)<>null & WADI.AXX(J).PRO= "LNGDES"
   Call SUPTEXTRA(WADI,WADI.AXX(J).TEX,"ATABDIV","LNGDES",WADI.AXX(J).LAN,num$(WADI.NUMTAB),WADI.CODE,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WADI.AXX)
  If WADI.AXX(J)<>null & WADI.AXX(J).PRO= "SHODES"
   Call SUPTEXTRA(WADI,WADI.AXX(J).TEX,"ATABDIV","SHODES",WADI.AXX(J).LAN,num$(WADI.NUMTAB),WADI.CODE,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WADI,"ATABDIV")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ADI]CODE = [F:ADI]NUMTAB;[F:ADI]CODE
 If fstat
  Call FSTA("ADI",WADI,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



