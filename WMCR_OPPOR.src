#<AdxTL>@(#)0.0.0.0 $Revision$Class Project
# Supervisor
## CRUD-CLASSE ## OPPOR
# 2018-11-29 01:16:55 293


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File OPPOR [OPP_]

If !SILENCE : Call TRACE("2 --> Local Instance C_OPPOR") From ASYRCOM : Endif
Local Instance OPPOR Using C_OPPOR

If !SILENCE : Call TRACE("3 --> New Instance C_OPPOR") From ASYRCOM : Endif
OPPOR = NewInstance C_OPPOR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [OPP_]OPP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of OPPOR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.AREAD([OPP_]OPPNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("OPPOR.OPPNUM ="-num$(OPPOR.OPPNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(OPPOR.AKEYS)
  Call TRACE("-"-num$(I)-":"-OPPOR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [OPP_]
FreeGroup OPPOR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(OPPOR,ACLE,ASTATUS,_ETAG)
Variable Instance OPPOR Using C_OPPOR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File OPPOR [OPP]
Default File [F:OPP]
Read [F:OPP]OPP0 = [L]_OPPNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:OPP]UPDTICK)>0
 [L]_ETAG = num$([F:OPP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(OPPOR,ACLE,ASTATUS)
Variable Instance OPPOR Using C_OPPOR
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet OPPOR.AREAD([L]_OPPNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(OPPOR,_OPPNUM,ASTATUS)
Variable Instance OPPOR Using C_OPPOR
Value Char _OPPNUM
Variable Integer ASTATUS

If OPPOR = null : End : Endif

Gosub AVARIABLES From WMC00OPPOR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If OPPOR.APARENT=null
 [L]A_I = OPPOR.freeSnapshot
 OPPOR.snapshotEnabled = 0
 OPPOR.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & OPPOR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet OPPOR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If OPPOR.APARENT=null
 OPPOR.snapshotEnabled = 1
 OPPOR.setAccessorEnabled = 1
Endif
LogicClose File [OPP] ,[CRM] ,[CPP] ,[SBB] ,[PIMPL] ,[PJM] ,[YRMA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet OPPOR._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:OPP]
Read [F:OPP]OPP0 = [L]_OPPNUM
If fstat
[L]A_ERROR = [L]_OPPNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(OPPOR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:OPP]AUUID)>0 & [F:OPP]AUUID=NullUuid
 [F:OPP]AUUID = getUuid
Endif
SetInstance OPPOR With [F:OPP]
OPPOR.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:CRM]
 [L]A_N2=1
 Read [F:CRM]OPPCRM0 = [F:OPP]OPPNUM
 If !fstat
  OPPOR.CRM(A_N2) = NewInstance  C_OPPORCRM(OPPOR.ACTX,NullUuid,[L]A_N2,OPPOR,"CRM") AllocGroup OPPOR
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.CRM(A_N2).ADDINSTANCE_BOUND)
  Callmet OPPOR.CRM(A_N2).AREAD([F:CRM]OPPNUM)
  OPPOR.CRM(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.CRM(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:CPP]
 [L]A_N2=0
 For [F:CPP]OCP0 Where OPPNUM=[F:OPP]OPPNUM
  [L]A_N2 +=1
  OPPOR.CPP(A_N2) = NewInstance  C_OPPORCPP(OPPOR.ACTX,NullUuid,[L]A_N2,OPPOR,"CPP") AllocGroup OPPOR
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.CPP(A_N2).ADDINSTANCE_BOUND)
  Callmet OPPOR.CPP(A_N2).AREAD([F:CPP]OPPNUM,[F:CPP]CPP)
  OPPOR.CPP(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.CPP(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.CPP(A_N2).ASETATTRIBUTE("CPP","$isDisabled","true"))
 Next CPP
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SBB]
 [L]A_N2=0
 For [F:SBB]OBB0 Where OPPNUM=[F:OPP]OPPNUM
  [L]A_N2 +=1
  OPPOR.SBB(A_N2) = NewInstance  C_OPPORSBB(OPPOR.ACTX,NullUuid,[L]A_N2,OPPOR,"SBB") AllocGroup OPPOR
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.SBB(A_N2).ADDINSTANCE_BOUND)
  Callmet OPPOR.SBB(A_N2).AREAD([F:SBB]OPPNUM,[F:SBB]SBBPJT)
  OPPOR.SBB(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.SBB(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.SBB(A_N2).ASETATTRIBUTE("SBBPJT","$isDisabled","true"))
 Next SBB
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:PIMPL]
 [L]A_N2=1
 Read [F:PIMPL]PIM0 = [F:OPP]OPPNUM
 If !fstat
  Callmet OPPOR.PIMPL(A_N2).AREAD([F:PIMPL]PIMNUM)
  OPPOR.PIMPL(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.PIMPL(A_N2).ASETATTRIBUTE("PIMNUM","$namProParent","OPPNUM"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.PIMPL(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"PIMPL")+" : "+num$([F:OPP]OPPNUM)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"PIMPL"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:PJM]
 [L]A_N2=1
 Read [F:PJM]OPPPJM0 = [F:OPP]OPPNUM
 If !fstat
  OPPOR.PJM(A_N2) = NewInstance  C_OPPORPJM(OPPOR.ACTX,NullUuid,[L]A_N2,OPPOR,"PJM") AllocGroup OPPOR
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.PJM(A_N2).ADDINSTANCE_BOUND)
  Callmet OPPOR.PJM(A_N2).AREAD([F:PJM]OPPNUM)
  OPPOR.PJM(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.PJM(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YRMA]
 [L]A_N2=0
 For [F:YRMA]YRMA0 Where YGUID=[F:OPP]YGUID
  [L]A_N2 +=1
  OPPOR.YRMA(A_N2) = NewInstance  C_YRMA(OPPOR.ACTX,NullUuid,[L]A_N2,OPPOR,"YRMA") AllocGroup OPPOR
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.YRMA(A_N2).ADDINSTANCE_BOUND)
  Callmet OPPOR.YRMA(A_N2).AREAD([F:YRMA]YGUID,[F:YRMA]YLIGID)
  OPPOR.YRMA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.YRMA(A_N2).ASETATTRIBUTE("YGUID","$namProParent","YGUID"))
  [L]ASTATUS = max([L]ASTATUS,fmet OPPOR.YRMA(A_N2).ASETATTRIBUTE("YLIGID","$isDisabled","true"))
 Next YRMA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet OPPOR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



