#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management DPM1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:00:09"
A_USER  = "ADMIN"
A_STAMP = "20180828000009"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG1"
  If [M]NBLIG1=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask DPM1 [DPM1]
Gosub HORODAT
Local Inpbox "DPM1" From GFONCTION At A_STAMP With A_WINDPREV Mask [DPM1] As [SIM_]
Grizo [DPM1]5
Grizo [DPM1]15
Grizo [DPM1]20
Grizo [DPM1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DPM1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=98 : Y1(0)=1 : Y2(0)=10
X1(1)=99 : X2(1)=120 : Y1(1)=1 : Y2(1)=10
X1(2)=1 : X2(2)=120 : Y1(2)=11 : Y2(2)=17
X1(3)=1 : X2(3)=120 : Y1(3)=18 : Y2(3)=24
Return

$ON_DPRMODTYP
Onevent BEFORE_INPUT Call AS_DPRMODTYP(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_DPRMODTYP From W1DPM1
Onevent INIT_AREA Call D_DPRMODTYP(zc) From W1DPM1
Onevent CONTROL Call C_DPRMODTYP(zc) From W1DPM1
Return

Subprog D_DPRMODTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DPRMODTYP,indice)=0
 VALEUR = GVML_TMLIBRE
Endif
Gosub _AFF
End

Subprog AS_DPRMODTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3103) From COMBOS
## Action STD
Call AS_DPRMODTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]DPRMODTYP(INDIC) = VALEUR
 Affzo DPRMODTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3103,1))))
Endif
If !mkstat
 Discombo 0 From DPRMODTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DPRMODTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DPRMODTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DPRMODTYP" : GZNUM = 34248 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_DPRMODTYP
Call AM_DPRMODTYP(zc)
If !mkstat & GOBJET
 zoncou = "DPRMODTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DPRMODTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DPRMODTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "DPRMODTYP" : GZNUM = 34248 : Endif
Gosub _AFF
End

$ON_STDDPMNUM
Onevent CONTROL Call C_STDDPMNUM(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_STDDPMNUM From W1DPM1
Onevent INIT_AREA Call D_STDDPMNUM(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_STDDPMNUM(zc) From W1DPM1
Return

Subprog D_STDDPMNUM(VALEUR)
Variable Integer VALEUR
If varinit([M]STDDPMNUM,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

Subprog AS_STDDPMNUM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_STDDPMNUM(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_STDDPMNUM(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "STDDPMNUM" : GZNUM = 35742 : Endif
Gosub _AFF
End

$AMM_STDDPMNUM
Call AM_STDDPMNUM(zc)
If !mkstat & GOBJET
 zoncou = "STDDPMNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STDDPMNUM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STDDPMNUM(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "STDDPMNUM" : GZNUM = 35742 : Endif
Gosub _AFF
End

$ON_CRY
Onevent CONTROL Call C_CRY(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_CRY(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_CRY From W1DPM1
Onevent INIT_AREA Call D_CRY(zc) From W1DPM1
Return

Subprog D_CRY(VALEUR)
Variable Char    VALEUR()
If varinit([M]CRY,indice)=0
 VALEUR = GPAYS
Endif
Gosub _AFF
End

Subprog AS_CRY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(53316,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CRY(zc) From W1DPM1
Onkey   2 Titled GBOUTS Call S_CRY(zc) From W1DPM1
Onkey 144 Titled GBOUTP Call P_CRY(zc) From W1DPM1
Onkey 146 Titled GBOUTA Call SA_CRY(zc) From W1DPM1
Gosub _AFF
End

Subprog C_CRY(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TCY","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "CRY" : GZNUM = 34555 : Endif
Gosub _AFF
End

$AMM_CRY
Call AM_CRY(zc)
If !mkstat & GOBJET
 zoncou = "CRY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCRY)")>indice
 [M]CRY(indice) = VALEUR
 Affzo ZCRY(indice)
Endif
Gosub _AFF
End

Subprog S_CRY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CRY(VALEUR)
Variable Char    VALEUR()
Call OBJET("TCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CRY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CRY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCRY
Onevent BEFORE_AREA Gosub AV_ZCRY From W1DPM1
Return

$AV_ZCRY
Call LECTEXTRA(zc,"TABCOUNTRY","CRYDES",num$([M]CRY(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_LEG
Onevent INIT_AREA Call D_LEG(zc) From W1DPM1
Onevent CONTROL Call C_LEG(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_LEG(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_LEG From W1DPM1
Return

Subprog D_LEG(VALEUR)
Variable Char    VALEUR()
If varinit([M]LEG,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"909","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_LEG(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TITADI(GBOUT1,"909") From TRTDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_LEG(zc) From W1DPM1
Onkey   2 Titled GBOUTS Call S_LEG(zc) From W1DPM1
Onkey 144 Titled GBOUTP Call P_LEG(zc) From W1DPM1
Onkey 146 Titled GBOUTA Call SA_LEG(zc) From W1DPM1
Gosub _AFF
End

Subprog C_LEG(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"909","") From SUBADI
If mkstat : GERR = 1 : GZONE = "LEG" : GZNUM = 38195 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"909",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "LEG" : GZNUM = 38195 : Endif
Endif
Gosub _AFF
End

$AMM_LEG
Call AM_LEG(zc)
If !mkstat & GOBJET
 zoncou = "LEG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LEG(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZLEG)")>indice
 [M]LEG(indice) = VALEUR
 Affzo ZLEG(indice)
Endif
Gosub _AFF
End

Subprog S_LEG(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "909"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LEG(VALEUR)
Variable Char    VALEUR()
Call OBJET("ADI",VALEUR,"909") From GOBJET
Gosub _AFF
End

Subprog SA_LEG(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "909"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LEG(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "909"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZLEG
Onevent BEFORE_AREA Gosub AV_ZLEG From W1DPM1
Return

$AV_ZLEG
Call LECTEXTRA(zc,"ATABDIV","LNGDES","909",num$([M]LEG(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_RATCOETYP
Onevent BEFORE_INPUT Call AS_RATCOETYP(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_RATCOETYP From W1DPM1
Onevent INIT_AREA Call D_RATCOETYP(zc) From W1DPM1
Onevent CONTROL Call C_RATCOETYP(zc) From W1DPM1
Return

Subprog D_RATCOETYP(VALEUR)
Variable Integer VALEUR
If varinit([M]RATCOETYP,indice)=0
 VALEUR = GVML_COANNUI
Endif
Gosub _AFF
End

Subprog AS_RATCOETYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3116) From COMBOS
## Action STD
Call AS_RATCOETYP(VALEUR) From SUBDPM
If mkstat=2
 [M]RATCOETYP(INDIC) = VALEUR
 Affzo RATCOETYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3116,1))))
Endif
If !mkstat
 Discombo 0 From RATCOETYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From RATCOETYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_RATCOETYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_RATCOETYP
Call AM_RATCOETYP(zc)
If !mkstat & GOBJET
 zoncou = "RATCOETYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RATCOETYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_RATCOETYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "RATCOETYP" : GZNUM = 34294 : Endif
Gosub _AFF
End

$ON_CNSRAT
Onevent CONTROL Call C_CNSRAT(zc) From W1DPM1
Return

Subprog C_CNSRAT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CNSRAT" : GZNUM = 34556 : Endif
Gosub _AFF
End

$ON_RATNBR
Onevent AFTER_CHANGE Gosub AMM_RATNBR From W1DPM1
Onevent CONTROL Call C_RATNBR(zc) From W1DPM1
Return

Subprog C_RATNBR(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "RATNBR" : GZNUM = 34286 : Endif
Gosub _AFF
End

$AMM_RATNBR
Call AM_RATNBR(zc)
If !mkstat & GOBJET
 zoncou = "RATNBR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RATNBR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_RATNBR(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "RATNBR" : GZNUM = 34286 : Endif
Gosub _AFF
End

$ON_RATCUM
Return

$ON_STRDATTYP
Onevent INIT_AREA Call D_STRDATTYP(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_STRDATTYP(zc) From W1DPM1
Return

Subprog D_STRDATTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]STRDATTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STRDATTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RSDDPMTGR
Onevent CONTROL Call C_RSDDPMTGR(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_RSDDPMTGR From W1DPM1
Onevent BEFORE_INPUT Call AS_RSDDPMTGR(zc) From W1DPM1
Return

Subprog AS_RSDDPMTGR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_RSDDPMTGR(zc) From W1DPM1
Gosub _AFF
End

Subprog C_RSDDPMTGR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_RSDDPMTGR(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "RSDDPMTGR" : GZNUM = 34276 : Endif
Gosub _AFF
End

$AMM_RSDDPMTGR
Call AM_RSDDPMTGR(zc)
If !mkstat & GOBJET
 zoncou = "RSDDPMTGR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RSDDPMTGR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_RSDDPMTGR(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "RSDDPMTGR" : GZNUM = 34276 : Endif
Gosub _AFF
End

Subprog S_RSDDPMTGR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call S_RSDDPMTGR(VALEUR) From SUBDPM
Endif
Gosub _AFF
End

$ON_PRATYPTGR
Onevent INIT_AREA Call D_PRATYPTGR(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_PRATYPTGR(zc) From W1DPM1
Return

Subprog D_PRATYPTGR(VALEUR)
Variable Integer VALEUR
If varinit([M]PRATYPTGR,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

Subprog AS_PRATYPTGR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG1
Onevent BEFORE_INPUT Call AS_NBLIG1 From W1DPM1
Onevent BEFORE_LINE Call AVANT_NBLIG1 From W1DPM1
Onevent AFTER_LINE Call APRES_NBLIG1 From W1DPM1
Return

Subprog AS_NBLIG1
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(34558,GBOUT1) From OBJDIV
## Action STD
Call AS_NBLIG1 From SUBDPM
Onkey 129 Titled GBOUT1 Call B1_NBLIG1 From W1DPM1
Gosub _AFF
End

Subprog B1_NBLIG1
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B1_NBLIG1 From SUBDPM
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG1
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG1 From SUBDPM
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG1
Local Decimal BASPAG
## Action STD
Call APRES_NBLIG1 From SUBDPM
If mkstat : End : Endif
Gosub _AFF
End

$ON_RAT
Onevent CONTROL Call C_RAT(zc) From W1DPM1
Return

Subprog C_RAT(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_FIRFIYFLG
Onevent INIT_AREA Call D_FIRFIYFLG(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_FIRFIYFLG(zc) From W1DPM1
Onevent CONTROL Call C_FIRFIYFLG(zc) From W1DPM1
Return

Subprog D_FIRFIYFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]FIRFIYFLG,indice)=0
 VALEUR = G_NON
Endif
Gosub _AFF
End

Subprog AS_FIRFIYFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_FIRFIYFLG(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FIRFIYFLG" : GZNUM = 34287 : Endif
Gosub _AFF
End

$ON_ANIDATFLG
Onevent INIT_AREA Call D_ANIDATFLG(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_ANIDATFLG(zc) From W1DPM1
Onevent CONTROL Call C_ANIDATFLG(zc) From W1DPM1
Return

Subprog D_ANIDATFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ANIDATFLG,indice)=0
 VALEUR = G_NON
Endif
Gosub _AFF
End

Subprog AS_ANIDATFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ANIDATFLG(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ANIDATFLG" : GZNUM = 34289 : Endif
Gosub _AFF
End

$ON_PROTYP
Onevent BEFORE_INPUT Call AS_PROTYP(zc) From W1DPM1
Onevent INIT_AREA Call D_PROTYP(zc) From W1DPM1
Onevent CONTROL Call C_PROTYP(zc) From W1DPM1
Return

Subprog D_PROTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PROTYP,indice)=0
 VALEUR = GVML_TPMOIS
Endif
Gosub _AFF
End

Subprog AS_PROTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3105) From COMBOS
## Action STD
Call AS_PROTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]PROTYP(INDIC) = VALEUR
 Affzo PROTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3105,1))))
Endif
If !mkstat
 Discombo 0 From PROTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PROTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PROTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PROTYP" : GZNUM = 34284 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ETRDATTYP
Onevent BEFORE_INPUT Call AS_ETRDATTYP(zc) From W1DPM1
Onevent INIT_AREA Call D_ETRDATTYP(zc) From W1DPM1
Onevent CONTROL Call C_ETRDATTYP(zc) From W1DPM1
Return

Subprog D_ETRDATTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ETRDATTYP,indice)=0
 VALEUR = GVML_DA1ERM
Endif
Gosub _AFF
End

Subprog AS_ETRDATTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3104) From COMBOS
## Action STD
Call AS_ETRDATTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]ETRDATTYP(INDIC) = VALEUR
 Affzo ETRDATTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3104,1))))
Endif
If !mkstat
 Discombo 0 From ETRDATTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ETRDATTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ETRDATTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ETRDATTYP" : GZNUM = 34281 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ENDDPRTYP
Onevent BEFORE_INPUT Call AS_ENDDPRTYP(zc) From W1DPM1
Onevent INIT_AREA Call D_ENDDPRTYP(zc) From W1DPM1
Onevent CONTROL Call C_ENDDPRTYP(zc) From W1DPM1
Return

Subprog D_ENDDPRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ENDDPRTYP,indice)=0
 VALEUR = GVML_DSDERMC
Endif
Gosub _AFF
End

Subprog AS_ENDDPRTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3124) From COMBOS
## Action STD
Call AS_ENDDPRTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]ENDDPRTYP(INDIC) = VALEUR
 Affzo ENDDPRTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3124,1))))
Endif
If !mkstat
 Discombo 0 From ENDDPRTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ENDDPRTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ENDDPRTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ENDDPRTYP" : GZNUM = 34282 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ENDDATTYP
Onevent BEFORE_INPUT Call AS_ENDDATTYP(zc) From W1DPM1
Onevent INIT_AREA Call D_ENDDATTYP(zc) From W1DPM1
Onevent CONTROL Call C_ENDDATTYP(zc) From W1DPM1
Return

Subprog D_ENDDATTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ENDDATTYP,indice)=0
 VALEUR = GVML_DSDERMP
Endif
Gosub _AFF
End

Subprog AS_ENDDATTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3124) From COMBOS
## Action STD
Call AS_ENDDATTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]ENDDATTYP(INDIC) = VALEUR
 Affzo ENDDATTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3124,1))))
Endif
If !mkstat
 Discombo 0 From ENDDATTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ENDDATTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ENDDATTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ENDDATTYP" : GZNUM = 34283 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_BASTYP
Onevent AFTER_CHANGE Gosub AMM_BASTYP From W1DPM1
Onevent INIT_AREA Call D_BASTYP(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_BASTYP(zc) From W1DPM1
Onevent CONTROL Call C_BASTYP(zc) From W1DPM1
Return

Subprog D_BASTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]BASTYP,indice)=0
 VALEUR = GVML_TBVLAMT
Endif
Gosub _AFF
End

Subprog AS_BASTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_BASTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BASTYP" : GZNUM = 34285 : Endif
Gosub _AFF
End

$AMM_BASTYP
Call AM_BASTYP(zc)
If !mkstat & GOBJET
 zoncou = "BASTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BASTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_BASTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "BASTYP" : GZNUM = 34285 : Endif
Gosub _AFF
End

$ON_DPRDISRUL
Onevent INIT_AREA Call D_DPRDISRUL(zc) From W1DPM1
Onevent BEFORE_INPUT Call AS_DPRDISRUL(zc) From W1DPM1
Onevent CONTROL Call C_DPRDISRUL(zc) From W1DPM1
Return

Subprog D_DPRDISRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]DPRDISRUL,indice)=0
 VALEUR = GVML_REPPERIO
Endif
Gosub _AFF
End

Subprog AS_DPRDISRUL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3299) From COMBOS
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3299,1))))
Endif
If !mkstat
 Discombo 0 From DPRDISRUL(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DPRDISRUL(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DPRDISRUL(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DPRDISRUL" : GZNUM = 57035 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_MINDPRLIF
Onevent CONTROL Call C_MINDPRLIF(zc) From W1DPM1
Return

Subprog C_MINDPRLIF(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_MINDPRLIF(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "MINDPRLIF" : GZNUM = 34297 : Endif
Gosub _AFF
End

$ON_MINDPRTYP
Onevent BEFORE_INPUT Call AS_MINDPRTYP(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_MINDPRTYP From W1DPM1
Onevent INIT_AREA Call D_MINDPRTYP(zc) From W1DPM1
Onevent CONTROL Call C_MINDPRTYP(zc) From W1DPM1
Return

Subprog D_MINDPRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]MINDPRTYP,indice)=0
 VALEUR = GVML_COSANS
Endif
Gosub _AFF
End

Subprog AS_MINDPRTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3116) From COMBOS
## Action STD
Call AS_MINDPRTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]MINDPRTYP(INDIC) = VALEUR
 Affzo MINDPRTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3116,1))))
Endif
If !mkstat
 Discombo 0 From MINDPRTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From MINDPRTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_MINDPRTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MINDPRTYP" : GZNUM = 34290 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_MINDPRTYP
Call AM_MINDPRTYP(zc)
If !mkstat & GOBJET
 zoncou = "MINDPRTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MINDPRTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MINDPRTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "MINDPRTYP" : GZNUM = 34290 : Endif
Gosub _AFF
End

$ON_MINDPRRAT
Onevent CONTROL Call C_MINDPRRAT(zc) From W1DPM1
Return

Subprog C_MINDPRRAT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MINDPRRAT" : GZNUM = 34291 : Endif
If !mkstat
 ## Action STD
 Call C_MINDPRRAT(VALEUR) From SUBDPM
 If mkstat : GERR = 1 : GZONE = "MINDPRRAT" : GZNUM = 34291 : Endif
Endif
Gosub _AFF
End

$ON_MAXDPRTYP
Onevent BEFORE_INPUT Call AS_MAXDPRTYP(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_MAXDPRTYP From W1DPM1
Onevent INIT_AREA Call D_MAXDPRTYP(zc) From W1DPM1
Onevent CONTROL Call C_MAXDPRTYP(zc) From W1DPM1
Return

Subprog D_MAXDPRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]MAXDPRTYP,indice)=0
 VALEUR = GVML_COSANS
Endif
Gosub _AFF
End

Subprog AS_MAXDPRTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3116) From COMBOS
## Action STD
Call AS_MAXDPRTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]MAXDPRTYP(INDIC) = VALEUR
 Affzo MAXDPRTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3116,1))))
Endif
If !mkstat
 Discombo 0 From MAXDPRTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From MAXDPRTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_MAXDPRTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_MAXDPRTYP
Call AM_MAXDPRTYP(zc)
If !mkstat & GOBJET
 zoncou = "MAXDPRTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MAXDPRTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MAXDPRTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "MAXDPRTYP" : GZNUM = 34292 : Endif
Gosub _AFF
End

$ON_MAXDPRRAT
Onevent CONTROL Call C_MAXDPRRAT(zc) From W1DPM1
Return

Subprog C_MAXDPRRAT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MAXDPRRAT" : GZNUM = 34293 : Endif
If !mkstat
 ## Action STD
 Call C_MAXDPRRAT(VALEUR) From SUBDPM
 If mkstat : GERR = 1 : GZONE = "MAXDPRRAT" : GZNUM = 34293 : Endif
Endif
Gosub _AFF
End

$ON_EXCDPRTYP
Onevent BEFORE_INPUT Call AS_EXCDPRTYP(zc) From W1DPM1
Onevent AFTER_CHANGE Gosub AMM_EXCDPRTYP From W1DPM1
Onevent INIT_AREA Call D_EXCDPRTYP(zc) From W1DPM1
Onevent CONTROL Call C_EXCDPRTYP(zc) From W1DPM1
Return

Subprog D_EXCDPRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]EXCDPRTYP,indice)=0
 VALEUR = GVML_COSANS
Endif
Gosub _AFF
End

Subprog AS_EXCDPRTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3116) From COMBOS
## Action STD
Call AS_EXCDPRTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]EXCDPRTYP(INDIC) = VALEUR
 Affzo EXCDPRTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3116,1))))
Endif
If !mkstat
 Discombo 0 From EXCDPRTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From EXCDPRTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_EXCDPRTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_EXCDPRTYP
Call AM_EXCDPRTYP(zc)
If !mkstat & GOBJET
 zoncou = "EXCDPRTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EXCDPRTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_EXCDPRTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "EXCDPRTYP" : GZNUM = 34559 : Endif
Gosub _AFF
End

$ON_EXCDPRRAT
Onevent CONTROL Call C_EXCDPRRAT(zc) From W1DPM1
Return

Subprog C_EXCDPRRAT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "EXCDPRRAT" : GZNUM = 34296 : Endif
Gosub _AFF
End

$CHG_STY
Return


