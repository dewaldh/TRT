#<AdxTL>@(#)0.0.0.0 $Revision$Class Main product
# Supervisor
## CRUD-CLASSE ## PJMTSKITM
# 2018-09-17 03:52:03 493


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMTSKITM [JTT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMTSKITM") From ASYRCOM : Endif
Local Instance PJMTSKITM Using C_PJMTSKITM

If !SILENCE : Call TRACE("3 --> New Instance C_PJMTSKITM") From ASYRCOM : Endif
PJMTSKITM = NewInstance C_PJMTSKITM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [JTT_]JTT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMTSKITM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.AREAD([JTT_]OPPNUM,[JTT_]TASCOD,[JTT_]ITTSEQ))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMTSKITM.OPPNUM ="-num$(PJMTSKITM.OPPNUM)) From ASYRCOM
 Call TRACE("PJMTSKITM.TASCOD ="-num$(PJMTSKITM.TASCOD)) From ASYRCOM
 Call TRACE("PJMTSKITM.ITTSEQ ="-num$(PJMTSKITM.ITTSEQ)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMTSKITM.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMTSKITM.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [JTT_]
FreeGroup PJMTSKITM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMTSKITM,ACLE,ASTATUS,_ETAG)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Integer _ITTSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ITTSEQ = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File PJMTSKITM [JTT]
Default File [F:JTT]
Read [F:JTT]JTT0 = [L]_OPPNUM;[L]_TASCOD;[L]_ITTSEQ
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:JTT]UPDTICK)>0
 [L]_ETAG = num$([F:JTT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMTSKITM,ACLE,ASTATUS)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Integer _ITTSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ITTSEQ = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.AREAD([L]_OPPNUM,[L]_TASCOD,[L]_ITTSEQ))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMTSKITM,_OPPNUM,_TASCOD,_ITTSEQ,ASTATUS)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Value Char _OPPNUM
Value Char _TASCOD
Value Integer _ITTSEQ
Variable Integer ASTATUS

If PJMTSKITM = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSKITM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMTSKITM.APARENT=null
 [L]A_I = PJMTSKITM.freeSnapshot
 PJMTSKITM.snapshotEnabled = 0
 PJMTSKITM.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMTSKITM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMTSKITM.APARENT=null
 PJMTSKITM.snapshotEnabled = 1
 PJMTSKITM.setAccessorEnabled = 1
Endif
LogicClose File [JTT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_TASCOD,[L]_ITTSEQ))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:JTT]
Read [F:JTT]JTT0 = [L]_OPPNUM;[L]_TASCOD;[L]_ITTSEQ
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_TASCOD+"~"+num$([L]_ITTSEQ)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTSKITM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:JTT]AUUID)>0 & [F:JTT]AUUID=NullUuid
 [F:JTT]AUUID = getUuid
Endif
If dim([F:JTT]ITTDESTEX)>0: Raz [F:JTT]ITTDESTEX: Endif
If dim([F:JTT]ITTCOMTEX)>0: Raz [F:JTT]ITTCOMTEX: Endif
SetInstance PJMTSKITM With [F:JTT]
PJMTSKITM.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PJMTSKITM" & ZONE="ITMDES1" & IDENT1=PJMTSKITM.KEYCONCAT & IDENT2=AVOID.ACHAR
 Call ASETTEXTRA(PJMTSKITM.AXX,PJMTSKITM.AllocGrp(),"ITMDES1",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMTSKITM.AXX(maxtab(PJMTSKITM.AXX)).FLG = 0
Next AXX
If !len(fmet PJMTSKITM.AGETTEXTRA("ITMDES1"))
 Call ASETTEXTRA(PJMTSKITM.AXX,PJMTSKITM.AllocGrp(),"ITMDES1",
& fmet PJMTSKITM.AGETTEXTRALAN("ITMDES1",PJMTSKITM.ACTX.AFOLD.ALANGDEF),
& PJMTSKITM.ACTX.LAN) From ASYRSUB
Endif

Return



