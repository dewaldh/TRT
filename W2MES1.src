#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MES1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_ZMKITPL
Onevent BEFORE_AREA Gosub AV_ZMKITPL From W2MES1
Return

$AV_ZMKITPL
Call LECTEXTRA(zc,"AOBJEXT","INTIT",num$([M]MKITPL(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_DEFSTA
Onevent CONTROL Call C_DEFSTA(zc) From W2MES1
Onevent BEFORE_INPUT Call AS_DEFSTA(zc) From W2MES1
Return

Subprog AS_DEFSTA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_DEFSTA(zc) From W2MES1
Gosub _AFF
End

Subprog C_DEFSTA(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DEFSTA" : GZNUM = 18952 : Endif
If !mkstat
 ## Action STKCTRSTA
 Call STKCTRSTA(VALEUR,GSCSAUZSST,1,2,0,mkstat) From STKACT
 If mkstat : GERR = 1 : GZONE = "DEFSTA" : GZNUM = 18952 : Endif
Endif
Gosub _AFF
End

Subprog S_DEFSTA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = GSCSAUZSST
 PARMSK(2) = "1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_TYPEXP
Onevent CONTROL Call C_TYPEXP(zc) From W2MES1
Onevent AFTER_CHANGE Gosub AMM_TYPEXP From W2MES1
Onevent INIT_AREA Call D_TYPEXP(zc) From W2MES1
Onevent BEFORE_INPUT Call AS_TYPEXP(zc) From W2MES1
Return

Subprog D_TYPEXP(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPEXP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TYPEXP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_TYPEXP(VALEUR) From SUBMES
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
Gosub _AFF
End

$AMM_TYPEXP
Call AM_TYPEXP(zc)
If !mkstat & GOBJET
 zoncou = "TYPEXP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TYPEXP(VALEUR) From SUBMES
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
Gosub _AFF
End

$ON_VOLFILWRK
Onevent CONTROL Call C_VOLFILWRK(zc) From W2MES1
Onevent BEFORE_INPUT Call AS_VOLFILWRK(zc) From W2MES1
Return

Subprog AS_VOLFILWRK(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VOLFILWRK(zc) From W2MES1
Gosub _AFF
End

Subprog C_VOLFILWRK(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VOLFILWRK(VALEUR) From SUBMES
If mkstat : GERR = 1 : GZONE = "VOLFILWRK" : GZNUM = 30832 : Endif
Gosub _AFF
End

Subprog S_VOLFILWRK(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFICREP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFICREP"
 PARMSK(1) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"DFICREP","SELFICREP","XWDFICREP") From GSAISIE
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VOLFILSTO
Onevent CONTROL Call C_VOLFILSTO(zc) From W2MES1
Onevent BEFORE_INPUT Call AS_VOLFILSTO(zc) From W2MES1
Return

Subprog AS_VOLFILSTO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VOLFILSTO(zc) From W2MES1
Gosub _AFF
End

Subprog C_VOLFILSTO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VOLFILSTO(VALEUR) From SUBMES
If mkstat : GERR = 1 : GZONE = "VOLFILSTO" : GZNUM = 39111 : Endif
Gosub _AFF
End

Subprog S_VOLFILSTO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFICREP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFICREP"
 PARMSK(1) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"DFICREP","SELFICREP","XWDFICREP") From GSAISIE
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_DRTWRK
Return

$ON_DRTSTO
Return

$CHG_STY
Return


