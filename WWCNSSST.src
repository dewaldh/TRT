#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry SST

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:42"
A_USER  = "ADMIN"
A_STAMP = "20180326134142"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(5727,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSSSTSTD"
PROGSPE    = "CNSSSTSPE"
CBOITE     = "DCNSSST"
BOITE      = "FCNSSST"
NOMMSK(0)  = "CONSSST1"
ABMSK(0)   = "SST1"
NOMMSK(1)  = "CONSSST2"
ABMSK(1)   = "SST2"
CMEMO      = "sst"
CNOMMSK    = "CRITSST"
CABMSK     = "CSST"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:POQ])=0 : Local File PORDERQ      [POQ] : Endif
If clalev([F:MFO])=0 : Local File MFGOPE       [MFO] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CSST]
 When  0 : Local Mask =NOMMSK(0) [SST1]
 When  1 : Local Mask =NOMMSK(1) [SST2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CSST]
 When  0 : Grizo [SST1]
 When  1 : Grizo [SST2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CSST]MFGNUMDEB)>0
 Grizo [CSST]MFGNUMDEB
Endif
If dim([M:CSST]MFGNUMFIN)>0
 Grizo [CSST]MFGNUMFIN
Endif
If dim([M:CSST]EXTWSTDEB)>0
 Grizo [CSST]EXTWSTDEB
Endif
If dim([M:CSST]EXTWSTFIN)>0
 Grizo [CSST]EXTWSTFIN
Endif
If dim([M:CSST]ITMREFDEB)>0
 Grizo [CSST]ITMREFDEB
Endif
If dim([M:CSST]ITMREFFIN)>0
 Grizo [CSST]ITMREFFIN
Endif
If dim([M:CSST]BPSNUMDEB)>0
 Grizo [CSST]BPSNUMDEB
Endif
If dim([M:CSST]BPSNUMFIN)>0
 Grizo [CSST]BPSNUMFIN
Endif
If dim([M:CSST]POHNUMDEB)>0
 Grizo [CSST]POHNUMDEB
Endif
If dim([M:CSST]POHNUMFIN)>0
 Grizo [CSST]POHNUMFIN
Endif
If dim([M:CSST]ORDDATDEB)>0
 Grizo [CSST]ORDDATDEB
Endif
If dim([M:CSST]ORDDATFIN)>0
 Grizo [CSST]ORDDATFIN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CSST])>0 : Close Local Mask [CSST] : Endif
 When  0 : If clalev([M:SST1])>0 : Close Local Mask [SST1] : Endif
 When  1 : If clalev([M:SST2])>0 : Close Local Mask [SST2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CSST]
 When  0 : Default Mask [SST1]
 When  1 : Default Mask [SST2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CSST]
 When  0 : Raz [M:SST1]
 When  1 : Raz [M:SST2]
Endcase
Return

$CRITENT
If dim([M:CSST]MFGNUMDEB)>0 & dim([M:SST1]MFGNUMDEB)>0
 [M:CSST]MFGNUMDEB = [M:SST1]MFGNUMDEB
Endif
If dim([M:CSST]MFGNUMFIN)>0 & dim([M:SST1]MFGNUMFIN)>0
 [M:CSST]MFGNUMFIN = [M:SST1]MFGNUMFIN
Endif
If dim([M:CSST]EXTWSTDEB)>0 & dim([M:SST1]EXTWSTDEB)>0
 [M:CSST]EXTWSTDEB = [M:SST1]EXTWSTDEB
Endif
If dim([M:CSST]EXTWSTFIN)>0 & dim([M:SST1]EXTWSTFIN)>0
 [M:CSST]EXTWSTFIN = [M:SST1]EXTWSTFIN
Endif
If dim([M:CSST]ITMREFDEB)>0 & dim([M:SST1]ITMREFDEB)>0
 [M:CSST]ITMREFDEB = [M:SST1]ITMREFDEB
Endif
If dim([M:CSST]ITMREFFIN)>0 & dim([M:SST1]ITMREFFIN)>0
 [M:CSST]ITMREFFIN = [M:SST1]ITMREFFIN
Endif
If dim([M:CSST]BPSNUMDEB)>0 & dim([M:SST1]BPSNUMDEB)>0
 [M:CSST]BPSNUMDEB = [M:SST1]BPSNUMDEB
Endif
If dim([M:CSST]BPSNUMFIN)>0 & dim([M:SST1]BPSNUMFIN)>0
 [M:CSST]BPSNUMFIN = [M:SST1]BPSNUMFIN
Endif
If dim([M:CSST]POHNUMDEB)>0 & dim([M:SST1]POHNUMDEB)>0
 [M:CSST]POHNUMDEB = [M:SST1]POHNUMDEB
Endif
If dim([M:CSST]POHNUMFIN)>0 & dim([M:SST1]POHNUMFIN)>0
 [M:CSST]POHNUMFIN = [M:SST1]POHNUMFIN
Endif
If dim([M:CSST]ORDDATDEB)>0 & dim([M:SST1]ORDDATDEB)>0
 [M:CSST]ORDDATDEB = [M:SST1]ORDDATDEB
Endif
If dim([M:CSST]ORDDATFIN)>0 & dim([M:SST1]ORDDATFIN)>0
 [M:CSST]ORDDATFIN = [M:SST1]ORDDATFIN
Endif
Return

$ENTCRIT
If dim([M:CSST]MFGNUMDEB)>0 & dim([M:SST1]MFGNUMDEB)>0
[M:SST1]MFGNUMDEB = [M:CSST]MFGNUMDEB
Endif
If dim([M:CSST]MFGNUMFIN)>0 & dim([M:SST1]MFGNUMFIN)>0
[M:SST1]MFGNUMFIN = [M:CSST]MFGNUMFIN
Endif
If dim([M:CSST]EXTWSTDEB)>0 & dim([M:SST1]EXTWSTDEB)>0
[M:SST1]EXTWSTDEB = [M:CSST]EXTWSTDEB
Endif
If dim([M:CSST]EXTWSTFIN)>0 & dim([M:SST1]EXTWSTFIN)>0
[M:SST1]EXTWSTFIN = [M:CSST]EXTWSTFIN
Endif
If dim([M:CSST]ITMREFDEB)>0 & dim([M:SST1]ITMREFDEB)>0
[M:SST1]ITMREFDEB = [M:CSST]ITMREFDEB
Endif
If dim([M:CSST]ITMREFFIN)>0 & dim([M:SST1]ITMREFFIN)>0
[M:SST1]ITMREFFIN = [M:CSST]ITMREFFIN
Endif
If dim([M:CSST]BPSNUMDEB)>0 & dim([M:SST1]BPSNUMDEB)>0
[M:SST1]BPSNUMDEB = [M:CSST]BPSNUMDEB
Endif
If dim([M:CSST]BPSNUMFIN)>0 & dim([M:SST1]BPSNUMFIN)>0
[M:SST1]BPSNUMFIN = [M:CSST]BPSNUMFIN
Endif
If dim([M:CSST]POHNUMDEB)>0 & dim([M:SST1]POHNUMDEB)>0
[M:SST1]POHNUMDEB = [M:CSST]POHNUMDEB
Endif
If dim([M:CSST]POHNUMFIN)>0 & dim([M:SST1]POHNUMFIN)>0
[M:SST1]POHNUMFIN = [M:CSST]POHNUMFIN
Endif
If dim([M:CSST]ORDDATDEB)>0 & dim([M:SST1]ORDDATDEB)>0
[M:SST1]ORDDATDEB = [M:CSST]ORDDATDEB
Endif
If dim([M:CSST]ORDDATFIN)>0 & dim([M:SST1]ORDDATFIN)>0
[M:SST1]ORDDATFIN = [M:CSST]ORDDATFIN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSSST2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "SST"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:SST2]POHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("POH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "SST"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:SST2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MFG","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:SST2]POHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSSST2"
 When "B2"
  Onerrgo RIEN
  Assign "[M:SST2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSSST2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


