#<AdxTL>@(#)0.0.0.0 $Revision$Class PJM project
# Sage X3 supervisor
## ACLA-CLASSE ## OPPORPJM
# 2018-07-30 19:03:33 582

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMCM_OPPORPJM"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "OPPORPJM_CSTD"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Budget automation
$BUD_AUTOMATION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_AUTOMATION" : [L]ACTION = "BUD_AUTOMATION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget code auto operation
$BUD_AUTOMATION_OPE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_AUTOMATION_OPE" : [L]ACTION = "BUD_AUTOMATION_OPE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Delete budget line
$BUD_BUDLIG_DEL_ALL_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_BUDLIG_DEL_ALL_LINES" : [L]ACTION = "BUD_BUDLIG_DEL_ALL_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Verification
$BUD_CHECK_PBUPAE_VALID
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_CHECK_PBUPAE_VALID" : [L]ACTION = "BUD_CHECK_PBUPAE_VALID" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget closing
$BUD_CLOSING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_CLOSING" : [L]ACTION = "BUD_CLOSING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget code auto process
$BUD_CODE_AUTOPROC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_CODE_AUTOPROC" : [L]ACTION = "BUD_CODE_AUTOPROC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget amount calculation
$BUD_COMPUTE_MNTBUD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_COMPUTE_MNTBUD" : [L]ACTION = "BUD_COMPUTE_MNTBUD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Balance calculation
$BUD_COMPUTE_MNTREMBUD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_COMPUTE_MNTREMBUD" : [L]ACTION = "BUD_COMPUTE_MNTREMBUD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number of budgets
$BUD_COUNT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_COUNT" : [L]ACTION = "BUD_COUNT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget delivery
$BUD_DELIVERY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_DELIVERY" : [L]ACTION = "BUD_DELIVERY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deactivate budgets
$BUD_DISABLE_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_DISABLE_ALL" : [L]ACTION = "BUD_DISABLE_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Activate budgets
$BUD_ENABLE_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_ENABLE_ALL" : [L]ACTION = "BUD_ENABLE_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sub-budgets hierarchy
$BUD_GET_FAMILY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_GET_FAMILY" : [L]ACTION = "BUD_GET_FAMILY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Get budget index
$BUD_GET_INDEX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_GET_INDEX" : [L]ACTION = "BUD_GET_INDEX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Associated orders trans.
$BUD_GET_PIMDESAXX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_GET_PIMDESAXX" : [L]ACTION = "BUD_GET_PIMDESAXX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project budget amount
$BUD_GET_PRJAMT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_GET_PRJAMT" : [L]ACTION = "BUD_GET_PRJAMT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project budget qty.
$BUD_GET_PRJQTY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_GET_PRJQTY" : [L]ACTION = "BUD_GET_PRJQTY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Technical properties init.
$BUD_INIT_TECH_PROP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_INIT_TECH_PROP" : [L]ACTION = "BUD_INIT_TECH_PROP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Parent budget
$BUD_IS_PARENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_IS_PARENT" : [L]ACTION = "BUD_IS_PARENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget reactivation
$BUD_REACTIVATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_REACTIVATE" : [L]ACTION = "BUD_REACTIVATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget suspension
$BUD_SUSPENSION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BUD_SUSPENSION" : [L]ACTION = "BUD_SUSPENSION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Analytical
$CDIE_DELETE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CDIE_DELETE" : [L]ACTION = "CDIE_DELETE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Analytical
$CDIE_INSERT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CDIE_INSERT" : [L]ACTION = "CDIE_INSERT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Analytical
$CDIE_SITE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CDIE_SITE" : [L]ACTION = "CDIE_SITE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Analytical
$CDIE_UPDATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CDIE_UPDATE" : [L]ACTION = "CDIE_UPDATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project closing
$PROJECT_CLOSING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_CLOSING" : [L]ACTION = "PROJECT_CLOSING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project delivery
$PROJECT_DELIVERY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_DELIVERY" : [L]ACTION = "PROJECT_DELIVERY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project launch
$PROJECT_LAUNCH
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_LAUNCH" : [L]ACTION = "PROJECT_LAUNCH" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project status propagation
$PROJECT_PROPAGATE_OPPSTATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_PROPAGATE_OPPSTATE" : [L]ACTION = "PROJECT_PROPAGATE_OPPSTATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget status propagation
$PROJECT_PROPAGATE_PBUSTATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_PROPAGATE_PBUSTATE" : [L]ACTION = "PROJECT_PROPAGATE_PBUSTATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project reactivation
$PROJECT_REACTIVATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_REACTIVATE" : [L]ACTION = "PROJECT_REACTIVATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Project suspension
$PROJECT_SUSPENSION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PROJECT_SUSPENSION" : [L]ACTION = "PROJECT_SUSPENSION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Auto saleable product list
$SPLD_AUTOMATE_BUDLIG
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_AUTOMATE_BUDLIG" : [L]ACTION = "SPLD_AUTOMATE_BUDLIG" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Automate saleable product
$SPLD_AUTOMATE_ITM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_AUTOMATE_ITM" : [L]ACTION = "SPLD_AUTOMATE_ITM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Auto saleable product list
$SPLD_AUTOMATE_OPE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_AUTOMATE_OPE" : [L]ACTION = "SPLD_AUTOMATE_OPE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Auto saleable product list
$SPLD_AUTOMATION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_AUTOMATION" : [L]ACTION = "SPLD_AUTOMATION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Auto saleable product list
$SPLD_BUDCODE_AUTOPROC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_BUDCODE_AUTOPROC" : [L]ACTION = "SPLD_BUDCODE_AUTOPROC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Delete line
$SPLD_DEL_ALL_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_DEL_ALL_LINES" : [L]ACTION = "SPLD_DEL_ALL_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Delete saleable lines
$SPLD_DEL_BUD_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_DEL_BUD_LINES" : [L]ACTION = "SPLD_DEL_BUD_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Delete saleable lines
$SPLD_DEL_TAS_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_DEL_TAS_LINES" : [L]ACTION = "SPLD_DEL_TAS_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Saleable products
$SPLD_EXISTING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_EXISTING" : [L]ACTION = "SPLD_EXISTING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Saleable products
$SPLD_EXISTING_SOMEWHERE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_EXISTING_SOMEWHERE" : [L]ACTION = "SPLD_EXISTING_SOMEWHERE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Saleable product
$SPLD_GET_INDEX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_GET_INDEX" : [L]ACTION = "SPLD_GET_INDEX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Get sales product
$SPLD_GET_ITMMASTER
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_GET_ITMMASTER" : [L]ACTION = "SPLD_GET_ITMMASTER" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Technical properties init.
$SPLD_INIT_TECH_PROP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_INIT_TECH_PROP" : [L]ACTION = "SPLD_INIT_TECH_PROP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Is operation saleable
$SPLD_IS_OPE_SALEABLE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_IS_OPE_SALEABLE" : [L]ACTION = "SPLD_IS_OPE_SALEABLE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Conversion
$SPLD_MAN_UOM_CONVERT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_MAN_UOM_CONVERT" : [L]ACTION = "SPLD_MAN_UOM_CONVERT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sold product list
$SPLD_SOLD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_SOLD" : [L]ACTION = "SPLD_SOLD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sold product list
$SPLD_SOLD_GET_VALUES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_SOLD_GET_VALUES" : [L]ACTION = "SPLD_SOLD_GET_VALUES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Auto saleable product list
$SPLD_TASCOD_AUTOPROC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SPLD_TASCOD_AUTOPROC" : [L]ACTION = "SPLD_TASCOD_AUTOPROC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Verification
$TAS_CHECK_TASPAE_VALID
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_CHECK_TASPAE_VALID" : [L]ACTION = "TAS_CHECK_TASPAE_VALID" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task closing
$TAS_CLOSING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_CLOSING" : [L]ACTION = "TAS_CLOSING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number of tasks
$TAS_COUNT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_COUNT" : [L]ACTION = "TAS_COUNT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deactivate tasks
$TAS_DISABLE_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_DISABLE_ALL" : [L]ACTION = "TAS_DISABLE_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Activate tasks
$TAS_ENABLE_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_ENABLE_ALL" : [L]ACTION = "TAS_ENABLE_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Get effective rate
$TAS_GET_COST_EFFECTIVE_RATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_GET_COST_EFFECTIVE_RATE" : [L]ACTION = "TAS_GET_COST_EFFECTIVE_RATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Get cost type
$TAS_GET_COST_TYPE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_GET_COST_TYPE" : [L]ACTION = "TAS_GET_COST_TYPE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Get effective date
$TAS_GET_EFFECTIVE_DATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_GET_EFFECTIVE_DATE" : [L]ACTION = "TAS_GET_EFFECTIVE_DATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sub-tasks hierarchy
$TAS_GET_FAMILY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_GET_FAMILY" : [L]ACTION = "TAS_GET_FAMILY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Get index for a task
$TAS_GET_INDEX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_GET_INDEX" : [L]ACTION = "TAS_GET_INDEX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Technical properties init.
$TAS_INIT_TECH_PROP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_INIT_TECH_PROP" : [L]ACTION = "TAS_INIT_TECH_PROP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget used
$TAS_IS_BUDGET_USED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_IS_BUDGET_USED" : [L]ACTION = "TAS_IS_BUDGET_USED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Parent task
$TAS_IS_PARENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_IS_PARENT" : [L]ACTION = "TAS_IS_PARENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task launch
$TAS_LAUNCH
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_LAUNCH" : [L]ACTION = "TAS_LAUNCH" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Plan task
$TAS_PLANNED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_PLANNED" : [L]ACTION = "TAS_PLANNED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Progress
$TAS_PROGRESS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_PROGRESS" : [L]ACTION = "TAS_PROGRESS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task reactivation
$TAS_REACTIVATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_REACTIVATE" : [L]ACTION = "TAS_REACTIVATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Stock allocation
$TAS_RITT_STKALL_CHGALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_RITT_STKALL_CHGALL" : [L]ACTION = "TAS_RITT_STKALL_CHGALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task suspension
$TAS_SUSPENSION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_SUSPENSION" : [L]ACTION = "TAS_SUSPENSION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Time entry
$TAS_TIMEENTRY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TAS_TIMEENTRY" : [L]ACTION = "TAS_TIMEENTRY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Delete budget line
$_BUD_BUDLIG_DEL_ALL_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_BUDLIG_DEL_ALL_LINES" : [L]ACTION = "_BUD_BUDLIG_DEL_ALL_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Verification
$_BUD_CHECK_PBUPAE_VALID
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_CHECK_PBUPAE_VALID" : [L]ACTION = "_BUD_CHECK_PBUPAE_VALID" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget closing
$_BUD_CLOSING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_CLOSING" : [L]ACTION = "_BUD_CLOSING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget amount calculation
$_BUD_COMPUTE_MNTBUD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_COMPUTE_MNTBUD" : [L]ACTION = "_BUD_COMPUTE_MNTBUD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Balance calculation
$_BUD_COMPUTE_MNTREMBUD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_COMPUTE_MNTREMBUD" : [L]ACTION = "_BUD_COMPUTE_MNTREMBUD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget delivery
$_BUD_DELIVERY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_DELIVERY" : [L]ACTION = "_BUD_DELIVERY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sub-budgets hierarchy
$_BUD_GET_FAMILY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_GET_FAMILY" : [L]ACTION = "_BUD_GET_FAMILY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget reactivation
$_BUD_REACTIVATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_REACTIVATE" : [L]ACTION = "_BUD_REACTIVATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Budget suspension
$_BUD_SUSPENSION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_SUSPENSION" : [L]ACTION = "_BUD_SUSPENSION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update budget lines
$_BUD_UPD_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_BUD_UPD_LINES" : [L]ACTION = "_BUD_UPD_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update saleable lines
$_SPLD_UPD_BUDLIN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_SPLD_UPD_BUDLIN" : [L]ACTION = "_SPLD_UPD_BUDLIN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update saleable lines
$_SPLD_UPD_PJMLIN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_SPLD_UPD_PJMLIN" : [L]ACTION = "_SPLD_UPD_PJMLIN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update saleable lines
$_SPLD_UPD_TASLIN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_SPLD_UPD_TASLIN" : [L]ACTION = "_SPLD_UPD_TASLIN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Allocation
$_TASK_RITT_ALLOCATION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TASK_RITT_ALLOCATION" : [L]ACTION = "_TASK_RITT_ALLOCATION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Planning
$_TASK_RITT_SOQQTY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TASK_RITT_SOQQTY" : [L]ACTION = "_TASK_RITT_SOQQTY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Verification
$_TAS_CHECK_TASPAE_VALID
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_CHECK_TASPAE_VALID" : [L]ACTION = "_TAS_CHECK_TASPAE_VALID" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task closing
$_TAS_CLOSING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_CLOSING" : [L]ACTION = "_TAS_CLOSING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sub-tasks hierarchy
$_TAS_GET_FAMILY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_GET_FAMILY" : [L]ACTION = "_TAS_GET_FAMILY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task launch
$_TAS_LAUNCH
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_LAUNCH" : [L]ACTION = "_TAS_LAUNCH" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Parent tasks at 'started' status
$_TAS_PARENT_NEW
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_PARENT_NEW" : [L]ACTION = "_TAS_PARENT_NEW" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Plan task
$_TAS_PLANNED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_PLANNED" : [L]ACTION = "_TAS_PLANNED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Progress
$_TAS_PROGRESS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_PROGRESS" : [L]ACTION = "_TAS_PROGRESS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task reactivation
$_TAS_REACTIVATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_REACTIVATE" : [L]ACTION = "_TAS_REACTIVATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task suspension
$_TAS_SUSPENSION
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_TAS_SUSPENSION" : [L]ACTION = "_TAS_SUSPENSION" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0OPPORPJM
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 20
 If this.CDIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.CDIE(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.TAS)
 If this.TAS(AINDCLA)<>null
  [L]ASTATUS = fmet this.TAS(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.BUD)
 If this.BUD(AINDCLA)<>null
  [L]ASTATUS = fmet this.BUD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PAF)
 If this.PAF(AINDCLA)<>null
  [L]ASTATUS = fmet this.PAF(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SPLD)
 If this.SPLD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SPLD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0OPPORPJM
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 20
 If this.CDIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.CDIE(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.TAS)
 If this.TAS(AINDCLA)<>null
  [L]ASTATUS = fmet this.TAS(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.BUD)
 If this.BUD(AINDCLA)<>null
  [L]ASTATUS = fmet this.BUD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PAF)
 If this.PAF(AINDCLA)<>null
  [L]ASTATUS = fmet this.PAF(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SPLD)
 If this.SPLD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SPLD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0OPPORPJM
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 20
 If this.CDIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.CDIE(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'CDIE('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.TAS)
 If this.TAS(AINDCLA)<>null
  [L]ASTATUS = fmet this.TAS(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'TAS('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.BUD)
 If this.BUD(AINDCLA)<>null
  [L]ASTATUS = fmet this.BUD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BUD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PAF)
 If this.PAF(AINDCLA)<>null
  [L]ASTATUS = fmet this.PAF(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PAF('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SPLD)
 If this.SPLD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SPLD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SPLD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0OPPORPJM
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "OPPDESTEX"
  If fmet this.AGETATTRIBUTE("OPPDESTEX","$isLoaded")<>"true"
   Gosub READ_CLB_OPPDESTEX
  Else
   [L]_CLB = this.OPPDESTEX
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("OPPDESTEX","$contentType","text/plain")
   [L]_CNT = "text/plain"
  Endif
 When "OPPCOMTEX"
  If fmet this.AGETATTRIBUTE("OPPCOMTEX","$isLoaded")<>"true"
   Gosub READ_CLB_OPPCOMTEX
  Else
   [L]_CLB = this.OPPCOMTEX
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("OPPCOMTEX","$contentType","text/plain")
   [L]_CNT = "text/plain"
  Endif
Endcase
Return

$READ_CLB_OPPDESTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WPJCB]CODBLB = [L]_KEYVALTAB(1)
[F:WPJCB]IDENT1 = [L]_KEYVALTAB(2)
[F:WPJCB]IDENT2 = [L]_KEYVALTAB(3)
[F:WPJCB]IDENT3 = [L]_KEYVALTAB(4)
[F:WPJCB]IDENT4 = [L]_KEYVALTAB(5)
Read [WPJCB] =
If !fstat
 [L]_CLB = [F:WPJCB]CLOB
Endif
LogicClose File [WPJCB]
Return

$READ_EXI_OPPDESTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WPJCB]CODBLB = "OPPORPJM"
[F:WPJCB]IDENT1 = "OPPDESTEX"
[F:WPJCB]IDENT2 = this.OPPNUM
[F:WPJCB]IDENT3 = AVOID.ACHAR
[F:WPJCB]IDENT4 = AVOID.ACHAR
Look [WPJCB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WPJCB]
Return

$READ_CLB_OPPCOMTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WPJCB]CODBLB = [L]_KEYVALTAB(1)
[F:WPJCB]IDENT1 = [L]_KEYVALTAB(2)
[F:WPJCB]IDENT2 = [L]_KEYVALTAB(3)
[F:WPJCB]IDENT3 = [L]_KEYVALTAB(4)
[F:WPJCB]IDENT4 = [L]_KEYVALTAB(5)
Read [WPJCB] =
If !fstat
 [L]_CLB = [F:WPJCB]CLOB
Endif
LogicClose File [WPJCB]
Return

$READ_EXI_OPPCOMTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WPJCB]CODBLB = "OPPORPJM"
[F:WPJCB]IDENT1 = "OPPCOMTEX"
[F:WPJCB]IDENT2 = this.OPPNUM
[F:WPJCB]IDENT3 = AVOID.ACHAR
[F:WPJCB]IDENT4 = AVOID.ACHAR
Look [WPJCB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WPJCB]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "BUD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BUD",this)
 When "CDIE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"CDIE",this)
 When "PAF"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PAF",this)
 When "SPLD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SPLD",this)
 When "TAS"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"TAS",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "BUD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BUD","C_PJMBUD",this)
 When "CDIE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"CDIE","C_OPPORPJM_CDIE",this)
 When "PAF"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PAF","C_PJMAFF",this)
 When "SPLD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SPLD","C_PJMSALITMD",this)
 When "TAS"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"TAS","C_PJMTSK",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "BUD"
  [L]_ALINE = 0
 When "CDIE"
  [L]_ALINE = 20
 When "PAF"
  [L]_ALINE = 0
 When "SPLD"
  [L]_ALINE = 0
 When "TAS"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "BUD"
  [L]_ALINE = 1
 When "CDIE"
  [L]_ALINE = 1
 When "PAF"
  [L]_ALINE = 1
 When "SPLD"
  [L]_ALINE = 1
 When "TAS"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "OPPNUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



