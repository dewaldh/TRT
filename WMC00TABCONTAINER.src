#<AdxTL>@(#)0.0.0.0 $Revision$Class Freight container
# Supervisor
## CRUD-CLASSE ## TABCONTAINER
# 2018-08-27 12:50:57 570

Gosub TEST From WMCR_TABCONTAINER : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,TCTRNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TABCONTAINER : TABCONTAINER
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TABCONTAINER._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TABCONTAINER.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TABCONTAINER.ACTX.AFOLDER,nomap,"")>0
 Local File TABCONTAINER [TCTR]
 Local File TABCONTAINER [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =TABCONTAINER.ACTX.AFOLDER+".TABCONTAINER" [TCTR]
 Local File =TABCONTAINER.ACTX.AFOLDER+".TABCONTAINER" [AAA_]
 Local File =TABCONTAINER.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TABCONTAINER.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [TCTR] With
& [AAA_]TCTR0 = TCTRNUM
& As [LNK_]
Return

############################################################################################
### TABCONTAINER(WTCTR)
############################################################################################
Funprog  _MAJSQL_TABCONTAINER(WTCTR)
Variable Instance WTCTR Using C_TABCONTAINER
Local Integer ASTATUS,A_I,A_J
Default File [F:TCTR]
If WTCTR.ASTALIN=[V]CST_ANEW
 Call INICRE(WTCTR) From ASYRSUB
 SetInstance [F:TCTR] With WTCTR
 For J=1 To maxtab(WTCTR.AXX)
  If WTCTR.AXX(J)<>null & WTCTR.AXX(J).PRO= "DESAXX" & WTCTR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCTR,WTCTR.AXX(J).TEX,"TABCONTAINER","DESAXX",WTCTR.AXX(J).LAN,WTCTR.TCTRNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTCTR.AXX)
  If WTCTR.AXX(J)<>null & WTCTR.AXX(J).PRO= "SHOAXX" & WTCTR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCTR,WTCTR.AXX(J).TEX,"TABCONTAINER","SHOAXX",WTCTR.AXX(J).LAN,WTCTR.TCTRNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TCTR]
 If fstat
  Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTCTR.updTick = [F:TCTR]updTick
Elsif WTCTR.ASTALIN=[V]CST_ALL or WTCTR.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTCTR) From ASYRSUB
 SetInstance [F:TCTR] With WTCTR
 For J=1 To maxtab(WTCTR.AXX)
  If WTCTR.AXX(J)<>null & WTCTR.AXX(J).PRO= "DESAXX" & WTCTR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCTR,WTCTR.AXX(J).TEX,"TABCONTAINER","DESAXX",WTCTR.AXX(J).LAN,WTCTR.TCTRNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTCTR.AXX)
  If WTCTR.AXX(J)<>null & WTCTR.AXX(J).PRO= "SHOAXX" & WTCTR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCTR,WTCTR.AXX(J).TEX,"TABCONTAINER","SHOAXX",WTCTR.AXX(J).LAN,WTCTR.TCTRNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTCTR,"TABCONTAINER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TCTR]TCTR0 = [F:TCTR]TCTRNUM
 If fstat
  Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTCTR.updTick = [F:TCTR]updTick
Elsif WTCTR.ASTALIN=[V]CST_ADEL
 SetInstance [F:TCTR] With WTCTR
 For J=1 To maxtab(WTCTR.AXX)
  If WTCTR.AXX(J)<>null & WTCTR.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WTCTR,WTCTR.AXX(J).TEX,"TABCONTAINER","DESAXX",WTCTR.AXX(J).LAN,WTCTR.TCTRNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTCTR.AXX)
  If WTCTR.AXX(J)<>null & WTCTR.AXX(J).PRO= "SHOAXX"
   Call SUPTEXTRA(WTCTR,WTCTR.AXX(J).TEX,"TABCONTAINER","SHOAXX",WTCTR.AXX(J).LAN,WTCTR.TCTRNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTCTR,"TABCONTAINER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TCTR]TCTR0 = [F:TCTR]TCTRNUM
 If fstat
  Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_TABCONTAINER_IMG(WTCTR,IMG)
Variable Instance WTCTR Using C_TABCONTAINER
Value Blbfile IMG
Local Blbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TCBLOB [F:TBB]
If WTCTR.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]IMG
 Raz [TBB]
 Call INICRE(WTCTR) From ASYRSUB
 [F:TBB]CODBLB = WTCTR.TCTRNUM
 [F:TBB]IDENT1 = ""
 [F:TBB]IDENT2 = ""
 [F:TBB]IDENT3 = ""
 [F:TBB]BLOB = [L]IMG
 [L]WATYP = 'ATYPE9-1'
 [L]WCNT = 'image'
 [F:TBB]CNTTYP = [L]WATYP
 [F:TBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
 Write [F:TBB]
 If fstat
  Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WTCTR.ASTALIN=[V]CST_ADEL
 Read [F:TBB]TBB0 =WTCTR.TCTRNUM;"";"";""
 If !fstat
  Delete [F:TBB]
  If fstat
   Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WTCTR.ASTALIN=[V]CST_ALL or WTCTR.ASTALIN=[V]CST_AUPD
 If fmet WTCTR.AGETATTRIBUTE("IMG","$isLoaded")="true"
  Read [F:TBB]TBB0 =WTCTR.TCTRNUM;"";"";""
  If !fstat & [L]WEMPTY<>[L]IMG
   Call INIUPD(WTCTR) From ASYRSUB
   [F:TBB]BLOB = [L]IMG
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:TBB]CNTTYP = [L]WATYP
   [F:TBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Rewrite [F:TBB]
   If fstat
    Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]IMG
   Delete [F:TBB]
   If fstat
    Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]IMG
   Raz [TBB]
   Call INICRE(WTCTR) From ASYRSUB
   [TBB]CODBLB = WTCTR.TCTRNUM
   [TBB]IDENT1 = ""
   [TBB]IDENT2 = ""
   [TBB]IDENT3 = ""
   [F:TBB]BLOB = [L]IMG
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:TBB]CNTTYP = [L]WATYP
   [F:TBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Write [F:TBB]
   If fstat
    Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TBB]
End 0

Funprog  _MAJSQL_TABCONTAINER_TEX(WTCTR,TEX)
Variable Instance WTCTR Using C_TABCONTAINER
Value Clbfile TEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TCCLOB [F:TBC]
If WTCTR.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]TEX
 Raz [TBC]
 Call INICRE(WTCTR) From ASYRSUB
 [F:TBC]CODCLB = WTCTR.TCTRNUM
 [F:TBC]IDENT1 = ""
 [F:TBC]IDENT2 = ""
 [F:TBC]IDENT3 = ""
 [F:TBC]CLOB = [L]TEX
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 [F:TBC]CNTTYP = [L]WATYP
 Write [F:TBC]
 If fstat
  Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WTCTR.ASTALIN=[V]CST_ADEL
 Read [F:TBC]TBC0 =WTCTR.TCTRNUM;"";"";""
 If !fstat
  Delete [F:TBC]
  If fstat
   Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WTCTR.ASTALIN=[V]CST_ALL or WTCTR.ASTALIN=[V]CST_AUPD
 If fmet WTCTR.AGETATTRIBUTE("TEX","$isLoaded")="true"
  Read [F:TBC]TBC0 =WTCTR.TCTRNUM;"";"";""
  If !fstat & [L]WEMPTY<>[L]TEX
   Call INIUPD(WTCTR) From ASYRSUB
   [F:TBC]CLOB = [L]TEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   [F:TBC]CNTTYP = [L]WATYP
   Rewrite [F:TBC]
   If fstat
    Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]TEX
   Delete [F:TBC]
   If fstat
    Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]TEX
   Raz [TBC]
   Call INICRE(WTCTR) From ASYRSUB
   [TBC]CODCLB = WTCTR.TCTRNUM
   [TBC]IDENT1 = ""
   [TBC]IDENT2 = ""
   [TBC]IDENT3 = ""
   [F:TBC]CLOB = [L]TEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   [F:TBC]CNTTYP = [L]WATYP
   Write [F:TBC]
   If fstat
    Call FSTA("TCTR",WTCTR,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TBC]
End 0



