#<AdxTL>@(#)0.0.0.0 $Revision$Class Data types
# Supervisor
## CRUD-CLASSE ## ATYPE
# 2018-08-27 12:23:40 243


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(ATYPE,ASTATUS)
Variable Instance ATYPE Using C_ATYPE
Variable Integer ASTATUS

If ATYPE = null : End : Endif

Gosub _AVARIABLES From WMC00ATYPE

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_ATYPE

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(ATYPE,ASTATUS)
Variable Instance ATYPE Using C_ATYPE
Variable Integer ASTATUS

If ATYPE = null : End : Endif

Gosub AVARIABLES From WMC00ATYPE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
ATYPE.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_ATYPE
Else
 Gosub AUPDATE_ATYPE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = ATYPE.freeSnapshot
ATYPE.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPE._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPE._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPE._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If ATYPE.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATYPE.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(ATYPE.ASTALIN)<>""
 [L]A_ASTALIN = ATYPE.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(ATYPE.ACOLACT)
 If ATYPE.ACOLACT([L]A_I)<>null
  [L]A_ASTALIN = ATYPE.ACOLACT([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACOLACT([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATYPE.ACOLRUL) : # ATYPERUL -- 2
 If ATYPE.ACOLRUL(A_N2) <> null
& and ATYPE.ACOLRUL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
 For A_N3=1 To maxtab(ATYPE.ACOLRUL(A_N2).ACOLRPAR) : # ATYPERPAR -- 3
  If ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
& and ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN<>[V]CST_ANEWDEL
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(ATYPE.ACOLRUL) : # ATYPERUL -- 2
 If ATYPE.ACOLRUL(A_N2) <> null
& and ATYPE.ACOLRUL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
 For A_N3=1 To maxtab(ATYPE.ACOLRUL(A_N2).ACOLRPAR) : # ATYPERPAR -- 3
  If ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
& and ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN<>[V]CST_ANEWDEL
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(ATYPE.ACOLACT)
 If ATYPE.ACOLACT([L]A_I)<>null
  [L]A_ASTALIN = ATYPE.ACOLACT([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACOLACT([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(ATYPE.ASTALIN)<>""
 [L]A_ASTALIN = ATYPE.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_ATYPE
Trbegin [F:ATY]
 Gosub AUPDATE_ATYPE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_ATYPE
[L]A_ASTALIN = ATYPE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00ATYPE._MAJSQL_ATYPE(ATYPE))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(ATYPE.ACOLRUL)
  #-----------------------#
  For A_N3=1 To maxtab(ATYPE.ACOLRUL(A_N2).ACOLRPAR)
  Next A_N3
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
  #-----------------------#
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATYPE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If ATYPE.snapshotEnabled=1
 [L]A_RETIK = ATYPE.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATYPE.ACOLRUL)
 If ATYPE.ACOLRUL(A_N2) <> null
  Local Integer ASTATUS2
  For A_N3=1 To maxtab(ATYPE.ACOLRUL(A_N2).ACOLRPAR)
   If ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
    [L]ASTATUS2 = fmet ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3)._AUPDATE_ABORT
    If ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN=[V]CST_ADEL or ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN=[V]CST_ANEWDEL
     FreeInstance ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3)
     ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3) = null
    Endif
    [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
   Endif
  Next A_N3
  [L]ASTATUS2 = fmet ATYPE.ACOLRUL(A_N2)._AUPDATE_ABORT
  If ATYPE.ACOLRUL(A_N2).ASTALIN=[V]CST_ADEL or ATYPE.ACOLRUL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATYPE.ACOLRUL(A_N2)
   ATYPE.ACOLRUL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet ATYPE.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(ATYPE.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATYPE.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(ATYPE.ACOLACT)
 If ATYPE.ACOLACT([L]A_I)<>null
  If ATYPE.ACOLACT([L]A_I).ASTALIN=[V]CST_ADEL or ATYPE.ACOLACT([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATYPE.ACOLACT([L]A_I)
   ATYPE.ACOLACT([L]A_I) = null
  Elsif ATYPE.ACOLACT([L]A_I).ASTALIN <> [V]CST_ALL
   ATYPE.ACOLACT([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATYPE.ACOLRUL)
 If ATYPE.ACOLRUL(A_N2) <> null
  Local Integer ASTATUS2
  For A_N3=1 To maxtab(ATYPE.ACOLRUL(A_N2).ACOLRPAR)
   If ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
    [L]ASTATUS2 = fmet ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3)._AUPDATE_AFTER
    If ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN=[V]CST_ADEL or ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN=[V]CST_ANEWDEL
     FreeInstance ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3)
     ATYPE.ACOLRUL(A_N2).ACOLRPAR(A_N3) = null
    Endif
    [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
   Endif
  Next A_N3
  [L]ASTATUS2 = fmet ATYPE.ACOLRUL(A_N2)._AUPDATE_AFTER
  If ATYPE.ACOLRUL(A_N2).ASTALIN=[V]CST_ADEL or ATYPE.ACOLRUL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATYPE.ACOLRUL(A_N2)
   ATYPE.ACOLRUL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



