#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ABF1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:46:32"
A_USER  = "ADMIN"
A_STAMP = "20180827234632"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ABF1 [ABF1]
Gosub HORODAT
Local Inpbox "ABF1" From GFONCTION At A_STAMP With A_WINDPREV Mask [ABF1] As [SIM_]
Grizo [ABF1]10
Grizo [ABF1]15
Grizo [ABF1]20
Grizo [ABF1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ABF1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=74 : Y1(1)=3 : Y2(1)=5
X1(2)=1 : X2(2)=74 : Y1(2)=6 : Y2(2)=7
X1(3)=1 : X2(3)=74 : Y1(3)=8 : Y2(3)=24
Return

$ON_CODACT
Onevent CONTROL Call C_CODACT(zc) From W1ABF1
Onevent BEFORE_INPUT Call AS_CODACT(zc) From W1ABF1
Onevent AFTER_CHANGE Gosub AMM_CODACT From W1ABF1
Return

Subprog AS_CODACT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(186,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CODACT(zc) From W1ABF1
Onkey   2 Titled GBOUTS Call S_CODACT(zc) From W1ABF1
Onkey 144 Titled GBOUTP Call P_CODACT(zc) From W1ABF1
Onkey 146 Titled GBOUTA Call SA_CODACT(zc) From W1ABF1
Gosub _AFF
End

Subprog C_CODACT(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ACV","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "CODACT" : GZNUM = 4 : Endif
Gosub _AFF
End

$AMM_CODACT
Call AM_CODACT(zc)
If !mkstat & GOBJET
 zoncou = "CODACT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODACT(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCODACT)")>indice
 [M]CODACT(indice) = VALEUR
 Affzo ZCODACT(indice)
Endif
Gosub _AFF
End

Subprog S_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ACV"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CODACT(VALEUR)
Variable Char    VALEUR()
Call OBJET("ACV",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ACV"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ACV",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCODACT
Onevent BEFORE_AREA Gosub AV_ZCODACT From W1ABF1
Return

$AV_ZCODACT
If clalev([F:ACV])=0 : Local File ACTIV [ACV] : Endif
Call LECTURE("ACV",[M]CODACT(indice),"") From CONTOBJ
Call TEXTE([F:ACV]LIBACT,zc) From OBJDIV
Gosub _AFF
Return

$ON_MODULE
Onevent INIT_AREA Call D_MODULE(zc) From W1ABF1
Onevent BEFORE_INPUT Call AS_MODULE(zc) From W1ABF1
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODULE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AUZFCY
Onevent CONTROL Call C_AUZFCY(zc) From W1ABF1
Onevent INIT_AREA Call D_AUZFCY(zc) From W1ABF1
Onevent BEFORE_INPUT Call AS_AUZFCY(zc) From W1ABF1
Return

Subprog D_AUZFCY(VALEUR)
Variable Integer VALEUR
If varinit([M]AUZFCY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AUZFCY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_AUZFCY(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_AUZFCY(VALEUR) From SUBABF
If mkstat : GERR = 1 : GZONE = "AUZFCY" : GZNUM = 13998 : Endif
Gosub _AFF
End

$ON_FNC
Return

$ON_FLDFCY
Onevent CONTROL Call C_FLDFCY(zc) From W1ABF1
Return

Subprog C_FLDFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FLDFCY" : GZNUM = 27080 : Endif
Gosub _AFF
End

$ON_FLDDAT
Onevent CONTROL Call C_FLDDAT(zc) From W1ABF1
Return

Subprog C_FLDDAT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_FLDDAT(VALEUR) From SUBABF
If mkstat : GERR = 1 : GZONE = "FLDDAT" : GZNUM = 27081 : Endif
Gosub _AFF
End

$ON_NBEPU
Onevent BEFORE_INPUT Call AS_NBEPU(zc) From W1ABF1
Return

Subprog AS_NBEPU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NBEPU(VALEUR) From SUBABF
If mkstat=2
 [M]NBEPU(INDIC) = VALEUR
 Affzo NBEPU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_TYPMAJ
Onevent BEFORE_INPUT Call AS_TYPMAJ(zc) From W1ABF1
Onevent INIT_AREA Call D_TYPMAJ(zc) From W1ABF1
Onevent CONTROL Call C_TYPMAJ(zc) From W1ABF1
Return

Subprog D_TYPMAJ(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPMAJ,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPMAJ(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(7820) From COMBOS
## Action STD
Call AS_TYPMAJ(VALEUR) From SUBABF
If mkstat=2
 [M]TYPMAJ(INDIC) = VALEUR
 Affzo TYPMAJ(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,7820,1))))
Endif
If !mkstat
 Discombo 0 From TYPMAJ(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From TYPMAJ(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_TYPMAJ(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_NBRABF
Onevent INIT_AREA Call D_NBRABF(zc) From W1ABF1
Onevent BEFORE_INPUT Call AS_NBRABF(zc) From W1ABF1
Return

Subprog D_NBRABF(VALEUR)
Variable Integer VALEUR
If varinit([M]NBRABF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_NBRABF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


