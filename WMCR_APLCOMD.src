#<AdxTL>@(#)0.0.0.0 $Revision$Class Sequence number definition
# Supervisor
## CRUD-CLASSE ## APLCOMD
# 2018-08-27 12:21:59 782


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File APLCOM [ACM_]

If !SILENCE : Call TRACE("2 --> Local Instance C_APLCOMD") From ASYRCOM : Endif
Local Instance APLCOMD Using C_APLCOMD

If !SILENCE : Call TRACE("3 --> New Instance C_APLCOMD") From ASYRCOM : Endif
APLCOMD = NewInstance C_APLCOMD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ACM_]COMCLE First
If !fstat
 If !SILENCE : Call TRACE("Call program read of APLCOMD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet APLCOMD.AREAD([ACM_]COMNOM,[ACM_]COMIND))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("APLCOMD.COMNOM ="-num$(APLCOMD.COMNOM)) From ASYRCOM
 Call TRACE("APLCOMD.COMIND ="-num$(APLCOMD.COMIND)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(APLCOMD.AKEYS)
  Call TRACE("-"-num$(I)-":"-APLCOMD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ACM_]
FreeGroup APLCOMD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(APLCOMD,ACLE,ASTATUS,_ETAG)
Variable Instance APLCOMD Using C_APLCOMD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COMNOM(12)
Local Shortint _COMIND
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COMNOM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_COMIND = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File APLCOM [ACM]
Default File [F:ACM]
Read [F:ACM]COMCLE = [L]_COMNOM;[L]_COMIND
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ACM]UPDTICK)>0
 [L]_ETAG = num$([F:ACM]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(APLCOMD,ACLE,ASTATUS)
Variable Instance APLCOMD Using C_APLCOMD
Value Char ACLE
Variable Integer ASTATUS
Local Char _COMNOM(12)
Local Shortint _COMIND
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COMNOM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_COMIND = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet APLCOMD.AREAD([L]_COMNOM,[L]_COMIND))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(APLCOMD,_COMNOM,_COMIND,ASTATUS)
Variable Instance APLCOMD Using C_APLCOMD
Value Char _COMNOM
Value Shortint _COMIND
Variable Integer ASTATUS

If APLCOMD = null : End : Endif

Gosub AVARIABLES From WMC00APLCOMD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If APLCOMD.APARENT=null
 [L]A_I = APLCOMD.freeSnapshot
 APLCOMD.snapshotEnabled = 0
 APLCOMD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & APLCOMD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet APLCOMD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If APLCOMD.APARENT=null
 APLCOMD.snapshotEnabled = 1
 APLCOMD.setAccessorEnabled = 1
Endif
LogicClose File [ACM]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet APLCOMD._ACTION_PARAM("AREAD_BEFORE",[L]_COMNOM,[L]_COMIND))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:ACM]
Read [F:ACM]COMCLE = [L]_COMNOM;[L]_COMIND
If fstat
[L]A_ERROR = [L]_COMNOM+"~"+num$([L]_COMIND)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(APLCOMD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:ACM]AUUID)>0 & [F:ACM]AUUID=NullUuid
 [F:ACM]AUUID = getUuid
Endif
SetInstance APLCOMD With [F:ACM]
APLCOMD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet APLCOMD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



