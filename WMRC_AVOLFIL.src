#<AdxTL>@(#)0.0.0.0 $Revision$Class File
# Supervisor
## CRUD-CLASSE ## AVOLFIL
# 2018-08-27 13:04:09 304


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(AVOLFIL,ASTATUS)
Variable Instance AVOLFIL Using R_AVOLFIL
Variable Integer ASTATUS

If AVOLFIL = null : End : Endif

Gosub AVARIABLES From WMR00AVOLFIL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_AVOLFIL
Else
 Gosub AINSERT_AVOLFIL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = AVOLFIL.freeSnapshot
AVOLFIL.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
AVOLFIL.ASTALIN = [V]CST_ANEW
AVOLFIL.AVOLFIL.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet AVOLFIL._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet AVOLFIL._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet AVOLFIL._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If AVOLFIL.AVOLFIL.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AVOLFIL.AVOLFIL.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.AVOLFIL.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.AVOLFIL.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_AVOLFIL
Gosub AINSERT_AVOLFIL
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(AVOLFIL.AVOLFIL.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 AVOLFIL.AVOLFIL.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_AVOLFIL
[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.AVOLFIL._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AVOLFIL.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
$_AINSERT_ABORT
If AVOLFIL.snapshotEnabled=1
 [L]A_RETIK = AVOLFIL.revertUpdTick
Endif
[L]ASTATUS = max(fmet AVOLFIL.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



