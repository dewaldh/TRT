#<AdxTL>@(#)0.0.0.0 $Revision$Class Currency rate
# Supervisor
## CRUD-CLASSE ## TABCHANGE
# 2018-08-27 13:36:35 780


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(TABCHANGE,ASTATUS)
Variable Instance TABCHANGE Using R_TABCHANGE
Variable Integer ASTATUS

If TABCHANGE = null : End : Endif

Gosub AVARIABLES From WMR00TABCHANGE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet TABCHANGE.ACTX.AGETAFCRIGHT(TABCHANGE,"COURDEV",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet TABCHANGE.ACTX.AGETAFCRIGHTD(TABCHANGE,"COURDEV",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_TABCHANGE
Else
 Gosub ADELETE_TABCHANGE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
TABCHANGE.ASTALIN = [V]CST_ADEL
TABCHANGE.TCH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If TABCHANGE.TCH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
TABCHANGE.TCH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.TCH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.TCH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_TABCHANGE
Gosub ADELETE_TABCHANGE
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_TABCHANGE
[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.TCH._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGE.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If TABCHANGE.snapshotEnabled=1
 [L]A_RETIK = TABCHANGE.revertUpdTick
Endif
[L]ASTATUS = max(fmet TABCHANGE.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



