#<AdxTL>@(#)0.0.0.0 $Revision$Class Daylight saving time
# Supervisor
## CRUD-CLASSE ## TIMEADJUST
# 2018-08-27 12:54:12 886


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TIMEADJUST [TAD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TIMEADJUST") From ASYRCOM : Endif
Local Instance TIMEADJUST Using C_TIMEADJUST

If !SILENCE : Call TRACE("3 --> New Instance C_TIMEADJUST") From ASYRCOM : Endif
TIMEADJUST = NewInstance C_TIMEADJUST AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TAD_]TAD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TIMEADJUST") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.AREAD([TAD_]COD,[TAD_]STRDAT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TIMEADJUST.COD ="-num$(TIMEADJUST.COD)) From ASYRCOM
 Call TRACE("TIMEADJUST.STRDAT ="-num$(TIMEADJUST.STRDAT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TIMEADJUST.AKEYS)
  Call TRACE("-"-num$(I)-":"-TIMEADJUST.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TAD_]
FreeGroup TIMEADJUST
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TIMEADJUST,ACLE,ASTATUS,_ETAG)
Variable Instance TIMEADJUST Using C_TIMEADJUST
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COD(30)
Local Date _STRDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STRDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TIMEADJUST [TAD]
Default File [F:TAD]
Read [F:TAD]TAD0 = [L]_COD;[L]_STRDAT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TAD]UPDTICK)>0
 [L]_ETAG = num$([F:TAD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TIMEADJUST,ACLE,ASTATUS)
Variable Instance TIMEADJUST Using C_TIMEADJUST
Value Char ACLE
Variable Integer ASTATUS
Local Char _COD(30)
Local Date _STRDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STRDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.AREAD([L]_COD,[L]_STRDAT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TIMEADJUST,_COD,_STRDAT,ASTATUS)
Variable Instance TIMEADJUST Using C_TIMEADJUST
Value Char _COD
Value Date _STRDAT
Variable Integer ASTATUS

If TIMEADJUST = null : End : Endif

Gosub AVARIABLES From WMC00TIMEADJUST
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TIMEADJUST.APARENT=null
 [L]A_I = TIMEADJUST.freeSnapshot
 TIMEADJUST.snapshotEnabled = 0
 TIMEADJUST.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TIMEADJUST.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TIMEADJUST.APARENT=null
 TIMEADJUST.snapshotEnabled = 1
 TIMEADJUST.setAccessorEnabled = 1
Endif
LogicClose File [TAD] ,[TTRS] ,[TTRE]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST._ACTION_PARAM("AREAD_BEFORE",[L]_COD,[L]_STRDAT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TAD]
Read [F:TAD]TAD0 = [L]_COD;[L]_STRDAT
If fstat
[L]A_ERROR = [L]_COD+"~"+num$([L]_STRDAT)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TIMEADJUST,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TAD]AUUID)>0 & [F:TAD]AUUID=NullUuid
 [F:TAD]AUUID = getUuid
Endif
SetInstance TIMEADJUST With [F:TAD]
TIMEADJUST.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:TTRS]
 [L]A_N2=1
 Read [F:TTRS]TTR0 = [F:TAD]TTRCODSTR
 If !fstat
  Callmet TIMEADJUST.TTRSTR(A_N2).AREAD([F:TTRS]COD)
  TIMEADJUST.TTRSTR(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.TTRSTR(A_N2).ASETATTRIBUTE("COD","$namProParent","TTRCODSTR"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.TTRSTR(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"TTRSTR")+" : "+num$([F:TAD]TTRCODSTR)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"TIMETRANS"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:TTRE]
 [L]A_N2=1
 Read [F:TTRE]TTR0 = [F:TAD]TTRCODEND
 If !fstat
  Callmet TIMEADJUST.TTREND(A_N2).AREAD([F:TTRE]COD)
  TIMEADJUST.TTREND(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.TTREND(A_N2).ASETATTRIBUTE("COD","$namProParent","TTRCODEND"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.TTREND(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"TTREND")+" : "+num$([F:TAD]TTRCODEND)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"TIMETRANS"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TIMEADJUST" & ZONE="DES" & IDENT1=TIMEADJUST.COD & IDENT2=""
 Call ASETTEXTRA(TIMEADJUST.AXX,TIMEADJUST.AllocGrp(),"DES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TIMEADJUST.AXX(maxtab(TIMEADJUST.AXX)).FLG = 0
Next AXX
If !len(fmet TIMEADJUST.AGETTEXTRA("DES"))
 Call ASETTEXTRA(TIMEADJUST.AXX,TIMEADJUST.AllocGrp(),"DES",
& fmet TIMEADJUST.AGETTEXTRALAN("DES",TIMEADJUST.ACTX.AFOLD.ALANGDEF),
& TIMEADJUST.ACTX.LAN) From ASYRSUB
Endif

Return



