#<AdxTL>@(#)0.0.0.0 $Revision$Class Project after-sales steps
# Sage X3 supervisor
## CRUD-CLASSE ## OPPORSTA
# 2018-06-20 06:48:26 659


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File OPPORSTA [OSA_]

If !SILENCE : Call TRACE("2 --> Local Instance C_OPPORSTA") From ASYRCOM : Endif
Local Instance OPPORSTA Using C_OPPORSTA

If !SILENCE : Call TRACE("3 --> New Instance C_OPPORSTA") From ASYRCOM : Endif
OPPORSTA = NewInstance C_OPPORSTA AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [OSA_]OSA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of OPPORSTA") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet OPPORSTA.AREAD([OSA_]OPPNUM,[OSA_]STELINX))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("OPPORSTA.OPPNUM ="-num$(OPPORSTA.OPPNUM)) From ASYRCOM
 Call TRACE("OPPORSTA.STELINX ="-num$(OPPORSTA.STELINX)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(OPPORSTA.AKEYS)
  Call TRACE("-"-num$(I)-":"-OPPORSTA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [OSA_]
FreeGroup OPPORSTA
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(OPPORSTA,ACLE,ASTATUS,_ETAG)
Variable Instance OPPORSTA Using C_OPPORSTA
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(20)
Local Integer _STELINX
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STELINX = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File OPPORSTA [OSA]
Default File [F:OSA]
Read [F:OSA]OSA0 = [L]_OPPNUM;[L]_STELINX
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:OSA]UPDTICK)>0
 [L]_ETAG = num$([F:OSA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(OPPORSTA,ACLE,ASTATUS)
Variable Instance OPPORSTA Using C_OPPORSTA
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(20)
Local Integer _STELINX
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STELINX = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet OPPORSTA.AREAD([L]_OPPNUM,[L]_STELINX))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(OPPORSTA,_OPPNUM,_STELINX,ASTATUS)
Variable Instance OPPORSTA Using C_OPPORSTA
Value Char _OPPNUM
Value Integer _STELINX
Variable Integer ASTATUS

If OPPORSTA = null : End : Endif

Gosub AVARIABLES From WMC00OPPORSTA
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If OPPORSTA.APARENT=null
 [L]A_I = OPPORSTA.freeSnapshot
 OPPORSTA.snapshotEnabled = 0
 OPPORSTA.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & OPPORSTA.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet OPPORSTA._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If OPPORSTA.APARENT=null
 OPPORSTA.snapshotEnabled = 1
 OPPORSTA.setAccessorEnabled = 1
Endif
LogicClose File [OSA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet OPPORSTA._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_STELINX))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:OSA]
Read [F:OSA]OSA0 = [L]_OPPNUM;[L]_STELINX
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+num$([L]_STELINX)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(OPPORSTA,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:OSA]AUUID)>0 & [F:OSA]AUUID=NullUuid
 [F:OSA]AUUID = getUuid
Endif
SetInstance OPPORSTA With [F:OSA]
OPPORSTA.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet OPPORSTA.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



