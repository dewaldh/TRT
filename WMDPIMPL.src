#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PIMPL

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".PIMPL" : If clalev([F:PIM])=0 : Local File =OUVTAB [PIM] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AX1])=0 : Local File =OUVTAB [AX1] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AX2])=0 : Local File =OUVTAB [AX2] : Endif
OUVTAB = "Link [PIM]"
Link [PIM] With
& [AX1]AXX0 = "PIMPL";"PIMDESAXX";GLANGUE;[F:PIM]PIMNUM;"",
& [AX2]AXX0 = "PIMPL";"PIMDESAXX1";GLANGUE;[F:PIM]PIMNUM;""
& As [LNK_]
& Order By Key CLE = [PIM]PIMNUM
FILTRE = ""
Return

$FERME
If clalev([F:PIM]) : Close local File [PIM] : Endif
If clalev([F:AX1]) : Close local File [AX1] : Endif
If clalev([F:AX2]) : Close local File [AX2] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..1)
Local Integer DTYP(1..1)
Local Integer NBDCLE
NBDCLE = 1
DCLE(1) = "PIMNUM"
DTYP(1) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]PIMNUM)>0
 [F:AAA_]PIMNUM = [F:PIM]PIMNUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]PIMNUM=[F:PIM]PIMNUM"

End

$MAJFLD
### PIMNUM
[L]FLD="PIMNUM"
[L]FORMULE='[F:PIM]PIMNUM'
If dim([F:AAA_]PIMNUM)>0
 [F:AAA_]PIMNUM = [F:PIM]PIMNUM
Endif

### PIMDESAXX
[L]FLD="PIMDESAXX"
[L]FORMULE='[F:AX1]TEXTE'
If dim([F:AAA_]PIMDESAXX)>0
 [F:AAA_]PIMDESAXX = [F:AX1]TEXTE
Endif

### PIMDESAX1
[L]FLD="PIMDESAX1"
[L]FORMULE='[F:AX2]TEXTE'
If dim([F:AAA_]PIMDESAX1)>0
 [F:AAA_]PIMDESAX1 = [F:AX2]TEXTE
Endif

### OPPNUM
[L]FLD="OPPNUM"
[L]FORMULE='[F:PIM]OPPNUM'
If dim([F:AAA_]OPPNUM)>0
 [F:AAA_]OPPNUM = [F:PIM]OPPNUM
Endif

### OPPNUM1
[L]FLD="OPPNUM1"
[L]FORMULE='[F:PIM]OPPNUM'
If dim([F:AAA_]OPPNUM1)>0
 [F:AAA_]OPPNUM1 = [F:PIM]OPPNUM
Endif

### PBUCOD
[L]FLD="PBUCOD"
[L]FORMULE='[F:PIM]PBUCOD'
If dim([F:AAA_]PBUCOD)>0
 [F:AAA_]PBUCOD = [F:PIM]PBUCOD
Endif

### OPPNUM2
[L]FLD="OPPNUM2"
[L]FORMULE='[F:PIM]OPPNUM'
If dim([F:AAA_]OPPNUM2)>0
 [F:AAA_]OPPNUM2 = [F:PIM]OPPNUM
Endif

### TASCOD
[L]FLD="TASCOD"
[L]FORMULE='[F:PIM]TASCOD'
If dim([F:AAA_]TASCOD)>0
 [F:AAA_]TASCOD = [F:PIM]TASCOD
Endif

### FCY
[L]FLD="FCY"
[L]FORMULE='[F:PIM]FCY'
If dim([F:AAA_]FCY)>0
 [F:AAA_]FCY = [F:PIM]FCY
Endif

### PIMTYP
[L]FLD="PIMTYP"
[L]FORMULE='[F:PIM]PIMTYP'
If dim([F:AAA_]PIMTYP)>0
 K   = max(1,val(num$([F:PIM]PIMTYP)))
 [F:AAA_]PIMTYP = mess(K,2254,1)
Endif

### PIMSTA
[L]FLD="PIMSTA"
[L]FORMULE='[F:PIM]PIMSTA'
If dim([F:AAA_]PIMSTA)>0
 K   = max(1,val(num$([F:PIM]PIMSTA)))
 [F:AAA_]PIMSTA = mess(K,1,1)
Endif

### FINRSPFCY
[L]FLD="FINRSPFCY"
[L]FORMULE='[F:PIM]FINRSPFCY'
If dim([F:AAA_]FINRSPFCY)>0
 [F:AAA_]FINRSPFCY = [F:PIM]FINRSPFCY
Endif

### CPY
[L]FLD="CPY"
[L]FORMULE='[F:PIM]CPY'
If dim([F:AAA_]CPY)>0
 [F:AAA_]CPY = [F:PIM]CPY
Endif

### OPPSTATE
[L]FLD="OPPSTATE"
[L]FORMULE='[F:PIM]OPPSTATE'
If dim([F:AAA_]OPPSTATE)>0
 K   = max(1,val(num$([F:PIM]OPPSTATE)))
 [F:AAA_]OPPSTATE = mess(K,2249,1)
Endif


Return

