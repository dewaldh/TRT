#<AdxTL>@(#)%I%
# Supervisor
# Inquiry MCC

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:50:12"
A_USER  = "ADMIN"
A_STAMP = "20180828005012"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(14542,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSMCCSTD"
PROGSPE    = "CNSMCCSPE"
CBOITE     = "DCNSMCC"
BOITE      = "FCNSMCC"
NOMMSK(0)  = "CONSMCC1"
ABMSK(0)   = "MCC1"
NOMMSK(1)  = "CONSMCC2"
ABMSK(1)   = "MCC2"
CMEMO      = "mcc"
CNOMMSK    = "CRITMCC"
CABMSK     = "CMCC"
CODMSKDEF  = "STD"
MAGNETO    = 0
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:MAC])=0 : Local File MACHINES     [MAC] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CMCC]
 When  0 : Local Mask =NOMMSK(0) [MCC1]
 When  1 : Local Mask =NOMMSK(1) [MCC2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CMCC]
 When  0 : Grizo [MCC1]
 When  1 : Grizo [MCC2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CMCC]BPCNUM)>0
 Grizo [CMCC]BPCNUM
Endif
If dim([M:CMCC]BPACOD)>0
 Grizo [CMCC]BPACOD
Endif
If dim([M:CMCC]FIE)>0
 Grizo [CMCC]FIE
Endif
If dim([M:CMCC]CNSMCCCPY)>0
 Grizo [CMCC]CNSMCCCPY
Endif
If dim([M:CMCC]CNSMCCFCY)>0
 Grizo [CMCC]CNSMCCFCY
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CMCC])>0 : Close Local Mask [CMCC] : Endif
 When  0 : If clalev([M:MCC1])>0 : Close Local Mask [MCC1] : Endif
 When  1 : If clalev([M:MCC2])>0 : Close Local Mask [MCC2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CMCC]
 When  0 : Default Mask [MCC1]
 When  1 : Default Mask [MCC2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CMCC]
 When  0 : Raz [M:MCC1]
 When  1 : Raz [M:MCC2]
Endcase
Return

$CRITENT
If dim([M:CMCC]BPCNUM)>0 & dim([M:MCC1]BPCNUM)>0
 [M:CMCC]BPCNUM = [M:MCC1]BPCNUM
Endif
If dim([M:CMCC]BPACOD)>0 & dim([M:MCC1]BPACOD)>0
 [M:CMCC]BPACOD = [M:MCC1]BPACOD
Endif
If dim([M:CMCC]FIE)>0 & dim([M:MCC1]FIE)>0
 [M:CMCC]FIE = [M:MCC1]FIE
Endif
If dim([M:CMCC]CNSMCCCPY)>0 & dim([M:MCC1]CNSMCCCPY)>0
 [M:CMCC]CNSMCCCPY = [M:MCC1]CNSMCCCPY
Endif
If dim([M:CMCC]CNSMCCFCY)>0 & dim([M:MCC1]CNSMCCFCY)>0
 [M:CMCC]CNSMCCFCY = [M:MCC1]CNSMCCFCY
Endif
Return

$ENTCRIT
If dim([M:CMCC]BPCNUM)>0 & dim([M:MCC1]BPCNUM)>0
[M:MCC1]BPCNUM = [M:CMCC]BPCNUM
Endif
If dim([M:CMCC]BPACOD)>0 & dim([M:MCC1]BPACOD)>0
[M:MCC1]BPACOD = [M:CMCC]BPACOD
Endif
If dim([M:CMCC]FIE)>0 & dim([M:MCC1]FIE)>0
[M:MCC1]FIE = [M:CMCC]FIE
Endif
If dim([M:CMCC]CNSMCCCPY)>0 & dim([M:MCC1]CNSMCCCPY)>0
[M:MCC1]CNSMCCCPY = [M:CMCC]CNSMCCCPY
Endif
If dim([M:CMCC]CNSMCCFCY)>0 & dim([M:MCC1]CNSMCCFCY)>0
[M:MCC1]CNSMCCFCY = [M:CMCC]CNSMCCFCY
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSMCC2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "MCC"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MCC2]MACNUM(nolign - 1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MAC","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:MCC2]MACNUM(nolign - 1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSMCC2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


