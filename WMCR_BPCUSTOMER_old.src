#<AdxTL>@(#)0.0.0.0 $Revision$Class Customers
# Sage X3 supervisor
## CRUD-CLASSE ## BPCUSTOMER
# 2018-06-20 06:37:06 510


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPCUSTOMER [BPC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BPCUSTOMER") From ASYRCOM : Endif
Local Instance BPCUSTOMER Using C_BPCUSTOMER

If !SILENCE : Call TRACE("3 --> New Instance C_BPCUSTOMER") From ASYRCOM : Endif
BPCUSTOMER = NewInstance C_BPCUSTOMER AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPC_]BPC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPCUSTOMER") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.AREAD([BPC_]BPCNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPCUSTOMER.BPCNUM ="-num$(BPCUSTOMER.BPCNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPCUSTOMER.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPCUSTOMER.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPC_]
FreeGroup BPCUSTOMER
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPCUSTOMER,ACLE,ASTATUS,_ETAG)
Variable Instance BPCUSTOMER Using C_BPCUSTOMER
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPCNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BPCUSTOMER [BPC]
Default File [F:BPC]
Read [F:BPC]BPC0 = [L]_BPCNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPC]UPDTICK)>0
 [L]_ETAG = num$([F:BPC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPCUSTOMER,ACLE,ASTATUS)
Variable Instance BPCUSTOMER Using C_BPCUSTOMER
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPCNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.AREAD([L]_BPCNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPCUSTOMER,_BPCNUM,ASTATUS)
Variable Instance BPCUSTOMER Using C_BPCUSTOMER
Value Char _BPCNUM
Variable Integer ASTATUS

If BPCUSTOMER = null : End : Endif

Gosub AVARIABLES From WMC00BPCUSTOMER
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPCUSTOMER.APARENT=null
 [L]A_I = BPCUSTOMER.freeSnapshot
 BPCUSTOMER.snapshotEnabled = 0
 BPCUSTOMER.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPCUSTOMER.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPCUSTOMER.APARENT=null
 BPCUSTOMER.snapshotEnabled = 1
 BPCUSTOMER.setAccessorEnabled = 1
Endif
LogicClose File [BPC] ,[BPR] ,[BPD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER._ACTION_PARAM("AREAD_BEFORE",[L]_BPCNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BPC]
Read [F:BPC]BPC0 = [L]_BPCNUM
If fstat
[L]A_ERROR = [L]_BPCNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BPCUSTOMER,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:BPC]AUUID)>0 & [F:BPC]AUUID=NullUuid
 [F:BPC]AUUID = getUuid
Endif
If dim([F:BPC]CLAORDTEX1)>0: Raz [F:BPC]CLAORDTEX1: Endif
If dim([F:BPC]CLAINVTEX1)>0: Raz [F:BPC]CLAINVTEX1: Endif
SetInstance BPCUSTOMER With [F:BPC]
BPCUSTOMER.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BPR]
 [L]A_N2=1
 Read [F:BPR]BPR0 = [F:BPC]BPCNUM
 If !fstat
  Callmet BPCUSTOMER.BPR(A_N2).AREAD([F:BPR]BPRNUM)
  BPCUSTOMER.BPR(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.BPR(A_N2).ASETATTRIBUTE("BPRNUM","$isDisabled","true"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.BPR(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"BPR")+" : "+num$([F:BPC]BPCNUM)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"BPARTNER"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BPD]
 [L]A_N2=0
 For [F:BPD]BPD0 Where BPCNUM=[F:BPC]BPCNUM
  [L]A_N2 +=1
  BPCUSTOMER.BPD(A_N2) = NewInstance  C_BPDLVCUST(BPCUSTOMER.ACTX,NullUuid,[L]A_N2,BPCUSTOMER,"BPD") AllocGroup BPCUSTOMER
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.BPD(A_N2).ADDINSTANCE_BOUND)
  Callmet BPCUSTOMER.BPD(A_N2).AREAD([F:BPD]BPCNUM,[F:BPD]BPAADD)
  BPCUSTOMER.BPD(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.BPD(A_N2).ASETATTRIBUTE("BPCNUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.BPD(A_N2).ASETATTRIBUTE("BPAADD","$isDisabled","true"))
 Next BPD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]A_NEWCOL = 0
For [L]A_I=1 To 6
 If ([F:BPC]DAYMON([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  BPCUSTOMER.C_DAYMON(A_NEWCOL) = NewInstance  C_BPCUSTOMER_C_DAYMON(BPCUSTOMER.ACTX,NullUuid,[L]A_I,BPCUSTOMER,"C_DAYMON") AllocGroup BPCUSTOMER
  BPCUSTOMER.C_DAYMON(A_NEWCOL).DAYMON = [F:BPC]DAYMON([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.C_DAYMON(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 20
 If ([F:BPC]DIE([L]A_I-1)<>"" or [F:BPC]CCE([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  BPCUSTOMER.C_DIE(A_NEWCOL) = NewInstance  C_BPCUSTOMER_C_DIE(BPCUSTOMER.ACTX,NullUuid,[L]A_I,BPCUSTOMER,"C_DIE") AllocGroup BPCUSTOMER
  BPCUSTOMER.C_DIE(A_NEWCOL).DIE = [F:BPC]DIE([L]A_I-1)
  BPCUSTOMER.C_DIE(A_NEWCOL).CCE = [F:BPC]CCE([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 30
 If ([F:BPC]INVDTA([L]A_I-1)<>0 or [F:BPC]INVDTAAMT([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  BPCUSTOMER.C_INVDTAAMT(A_NEWCOL) = NewInstance  C_BPCUSTOMER_C_INVDTAAMT(BPCUSTOMER.ACTX,NullUuid,[L]A_I,BPCUSTOMER,"C_INVDTAAMT") AllocGroup BPCUSTOMER
  BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).INVDTA = [F:BPC]INVDTA([L]A_I-1)
  BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).INVDTAAMT = [F:BPC]INVDTAAMT([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [AXX] Where CODFIC="SFOOTINV" & ZONE="SHOAXX" & IDENT1=num$(BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).INVDTA) & IDENT2=""
   Call ASETTEXTRA(BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AXX,BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AllocGrp(),"INVDTADES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AXX(maxtab(BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AXX)).FLG = 0
  Next AXX
  If !len(fmet BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AGETTEXTRA("INVDTADES"))
   Call ASETTEXTRA(BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AXX,BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AllocGrp(),"INVDTADES",
& fmet BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).AGETTEXTRALAN("INVDTADES",BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).ACTX.AFOLD.ALANGDEF),
& BPCUSTOMER.C_INVDTAAMT(A_NEWCOL).ACTX.LAN) From ASYRSUB
  Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 2
 If ([F:BPC]REP([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  BPCUSTOMER.C_REP(A_NEWCOL) = NewInstance  C_BPCUSTOMER_C_REP(BPCUSTOMER.ACTX,NullUuid,[L]A_I,BPCUSTOMER,"C_REP") AllocGroup BPCUSTOMER
  BPCUSTOMER.C_REP(A_NEWCOL).REP = [F:BPC]REP([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.C_REP(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 5
 [L]A_NEWCOL += 1
 BPCUSTOMER.C_TSCCOD(A_NEWCOL) = NewInstance  C_BPCUSTOMER_C_TSCCOD(BPCUSTOMER.ACTX,NullUuid,[L]A_I,BPCUSTOMER,"C_TSCCOD") AllocGroup BPCUSTOMER
 BPCUSTOMER.C_TSCCOD(A_NEWCOL).TSCCOD = [F:BPC]TSCCOD([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.C_TSCCOD(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



