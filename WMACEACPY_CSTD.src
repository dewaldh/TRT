#<AdxTL>@(#)0.0.0.0 $Revision$
# WMACEACPY_CSTD
# 2019-03-08 01:39:21 086

$PROPERTIES
Case ACTION
 When Default
Endcase
Return

$EVENTS
Case AEVENT
 When Default
Endcase
Return

$METHODS
Case [L]AMETHOD
 When "AREAD" : Gosub AREAD
 When "AGETINDEX" : Gosub AGETINDEX
 When "AGETVALCHAR" : Gosub AGETVAL
 When "AGETVALNUM" : Gosub AGETVAL
 When "AGETVALDAT" : Gosub AGETVAL
 When "AGETVALDEC" : Gosub AGETVAL
 When Default
Endcase
Return


$AREAD
If [L]CURPTH<>"" : Return : Endif
Local Integer A_I
Local Instance _WACTX Using C_WMACONTEXT
_WACTX = cast(this.APARENT,C_WMACONTEXT)
A_I = maxtab(this.ACOL)+1
this.isReadonly = 0
this.ACOL(A_I) = NewInstance  C_ACPY (_WACTX,NullUuid,[L]A_I,this,"ACOL") AllocGroup this
[L]ASTATUS = fmet this.ACOL(A_I).AREAD([L]CPY)
If [L]ASTATUS>=[V]CST_AERROR
 [L]ARET_VALUE = -1
 this.ACOL(A_I).CPY=[L]CPY
Else
 [L]ARET_VALUE = [L]A_I
 this.ACOL(A_I).APARENT = this
Endif
this.ACOL(A_I).isReadonly = 1
this.isReadonly = 1
Return

#------------------------------------------------------------------------------#
$AGETINDEX
Local Integer A_I
[L]ARET_VALUE = -1
For A_I=1 To maxtab(this.ACOL)
 If this.ACOL(A_I)<>null & this.ACOL(A_I).CPY=[L]CPY
 [L]ARET_VALUE= [L]A_I : Break
 Endif
Next
If [L]ARET_VALUE = -1
 [L]ASTATUS = fmet this.AREAD([L]CPY)
 If [L]ASTATUS<[V]CST_AOK : Return : Endif
 [L]ARET_VALUE = [L]ASTATUS
 Endif
Return

#------------------------------------------------------------------------------#
$AGETVAL
Local Integer ASTATUS,A_I,A_J
[L]ASTATUS = fmet this.AGETINDEX([L]CPY)
If [L]ASTATUS<[V]CST_AOK
 [L]ASTATUS = fmet this.AREAD([L]CPY)
 If [L]ASTATUS<[V]CST_AOK : Return : Endif
Endif
If this.ACOL([L]ASTATUS)<>null
 If evalue("dim(this.ACOL([L]ASTATUS)."+[L]ACODPRO+")")>0
  Assign "[L]ARET_VALUE" With evalue("this.ACOL([L]ASTATUS)."+[L]ACODPRO)
  [L]A_J = 1
 Endif
 If [L]A_J=0
  [L]ASTATUS = fmet this.ACOL([L]ASTATUS).ASETERROR("",[L]ACODPRO-":"-mess(38,140,1),[V]CST_AERROR) : # Propriété inexistante dans la classe
 Endif
Endif
Return

