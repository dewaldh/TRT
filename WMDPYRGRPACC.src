#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PYRGRPACC

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GACCGRUPYM" : If clalev([F:GRY])=0 : Local File =OUVTAB [GRY] : Endif
OUVTAB = GDOSSIER+".GACCPYM" : If clalev([F:GYM])=0 : Local File =OUVTAB [GYM] : Endif
OUVTAB = "Link [GRY]"
Link [GRY] With
& [GYM]GYM0 = [F:GRY]PYM
& As [LNK_]
& Where [F:GRY]LIN=1
& Order By Key CLE = [GRY]PYM;[GRY]GRU;[GRY]LIN
FILTRE = ""
Return

$FERME
If clalev([F:GRY]) : Close local File [GRY] : Endif
If clalev([F:GYM]) : Close local File [GYM] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "GRU"
DTYP(1) =  7
DCLE(2) = "PYM"
DTYP(2) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]GRU)>0
 [F:AAA_]GRU = [F:GRY]GRU
Endif
If dim([F:AAA_]PYM)>0
 [F:AAA_]PYM = [F:GRY]PYM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### PYM
[L]FLD="PYM"
[L]FORMULE='[F:GRY]PYM'
If dim([F:AAA_]PYM)>0
 [F:AAA_]PYM = [F:GRY]PYM
Endif

### DESPYM
[L]FLD="DESPYM"
[L]FORMULE='func BICPT.GETPYRDES(1,[F:GRY]PYM)'
If dim([F:AAA_]DESPYM)>0
 [F:AAA_]DESPYM = func BICPT.GETPYRDES(1,[F:GRY]PYM)
Endif

### GRU
[L]FLD="GRU"
[L]FORMULE='[F:GRY]GRU'
If dim([F:AAA_]GRU)>0
 [F:AAA_]GRU = [F:GRY]GRU
Endif

### LIN
[L]FLD="LIN"
[L]FORMULE='[F:GRY]LIN'
If dim([F:AAA_]LIN)>0
 [F:AAA_]LIN = [F:GRY]LIN
Endif

### COA
[L]FLD="COA"
[L]FORMULE='[F:GRY]COA'
If dim([F:AAA_]COA)>0
 [F:AAA_]COA = [F:GRY]COA
Endif

### ACC
[L]FLD="ACC"
[L]FORMULE='[F:GRY]ACC'
If dim([F:AAA_]ACC)>0
 [F:AAA_]ACC = [F:GRY]ACC
Endif


Return

