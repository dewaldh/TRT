#<AdxTL>@(#)0.0.0.0 $Revision$Class Project
# Supervisor
## CRUD-CLASSE ## OPPOR
# 2018-11-29 01:16:55 584

Gosub TEST From WMCR_OPPOR : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,OPPNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# OPPOR : OPPOR
# OPPORCRM : OPPOR OPPORCRM
# OPPORCPP : OPPOR OPPORCPP
# OPPORSBB : OPPOR OPPORSBB
# PIMPL : OPPOR PIMPL
# OPPORPJM : OPPOR OPPORPJM
# YRMA : OPPOR YRELMAST
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet OPPOR._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5,A_N6,A_S6,A_N7,A_S7
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = OPPOR.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(OPPOR.ACTX.AFOLDER,nomap,"")>0
 Local File OPPOR [OPP]
 Local File OPPORCRM [CRM]
 Local File OPPORCPP [CPP]
 Local File OPPORSBB [SBB]
 Local File PIMPL [PIMPL]
 Local File OPPORPJM [PJM]
 Local File YRELMAST [YRMA]
 Local File ATEXTRA [AXX]
Else
 Local File =OPPOR.ACTX.AFOLDER+".OPPOR" [OPP]
 Local File =OPPOR.ACTX.AFOLDER+".OPPORCRM" [CRM]
 Local File =OPPOR.ACTX.AFOLDER+".OPPORCPP" [CPP]
 Local File =OPPOR.ACTX.AFOLDER+".OPPORSBB" [SBB]
 Local File =OPPOR.ACTX.AFOLDER+".PIMPL" [PIMPL]
 Local File =OPPOR.ACTX.AFOLDER+".OPPORPJM" [PJM]
 Local File =OPPOR.ACTX.AFOLDER+".YRELMAST" [YRMA]
 Local File =OPPOR.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet OPPOR.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [OPP] With
& [CRM]OPPCRM0 = [F:OPP]OPPNUM,
& [CPP]OCP0 = [F:OPP]OPPNUM,
& [SBB]OBB0 = [F:OPP]OPPNUM,
& [PIMPL]PIM0 ~= [F:OPP]OPPNUM,
& [PJM]OPPPJM0 = [F:OPP]OPPNUM,
& [YRMA]YRMA0 = [F:OPP]YGUID
& As [LNK_]
Return

############################################################################################
### OPPOR(WOPP)
############################################################################################
Funprog  _MAJSQL_OPPOR(WOPP)
Variable Instance WOPP Using C_OPPOR
Local Integer ASTATUS,A_I,A_J
Default File [F:OPP]
If WOPP.ASTALIN=[V]CST_ANEW
 Call INICRE(WOPP) From ASYRSUB
 SetInstance [F:OPP] With WOPP
 Write [F:OPP]
 If fstat
  Call FSTA("OPP",WOPP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WOPP.updTick = [F:OPP]updTick
Elsif WOPP.ASTALIN=[V]CST_ALL or WOPP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WOPP) From ASYRSUB
 SetInstance [F:OPP] With WOPP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WOPP,"OPPOR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:OPP]OPP0 = [F:OPP]OPPNUM
 If fstat
  Call FSTA("OPP",WOPP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WOPP.updTick = [F:OPP]updTick
Elsif WOPP.ASTALIN=[V]CST_ADEL
 SetInstance [F:OPP] With WOPP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WOPP,"OPPOR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:OPP]OPP0 = [F:OPP]OPPNUM
 If fstat
  Call FSTA("OPP",WOPP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### OPPORCRM(WCRM)
############################################################################################
Funprog  _MAJSQL_OPPORCRM(WCRM)
Variable Instance WCRM Using C_OPPORCRM
Local Integer ASTATUS,A_I,A_J
Default File [F:CRM]
If WCRM.ASTALIN=[V]CST_ANEW
 Call INICRE(WCRM) From ASYRSUB
 SetInstance [F:CRM] With WCRM
 Write [F:CRM]
 If fstat
  Call FSTA("CRM",WCRM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCRM.updTick = [F:CRM]updTick
Elsif WCRM.ASTALIN=[V]CST_ALL or WCRM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCRM) From ASYRSUB
 SetInstance [F:CRM] With WCRM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCRM,"OPPORCRM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CRM]OPPCRM0 = [F:CRM]OPPNUM
 If fstat
  Call FSTA("CRM",WCRM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCRM.updTick = [F:CRM]updTick
Elsif WCRM.ASTALIN=[V]CST_ADEL
 SetInstance [F:CRM] With WCRM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCRM,"OPPORCRM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CRM]OPPCRM0 = [F:CRM]OPPNUM
 If fstat
  Call FSTA("CRM",WCRM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### OPPORCPP(WCPP)
############################################################################################
Funprog  _MAJSQL_OPPORCPP(WCPP)
Variable Instance WCPP Using C_OPPORCPP
Local Integer ASTATUS,A_I,A_J
Default File [F:CPP]
If WCPP.ASTALIN=[V]CST_ANEW
 Call INICRE(WCPP) From ASYRSUB
 SetInstance [F:CPP] With WCPP
 Write [F:CPP]
 If fstat
  Call FSTA("CPP",WCPP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCPP.updTick = [F:CPP]updTick
Elsif WCPP.ASTALIN=[V]CST_ALL or WCPP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCPP) From ASYRSUB
 SetInstance [F:CPP] With WCPP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCPP,"OPPORCPP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CPP]OCP0 = [F:CPP]OPPNUM;[F:CPP]CPP
 If fstat
  Call FSTA("CPP",WCPP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCPP.updTick = [F:CPP]updTick
Elsif WCPP.ASTALIN=[V]CST_ADEL
 SetInstance [F:CPP] With WCPP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCPP,"OPPORCPP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CPP]OCP0 = [F:CPP]OPPNUM;[F:CPP]CPP
 If fstat
  Call FSTA("CPP",WCPP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### OPPORSBB(WSBB)
############################################################################################
Funprog  _MAJSQL_OPPORSBB(WSBB)
Variable Instance WSBB Using C_OPPORSBB
Local Integer ASTATUS,A_I,A_J
Default File [F:SBB]
If WSBB.ASTALIN=[V]CST_ANEW
 Call INICRE(WSBB) From ASYRSUB
 SetInstance [F:SBB] With WSBB
 Write [F:SBB]
 If fstat
  Call FSTA("SBB",WSBB,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSBB.updTick = [F:SBB]updTick
Elsif WSBB.ASTALIN=[V]CST_ALL or WSBB.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSBB) From ASYRSUB
 SetInstance [F:SBB] With WSBB
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSBB,"OPPORSBB")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SBB]OBB0 = [F:SBB]OPPNUM;[F:SBB]SBBPJT
 If fstat
  Call FSTA("SBB",WSBB,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSBB.updTick = [F:SBB]updTick
Elsif WSBB.ASTALIN=[V]CST_ADEL
 SetInstance [F:SBB] With WSBB
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSBB,"OPPORSBB")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SBB]OBB0 = [F:SBB]OPPNUM;[F:SBB]SBBPJT
 If fstat
  Call FSTA("SBB",WSBB,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### PIMPL(WPIMPL)
############################################################################################
Funprog  _MAJSQL_PIMPL(WPIMPL)
Variable Instance WPIMPL Using C_PIMPL
Local Integer ASTATUS,A_I,A_J
Default File [F:PIMPL]
If WPIMPL.ASTALIN=[V]CST_ANEW
 Call INICRE(WPIMPL) From ASYRSUB
 SetInstance [F:PIMPL] With WPIMPL
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAXX" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAX1" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:PIMPL]
 If fstat
  Call FSTA("PIMPL",WPIMPL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPIMPL.updTick = [F:PIMPL]updTick
Elsif WPIMPL.ASTALIN=[V]CST_ALL or WPIMPL.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPIMPL) From ASYRSUB
 SetInstance [F:PIMPL] With WPIMPL
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAXX" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAX1" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPIMPL,"PIMPL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PIMPL]PIM0 = [F:PIMPL]PIMNUM
 If fstat
  Call FSTA("PIMPL",WPIMPL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPIMPL.updTick = [F:PIMPL]updTick
Elsif WPIMPL.ASTALIN=[V]CST_ADEL
 SetInstance [F:PIMPL] With WPIMPL
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAXX"
   Call SUPTEXTRA(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAX1"
   Call SUPTEXTRA(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPIMPL,"PIMPL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PIMPL]PIM0 = [F:PIMPL]PIMNUM
 If fstat
  Call FSTA("PIMPL",WPIMPL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### OPPORPJM(WPJM)
############################################################################################
Funprog  _MAJSQL_OPPORPJM(WPJM)
Variable Instance WPJM Using C_OPPORPJM
Local Integer ASTATUS,A_I,A_J
Default File [F:PJM]
If WPJM.ASTALIN=[V]CST_ANEW
 Call INICRE(WPJM) From ASYRSUB
 SetInstance [F:PJM] With WPJM
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WPJM.CDIE)
   If WPJM.CDIE([L]A_I)<>null & !find(WPJM.CDIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WPJM.CDIE([L]A_I).AORDER=[L]A_J
    [F:PJM]DIE([L]A_J-1) = WPJM.CDIE([L]A_I).DIE
    [F:PJM]CCE([L]A_J-1) = WPJM.CDIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:PJM]
 If fstat
  Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPJM.updTick = [F:PJM]updTick
Elsif WPJM.ASTALIN=[V]CST_ALL or WPJM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPJM) From ASYRSUB
 SetInstance [F:PJM] With WPJM
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WPJM.CDIE)
   If WPJM.CDIE([L]A_I)<>null & !find(WPJM.CDIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WPJM.CDIE([L]A_I).AORDER=[L]A_J
    [F:PJM]DIE([L]A_J-1) = WPJM.CDIE([L]A_I).DIE
    [F:PJM]CCE([L]A_J-1) = WPJM.CDIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPJM,"OPPORPJM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PJM]OPPPJM0 = [F:PJM]OPPNUM
 If fstat
  Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPJM.updTick = [F:PJM]updTick
Elsif WPJM.ASTALIN=[V]CST_ADEL
 SetInstance [F:PJM] With WPJM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPJM,"OPPORPJM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PJM]OPPPJM0 = [F:PJM]OPPNUM
 If fstat
  Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YRELMAST(WYRMA)
############################################################################################
Funprog  _MAJSQL_YRELMAST(WYRMA)
Variable Instance WYRMA Using C_YRMA
Local Integer ASTATUS,A_I,A_J
Default File [F:YRMA]
If WYRMA.ASTALIN=[V]CST_ANEW
 Call INICRE(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 Write [F:YRMA]
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ALL or WYRMA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ADEL
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_OPPORPJM_OPPDESTEX(WPJM,OPPDESTEX)
Variable Instance WPJM Using C_OPPORPJM
Value Clbfile OPPDESTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WPJM.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]OPPDESTEX
 Raz [PJCB]
 Call INICRE(WPJM) From ASYRSUB
 [F:PJCB]CODBLB = "OPPORPJM"
 [F:PJCB]IDENT1 = "OPPDESTEX"
 [F:PJCB]IDENT2 = WPJM.OPPNUM
 [F:PJCB]IDENT3 = AVOID.ACHAR
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]OPPDESTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WPJM.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="OPPORPJM";"OPPDESTEX";WPJM.OPPNUM;AVOID.ACHAR;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WPJM.ASTALIN=[V]CST_ALL or WPJM.ASTALIN=[V]CST_AUPD
 If fmet WPJM.AGETATTRIBUTE("OPPDESTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="OPPORPJM";"OPPDESTEX";WPJM.OPPNUM;AVOID.ACHAR;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]OPPDESTEX
   Call INIUPD(WPJM) From ASYRSUB
   [F:PJCB]CLOB = [L]OPPDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]OPPDESTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]OPPDESTEX
   Raz [PJCB]
   Call INICRE(WPJM) From ASYRSUB
   [PJCB]CODBLB = "OPPORPJM"
   [PJCB]IDENT1 = "OPPDESTEX"
   [PJCB]IDENT2 = WPJM.OPPNUM
   [PJCB]IDENT3 = AVOID.ACHAR
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]OPPDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0

Funprog  _MAJSQL_OPPORPJM_OPPCOMTEX(WPJM,OPPCOMTEX)
Variable Instance WPJM Using C_OPPORPJM
Value Clbfile OPPCOMTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WPJM.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]OPPCOMTEX
 Raz [PJCB]
 Call INICRE(WPJM) From ASYRSUB
 [F:PJCB]CODBLB = "OPPORPJM"
 [F:PJCB]IDENT1 = "OPPCOMTEX"
 [F:PJCB]IDENT2 = WPJM.OPPNUM
 [F:PJCB]IDENT3 = AVOID.ACHAR
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]OPPCOMTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WPJM.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="OPPORPJM";"OPPCOMTEX";WPJM.OPPNUM;AVOID.ACHAR;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WPJM.ASTALIN=[V]CST_ALL or WPJM.ASTALIN=[V]CST_AUPD
 If fmet WPJM.AGETATTRIBUTE("OPPCOMTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="OPPORPJM";"OPPCOMTEX";WPJM.OPPNUM;AVOID.ACHAR;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]OPPCOMTEX
   Call INIUPD(WPJM) From ASYRSUB
   [F:PJCB]CLOB = [L]OPPCOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]OPPCOMTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]OPPCOMTEX
   Raz [PJCB]
   Call INICRE(WPJM) From ASYRSUB
   [PJCB]CODBLB = "OPPORPJM"
   [PJCB]IDENT1 = "OPPCOMTEX"
   [PJCB]IDENT2 = WPJM.OPPNUM
   [PJCB]IDENT3 = AVOID.ACHAR
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]OPPCOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("PJM",WPJM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0



