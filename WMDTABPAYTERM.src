#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule TABPAYTERM

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".TABPAYTERM" : If clalev([F:TPT])=0 : Local File =OUVTAB [TPT] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AXX])=0 : Local File =OUVTAB [AXX] : Endif
OUVTAB = "Link [TPT]"
Link [TPT] With
& [AXX]AXX0 = "TABPAYTERM";"DESAXX";GLANGUE;[F:TPT]PTE;[F:TPT]LEG
& As [LNK_]
& Order By Key CLE = [TPT]PTE;[TPT]LEG;[TPT]PTELIN
FILTRE = ""
Return

$FERME
If clalev([F:TPT]) : Close local File [TPT] : Endif
If clalev([F:AXX]) : Close local File [AXX] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "PTE"
DTYP(1) =  7
DCLE(2) = "LEG"
DTYP(2) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:TPT]PTE
Endif
If dim([F:AAA_]LEG)>0
 [F:AAA_]LEG = [F:TPT]LEG
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### PTE
[L]FLD="PTE"
[L]FORMULE='[F:TPT]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:TPT]PTE
Endif

### LEG
[L]FLD="LEG"
[L]FORMULE='[F:TPT]LEG'
If dim([F:AAA_]LEG)>0
 [F:AAA_]LEG = [F:TPT]LEG
Endif

### PTEDES
[L]FLD="PTEDES"
[L]FORMULE='[F:AXX]TEXTE'
If dim([F:AAA_]PTEDES)>0
 [F:AAA_]PTEDES = [F:AXX]TEXTE
Endif


Return

