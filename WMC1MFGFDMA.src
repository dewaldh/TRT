#<AdxTL>@(#)0.0.0.0 $Revision$Class Work order FDMA
# Sage X3 supervisor
## ACLA-CLASSE ## MFGFDMA
# 2018-03-26 00:32:51 804


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : MFGNUM Work order number ( Field VCR 20)
####################################################################

$SET_MFGNUM
If [L]_AOLDVAL<>this.MFGNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFGNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFGNUM
 Gosub PROPAGATE_MFGNUM
Endif
Return

$INIT_MFGNUM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MFGNUM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFGNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFGNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFGNUM
[L]CURPRO = "MFGNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MFGNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFGNUM
[L]CURPRO = "MFGNUM"
If vireblc(this.MFGNUM,2)<>vireblc(format$("K:20X",this.MFGNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MFGNUM
[L]CURPRO = "MFGNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFGNUM
[L]CURPRO = "MFGNUM"
Return

$PROPAGATE_MFGNUM
this.isReadonly = 0
[L]CURPRO = "MFGNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFGNUM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGNUM"
$_LNKPRO_MFGNUM
Return


####################################################################
# 2 : MFGLIN Line no. ( Field L 8)
####################################################################

$SET_MFGLIN
If [L]_AOLDVAL<>this.MFGLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFGLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFGLIN
 Gosub PROPAGATE_MFGLIN
Endif
Return

$INIT_MFGLIN
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MFGLIN
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFGLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFGLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFGLIN
[L]CURPRO = "MFGLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFGLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFGLIN
[L]CURPRO = "MFGLIN"
Return

$_AOTHERS_MFGLIN
[L]CURPRO = "MFGLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFGLIN
[L]CURPRO = "MFGLIN"
Return

$PROPAGATE_MFGLIN
this.isReadonly = 0
[L]CURPRO = "MFGLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFGLIN
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGLIN"
$_LNKPRO_MFGLIN
Return


####################################################################
# 3 : MFGFCY Production site ( Field FCY 5)
####################################################################

$SET_MFGFCY
If [L]_AOLDVAL<>this.MFGFCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFGFCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFGFCY
 Gosub PROPAGATE_MFGFCY
Endif
Return

$INIT_MFGFCY
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGFCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MFGFCY
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGFCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFGFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFGFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFGFCY
[L]CURPRO = "MFGFCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MFGFCY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFGFCY
[L]CURPRO = "MFGFCY"
If vireblc(this.MFGFCY,2)<>vireblc(format$("K:5c",this.MFGFCY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MFGFCY
[L]CURPRO = "MFGFCY"
If vireblc(this.MFGFCY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFCY.ACTRLREF(this,"MFGFCY",this.MFGFCY,this.MFGFCY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.MFGFCY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFGFCY
[L]CURPRO = "MFGFCY"
Return

$PROPAGATE_MFGFCY
this.isReadonly = 0
[L]CURPRO = "MFGFCY"
Gosub _LNKPRO_MFGFCY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFGFCY
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "MFGFCY"
$_LNKPRO_MFGFCY
If vireblc(this.MFGFCY,2)<>""
 # Link FACILITY
 Local File FACILITY [WFCY]
 Read [F:WFCY]FCY0 = this.MFGFCY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MFGFCY","$title",[F:WFCY]FCYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MFGFCY","$description",[F:WFCY]FCYNAM)
 Endif
 LogicClose File [WFCY]
Endif
Return

$_ALOADATTRIBUTE_MFGFCY
[L]ASTATUS = fmet this.ASETATTRIBUTE("MFGFCY","$isMandatory","true")
Return


####################################################################
# 4 : FDMATIM FDMA time ( Field A 10)
####################################################################

$SET_FDMATIM
If [L]_AOLDVAL<>this.FDMATIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FDMATIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FDMATIM
 Gosub PROPAGATE_FDMATIM
Endif
Return

$INIT_FDMATIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "FDMATIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FDMATIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "FDMATIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FDMATIM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FDMATIM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FDMATIM
[L]CURPRO = "FDMATIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FDMATIM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FDMATIM
[L]CURPRO = "FDMATIM"
Return

$_AOTHERS_FDMATIM
[L]CURPRO = "FDMATIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FDMATIM
[L]CURPRO = "FDMATIM"
Return

$PROPAGATE_FDMATIM
this.isReadonly = 0
[L]CURPRO = "FDMATIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FDMATIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "FDMATIM"
$_LNKPRO_FDMATIM
Return


####################################################################
# 6 : TWD Weekly structure ( Field TWD 3)
####################################################################

$SET_TWD
If [L]_AOLDVAL<>this.TWD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TWD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TWD
 Gosub PROPAGATE_TWD
Endif
Return

$INIT_TWD
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "TWD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TWD
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "TWD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TWD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TWD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TWD
[L]CURPRO = "TWD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TWD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TWD
[L]CURPRO = "TWD"
If vireblc(this.TWD,2)<>vireblc(format$("K:3c",this.TWD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TWD
[L]CURPRO = "TWD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TWD
[L]CURPRO = "TWD"
Return

$PROPAGATE_TWD
this.isReadonly = 0
[L]CURPRO = "TWD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TWD
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "TWD"
$_LNKPRO_TWD
Return


####################################################################
# 7 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 8 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 9 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 10 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 11 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0MFGFDMA
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




