#<AdxTL>@(#)0.0.0.0 $Revision$Class Folders
# Supervisor
## ACLA-CLASSE ## ADOSSIER
# 2018-08-27 12:20:07 292


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : DOSSIER Folder ( Field ADS 10)
####################################################################

$SET_DOSSIER
If [L]_AOLDVAL<>this.DOSSIER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DOSSIER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DOSSIER
 Gosub PROPAGATE_DOSSIER
Endif
Return

$INIT_DOSSIER
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSSIER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DOSSIER
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSSIER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DOSSIER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DOSSIER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DOSSIER
[L]CURPRO = "DOSSIER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DOSSIER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DOSSIER
[L]CURPRO = "DOSSIER"
If vireblc(this.DOSSIER,2)<>vireblc(format$("KTD:A9B",this.DOSSIER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DOSSIER
[L]CURPRO = "DOSSIER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DOSSIER
[L]CURPRO = "DOSSIER"
Return

$PROPAGATE_DOSSIER
this.isReadonly = 0
[L]CURPRO = "DOSSIER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DOSSIER
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSSIER"
$_LNKPRO_DOSSIER
Return


####################################################################
# 2 : NOMDOS Name ( Field DES 30)
####################################################################

$SET_NOMDOS
If [L]_AOLDVAL<>this.NOMDOS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NOMDOS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NOMDOS
 Gosub PROPAGATE_NOMDOS
Endif
Return

$INIT_NOMDOS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "NOMDOS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NOMDOS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "NOMDOS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NOMDOS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NOMDOS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NOMDOS
[L]CURPRO = "NOMDOS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NOMDOS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NOMDOS
[L]CURPRO = "NOMDOS"
If vireblc(this.NOMDOS,2)<>vireblc(format$("K:30X",this.NOMDOS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_NOMDOS
[L]CURPRO = "NOMDOS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NOMDOS
[L]CURPRO = "NOMDOS"
Return

$PROPAGATE_NOMDOS
this.isReadonly = 0
[L]CURPRO = "NOMDOS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NOMDOS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "NOMDOS"
$_LNKPRO_NOMDOS
Return


####################################################################
# 3 : VOLUME Volume ( Field A 1)
####################################################################

$SET_VOLUME
If [L]_AOLDVAL<>this.VOLUME
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VOLUME
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VOLUME
 Gosub PROPAGATE_VOLUME
Endif
Return

$INIT_VOLUME
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "VOLUME"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VOLUME
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "VOLUME"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VOLUME                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VOLUME                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VOLUME
[L]CURPRO = "VOLUME"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VOLUME,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VOLUME
[L]CURPRO = "VOLUME"
Return

$_AOTHERS_VOLUME
[L]CURPRO = "VOLUME"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VOLUME
[L]CURPRO = "VOLUME"
Return

$PROPAGATE_VOLUME
this.isReadonly = 0
[L]CURPRO = "VOLUME"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VOLUME
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "VOLUME"
$_LNKPRO_VOLUME
Return


####################################################################
# 4 : DOSREF Reference folder ( Field ADS 10)
####################################################################

$SET_DOSREF
If [L]_AOLDVAL<>this.DOSREF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DOSREF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DOSREF
 Gosub PROPAGATE_DOSREF
Endif
Return

$INIT_DOSREF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSREF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DOSREF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSREF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DOSREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DOSREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DOSREF
[L]CURPRO = "DOSREF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DOSREF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DOSREF
[L]CURPRO = "DOSREF"
If vireblc(this.DOSREF,2)<>vireblc(format$("KTD:A9B",this.DOSREF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DOSREF
[L]CURPRO = "DOSREF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DOSREF
[L]CURPRO = "DOSREF"
Return

$PROPAGATE_DOSREF
this.isReadonly = 0
[L]CURPRO = "DOSREF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DOSREF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSREF"
$_LNKPRO_DOSREF
Return

$_ALOADATTRIBUTE_DOSREF
[L]ASTATUS = fmet this.ASETATTRIBUTE("DOSREF","$isMandatory","true")
Return


####################################################################
# 5 : DOSCOP Copy folder ( Field ADS 10)
####################################################################

$SET_DOSCOP
If [L]_AOLDVAL<>this.DOSCOP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DOSCOP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DOSCOP
 Gosub PROPAGATE_DOSCOP
Endif
Return

$INIT_DOSCOP
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSCOP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DOSCOP
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSCOP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DOSCOP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DOSCOP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DOSCOP
[L]CURPRO = "DOSCOP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DOSCOP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DOSCOP
[L]CURPRO = "DOSCOP"
If vireblc(this.DOSCOP,2)<>vireblc(format$("KTD:A9B",this.DOSCOP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DOSCOP
[L]CURPRO = "DOSCOP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DOSCOP
[L]CURPRO = "DOSCOP"
Return

$PROPAGATE_DOSCOP
this.isReadonly = 0
[L]CURPRO = "DOSCOP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DOSCOP
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSCOP"
$_LNKPRO_DOSCOP
Return

$_ALOADATTRIBUTE_DOSCOP
[L]ASTATUS = fmet this.ASETATTRIBUTE("DOSCOP","$isMandatory","true")
Return


####################################################################
# 6 : DOSHIS Purge folder ( Field A 10)
####################################################################

$SET_DOSHIS
If [L]_AOLDVAL<>this.DOSHIS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DOSHIS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DOSHIS
 Gosub PROPAGATE_DOSHIS
Endif
Return

$INIT_DOSHIS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSHIS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DOSHIS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSHIS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DOSHIS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DOSHIS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DOSHIS
[L]CURPRO = "DOSHIS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DOSHIS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DOSHIS
[L]CURPRO = "DOSHIS"
Return

$_AOTHERS_DOSHIS
[L]CURPRO = "DOSHIS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DOSHIS
[L]CURPRO = "DOSHIS"
Return

$PROPAGATE_DOSHIS
this.isReadonly = 0
[L]CURPRO = "DOSHIS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DOSHIS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "DOSHIS"
$_LNKPRO_DOSHIS
Return


####################################################################
# 7 : TYPDBA Database type ( Field Local menu number 57)
####################################################################

$SET_TYPDBA
If [L]_AOLDVAL<>this.TYPDBA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPDBA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPDBA
 Gosub PROPAGATE_TYPDBA
Endif
Return

$INIT_TYPDBA
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TYPDBA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPDBA=0 and fmet this.AGETATTRIBUTE("TYPDBA","$isMandatory")="true"
 this.TYPDBA = 1
Endif
Return
 
$CONTROL_TYPDBA
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TYPDBA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPDBA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPDBA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPDBA
[L]CURPRO = "TYPDBA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPDBA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPDBA
[L]CURPRO = "TYPDBA"
If this.TYPDBA<0 or this.TYPDBA>len(mess(0,57,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"57 ->"-num$(this.TYPDBA)-mess(99,123,1)):  Return : # Local menu "57 -> Invalid option
Endif
Return

$_AOTHERS_TYPDBA
[L]CURPRO = "TYPDBA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPDBA
[L]CURPRO = "TYPDBA"
Return

$PROPAGATE_TYPDBA
this.isReadonly = 0
[L]CURPRO = "TYPDBA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPDBA
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TYPDBA"
$_LNKPRO_TYPDBA
Return


####################################################################
# 8 : GRPFIL File group ( Field Local menu number 1)
####################################################################

$SET_GRPFIL
If [L]_AOLDVAL<>this.GRPFIL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GRPFIL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GRPFIL
 Gosub PROPAGATE_GRPFIL
Endif
Return

$INIT_GRPFIL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "GRPFIL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GRPFIL=0 and fmet this.AGETATTRIBUTE("GRPFIL","$isMandatory")="true"
 this.GRPFIL = 1
Endif
Return
 
$CONTROL_GRPFIL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "GRPFIL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GRPFIL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GRPFIL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GRPFIL
[L]CURPRO = "GRPFIL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GRPFIL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GRPFIL
[L]CURPRO = "GRPFIL"
If this.GRPFIL<0 or this.GRPFIL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.GRPFIL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_GRPFIL
[L]CURPRO = "GRPFIL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GRPFIL
[L]CURPRO = "GRPFIL"
Return

$PROPAGATE_GRPFIL
this.isReadonly = 0
[L]CURPRO = "GRPFIL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GRPFIL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "GRPFIL"
$_LNKPRO_GRPFIL
Return


####################################################################
# 9 : SIZDAT Database size ( Field L 8)
####################################################################

$SET_SIZDAT
If [L]_AOLDVAL<>this.SIZDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIZDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIZDAT
 Gosub PROPAGATE_SIZDAT
Endif
Return

$INIT_SIZDAT
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SIZDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIZDAT
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SIZDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIZDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIZDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIZDAT
[L]CURPRO = "SIZDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SIZDAT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIZDAT
[L]CURPRO = "SIZDAT"
Return

$_AOTHERS_SIZDAT
[L]CURPRO = "SIZDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIZDAT
[L]CURPRO = "SIZDAT"
Return

$PROPAGATE_SIZDAT
this.isReadonly = 0
[L]CURPRO = "SIZDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIZDAT
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SIZDAT"
$_LNKPRO_SIZDAT
Return


####################################################################
# 10 : SIZIDX Index size ( Field L 8)
####################################################################

$SET_SIZIDX
If [L]_AOLDVAL<>this.SIZIDX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIZIDX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIZIDX
 Gosub PROPAGATE_SIZIDX
Endif
Return

$INIT_SIZIDX
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SIZIDX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIZIDX
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SIZIDX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIZIDX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIZIDX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIZIDX
[L]CURPRO = "SIZIDX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SIZIDX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIZIDX
[L]CURPRO = "SIZIDX"
Return

$_AOTHERS_SIZIDX
[L]CURPRO = "SIZIDX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIZIDX
[L]CURPRO = "SIZIDX"
Return

$PROPAGATE_SIZIDX
this.isReadonly = 0
[L]CURPRO = "SIZIDX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIZIDX
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SIZIDX"
$_LNKPRO_SIZIDX
Return


####################################################################
# 13 : LANREF Translation ref. ( Field Local menu number 1)
####################################################################

$SET_LANREF
If [L]_AOLDVAL<>this.LANREF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LANREF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LANREF
 Gosub PROPAGATE_LANREF
Endif
Return

$INIT_LANREF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "LANREF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LANREF=0 and fmet this.AGETATTRIBUTE("LANREF","$isMandatory")="true"
 this.LANREF = 1
Endif
Return
 
$CONTROL_LANREF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "LANREF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LANREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LANREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LANREF
[L]CURPRO = "LANREF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LANREF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LANREF
[L]CURPRO = "LANREF"
If this.LANREF<0 or this.LANREF>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.LANREF)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_LANREF
[L]CURPRO = "LANREF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LANREF
[L]CURPRO = "LANREF"
Return

$PROPAGATE_LANREF
this.isReadonly = 0
[L]CURPRO = "LANREF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LANREF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "LANREF"
$_LNKPRO_LANREF
Return


####################################################################
# 14 : NBRLAN No. ( Field C 1)
####################################################################

$SET_NBRLAN
If [L]_AOLDVAL<>this.NBRLAN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBRLAN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBRLAN
 Gosub PROPAGATE_NBRLAN
Endif
Return

$INIT_NBRLAN
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "NBRLAN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBRLAN
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "NBRLAN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBRLAN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBRLAN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBRLAN
[L]CURPRO = "NBRLAN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBRLAN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBRLAN
[L]CURPRO = "NBRLAN"
Return

$_AOTHERS_NBRLAN
[L]CURPRO = "NBRLAN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBRLAN
[L]CURPRO = "NBRLAN"
Return

$PROPAGATE_NBRLAN
this.isReadonly = 0
[L]CURPRO = "NBRLAN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBRLAN
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "NBRLAN"
$_LNKPRO_NBRLAN
Return


####################################################################
# 15 : OPTINI Copy options ( Field Local menu number 1)
####################################################################

$SET_OPTINI
If [L]_AOLDVAL<>this.OPTINI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OPTINI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OPTINI
 Gosub PROPAGATE_OPTINI
Endif
Return

$INIT_OPTINI
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "OPTINI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.OPTINI=0 and fmet this.AGETATTRIBUTE("OPTINI","$isMandatory")="true"
 this.OPTINI = 1
Endif
Return
 
$CONTROL_OPTINI
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "OPTINI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OPTINI                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OPTINI                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OPTINI
[L]CURPRO = "OPTINI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OPTINI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OPTINI
[L]CURPRO = "OPTINI"
If this.OPTINI<0 or this.OPTINI>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.OPTINI)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_OPTINI
[L]CURPRO = "OPTINI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OPTINI
[L]CURPRO = "OPTINI"
Return

$PROPAGATE_OPTINI
this.isReadonly = 0
[L]CURPRO = "OPTINI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OPTINI
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "OPTINI"
$_LNKPRO_OPTINI
Return


####################################################################
# 16 : STRDAT Start date ( Field D)
####################################################################

$SET_STRDAT
If [L]_AOLDVAL<>this.STRDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STRDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STRDAT
 Gosub PROPAGATE_STRDAT
Endif
Return

$INIT_STRDAT
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "STRDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_STRDAT
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "STRDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STRDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STRDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STRDAT
[L]CURPRO = "STRDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STRDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STRDAT
[L]CURPRO = "STRDAT"
Return

$_AOTHERS_STRDAT
[L]CURPRO = "STRDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STRDAT
[L]CURPRO = "STRDAT"
Return

$PROPAGATE_STRDAT
this.isReadonly = 0
[L]CURPRO = "STRDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STRDAT
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "STRDAT"
$_LNKPRO_STRDAT
Return


####################################################################
# 17 : RPTCUR Inter-company currency ( Field CUR 3)
####################################################################

$SET_RPTCUR
If [L]_AOLDVAL<>this.RPTCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RPTCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RPTCUR
 Gosub PROPAGATE_RPTCUR
Endif
Return

$INIT_RPTCUR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "RPTCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RPTCUR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "RPTCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RPTCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RPTCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RPTCUR
[L]CURPRO = "RPTCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.RPTCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RPTCUR
[L]CURPRO = "RPTCUR"
If vireblc(this.RPTCUR,2)<>vireblc(format$("K:3c",this.RPTCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_RPTCUR
[L]CURPRO = "RPTCUR"
If vireblc(this.RPTCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"RPTCUR",this.RPTCUR,this.RPTCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.RPTCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RPTCUR
[L]CURPRO = "RPTCUR"
Return

$PROPAGATE_RPTCUR
this.isReadonly = 0
[L]CURPRO = "RPTCUR"
Gosub _LNKPRO_RPTCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RPTCUR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "RPTCUR"
$_LNKPRO_RPTCUR
If vireblc(this.RPTCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.RPTCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("RPTCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("RPTCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("RPTCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("RPTCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("RPTCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 18 : LANDEF Default language ( Field LAN 3)
####################################################################

$SET_LANDEF
If [L]_AOLDVAL<>this.LANDEF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LANDEF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LANDEF
 Gosub PROPAGATE_LANDEF
Endif
Return

$INIT_LANDEF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "LANDEF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LANDEF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "LANDEF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LANDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LANDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LANDEF
[L]CURPRO = "LANDEF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LANDEF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LANDEF
[L]CURPRO = "LANDEF"
If vireblc(this.LANDEF,2)<>vireblc(format$("KTD:3B",this.LANDEF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LANDEF
[L]CURPRO = "LANDEF"
If vireblc(this.LANDEF,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPLAN.ACTRLREF(this,"LANDEF",this.LANDEF,this.LANDEF,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.LANDEF<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LANDEF
[L]CURPRO = "LANDEF"
Return

$PROPAGATE_LANDEF
this.isReadonly = 0
[L]CURPRO = "LANDEF"
Gosub _LNKPRO_LANDEF
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LANDEF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "LANDEF"
$_LNKPRO_LANDEF
If vireblc(this.LANDEF,2)<>""
 # Link TABLAN
 Local File TABLAN [WTLA]
 Read [F:WTLA]TLA0 = this.LANDEF
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABLAN" & ZONE="INTSHO" & IDENT1=[F:WTLA]LAN & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LANDEF","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABLAN" & ZONE="INTDES" & IDENT1=[F:WTLA]LAN & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LANDEF","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTLA]
Endif
Return


####################################################################
# 19 : CRYDEF Default country ( Field CRY 3)
####################################################################

$SET_CRYDEF
If [L]_AOLDVAL<>this.CRYDEF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRYDEF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRYDEF
 Gosub PROPAGATE_CRYDEF
Endif
Return

$INIT_CRYDEF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CRYDEF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CRYDEF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CRYDEF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRYDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRYDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRYDEF
[L]CURPRO = "CRYDEF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CRYDEF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRYDEF
[L]CURPRO = "CRYDEF"
If vireblc(this.CRYDEF,2)<>vireblc(format$("K:3c",this.CRYDEF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CRYDEF
[L]CURPRO = "CRYDEF"
If vireblc(this.CRYDEF,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCRY.ACTRLREF(this,"CRYDEF",this.CRYDEF,this.CRYDEF,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CRYDEF<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRYDEF
[L]CURPRO = "CRYDEF"
Return

$PROPAGATE_CRYDEF
this.isReadonly = 0
[L]CURPRO = "CRYDEF"
Gosub _LNKPRO_CRYDEF
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRYDEF
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CRYDEF"
$_LNKPRO_CRYDEF
If vireblc(this.CRYDEF,2)<>""
 # Link TABCOUNTRY
 Local File TABCOUNTRY [WTCY]
 Read [F:WTCY]TCY0 = this.CRYDEF
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCOUNTRY" & ZONE="CRYDES" & IDENT1=[F:WTCY]CRY & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CRYDEF","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCOUNTRY" & ZONE="CRYDES" & IDENT1=[F:WTCY]CRY & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CRYDEF","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTCY]
Endif
Return


####################################################################
# 20 : TRCFIL Log file ( Field A 10)
####################################################################

$SET_TRCFIL
If [L]_AOLDVAL<>this.TRCFIL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRCFIL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRCFIL
 Gosub PROPAGATE_TRCFIL
Endif
Return

$INIT_TRCFIL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TRCFIL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRCFIL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TRCFIL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRCFIL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRCFIL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRCFIL
[L]CURPRO = "TRCFIL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TRCFIL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRCFIL
[L]CURPRO = "TRCFIL"
Return

$_AOTHERS_TRCFIL
[L]CURPRO = "TRCFIL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRCFIL
[L]CURPRO = "TRCFIL"
Return

$PROPAGATE_TRCFIL
this.isReadonly = 0
[L]CURPRO = "TRCFIL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRCFIL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TRCFIL"
$_LNKPRO_TRCFIL
Return


####################################################################
# 21 : TSTFLG Test flag ( Field Local menu number 1)
####################################################################

$SET_TSTFLG
If [L]_AOLDVAL<>this.TSTFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TSTFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TSTFLG
 Gosub PROPAGATE_TSTFLG
Endif
Return

$INIT_TSTFLG
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TSTFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TSTFLG=0 and fmet this.AGETATTRIBUTE("TSTFLG","$isMandatory")="true"
 this.TSTFLG = 1
Endif
Return
 
$CONTROL_TSTFLG
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TSTFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TSTFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TSTFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TSTFLG
[L]CURPRO = "TSTFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TSTFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TSTFLG
[L]CURPRO = "TSTFLG"
If this.TSTFLG<0 or this.TSTFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.TSTFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_TSTFLG
[L]CURPRO = "TSTFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TSTFLG
[L]CURPRO = "TSTFLG"
Return

$PROPAGATE_TSTFLG
this.isReadonly = 0
[L]CURPRO = "TSTFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TSTFLG
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TSTFLG"
$_LNKPRO_TSTFLG
Return


####################################################################
# 22 : SPEFLG Specific flag ( Field Local menu number 1)
####################################################################

$SET_SPEFLG
If [L]_AOLDVAL<>this.SPEFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SPEFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SPEFLG
 Gosub PROPAGATE_SPEFLG
Endif
Return

$INIT_SPEFLG
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SPEFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SPEFLG=0 and fmet this.AGETATTRIBUTE("SPEFLG","$isMandatory")="true"
 this.SPEFLG = 1
Endif
Return
 
$CONTROL_SPEFLG
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SPEFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SPEFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SPEFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SPEFLG
[L]CURPRO = "SPEFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SPEFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SPEFLG
[L]CURPRO = "SPEFLG"
If this.SPEFLG<0 or this.SPEFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SPEFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SPEFLG
[L]CURPRO = "SPEFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SPEFLG
[L]CURPRO = "SPEFLG"
Return

$PROPAGATE_SPEFLG
this.isReadonly = 0
[L]CURPRO = "SPEFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SPEFLG
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SPEFLG"
$_LNKPRO_SPEFLG
Return


####################################################################
# 23 : CREMSK Screen update ( Field Local menu number 1)
####################################################################

$SET_CREMSK
If [L]_AOLDVAL<>this.CREMSK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREMSK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREMSK
 Gosub PROPAGATE_CREMSK
Endif
Return

$INIT_CREMSK
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREMSK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CREMSK=0 and fmet this.AGETATTRIBUTE("CREMSK","$isMandatory")="true"
 this.CREMSK = 1
Endif
Return
 
$CONTROL_CREMSK
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREMSK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREMSK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREMSK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREMSK
[L]CURPRO = "CREMSK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREMSK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREMSK
[L]CURPRO = "CREMSK"
If this.CREMSK<0 or this.CREMSK>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CREMSK)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CREMSK
[L]CURPRO = "CREMSK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREMSK
[L]CURPRO = "CREMSK"
Return

$PROPAGATE_CREMSK
this.isReadonly = 0
[L]CURPRO = "CREMSK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREMSK
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREMSK"
$_LNKPRO_CREMSK
Return


####################################################################
# 24 : CREOBJ Object update ( Field Local menu number 1)
####################################################################

$SET_CREOBJ
If [L]_AOLDVAL<>this.CREOBJ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREOBJ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREOBJ
 Gosub PROPAGATE_CREOBJ
Endif
Return

$INIT_CREOBJ
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREOBJ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CREOBJ=0 and fmet this.AGETATTRIBUTE("CREOBJ","$isMandatory")="true"
 this.CREOBJ = 1
Endif
Return
 
$CONTROL_CREOBJ
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREOBJ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREOBJ                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREOBJ                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREOBJ
[L]CURPRO = "CREOBJ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREOBJ=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREOBJ
[L]CURPRO = "CREOBJ"
If this.CREOBJ<0 or this.CREOBJ>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CREOBJ)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CREOBJ
[L]CURPRO = "CREOBJ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREOBJ
[L]CURPRO = "CREOBJ"
Return

$PROPAGATE_CREOBJ
this.isReadonly = 0
[L]CURPRO = "CREOBJ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREOBJ
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREOBJ"
$_LNKPRO_CREOBJ
Return


####################################################################
# 25 : CREWIN Make windows up-to-date ( Field Local menu number 1)
####################################################################

$SET_CREWIN
If [L]_AOLDVAL<>this.CREWIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREWIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREWIN
 Gosub PROPAGATE_CREWIN
Endif
Return

$INIT_CREWIN
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREWIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CREWIN=0 and fmet this.AGETATTRIBUTE("CREWIN","$isMandatory")="true"
 this.CREWIN = 1
Endif
Return
 
$CONTROL_CREWIN
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREWIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREWIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREWIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREWIN
[L]CURPRO = "CREWIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREWIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREWIN
[L]CURPRO = "CREWIN"
If this.CREWIN<0 or this.CREWIN>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CREWIN)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CREWIN
[L]CURPRO = "CREWIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREWIN
[L]CURPRO = "CREWIN"
Return

$PROPAGATE_CREWIN
this.isReadonly = 0
[L]CURPRO = "CREWIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREWIN
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CREWIN"
$_LNKPRO_CREWIN
Return


####################################################################
# 26 : CRECNS Inquiry update ( Field Local menu number 1)
####################################################################

$SET_CRECNS
If [L]_AOLDVAL<>this.CRECNS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRECNS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRECNS
 Gosub PROPAGATE_CRECNS
Endif
Return

$INIT_CRECNS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CRECNS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CRECNS=0 and fmet this.AGETATTRIBUTE("CRECNS","$isMandatory")="true"
 this.CRECNS = 1
Endif
Return
 
$CONTROL_CRECNS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CRECNS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRECNS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRECNS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRECNS
[L]CURPRO = "CRECNS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRECNS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRECNS
[L]CURPRO = "CRECNS"
If this.CRECNS<0 or this.CRECNS>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CRECNS)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CRECNS
[L]CURPRO = "CRECNS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRECNS
[L]CURPRO = "CRECNS"
Return

$PROPAGATE_CRECNS
this.isReadonly = 0
[L]CURPRO = "CRECNS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRECNS
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CRECNS"
$_LNKPRO_CRECNS
Return


####################################################################
# 27 : TRVAL Transactions ( Field Local menu number 1)
####################################################################

$SET_TRVAL
If [L]_AOLDVAL<>this.TRVAL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRVAL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRVAL
 Gosub PROPAGATE_TRVAL
Endif
Return

$INIT_TRVAL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TRVAL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TRVAL=0 and fmet this.AGETATTRIBUTE("TRVAL","$isMandatory")="true"
 this.TRVAL = 1
Endif
Return
 
$CONTROL_TRVAL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TRVAL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRVAL                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRVAL                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRVAL
[L]CURPRO = "TRVAL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRVAL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRVAL
[L]CURPRO = "TRVAL"
If this.TRVAL<0 or this.TRVAL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.TRVAL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_TRVAL
[L]CURPRO = "TRVAL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRVAL
[L]CURPRO = "TRVAL"
Return

$PROPAGATE_TRVAL
this.isReadonly = 0
[L]CURPRO = "TRVAL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRVAL
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "TRVAL"
$_LNKPRO_TRVAL
Return


####################################################################
# 28 : MAJSCR Script modifications ( Field Local menu number 1)
####################################################################

$SET_MAJSCR
If [L]_AOLDVAL<>this.MAJSCR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MAJSCR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MAJSCR
 Gosub PROPAGATE_MAJSCR
Endif
Return

$INIT_MAJSCR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "MAJSCR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MAJSCR=0 and fmet this.AGETATTRIBUTE("MAJSCR","$isMandatory")="true"
 this.MAJSCR = 1
Endif
Return
 
$CONTROL_MAJSCR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "MAJSCR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MAJSCR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MAJSCR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MAJSCR
[L]CURPRO = "MAJSCR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MAJSCR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MAJSCR
[L]CURPRO = "MAJSCR"
If this.MAJSCR<0 or this.MAJSCR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MAJSCR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MAJSCR
[L]CURPRO = "MAJSCR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MAJSCR
[L]CURPRO = "MAJSCR"
Return

$PROPAGATE_MAJSCR
this.isReadonly = 0
[L]CURPRO = "MAJSCR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MAJSCR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "MAJSCR"
$_LNKPRO_MAJSCR
Return


####################################################################
# 29 : SYSPAR System parameters ( Field L 8)
####################################################################

$SET_SYSPAR
If [L]_AOLDVAL<>this.SYSPAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SYSPAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SYSPAR
 Gosub PROPAGATE_SYSPAR
Endif
Return

$INIT_SYSPAR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SYSPAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SYSPAR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SYSPAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SYSPAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SYSPAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SYSPAR
[L]CURPRO = "SYSPAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SYSPAR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SYSPAR
[L]CURPRO = "SYSPAR"
Return

$_AOTHERS_SYSPAR
[L]CURPRO = "SYSPAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SYSPAR
[L]CURPRO = "SYSPAR"
Return

$PROPAGATE_SYSPAR
this.isReadonly = 0
[L]CURPRO = "SYSPAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SYSPAR
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "SYSPAR"
$_LNKPRO_SYSPAR
Return


####################################################################
# 30 : CODDBA Format ( Field Local menu number 930)
####################################################################

$SET_CODDBA
If [L]_AOLDVAL<>this.CODDBA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODDBA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODDBA
 Gosub PROPAGATE_CODDBA
Endif
Return

$INIT_CODDBA
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CODDBA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CODDBA=0 and fmet this.AGETATTRIBUTE("CODDBA","$isMandatory")="true"
 this.CODDBA = 1
Endif
Return
 
$CONTROL_CODDBA
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CODDBA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODDBA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODDBA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODDBA
[L]CURPRO = "CODDBA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CODDBA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODDBA
[L]CURPRO = "CODDBA"
If this.CODDBA<0 or this.CODDBA>len(mess(0,930,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"930 ->"-num$(this.CODDBA)-mess(99,123,1)):  Return : # Local menu "930 -> Invalid option
Endif
Return

$_AOTHERS_CODDBA
[L]CURPRO = "CODDBA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODDBA
[L]CURPRO = "CODDBA"
Return

$PROPAGATE_CODDBA
this.isReadonly = 0
[L]CURPRO = "CODDBA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODDBA
Gosub DECLARE_VAR From WMC0ADOSSIER
[L]CURPRO = "CODDBA"
$_LNKPRO_CODDBA
Return




