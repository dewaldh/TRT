#<AdxTL>@(#)0.0.0.0 $Revision$Class Supplier category
# Supervisor
## CRUD-CLASSE ## BPSCATEG
# 2018-08-27 13:06:36 059


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPSCATEG [BSG_]

If !SILENCE : Call TRACE("2 --> Local Instance R_BPSCATEG") From ASYRCOM : Endif
Local Instance BPSCATEG Using R_BPSCATEG

If !SILENCE : Call TRACE("3 --> New Instance R_BPSCATEG") From ASYRCOM : Endif
BPSCATEG = NewInstance R_BPSCATEG AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BSG_]BSG0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPSCATEG") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPSCATEG.AREAD([BSG_]BSGCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPSCATEG.BSG.BSGCOD ="-num$(BPSCATEG.BSG.BSGCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPSCATEG.BSG.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPSCATEG.BSG.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BSG_]
FreeGroup BPSCATEG
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPSCATEG,ACLE,ASTATUS,_ETAG)
Variable Instance BPSCATEG Using R_BPSCATEG
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BSGCOD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BSGCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BPSCATEG [BSG]
Default File [F:BSG]
Read [F:BSG]BSG0 = [L]_BSGCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BSG]UPDTICK)>0
 [L]_ETAG = num$([F:BSG]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPSCATEG,ACLE,ASTATUS)
Variable Instance BPSCATEG Using R_BPSCATEG
Value Char ACLE
Variable Integer ASTATUS
Local Char _BSGCOD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BSGCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPSCATEG.AREAD([L]_BSGCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPSCATEG,_BSGCOD,ASTATUS)
Variable Instance BPSCATEG Using R_BPSCATEG
Value Char _BSGCOD
Variable Integer ASTATUS

If BPSCATEG = null : End : Endif

Gosub AVARIABLES From WMR00BPSCATEG
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPSCATEG.APARENT=null
 [L]A_I = BPSCATEG.freeSnapshot
 BPSCATEG.snapshotEnabled = 0
 BPSCATEG.setAccessorEnabled = 0
Endif

If fmet BPSCATEG.ACTX.AGETAFCRIGHT(BPSCATEG,"GESBSG",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:BSG]
Read [F:BSG]BSG0 = [L]_BSGCOD
If fstat
[L]A_ERROR = [L]_BSGCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BPSCATEG,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet BPSCATEG.ACTX.AGETAFCRIGHTR(BPSCATEG,"GESBSG",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet BPSCATEG.ACTX.ASTACRITROLE(BPSCATEG,[L]_BSGCOD
& ,"BSG","BSG",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPSCATEG.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

BPSCATEG.BSG.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet BPSCATEG.BSG.AREAD([L]_BSGCOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPSCATEG.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPSCATEG.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPSCATEG._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPSCATEG.APARENT=null
 BPSCATEG.snapshotEnabled = 1
 BPSCATEG.setAccessorEnabled = 1
Endif
LogicClose File [BSG]
End



