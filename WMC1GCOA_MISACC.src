#<AdxTL>@(#)0.0.0.0 $Revision$Class Chart of accounts
# Supervisor
## ACLA-CLASSE ## GCOA_MISACC
# 2018-08-27 12:32:55 525


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : ACCDES Miscellaneous accounts ( Field Local menu number 2649)
####################################################################

$SET_ACCDES
If [L]_AOLDVAL<>this.ACCDES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCDES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCDES
 Gosub PROPAGATE_ACCDES
Endif
Return

$INIT_ACCDES
Gosub DECLARE_VAR From WMC0GCOA_MISACC
[L]CURPRO = "ACCDES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ACCDES=0 and fmet this.AGETATTRIBUTE("ACCDES","$isMandatory")="true"
 this.ACCDES = 1
Endif
Return
 
$CONTROL_ACCDES
Gosub DECLARE_VAR From WMC0GCOA_MISACC
[L]CURPRO = "ACCDES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCDES                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCDES                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCDES
[L]CURPRO = "ACCDES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACCDES=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCDES
[L]CURPRO = "ACCDES"
If this.ACCDES<0 or this.ACCDES>len(mess(0,2649,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2649 ->"-num$(this.ACCDES)-mess(99,123,1)):  Return : # Local menu "2649 -> Invalid option
Endif
Return

$_AOTHERS_ACCDES
[L]CURPRO = "ACCDES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCDES
[L]CURPRO = "ACCDES"
Return

$PROPAGATE_ACCDES
this.isReadonly = 0
[L]CURPRO = "ACCDES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCDES
Gosub DECLARE_VAR From WMC0GCOA_MISACC
[L]CURPRO = "ACCDES"
$_LNKPRO_ACCDES
Return


####################################################################
# 2 : ACCMIS Account ( Field GAC 15)
####################################################################

$SET_ACCMIS
If [L]_AOLDVAL<>this.ACCMIS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCMIS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCMIS
 Gosub PROPAGATE_ACCMIS
Endif
Return

$INIT_ACCMIS
Gosub DECLARE_VAR From WMC0GCOA_MISACC
[L]CURPRO = "ACCMIS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCMIS
Gosub DECLARE_VAR From WMC0GCOA_MISACC
[L]CURPRO = "ACCMIS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCMIS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCMIS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCMIS
[L]CURPRO = "ACCMIS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCMIS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCMIS
[L]CURPRO = "ACCMIS"
If vireblc(this.ACCMIS,2)<>vireblc(format$("K:15X",this.ACCMIS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCMIS
[L]CURPRO = "ACCMIS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCMIS
[L]CURPRO = "ACCMIS"
If vireblc(this.ACCMIS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGAC.ACTRLREF(this,"ACCMIS",this.ACCMIS,this.APARENT.COA,this.ACCMIS,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACCMIS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_ACCMIS
this.isReadonly = 0
[L]CURPRO = "ACCMIS"
Gosub _LNKPRO_ACCMIS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCMIS
Gosub DECLARE_VAR From WMC0GCOA_MISACC
[L]CURPRO = "ACCMIS"
$_LNKPRO_ACCMIS
If vireblc(this.ACCMIS,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.APARENT.COA;this.ACCMIS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACCMIS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACCMIS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return




