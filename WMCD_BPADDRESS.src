#<AdxTL>@(#)0.0.0.0 $Revision$Class Addresses
# Supervisor
## CRUD-CLASSE ## BPADDRESS
# 2018-08-27 12:25:03 528


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(BPADDRESS,ASTATUS)
Variable Instance BPADDRESS Using C_BPADDRESS
Variable Integer ASTATUS

If BPADDRESS = null : End : Endif

Gosub _AVARIABLES From WMC00BPADDRESS

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_BPADDRESS

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(BPADDRESS,ASTATUS)
Variable Instance BPADDRESS Using C_BPADDRESS
Variable Integer ASTATUS

If BPADDRESS = null : End : Endif

Gosub AVARIABLES From WMC00BPADDRESS
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_BPADDRESS
Else
 Gosub ADELETE_BPADDRESS
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(BPADDRESS,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If BPADDRESS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BPADDRESS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESS.COLTEL)
 If BPADDRESS.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.COLTEL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESS.COLWEB)
 If BPADDRESS.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.COLWEB([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

For [L]A_I=1 To maxtab(BPADDRESS.COLTEL)
 If BPADDRESS.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.COLTEL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESS.COLWEB)
 If BPADDRESS.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.COLWEB([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_BPADDRESS
Trbegin [F:BPA]
 Gosub ADELETE_BPADDRESS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_BPADDRESS
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(BPADDRESS,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00BPADDRESS._MAJSQL_BPADDRESS(BPADDRESS))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If BPADDRESS.snapshotEnabled=1
 [L]A_RETIK = BPADDRESS.revertUpdTick
Endif
[L]ASTATUS = max(fmet BPADDRESS.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



