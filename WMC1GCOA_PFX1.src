#<AdxTL>@(#)0.0.0.0 $Revision$Class Chart of accounts
# Supervisor
## ACLA-CLASSE ## GCOA_PFX1
# 2018-08-27 12:32:56 036


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : PFX Prefix ( Field A 10)
####################################################################

$SET_PFX
If [L]_AOLDVAL<>this.PFX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PFX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PFX
 Gosub PROPAGATE_PFX
Endif
Return

$INIT_PFX
Gosub DECLARE_VAR From WMC0GCOA_PFX1
[L]CURPRO = "PFX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PFX
Gosub DECLARE_VAR From WMC0GCOA_PFX1
[L]CURPRO = "PFX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PFX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PFX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PFX
[L]CURPRO = "PFX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PFX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PFX
[L]CURPRO = "PFX"
Return

$_AOTHERS_PFX
[L]CURPRO = "PFX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PFX
[L]CURPRO = "PFX"
Return

$PROPAGATE_PFX
this.isReadonly = 0
[L]CURPRO = "PFX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PFX
Gosub DECLARE_VAR From WMC0GCOA_PFX1
[L]CURPRO = "PFX"
$_LNKPRO_PFX
Return

$_ALOADATTRIBUTE_PFX
[L]ASTATUS = fmet this.ASETATTRIBUTE("PFX","$isMandatory","true")
Return


####################################################################
# 2 : CLSCOD Classification ( Field CLA 10)
####################################################################

$SET_CLSCOD
If [L]_AOLDVAL<>this.CLSCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CLSCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CLSCOD
 Gosub PROPAGATE_CLSCOD
Endif
Return

$INIT_CLSCOD
Gosub DECLARE_VAR From WMC0GCOA_PFX1
[L]CURPRO = "CLSCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CLSCOD
Gosub DECLARE_VAR From WMC0GCOA_PFX1
[L]CURPRO = "CLSCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CLSCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CLSCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CLSCOD
[L]CURPRO = "CLSCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CLSCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CLSCOD
[L]CURPRO = "CLSCOD"
If vireblc(this.CLSCOD,2)<>vireblc(format$("K:10c",this.CLSCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CLSCOD
[L]CURPRO = "CLSCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CLSCOD
[L]CURPRO = "CLSCOD"
If vireblc(this.CLSCOD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCLA.ACTRLREF(this,"CLSCOD",this.CLSCOD,this.APARENT.LEGCLS,this.CLSCOD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CLSCOD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CLSCOD
this.isReadonly = 0
[L]CURPRO = "CLSCOD"
Gosub _LNKPRO_CLSCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CLSCOD
Gosub DECLARE_VAR From WMC0GCOA_PFX1
[L]CURPRO = "CLSCOD"
$_LNKPRO_CLSCOD
If vireblc(this.CLSCOD,2)<>""
 # Link GACCCLS
 Local File GACCCLS [WCLS]
 Read [F:WCLS]CLS0 = this.APARENT.LEGCLS;this.CLSCOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCCLS" & ZONE="DESTRA" & IDENT1=[F:WCLS]LEG & IDENT2=[F:WCLS]CLSCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CLSCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCLS]
Endif
Return




