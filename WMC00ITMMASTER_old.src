#<AdxTL>@(#)0.0.0.0 $Revision$Class Products
# Sage X3 supervisor
## CRUD-CLASSE ## ITMMASTER
# 2018-06-20 06:47:14 200

Gosub TEST From WMCR_ITMMASTER : End

############################################################################################
## R : Subprog AREAD(INSTANCE,ITMREF)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# ITMMASTER : ITMMASTER
# ITMBPC : ITMMASTER ITMBPC
# ITMBPS : ITMMASTER ITMBPS
# ITMACGGRP : ITMMASTER ITMACGGRP
# ITMSALES : ITMMASTER ITMSALES
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet ITMMASTER._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = ITMMASTER.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(ITMMASTER.ACTX.AFOLDER,nomap,"")>0
 Local File ITMMASTER [ITM]
 Local File ITMBPC [ITU]
 Local File ITMBPS [ITP]
 Local File ITMACGGRP [ITA]
 Local File ITMSALES [ITS]
 Local File ATEXTRA [AXX]
Else
 Local File =ITMMASTER.ACTX.AFOLDER+".ITMMASTER" [ITM]
 Local File =ITMMASTER.ACTX.AFOLDER+".ITMBPC" [ITU]
 Local File =ITMMASTER.ACTX.AFOLDER+".ITMBPS" [ITP]
 Local File =ITMMASTER.ACTX.AFOLDER+".ITMACGGRP" [ITA]
 Local File =ITMMASTER.ACTX.AFOLDER+".ITMSALES" [ITS]
 Local File =ITMMASTER.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet ITMMASTER.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [ITM] With
& [ITU]ITU0 = [F:ITM]ITMREF,
& [ITP]ITP0 = [F:ITM]ITMREF,
& [ITA]ITA0 = [F:ITM]ITMREF,
& [ITS]ITS0 ~= [F:ITM]ITMREF
& As [LNK_]
Return

############################################################################################
### ITMMASTER(WITM)
############################################################################################
Funprog  _MAJSQL_ITMMASTER(WITM)
Variable Instance WITM Using C_ITMMASTER
Local Integer ASTATUS,A_I,A_J
Default File [F:ITM]
If WITM.ASTALIN=[V]CST_ANEW
 Call INICRE(WITM) From ASYRSUB
 SetInstance [F:ITM] With WITM
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES1AXX" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES1AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES2AXX" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES2AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES3AXX" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES3AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "RPLITMDES" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","RPLITMDES",WITM.AXX(J).LAN,WITM.RPLITM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WITM.CDIE)
   If WITM.CDIE([L]A_I)<>null & !find(WITM.CDIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CDIE([L]A_I).AORDER=[L]A_J
    [F:ITM]DIE([L]A_J-1) = WITM.CDIE([L]A_I).DIE
    [F:ITM]CCE([L]A_J-1) = WITM.CDIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WITM.CECCBOMALT)
   If WITM.CECCBOMALT([L]A_I)<>null & !find(WITM.CECCBOMALT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CECCBOMALT([L]A_I).AORDER=[L]A_J
    [F:ITM]ECCBOMALT2([L]A_J-1) = WITM.CECCBOMALT([L]A_I).ECCBOMALT2
    [F:ITM]ECCBOMALT3([L]A_J-1) = WITM.CECCBOMALT([L]A_I).ECCBOMALT3
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 4
  For [L]A_I=1 To maxtab(WITM.CPCU)
   If WITM.CPCU([L]A_I)<>null & !find(WITM.CPCU([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CPCU([L]A_I).AORDER=[L]A_J
    [F:ITM]PCU([L]A_J-1) = WITM.CPCU([L]A_I).PCU
    [F:ITM]PCUSTUCOE([L]A_J-1) = WITM.CPCU([L]A_I).PCUSTUCOE
    [F:ITM]DACPCUCOE([L]A_J-1) = WITM.CPCU([L]A_I).DACPCUCOE
    [F:ITM]PCURUL([L]A_J-1) = WITM.CPCU([L]A_I).PCURUL
    [F:ITM]LBEFMT([L]A_J-1) = WITM.CPCU([L]A_I).LBEFMT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WITM.CTSICOD)
   If WITM.CTSICOD([L]A_I)<>null & !find(WITM.CTSICOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CTSICOD([L]A_I).AORDER=[L]A_J
    [F:ITM]TSICOD([L]A_J-1) = WITM.CTSICOD([L]A_I).TSICOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WITM.CVACITM)
   If WITM.CVACITM([L]A_I)<>null & !find(WITM.CVACITM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CVACITM([L]A_I).AORDER=[L]A_J
    [F:ITM]VACITM([L]A_J-1) = WITM.CVACITM([L]A_I).VACITM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ITM]
 If fstat
  Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITM.updTick = [F:ITM]updTick
Elsif WITM.ASTALIN=[V]CST_ALL or WITM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WITM) From ASYRSUB
 SetInstance [F:ITM] With WITM
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES1AXX" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES1AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES2AXX" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES2AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES3AXX" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES3AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "RPLITMDES" & WITM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITM,WITM.AXX(J).TEX,"ITMMASTER","RPLITMDES",WITM.AXX(J).LAN,WITM.RPLITM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WITM.CDIE)
   If WITM.CDIE([L]A_I)<>null & !find(WITM.CDIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CDIE([L]A_I).AORDER=[L]A_J
    [F:ITM]DIE([L]A_J-1) = WITM.CDIE([L]A_I).DIE
    [F:ITM]CCE([L]A_J-1) = WITM.CDIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WITM.CECCBOMALT)
   If WITM.CECCBOMALT([L]A_I)<>null & !find(WITM.CECCBOMALT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CECCBOMALT([L]A_I).AORDER=[L]A_J
    [F:ITM]ECCBOMALT2([L]A_J-1) = WITM.CECCBOMALT([L]A_I).ECCBOMALT2
    [F:ITM]ECCBOMALT3([L]A_J-1) = WITM.CECCBOMALT([L]A_I).ECCBOMALT3
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 4
  For [L]A_I=1 To maxtab(WITM.CPCU)
   If WITM.CPCU([L]A_I)<>null & !find(WITM.CPCU([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CPCU([L]A_I).AORDER=[L]A_J
    [F:ITM]PCU([L]A_J-1) = WITM.CPCU([L]A_I).PCU
    [F:ITM]PCUSTUCOE([L]A_J-1) = WITM.CPCU([L]A_I).PCUSTUCOE
    [F:ITM]DACPCUCOE([L]A_J-1) = WITM.CPCU([L]A_I).DACPCUCOE
    [F:ITM]PCURUL([L]A_J-1) = WITM.CPCU([L]A_I).PCURUL
    [F:ITM]LBEFMT([L]A_J-1) = WITM.CPCU([L]A_I).LBEFMT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WITM.CTSICOD)
   If WITM.CTSICOD([L]A_I)<>null & !find(WITM.CTSICOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CTSICOD([L]A_I).AORDER=[L]A_J
    [F:ITM]TSICOD([L]A_J-1) = WITM.CTSICOD([L]A_I).TSICOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WITM.CVACITM)
   If WITM.CVACITM([L]A_I)<>null & !find(WITM.CVACITM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WITM.CVACITM([L]A_I).AORDER=[L]A_J
    [F:ITM]VACITM([L]A_J-1) = WITM.CVACITM([L]A_I).VACITM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITM,"ITMMASTER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ITM]ITM0 = [F:ITM]ITMREF
 If fstat
  Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITM.updTick = [F:ITM]updTick
Elsif WITM.ASTALIN=[V]CST_ADEL
 SetInstance [F:ITM] With WITM
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES1AXX"
   Call SUPTEXTRA(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES1AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES2AXX"
   Call SUPTEXTRA(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES2AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "DES3AXX"
   Call SUPTEXTRA(WITM,WITM.AXX(J).TEX,"ITMMASTER","DES3AXX",WITM.AXX(J).LAN,WITM.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WITM.AXX)
  If WITM.AXX(J)<>null & WITM.AXX(J).PRO= "RPLITMDES"
   Call SUPTEXTRA(WITM,WITM.AXX(J).TEX,"ITMMASTER","RPLITMDES",WITM.AXX(J).LAN,WITM.RPLITM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITM,"ITMMASTER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ITM]ITM0 = [F:ITM]ITMREF
 If fstat
  Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### ITMBPC(WITU)
############################################################################################
Funprog  _MAJSQL_ITMBPC(WITU)
Variable Instance WITU Using C_ITMBPC
Local Integer ASTATUS,A_I,A_J
Default File [F:ITU]
If WITU.ASTALIN=[V]CST_ANEW
 Call INICRE(WITU) From ASYRSUB
 SetInstance [F:ITU] With WITU
 Write [F:ITU]
 If fstat
  Call FSTA("ITU",WITU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITU.updTick = [F:ITU]updTick
Elsif WITU.ASTALIN=[V]CST_ALL or WITU.ASTALIN=[V]CST_AUPD
 Call INIUPD(WITU) From ASYRSUB
 SetInstance [F:ITU] With WITU
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITU,"ITMBPC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ITU]ITU0 = [F:ITU]ITMREF;[F:ITU]BPCNUM
 If fstat
  Call FSTA("ITU",WITU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITU.updTick = [F:ITU]updTick
Elsif WITU.ASTALIN=[V]CST_ADEL
 SetInstance [F:ITU] With WITU
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITU,"ITMBPC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ITU]ITU0 = [F:ITU]ITMREF;[F:ITU]BPCNUM
 If fstat
  Call FSTA("ITU",WITU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### ITMBPS(WITP)
############################################################################################
Funprog  _MAJSQL_ITMBPS(WITP)
Variable Instance WITP Using C_ITMBPS
Local Integer ASTATUS,A_I,A_J
Default File [F:ITP]
If WITP.ASTALIN=[V]CST_ANEW
 Call INICRE(WITP) From ASYRSUB
 SetInstance [F:ITP] With WITP
 Write [F:ITP]
 If fstat
  Call FSTA("ITP",WITP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITP.updTick = [F:ITP]updTick
Elsif WITP.ASTALIN=[V]CST_ALL or WITP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WITP) From ASYRSUB
 SetInstance [F:ITP] With WITP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITP,"ITMBPS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ITP]ITP0 = [F:ITP]ITMREF;[F:ITP]BPSNUM
 If fstat
  Call FSTA("ITP",WITP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITP.updTick = [F:ITP]updTick
Elsif WITP.ASTALIN=[V]CST_ADEL
 SetInstance [F:ITP] With WITP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITP,"ITMBPS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ITP]ITP0 = [F:ITP]ITMREF;[F:ITP]BPSNUM
 If fstat
  Call FSTA("ITP",WITP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### ITMACGGRP(WITA)
############################################################################################
Funprog  _MAJSQL_ITMACGGRP(WITA)
Variable Instance WITA Using C_ITMACGGRP
Local Integer ASTATUS,A_I,A_J
Default File [F:ITA]
If WITA.ASTALIN=[V]CST_ANEW
 Call INICRE(WITA) From ASYRSUB
 SetInstance [F:ITA] With WITA
 Write [F:ITA]
 If fstat
  Call FSTA("ITA",WITA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITA.updTick = [F:ITA]updTick
Elsif WITA.ASTALIN=[V]CST_ALL or WITA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WITA) From ASYRSUB
 SetInstance [F:ITA] With WITA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITA,"ITMACGGRP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ITA]ITA0 = [F:ITA]ITMREF;[F:ITA]LEG
 If fstat
  Call FSTA("ITA",WITA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITA.updTick = [F:ITA]updTick
Elsif WITA.ASTALIN=[V]CST_ADEL
 SetInstance [F:ITA] With WITA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITA,"ITMACGGRP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ITA]ITA0 = [F:ITA]ITMREF;[F:ITA]LEG
 If fstat
  Call FSTA("ITA",WITA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### ITMSALES(WITS)
############################################################################################
Funprog  _MAJSQL_ITMSALES(WITS)
Variable Instance WITS Using C_ITMSALES
Local Integer ASTATUS,A_I,A_J
Default File [F:ITS]
If WITS.ASTALIN=[V]CST_ANEW
 Call INICRE(WITS) From ASYRSUB
 SetInstance [F:ITS] With WITS
 For J=1 To maxtab(WITS.AXX)
  If WITS.AXX(J)<>null & WITS.AXX(J).PRO= "DES1AXX" & WITS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITS,WITS.AXX(J).TEX,"ITMSALES","DES1AXX",WITS.AXX(J).LAN,WITS.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ITS]
 If fstat
  Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITS.updTick = [F:ITS]updTick
Elsif WITS.ASTALIN=[V]CST_ALL or WITS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WITS) From ASYRSUB
 SetInstance [F:ITS] With WITS
 For J=1 To maxtab(WITS.AXX)
  If WITS.AXX(J)<>null & WITS.AXX(J).PRO= "DES1AXX" & WITS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WITS,WITS.AXX(J).TEX,"ITMSALES","DES1AXX",WITS.AXX(J).LAN,WITS.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITS,"ITMSALES")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ITS]ITS0 = [F:ITS]ITMREF
 If fstat
  Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WITS.updTick = [F:ITS]updTick
Elsif WITS.ASTALIN=[V]CST_ADEL
 SetInstance [F:ITS] With WITS
 For J=1 To maxtab(WITS.AXX)
  If WITS.AXX(J)<>null & WITS.AXX(J).PRO= "DES1AXX"
   Call SUPTEXTRA(WITS,WITS.AXX(J).TEX,"ITMSALES","DES1AXX",WITS.AXX(J).LAN,WITS.ITMREF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WITS,"ITMSALES")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ITS]ITS0 = [F:ITS]ITMREF
 If fstat
  Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_ITMMASTER_CLAPURTEX1(WITM,CLAPURTEX1)
Variable Instance WITM Using C_ITMMASTER
Value Clbfile CLAPURTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WITM.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAPURTEX1
 Raz [TXC]
 Call INICRE(WITM) From ASYRSUB
 [F:TXC]CODE = WITM.PURTEX
 [F:TXC]TEXTE = [L]CLAPURTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WITM.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WITM.PURTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WITM.ASTALIN=[V]CST_ALL or WITM.ASTALIN=[V]CST_AUPD
 If fmet WITM.AGETATTRIBUTE("CLAPURTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WITM.PURTEX
  If !fstat & [L]WEMPTY<>[L]CLAPURTEX1
   Call INIUPD(WITM) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAPURTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAPURTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAPURTEX1
   Raz [TXC]
   Call INICRE(WITM) From ASYRSUB
   [TXC]CODE = WITM.PURTEX
   [F:TXC]TEXTE = [L]CLAPURTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_ITMMASTER_CLAMFGTEX1(WITM,CLAMFGTEX1)
Variable Instance WITM Using C_ITMMASTER
Value Clbfile CLAMFGTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WITM.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAMFGTEX1
 Raz [TXC]
 Call INICRE(WITM) From ASYRSUB
 [F:TXC]CODE = WITM.MFGTEX
 [F:TXC]TEXTE = [L]CLAMFGTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WITM.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WITM.MFGTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WITM.ASTALIN=[V]CST_ALL or WITM.ASTALIN=[V]CST_AUPD
 If fmet WITM.AGETATTRIBUTE("CLAMFGTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WITM.MFGTEX
  If !fstat & [L]WEMPTY<>[L]CLAMFGTEX1
   Call INIUPD(WITM) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAMFGTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAMFGTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAMFGTEX1
   Raz [TXC]
   Call INICRE(WITM) From ASYRSUB
   [TXC]CODE = WITM.MFGTEX
   [F:TXC]TEXTE = [L]CLAMFGTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_ITMMASTER_IMG(WITM,IMG)
Variable Instance WITM Using C_ITMMASTER
Value Blbfile IMG
Local Blbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File CBLOB [F:CBB]
If WITM.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]IMG
 Raz [CBB]
 Call INICRE(WITM) From ASYRSUB
 [F:CBB]CODBLB = "ITM"
 [F:CBB]IDENT1 = WITM.ITMREF
 [F:CBB]IDENT2 = ""
 [F:CBB]BLOB = [L]IMG
 [L]WATYP = 'ATYPE9-1'
 [L]WCNT = 'image'
 [F:CBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
 Write [F:CBB]
 If fstat
  Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WITM.ASTALIN=[V]CST_ADEL
 Read [F:CBB]CBB0 ="ITM";WITM.ITMREF;""
 If !fstat
  Delete [F:CBB]
  If fstat
   Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WITM.ASTALIN=[V]CST_ALL or WITM.ASTALIN=[V]CST_AUPD
 If fmet WITM.AGETATTRIBUTE("IMG","$isLoaded")="true"
  Read [F:CBB]CBB0 ="ITM";WITM.ITMREF;""
  If !fstat & [L]WEMPTY<>[L]IMG
   Call INIUPD(WITM) From ASYRSUB
   [F:CBB]BLOB = [L]IMG
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:CBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Rewrite [F:CBB]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]IMG
   Delete [F:CBB]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]IMG
   Raz [CBB]
   Call INICRE(WITM) From ASYRSUB
   [CBB]CODBLB = "ITM"
   [CBB]IDENT1 = WITM.ITMREF
   [CBB]IDENT2 = ""
   [F:CBB]BLOB = [L]IMG
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:CBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Write [F:CBB]
   If fstat
    Call FSTA("ITM",WITM,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:CBB]
End 0

Funprog  _MAJSQL_ITMSALES_CLAITSTEX1(WITS,CLAITSTEX1)
Variable Instance WITS Using C_ITMSALES
Value Clbfile CLAITSTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WITS.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAITSTEX1
 Raz [TXC]
 Call INICRE(WITS) From ASYRSUB
 [F:TXC]CODE = WITS.APARENT.ITSTEX
 [F:TXC]TEXTE = [L]CLAITSTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WITS.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WITS.APARENT.ITSTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WITS.ASTALIN=[V]CST_ALL or WITS.ASTALIN=[V]CST_AUPD
 If fmet WITS.AGETATTRIBUTE("CLAITSTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WITS.APARENT.ITSTEX
  If !fstat & [L]WEMPTY<>[L]CLAITSTEX1
   Call INIUPD(WITS) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAITSTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAITSTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAITSTEX1
   Raz [TXC]
   Call INICRE(WITS) From ASYRSUB
   [TXC]CODE = WITS.APARENT.ITSTEX
   [F:TXC]TEXTE = [L]CLAITSTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_ITMSALES_CLAITPTEX1(WITS,CLAITPTEX1)
Variable Instance WITS Using C_ITMSALES
Value Clbfile CLAITPTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WITS.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAITPTEX1
 Raz [TXC]
 Call INICRE(WITS) From ASYRSUB
 [F:TXC]CODE = WITS.APARENT.ITPTEX
 [F:TXC]TEXTE = [L]CLAITPTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WITS.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WITS.APARENT.ITPTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WITS.ASTALIN=[V]CST_ALL or WITS.ASTALIN=[V]CST_AUPD
 If fmet WITS.AGETATTRIBUTE("CLAITPTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WITS.APARENT.ITPTEX
  If !fstat & [L]WEMPTY<>[L]CLAITPTEX1
   Call INIUPD(WITS) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAITPTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAITPTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAITPTEX1
   Raz [TXC]
   Call INICRE(WITS) From ASYRSUB
   [TXC]CODE = WITS.APARENT.ITPTEX
   [F:TXC]TEXTE = [L]CLAITPTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("ITS",WITS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0



