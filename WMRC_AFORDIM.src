#<AdxTL>@(#)0.0.0.0 $Revision$Class Sizing formulas
# Supervisor
## CRUD-CLASSE ## AFORDIM
# 2018-08-27 13:01:25 784


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(AFORDIM,ASTATUS)
Variable Instance AFORDIM Using R_AFORDIM
Variable Integer ASTATUS

If AFORDIM = null : End : Endif

Gosub AVARIABLES From WMR00AFORDIM
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet AFORDIM.ACTX.AGETAFCRIGHT(AFORDIM,"GESAFO",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet AFORDIM.ACTX.AGETAFCRIGHTC(AFORDIM,"GESAFO",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_AFORDIM
Else
 Gosub AINSERT_AFORDIM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = AFORDIM.freeSnapshot
AFORDIM.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
AFORDIM.ASTALIN = [V]CST_ANEW
AFORDIM.AFO.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet AFORDIM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet AFORDIM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet AFORDIM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If AFORDIM.AFO.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AFORDIM.AFO.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.AFO.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.AFO.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_AFORDIM
Trbegin [F:AFO]
 Gosub AINSERT_AFORDIM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(AFORDIM.AFO.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 AFORDIM.AFO.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_AFORDIM
[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.AFO._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AFORDIM.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If AFORDIM.snapshotEnabled=1
 [L]A_RETIK = AFORDIM.revertUpdTick
Endif
[L]ASTATUS = max(fmet AFORDIM.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



