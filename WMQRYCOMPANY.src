#<AdxTL>@(#)0.0.0.0 $Revision$Class Company
# Supervisor
## WMREP REPRESENTATION ## COMPANY
# 2018-08-27 13:13:50 145

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
If clalev([F:A_])=0 : Local File COMPANY [A_] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [CPY]
LogicClose File [A_]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CPY","CPY",ACRITROLE,[V]CST_AFALSE)
Link [CPY] With
& [A_]CPY0~=[CPY]CPY
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CPY","CPY",ACRITROLE,[V]CST_AFALSE)
Link [CPY] With
& [A_]CPY0~=[CPY]CPY
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# CPY --- COMPANY(CPY)
QRY(NBREP) = NewInstance R_COMPANY AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:CPY]AUUID)>0 & [F:CPY]AUUID=NullUuid
 [F:CPY]AUUID = getUuid
Endif
SetInstance QRY(NBREP).CPY With [F:CPY]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# CPY --- COMPANY(CPY)
QRY = NewInstance R_COMPANY AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:CPY]AUUID)>0 & [F:CPY]AUUID=NullUuid
 [F:CPY]AUUID = getUuid
Endif
SetInstance QRY.CPY With [F:CPY]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0COMPANY
CURQRY = "R_COMPANY"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).CPY.CPY.LNKPRO
Callmet QRY(NBREP).CPY.LEG.LNKPRO
Callmet QRY(NBREP).CPY.MAIFCY.LNKPRO
Callmet QRY(NBREP).CPY.CRY.LNKPRO
Callmet QRY(NBREP).CPY.CRN.LNKPRO
Callmet QRY(NBREP).CPY.NID.LNKPRO
Callmet QRY(NBREP).CPY.RGCCUR.LNKPRO
Callmet QRY(NBREP).CPY.EECNUM.LNKPRO
Callmet QRY(NBREP).CPY.ACCCUR.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.CPY.CPY.LNKPRO
Callmet QRY.CPY.LEG.LNKPRO
Callmet QRY.CPY.MAIFCY.LNKPRO
Callmet QRY.CPY.CRY.LNKPRO
Callmet QRY.CPY.CRN.LNKPRO
Callmet QRY.CPY.NID.LNKPRO
Callmet QRY.CPY.RGCCUR.LNKPRO
Callmet QRY.CPY.EECNUM.LNKPRO
Callmet QRY.CPY.ACCCUR.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "CPY" : TBFIL(NBPRO) = "[F:CPY]CPY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.CPY"
NBPRO += 1 : TBPRO(NBPRO) = "CPYNAM" : TBFIL(NBPRO) = "[F:CPY]CPYNAM"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.CPYNAM"
NBPRO += 1 : TBPRO(NBPRO) = "CPYSHO" : TBFIL(NBPRO) = "[F:CPY]CPYSHO"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.CPYSHO"
NBPRO += 1 : TBPRO(NBPRO) = "CPYLEGFLG" : TBFIL(NBPRO) = "[F:CPY]CPYLEGFLG"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "CPY.CPYLEGFLG"
NBPRO += 1 : TBPRO(NBPRO) = "LEG" : TBFIL(NBPRO) = "[F:CPY]LEG"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.LEG"
NBPRO += 1 : TBPRO(NBPRO) = "CPYLOG" : TBFIL(NBPRO) = "[F:CPY]CPYLOG"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.CPYLOG"
NBPRO += 1 : TBPRO(NBPRO) = "MAIFCY" : TBFIL(NBPRO) = "[F:CPY]MAIFCY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.MAIFCY"
NBPRO += 1 : TBPRO(NBPRO) = "CRY" : TBFIL(NBPRO) = "[F:CPY]CRY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.CRY"
NBPRO += 1 : TBPRO(NBPRO) = "CRN" : TBFIL(NBPRO) = "[F:CPY]CRN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.CRN"
NBPRO += 1 : TBPRO(NBPRO) = "NID" : TBFIL(NBPRO) = "[F:CPY]NID"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.NID"
NBPRO += 1 : TBPRO(NBPRO) = "RGCAMT" : TBFIL(NBPRO) = "[F:CPY]RGCAMT"
           : TBTYP(NBPRO) = 4 : TBPTH(NBPRO) = "CPY.RGCAMT"
NBPRO += 1 : TBPRO(NBPRO) = "RGCCUR" : TBFIL(NBPRO) = "[F:CPY]RGCCUR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.RGCCUR"
NBPRO += 1 : TBPRO(NBPRO) = "EECNUM" : TBFIL(NBPRO) = "[F:CPY]EECNUM"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.EECNUM"
NBPRO += 1 : TBPRO(NBPRO) = "ACCCUR" : TBFIL(NBPRO) = "[F:CPY]ACCCUR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CPY.ACCCUR"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:CPY]CPY"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From COMPANY_RSTD
Gosub EVENTS From COMPANY_RSTD
Return
 


