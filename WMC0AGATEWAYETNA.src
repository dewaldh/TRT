#<AdxTL>@(#)0.0.0.0 $Revision$Class Gateway ETNA/Classic
# Supervisor
## ACLA-CLASSE ## AGATEWAYETNA
# 2018-08-27 12:20:29 414

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "AGATEWAYETNA_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Small integer assignment
$ASETVALTINYINT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALTINYINT" : [L]ACTION = "ASETVALTINYINT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Small integer reading
$AGETVALTINYINT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALTINYINT" : [L]ACTION = "AGETVALTINYINT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Short integer assignment
$ASETVALSHORTINT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALSHORTINT" : [L]ACTION = "ASETVALSHORTINT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Short integer reading
$AGETVALSHORTINT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALSHORTINT" : [L]ACTION = "AGETVALSHORTINT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Long integer assignment
$ASETVALINTEGER
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALINTEGER" : [L]ACTION = "ASETVALINTEGER" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Long integer reading
$AGETVALINTEGER
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALINTEGER" : [L]ACTION = "AGETVALINTEGER" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Decimal assignment
$ASETVALDECIMAL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALDECIMAL" : [L]ACTION = "ASETVALDECIMAL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Decimal reading
$AGETVALDECIMAL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALDECIMAL" : [L]ACTION = "AGETVALDECIMAL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Duplicate assignment
$ASETVALDOUBLE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALDOUBLE" : [L]ACTION = "ASETVALDOUBLE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Duplicate reading
$AGETVALDOUBLE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALDOUBLE" : [L]ACTION = "AGETVALDOUBLE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod String assignment
$ASETVALCHAR
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALCHAR" : [L]ACTION = "ASETVALCHAR" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod String reading
$AGETVALCHAR
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALCHAR" : [L]ACTION = "AGETVALCHAR" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Date assignment
$ASETVALDATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALDATE" : [L]ACTION = "ASETVALDATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Date reading
$AGETVALDATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALDATE" : [L]ACTION = "AGETVALDATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Blob assignment
$ASETVALBLBFILE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALBLBFILE" : [L]ACTION = "ASETVALBLBFILE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Blob reading
$AGETVALBLBFILE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALBLBFILE" : [L]ACTION = "AGETVALBLBFILE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Clob assignment
$ASETVALCLBFILE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALCLBFILE" : [L]ACTION = "ASETVALCLBFILE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Read of a CLOB
$AGETVALCLBFILE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALCLBFILE" : [L]ACTION = "AGETVALCLBFILE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod uuid assignment
$ASETVALUUIDENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALUUIDENT" : [L]ACTION = "ASETVALUUIDENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod uuid reading
$AGETVALUUIDENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALUUIDENT" : [L]ACTION = "AGETVALUUIDENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Datetime assignment
$ASETVALDATETIME
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALDATETIME" : [L]ACTION = "ASETVALDATETIME" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Datetime reading
$AGETVALDATETIME
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALDATETIME" : [L]ACTION = "AGETVALDATETIME" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Remote call
$ARPC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ARPC" : [L]ACTION = "ARPC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Instance assignment
$ASETVALINST
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASETVALINST" : [L]ACTION = "ASETVALINST" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Instance reading
$AGETVALINST
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETVALINST" : [L]ACTION = "AGETVALINST" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Gateway ETNA/Classic
$AFROMRPC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AFROMRPC" : [L]ACTION = "AFROMRPC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0AGATEWAYETNA
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To maxtab(this.APARAMETERS)
 If this.APARAMETERS(AINDCLA)<>null
  [L]ASTATUS = fmet this.APARAMETERS(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0AGATEWAYETNA
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To maxtab(this.APARAMETERS)
 If this.APARAMETERS(AINDCLA)<>null
  [L]ASTATUS = fmet this.APARAMETERS(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0AGATEWAYETNA
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To maxtab(this.APARAMETERS)
 If this.APARAMETERS(AINDCLA)<>null
  [L]ASTATUS = fmet this.APARAMETERS(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'APARAMETERS('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0AGATEWAYETNA
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "BODY"
  If fmet this.AGETATTRIBUTE("BODY","$isLoaded")<>"true"
   Gosub READ_CLB_BODY
   If [L]_CNT<>''
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BODY","$contentType",[L]_CNT)
   Else
    [L]_CNT = fmet this.AGETATTRIBUTE("BODY","$contentType")
   Endif
  Else
   [L]_CLB = this.BODY
   [L]_CNT = fmet this.AGETATTRIBUTE("BODY","$contentType")
  Endif
Endcase
Return

$READ_CLB_BODY
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "APARAMETERS"
  If this.APARAMETERS([L]ALINE)<>null : FreeInstance this.APARAMETERS([L]ALINE) : this.APARAMETERS([L]ALINE) = null :Endif
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "APARAMETERS"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"APARAMETERS","C_AGATEWAYPAR",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "APARAMETERS"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "APARAMETERS"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



