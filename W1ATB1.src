#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ATB1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:50:23"
A_USER  = "ADMIN"
A_STAMP = "20180827235023"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ATB1 [ATB1]
Gosub HORODAT
Local Inpbox "ATB1" From GFONCTION At A_STAMP With A_WINDPREV Mask [ATB1] As [SIM_]
Grizo [ATB1]10
Grizo [ATB1]15
Grizo [ATB1]20
Grizo [ATB1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ATB1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=74 : Y1(1)=4 : Y2(1)=10
X1(2)=1 : X2(2)=74 : Y1(2)=11 : Y2(2)=15
X1(3)=1 : X2(3)=74 : Y1(3)=16 : Y2(3)=25
Return

$ON_CODACT
Onevent CONTROL Call C_CODACT(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_CODACT(zc) From W1ATB1
Onevent AFTER_CHANGE Gosub AMM_CODACT From W1ATB1
Return

Subprog AS_CODACT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(186,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CODACT(zc) From W1ATB1
Onkey   2 Titled GBOUTS Call S_CODACT(zc) From W1ATB1
Onkey 144 Titled GBOUTP Call P_CODACT(zc) From W1ATB1
Onkey 146 Titled GBOUTA Call SA_CODACT(zc) From W1ATB1
Gosub _AFF
End

Subprog C_CODACT(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ACV","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "CODACT" : GZNUM = 4 : Endif
If !mkstat
 ## Action CONTACV
 Call CONTACT(VALEUR,[M]CODACT) From OBJDIV
 If mkstat : GERR = 1 : GZONE = "CODACT" : GZNUM = 4 : Endif
Endif
Gosub _AFF
End

$AMM_CODACT
Call AM_CODACT(zc)
If !mkstat & GOBJET
 zoncou = "CODACT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODACT(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCODACT)")>indice
 [M]CODACT(indice) = VALEUR
 Affzo ZCODACT(indice)
Endif
Gosub _AFF
End

Subprog S_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ACV"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CODACT(VALEUR)
Variable Char    VALEUR()
Call OBJET("ACV",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ACV"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ACV",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCODACT
Onevent BEFORE_AREA Gosub AV_ZCODACT From W1ATB1
Return

$AV_ZCODACT
If clalev([F:ACV])=0 : Local File ACTIV [ACV] : Endif
Call LECTURE("ACV",[M]CODACT(indice),"") From CONTOBJ
Call TEXTE([F:ACV]LIBACT,zc) From OBJDIV
Gosub _AFF
Return

$ON_MODULE
Onevent INIT_AREA Call D_MODULE(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_MODULE(zc) From W1ATB1
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODULE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPDBA
Onevent BEFORE_INPUT Call AS_TYPDBA(zc) From W1ATB1
Onevent INIT_AREA Call D_TYPDBA(zc) From W1ATB1
Onevent CONTROL Call C_TYPDBA(zc) From W1ATB1
Return

Subprog D_TYPDBA(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPDBA,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

Subprog AS_TYPDBA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(23) From COMBOS
## Action STD
Call AS_TYPDBA(VALEUR) From SUBATB
If mkstat=2
 [M]TYPDBA(INDIC) = VALEUR
 Affzo TYPDBA(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,23,1))))
Endif
If !mkstat
 Discombo 0 From TYPDBA(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From TYPDBA(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_TYPDBA(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_FLG130
Onevent CONTROL Call C_FLG130(zc) From W1ATB1
Onevent INIT_AREA Call D_FLG130(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_FLG130(zc) From W1ATB1
Return

Subprog D_FLG130(VALEUR)
Variable Integer VALEUR
If varinit([M]FLG130,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLG130(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_FLG130(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_FLG130(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "FLG130" : GZNUM = 52136 : Endif
Gosub _AFF
End

$ON_GENTRA
Onevent AFTER_CHANGE Gosub AMM_GENTRA From W1ATB1
Onevent INIT_AREA Call D_GENTRA(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_GENTRA(zc) From W1ATB1
Return

Subprog D_GENTRA(VALEUR)
Variable Integer VALEUR
If varinit([M]GENTRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_GENTRA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_GENTRA
Call AM_GENTRA(zc)
If !mkstat & GOBJET
 zoncou = "GENTRA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GENTRA(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_GENTRA(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "GENTRA" : GZNUM = 29343 : Endif
Gosub _AFF
End

$ON_ZERO
Onevent INIT_AREA Call D_ZERO(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_ZERO(zc) From W1ATB1
Return

Subprog D_ZERO(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ZERO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SECURE
Onevent INIT_AREA Call D_SECURE(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_SECURE(zc) From W1ATB1
Return

Subprog D_SECURE(VALEUR)
Variable Integer VALEUR
If varinit([M]SECURE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SECURE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPFIC
Onevent CONTROL Call C_TYPFIC(zc) From W1ATB1
Onevent INIT_AREA Call D_TYPFIC(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_TYPFIC(zc) From W1ATB1
Return

Subprog D_TYPFIC(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPFIC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPFIC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TYPFIC(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_TYPFIC(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "TYPFIC" : GZNUM = 12 : Endif
Gosub _AFF
End

$ON_CRE
Onevent CONTROL Call C_CRE(zc) From W1ATB1
Onevent INIT_AREA Call D_CRE(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_CRE(zc) From W1ATB1
Return

Subprog D_CRE(VALEUR)
Variable Integer VALEUR
If varinit([M]CRE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CRE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_CRE(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_CRE(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "CRE" : GZNUM = 711 : Endif
Gosub _AFF
End

$ON_OPT
Onevent INIT_AREA Call D_OPT(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_OPT(zc) From W1ATB1
Return

Subprog D_OPT(VALEUR)
Variable Integer VALEUR
If varinit([M]OPT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OPT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FLGLEG
Onevent INIT_AREA Call D_FLGLEG(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_FLGLEG(zc) From W1ATB1
Return

Subprog D_FLGLEG(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGLEG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGLEG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPDLV
Onevent INIT_AREA Call D_TYPDLV(zc) From W1ATB1
Onevent BEFORE_INPUT Call AS_TYPDLV(zc) From W1ATB1
Return

Subprog D_TYPDLV(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPDLV,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPDLV(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SYMBOL
Onevent CONTROL Call C_SYMBOL(zc) From W1ATB1
Return

Subprog C_SYMBOL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SYMBOL(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "SYMBOL" : GZNUM = 483 : Endif
Gosub _AFF
End

$ON_COLFMT
Onevent CONTROL Call C_COLFMT(zc) From W1ATB1
Return

Subprog C_COLFMT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_COLFMT(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "COLFMT" : GZNUM = 803 : Endif
Gosub _AFF
End

$ON_COLLNG
Onevent CONTROL Call C_COLLNG(zc) From W1ATB1
Return

Subprog C_COLLNG(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_COLLNG(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "COLLNG" : GZNUM = 25 : Endif
Gosub _AFF
End

$ON_COLDEC
Onevent CONTROL Call C_COLDEC(zc) From W1ATB1
Return

Subprog C_COLDEC(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_COLDEC(VALEUR) From SUBATB
If mkstat : GERR = 1 : GZONE = "COLDEC" : GZNUM = 3500 : Endif
Gosub _AFF
End

$CHG_STY
Return


