#<AdxTL>@(#)0.0.0.0 $Revision$Class Reserved brackets
# Supervisor
## CRUD-CLASSE ## ACTLDEV
# 2018-08-27 12:19:28 905


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(ACTLDEV,ASTATUS)
Variable Instance ACTLDEV Using C_ACTLDEV
Variable Integer ASTATUS

If ACTLDEV = null : End : Endif

Gosub _AVARIABLES From WMC00ACTLDEV

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_ACTLDEV

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(ACTLDEV,ASTATUS)
Variable Instance ACTLDEV Using C_ACTLDEV
Variable Integer ASTATUS

If ACTLDEV = null : End : Endif

Gosub AVARIABLES From WMC00ACTLDEV
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_ACTLDEV
Else
 Gosub AINSERT_ACTLDEV
Endif

Gosub _AINSERT_AFTER
[L]A_I = ACTLDEV.freeSnapshot
ACTLDEV.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ACTLDEV._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ACTLDEV._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ACTLDEV._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If ACTLDEV.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ACTLDEV.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet ACTLDEV.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ACTLDEV.COLACD)
 If ACTLDEV.COLACD([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ACTLDEV.COLACD([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

For [L]A_I=1 To maxtab(ACTLDEV.COLACD)
 If ACTLDEV.COLACD([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ACTLDEV.COLACD([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ACTLDEV.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_ACTLDEV
Trbegin [F:ACD]
 Gosub AINSERT_ACTLDEV
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_ACTLDEV
Raz [F:ACD]
[L]ASTATUS = max([L]ASTATUS,fmet ACTLDEV.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00ACTLDEV._MAJSQL_ACTLDEV(ACTLDEV))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ACTLDEV.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If ACTLDEV.snapshotEnabled=1
 [L]A_RETIK = ACTLDEV.revertUpdTick
Endif
[L]ASTATUS = max(fmet ACTLDEV.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(ACTLDEV.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ACTLDEV.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(ACTLDEV.COLACD)
 If ACTLDEV.COLACD([L]A_I)<>null
  If ACTLDEV.COLACD([L]A_I).ASTALIN=[V]CST_ADEL or ACTLDEV.COLACD([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ACTLDEV.COLACD([L]A_I)
   ACTLDEV.COLACD([L]A_I) = null
  Elsif ACTLDEV.COLACD([L]A_I).ASTALIN <> [V]CST_ALL
   ACTLDEV.COLACD([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
Return



