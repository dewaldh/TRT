#<AdxTL>@(#)0.0.0.0 $Revision$Class Change request
# Sage X3 supervisor
## CRUD-CLASSE ## CCMCHGREQ
# 2018-06-20 06:39:43 685


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(CCMCHGREQ,ASTATUS)
Variable Instance CCMCHGREQ Using C_CCMCHGREQ
Variable Integer ASTATUS

If CCMCHGREQ = null : End : Endif

Gosub _AVARIABLES From WMC00CCMCHGREQ

[L]A_STRSITE = CCMCHGREQ.SITE
[L]A_STRACC = ""
Gosub AINSERT_CCMCHGREQ

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(CCMCHGREQ,ASTATUS)
Variable Instance CCMCHGREQ Using C_CCMCHGREQ
Variable Integer ASTATUS

If CCMCHGREQ = null : End : Endif

Gosub AVARIABLES From WMC00CCMCHGREQ
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = CCMCHGREQ.SITE
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_CCMCHGREQ
Else
 Gosub AINSERT_CCMCHGREQ
Endif

Gosub _AINSERT_AFTER
[L]A_I = CCMCHGREQ.freeSnapshot
CCMCHGREQ.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMCHGREQ._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMCHGREQ._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMCHGREQ._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If CCMCHGREQ.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMCHGREQ.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRNOTES) : # CCMCRNOTES -- 2
 If CCMCHGREQ.CCMCRNOTES(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRNOTES(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGI) : # CCMCRORIGI -- 3
 If CCMCHGREQ.CCMCRORIGI(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGI(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGC) : # CCMCRORIGC -- 4
 If CCMCHGREQ.CCMCRORIGC(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGC(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGS) : # CCMCRORIGS -- 5
 If CCMCHGREQ.CCMCRORIGS(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGS(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGE) : # CCMCRORIGE -- 6
 If CCMCHGREQ.CCMCRORIGE(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGE(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMAPPROVER) : # CCMAPPROVER -- 7
 If CCMCHGREQ.CCMAPPROVER(A_N2) <> null
& and !find(CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMAPPROVER(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAD) : # CCMIASTAD -- 8
 If CCMCHGREQ.CCMIASTAD(A_N2) <> null
& and !find(CCMCHGREQ.CCMIASTAD(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAM) : # CCMIASTAM -- 9
 If CCMCHGREQ.CCMIASTAM(A_N2) <> null
& and !find(CCMCHGREQ.CCMIASTAM(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAS) : # CCMIASTAS -- 10
 If CCMCHGREQ.CCMIASTAS(A_N2) <> null
& and !find(CCMCHGREQ.CCMIASTAS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRNOTES) : # CCMCRNOTES -- 2
 If CCMCHGREQ.CCMCRNOTES(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRNOTES(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGI) : # CCMCRORIGI -- 3
 If CCMCHGREQ.CCMCRORIGI(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGI(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGC) : # CCMCRORIGC -- 4
 If CCMCHGREQ.CCMCRORIGC(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGC(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGS) : # CCMCRORIGS -- 5
 If CCMCHGREQ.CCMCRORIGS(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGS(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGE) : # CCMCRORIGE -- 6
 If CCMCHGREQ.CCMCRORIGE(A_N2) <> null
& and !find(CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGE(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMAPPROVER) : # CCMAPPROVER -- 7
 If CCMCHGREQ.CCMAPPROVER(A_N2) <> null
& and !find(CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMAPPROVER(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAD) : # CCMIASTAD -- 8
 If CCMCHGREQ.CCMIASTAD(A_N2) <> null
& and !find(CCMCHGREQ.CCMIASTAD(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAM) : # CCMIASTAM -- 9
 If CCMCHGREQ.CCMIASTAM(A_N2) <> null
& and !find(CCMCHGREQ.CCMIASTAM(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAS) : # CCMIASTAS -- 10
 If CCMCHGREQ.CCMIASTAS(A_N2) <> null
& and !find(CCMCHGREQ.CCMIASTAS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_CCMCHGREQ
Trbegin [F:CCMCR]
 Gosub AINSERT_CCMCHGREQ
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_CCMCHGREQ
Raz [F:CCMCR]
[L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( CCMCHGREQ.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( CCMCHGREQ.ASTALIN,[V]CST_AUPD) & 
& fmet CCMCHGREQ.AGETATTRIBUTE("CRDESC","$isLoaded")="true")
[L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCHGREQ_CRDESC(CCMCHGREQ,CCMCHGREQ.CRDESC)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( CCMCHGREQ.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( CCMCHGREQ.ASTALIN,[V]CST_AUPD) & 
& fmet CCMCHGREQ.AGETATTRIBUTE("REJDESC","$isLoaded")="true")
[L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCHGREQ_REJDESC(CCMCHGREQ,CCMCHGREQ.REJDESC)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00CCMCHGREQ._MAJSQL_CCMCHGREQ(CCMCHGREQ))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRNOTES)
 If CCMCHGREQ.CCMCRNOTES(A_N2) <> null and
& (CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN=[L]A_TYPMAJ or
& CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN=[V]CST_ALL)
  If CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:CCMCRN]
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRNOTES(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCRNOTES(CCMCHGREQ.CCMCRNOTES(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRNOTES(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGI)
 If CCMCHGREQ.CCMCRORIGI(A_N2) <> null and
& (CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN=[L]A_TYPMAJ or
& CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN=[V]CST_ALL)
  If CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:CCMCROI]
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGI(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCRORIGI(CCMCHGREQ.CCMCRORIGI(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGI(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGC)
 If CCMCHGREQ.CCMCRORIGC(A_N2) <> null and
& (CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN=[L]A_TYPMAJ or
& CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN=[V]CST_ALL)
  If CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:CCMCROC]
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGC(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCRORIGC(CCMCHGREQ.CCMCRORIGC(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGC(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGS)
 If CCMCHGREQ.CCMCRORIGS(A_N2) <> null and
& (CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN=[L]A_TYPMAJ or
& CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN=[V]CST_ALL)
  If CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:CCMCROS]
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGS(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCRORIGS(CCMCHGREQ.CCMCRORIGS(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGS(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGE)
 If CCMCHGREQ.CCMCRORIGE(A_N2) <> null and
& (CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN=[L]A_TYPMAJ or
& CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN=[V]CST_ALL)
  If CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:CCMCROE]
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGE(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMCRORIGE(CCMCHGREQ.CCMCRORIGE(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMCRORIGE(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMAPPROVER)
 If CCMCHGREQ.CCMAPPROVER(A_N2) <> null and
& (CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN=[L]A_TYPMAJ or
& CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN=[V]CST_ALL)
  If CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:CCMAPPR]
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMAPPROVER(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00CCMCHGREQ._MAJSQL_CCMAPPROVER(CCMCHGREQ.CCMAPPROVER(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.CCMAPPROVER(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAD)
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAM)
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAS)
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet CCMCHGREQ.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If CCMCHGREQ.snapshotEnabled=1
 [L]A_RETIK = CCMCHGREQ.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMCHGREQ.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(CCMCHGREQ.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMCHGREQ.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRNOTES)
 If CCMCHGREQ.CCMCRNOTES(A_N2) <> null
  If CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMCRNOTES(A_N2)
   CCMCHGREQ.CCMCRNOTES(A_N2) = null
  Elsif CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMCRNOTES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGI)
 If CCMCHGREQ.CCMCRORIGI(A_N2) <> null
  If CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMCRORIGI(A_N2)
   CCMCHGREQ.CCMCRORIGI(A_N2) = null
  Elsif CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMCRORIGI(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGC)
 If CCMCHGREQ.CCMCRORIGC(A_N2) <> null
  If CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMCRORIGC(A_N2)
   CCMCHGREQ.CCMCRORIGC(A_N2) = null
  Elsif CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMCRORIGC(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGS)
 If CCMCHGREQ.CCMCRORIGS(A_N2) <> null
  If CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMCRORIGS(A_N2)
   CCMCHGREQ.CCMCRORIGS(A_N2) = null
  Elsif CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMCRORIGS(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMCRORIGE)
 If CCMCHGREQ.CCMCRORIGE(A_N2) <> null
  If CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMCRORIGE(A_N2)
   CCMCHGREQ.CCMCRORIGE(A_N2) = null
  Elsif CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMCRORIGE(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMAPPROVER)
 If CCMCHGREQ.CCMAPPROVER(A_N2) <> null
  If CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMAPPROVER(A_N2)
   CCMCHGREQ.CCMAPPROVER(A_N2) = null
  Elsif CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMAPPROVER(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAD)
 If CCMCHGREQ.CCMIASTAD(A_N2) <> null
  If CCMCHGREQ.CCMIASTAD(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMIASTAD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMIASTAD(A_N2)
   CCMCHGREQ.CCMIASTAD(A_N2) = null
  Elsif CCMCHGREQ.CCMIASTAD(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMIASTAD(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAM)
 If CCMCHGREQ.CCMIASTAM(A_N2) <> null
  If CCMCHGREQ.CCMIASTAM(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMIASTAM(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMIASTAM(A_N2)
   CCMCHGREQ.CCMIASTAM(A_N2) = null
  Elsif CCMCHGREQ.CCMIASTAM(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMIASTAM(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMCHGREQ.CCMIASTAS)
 If CCMCHGREQ.CCMIASTAS(A_N2) <> null
  If CCMCHGREQ.CCMIASTAS(A_N2).ASTALIN=[V]CST_ADEL or CCMCHGREQ.CCMIASTAS(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMCHGREQ.CCMIASTAS(A_N2)
   CCMCHGREQ.CCMIASTAS(A_N2) = null
  Elsif CCMCHGREQ.CCMIASTAS(A_N2).ASTALIN <> [V]CST_ALL
   CCMCHGREQ.CCMIASTAS(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



