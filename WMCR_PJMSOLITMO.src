#<AdxTL>@(#)0.0.0.0 $Revision$Class Sold product list
# Supervisor
## CRUD-CLASSE ## PJMSOLITMO
# 2018-08-27 12:40:24 819


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMSOLITMO [PSOO_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMSOLITMO") From ASYRCOM : Endif
Local Instance PJMSOLITMO Using C_PJMSOLITMO

If !SILENCE : Call TRACE("3 --> New Instance C_PJMSOLITMO") From ASYRCOM : Endif
PJMSOLITMO = NewInstance C_PJMSOLITMO AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PSOO_]PSOO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMSOLITMO") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMO.AREAD([PSOO_]PSONUM,[PSOO_]OPPNUM,[PSOO_]PBUCOD,[PSOO_]TASCOD,[PSOO_]SEQNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMSOLITMO.PSONUM ="-num$(PJMSOLITMO.PSONUM)) From ASYRCOM
 Call TRACE("PJMSOLITMO.OPPNUM ="-num$(PJMSOLITMO.OPPNUM)) From ASYRCOM
 Call TRACE("PJMSOLITMO.PBUCOD ="-num$(PJMSOLITMO.PBUCOD)) From ASYRCOM
 Call TRACE("PJMSOLITMO.TASCOD ="-num$(PJMSOLITMO.TASCOD)) From ASYRCOM
 Call TRACE("PJMSOLITMO.SEQNUM ="-num$(PJMSOLITMO.SEQNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMSOLITMO.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMSOLITMO.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PSOO_]
FreeGroup PJMSOLITMO
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMSOLITMO,ACLE,ASTATUS,_ETAG)
Variable Instance PJMSOLITMO Using C_PJMSOLITMO
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PSONUM(20)
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Local Char _TASCOD(15)
Local Integer _SEQNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PSONUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_OPPNUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PBUCOD = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_TASCOD = num$([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_SEQNUM = val([L]CLE(5)) : Endif
Raz [L]_ETAG
Local File PJMSOLITMO [PSOO]
Default File [F:PSOO]
Read [F:PSOO]PSOO0 = [L]_PSONUM;[L]_OPPNUM;[L]_PBUCOD;[L]_TASCOD;[L]_SEQNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PSOO]UPDTICK)>0
 [L]_ETAG = num$([F:PSOO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMSOLITMO,ACLE,ASTATUS)
Variable Instance PJMSOLITMO Using C_PJMSOLITMO
Value Char ACLE
Variable Integer ASTATUS
Local Char _PSONUM(20)
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Local Char _TASCOD(15)
Local Integer _SEQNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PSONUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_OPPNUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PBUCOD = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_TASCOD = num$([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_SEQNUM = val([L]CLE(5)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMO.AREAD([L]_PSONUM,[L]_OPPNUM,[L]_PBUCOD,[L]_TASCOD,[L]_SEQNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMSOLITMO,_PSONUM,_OPPNUM,_PBUCOD,_TASCOD,_SEQNUM,ASTATUS)
Variable Instance PJMSOLITMO Using C_PJMSOLITMO
Value Char _PSONUM
Value Char _OPPNUM
Value Char _PBUCOD
Value Char _TASCOD
Value Integer _SEQNUM
Variable Integer ASTATUS

If PJMSOLITMO = null : End : Endif

Gosub AVARIABLES From WMC00PJMSOLITMO
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMSOLITMO.APARENT=null
 [L]A_I = PJMSOLITMO.freeSnapshot
 PJMSOLITMO.snapshotEnabled = 0
 PJMSOLITMO.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMSOLITMO.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMO._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMSOLITMO.APARENT=null
 PJMSOLITMO.snapshotEnabled = 1
 PJMSOLITMO.setAccessorEnabled = 1
Endif
LogicClose File [PSOO]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMO._ACTION_PARAM("AREAD_BEFORE",[L]_PSONUM,[L]_OPPNUM,[L]_PBUCOD,[L]_TASCOD,[L]_SEQNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PSOO]
Read [F:PSOO]PSOO0 = [L]_PSONUM;[L]_OPPNUM;[L]_PBUCOD;[L]_TASCOD;[L]_SEQNUM
If fstat
[L]A_ERROR = [L]_PSONUM+"~"+[L]_OPPNUM+"~"+[L]_PBUCOD+"~"+[L]_TASCOD+"~"+num$([L]_SEQNUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMSOLITMO,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PSOO]AUUID)>0 & [F:PSOO]AUUID=NullUuid
 [F:PSOO]AUUID = getUuid
Endif
SetInstance PJMSOLITMO With [F:PSOO]
PJMSOLITMO.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMO.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



