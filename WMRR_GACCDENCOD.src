#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment attribute
# Supervisor
## CRUD-CLASSE ## GACCDENCOD
# 2018-08-27 13:16:18 679


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GACCDENCOD [CDA_]

If !SILENCE : Call TRACE("2 --> Local Instance R_GACCDENCOD") From ASYRCOM : Endif
Local Instance GACCDENCOD Using R_GACCDENCOD

If !SILENCE : Call TRACE("3 --> New Instance R_GACCDENCOD") From ASYRCOM : Endif
GACCDENCOD = NewInstance R_GACCDENCOD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CDA_]CDA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of GACCDENCOD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet GACCDENCOD.AREAD([CDA_]COD,[CDA_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("GACCDENCOD.CDA.COD ="-num$(GACCDENCOD.CDA.COD)) From ASYRCOM
 Call TRACE("GACCDENCOD.CDA.LEG ="-num$(GACCDENCOD.CDA.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(GACCDENCOD.CDA.AKEYS)
  Call TRACE("-"-num$(I)-":"-GACCDENCOD.CDA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CDA_]
FreeGroup GACCDENCOD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(GACCDENCOD,ACLE,ASTATUS,_ETAG)
Variable Instance GACCDENCOD Using R_GACCDENCOD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COD(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File GACCDENCOD [CDA]
Default File [F:CDA]
Read [F:CDA]CDA0 = [L]_COD;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CDA]UPDTICK)>0
 [L]_ETAG = num$([F:CDA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(GACCDENCOD,ACLE,ASTATUS)
Variable Instance GACCDENCOD Using R_GACCDENCOD
Value Char ACLE
Variable Integer ASTATUS
Local Char _COD(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet GACCDENCOD.AREAD([L]_COD,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(GACCDENCOD,_COD,_LEG,ASTATUS)
Variable Instance GACCDENCOD Using R_GACCDENCOD
Value Char _COD
Value Char _LEG
Variable Integer ASTATUS

If GACCDENCOD = null : End : Endif

Gosub AVARIABLES From WMR00GACCDENCOD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If GACCDENCOD.APARENT=null
 [L]A_I = GACCDENCOD.freeSnapshot
 GACCDENCOD.snapshotEnabled = 0
 GACCDENCOD.setAccessorEnabled = 0
Endif

If fmet GACCDENCOD.ACTX.AGETAFCRIGHT(GACCDENCOD,"GESCDA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CDA]
Read [F:CDA]CDA0 = [L]_COD;[L]_LEG
If fstat
[L]A_ERROR = [L]_COD+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(GACCDENCOD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:CDA]ACS
If fmet GACCDENCOD.ACTX.AGETAFCRIGHTR(GACCDENCOD,"GESCDA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet GACCDENCOD.ACTX.AGETACSRIGHTC(GACCDENCOD,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet GACCDENCOD.ACTX.ASTACRITROLE(GACCDENCOD,[L]_COD+"~"+[L]_LEG
& ,"CDA","CDA",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet GACCDENCOD.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  GACCDENCOD.CDA.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet GACCDENCOD.CDA.AREAD([L]_COD,[L]_LEG))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet GACCDENCOD.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & GACCDENCOD.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet GACCDENCOD._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If GACCDENCOD.APARENT=null
   GACCDENCOD.snapshotEnabled = 1
   GACCDENCOD.setAccessorEnabled = 1
  Endif
  LogicClose File [CDA]
  End
  


