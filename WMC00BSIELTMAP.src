#<AdxTL>@(#)0.0.0.0 $Revision$Class Camt element mapping
# Supervisor
## CRUD-CLASSE ## BSIELTMAP
# 2018-08-27 12:26:39 866

Gosub TEST From WMCR_BSIELTMAP : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,COD)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# BSIELTMAP : BSIELTMAP
# BSIELTMAPD : BSIELTMAP BSIELTMAPD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet BSIELTMAP._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = BSIELTMAP.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(BSIELTMAP.ACTX.AFOLDER,nomap,"")>0
 Local File BSIELTMAP [BSIELT]
 Local File BSIELTMAPD [BSIELTD]
 Local File ATEXTRA [AXX]
Else
 Local File =BSIELTMAP.ACTX.AFOLDER+".BSIELTMAP" [BSIELT]
 Local File =BSIELTMAP.ACTX.AFOLDER+".BSIELTMAPD" [BSIELTD]
 Local File =BSIELTMAP.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [BSIELT] With
& [BSIELTD]BSIELTD0 = [F:BSIELT]COD
& As [LNK_]
Return

############################################################################################
### BSIELTMAP(WBSIELT)
############################################################################################
Funprog  _MAJSQL_BSIELTMAP(WBSIELT)
Variable Instance WBSIELT Using C_BSIELTMAP
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIELT]
If WBSIELT.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIELT) From ASYRSUB
 SetInstance [F:BSIELT] With WBSIELT
 For J=1 To maxtab(WBSIELT.AXX)
  If WBSIELT.AXX(J)<>null & WBSIELT.AXX(J).PRO= "DESAXX" & WBSIELT.AXX(J).FLG>0
   Call MAJTEXTRALAN(WBSIELT,WBSIELT.AXX(J).TEX,"BSIELTMAP","DESAXX",WBSIELT.AXX(J).LAN,WBSIELT.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BSIELT]
 If fstat
  Call FSTA("BSIELT",WBSIELT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIELT.updTick = [F:BSIELT]updTick
Elsif WBSIELT.ASTALIN=[V]CST_ALL or WBSIELT.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIELT) From ASYRSUB
 SetInstance [F:BSIELT] With WBSIELT
 For J=1 To maxtab(WBSIELT.AXX)
  If WBSIELT.AXX(J)<>null & WBSIELT.AXX(J).PRO= "DESAXX" & WBSIELT.AXX(J).FLG>0
   Call MAJTEXTRALAN(WBSIELT,WBSIELT.AXX(J).TEX,"BSIELTMAP","DESAXX",WBSIELT.AXX(J).LAN,WBSIELT.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIELT,"BSIELTMAP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIELT]BSIELT0 = [F:BSIELT]COD
 If fstat
  Call FSTA("BSIELT",WBSIELT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIELT.updTick = [F:BSIELT]updTick
Elsif WBSIELT.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIELT] With WBSIELT
 For J=1 To maxtab(WBSIELT.AXX)
  If WBSIELT.AXX(J)<>null & WBSIELT.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WBSIELT,WBSIELT.AXX(J).TEX,"BSIELTMAP","DESAXX",WBSIELT.AXX(J).LAN,WBSIELT.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIELT,"BSIELTMAP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIELT]BSIELT0 = [F:BSIELT]COD
 If fstat
  Call FSTA("BSIELT",WBSIELT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BSIELTMAPD(WBSIELTD)
############################################################################################
Funprog  _MAJSQL_BSIELTMAPD(WBSIELTD)
Variable Instance WBSIELTD Using C_BSIELTMAPD
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIELTD]
If WBSIELTD.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIELTD) From ASYRSUB
 SetInstance [F:BSIELTD] With WBSIELTD
 Write [F:BSIELTD]
 If fstat
  Call FSTA("BSIELTD",WBSIELTD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIELTD.updTick = [F:BSIELTD]updTick
Elsif WBSIELTD.ASTALIN=[V]CST_ALL or WBSIELTD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIELTD) From ASYRSUB
 SetInstance [F:BSIELTD] With WBSIELTD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIELTD,"BSIELTMAPD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIELTD]BSIELTD0 = [F:BSIELTD]COD;[F:BSIELTD]LIN
 If fstat
  Call FSTA("BSIELTD",WBSIELTD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIELTD.updTick = [F:BSIELTD]updTick
Elsif WBSIELTD.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIELTD] With WBSIELTD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIELTD,"BSIELTMAPD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIELTD]BSIELTD0 = [F:BSIELTD]COD;[F:BSIELTD]LIN
 If fstat
  Call FSTA("BSIELTD",WBSIELTD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



