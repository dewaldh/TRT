#<AdxTL>@(#)0.0.0.0 $Revision$Class Available stock inquiry
# Supervisor
## ACLA-CLASSE ## STKCNSSDIM
# 2018-08-27 13:35:46 929

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : ITMREF Product ( Field ITM 20)
####################################################################
 
$SET_ITMREF
If [L]_AOLDVAL<>this.ITMREF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ITMREF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ITMREF
 Gosub PROPAGATE_ITMREF
Endif
Return

$INIT_ITMREF
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "ITMREF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ITMREF
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "ITMREF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ITMREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ITMREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ITMREF
[L]CURPRO = "ITMREF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ITMREF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ITMREF
[L]CURPRO = "ITMREF"
If vireblc(this.ITMREF,2)<>vireblc(format$("K:20c",this.ITMREF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ITMREF
[L]CURPRO = "ITMREF"
If vireblc(this.ITMREF,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPITM.ACTRLREF(this,"ITMREF",this.ITMREF,this.ITMREF,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ITMREF<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ITMREF
[L]CURPRO = "ITMREF"
Return

$PROPAGATE_ITMREF
this.isReadonly = 0
[L]CURPRO = "ITMREF"
Gosub _LNKPRO_ITMREF
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ITMREF
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "ITMREF"
$_LNKPRO_ITMREF
If vireblc(this.ITMREF,2)<>""
 # Link ITMMASTER
 Local File ITMMASTER [WITM]
 Read [F:WITM]ITM0 = this.ITMREF
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ITMMASTER" & ZONE="DES1AXX" & IDENT1=[F:WITM]ITMREF & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ITMREF","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WITM]
Endif
Return

$_ALOADATTRIBUTE_ITMREF
[L]ASTATUS = fmet this.ASETATTRIBUTE("ITMREF","$isMandatory","true")
Return


####################################################################
# 2 : FCY Site ( Field FCY 5)
####################################################################
 
$SET_FCY
If [L]_AOLDVAL<>this.FCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FCY
 Gosub PROPAGATE_FCY
Endif
Return

$INIT_FCY
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "FCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FCY
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "FCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FCY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FCY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FCY
[L]CURPRO = "FCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FCY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FCY
[L]CURPRO = "FCY"
If vireblc(this.FCY,2)<>vireblc(format$("K:5c",this.FCY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FCY
[L]CURPRO = "FCY"
If vireblc(this.FCY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFCY.ACTRLREF(this,"FCY",this.FCY,this.FCY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FCY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FCY
[L]CURPRO = "FCY"
Return

$PROPAGATE_FCY
this.isReadonly = 0
[L]CURPRO = "FCY"
Gosub _LNKPRO_FCY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FCY
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "FCY"
$_LNKPRO_FCY
If vireblc(this.FCY,2)<>""
 # Link FACILITY
 Local File FACILITY [WFCY]
 Read [F:WFCY]FCY0 = this.FCY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FCY","$title",[F:WFCY]FCYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FCY","$description",[F:WFCY]FCYNAM)
 Endif
 LogicClose File [WFCY]
Endif
Return

$_ALOADATTRIBUTE_FCY
[L]ASTATUS = fmet this.ASETATTRIBUTE("FCY","$isMandatory","true")
Return


####################################################################
# 3 : PERCOD Periodicity ( Field Local menu number 278)
####################################################################
 
$SET_PERCOD
If [L]_AOLDVAL<>this.PERCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PERCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PERCOD
 Gosub PROPAGATE_PERCOD
Endif
Return

$INIT_PERCOD
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "PERCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PERCOD=0 and fmet this.AGETATTRIBUTE("PERCOD","$isMandatory")="true"
 this.PERCOD = 1
Endif
Return
 
$CONTROL_PERCOD
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "PERCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PERCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PERCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PERCOD
[L]CURPRO = "PERCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PERCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PERCOD
[L]CURPRO = "PERCOD"
If this.PERCOD<0 or this.PERCOD>len(mess(0,278,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"278 ->"-num$(this.PERCOD)-mess(99,123,1)):  Return : # Local menu "278 -> Invalid option
Endif
Return

$_AOTHERS_PERCOD
[L]CURPRO = "PERCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PERCOD
[L]CURPRO = "PERCOD"
Return

$PROPAGATE_PERCOD
this.isReadonly = 0
[L]CURPRO = "PERCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PERCOD
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "PERCOD"
$_LNKPRO_PERCOD
Return

$_ALOADATTRIBUTE_PERCOD
[L]ASTATUS = fmet this.ASETATTRIBUTE("PERCOD","$isMandatory","true")
Return


####################################################################
# 4 : REFPER Reference date ( Field D)
####################################################################
 
$SET_REFPER
If [L]_AOLDVAL<>this.REFPER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REFPER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REFPER
 Gosub PROPAGATE_REFPER
Endif
Return

$INIT_REFPER
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "REFPER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REFPER
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "REFPER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REFPER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REFPER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REFPER
[L]CURPRO = "REFPER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.REFPER=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REFPER
[L]CURPRO = "REFPER"
Return

$_AOTHERS_REFPER
[L]CURPRO = "REFPER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REFPER
[L]CURPRO = "REFPER"
Return

$PROPAGATE_REFPER
this.isReadonly = 0
[L]CURPRO = "REFPER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REFPER
Gosub DECLARE_VAR From WMR0STKCNSSDIM
[L]CURPRO = "REFPER"
$_LNKPRO_REFPER
Return

$_ALOADATTRIBUTE_REFPER
[L]ASTATUS = fmet this.ASETATTRIBUTE("REFPER","$isMandatory","true")
Return




