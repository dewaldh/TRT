#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ITM2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:03:53"
A_USER  = "ADMIN"
A_STAMP = "20180828000353"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ITM2 [ITM2]
Gosub HORODAT
Local Inpbox "ITM2" From GFONCTION At A_STAMP With A_WINDPREV Mask [ITM2] As [SIM_]
Grizo [ITM2]5
Grizo [ITM2]10
Grizo [ITM2]30
Grizo [ITM2]40
Grizo [ITM2]50
Grizo [ITM2]55
Grizo [ITM2]60
Grizo [ITM2]65
Grizo [ITM2]0
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ITM2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=36 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=36 : Y1(1)=4 : Y2(1)=12
X1(2)=37 : X2(2)=87 : Y1(2)=1 : Y2(2)=6
X1(3)=37 : X2(3)=87 : Y1(3)=7 : Y2(3)=12
X1(4)=1 : X2(4)=36 : Y1(4)=13 : Y2(4)=22
X1(5)=37 : X2(5)=87 : Y1(5)=13 : Y2(5)=20
X1(6)=37 : X2(6)=87 : Y1(6)=21 : Y2(6)=22
X1(7)=37 : X2(7)=87 : Y1(7)=23 : Y2(7)=24
X1(8)=1 : X2(8)=36 : Y1(8)=25 : Y2(8)=24
Return

$ON_STOMGTCOD
Onevent BEFORE_INPUT Call AS_STOMGTCOD(zc) From W1ITM2
Onevent CONTROL Call C_STOMGTCOD(zc) From W1ITM2
Onevent AFTER_AREA Call AP_STOMGTCOD(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_STOMGTCOD From W1ITM2
Onevent INIT_AREA Call D_STOMGTCOD(zc) From W1ITM2
Return

Subprog D_STOMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STOMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(215) From COMBOS
## Action STD
Call AS_STOMGTCOD(VALEUR) From SUBITM
If mkstat=2
 [M]STOMGTCOD(INDIC) = VALEUR
 Affzo STOMGTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,215,1))))
Endif
Gosub _AFF
End

Subprog C_STOMGTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_STOMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "STOMGTCOD" : GZNUM = 2114 : Endif
Gosub _AFF
End

Subprog AP_STOMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_STOMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "STOMGTCOD" : GZNUM = 2114 : Endif
Gosub _AFF
End

$AMM_STOMGTCOD
Call AM_STOMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "STOMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STOMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "STOMGTCOD" : GZNUM = 2114 : Endif
Gosub _AFF
End

$ON_NEGSTO
Onevent BEFORE_INPUT Call AS_NEGSTO(zc) From W1ITM2
Onevent INIT_AREA Call D_NEGSTO(zc) From W1ITM2
Return

Subprog D_NEGSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]NEGSTO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_NEGSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NEGSTO(VALEUR) From SUBITM
If mkstat=2
 [M]NEGSTO(INDIC) = VALEUR
 Affzo NEGSTO(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STDFLG
Onevent INIT_AREA Call D_STDFLG(zc) From W1ITM2
Onevent BEFORE_INPUT Call AS_STDFLG(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_STDFLG From W1ITM2
Onevent CONTROL Call C_STDFLG(zc) From W1ITM2
Return

Subprog D_STDFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]STDFLG,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_STDFLG(VALEUR) From SUBITM
Endif
Gosub _AFF
End

Subprog AS_STDFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(297) From COMBOS
## Action STD
Call AS_STDFLG(VALEUR) From SUBITM
If mkstat=2
 [M]STDFLG(INDIC) = VALEUR
 Affzo STDFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,297,1))))
Endif
If !mkstat
 Discombo 0 From STDFLG(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From STDFLG(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_STDFLG(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_STDFLG
Call AM_STDFLG(zc)
If !mkstat & GOBJET
 zoncou = "STDFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STDFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STDFLG(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "STDFLG" : GZNUM = 8895 : Endif
Gosub _AFF
End

$ON_TRKCOD
Onevent AFTER_CHANGE Gosub AMM_TRKCOD From W1ITM2
Onevent INIT_AREA Call D_TRKCOD(zc) From W1ITM2
Onevent BEFORE_INPUT Call AS_TRKCOD(zc) From W1ITM2
Return

Subprog D_TRKCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TRKCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRKCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_TRKCOD
Call AM_TRKCOD(zc)
If !mkstat & GOBJET
 zoncou = "TRKCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TRKCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TRKCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "TRKCOD" : GZNUM = 13224 : Endif
Gosub _AFF
End

$ON_TRKLEV
Onevent INIT_AREA Call D_TRKLEV(zc) From W1ITM2
Return

Subprog D_TRKLEV(VALEUR)
Variable Integer VALEUR
If varinit([M]TRKLEV,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFPOT
Onevent BEFORE_INPUT Call AS_DEFPOT(zc) From W1ITM2
Onevent CONTROL Call C_DEFPOT(zc) From W1ITM2
Return

Subprog AS_DEFPOT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DEFPOT(VALEUR) From SUBITM
If mkstat=2
 [M]DEFPOT(INDIC) = VALEUR
 Affzo DEFPOT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DEFPOT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DEFPOT(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "DEFPOT" : GZNUM = 15789 : Endif
Gosub _AFF
End

$ON_RPLITM
Onevent BEFORE_INPUT Call AS_RPLITM(zc) From W1ITM2
Onevent CONTROL Call C_RPLITM(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_RPLITM From W1ITM2
Return

Subprog AS_RPLITM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_RPLITM(VALEUR) From SUBITM
If mkstat=2
 [M]RPLITM(INDIC) = VALEUR
 Affzo RPLITM(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_RPLITM(zc) From W1ITM2
Gosub _AFF
End

Subprog C_RPLITM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_RPLITM(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "RPLITM" : GZNUM = 2136 : Endif
Gosub _AFF
End

$AMM_RPLITM
Call AM_RPLITM(zc)
If !mkstat & GOBJET
 zoncou = "RPLITM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RPLITM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_RPLITM(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "RPLITM" : GZNUM = 2136 : Endif
Gosub _AFF
End

Subprog S_RPLITM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJSTD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJSTD"
 PARMSK(1) = "ITM"
 PARMSK(2) = "$"
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJSTD","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOTMGTCOD
Onevent BEFORE_INPUT Call AS_LOTMGTCOD(zc) From W1ITM2
Onevent CONTROL Call C_LOTMGTCOD(zc) From W1ITM2
Onevent AFTER_AREA Call AP_LOTMGTCOD(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_LOTMGTCOD From W1ITM2
Onevent INIT_AREA Call D_LOTMGTCOD(zc) From W1ITM2
Return

Subprog D_LOTMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2711) From COMBOS
## Action STD
Call AS_LOTMGTCOD(VALEUR) From SUBITM
If mkstat=2
 [M]LOTMGTCOD(INDIC) = VALEUR
 Affzo LOTMGTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2711,1))))
Endif
Gosub _AFF
End

Subprog C_LOTMGTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_LOTMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "LOTMGTCOD" : GZNUM = 2115 : Endif
Gosub _AFF
End

Subprog AP_LOTMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_LOTMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "LOTMGTCOD" : GZNUM = 2115 : Endif
Gosub _AFF
End

$AMM_LOTMGTCOD
Call AM_LOTMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "LOTMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOTMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LOTMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "LOTMGTCOD" : GZNUM = 2115 : Endif
Gosub _AFF
End

$ON_LOTCOU
Onevent BEFORE_INPUT Call AS_LOTCOU(zc) From W1ITM2
Onevent CONTROL Call C_LOTCOU(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_LOTCOU From W1ITM2
Return

Subprog AS_LOTCOU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(446,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_LOTCOU(VALEUR) From SUBITM
If mkstat=2
 [M]LOTCOU(INDIC) = VALEUR
 Affzo LOTCOU(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_LOTCOU(zc) From W1ITM2
Onkey   2 Titled GBOUTS Call S_LOTCOU(zc) From W1ITM2
Onkey 144 Titled GBOUTP Call P_LOTCOU(zc) From W1ITM2
Onkey 146 Titled GBOUTA Call SA_LOTCOU(zc) From W1ITM2
Gosub _AFF
End

Subprog C_LOTCOU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ANM","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "LOTCOU" : GZNUM = 54713 : Endif
If !mkstat
 ## Action STD
 Call C_LOTCOU(VALEUR) From SUBITM
 If mkstat : GERR = 1 : GZONE = "LOTCOU" : GZNUM = 54713 : Endif
Endif
Gosub _AFF
End

$AMM_LOTCOU
Call AM_LOTCOU(zc)
If !mkstat & GOBJET
 zoncou = "LOTCOU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOTCOU(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZLOTCOU)")>indice
 [M]LOTCOU(indice) = VALEUR
 Affzo ZLOTCOU(indice)
Endif
Gosub _AFF
End

Subprog S_LOTCOU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ANM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_LOTCOU(VALEUR)
Variable Char    VALEUR()
Call OBJET("ANM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_LOTCOU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ANM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LOTCOU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ANM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZLOTCOU
Onevent BEFORE_AREA Gosub AV_ZLOTCOU From W1ITM2
Return

$AV_ZLOTCOU
Call LECTEXTRA(zc,"ACODNUM","DES",num$([M]LOTCOU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_SERMGTCOD
Onevent BEFORE_INPUT Call AS_SERMGTCOD(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_SERMGTCOD From W1ITM2
Onevent INIT_AREA Call D_SERMGTCOD(zc) From W1ITM2
Return

Subprog D_SERMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SERMGTCOD(VALEUR) From SUBITM
If mkstat=2
 [M]SERMGTCOD(INDIC) = VALEUR
 Affzo SERMGTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SERMGTCOD
Call AM_SERMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "SERMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SERMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SERMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "SERMGTCOD" : GZNUM = 2118 : Endif
Gosub _AFF
End

$ON_SERCOU
Onevent CONTROL Call C_SERCOU(zc) From W1ITM2
Onevent BEFORE_INPUT Call AS_SERCOU(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_SERCOU From W1ITM2
Return

Subprog AS_SERCOU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(446,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_SERCOU(zc) From W1ITM2
Onkey   2 Titled GBOUTS Call S_SERCOU(zc) From W1ITM2
Onkey 144 Titled GBOUTP Call P_SERCOU(zc) From W1ITM2
Onkey 146 Titled GBOUTA Call SA_SERCOU(zc) From W1ITM2
Gosub _AFF
End

Subprog C_SERCOU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ANM","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "SERCOU" : GZNUM = 18826 : Endif
If !mkstat
 ## Action STD
 Call C_SERCOU(VALEUR) From SUBITM
 If mkstat : GERR = 1 : GZONE = "SERCOU" : GZNUM = 18826 : Endif
Endif
Gosub _AFF
End

$AMM_SERCOU
Call AM_SERCOU(zc)
If !mkstat & GOBJET
 zoncou = "SERCOU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SERCOU(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZSERCOU)")>indice
 [M]SERCOU(indice) = VALEUR
 Affzo ZSERCOU(indice)
Endif
Gosub _AFF
End

Subprog S_SERCOU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ANM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_SERCOU(VALEUR)
Variable Char    VALEUR()
Call OBJET("ANM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_SERCOU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ANM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_SERCOU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ANM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSERCOU
Onevent BEFORE_AREA Gosub AV_ZSERCOU From W1ITM2
Return

$AV_ZSERCOU
Call LECTEXTRA(zc,"ACODNUM","DES",num$([M]SERCOU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_EXYMGTCOD
Onevent BEFORE_INPUT Call AS_EXYMGTCOD(zc) From W1ITM2
Onevent CONTROL Call C_EXYMGTCOD(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_EXYMGTCOD From W1ITM2
Onevent INIT_AREA Call D_EXYMGTCOD(zc) From W1ITM2
Return

Subprog D_EXYMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]EXYMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_EXYMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_EXYMGTCOD(VALEUR) From SUBITM
If mkstat=2
 [M]EXYMGTCOD(INDIC) = VALEUR
 Affzo EXYMGTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_EXYMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_EXYMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "EXYMGTCOD" : GZNUM = 9490 : Endif
Gosub _AFF
End

$AMM_EXYMGTCOD
Call AM_EXYMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "EXYMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EXYMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_EXYMGTCOD(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "EXYMGTCOD" : GZNUM = 9490 : Endif
Gosub _AFF
End

$ON_EXYSTA
Onevent BEFORE_INPUT Call AS_EXYSTA(zc) From W1ITM2
Onevent CONTROL Call C_EXYSTA(zc) From W1ITM2
Return

Subprog AS_EXYSTA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_EXYSTA(VALEUR) From SUBITM
If mkstat=2
 [M]EXYSTA(INDIC) = VALEUR
 Affzo EXYSTA(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_EXYSTA(zc) From W1ITM2
Gosub _AFF
End

Subprog C_EXYSTA(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_EXYSTA(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "EXYSTA" : GZNUM = 1287 : Endif
Gosub _AFF
End

Subprog S_EXYSTA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = "A,Q,R"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SHL
Onevent BEFORE_INPUT Call AS_SHL(zc) From W1ITM2
Onevent CONTROL Call C_SHL(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_SHL From W1ITM2
Return

Subprog AS_SHL(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHL(VALEUR) From SUBITM
If mkstat=2
 [M]SHL(INDIC) = VALEUR
 Affzo SHL(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SHL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_SHL(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "SHL" : GZNUM = 2620 : Endif
Gosub _AFF
End

$AMM_SHL
Call AM_SHL(zc)
If !mkstat & GOBJET
 zoncou = "SHL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SHL(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "SHL" : GZNUM = 2620 : Endif
Gosub _AFF
End

$ON_SHLUOM
Onevent BEFORE_INPUT Call AS_SHLUOM(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_SHLUOM From W1ITM2
Onevent INIT_AREA Call D_SHLUOM(zc) From W1ITM2
Return

Subprog D_SHLUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]SHLUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SHLUOM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLUOM(VALEUR) From SUBITM
If mkstat=2
 [M]SHLUOM(INDIC) = VALEUR
 Affzo SHLUOM(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SHLUOM
Call AM_SHLUOM(zc)
If !mkstat & GOBJET
 zoncou = "SHLUOM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHLUOM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SHLUOM(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "SHLUOM" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_SHLLTI
Onevent BEFORE_INPUT Call AS_SHLLTI(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_SHLLTI From W1ITM2
Return

Subprog AS_SHLLTI(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLLTI(VALEUR) From SUBITM
If mkstat=2
 [M]SHLLTI(INDIC) = VALEUR
 Affzo SHLLTI(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_SHLLTI
Call AM_SHLLTI(zc)
If !mkstat & GOBJET
 zoncou = "SHLLTI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHLLTI(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SHLLTI(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "SHLLTI" : GZNUM = 17814 : Endif
Gosub _AFF
End

$ON_SHLLTIUOM
Onevent BEFORE_INPUT Call AS_SHLLTIUOM(zc) From W1ITM2
Onevent INIT_AREA Call D_SHLLTIUOM(zc) From W1ITM2
Return

Subprog D_SHLLTIUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]SHLLTIUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SHLLTIUOM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLLTIUOM(VALEUR) From SUBITM
If mkstat=2
 [M]SHLLTIUOM(INDIC) = VALEUR
 Affzo SHLLTIUOM(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NEWLTISTA
Onevent BEFORE_INPUT Call AS_NEWLTISTA(zc) From W1ITM2
Onevent CONTROL Call C_NEWLTISTA(zc) From W1ITM2
Return

Subprog AS_NEWLTISTA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_NEWLTISTA(VALEUR) From SUBITM
If mkstat=2
 [M]NEWLTISTA(INDIC) = VALEUR
 Affzo NEWLTISTA(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_NEWLTISTA(zc) From W1ITM2
Gosub _AFF
End

Subprog C_NEWLTISTA(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_NEWLTISTA(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "NEWLTISTA" : GZNUM = 33612 : Endif
Gosub _AFF
End

Subprog S_NEWLTISTA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = "A,Q,R"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_DLU
Onevent BEFORE_INPUT Call AS_DLU(zc) From W1ITM2
Onevent CONTROL Call C_DLU(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_DLU From W1ITM2
Return

Subprog AS_DLU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DLU(VALEUR) From SUBITM
If mkstat=2
 [M]DLU(INDIC) = VALEUR
 Affzo DLU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DLU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DLU(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "DLU" : GZNUM = 33614 : Endif
Gosub _AFF
End

$AMM_DLU
Call AM_DLU(zc)
If !mkstat & GOBJET
 zoncou = "DLU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DLU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_DLU(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "DLU" : GZNUM = 33614 : Endif
Gosub _AFF
End

$ON_DLULTIUOM
Onevent INIT_AREA Call D_DLULTIUOM(zc) From W1ITM2
Return

Subprog D_DLULTIUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]DLULTIUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ECCFLG
Onevent CONTROL Call C_ECCFLG(zc) From W1ITM2
Onevent AFTER_AREA Call AP_ECCFLG(zc) From W1ITM2
Onevent INIT_AREA Call D_ECCFLG(zc) From W1ITM2
Onevent BEFORE_INPUT Call AS_ECCFLG(zc) From W1ITM2
Return

Subprog D_ECCFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ECCFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ECCFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ECCFLG(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "ECCFLG" : GZNUM = 44284 : Endif
Gosub _AFF
End

Subprog AP_ECCFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_ECCFLG(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "ECCFLG" : GZNUM = 44284 : Endif
Gosub _AFF
End

$ON_ECCSTO
Onevent BEFORE_INPUT Call AS_ECCSTO(zc) From W1ITM2
Onevent CONTROL Call C_ECCSTO(zc) From W1ITM2
Onevent AFTER_AREA Call AP_ECCSTO(zc) From W1ITM2
Onevent INIT_AREA Call D_ECCSTO(zc) From W1ITM2
Return

Subprog D_ECCSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCSTO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ECCSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2777) From COMBOS
## Action STD
Call AS_ECCSTO(VALEUR) From SUBITM
If mkstat=2
 [M]ECCSTO(INDIC) = VALEUR
 Affzo ECCSTO(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2777,1))))
Endif
If !mkstat
 Discombo 0 From ECCSTO(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ECCSTO(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ECCSTO(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_ECCSTO(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "ECCSTO" : GZNUM = 44285 : Endif
Gosub _AFF
End

Subprog AP_ECCSTO(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_ECCSTO(VALEUR) From SUBITM
If mkstat : GERR = 1 : GZONE = "ECCSTO" : GZNUM = 44285 : Endif
Gosub _AFF
End

$ON_ECSMGT
Onevent BEFORE_INPUT Call AS_ECSMGT(zc) From W1ITM2
Return

Subprog AS_ECSMGT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(20365,GBOUTI) From OBJDIV
Onkey 178 Titled GBOUTI Call CL_ECSMGT(zc) From W1ITM2
Gosub _AFF
End

Subprog CL_ECSMGT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC6A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC6A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "ACL_ECSMGT" : PROGSUB = "SUBITM" : PROGSPE = "SPEITM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:ITM0]ITMREF
 Call OBJET_CHAR(OBJCLE,"ECS",[M:ITM0]ITMREF) From GOBJET
 ACTION = "BCL_ECSMGT" : PROGSUB = "SUBITM" : PROGSPE = "SPEITM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ECCMAJ
Onevent CONTROL Call C_ECCMAJ(zc) From W1ITM2
Onevent BEFORE_INPUT Call AS_ECCMAJ(zc) From W1ITM2
Onevent AFTER_CHANGE Gosub AMM_ECCMAJ From W1ITM2
Return

Subprog AS_ECCMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(48896,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ECCMAJ(zc) From W1ITM2
Onkey   2 Titled GBOUTS Call S_ECCMAJ(zc) From W1ITM2
Onkey 144 Titled GBOUTP Call P_ECCMAJ(zc) From W1ITM2
Onkey 146 Titled GBOUTA Call SA_ECCMAJ(zc) From W1ITM2
Gosub _AFF
End

Subprog C_ECCMAJ(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ICV","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "ECCMAJ" : GZNUM = 48846 : Endif
If !mkstat
 ## Action STD
 Call C_ECCMAJ(VALEUR) From SUBITM
 If mkstat : GERR = 1 : GZONE = "ECCMAJ" : GZNUM = 48846 : Endif
Endif
Gosub _AFF
End

$AMM_ECCMAJ
Call AM_ECCMAJ(zc)
If !mkstat & GOBJET
 zoncou = "ECCMAJ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCMAJ(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZECCMAJ)")>indice
 [M]ECCMAJ(indice) = VALEUR
 Affzo ZECCMAJ(indice)
Endif
Gosub _AFF
End

Subprog S_ECCMAJ(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ICV"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_ECCMAJ(VALEUR)
Variable Char    VALEUR()
Call OBJET("ICV",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_ECCMAJ(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ICV"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ECCMAJ(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ICV",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZECCMAJ
Onevent BEFORE_AREA Gosub AV_ZECCMAJ From W1ITM2
Return

$AV_ZECCMAJ
Call LECTEXTRA(zc,"ITMCPTVER","DESAXX",num$([M]ECCMAJ(indice)),"") From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2ITM2
Return

$TIT_COL
Gosub TIT_COL From W2ITM2
Return


