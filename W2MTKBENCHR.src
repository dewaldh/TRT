#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MTKBENCHR 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_ITMREF
Onevent BEFORE_AREA Gosub AV_ITMREF From W2MTKBENCHR
Return

$AV_ITMREF
## Action STD
Call AV_ITMREF(zc) From FUNBENCHR
Gosub _AFF
Return

$ON_BOMALT
Return

$ON_ITMTYP
Onevent INIT_AREA Call D_ITMTYP(zc) From W2MTKBENCHR
Return

Subprog D_ITMTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_USEQTY
Onevent BEFORE_AREA Gosub AV_USEQTY From W2MTKBENCHR
Return

$AV_USEQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]USEQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PCU
Onevent BEFORE_INPUT Call AS_PCU(zc) From W2MTKBENCHR
Onevent AFTER_CHANGE Gosub AMM_PCU From W2MTKBENCHR
Onevent CONTROL Call C_PCU(zc) From W2MTKBENCHR
Return

Subprog AS_PCU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_PCU(VALEUR) From FUNBENCHR
If mkstat=2
 [M]PCU(INDIC) = VALEUR
 Affzo PCU(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_PCU(zc) From W2MTKBENCHR
Onkey 144 Titled GBOUTP Call P_PCU(zc) From W2MTKBENCHR
Onkey 146 Titled GBOUTA Call SA_PCU(zc) From W2MTKBENCHR
Gosub _AFF
End

Subprog C_PCU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 2685 : Endif
Gosub _AFF
End

$AMM_PCU
Call AM_PCU(zc)
If !mkstat & GOBJET
 zoncou = "PCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCU(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 2685 : Endif
Gosub _AFF
End

Subprog S_PCU(VALEUR)
Variable Char    VALEUR()
## Action STKSELUOMN
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "STKSELUOMN"
PARMSK(1) = "1"
PARMSK(2) = "1"
Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELUOMN","STKSEL","") From GACTION
GACTION = SAVACT
Gosub _AFF
End

Subprog SA_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_PCUSTUCOE
Onevent BEFORE_INPUT Call AS_PCUSTUCOE(zc) From W2MTKBENCHR
Onevent CONTROL Call C_PCUSTUCOE(zc) From W2MTKBENCHR
Onevent AFTER_CHANGE Gosub AMM_PCUSTUCOE From W2MTKBENCHR
Return

Subprog AS_PCUSTUCOE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PCUSTUCOE(VALEUR) From FUNBENCHR
If mkstat=2
 [M]PCUSTUCOE(INDIC) = VALEUR
 Affzo PCUSTUCOE(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_PCUSTUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_PCUSTUCOE(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "PCUSTUCOE" : GZNUM = 3377 : Endif
Gosub _AFF
End

$AMM_PCUSTUCOE
Call AM_PCUSTUCOE(zc)
If !mkstat & GOBJET
 zoncou = "PCUSTUCOE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCUSTUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PCUSTUCOE(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "PCUSTUCOE" : GZNUM = 3377 : Endif
Gosub _AFF
End

$ON_REIQTYPCU
Onevent BEFORE_AREA Gosub AV_REIQTYPCU From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_REIQTYPCU(zc) From W2MTKBENCHR
Onevent CONTROL Call C_REIQTYPCU(zc) From W2MTKBENCHR
Onevent AFTER_CHANGE Gosub AMM_REIQTYPCU From W2MTKBENCHR
Return

$AV_REIQTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]REIQTYPCU(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_REIQTYPCU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_REIQTYPCU(VALEUR) From FUNBENCHR
If mkstat=2
 [M]REIQTYPCU(INDIC) = VALEUR
 Affzo REIQTYPCU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_REIQTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_REIQTYPCU(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "REIQTYPCU" : GZNUM = 18064 : Endif
Gosub _AFF
End

$AMM_REIQTYPCU
Call AM_REIQTYPCU(zc)
If !mkstat & GOBJET
 zoncou = "REIQTYPCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REIQTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_REIQTYPCU(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "REIQTYPCU" : GZNUM = 18064 : Endif
Gosub _AFF
End

$ON_REIQTY
Onevent BEFORE_AREA Gosub AV_REIQTY From W2MTKBENCHR
Return

$AV_REIQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]REIQTY(indice) With "NP+z:"+GUNTFMT
Gosub _AFF
Return

$ON_TYPQTY
Onevent INIT_AREA Call D_TYPQTY(zc) From W2MTKBENCHR
Return

Subprog D_TYPQTY(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CLEFLG
Onevent BEFORE_AREA Gosub AV_CLEFLG From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_CLEFLG(zc) From W2MTKBENCHR
Onevent AFTER_CHANGE Gosub AMM_CLEFLG From W2MTKBENCHR
Onevent INIT_AREA Call D_CLEFLG(zc) From W2MTKBENCHR
Return

$AV_CLEFLG
## Action STD
Call AV_CLEFLG(zc) From FUNBENCHR
Gosub _AFF
Return

Subprog D_CLEFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CLEFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CLEFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo CLEFLG : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CLEFLG(VALEUR) From FUNBENCHR
 If mkstat=2
  [M]CLEFLG(INDIC) = VALEUR
  Affzo CLEFLG(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$AMM_CLEFLG
Call AM_CLEFLG(zc)
If !mkstat & GOBJET
 zoncou = "CLEFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CLEFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CLEFLG(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "CLEFLG" : GZNUM = 2581 : Endif
Gosub _AFF
End

$ON_WRH
Onevent CONTROL Call C_WRH(zc) From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_WRH(zc) From W2MTKBENCHR
Onevent AFTER_CHANGE Gosub AMM_WRH From W2MTKBENCHR
Return

Subprog AS_WRH(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WRH(VALEUR) From FUNBENCHR
If mkstat=2
 [M]WRH(INDIC) = VALEUR
 Affzo WRH(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WRH(zc) From W2MTKBENCHR
Gosub _AFF
End

Subprog C_WRH(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M:MBR]FCY,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
If !mkstat
 ## Action STD
 Call C_WRH(VALEUR) From FUNBENCHR
 If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
Endif
Gosub _AFF
End

$AMM_WRH
Call AM_WRH(zc)
If !mkstat & GOBJET
 zoncou = "WRH" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRH(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WRH(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
Gosub _AFF
End

Subprog S_WRH(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M:MBR]FCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STA
Onevent BEFORE_INPUT Call AS_STA(zc) From W2MTKBENCHR
Onevent CONTROL Call C_STA(zc) From W2MTKBENCHR
Return

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
If !(GMODIF = 2)
 Affzo STA : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_STA(VALEUR) From FUNBENCHR
 If mkstat=2
  [M]STA(INDIC) = VALEUR
  Affzo STA(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_STA(zc) From W2MTKBENCHR
Endif
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,1,0,0,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1287 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
## Action STKSELSTA
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "STKSELSTA"
PARMSK(1) = [F:SRU]AUZSST
PARMSK(2) = "1"
Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
GACTION = SAVACT
Gosub _AFF
End

$ON_LOCTYP
Onevent BEFORE_INPUT Call AS_LOCTYP(zc) From W2MTKBENCHR
Onevent CONTROL Call C_LOCTYP(zc) From W2MTKBENCHR
Return

Subprog AS_LOCTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(5860,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
If !(GMODIF = 2)
 Affzo LOCTYP : mkstat = 2
Endif
If !mkstat
 ## Action STKSUGTLO
 Call STKSUGTLO([M:MBR]WLOCSEQ(nolign-1),19,[M:MBR]TRSCODS,[M:MBR]FCY,[M:MBR]ITMREF(nolign-1),[M:MBR]PCU(nolign-1),[M:MBR]REIQTYPCU(nolign-1),[M:MBR]STA(nolign-1)
& ,VALEUR,"Q"+string$([M:MBR]STA(nolign-1)="","S"),string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2'),string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:MBR]WRH)),[M:MBR]WRH(nolign-1)))),[M:MBR]LOC(nolign-1)) From STKLOC
 If mkstat=2
  [M]LOCTYP(INDIC) = VALEUR
  Affzo LOCTYP(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_LOCTYP(zc) From W2MTKBENCHR
 Onkey   2 Titled GBOUTS Call S_LOCTYP(zc) From W2MTKBENCHR
 Onkey 144 Titled GBOUTP Call P_LOCTYP(zc) From W2MTKBENCHR
 Onkey 146 Titled GBOUTA Call SA_LOCTYP(zc) From W2MTKBENCHR
Endif
Gosub _AFF
End

Subprog C_LOCTYP(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TLO","!",VALEUR,num$([M:MBR]FCY),mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 18490 : Endif
If !mkstat
 ## Action STKCTRTLO
 Call STKCTRTLO([M:MBR]WLOCSEQ(nolign-1),19,[M:MBR]TRSCODS,[M:MBR]FCY,[M:MBR]ITMREF(nolign-1),[M:MBR]PCU(nolign-1),[M:MBR]REIQTYPCU(nolign-1),[M:MBR]STA(nolign-1)
& ,0,VALEUR,mkstat,"Q"+string$([M:MBR]STA(nolign-1)="","S"),string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2'),string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:MBR]WRH)),[M:MBR]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 18490 : Endif
 If !mkstat
  ## Action STD
  Call C_LOCTYP(VALEUR) From FUNBENCHR
  If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 18490 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOCTYP(VALEUR)
Variable Char    VALEUR()
## Action STKSELTLO
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "STKSELTLO"
PARMSK(1) = [M:MBR]FCY
PARMSK(2) = [M:MBR]STA(nolign-1)
PARMSK(3) = [M:MBR]PCU(nolign-1)
PARMSK(4) = num$([M:MBR]REIQTYPCU(nolign-1))
PARMSK(5) = "Q"+string$([M:MBR]STA(nolign-1)="","S")
Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELTLO","STKLOC","") From GACTION
GACTION = SAVACT
Gosub _AFF
End

Subprog B1_LOCTYP(VALEUR)
Variable Char    VALEUR()
Call OBJET("TLO",VALEUR,num$([M:MBR]FCY)) From GOBJET
Gosub _AFF
End

Subprog SA_LOCTYP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TLO"
PARMSK(2) = num$([M:MBR]FCY)
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LOCTYP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$([M:MBR]FCY)
Call VISU("TLO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_LOC(zc) From W2MTKBENCHR
Onevent AFTER_CHANGE Gosub AMM_LOC From W2MTKBENCHR
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8902,GBOUT1) From OBJDIV
Call TEXTE(3234,GBOUT2) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
If !(GMODIF = 2)
 Affzo LOC : mkstat = 2
Endif
If !mkstat
 ## Action STKSUGEMP
 Call STKSUGEMP([M:MBR]WLOCSEQ(nolign-1),19,[M:MBR]TRSCODS,[M:MBR]FCY,[M:MBR]ITMREF(nolign-1),[M:MBR]PCU(nolign-1),[M:MBR]REIQTYPCU(nolign-1),[M:MBR]STA(nolign-1)
& ,[M:MBR]LOCTYP(nolign-1),VALEUR,"","Q"+string$([M:MBR]STA(nolign-1)="","S"),string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2'),string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:MBR]WRH)),[M:MBR]WRH(nolign-1))))) From STKLOC
 If mkstat=2
  [M]LOC(INDIC) = VALEUR
  Affzo LOC(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_LOC(zc) From W2MTKBENCHR
 Onkey 130 Titled GBOUT2 Call B2_LOC(zc) From W2MTKBENCHR
 Onkey   2 Titled GBOUTS Call S_LOC(zc) From W2MTKBENCHR
Endif
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 20632 : Endif
If !mkstat
 ## Action STKCTREMP
 Call STKCTREMP([M:MBR]WLOCSEQ(nolign-1),19,[M:MBR]TRSCODS,[M:MBR]FCY,[M:MBR]ITMREF(nolign-1),[M:MBR]PCU(nolign-1),[M:MBR]REIQTYPCU(nolign-1),[M:MBR]STA(nolign-1)
& ,[M:MBR]LOCTYP(nolign-1),VALEUR,"",0,mkstat,GBIDD1,"Q"+string$([M:MBR]STA(nolign-1)="","S"),string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
& ,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:MBR]WRH)),[M:MBR]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 20632 : Endif
Endif
Gosub _AFF
End

$AMM_LOC
Call AM_LOC(zc)
If !mkstat & GOBJET
 zoncou = "LOC" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOC(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOC(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 20632 : Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
## Action SAIEMPLIB
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAIEMPLIB"
PARMSK(1) = num$([M:MBR]WLOCSEQ(nolign-1))
PARMSK(2) = "19"
PARMSK(3) = [M:MBR]TRSCODS
PARMSK(4) = [M:MBR]FCY
PARMSK(5) = [M:MBR]ITMREF(nolign-1)
PARMSK(6) = [M:MBR]PCU(nolign-1)
PARMSK(7) = num$([M:MBR]REIQTYPCU(nolign-1))
PARMSK(8) = [M:MBR]STA(nolign-1)
PARMSK(9) = [M:MBR]LOCTYP(nolign-1)
PARMSK(10) = VALEUR
PARMSK(11) = ""
PARMSK(12) = "Q"+string$([M:MBR]STA(nolign-1)="","S")
PARMSK(13) = string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
PARMSK(14) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:MBR]WRH)),[M:MBR]WRH(nolign-1))))
Call SAISIE_CHAR(VALEUR,PARMSK,"ISELEMP","STKLOC","XWISELEMP") From GSAISIE
[M:MBR]WLOCSEQ(nolign-1) = val(PARMSK(1))
[M:MBR]LOCTYP(nolign-1) = PARMSK(9)
VALEUR = PARMSK(10)
GACTION = SAVACT
Gosub _AFF
End

Subprog B1_LOC(VALEUR)
Variable Char    VALEUR()
## Action CONSSED
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONSSED"
PARMSK(1) = "1"
PARMSK(2) = [M:MBR]FCY
PARMSK(3) = [M:MBR]ITMREF(nolign-1)
PARMSK(4) = [M:MBR]ITMREF(nolign-1)
PARMSK(5) = "0"
PARMSK(6) = string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
PARMSK(7) = VALEUR
Call CONSULT_CHAR(VALEUR,"SED",PARMSK) From GCONSULT
VALEUR = PARMSK(7)
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_LOC(VALEUR)
Variable Char    VALEUR()
## Action CONSSEA
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONSSEA"
PARMSK(1) = "1"
PARMSK(2) = [M:MBR]FCY
PARMSK(3) = VALEUR
PARMSK(4) = [M:MBR]LOCTYP(nolign-1)
PARMSK(5) = ""
PARMSK(6) = "3"
PARMSK(7) = ""
PARMSK(8) = string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
PARMSK(9) = VALEUR
Call CONSULT_CHAR(VALEUR,"SEA",PARMSK) From GCONSULT
VALEUR = PARMSK(9)
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LOT
Onevent BEFORE_INPUT Call AS_LOT(zc) From W2MTKBENCHR
Onevent CONTROL Call C_LOT(zc) From W2MTKBENCHR
Return

Subprog IB_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKIBLOT
Call STKIBLOT(VALEUR,sigma(1,dim([M:MBR]NBSLO)>0,[M:MBR]NBSLO(nolign-1)),0,0,1) From STKACT
Gosub _AFF
End

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(19862,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call IB_LOT(VALEUR)
If !(GMODIF = 2)
 Affzo LOT : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_LOT(VALEUR) From FUNBENCHR
 If mkstat=2
  [M]LOT(INDIC) = VALEUR
  Affzo LOT(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_LOT(zc) From W2MTKBENCHR
 Onkey   2 Titled GBOUTS Call S_LOT(zc) From W2MTKBENCHR
Endif
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LOT(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELLOTREI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELLOTREI"
 PARMSK(1) = [M:MBR]FCY
 PARMSK(2) = [M:MBR]ITMREF(nolign-1)
 PARMSK(3) = [M:MBR]MFGNUM(nolign-1)
 PARMSK(4) = num$([M:MBR]MFGLIN(nolign-1))
 PARMSK(5) = num$([M:MBR]BOMSEQ(nolign-1))
 PARMSK(6) = [M:MBR]BOMNUM(nolign-1)
 PARMSK(7) = num$([M:MBR]BOMALT(nolign-1))
 PARMSK(8) = num$([M:MBR]MATTYP(nolign-1))
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELLOTREI","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKINFLOT
Call INFOLOT("MBR",nolign-1) From STKENT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_NBSLO
Onevent BEFORE_INPUT Call AS_NBSLO(zc) From W2MTKBENCHR
Return

Subprog AS_NBSLO(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo NBSLO : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

$ON_SLO
Onevent CONTROL Call C_SLO(zc) From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_SLO(zc) From W2MTKBENCHR
Return

Subprog AS_SLO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
If !(GMODIF = 2)
 Affzo SLO : mkstat = 2
Endif
If !mkstat
 Onkey   2 Titled GBOUTS Call S_SLO(zc) From W2MTKBENCHR
Endif
Gosub _AFF
End

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SLO(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 18960 : Endif
Gosub _AFF
End

Subprog S_SLO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELSLOREI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELSLOREI"
 PARMSK(1) = [M:MBR]FCY
 PARMSK(2) = [M:MBR]LOT(nolign-1)
 PARMSK(3) = [M:MBR]MFGNUM(nolign-1)
 PARMSK(4) = num$([M:MBR]MFGLIN(nolign-1))
 PARMSK(5) = num$([M:MBR]BOMSEQ(nolign-1))
 PARMSK(6) = [M:MBR]BOMNUM(nolign-1)
 PARMSK(7) = num$([M:MBR]BOMALT(nolign-1))
 PARMSK(8) = num$([M:MBR]MATTYP(nolign-1))
 PARMSK(9) = [M:MBR]ITMREF(nolign-1)
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELSLOREI","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SERNUM
Onevent CONTROL Call C_SERNUM(zc) From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_SERNUM(zc) From W2MTKBENCHR
Return

Subprog AS_SERNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo SERNUM : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SERNUM(VALEUR) From FUNBENCHR
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 19216 : Endif
Gosub _AFF
End

$ON_MVTDES
Onevent BEFORE_INPUT Call AS_MVTDES(zc) From W2MTKBENCHR
Return

Subprog AS_MVTDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo MVTDES : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

$ON_WIPTDAT
Onevent BEFORE_AREA Gosub AV_WIPTDAT From W2MTKBENCHR
Return

$AV_WIPTDAT
Chgfmt [M]WIPTDAT(indice) With "DPcZ:"+GFMDAT
Gosub _AFF
Return

$ON_STOCODL
Onevent INIT_AREA Call D_STOCODL(zc) From W2MTKBENCHR
Return

Subprog D_STOCODL(VALEUR)
Variable Integer VALEUR
If varinit([M]STOCODL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RETDAT
Onevent BEFORE_AREA Gosub AV_RETDAT From W2MTKBENCHR
Return

$AV_RETDAT
Chgfmt [M]RETDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_CCE1
Onevent BEFORE_AREA Gosub AV_CCE1 From W2MTKBENCHR
Onevent CONTROL Call C_CCE1(zc) From W2MTKBENCHR
Onevent INIT_AREA Call D_CCE1(zc) From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_CCE1(zc) From W2MTKBENCHR
Return

$AV_CCE1
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(1))) From SETGLBDIE
If GFMTDIE(1)<>""
 Chgfmt [M]CCE1(indice) With GFMTDIE(1)
Else
 Chgfmt [M]CCE1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE1(VALEUR)
Variable Char    VALEUR()
If varinit([M]CCE1,indice)=0
 ## Action STD
 Call D_CCE1(VALEUR) From FUNBENCHR
Endif
Gosub _AFF
End

Subprog AS_CCE1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3531,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_CCE1(VALEUR) From FUNBENCHR
If mkstat=2
 [M]CCE1(INDIC) = VALEUR
 Affzo CCE1(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CCE1(zc) From W2MTKBENCHR
Onkey   2 Titled GBOUTS Call S_CCE1(zc) From W2MTKBENCHR
Onkey 144 Titled GBOUTP Call P_CCE1(zc) From W2MTKBENCHR
Onkey 146 Titled GBOUTA Call SA_CCE1(zc) From W2MTKBENCHR
Gosub _AFF
End

Subprog C_CCE1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CCECHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CCECHOICE"
 PARMSK(1) = num$(GDIE(1))
 Call S_TAB_CHAR(VALEUR,PARMSK,"CCECHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CCE1" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CCE","!",VALEUR,num$(GDIE(1)),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CCE1" : GZNUM = 0 : Endif
 If !mkstat
  ## Action STD
  Call C_CCE1(VALEUR) From FUNBENCHR
  If mkstat : GERR = 1 : GZONE = "CCE1" : GZNUM = 0 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_CCE1(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CCE"
PARMSK(2) = "!"
PARMSK(3) = num$(GDIE(1))
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CCE1(VALEUR)
Variable Char    VALEUR()
Call OBJET("CCE",VALEUR,num$(GDIE(1))) From GOBJET
Gosub _AFF
End

Subprog SA_CCE1(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CCE"
PARMSK(2) = num$(GDIE(1))
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CCE1(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$(GDIE(1))
Call VISU("CCE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_CCE2
Onevent BEFORE_AREA Gosub AV_CCE2 From W2MTKBENCHR
Onevent CONTROL Call C_CCE2(zc) From W2MTKBENCHR
Onevent INIT_AREA Call D_CCE2(zc) From W2MTKBENCHR
Onevent BEFORE_INPUT Call AS_CCE2(zc) From W2MTKBENCHR
Return

$AV_CCE2
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(2))) From SETGLBDIE
If GFMTDIE(2)<>""
 Chgfmt [M]CCE2(indice) With GFMTDIE(2)
Else
 Chgfmt [M]CCE2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE2(VALEUR)
Variable Char    VALEUR()
If varinit([M]CCE2,indice)=0
 ## Action STD
 Call D_CCE2(VALEUR) From FUNBENCHR
Endif
Gosub _AFF
End

Subprog AS_CCE2(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3531,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_CCE2(VALEUR) From FUNBENCHR
If mkstat=2
 [M]CCE2(INDIC) = VALEUR
 Affzo CCE2(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CCE2(zc) From W2MTKBENCHR
Onkey   2 Titled GBOUTS Call S_CCE2(zc) From W2MTKBENCHR
Onkey 144 Titled GBOUTP Call P_CCE2(zc) From W2MTKBENCHR
Onkey 146 Titled GBOUTA Call SA_CCE2(zc) From W2MTKBENCHR
Gosub _AFF
End

Subprog C_CCE2(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CCECHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CCECHOICE"
 PARMSK(1) = num$(GDIE(2))
 Call S_TAB_CHAR(VALEUR,PARMSK,"CCECHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CCE2" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CCE","!",VALEUR,num$(GDIE(2)),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CCE2" : GZNUM = 0 : Endif
 If !mkstat
  ## Action STD
  Call C_CCE2(VALEUR) From FUNBENCHR
  If mkstat : GERR = 1 : GZONE = "CCE2" : GZNUM = 0 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_CCE2(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CCE"
PARMSK(2) = "!"
PARMSK(3) = num$(GDIE(2))
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CCE2(VALEUR)
Variable Char    VALEUR()
Call OBJET("CCE",VALEUR,num$(GDIE(2))) From GOBJET
Gosub _AFF
End

Subprog SA_CCE2(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CCE"
PARMSK(2) = num$(GDIE(2))
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CCE2(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$(GDIE(2))
Call VISU("CCE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$TIT_COL
Gosub TIT_COL From W3MTKBENCHR
Return


