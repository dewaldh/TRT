#<AdxTL>@(#)0.0.0.0 $Revision$Class List of queries
# Supervisor
## ACLA-CLASSE ## ASYRREQPEND
# 2018-08-27 12:22:49 470


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : DAT Date ( Field D)
####################################################################

$SET_DAT
If [L]_AOLDVAL<>this.DAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DAT
 Gosub PROPAGATE_DAT
Endif
Return

$INIT_DAT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "DAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DAT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "DAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DAT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DAT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DAT
[L]CURPRO = "DAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DAT
[L]CURPRO = "DAT"
Return

$_AOTHERS_DAT
[L]CURPRO = "DAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DAT
[L]CURPRO = "DAT"
Return

$PROPAGATE_DAT
this.isReadonly = 0
[L]CURPRO = "DAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DAT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "DAT"
$_LNKPRO_DAT
Return


####################################################################
# 2 : DOSSIER Folder ( Field ADS 10)
####################################################################

$SET_DOSSIER
If [L]_AOLDVAL<>this.DOSSIER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DOSSIER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DOSSIER
 Gosub PROPAGATE_DOSSIER
Endif
Return

$INIT_DOSSIER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "DOSSIER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DOSSIER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "DOSSIER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DOSSIER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DOSSIER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DOSSIER
[L]CURPRO = "DOSSIER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DOSSIER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DOSSIER
[L]CURPRO = "DOSSIER"
If vireblc(this.DOSSIER,2)<>vireblc(format$("KTD:A9B",this.DOSSIER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DOSSIER
[L]CURPRO = "DOSSIER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DOSSIER
[L]CURPRO = "DOSSIER"
Return

$PROPAGATE_DOSSIER
this.isReadonly = 0
[L]CURPRO = "DOSSIER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DOSSIER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "DOSSIER"
$_LNKPRO_DOSSIER
Return

$_ALOADATTRIBUTE_DOSSIER
[L]ASTATUS = fmet this.ASETATTRIBUTE("DOSSIER","$isMandatory","true")
Return


####################################################################
# 3 : FLAG Status ( Field Local menu number 21)
####################################################################

$SET_FLAG
If [L]_AOLDVAL<>this.FLAG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLAG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLAG
 Gosub PROPAGATE_FLAG
Endif
Return

$INIT_FLAG
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "FLAG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLAG=0 and fmet this.AGETATTRIBUTE("FLAG","$isMandatory")="true"
 this.FLAG = 1
Endif
Return
 
$CONTROL_FLAG
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "FLAG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLAG                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLAG                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLAG
[L]CURPRO = "FLAG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLAG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLAG
[L]CURPRO = "FLAG"
If this.FLAG<0 or this.FLAG>len(mess(0,21,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"21 ->"-num$(this.FLAG)-mess(99,123,1)):  Return : # Local menu "21 -> Invalid option
Endif
Return

$_AOTHERS_FLAG
[L]CURPRO = "FLAG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLAG
[L]CURPRO = "FLAG"
Return

$PROPAGATE_FLAG
this.isReadonly = 0
[L]CURPRO = "FLAG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLAG
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "FLAG"
$_LNKPRO_FLAG
Return


####################################################################
# 4 : HEURE Time ( Field HM 6)
####################################################################

$SET_HEURE
If [L]_AOLDVAL<>this.HEURE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HEURE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HEURE
 Gosub PROPAGATE_HEURE
Endif
Return

$INIT_HEURE
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HEURE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HEURE
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HEURE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HEURE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HEURE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HEURE
[L]CURPRO = "HEURE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HEURE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HEURE
[L]CURPRO = "HEURE"
If vireblc(this.HEURE,2)<>vireblc(format$("Kz:6X",this.HEURE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HEURE
[L]CURPRO = "HEURE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HEURE
[L]CURPRO = "HEURE"
Return

$PROPAGATE_HEURE
this.isReadonly = 0
[L]CURPRO = "HEURE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HEURE
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HEURE"
$_LNKPRO_HEURE
Return


####################################################################
# 5 : HFIN Time ( Field HS 8)
####################################################################

$SET_HFIN
If [L]_AOLDVAL<>this.HFIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HFIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HFIN
 Gosub PROPAGATE_HFIN
Endif
Return

$INIT_HFIN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HFIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HFIN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HFIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HFIN                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HFIN                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HFIN
[L]CURPRO = "HFIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HFIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HFIN
[L]CURPRO = "HFIN"
If vireblc(this.HFIN,2)<>vireblc(format$("Kz:8X",this.HFIN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HFIN
[L]CURPRO = "HFIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HFIN
[L]CURPRO = "HFIN"
Return

$PROPAGATE_HFIN
this.isReadonly = 0
[L]CURPRO = "HFIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HFIN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HFIN"
$_LNKPRO_HFIN
Return


####################################################################
# 6 : MONO Single-user ( Field Local menu number 1)
####################################################################

$SET_MONO
If [L]_AOLDVAL<>this.MONO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MONO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MONO
 Gosub PROPAGATE_MONO
Endif
Return

$INIT_MONO
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "MONO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MONO=0 and fmet this.AGETATTRIBUTE("MONO","$isMandatory")="true"
 this.MONO = 1
Endif
Return
 
$CONTROL_MONO
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "MONO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MONO                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MONO                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MONO
[L]CURPRO = "MONO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MONO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MONO
[L]CURPRO = "MONO"
If this.MONO<0 or this.MONO>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MONO)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MONO
[L]CURPRO = "MONO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MONO
[L]CURPRO = "MONO"
Return

$PROPAGATE_MONO
this.isReadonly = 0
[L]CURPRO = "MONO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MONO
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "MONO"
$_LNKPRO_MONO
Return


####################################################################
# 7 : NUMREQ Query no. ( Field L 8)
####################################################################

$SET_NUMREQ
If [L]_AOLDVAL<>this.NUMREQ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NUMREQ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NUMREQ
 Gosub PROPAGATE_NUMREQ
Endif
Return

$INIT_NUMREQ
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "NUMREQ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NUMREQ
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "NUMREQ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NUMREQ                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NUMREQ                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NUMREQ
[L]CURPRO = "NUMREQ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NUMREQ=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NUMREQ
[L]CURPRO = "NUMREQ"
Return

$_AOTHERS_NUMREQ
[L]CURPRO = "NUMREQ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NUMREQ
[L]CURPRO = "NUMREQ"
Return

$PROPAGATE_NUMREQ
this.isReadonly = 0
[L]CURPRO = "NUMREQ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NUMREQ
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "NUMREQ"
$_LNKPRO_NUMREQ
Return


####################################################################
# 8 : TACHE Task code ( Field ABT 10)
####################################################################

$SET_TACHE
If [L]_AOLDVAL<>this.TACHE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TACHE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TACHE
 Gosub PROPAGATE_TACHE
Endif
Return

$INIT_TACHE
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "TACHE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TACHE
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "TACHE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TACHE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TACHE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TACHE
[L]CURPRO = "TACHE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TACHE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TACHE
[L]CURPRO = "TACHE"
If vireblc(this.TACHE,2)<>vireblc(format$("K:10c",this.TACHE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TACHE
[L]CURPRO = "TACHE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TACHE
[L]CURPRO = "TACHE"
Return

$PROPAGATE_TACHE
this.isReadonly = 0
[L]CURPRO = "TACHE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TACHE
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "TACHE"
$_LNKPRO_TACHE
Return


####################################################################
# 9 : GRP Group ( Field ABG 10)
####################################################################

$SET_GRP
If [L]_AOLDVAL<>this.GRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GRP
 Gosub PROPAGATE_GRP
Endif
Return

$INIT_GRP
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "GRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_GRP
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "GRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GRP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GRP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GRP
[L]CURPRO = "GRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.GRP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GRP
[L]CURPRO = "GRP"
If vireblc(this.GRP,2)<>vireblc(format$("K:10c",this.GRP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_GRP
[L]CURPRO = "GRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GRP
[L]CURPRO = "GRP"
Return

$PROPAGATE_GRP
this.isReadonly = 0
[L]CURPRO = "GRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GRP
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "GRP"
$_LNKPRO_GRP
Return


####################################################################
# 10 : USER User code ( Field AUS 5)
####################################################################

$SET_USER
If [L]_AOLDVAL<>this.USER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USER
 Gosub PROPAGATE_USER
Endif
Return

$INIT_USER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "USER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "USER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USER                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USER                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USER
[L]CURPRO = "USER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USER
[L]CURPRO = "USER"
If vireblc(this.USER,2)<>vireblc(format$("K:5B",this.USER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USER
[L]CURPRO = "USER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USER
[L]CURPRO = "USER"
Return

$PROPAGATE_USER
this.isReadonly = 0
[L]CURPRO = "USER"
Gosub _LNKPRO_USER
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "USER"
$_LNKPRO_USER
If vireblc(this.USER,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.USER
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USER","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USER","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 11 : LOGIN Login ( Field ALO 20)
####################################################################

$SET_LOGIN
If [L]_AOLDVAL<>this.LOGIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOGIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOGIN
 Gosub PROPAGATE_LOGIN
Endif
Return

$INIT_LOGIN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LOGIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LOGIN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LOGIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOGIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOGIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOGIN
[L]CURPRO = "LOGIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LOGIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOGIN
[L]CURPRO = "LOGIN"
If vireblc(this.LOGIN,2)<>vireblc(format$("K:20X",this.LOGIN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LOGIN
[L]CURPRO = "LOGIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOGIN
[L]CURPRO = "LOGIN"
Return

$PROPAGATE_LOGIN
this.isReadonly = 0
[L]CURPRO = "LOGIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOGIN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LOGIN"
$_LNKPRO_LOGIN
Return


####################################################################
# 12 : HDEB Start time ( Field HS 8)
####################################################################

$SET_HDEB
If [L]_AOLDVAL<>this.HDEB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HDEB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HDEB
 Gosub PROPAGATE_HDEB
Endif
Return

$INIT_HDEB
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HDEB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HDEB
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HDEB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HDEB                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HDEB                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HDEB
[L]CURPRO = "HDEB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HDEB,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HDEB
[L]CURPRO = "HDEB"
If vireblc(this.HDEB,2)<>vireblc(format$("Kz:8X",this.HDEB),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HDEB
[L]CURPRO = "HDEB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HDEB
[L]CURPRO = "HDEB"
Return

$PROPAGATE_HDEB
this.isReadonly = 0
[L]CURPRO = "HDEB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HDEB
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "HDEB"
$_LNKPRO_HDEB
Return


####################################################################
# 13 : CODABT Recurring task code ( Field ABA 10)
####################################################################

$SET_CODABT
If [L]_AOLDVAL<>this.CODABT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODABT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODABT
 Gosub PROPAGATE_CODABT
Endif
Return

$INIT_CODABT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "CODABT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODABT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "CODABT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODABT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODABT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODABT
[L]CURPRO = "CODABT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODABT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODABT
[L]CURPRO = "CODABT"
If vireblc(this.CODABT,2)<>vireblc(format$("K:10c",this.CODABT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODABT
[L]CURPRO = "CODABT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODABT
[L]CURPRO = "CODABT"
Return

$PROPAGATE_CODABT
this.isReadonly = 0
[L]CURPRO = "CODABT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODABT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "CODABT"
$_LNKPRO_CODABT
Return


####################################################################
# 14 : LAN Language ( Field LAN 3)
####################################################################

$SET_LAN
If [L]_AOLDVAL<>this.LAN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LAN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LAN
 Gosub PROPAGATE_LAN
Endif
Return

$INIT_LAN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LAN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LAN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LAN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LAN
[L]CURPRO = "LAN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LAN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LAN
[L]CURPRO = "LAN"
If vireblc(this.LAN,2)<>vireblc(format$("KTD:3B",this.LAN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LAN
[L]CURPRO = "LAN"
If vireblc(this.LAN,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPLAN.ACTRLREF(this,"LAN",this.LAN,this.LAN,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.LAN<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LAN
[L]CURPRO = "LAN"
Return

$PROPAGATE_LAN
this.isReadonly = 0
[L]CURPRO = "LAN"
Gosub _LNKPRO_LAN
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LAN
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LAN"
$_LNKPRO_LAN
If vireblc(this.LAN,2)<>""
 # Link TABLAN
 Local File TABLAN [WTLA]
 Read [F:WTLA]TLA0 = this.LAN
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABLAN" & ZONE="INTSHO" & IDENT1=[F:WTLA]LAN & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LAN","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABLAN" & ZONE="INTDES" & IDENT1=[F:WTLA]LAN & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LAN","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTLA]
Endif
Return


####################################################################
# 15 : LANISO ISO code ( Field A 10)
####################################################################

$SET_LANISO
If [L]_AOLDVAL<>this.LANISO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LANISO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LANISO
 Gosub PROPAGATE_LANISO
Endif
Return

$INIT_LANISO
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LANISO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LANISO
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LANISO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LANISO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LANISO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LANISO
[L]CURPRO = "LANISO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LANISO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LANISO
[L]CURPRO = "LANISO"
Return

$_AOTHERS_LANISO
[L]CURPRO = "LANISO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LANISO
[L]CURPRO = "LANISO"
Return

$PROPAGATE_LANISO
this.isReadonly = 0
[L]CURPRO = "LANISO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LANISO
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "LANISO"
$_LNKPRO_LANISO
Return


####################################################################
# 16 : SERVER Server ( Field AMC 80)
####################################################################

$SET_SERVER
If [L]_AOLDVAL<>this.SERVER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SERVER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SERVER
 Gosub PROPAGATE_SERVER
Endif
Return

$INIT_SERVER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "SERVER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SERVER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "SERVER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SERVER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SERVER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SERVER
[L]CURPRO = "SERVER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SERVER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SERVER
[L]CURPRO = "SERVER"
If vireblc(this.SERVER,2)<>vireblc(format$("K:80X",this.SERVER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SERVER
[L]CURPRO = "SERVER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SERVER
[L]CURPRO = "SERVER"
Return

$PROPAGATE_SERVER
this.isReadonly = 0
[L]CURPRO = "SERVER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SERVER
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "SERVER"
$_LNKPRO_SERVER
Return


####################################################################
# 17 : PORT Port ( Field L 8)
####################################################################

$SET_PORT
If [L]_AOLDVAL<>this.PORT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PORT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PORT
 Gosub PROPAGATE_PORT
Endif
Return

$INIT_PORT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "PORT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PORT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "PORT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PORT                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PORT                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PORT
[L]CURPRO = "PORT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PORT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PORT
[L]CURPRO = "PORT"
Return

$_AOTHERS_PORT
[L]CURPRO = "PORT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PORT
[L]CURPRO = "PORT"
Return

$PROPAGATE_PORT
this.isReadonly = 0
[L]CURPRO = "PORT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PORT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "PORT"
$_LNKPRO_PORT
Return


####################################################################
# 18 : RECURRENT Recurring ( Field Local menu number 1)
####################################################################

$SET_RECURRENT
If [L]_AOLDVAL<>this.RECURRENT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RECURRENT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RECURRENT
 Gosub PROPAGATE_RECURRENT
Endif
Return

$INIT_RECURRENT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "RECURRENT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.RECURRENT=0 and fmet this.AGETATTRIBUTE("RECURRENT","$isMandatory")="true"
 this.RECURRENT = 1
Endif
Return
 
$CONTROL_RECURRENT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "RECURRENT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RECURRENT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RECURRENT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RECURRENT
[L]CURPRO = "RECURRENT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RECURRENT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RECURRENT
[L]CURPRO = "RECURRENT"
If this.RECURRENT<0 or this.RECURRENT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.RECURRENT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_RECURRENT
[L]CURPRO = "RECURRENT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RECURRENT
[L]CURPRO = "RECURRENT"
Return

$PROPAGATE_RECURRENT
this.isReadonly = 0
[L]CURPRO = "RECURRENT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RECURRENT
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "RECURRENT"
$_LNKPRO_RECURRENT
Return


####################################################################
# 19 : MAISRV Main server ( Field Local menu number 1)
####################################################################

$SET_MAISRV
If [L]_AOLDVAL<>this.MAISRV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MAISRV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MAISRV
 Gosub PROPAGATE_MAISRV
Endif
Return

$INIT_MAISRV
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "MAISRV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MAISRV=0 and fmet this.AGETATTRIBUTE("MAISRV","$isMandatory")="true"
 this.MAISRV = 1
Endif
Return
 
$CONTROL_MAISRV
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "MAISRV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MAISRV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MAISRV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MAISRV
[L]CURPRO = "MAISRV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MAISRV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MAISRV
[L]CURPRO = "MAISRV"
If this.MAISRV<0 or this.MAISRV>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MAISRV)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MAISRV
[L]CURPRO = "MAISRV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MAISRV
[L]CURPRO = "MAISRV"
Return

$PROPAGATE_MAISRV
this.isReadonly = 0
[L]CURPRO = "MAISRV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MAISRV
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "MAISRV"
$_LNKPRO_MAISRV
Return


####################################################################
# 20 : EXENOW Execution ( Field Local menu number 1)
####################################################################

$SET_EXENOW
If [L]_AOLDVAL<>this.EXENOW
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXENOW
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXENOW
 Gosub PROPAGATE_EXENOW
Endif
Return

$INIT_EXENOW
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "EXENOW"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.EXENOW=0 and fmet this.AGETATTRIBUTE("EXENOW","$isMandatory")="true"
 this.EXENOW = 1
Endif
Return
 
$CONTROL_EXENOW
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "EXENOW"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXENOW                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXENOW                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXENOW
[L]CURPRO = "EXENOW"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXENOW=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXENOW
[L]CURPRO = "EXENOW"
If this.EXENOW<0 or this.EXENOW>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.EXENOW)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_EXENOW
[L]CURPRO = "EXENOW"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXENOW
[L]CURPRO = "EXENOW"
Return

$PROPAGATE_EXENOW
this.isReadonly = 0
[L]CURPRO = "EXENOW"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXENOW
Gosub DECLARE_VAR From WMC0ASYRREQPEND
[L]CURPRO = "EXENOW"
$_LNKPRO_EXENOW
Return




