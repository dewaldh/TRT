#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Routing
# Supervisor
## CRUD-CLASSE ## CCMIMPROH
# 2018-08-27 13:11:59 733


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPROH [CCMROH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMIMPROH") From ASYRCOM : Endif
Local Instance CCMIMPROH Using R_CCMIMPROH

If !SILENCE : Call TRACE("3 --> New Instance R_CCMIMPROH") From ASYRCOM : Endif
CCMIMPROH = NewInstance R_CCMIMPROH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMROH_]CCMROH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPROH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.AREAD([CCMROH_]CRID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMIMPROH.CCMROH.CRID ="-num$(CCMIMPROH.CCMROH.CRID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMIMPROH.CCMROH.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMIMPROH.CCMROH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMROH_]
FreeGroup CCMIMPROH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMIMPROH,ACLE,ASTATUS,_ETAG)
Variable Instance CCMIMPROH Using R_CCMIMPROH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File CCMIMPROH [CCMROH]
Default File [F:CCMROH]
Read [F:CCMROH]CCMROH0 = [L]_CRID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMROH]UPDTICK)>0
 [L]_ETAG = num$([F:CCMROH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMIMPROH,ACLE,ASTATUS)
Variable Instance CCMIMPROH Using R_CCMIMPROH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.AREAD([L]_CRID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMIMPROH,_CRID,ASTATUS)
Variable Instance CCMIMPROH Using R_CCMIMPROH
Value Char _CRID
Variable Integer ASTATUS

If CCMIMPROH = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPROH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMIMPROH.APARENT=null
 [L]A_I = CCMIMPROH.freeSnapshot
 CCMIMPROH.snapshotEnabled = 0
 CCMIMPROH.setAccessorEnabled = 0
Endif

If fmet CCMIMPROH.ACTX.AGETAFCRIGHT(CCMIMPROH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMROH]
Read [F:CCMROH]CCMROH0 = [L]_CRID
If fstat
[L]A_ERROR = [L]_CRID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMIMPROH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMIMPROH.ACTX.AGETAFCRIGHTR(CCMIMPROH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMIMPROH.ACTX.ASTACRITROLE(CCMIMPROH,[L]_CRID
& ,"CCM","CCMROH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMIMPROH.CCMROH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.CCMROH.AREAD([L]_CRID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMIMPROH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMIMPROH.APARENT=null
 CCMIMPROH.snapshotEnabled = 1
 CCMIMPROH.setAccessorEnabled = 1
Endif
LogicClose File [CCMROH]
End



