#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales orders - Light 1
# Supervisor
## CRUD-CLASSE ## SORDERH1
# 2018-08-27 12:48:16 081


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SORDER [SOH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SORDERH1") From ASYRCOM : Endif
Local Instance SORDERH1 Using C_SORDERH1

If !SILENCE : Call TRACE("3 --> New Instance C_SORDERH1") From ASYRCOM : Endif
SORDERH1 = NewInstance C_SORDERH1 AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SOH_]SOH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SORDERH1") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SORDERH1.AREAD([SOH_]SOHNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SORDERH1.SOHNUM ="-num$(SORDERH1.SOHNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SORDERH1.AKEYS)
  Call TRACE("-"-num$(I)-":"-SORDERH1.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SOH_]
FreeGroup SORDERH1
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SORDERH1,ACLE,ASTATUS,_ETAG)
Variable Instance SORDERH1 Using C_SORDERH1
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SOHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SOHNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SORDER [SOH]
Default File [F:SOH]
Read [F:SOH]SOH0 = [L]_SOHNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SOH]UPDTICK)>0
 [L]_ETAG = num$([F:SOH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SORDERH1,ACLE,ASTATUS)
Variable Instance SORDERH1 Using C_SORDERH1
Value Char ACLE
Variable Integer ASTATUS
Local Char _SOHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SOHNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SORDERH1.AREAD([L]_SOHNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SORDERH1,_SOHNUM,ASTATUS)
Variable Instance SORDERH1 Using C_SORDERH1
Value Char _SOHNUM
Variable Integer ASTATUS

If SORDERH1 = null : End : Endif

Gosub AVARIABLES From WMC00SORDERH1
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SORDERH1.APARENT=null
 [L]A_I = SORDERH1.freeSnapshot
 SORDERH1.snapshotEnabled = 0
 SORDERH1.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SORDERH1.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SORDERH1._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SORDERH1.APARENT=null
 SORDERH1.snapshotEnabled = 1
 SORDERH1.setAccessorEnabled = 1
Endif
LogicClose File [SOH]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SORDERH1._ACTION_PARAM("AREAD_BEFORE",[L]_SOHNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:SOH]
Read [F:SOH]SOH0 = [L]_SOHNUM
If fstat
[L]A_ERROR = [L]_SOHNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SORDERH1,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:SOH]SALFCY
[L]A_STRACC = ""
If dim([F:SOH]AUUID)>0 & [F:SOH]AUUID=NullUuid
 [F:SOH]AUUID = getUuid
Endif
SetInstance SORDERH1 With [F:SOH]
SORDERH1.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 1
 If ([F:SOH]BPCNAM([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  SORDERH1.C_BPCNAM(A_NEWCOL) = NewInstance  C_SORDERH1_C_BPCNAM(SORDERH1.ACTX,NullUuid,[L]A_I,SORDERH1,"C_BPCNAM") AllocGroup SORDERH1
  SORDERH1.C_BPCNAM(A_NEWCOL).BPCNAM = [F:SOH]BPCNAM([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet SORDERH1.C_BPCNAM(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To dim([F:SOH]REP)
 If ([F:SOH]REP([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  SORDERH1.C_REP(A_NEWCOL) = NewInstance  C_SORDERH1_C_REP(SORDERH1.ACTX,NullUuid,[L]A_I,SORDERH1,"C_REP") AllocGroup SORDERH1
  SORDERH1.C_REP(A_NEWCOL).REP = [F:SOH]REP([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet SORDERH1.C_REP(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet SORDERH1.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



