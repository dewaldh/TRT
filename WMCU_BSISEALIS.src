#<AdxTL>@(#)0.0.0.0 $Revision$Class Search term list
# Supervisor
## CRUD-CLASSE ## BSISEALIS
# 2018-08-27 12:27:32 483


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(BSISEALIS,ASTATUS)
Variable Instance BSISEALIS Using C_BSISEALIS
Variable Integer ASTATUS

If BSISEALIS = null : End : Endif

Gosub _AVARIABLES From WMC00BSISEALIS

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_BSISEALIS

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSISEALIS,ASTATUS)
Variable Instance BSISEALIS Using C_BSISEALIS
Variable Integer ASTATUS

If BSISEALIS = null : End : Endif

Gosub AVARIABLES From WMC00BSISEALIS
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
BSISEALIS.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSISEALIS
Else
 Gosub AUPDATE_BSISEALIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSISEALIS.freeSnapshot
BSISEALIS.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSISEALIS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISEALIS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSISEALIS.ASTALIN)<>""
 [L]A_ASTALIN = BSISEALIS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(BSISEALIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.LINES(A_N2) <> null
& and BSISEALIS.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSISEALIS.LINES(A_N2).ASTALIN<>[V]CST_ANEW & BSISEALIS.ASTALIN=[V]CST_ADEL
   BSISEALIS.LINES(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If BSISEALIS.LINES(A_N2).ASTALIN=[V]CST_ANEW & find(BSISEALIS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   BSISEALIS.LINES(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(BSISEALIS.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSISEALIS.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(BSISEALIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.LINES(A_N2) <> null
& and BSISEALIS.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(BSISEALIS.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSISEALIS.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(BSISEALIS.ASTALIN)<>""
 [L]A_ASTALIN = BSISEALIS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSISEALIS
Trbegin [F:BSILIS]
 Gosub AUPDATE_BSISEALIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_BSISEALIS
Read [F:BSILIS]BSILIS0 = BSISEALIS.CPY;BSISEALIS.BAN;BSISEALIS.FILFMT
If !fstat
 #-----------------------#
 If [L]A_LEVEL>=2
  For [BSILISD]BSILISD0 Where CPY=[F:BSILIS]CPY & BAN=[F:BSILIS]BAN & FILFMT=[F:BSILIS]FILFMT
   Delete [F:BSILISD] Curr
   If fstat
    Call FSTA("BSILISD",BSISEALIS,[L]ASTATUS) From ASYRSUB : Break 
   Endif
  Next BSILISD
  If [L]ASTATUS=[V]CST_AERROR :Return : Endif
 Endif
 #-----------------------#
Endif
[L]A_ASTALIN = BSISEALIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00BSISEALIS._MAJSQL_BSISEALIS(BSISEALIS))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(BSISEALIS.LINES)
  If BSISEALIS.LINES(A_N2) <> null and
& (BSISEALIS.LINES(A_N2).ASTALIN=[L]A_TYPMAJ or
& BSISEALIS.LINES(A_N2).ASTALIN=[V]CST_ALL) and ([L]A_TYPMAJ<>[V]CST_ADEL)
   If [L]A_TYPMAJ=[V]CST_AUPD
    BSISEALIS.LINES(A_N2).ASTALIN=[V]CST_ANEW
   Else
    If BSISEALIS.LINES(A_N2).ASTALIN=[L]A_TYPMAJ
     If [V]CST_ASTALIN(BSISEALIS.LINES(A_N2).ASTALIN)<>""
      [L]A_ASTALIN = BSISEALIS.LINES(A_N2).ASTALIN
      [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
      If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
     Endif
     [L]ASTATUS = func WMC00BSISEALIS._MAJSQL_BSISEALISD(BSISEALIS.LINES(A_N2))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
     If [V]CST_ASTALIN(BSISEALIS.LINES(A_N2).ASTALIN)<>""
      [L]A_ASTALIN = BSISEALIS.LINES(A_N2).ASTALIN
      [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
      If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
     Endif
    Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSISEALIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If BSISEALIS.snapshotEnabled=1
 [L]A_RETIK = BSISEALIS.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISEALIS.LINES)
 If BSISEALIS.LINES(A_N2) <> null
  If BSISEALIS.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   BSISEALIS.LINES(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet BSISEALIS.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSISEALIS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSISEALIS.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISEALIS.LINES)
 If BSISEALIS.LINES(A_N2) <> null
  If BSISEALIS.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSISEALIS.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSISEALIS.LINES(A_N2)
   BSISEALIS.LINES(A_N2) = null
  Elsif BSISEALIS.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSISEALIS.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



