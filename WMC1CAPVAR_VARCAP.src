#<AdxTL>@(#)0.0.0.0 $Revision$Class Capacity variation
# Sage X3 supervisor
## ACLA-CLASSE ## CAPVAR_VARCAP
# 2018-03-26 00:24:52 240


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CODVAR Reason ( Field Miscellaneous table number)
####################################################################

$SET_CODVAR
If [L]_AOLDVAL<>this.CODVAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODVAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODVAR
 Gosub PROPAGATE_CODVAR
Endif
Return

$INIT_CODVAR
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "CODVAR"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"CODVAR",this.CODVAR,801)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODVAR
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "CODVAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODVAR
[L]CURPRO = "CODVAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODVAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODVAR
[L]CURPRO = "CODVAR"
If vireblc(this.CODVAR,2)<>vireblc(format$("K:20B",this.CODVAR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODVAR
[L]CURPRO = "CODVAR"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"CODVAR",this.CODVAR,801,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODVAR
[L]CURPRO = "CODVAR"
Return

$PROPAGATE_CODVAR
this.isReadonly = 0
[L]CURPRO = "CODVAR"
Gosub _LNKPRO_CODVAR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODVAR
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "CODVAR"
$_LNKPRO_CODVAR
If vireblc(this.CODVAR,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 801;this.CODVAR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CODVAR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CODVAR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 2 : WSTNBR Number of resources ( Field C 2)
####################################################################

$SET_WSTNBR
If [L]_AOLDVAL<>this.WSTNBR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_WSTNBR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.WSTNBR
 Gosub PROPAGATE_WSTNBR
Endif
Return

$INIT_WSTNBR
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "WSTNBR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_WSTNBR
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "WSTNBR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_WSTNBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_WSTNBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_WSTNBR
[L]CURPRO = "WSTNBR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.WSTNBR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_WSTNBR
[L]CURPRO = "WSTNBR"
Return

$_AOTHERS_WSTNBR
[L]CURPRO = "WSTNBR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_WSTNBR
[L]CURPRO = "WSTNBR"
Return

$PROPAGATE_WSTNBR
this.isReadonly = 0
[L]CURPRO = "WSTNBR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_WSTNBR
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "WSTNBR"
$_LNKPRO_WSTNBR
Return


####################################################################
# 3 : VARTEX Text ( Field TXC 12)
####################################################################

$SET_VARTEX
If [L]_AOLDVAL<>this.VARTEX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VARTEX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VARTEX
 Gosub PROPAGATE_VARTEX
Endif
Return

$INIT_VARTEX
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "VARTEX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VARTEX
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "VARTEX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VARTEX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VARTEX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VARTEX
[L]CURPRO = "VARTEX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VARTEX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VARTEX
[L]CURPRO = "VARTEX"
If vireblc(this.VARTEX,2)<>vireblc(format$("K:12X",this.VARTEX),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VARTEX
[L]CURPRO = "VARTEX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VARTEX
[L]CURPRO = "VARTEX"
Return

$PROPAGATE_VARTEX
this.isReadonly = 0
[L]CURPRO = "VARTEX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VARTEX
Gosub DECLARE_VAR From WMC0CAPVAR_VARCAP
[L]CURPRO = "VARTEX"
$_LNKPRO_VARTEX
Return




