#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry MFG

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:33"
A_USER  = "ADMIN"
A_STAMP = "20180326134133"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(15181,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSMFGSTD"
PROGSPE    = "CNSMFGSPE"
CBOITE     = "DCNSMFG"
BOITE      = "FCNSMFG"
NOMMSK(0)  = "CONSMFG1"
ABMSK(0)   = "LOF1"
NOMMSK(1)  = "CONSMFG2"
ABMSK(1)   = "LOF2"
CMEMO      = "lof"
CNOMMSK    = "CRITMFG"
CABMSK     = "CLOF"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:MFG])=0 : Local File MFGHEAD      [MFG] : Endif
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:ITM])=0 : Local File ITMMASTER    [ITM] : Endif
If clalev([F:MFI])=0 : Local File MFGITM       [MFI] : Endif
If clalev([F:MFM])=0 : Local File MFGMAT       [MFM] : Endif
If clalev([F:MFO])=0 : Local File MFGOPE       [MFO] : Endif
If clalev([F:TBO])=0 : Local File TABBOMALT    [TBO] : Endif
If clalev([F:TRO])=0 : Local File TABROUALT    [TRO] : Endif
If clalev([F:ROH])=0 : Local File ROUTING      [ROH] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CLOF]
 When  0 : Local Mask =NOMMSK(0) [LOF1]
 When  1 : Local Mask =NOMMSK(1) [LOF2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CLOF]
 When  0 : Grizo [LOF1]
 When  1 : Grizo [LOF2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CLOF]MFGFCY)>0
 Grizo [CLOF]MFGFCY
Endif
If dim([M:CLOF]ITMREFSTR)>0
 Grizo [CLOF]ITMREFSTR
Endif
If dim([M:CLOF]ITMREFEND)>0
 Grizo [CLOF]ITMREFEND
Endif
If dim([M:CLOF]STRDATSTR)>0
 Grizo [CLOF]STRDATSTR
Endif
If dim([M:CLOF]STRDATEND)>0
 Grizo [CLOF]STRDATEND
Endif
If dim([M:CLOF]ENDDATSTR)>0
 Grizo [CLOF]ENDDATSTR
Endif
If dim([M:CLOF]ENDDATEND)>0
 Grizo [CLOF]ENDDATEND
Endif
If dim([M:CLOF]MFGNUMSTR)>0
 Grizo [CLOF]MFGNUMSTR
Endif
If dim([M:CLOF]MFGNUMEND)>0
 Grizo [CLOF]MFGNUMEND
Endif
If dim([M:CLOF]BOMALT)>0
 Grizo [CLOF]BOMALT
Endif
If dim([M:CLOF]ROUALT)>0
 Grizo [CLOF]ROUALT
Endif
If dim([M:CLOF]ROUNUMSTR)>0
 Grizo [CLOF]ROUNUMSTR
Endif
If dim([M:CLOF]ROUNUMEND)>0
 Grizo [CLOF]ROUNUMEND
Endif
If dim([M:CLOF]PJTSTR)>0
 Grizo [CLOF]PJTSTR
Endif
If dim([M:CLOF]PJTEND)>0
 Grizo [CLOF]PJTEND
Endif
If dim([M:CLOF]VCRORISTR)>0
 Grizo [CLOF]VCRORISTR
Endif
If dim([M:CLOF]VCRORIEND)>0
 Grizo [CLOF]VCRORIEND
Endif
If dim([M:CLOF]VCRTYP)>0
 Grizo [CLOF]VCRTYP
Endif
If dim([M:CLOF]MFIFOR)>0
 Grizo [CLOF]MFIFOR
Endif
If dim([M:CLOF]MFMFOR)>0
 Grizo [CLOF]MFMFOR
Endif
If dim([M:CLOF]MFMFLG)>0
 Grizo [CLOF]MFMFLG
Endif
If dim([M:CLOF]MFOFOR)>0
 Grizo [CLOF]MFOFOR
Endif
If dim([M:CLOF]MFOFLG)>0
 Grizo [CLOF]MFOFLG
Endif
If dim([M:CLOF]MFGSTASTR)>0
 Grizo [CLOF]MFGSTASTR
Endif
If dim([M:CLOF]MFGSTAEND)>0
 Grizo [CLOF]MFGSTAEND
Endif
If dim([M:CLOF]MTKFLGSTR)>0
 Grizo [CLOF]MTKFLGSTR
Endif
If dim([M:CLOF]MTKFLGEND)>0
 Grizo [CLOF]MTKFLGEND
Endif
If dim([M:CLOF]CPNITMSTR)>0
 Grizo [CLOF]CPNITMSTR
Endif
If dim([M:CLOF]CPNITMEND)>0
 Grizo [CLOF]CPNITMEND
Endif
If dim([M:CLOF]CPLWSTSTR)>0
 Grizo [CLOF]CPLWSTSTR
Endif
If dim([M:CLOF]CPLWSTEND)>0
 Grizo [CLOF]CPLWSTEND
Endif
If dim([M:CLOF]EXTWSTSTR)>0
 Grizo [CLOF]EXTWSTSTR
Endif
If dim([M:CLOF]EXTWSTEND)>0
 Grizo [CLOF]EXTWSTEND
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CLOF])>0 : Close Local Mask [CLOF] : Endif
 When  0 : If clalev([M:LOF1])>0 : Close Local Mask [LOF1] : Endif
 When  1 : If clalev([M:LOF2])>0 : Close Local Mask [LOF2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CLOF]
 When  0 : Default Mask [LOF1]
 When  1 : Default Mask [LOF2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CLOF]
 When  0 : Raz [M:LOF1]
 When  1 : Raz [M:LOF2]
Endcase
Return

$CRITENT
If dim([M:CLOF]MFGFCY)>0 & dim([M:LOF1]MFGFCY)>0
 [M:CLOF]MFGFCY = [M:LOF1]MFGFCY
Endif
If dim([M:CLOF]ITMREFSTR)>0 & dim([M:LOF1]ITMREFSTR)>0
 [M:CLOF]ITMREFSTR = [M:LOF1]ITMREFSTR
Endif
If dim([M:CLOF]ITMREFEND)>0 & dim([M:LOF1]ITMREFEND)>0
 [M:CLOF]ITMREFEND = [M:LOF1]ITMREFEND
Endif
If dim([M:CLOF]STRDATSTR)>0 & dim([M:LOF1]STRDATSTR)>0
 [M:CLOF]STRDATSTR = [M:LOF1]STRDATSTR
Endif
If dim([M:CLOF]STRDATEND)>0 & dim([M:LOF1]STRDATEND)>0
 [M:CLOF]STRDATEND = [M:LOF1]STRDATEND
Endif
If dim([M:CLOF]ENDDATSTR)>0 & dim([M:LOF1]ENDDATSTR)>0
 [M:CLOF]ENDDATSTR = [M:LOF1]ENDDATSTR
Endif
If dim([M:CLOF]ENDDATEND)>0 & dim([M:LOF1]ENDDATEND)>0
 [M:CLOF]ENDDATEND = [M:LOF1]ENDDATEND
Endif
If dim([M:CLOF]MFGNUMSTR)>0 & dim([M:LOF1]MFGNUMSTR)>0
 [M:CLOF]MFGNUMSTR = [M:LOF1]MFGNUMSTR
Endif
If dim([M:CLOF]MFGNUMEND)>0 & dim([M:LOF1]MFGNUMEND)>0
 [M:CLOF]MFGNUMEND = [M:LOF1]MFGNUMEND
Endif
If dim([M:CLOF]BOMALT)>0 & dim([M:LOF1]BOMALT)>0
 [M:CLOF]BOMALT = [M:LOF1]BOMALT
Endif
If dim([M:CLOF]ROUALT)>0 & dim([M:LOF1]ROUALT)>0
 [M:CLOF]ROUALT = [M:LOF1]ROUALT
Endif
If dim([M:CLOF]ROUNUMSTR)>0 & dim([M:LOF1]ROUNUMSTR)>0
 [M:CLOF]ROUNUMSTR = [M:LOF1]ROUNUMSTR
Endif
If dim([M:CLOF]ROUNUMEND)>0 & dim([M:LOF1]ROUNUMEND)>0
 [M:CLOF]ROUNUMEND = [M:LOF1]ROUNUMEND
Endif
If dim([M:CLOF]PJTSTR)>0 & dim([M:LOF1]PJTSTR)>0
 [M:CLOF]PJTSTR = [M:LOF1]PJTSTR
Endif
If dim([M:CLOF]PJTEND)>0 & dim([M:LOF1]PJTEND)>0
 [M:CLOF]PJTEND = [M:LOF1]PJTEND
Endif
If dim([M:CLOF]VCRORISTR)>0 & dim([M:LOF1]VCRORISTR)>0
 [M:CLOF]VCRORISTR = [M:LOF1]VCRORISTR
Endif
If dim([M:CLOF]VCRORIEND)>0 & dim([M:LOF1]VCRORIEND)>0
 [M:CLOF]VCRORIEND = [M:LOF1]VCRORIEND
Endif
If dim([M:CLOF]VCRTYP)>0 & dim([M:LOF1]VCRTYP)>0
 [M:CLOF]VCRTYP = [M:LOF1]VCRTYP
Endif
If dim([M:CLOF]MFIFOR)>0 & dim([M:LOF1]MFIFOR)>0
 [M:CLOF]MFIFOR = [M:LOF1]MFIFOR
Endif
If dim([M:CLOF]MFMFOR)>0 & dim([M:LOF1]MFMFOR)>0
 [M:CLOF]MFMFOR = [M:LOF1]MFMFOR
Endif
If dim([M:CLOF]MFMFLG)>0 & dim([M:LOF1]MFMFLG)>0
 [M:CLOF]MFMFLG = [M:LOF1]MFMFLG
Endif
If dim([M:CLOF]MFOFOR)>0 & dim([M:LOF1]MFOFOR)>0
 [M:CLOF]MFOFOR = [M:LOF1]MFOFOR
Endif
If dim([M:CLOF]MFOFLG)>0 & dim([M:LOF1]MFOFLG)>0
 [M:CLOF]MFOFLG = [M:LOF1]MFOFLG
Endif
If dim([M:CLOF]MFGSTASTR)>0 & dim([M:LOF1]MFGSTASTR)>0
 [M:CLOF]MFGSTASTR = [M:LOF1]MFGSTASTR
Endif
If dim([M:CLOF]MFGSTAEND)>0 & dim([M:LOF1]MFGSTAEND)>0
 [M:CLOF]MFGSTAEND = [M:LOF1]MFGSTAEND
Endif
If dim([M:CLOF]MTKFLGSTR)>0 & dim([M:LOF1]MTKFLGSTR)>0
 [M:CLOF]MTKFLGSTR = [M:LOF1]MTKFLGSTR
Endif
If dim([M:CLOF]MTKFLGEND)>0 & dim([M:LOF1]MTKFLGEND)>0
 [M:CLOF]MTKFLGEND = [M:LOF1]MTKFLGEND
Endif
If dim([M:CLOF]CPNITMSTR)>0 & dim([M:LOF1]CPNITMSTR)>0
 [M:CLOF]CPNITMSTR = [M:LOF1]CPNITMSTR
Endif
If dim([M:CLOF]CPNITMEND)>0 & dim([M:LOF1]CPNITMEND)>0
 [M:CLOF]CPNITMEND = [M:LOF1]CPNITMEND
Endif
If dim([M:CLOF]CPLWSTSTR)>0 & dim([M:LOF1]CPLWSTSTR)>0
 [M:CLOF]CPLWSTSTR = [M:LOF1]CPLWSTSTR
Endif
If dim([M:CLOF]CPLWSTEND)>0 & dim([M:LOF1]CPLWSTEND)>0
 [M:CLOF]CPLWSTEND = [M:LOF1]CPLWSTEND
Endif
If dim([M:CLOF]EXTWSTSTR)>0 & dim([M:LOF1]EXTWSTSTR)>0
 [M:CLOF]EXTWSTSTR = [M:LOF1]EXTWSTSTR
Endif
If dim([M:CLOF]EXTWSTEND)>0 & dim([M:LOF1]EXTWSTEND)>0
 [M:CLOF]EXTWSTEND = [M:LOF1]EXTWSTEND
Endif
Return

$ENTCRIT
If dim([M:CLOF]MFGFCY)>0 & dim([M:LOF1]MFGFCY)>0
[M:LOF1]MFGFCY = [M:CLOF]MFGFCY
Endif
If dim([M:CLOF]ITMREFSTR)>0 & dim([M:LOF1]ITMREFSTR)>0
[M:LOF1]ITMREFSTR = [M:CLOF]ITMREFSTR
Endif
If dim([M:CLOF]ITMREFEND)>0 & dim([M:LOF1]ITMREFEND)>0
[M:LOF1]ITMREFEND = [M:CLOF]ITMREFEND
Endif
If dim([M:CLOF]STRDATSTR)>0 & dim([M:LOF1]STRDATSTR)>0
[M:LOF1]STRDATSTR = [M:CLOF]STRDATSTR
Endif
If dim([M:CLOF]STRDATEND)>0 & dim([M:LOF1]STRDATEND)>0
[M:LOF1]STRDATEND = [M:CLOF]STRDATEND
Endif
If dim([M:CLOF]ENDDATSTR)>0 & dim([M:LOF1]ENDDATSTR)>0
[M:LOF1]ENDDATSTR = [M:CLOF]ENDDATSTR
Endif
If dim([M:CLOF]ENDDATEND)>0 & dim([M:LOF1]ENDDATEND)>0
[M:LOF1]ENDDATEND = [M:CLOF]ENDDATEND
Endif
If dim([M:CLOF]MFGNUMSTR)>0 & dim([M:LOF1]MFGNUMSTR)>0
[M:LOF1]MFGNUMSTR = [M:CLOF]MFGNUMSTR
Endif
If dim([M:CLOF]MFGNUMEND)>0 & dim([M:LOF1]MFGNUMEND)>0
[M:LOF1]MFGNUMEND = [M:CLOF]MFGNUMEND
Endif
If dim([M:CLOF]BOMALT)>0 & dim([M:LOF1]BOMALT)>0
[M:LOF1]BOMALT = [M:CLOF]BOMALT
Endif
If dim([M:CLOF]ROUALT)>0 & dim([M:LOF1]ROUALT)>0
[M:LOF1]ROUALT = [M:CLOF]ROUALT
Endif
If dim([M:CLOF]ROUNUMSTR)>0 & dim([M:LOF1]ROUNUMSTR)>0
[M:LOF1]ROUNUMSTR = [M:CLOF]ROUNUMSTR
Endif
If dim([M:CLOF]ROUNUMEND)>0 & dim([M:LOF1]ROUNUMEND)>0
[M:LOF1]ROUNUMEND = [M:CLOF]ROUNUMEND
Endif
If dim([M:CLOF]PJTSTR)>0 & dim([M:LOF1]PJTSTR)>0
[M:LOF1]PJTSTR = [M:CLOF]PJTSTR
Endif
If dim([M:CLOF]PJTEND)>0 & dim([M:LOF1]PJTEND)>0
[M:LOF1]PJTEND = [M:CLOF]PJTEND
Endif
If dim([M:CLOF]VCRORISTR)>0 & dim([M:LOF1]VCRORISTR)>0
[M:LOF1]VCRORISTR = [M:CLOF]VCRORISTR
Endif
If dim([M:CLOF]VCRORIEND)>0 & dim([M:LOF1]VCRORIEND)>0
[M:LOF1]VCRORIEND = [M:CLOF]VCRORIEND
Endif
If dim([M:CLOF]VCRTYP)>0 & dim([M:LOF1]VCRTYP)>0
[M:LOF1]VCRTYP = [M:CLOF]VCRTYP
Endif
If dim([M:CLOF]MFIFOR)>0 & dim([M:LOF1]MFIFOR)>0
[M:LOF1]MFIFOR = [M:CLOF]MFIFOR
Endif
If dim([M:CLOF]MFMFOR)>0 & dim([M:LOF1]MFMFOR)>0
[M:LOF1]MFMFOR = [M:CLOF]MFMFOR
Endif
If dim([M:CLOF]MFMFLG)>0 & dim([M:LOF1]MFMFLG)>0
[M:LOF1]MFMFLG = [M:CLOF]MFMFLG
Endif
If dim([M:CLOF]MFOFOR)>0 & dim([M:LOF1]MFOFOR)>0
[M:LOF1]MFOFOR = [M:CLOF]MFOFOR
Endif
If dim([M:CLOF]MFOFLG)>0 & dim([M:LOF1]MFOFLG)>0
[M:LOF1]MFOFLG = [M:CLOF]MFOFLG
Endif
If dim([M:CLOF]MFGSTASTR)>0 & dim([M:LOF1]MFGSTASTR)>0
[M:LOF1]MFGSTASTR = [M:CLOF]MFGSTASTR
Endif
If dim([M:CLOF]MFGSTAEND)>0 & dim([M:LOF1]MFGSTAEND)>0
[M:LOF1]MFGSTAEND = [M:CLOF]MFGSTAEND
Endif
If dim([M:CLOF]MTKFLGSTR)>0 & dim([M:LOF1]MTKFLGSTR)>0
[M:LOF1]MTKFLGSTR = [M:CLOF]MTKFLGSTR
Endif
If dim([M:CLOF]MTKFLGEND)>0 & dim([M:LOF1]MTKFLGEND)>0
[M:LOF1]MTKFLGEND = [M:CLOF]MTKFLGEND
Endif
If dim([M:CLOF]CPNITMSTR)>0 & dim([M:LOF1]CPNITMSTR)>0
[M:LOF1]CPNITMSTR = [M:CLOF]CPNITMSTR
Endif
If dim([M:CLOF]CPNITMEND)>0 & dim([M:LOF1]CPNITMEND)>0
[M:LOF1]CPNITMEND = [M:CLOF]CPNITMEND
Endif
If dim([M:CLOF]CPLWSTSTR)>0 & dim([M:LOF1]CPLWSTSTR)>0
[M:LOF1]CPLWSTSTR = [M:CLOF]CPLWSTSTR
Endif
If dim([M:CLOF]CPLWSTEND)>0 & dim([M:LOF1]CPLWSTEND)>0
[M:LOF1]CPLWSTEND = [M:CLOF]CPLWSTEND
Endif
If dim([M:CLOF]EXTWSTSTR)>0 & dim([M:LOF1]EXTWSTSTR)>0
[M:LOF1]EXTWSTSTR = [M:CLOF]EXTWSTSTR
Endif
If dim([M:CLOF]EXTWSTEND)>0 & dim([M:LOF1]EXTWSTEND)>0
[M:LOF1]EXTWSTEND = [M:CLOF]EXTWSTEND
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSMFG2"
NBBOUT = 0
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "MFG"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("2","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M]ITMREF(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "MFG"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MFG","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B2"
  Onerrgo RIEN
  Assign "[M]MFGFCY" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M]ITMREF(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSMFG2"
 When "B3"
  Onerrgo RIEN
  Assign "[M]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B3_NBLIG From ="W1CONSMFG2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


