#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule ACCOUNT

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GACCOUNT" : If clalev([F:GAC])=0 : Local File =OUVTAB [GAC] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AXX1])=0 : Local File =OUVTAB [AXX1] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AXX2])=0 : Local File =OUVTAB [AXX2] : Endif
OUVTAB = "Link [GAC]"
Link [GAC] With
& [AXX1]AXX0 = "GACCOUNT";"DESTRA";GLANGUE;[F:GAC]COA;[F:GAC]ACC,
& [AXX2]AXX0 = "GACCOUNT";"SHOTRA";GLANGUE;[F:GAC]COA;[F:GAC]ACC
& As [LNK_]
& Order By Key CLE = [GAC]COA;[GAC]ACC
FILTRE = ""
Return

$FERME
If clalev([F:GAC]) : Close local File [GAC] : Endif
If clalev([F:AXX1]) : Close local File [AXX1] : Endif
If clalev([F:AXX2]) : Close local File [AXX2] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "COA"
DTYP(1) =  7
DCLE(2) = "ACC"
DTYP(2) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]COA)>0
 [F:AAA_]COA = [F:GAC]COA
Endif
If dim([F:AAA_]ACC)>0
 [F:AAA_]ACC = [F:GAC]ACC
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]COA=[F:GAC]COA"
Append PFLT, " & [F:AAA_]ACC=[F:GAC]ACC"

End

$MAJFLD
### COA
[L]FLD="COA"
[L]FORMULE='[F:GAC]COA'
If dim([F:AAA_]COA)>0
 [F:AAA_]COA = [F:GAC]COA
Endif

### ACC
[L]FLD="ACC"
[L]FORMULE='[F:GAC]ACC'
If dim([F:AAA_]ACC)>0
 [F:AAA_]ACC = [F:GAC]ACC
Endif

### DES
[L]FLD="DES"
[L]FORMULE='[F:AXX1]TEXTE'
If dim([F:AAA_]DES)>0
 [F:AAA_]DES = [F:AXX1]TEXTE
Endif

### SHO
[L]FLD="SHO"
[L]FORMULE='[F:AXX2]TEXTE'
If dim([F:AAA_]SHO)>0
 [F:AAA_]SHO = [F:AXX2]TEXTE
Endif

### ACCSHO
[L]FLD="ACCSHO"
[L]FORMULE='[F:GAC]ACCSHO'
If dim([F:AAA_]ACCSHO)>0
 [F:AAA_]ACCSHO = [F:GAC]ACCSHO
Endif

### CLSCOD
[L]FLD="CLSCOD"
[L]FORMULE='[F:GAC]CLSCOD'
If dim([F:AAA_]CLSCOD)>0
 [F:AAA_]CLSCOD = [F:GAC]CLSCOD
Endif

### CUR
[L]FLD="CUR"
[L]FORMULE='[F:GAC]CUR'
If dim([F:AAA_]CUR)>0
 [F:AAA_]CUR = [F:GAC]CUR
Endif

### TRE
[L]FLD="TRE"
[L]FORMULE='[F:GAC]ACC-[F:GAC]DES'
If dim([F:AAA_]TRE)>0
 [F:AAA_]TRE = [F:GAC]ACC-[F:GAC]DES
Endif

### SAC
[L]FLD="SAC"
[L]FORMULE='mess([F:GAC]SAC,1,1)'
If dim([F:AAA_]SAC)>0
 [F:AAA_]SAC = mess([F:GAC]SAC,1,1)
Endif

### DAS
[L]FLD="DAS"
[L]FORMULE='num$([F:GAC]DAS)-"-"-mess([F:GAC]DAS,1,1)'
If dim([F:AAA_]DAS)>0
 [F:AAA_]DAS = num$([F:GAC]DAS)-"-"-mess([F:GAC]DAS,1,1)
Endif

### DASTYP
[L]FLD="DASTYP"
[L]FORMULE='num$([F:GAC]DASTYP)-"-"-mess([F:GAC]DASTYP,615,1)'
If dim([F:AAA_]DASTYP)>0
 [F:AAA_]DASTYP = num$([F:GAC]DASTYP)-"-"-mess([F:GAC]DASTYP,615,1)
Endif


Return

