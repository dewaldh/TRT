#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CONR 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:55:33"
A_USER  = "ADMIN"
A_STAMP = "20180827235533"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CONR [CONR]
Gosub HORODAT
Local Inpbox "CONR" From GFONCTION At A_STAMP With A_WINDPREV Mask [CONR] As [SIM_]
Grizo [CONR]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [CONR]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=28 : X2(0)=85 : Y1(0)=12 : Y2(0)=17
Return

$ON_RREWFRY
Onevent AFTER_CHANGE Gosub AMM_RREWFRY From W1CONR
Return

$AMM_RREWFRY
Call AM_RREWFRY(zc)
If !mkstat & GOBJET
 zoncou = "RREWFRY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RREWFRY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_RREWFRY(VALEUR) From SUBCONR
If mkstat : GERR = 1 : GZONE = "RREWFRY" : GZNUM = 15651 : Endif
Gosub _AFF
End

$ON_RREWFRYBAS
Onevent AFTER_CHANGE Gosub AMM_RREWFRYBAS From W1CONR
Onevent INIT_AREA Call D_RREWFRYBAS(zc) From W1CONR
Onevent BEFORE_INPUT Call AS_RREWFRYBAS(zc) From W1CONR
Return

Subprog D_RREWFRYBAS(VALEUR)
Variable Integer VALEUR
If varinit([M]RREWFRYBAS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RREWFRYBAS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_RREWFRYBAS
Call AM_RREWFRYBAS(zc)
If !mkstat & GOBJET
 zoncou = "RREWFRYBAS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RREWFRYBAS(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_RREWFRYBAS(VALEUR) From SUBCONR
If mkstat : GERR = 1 : GZONE = "RREWFRYBAS" : GZNUM = 2685 : Endif
Gosub _AFF
End

$ON_RCONREW
Onevent INIT_AREA Call D_RCONREW(zc) From W1CONR
Onevent BEFORE_INPUT Call AS_RCONREW(zc) From W1CONR
Return

Subprog D_RCONREW(VALEUR)
Variable Integer VALEUR
If varinit([M]RCONREW,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RCONREW(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RCONSTRDAT
Onevent AFTER_CHANGE Gosub AMM_RCONSTRDAT From W1CONR
Onevent BEFORE_AREA Gosub AV_RCONSTRDAT From W1CONR
Return

$AV_RCONSTRDAT
Chgfmt [M]RCONSTRDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$AMM_RCONSTRDAT
Call AM_RCONSTRDAT(zc)
If !mkstat & GOBJET
 zoncou = "RCONSTRDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RCONSTRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_RCONSTRDAT(VALEUR) From SUBCONR
If mkstat : GERR = 1 : GZONE = "RCONSTRDAT" : GZNUM = 16267 : Endif
Gosub _AFF
End

$ON_RCONENDDAT
Onevent BEFORE_AREA Gosub AV_RCONENDDAT From W1CONR
Return

$AV_RCONENDDAT
Chgfmt [M]RCONENDDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_RCONAMT
Onevent BEFORE_AREA Gosub AV_RCONAMT From W1CONR
Return

$AV_RCONAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:CONR]RCUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]RCONAMT(indice) With "Nz3:"+GDEVFMT
Gosub _AFF
Return

$ON_RCUR
Return

$ON_CONNUM
Return

$CHG_STY
Return


