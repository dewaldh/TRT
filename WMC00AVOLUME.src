#<AdxTL>@(#)0.0.0.0 $Revision$Class Volume
# Supervisor
## CRUD-CLASSE ## AVOLUME
# 2018-08-27 12:24:19 227

Gosub TEST From WMCR_AVOLUME : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,VOLUME)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# AVOLUME : AVOLUME
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet AVOLUME._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = AVOLUME.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(AVOLUME.ACTX.AFOLDER,nomap,"")>0
 Local File AVOLUME [AVL]
 Local File AVOLUME [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =AVOLUME.ACTX.AFOLDER+".AVOLUME" [AVL]
 Local File =AVOLUME.ACTX.AFOLDER+".AVOLUME" [AAA_]
 Local File =AVOLUME.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet AVOLUME.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [AVL] With
& [AAA_]CODE = VOLUME
& As [LNK_]
Return

############################################################################################
### AVOLUME(WAVL)
############################################################################################
Funprog  _MAJSQL_AVOLUME(WAVL)
Variable Instance WAVL Using C_AVOLUME
Local Integer ASTATUS,A_I,A_J
Default File [F:AVL]
If WAVL.ASTALIN=[V]CST_ANEW
 Call INICRE(WAVL) From ASYRSUB
 SetInstance [F:AVL] With WAVL
 For J=1 To maxtab(WAVL.AXX)
  If WAVL.AXX(J)<>null & WAVL.AXX(J).PRO= "DES" & WAVL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAVL,WAVL.AXX(J).TEX,"AVOLUME","DES",WAVL.AXX(J).LAN,WAVL.VOLUME,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:AVL]
 If fstat
  Call FSTA("AVL",WAVL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAVL.updTick = [F:AVL]updTick
Elsif WAVL.ASTALIN=[V]CST_ALL or WAVL.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAVL) From ASYRSUB
 SetInstance [F:AVL] With WAVL
 For J=1 To maxtab(WAVL.AXX)
  If WAVL.AXX(J)<>null & WAVL.AXX(J).PRO= "DES" & WAVL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAVL,WAVL.AXX(J).TEX,"AVOLUME","DES",WAVL.AXX(J).LAN,WAVL.VOLUME,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAVL,"AVOLUME")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AVL]CODE = [F:AVL]VOLUME
 If fstat
  Call FSTA("AVL",WAVL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAVL.updTick = [F:AVL]updTick
Elsif WAVL.ASTALIN=[V]CST_ADEL
 SetInstance [F:AVL] With WAVL
 For J=1 To maxtab(WAVL.AXX)
  If WAVL.AXX(J)<>null & WAVL.AXX(J).PRO= "DES"
   Call SUPTEXTRA(WAVL,WAVL.AXX(J).TEX,"AVOLUME","DES",WAVL.AXX(J).LAN,WAVL.VOLUME,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAVL,"AVOLUME")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AVL]CODE = [F:AVL]VOLUME
 If fstat
  Call FSTA("AVL",WAVL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



