#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management WT66STD1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [16/04/2018]
A_HEURE = "14:34:53"
A_USER  = "ADMIN"
A_STAMP = "20180416143453"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT66STD1 [MBT]
Gosub HORODAT
Local Inpbox "WT66STD1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MBT] As [SIM_]
Grizo [MBT]5
Grizo [MBT]10
Grizo [MBT]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MBT]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=50 : Y1(0)=1 : Y2(0)=4
X1(1)=51 : X2(1)=112 : Y1(1)=1 : Y2(1)=4
X1(2)=1 : X2(2)=112 : Y1(2)=5 : Y2(2)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1WT66STD1
Onevent AFTER_CHANGE Gosub AMM_FCY From W1WT66STD1
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1WT66STD1
Return

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1WT66STD1
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1WT66STD1
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1WT66STD1
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1WT66STD1
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1WT66STD1
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_WEMPNUM
Onevent CONTROL Call C_WEMPNUM(zc) From W1WT66STD1
Onevent AFTER_CHANGE Gosub AMM_WEMPNUM From W1WT66STD1
Onevent BEFORE_INPUT Call AS_WEMPNUM(zc) From W1WT66STD1
Return

Subprog AS_WEMPNUM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WEMPNUM(zc) From W1WT66STD1
Gosub _AFF
End

Subprog C_WEMPNUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_WEMPNUM(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WEMPNUM" : GZNUM = 10793 : Endif
Gosub _AFF
End

$AMM_WEMPNUM
Call AM_WEMPNUM(zc)
If !mkstat & GOBJET
 zoncou = "WEMPNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WEMPNUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WEMPNUM(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WEMPNUM" : GZNUM = 10793 : Endif
Gosub _AFF
End

Subprog S_WEMPNUM(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELEMPNUM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELEMPNUM"
 Call S_TAB_NUM(VALEUR,PARMSK,"SELEMPNUM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMTKDATD
Onevent AFTER_CHANGE Gosub AMM_WMTKDATD From W1WT66STD1
Onevent INIT_AREA Call D_WMTKDATD(zc) From W1WT66STD1
Onevent BEFORE_AREA Gosub AV_WMTKDATD From W1WT66STD1
Return

$AV_WMTKDATD
Chgfmt [M]WMTKDATD(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_WMTKDATD(VALEUR)
Variable Date    VALEUR
If varinit([M]WMTKDATD,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

$AMM_WMTKDATD
Call AM_WMTKDATD(zc)
If !mkstat & GOBJET
 zoncou = "WMTKDATD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WMTKDATD(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_WMTKDATD(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WMTKDATD" : GZNUM = 9197 : Endif
Gosub _AFF
End

$ON_WMTKDATF
Onevent CONTROL Call C_WMTKDATF(zc) From W1WT66STD1
Onevent INIT_AREA Call D_WMTKDATF(zc) From W1WT66STD1
Onevent BEFORE_AREA Gosub AV_WMTKDATF From W1WT66STD1
Return

$AV_WMTKDATF
Chgfmt [M]WMTKDATF(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_WMTKDATF(VALEUR)
Variable Date    VALEUR
If varinit([M]WMTKDATF,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

Subprog C_WMTKDATF(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_WMTKDATF(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WMTKDATF" : GZNUM = 9199 : Endif
Gosub _AFF
End

$ON_WTRKNUMD
Onevent CONTROL Call C_WTRKNUMD(zc) From W1WT66STD1
Onevent AFTER_CHANGE Gosub AMM_WTRKNUMD From W1WT66STD1
Onevent BEFORE_INPUT Call AS_WTRKNUMD(zc) From W1WT66STD1
Return

Subprog AS_WTRKNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WTRKNUMD(zc) From W1WT66STD1
Gosub _AFF
End

Subprog C_WTRKNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WTRKNUMD" : GZNUM = 10833 : Endif
Endif
Gosub _AFF
End

$AMM_WTRKNUMD
Call AM_WTRKNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WTRKNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WTRKNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WTRKNUMD(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WTRKNUMD" : GZNUM = 10833 : Endif
Gosub _AFF
End

Subprog S_WTRKNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMFGTNUM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMFGTNUM"
 PARMSK(1) = [M:MBT]FCY
 PARMSK(2) = "2"
 PARMSK(3) = "0"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMFGTNUM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WTRKNUMF
Onevent CONTROL Call C_WTRKNUMF(zc) From W1WT66STD1
Onevent BEFORE_INPUT Call AS_WTRKNUMF(zc) From W1WT66STD1
Return

Subprog AS_WTRKNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WTRKNUMF(zc) From W1WT66STD1
Gosub _AFF
End

Subprog C_WTRKNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WTRKNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_WTRKNUMF(VALEUR) From FUNBENCHT
 If mkstat : GERR = 1 : GZONE = "WTRKNUMF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_WTRKNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMFGTNUM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMFGTNUM"
 PARMSK(1) = [M:MBT]FCY
 PARMSK(2) = "2"
 PARMSK(3) = "0"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMFGTNUM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WOPENUMD
Onevent AFTER_CHANGE Gosub AMM_WOPENUMD From W1WT66STD1
Onevent CONTROL Call C_WOPENUMD(zc) From W1WT66STD1
Return

Subprog C_WOPENUMD(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_WOPENUMD
Call AM_WOPENUMD(zc)
If !mkstat & GOBJET
 zoncou = "WOPENUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WOPENUMD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WOPENUMD(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WOPENUMD" : GZNUM = 2296 : Endif
Gosub _AFF
End

$ON_WOPENUMF
Onevent CONTROL Call C_WOPENUMF(zc) From W1WT66STD1
Return

Subprog C_WOPENUMF(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_WOPENUMF(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WOPENUMF" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WWSTD
Onevent AFTER_CHANGE Gosub AMM_WWSTD From W1WT66STD1
Return

$AMM_WWSTD
Call AM_WWSTD(zc)
If !mkstat & GOBJET
 zoncou = "WWSTD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WWSTD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WWSTD(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WWSTD" : GZNUM = 5964 : Endif
Gosub _AFF
End

$ON_WWSTF
Onevent CONTROL Call C_WWSTF(zc) From W1WT66STD1
Return

Subprog C_WWSTF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_WWSTF(VALEUR) From FUNBENCHT
If mkstat : GERR = 1 : GZONE = "WWSTF" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WMFGNUMD
Return

$ON_WMFGNUMF
Return

$ON_WITMREFD
Return

$ON_WITMREFF
Return

$ON_WROUNUMD
Return

$ON_WROUNUMF
Return

$ON_WROUALTD
Return

$ON_WROUALTF
Return

$ON_FORMULE
Return

$ON_NBLIG
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT66STD1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
## Action STD
Call IB_NBLIG From FUNBENCHT
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(10833,GBOUT1) From OBJDIV
Call TEXTE(5712,GBOUT2) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT66STD1
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WT66STD1
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "FUNBENCHT" : PROGSPE = "SPEBENCHT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MBT]MFGTRKNUM(nolign-1)
 Call OBJET_CHAR(OBJCLE,"MTK","") From GOBJET
 ACTION = "BB1_NBLIG" : PROGSUB = "FUNBENCHT" : PROGSPE = "SPEBENCHT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAITECCRD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAITECCRD"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB2_NBLIG" : PROGSUB = "FUNBENCHT" : PROGSPE = "SPEBENCHT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MBT]TECCRD(nolign-1)
 PARMSK(2) = num$([M:MBT]OPENUM(nolign-1))
 PARMSK(3) = [M:MBT]MFGTRKDAT(nolign-1)
 PARMSK(4) = num$([M:MBT]OPETRKLIN(nolign-1))
 PARMSK(5) = "1"
 PARMSK(6) = [M:MBT]MFGTRKNUM(nolign-1)
 PARMSK(7) = [M:MBT]MFGNUM(nolign-1)
 PARMSK(8) = "0"
 PARMSK(9) = "MBT"
 PARMSK(10) = num$([M:MBT]OPESPLNUM(nolign-1))
 PARMSK(11) = num$(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"IQLYCRD","CRDLIB","",1,"") From GTRAITE
 ACTION = "BB2_NBLIG" : PROGSUB = "FUNBENCHT" : PROGSPE = "SPEBENCHT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_MFGTRKNUM
Onevent BEFORE_AREA Gosub AV_MFGTRKNUM From W1WT66STD1
Return

$AV_MFGTRKNUM
## Action STD
Call AV_MFGTRKNUM(zc) From FUNBENCHT
Gosub _AFF
Return

$ON_TIMTYP
Onevent INIT_AREA Call D_TIMTYP(zc) From W1WT66STD1
Return

Subprog D_TIMTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TIMTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGNUM
Return

$ON_ITMREF
Return

$ON_OPENUM
Return

$ON_WSTTYP
Onevent INIT_AREA Call D_WSTTYP(zc) From W1WT66STD1
Return

Subprog D_WSTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]WSTTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFOCPLQTY
Onevent BEFORE_AREA Gosub AV_MFOCPLQTY From W1WT66STD1
Return

$AV_MFOCPLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_MFOEXTQTY
Onevent BEFORE_AREA Gosub AV_MFOEXTQTY From W1WT66STD1
Return

$AV_MFOEXTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_MFOREJQTY
Onevent BEFORE_AREA Gosub AV_MFOREJQTY From W1WT66STD1
Return

$AV_MFOREJQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_MFOOKQTY
Onevent BEFORE_AREA Gosub AV_MFOOKQTY From W1WT66STD1
Return

$AV_MFOOKQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_MFOCQQTY
Onevent BEFORE_AREA Gosub AV_MFOCQQTY From W1WT66STD1
Return

$AV_MFOCQQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_WANCQTY
Onevent BEFORE_AREA Gosub AV_WANCQTY From W1WT66STD1
Return

$AV_WANCQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_MODIFLG
Onevent INIT_AREA Call D_MODIFLG(zc) From W1WT66STD1
Return

Subprog D_MODIFLG(VALEUR)
Variable Decimal VALEUR
If varinit([M]MODIFLG,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

$ON_OPEBORNE
Return

$ON_OKQTY
Onevent BEFORE_AREA Gosub AV_OKQTY From W1WT66STD1
Return

$AV_OKQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_OPEPREC
Return

$ON_OPESTA
Onevent INIT_AREA Call D_OPESTA(zc) From W1WT66STD1
Return

Subprog D_OPESTA(VALEUR)
Variable Integer VALEUR
If varinit([M]OPESTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OPEUOM
Return

$ON_ROUOPENUM
Return

$ON_MFGMST
Onevent INIT_AREA Call D_MFGMST(zc) From W1WT66STD1
Return

Subprog D_MFGMST(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGMST,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPSNUM
Return

$ON_POHNUM
Return

$ON_PTHNUM
Return

$ON_XOPEUOM
Return

$ON_EXTPRI
Onevent BEFORE_AREA Gosub AV_EXTPRI From W1WT66STD1
Return

$AV_EXTPRI
## Action PARDEV
Gosub _AFF
Return

$ON_CPLPRI
Onevent BEFORE_AREA Gosub AV_CPLPRI From W1WT66STD1
Return

$AV_CPLPRI
## Action PARDEV
Gosub _AFF
Return

$ON_CPLCRG
Onevent BEFORE_AREA Gosub AV_CPLCRG From W1WT66STD1
Return

$AV_CPLCRG
## Action PARDEV
Gosub _AFF
Return

$ON_CCE1
Onevent BEFORE_AREA Gosub AV_CCE1 From W1WT66STD1
Return

$AV_CCE1
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(1))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE2
Onevent BEFORE_AREA Gosub AV_CCE2 From W1WT66STD1
Return

$AV_CCE2
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(2))) From SETGLBDIE
Gosub _AFF
Return

$ON_EXTQTY
Onevent BEFORE_AREA Gosub AV_EXTQTY From W1WT66STD1
Return

$AV_EXTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBT]OPEUOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]EXTQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_CCE3
Onevent BEFORE_AREA Gosub AV_CCE3 From W1WT66STD1
Return

$AV_CCE3
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(3))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE4
Onevent BEFORE_AREA Gosub AV_CCE4 From W1WT66STD1
Return

$AV_CCE4
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(4))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE5
Onevent BEFORE_AREA Gosub AV_CCE5 From W1WT66STD1
Return

$AV_CCE5
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(5))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE6
Onevent BEFORE_AREA Gosub AV_CCE6 From W1WT66STD1
Return

$AV_CCE6
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(6))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE7
Onevent BEFORE_AREA Gosub AV_CCE7 From W1WT66STD1
Return

$AV_CCE7
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(7))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE8
Onevent BEFORE_AREA Gosub AV_CCE8 From W1WT66STD1
Return

$AV_CCE8
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(8))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE9
Onevent BEFORE_AREA Gosub AV_CCE9 From W1WT66STD1
Return

$AV_CCE9
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(9))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE10
Onevent BEFORE_AREA Gosub AV_CCE10 From W1WT66STD1
Return

$AV_CCE10
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(10))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE11
Onevent BEFORE_AREA Gosub AV_CCE11 From W1WT66STD1
Return

$AV_CCE11
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(11))) From SETGLBDIE
Gosub _AFF
Return

$ON_CCE12
Onevent BEFORE_AREA Gosub AV_CCE12 From W1WT66STD1
Return

$AV_CCE12
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(12))) From SETGLBDIE
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2WT66STD1
Return

$TIT_COL
Gosub TIT_COL From W2WT66STD1
Return


