#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CONSSTK1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:57:35"
A_USER  = "ADMIN"
A_STAMP = "20180827235735"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CONSSTK1 [STK1]
Gosub HORODAT
Local Inpbox "CONSSTK1" From GFONCTION At A_STAMP With A_WINDPREV Mask [STK1] As [SIM_]
Grizo [STK1]5
Grizo [STK1]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [STK1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=4
X1(1)=75 : X2(1)=112 : Y1(1)=1 : Y2(1)=4
Return

$ON_TRKSEL
Onevent AFTER_CHANGE Gosub AMM_TRKSEL From W1CONSSTK1
Onevent INIT_AREA Call D_TRKSEL(zc) From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_TRKSEL(zc) From W1CONSSTK1
Return

Subprog D_TRKSEL(VALEUR)
Variable Integer VALEUR
If varinit([M]TRKSEL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRKSEL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_TRKSEL
Call AM_TRKSEL(zc)
If !mkstat & GOBJET
 zoncou = "TRKSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TRKSEL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TRKSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "TRKSEL" : GZNUM = 36876 : Endif
Gosub _AFF
End

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1CONSSTK1
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1CONSSTK1
Return

Subprog IB_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREF(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_ITMREF(zc) From W1CONSSTK1
Onkey 170 Titled GBOUT13 Call B13_ITMREF(zc) From W1CONSSTK1
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1CONSSTK1
Onkey 144 Titled GBOUTP Call P_ITMREF(zc) From W1CONSSTK1
Onkey 146 Titled GBOUTA Call SA_ITMREF(zc) From W1CONSSTK1
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
If !GWEBSERV
 If !mkstat
  ## Action ITMCHOICE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "ITMCHOICE"
  Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","I",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREF(VALEUR) From CNSSTKSTD
   If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREF(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZITMREF)")>indice
 [M]ITMREF(indice) = VALEUR
 Affzo ZITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call S_ITMREF(VALEUR) From CNSSTKSTD
Endif
Gosub _AFF
End

Subprog B1_ITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1CONSSTK1
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_LOTSEL
Onevent CONTROL Call C_LOTSEL(zc) From W1CONSSTK1
Onevent AFTER_CHANGE Gosub AMM_LOTSEL From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_LOTSEL(zc) From W1CONSSTK1
Return

Subprog IB_LOTSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_LOTSEL From CNSSTKSTD
Gosub _AFF
End

Subprog AS_LOTSEL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call IB_LOTSEL(VALEUR)
Onkey   2 Titled GBOUTS Call S_LOTSEL(zc) From W1CONSSTK1
Gosub _AFF
End

Subprog C_LOTSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LOTSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "LOTSEL" : GZNUM = 2721 : Endif
Gosub _AFF
End

$AMM_LOTSEL
Call AM_LOTSEL(zc)
If !mkstat & GOBJET
 zoncou = "LOTSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOTSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOTSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "LOTSEL" : GZNUM = 2721 : Endif
Gosub _AFF
End

Subprog S_LOTSEL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELLOTSTK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELLOTSTK"
 PARMSK(1) = [M]ITMREF
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELLOTSTK","CNSSTKSTD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SLOSEL
Onevent AFTER_CHANGE Gosub AMM_SLOSEL From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_SLOSEL(zc) From W1CONSSTK1
Return

Subprog AS_SLOSEL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_SLOSEL(zc) From W1CONSSTK1
Gosub _AFF
End

$AMM_SLOSEL
Call AM_SLOSEL(zc)
If !mkstat & GOBJET
 zoncou = "SLOSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SLOSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SLOSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "SLOSEL" : GZNUM = 18960 : Endif
Gosub _AFF
End

Subprog S_SLOSEL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELSLOSTK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELSLOSTK"
 PARMSK(1) = [M]LOTSEL
 PARMSK(2) = [M]ITMREF
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELSLOSTK","CNSSTKSTD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SERSEL
Onevent AFTER_CHANGE Gosub AMM_SERSEL From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_SERSEL(zc) From W1CONSSTK1
Return

Subprog AS_SERSEL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_SERSEL(zc) From W1CONSSTK1
Gosub _AFF
End

$AMM_SERSEL
Call AM_SERSEL(zc)
If !mkstat & GOBJET
 zoncou = "SERSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SERSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SERSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "SERSEL" : GZNUM = 3206 : Endif
Gosub _AFF
End

Subprog S_SERSEL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELSERSTK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELSERSTK"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M]LOTSEL
 PARMSK(3) = ""
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELSERSTK","CNSSTKSTD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VCRTYPSEL
Onevent BEFORE_INPUT Call AS_VCRTYPSEL(zc) From W1CONSSTK1
Onevent AFTER_CHANGE Gosub AMM_VCRTYPSEL From W1CONSSTK1
Onevent INIT_AREA Call D_VCRTYPSEL(zc) From W1CONSSTK1
Onevent CONTROL Call C_VCRTYPSEL(zc) From W1CONSSTK1
Return

Subprog D_VCRTYPSEL(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPSEL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRTYPSEL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(725) From COMBOS
If !GWEBSERV
 ## Action STD
 Call AS_VCRTYPSEL(VALEUR) From CNSSTKSTD
 If mkstat=2
  [M]VCRTYPSEL(INDIC) = VALEUR
  Affzo VCRTYPSEL(INDIC) : mkstat = 2
 Endif
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,725,1))))
Endif
If !mkstat
 Discombo 0 From VCRTYPSEL(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From VCRTYPSEL(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_VCRTYPSEL(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_VCRTYPSEL
Call AM_VCRTYPSEL(zc)
If !mkstat & GOBJET
 zoncou = "VCRTYPSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRTYPSEL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_VCRTYPSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "VCRTYPSEL" : GZNUM = 4969 : Endif
Gosub _AFF
End

$ON_VCRNUMSEL
Onevent CONTROL Call C_VCRNUMSEL(zc) From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_VCRNUMSEL(zc) From W1CONSSTK1
Onevent AFTER_CHANGE Gosub AMM_VCRNUMSEL From W1CONSSTK1
Return

Subprog AS_VCRNUMSEL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_VCRNUMSEL(VALEUR) From CNSSTKSTD
If mkstat=2
 [M]VCRNUMSEL(INDIC) = VALEUR
 Affzo VCRNUMSEL(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_VCRNUMSEL(zc) From W1CONSSTK1
Gosub _AFF
End

Subprog C_VCRNUMSEL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCRNUMSEL" : GZNUM = 5515 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_VCRNUMSEL(VALEUR) From CNSSTKSTD
 If mkstat : GERR = 1 : GZONE = "VCRNUMSEL" : GZNUM = 5515 : Endif
Endif
Gosub _AFF
End

$AMM_VCRNUMSEL
Call AM_VCRNUMSEL(zc)
If !mkstat & GOBJET
 zoncou = "VCRNUMSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRNUMSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VCRNUMSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "VCRNUMSEL" : GZNUM = 5515 : Endif
Gosub _AFF
End

Subprog S_VCRNUMSEL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELTRK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELTRK"
 PARMSK(1) = ""
 PARMSK(2) = [M:STK1]ITMREF
 PARMSK(3) = num$([M:STK1]VCRTYPSEL-1)
 PARMSK(4) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELTRK","CNSSTKSTD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_BPRNUMSEL
Onevent CONTROL Call C_BPRNUMSEL(zc) From W1CONSSTK1
Onevent AFTER_CHANGE Gosub AMM_BPRNUMSEL From W1CONSSTK1
Onevent BEFORE_INPUT Call AS_BPRNUMSEL(zc) From W1CONSSTK1
Return

Subprog AS_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1500,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPRNUMSEL(zc) From W1CONSSTK1
Onkey   2 Titled GBOUTS Call S_BPRNUMSEL(zc) From W1CONSSTK1
Onkey 144 Titled GBOUTP Call P_BPRNUMSEL(zc) From W1CONSSTK1
Onkey 146 Titled GBOUTA Call SA_BPRNUMSEL(zc) From W1CONSSTK1
Gosub _AFF
End

Subprog C_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BPRCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BPRCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"BPRCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "BPRNUMSEL" : GZNUM = 1500 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("BPR","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BPRNUMSEL" : GZNUM = 1500 : Endif
Endif
Gosub _AFF
End

$AMM_BPRNUMSEL
Call AM_BPRNUMSEL(zc)
If !mkstat & GOBJET
 zoncou = "BPRNUMSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_BPRNUMSEL(VALEUR) From CNSSTKSTD
If mkstat : GERR = 1 : GZONE = "BPRNUMSEL" : GZNUM = 1500 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZBPRNUMSEL)")>indice
 [M]BPRNUMSEL(indice) = VALEUR
 Affzo ZBPRNUMSEL(indice)
Endif
Gosub _AFF
End

Subprog S_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "BPR"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
Call OBJET("BPR",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BPR"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BPRNUMSEL(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BPR",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBPRNUMSEL
Onevent BEFORE_AREA Gosub AV_ZBPRNUMSEL From W1CONSSTK1
Return

$AV_ZBPRNUMSEL
If clalev([F:BPR])=0
 If dim(GTABCPT)>0 & GTABCPT<>"" & find("BPR",GABRCPT(1..GNBTABCPT))
  Local File =GTABCPT+"BPARTNER" [BPR]
 Else 
  Local File BPARTNER [BPR]
 Endif
Endif
Call LECTURE("BPR",num$([M]BPRNUMSEL(indice)),"") From CONTOBJ
zc = [F:BPR]BPRSHO
Gosub _AFF
Return

$ON_TRSTYP001
Onevent INIT_AREA Call D_TRSTYP001(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP001(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP001,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP002
Onevent INIT_AREA Call D_TRSTYP002(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP002(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP002,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP003
Onevent INIT_AREA Call D_TRSTYP003(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP003(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP003,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP004
Onevent INIT_AREA Call D_TRSTYP004(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP004(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP004,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP005
Onevent INIT_AREA Call D_TRSTYP005(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP005(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP005,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP006
Onevent INIT_AREA Call D_TRSTYP006(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP006(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP006,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP007
Onevent INIT_AREA Call D_TRSTYP007(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP007(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP007,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP008
Onevent INIT_AREA Call D_TRSTYP008(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP008(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP008,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP009
Onevent INIT_AREA Call D_TRSTYP009(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP009(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP009,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP010
Onevent INIT_AREA Call D_TRSTYP010(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP010(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP010,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP011
Onevent INIT_AREA Call D_TRSTYP011(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP011(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP011,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP012
Onevent INIT_AREA Call D_TRSTYP012(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP012(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP012,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP013
Onevent INIT_AREA Call D_TRSTYP013(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP013(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP013,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP014
Onevent INIT_AREA Call D_TRSTYP014(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP014(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP014,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP015
Onevent INIT_AREA Call D_TRSTYP015(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP015(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP015,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP016
Onevent INIT_AREA Call D_TRSTYP016(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP016(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP016,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP017
Onevent INIT_AREA Call D_TRSTYP017(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP017(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP017,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP018
Onevent INIT_AREA Call D_TRSTYP018(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP018(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP018,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP019
Onevent INIT_AREA Call D_TRSTYP019(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP019(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP019,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP020
Onevent INIT_AREA Call D_TRSTYP020(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP020(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP020,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP021
Onevent INIT_AREA Call D_TRSTYP021(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP021(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP021,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP022
Onevent INIT_AREA Call D_TRSTYP022(zc) From W1CONSSTK1
Return

Subprog D_TRSTYP022(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP022,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REGFLG
Onevent INIT_AREA Call D_REGFLG(zc) From W1CONSSTK1
Return

Subprog D_REGFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]REGFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ZERFLG
Onevent INIT_AREA Call D_ZERFLG(zc) From W1CONSSTK1
Return

Subprog D_ZERFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


