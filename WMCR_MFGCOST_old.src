#<AdxTL>@(#)0.0.0.0 $Revision$Class Production cost price
# Sage X3 supervisor
## CRUD-CLASSE ## MFGCOST
# 2018-06-20 06:47:59 302


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File MFGCOST [MFC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_MFGCOST") From ASYRCOM : Endif
Local Instance MFGCOST Using C_MFGCOST

If !SILENCE : Call TRACE("3 --> New Instance C_MFGCOST") From ASYRCOM : Endif
MFGCOST = NewInstance C_MFGCOST AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [MFC_]MFC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of MFGCOST") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet MFGCOST.AREAD([MFC_]STOFCY,[MFC_]ITMREF,[MFC_]VCRTYP,[MFC_]VCRNUM,[MFC_]VCRLIN,[MFC_]MFCTYP,[MFC_]UID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("MFGCOST.STOFCY ="-num$(MFGCOST.STOFCY)) From ASYRCOM
 Call TRACE("MFGCOST.ITMREF ="-num$(MFGCOST.ITMREF)) From ASYRCOM
 Call TRACE("MFGCOST.VCRTYP ="-num$(MFGCOST.VCRTYP)) From ASYRCOM
 Call TRACE("MFGCOST.VCRNUM ="-num$(MFGCOST.VCRNUM)) From ASYRCOM
 Call TRACE("MFGCOST.VCRLIN ="-num$(MFGCOST.VCRLIN)) From ASYRCOM
 Call TRACE("MFGCOST.MFCTYP ="-num$(MFGCOST.MFCTYP)) From ASYRCOM
 Call TRACE("MFGCOST.UID ="-num$(MFGCOST.UID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(MFGCOST.AKEYS)
  Call TRACE("-"-num$(I)-":"-MFGCOST.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [MFC_]
FreeGroup MFGCOST
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(MFGCOST,ACLE,ASTATUS,_ETAG)
Variable Instance MFGCOST Using C_MFGCOST
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _STOFCY(5)
Local Char _ITMREF(20)
Local Tinyint _VCRTYP
Local Char _VCRNUM(20)
Local Integer _VCRLIN
Local Tinyint _MFCTYP
Local Integer _UID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_ITMREF = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_VCRTYP = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_VCRNUM = num$([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_VCRLIN = val([L]CLE(5)) : Endif
If [L]CLE(6)<>"" : [L]_MFCTYP = val([L]CLE(6)) : Endif
If [L]CLE(7)<>"" : [L]_UID = val([L]CLE(7)) : Endif
Raz [L]_ETAG
Local File MFGCOST [MFC]
Default File [F:MFC]
Read [F:MFC]MFC0 = [L]_STOFCY;[L]_ITMREF;[L]_VCRTYP;[L]_VCRNUM;[L]_VCRLIN;[L]_MFCTYP;[L]_UID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:MFC]UPDTICK)>0
 [L]_ETAG = num$([F:MFC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(MFGCOST,ACLE,ASTATUS)
Variable Instance MFGCOST Using C_MFGCOST
Value Char ACLE
Variable Integer ASTATUS
Local Char _STOFCY(5)
Local Char _ITMREF(20)
Local Tinyint _VCRTYP
Local Char _VCRNUM(20)
Local Integer _VCRLIN
Local Tinyint _MFCTYP
Local Integer _UID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_ITMREF = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_VCRTYP = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_VCRNUM = num$([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_VCRLIN = val([L]CLE(5)) : Endif
If [L]CLE(6)<>"" : [L]_MFCTYP = val([L]CLE(6)) : Endif
If [L]CLE(7)<>"" : [L]_UID = val([L]CLE(7)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet MFGCOST.AREAD([L]_STOFCY,[L]_ITMREF,[L]_VCRTYP,[L]_VCRNUM,[L]_VCRLIN,[L]_MFCTYP,[L]_UID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(MFGCOST,_STOFCY,_ITMREF,_VCRTYP,_VCRNUM,_VCRLIN,_MFCTYP,_UID,ASTATUS)
Variable Instance MFGCOST Using C_MFGCOST
Value Char _STOFCY
Value Char _ITMREF
Value Tinyint _VCRTYP
Value Char _VCRNUM
Value Integer _VCRLIN
Value Tinyint _MFCTYP
Value Integer _UID
Variable Integer ASTATUS

If MFGCOST = null : End : Endif

Gosub AVARIABLES From WMC00MFGCOST
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If MFGCOST.APARENT=null
 [L]A_I = MFGCOST.freeSnapshot
 MFGCOST.snapshotEnabled = 0
 MFGCOST.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & MFGCOST.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet MFGCOST._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If MFGCOST.APARENT=null
 MFGCOST.snapshotEnabled = 1
 MFGCOST.setAccessorEnabled = 1
Endif
LogicClose File [MFC]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet MFGCOST._ACTION_PARAM("AREAD_BEFORE",[L]_STOFCY,[L]_ITMREF,[L]_VCRTYP,[L]_VCRNUM,[L]_VCRLIN,[L]_MFCTYP,[L]_UID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet MFGCOST._ACTION_PARAM("AREAD",[L]_STOFCY,[L]_ITMREF,[L]_VCRTYP,[L]_VCRNUM,[L]_VCRLIN,[L]_MFCTYP,[L]_UID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
MFGCOST.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet MFGCOST.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



