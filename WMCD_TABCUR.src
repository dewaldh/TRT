#<AdxTL>@(#)0.0.0.0 $Revision$Class Currency table
# Supervisor
## CRUD-CLASSE ## TABCUR
# 2018-08-27 12:51:14 118


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(TABCUR,ASTATUS)
Variable Instance TABCUR Using C_TABCUR
Variable Integer ASTATUS

If TABCUR = null : End : Endif

Gosub _AVARIABLES From WMC00TABCUR

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_TABCUR

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(TABCUR,ASTATUS)
Variable Instance TABCUR Using C_TABCUR
Variable Integer ASTATUS

If TABCUR = null : End : Endif

Gosub AVARIABLES From WMC00TABCUR
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_TABCUR
Else
 Gosub ADELETE_TABCUR
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(TABCUR,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If TABCUR.ASTALIN = [V]CST_ANEWDEL : Return : Endif
TABCUR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet TABCUR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet TABCUR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_TABCUR
Trbegin [F:TCU]
 Gosub ADELETE_TABCUR
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_TABCUR
[L]ASTATUS = max([L]ASTATUS,fmet TABCUR.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(TABCUR,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00TABCUR._MAJSQL_TABCUR(TABCUR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABCUR.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If TABCUR.snapshotEnabled=1
 [L]A_RETIK = TABCUR.revertUpdTick
Endif
[L]ASTATUS = max(fmet TABCUR.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



