#<AdxTL>@(#)0.0.0.0 $Revision$Class Postal codes - Mobile
# Supervisor
## WMREP REPRESENTATION ## POSCODM
# 2018-08-27 13:25:09 573

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:POS])=0 : Local File POSCOD [POS] : Endif
If clalev([F:A_])=0 : Local File POSCOD [A_] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [POS]
LogicClose File [A_]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"POS","POS",ACRITROLE,[V]CST_AFALSE)
Link [POS] With
& [A_]POS0~=[POS]CRY;[POS]POSCOD;[POS]POSCTY;[POS]POSCTYCOD
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"POS","POS",ACRITROLE,[V]CST_AFALSE)
Link [POS] With
& [A_]POS0~=[POS]CRY;[POS]POSCOD;[POS]POSCTY;[POS]POSCTYCOD
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# POS --- POSCOD(POS)
QRY(NBREP) = NewInstance R_POSCODM AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:POS]AUUID)>0 & [F:POS]AUUID=NullUuid
 [F:POS]AUUID = getUuid
Endif
SetInstance QRY(NBREP).POS With [F:POS]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# POS --- POSCOD(POS)
QRY = NewInstance R_POSCODM AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:POS]AUUID)>0 & [F:POS]AUUID=NullUuid
 [F:POS]AUUID = getUuid
Endif
SetInstance QRY.POS With [F:POS]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0POSCOD
CURQRY = "R_POSCODM"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).POS.CRY.LNKPRO
Callmet QRY(NBREP).POS.POSCOD.LNKPRO
Callmet QRY(NBREP).POS.POSCTY.LNKPRO
Callmet QRY(NBREP).POS.SATCOD.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.POS.CRY.LNKPRO
Callmet QRY.POS.POSCOD.LNKPRO
Callmet QRY.POS.POSCTY.LNKPRO
Callmet QRY.POS.SATCOD.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "CRY" : TBFIL(NBPRO) = "[F:POS]CRY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "POS.CRY"
NBPRO += 1 : TBPRO(NBPRO) = "POSCOD" : TBFIL(NBPRO) = "[F:POS]POSCOD"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "POS.POSCOD"
NBPRO += 1 : TBPRO(NBPRO) = "POSCTY" : TBFIL(NBPRO) = "[F:POS]POSCTY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "POS.POSCTY"
NBPRO += 1 : TBPRO(NBPRO) = "POSCTYCOD" : TBFIL(NBPRO) = "[F:POS]POSCTYCOD"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "POS.POSCTYCOD"
NBPRO += 1 : TBPRO(NBPRO) = "SATCOD" : TBFIL(NBPRO) = "[F:POS]SATCOD"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "POS.SATCOD"
NBPRO += 1 : TBPRO(NBPRO) = "POSCTYSEA" : TBFIL(NBPRO) = "[F:POS]POSCTYSEA"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "POS.POSCTYSEA"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:POS]CRY"
ASTDKEY += ";"+"[F:POS]POSCOD"
ASTDKEY += ";"+"[F:POS]POSCTY"
ASTDKEY += ";"+"[F:POS]POSCTYCOD"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Return
 


