#<AdxTL>@(#)0.0.0.0 $Revision$Class Sub-contracting BOMs
# Supervisor
## CRUD-CLASSE ## BODS
# 2018-08-27 12:24:52 754


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BOM [BOH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BODS") From ASYRCOM : Endif
Local Instance BODS Using C_BODS

If !SILENCE : Call TRACE("3 --> New Instance C_BODS") From ASYRCOM : Endif
BODS = NewInstance C_BODS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BOH_]BOH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BODS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BODS.AREAD([BOH_]ITMREF,[BOH_]BOMALT,[BOH_]BOMALTTYP))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BODS.ITMREF ="-num$(BODS.ITMREF)) From ASYRCOM
 Call TRACE("BODS.BOMALT ="-num$(BODS.BOMALT)) From ASYRCOM
 Call TRACE("BODS.BOMALTTYP ="-num$(BODS.BOMALTTYP)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BODS.AKEYS)
  Call TRACE("-"-num$(I)-":"-BODS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BOH_]
FreeGroup BODS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BODS,ACLE,ASTATUS,_ETAG)
Variable Instance BODS Using C_BODS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _ITMREF(20)
Local Shortint _BOMALT
Local Tinyint _BOMALTTYP
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BOMALT = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BOMALTTYP = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File BOM [BOH]
Default File [F:BOH]
Read [F:BOH]BOH0 = [L]_ITMREF;[L]_BOMALT;[L]_BOMALTTYP
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BOH]UPDTICK)>0
 [L]_ETAG = num$([F:BOH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BODS,ACLE,ASTATUS)
Variable Instance BODS Using C_BODS
Value Char ACLE
Variable Integer ASTATUS
Local Char _ITMREF(20)
Local Shortint _BOMALT
Local Tinyint _BOMALTTYP
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BOMALT = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BOMALTTYP = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BODS.AREAD([L]_ITMREF,[L]_BOMALT,[L]_BOMALTTYP))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BODS,_ITMREF,_BOMALT,_BOMALTTYP,ASTATUS)
Variable Instance BODS Using C_BODS
Value Char _ITMREF
Value Shortint _BOMALT
Value Tinyint _BOMALTTYP
Variable Integer ASTATUS

If BODS = null : End : Endif

Gosub AVARIABLES From WMC00BODS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BODS.APARENT=null
 [L]A_I = BODS.freeSnapshot
 BODS.snapshotEnabled = 0
 BODS.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BODS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BODS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BODS.APARENT=null
 BODS.snapshotEnabled = 1
 BODS.setAccessorEnabled = 1
Endif
LogicClose File [BOH] ,[BOD] ,[BOS] ,[TBO]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BODS._ACTION_PARAM("AREAD_BEFORE",[L]_ITMREF,[L]_BOMALT,[L]_BOMALTTYP))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BOH]
Read [F:BOH]BOH0 = [L]_ITMREF;[L]_BOMALT;[L]_BOMALTTYP
If fstat
[L]A_ERROR = [L]_ITMREF+"~"+num$([L]_BOMALT)+"~"+num$([L]_BOMALTTYP)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BODS,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
If ([F:BOH]BOMALTTYP=3)=0
[L]A_ERROR = [L]_ITMREF+"~"+num$([L]_BOMALT)+"~"+num$([L]_BOMALTTYP)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BODS,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:BOH]ACSCOD
If dim([F:BOH]AUUID)>0 & [F:BOH]AUUID=NullUuid
 [F:BOH]AUUID = getUuid
Endif
SetInstance BODS With [F:BOH]
BODS.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BOD]
 Filter [F:BOD] Where [F:BOD]CPNTYP<>7
 [L]A_N2=0
 For [F:BOD]BOD4 Where BOMALT=[F:BOH]BOMALT & ITMREF=[F:BOH]ITMREF & BOMALTTYP=[F:BOH]BOMALTTYP
  [L]A_N2 +=1
  BODS.L_BODSD(A_N2) = NewInstance  C_BODSD(BODS.ACTX,NullUuid,[L]A_N2,BODS,"L_BODSD") AllocGroup BODS
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BODSD(A_N2).ADDINSTANCE_BOUND)
  If dim([F:BOD]AUUID)>0 & [F:BOD]AUUID=NullUuid
   [F:BOD]AUUID = getUuid
  Endif
  SetInstance BODS.L_BODSD(A_N2) With [F:BOD]
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BODSD(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  BODS.L_BODSD(A_N2).ASTALIN = [V]CST_ALL
 Next BOD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Filter [F:BOD]
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BOS]
 Filter [F:BOS] Where [F:BOD]CPNTYP=7
 [L]A_N2=0
 For [F:BOS]BOD4 Where BOMALT=[F:BOH]BOMALT & ITMREF=[F:BOH]ITMREF & BOMALTTYP=[F:BOH]BOMALTTYP
  [L]A_N2 +=1
  BODS.L_BODSS(A_N2) = NewInstance  C_BODSS(BODS.ACTX,NullUuid,[L]A_N2,BODS,"L_BODSS") AllocGroup BODS
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BODSS(A_N2).ADDINSTANCE_BOUND)
  If dim([F:BOS]AUUID)>0 & [F:BOS]AUUID=NullUuid
   [F:BOS]AUUID = getUuid
  Endif
  SetInstance BODS.L_BODSS(A_N2) With [F:BOS]
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BODSS(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  BODS.L_BODSS(A_N2).ASTALIN = [V]CST_ALL
 Next BOS
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Filter [F:BOS]
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:TBO]
 [L]A_N2=1
 Read [F:TBO]TBO0 = [F:BOH]BOMALTTYP;[F:BOH]BOMALT
 If !fstat
  Callmet BODS.L_BOMALT(A_N2).AREAD([F:TBO]BOMALTTYP,[F:TBO]BOMALT)
  BODS.L_BOMALT(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BOMALT(A_N2).ASETATTRIBUTE("BOMALTTYP","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BOMALT(A_N2).ASETATTRIBUTE("BOMALT","$isDisabled","true"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet BODS.L_BOMALT(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"L_BOMALT")+" : "+num$([F:BOH]BOMALTTYP)
&  +"~"+num$([F:BOH]BOMALT)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"TABBOMALT"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet BODS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="BOM" & ZONE="BOMDESAXX" & IDENT1=BODS.IDENT1 & IDENT2=num$(BODS.BOMALTTYP)
 Call ASETTEXTRA(BODS.AXX,BODS.AllocGrp(),"BOMDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 BODS.AXX(maxtab(BODS.AXX)).FLG = 0
Next AXX
If !len(fmet BODS.AGETTEXTRA("BOMDESAXX"))
 Call ASETTEXTRA(BODS.AXX,BODS.AllocGrp(),"BOMDESAXX",
& fmet BODS.AGETTEXTRALAN("BOMDESAXX",BODS.ACTX.AFOLD.ALANGDEF),
& BODS.ACTX.LAN) From ASYRSUB
Endif

Return



