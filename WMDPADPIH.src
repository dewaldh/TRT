#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PADPIH

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".PINVOICE" : If clalev([F:PIH])=0 : Local File =OUVTAB [PIH] : Endif
OUVTAB = GDOSSIER+".PINVOICEV" : If clalev([F:PIV])=0 : Local File =OUVTAB [PIV] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [PIH]"
Link [PIH] With
& [PIV]PIV0 ~= [F:PIH]NUM,
& [CPY]CPY0 = [F:PIH]CPY
& As [LNK_]
& Where [F:PIH]ORIMOD=6 & [F:PIH]STA=3
& Order By Key CLE = [PIH]NUM
FILTRE = ""
Return

$FERME
If clalev([F:PIH]) : Close local File [PIH] : Endif
If clalev([F:PIV]) : Close local File [PIV] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..1)
Local Integer DTYP(1..1)
Local Integer NBDCLE
NBDCLE = 1
DCLE(1) = "PIHNUM"
DTYP(1) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]PIHNUM)>0
 [F:AAA_]PIHNUM = [F:PIH]NUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]PIHNUM=[F:PIH]NUM"

End

$MAJFLD
### PIHNUM
[L]FLD="PIHNUM"
[L]FORMULE='[F:PIH]NUM'
If dim([F:AAA_]PIHNUM)>0
 [F:AAA_]PIHNUM = [F:PIH]NUM
Endif

### PIHNUMLNK
[L]FLD="PIHNUMLNK"
[L]FORMULE='[F:PIH]NUM'
If dim([F:AAA_]PIHNUMLNK)>0
 [F:AAA_]PIHNUMLNK = [F:PIH]NUM
Endif

### PIVTYP
[L]FLD="PIVTYP"
[L]FORMULE='[F:PIH]PIVTYP'
If dim([F:AAA_]PIVTYP)>0
 [F:AAA_]PIVTYP = [F:PIH]PIVTYP
Endif

### PIVTYP_LEG
[L]FLD="PIVTYP_LEG"
[L]FORMULE='func TRTX3BIACH.GETLEG_PIVTYP([F:AAA_]PIVTYP,[F:CPY]LEG)'
If dim([F:AAA_]PIVTYP_LEG)>0
 [F:AAA_]PIVTYP_LEG = func TRTX3BIACH.GETLEG_PIVTYP([F:AAA_]PIVTYP,[F:CPY]LEG)
Endif

### INVTYP
[L]FLD="INVTYP"
[L]FORMULE='[F:PIH]INVTYP'
If dim([F:AAA_]INVTYP)>0
 [F:AAA_]INVTYP = [F:PIH]INVTYP
Endif

### PIHTYP
[L]FLD="PIHTYP"
[L]FORMULE='[F:PIH]PIHTYP'
If dim([F:AAA_]PIHTYP)>0
 [F:AAA_]PIHTYP = [F:PIH]PIHTYP
Endif

### ACCDAT
[L]FLD="ACCDAT"
[L]FORMULE='[F:PIH]ACCDAT'
If dim([F:AAA_]ACCDAT)>0
 [F:AAA_]ACCDAT = [F:PIH]ACCDAT
Endif

### BPRVCR
[L]FLD="BPRVCR"
[L]FORMULE='[F:PIH]BPRVCR'
If dim([F:AAA_]BPRVCR)>0
 [F:AAA_]BPRVCR = [F:PIH]BPRVCR
Endif

### BPRDAT
[L]FLD="BPRDAT"
[L]FORMULE='[F:PIH]BPRDAT'
If dim([F:AAA_]BPRDAT)>0
 [F:AAA_]BPRDAT = [F:PIH]BPRDAT
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:PIH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:PIH]EECICT
Endif

### EECSCH
[L]FLD="EECSCH"
[L]FORMULE='[F:PIH]EECSCH'
If dim([F:AAA_]EECSCH)>0
 [F:AAA_]EECSCH = [F:PIH]EECSCH
Endif

### EECSCH_LEG
[L]FLD="EECSCH_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_EECSCH([F:AAA_]EECSCH,[F:CPY]LEG)'
If dim([F:AAA_]EECSCH_LEG)>0
 [F:AAA_]EECSCH_LEG = func TRTX3BITC.GETLEG_EECSCH([F:AAA_]EECSCH,[F:CPY]LEG)
Endif

### EECNAT
[L]FLD="EECNAT"
[L]FORMULE='[F:PIH]EECNAT'
If dim([F:AAA_]EECNAT)>0
 [F:AAA_]EECNAT = [F:PIH]EECNAT
Endif

### EECNAT_LEG
[L]FLD="EECNAT_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_EECNAT([F:AAA_]EECNAT,[F:CPY]LEG)'
If dim([F:AAA_]EECNAT_LEG)>0
 [F:AAA_]EECNAT_LEG = func TRTX3BITC.GETLEG_EECNAT([F:AAA_]EECNAT,[F:CPY]LEG)
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:PIH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:PIH]FFWNUM
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:PIH]VAC'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:PIH]VAC
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:PIH]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:PIH]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:PIH]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:PIH]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### DSPWEU
[L]FLD="DSPWEU"
[L]FORMULE='[F:PIV]DSPWEU'
If dim([F:AAA_]DSPWEU)>0
 [F:AAA_]DSPWEU = [F:PIV]DSPWEU
Endif

### DSPVOU
[L]FLD="DSPVOU"
[L]FORMULE='[F:PIV]DSPVOU'
If dim([F:AAA_]DSPVOU)>0
 [F:AAA_]DSPVOU = [F:PIV]DSPVOU
Endif

### BPRNAM
[L]FLD="BPRNAM"
[L]FORMULE='[F:PIH]BPRNAM'
If dim([F:AAA_]BPRNAM)>0
 [F:AAA_]BPRNAM = [F:PIH]BPRNAM
Endif

### POSCOD
[L]FLD="POSCOD"
[L]FORMULE='vireblc([F:PIH]POSCOD,1)'
If dim([F:AAA_]POSCOD)>0
 [F:AAA_]POSCOD = vireblc([F:PIH]POSCOD,1)
Endif

### CTY
[L]FLD="CTY"
[L]FORMULE='[F:PIH]CTY'
If dim([F:AAA_]CTY)>0
 [F:AAA_]CTY = [F:PIH]CTY
Endif

### CRY
[L]FLD="CRY"
[L]FORMULE='[F:PIH]CRY'
If dim([F:AAA_]CRY)>0
 [F:AAA_]CRY = [F:PIH]CRY
Endif

### BPYNAM
[L]FLD="BPYNAM"
[L]FORMULE='[F:PIH]BPYNAM'
If dim([F:AAA_]BPYNAM)>0
 [F:AAA_]BPYNAM = [F:PIH]BPYNAM
Endif

### BPYPOSCOD
[L]FLD="BPYPOSCOD"
[L]FORMULE='vireblc([F:PIH]BPYPOSCOD,1)'
If dim([F:AAA_]BPYPOSCOD)>0
 [F:AAA_]BPYPOSCOD = vireblc([F:PIH]BPYPOSCOD,1)
Endif

### BPYCTY
[L]FLD="BPYCTY"
[L]FORMULE='[F:PIH]BPYCTY'
If dim([F:AAA_]BPYCTY)>0
 [F:AAA_]BPYCTY = [F:PIH]BPYCTY
Endif

### BPYCRY
[L]FLD="BPYCRY"
[L]FORMULE='[F:PIH]BPYCRY'
If dim([F:AAA_]BPYCRY)>0
 [F:AAA_]BPYCRY = [F:PIH]BPYCRY
Endif


Return

