#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical triggers
# Supervisor
## CRUD-CLASSE ## PARSTA1
# 2018-08-27 12:37:03 332


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(PARSTA1,ASTATUS)
Variable Instance PARSTA1 Using C_PARSTA1
Variable Integer ASTATUS

If PARSTA1 = null : End : Endif

Gosub _AVARIABLES From WMC00PARSTA1

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_PARSTA1

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PARSTA1,ASTATUS)
Variable Instance PARSTA1 Using C_PARSTA1
Variable Integer ASTATUS

If PARSTA1 = null : End : Endif

Gosub AVARIABLES From WMC00PARSTA1
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
PARSTA1.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PARSTA1
Else
 Gosub AUPDATE_PARSTA1
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PARSTA1.freeSnapshot
PARSTA1.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PARSTA1._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PARSTA1._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PARSTA1._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PARSTA1.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PARSTA1.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PARSTA1.ASTALIN)<>""
 [L]A_ASTALIN = PARSTA1.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(PARSTA1.CRICOL)
 If PARSTA1.CRICOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA1.CRICOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.CRICOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.TBLCOL)
 If PARSTA1.TBLCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA1.TBLCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.TBLCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.VARCOL)
 If PARSTA1.VARCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA1.VARCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.VARCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

For [L]A_I=1 To maxtab(PARSTA1.CRICOL)
 If PARSTA1.CRICOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA1.CRICOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.CRICOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.TBLCOL)
 If PARSTA1.TBLCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA1.TBLCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.TBLCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.VARCOL)
 If PARSTA1.VARCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA1.VARCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.VARCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(PARSTA1.ASTALIN)<>""
 [L]A_ASTALIN = PARSTA1.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PARSTA1
Trbegin [F:PS1]
 Gosub AUPDATE_PARSTA1
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_PARSTA1
[L]A_ASTALIN = PARSTA1.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00PARSTA1._MAJSQL_PARSTA1(PARSTA1))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = PARSTA1.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PARSTA1.snapshotEnabled=1
 [L]A_RETIK = PARSTA1.revertUpdTick
Endif

[L]ASTATUS = max(fmet PARSTA1.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PARSTA1.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PARSTA1.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(PARSTA1.CRICOL)
 If PARSTA1.CRICOL([L]A_I)<>null
  If PARSTA1.CRICOL([L]A_I).ASTALIN=[V]CST_ADEL or PARSTA1.CRICOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PARSTA1.CRICOL([L]A_I)
   PARSTA1.CRICOL([L]A_I) = null
  Elsif PARSTA1.CRICOL([L]A_I).ASTALIN <> [V]CST_ALL
   PARSTA1.CRICOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(PARSTA1.TBLCOL)
 If PARSTA1.TBLCOL([L]A_I)<>null
  If PARSTA1.TBLCOL([L]A_I).ASTALIN=[V]CST_ADEL or PARSTA1.TBLCOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PARSTA1.TBLCOL([L]A_I)
   PARSTA1.TBLCOL([L]A_I) = null
  Elsif PARSTA1.TBLCOL([L]A_I).ASTALIN <> [V]CST_ALL
   PARSTA1.TBLCOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(PARSTA1.VARCOL)
 If PARSTA1.VARCOL([L]A_I)<>null
  If PARSTA1.VARCOL([L]A_I).ASTALIN=[V]CST_ADEL or PARSTA1.VARCOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PARSTA1.VARCOL([L]A_I)
   PARSTA1.VARCOL([L]A_I) = null
  Elsif PARSTA1.VARCOL([L]A_I).ASTALIN <> [V]CST_ALL
   PARSTA1.VARCOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Return



