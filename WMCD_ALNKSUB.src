#<AdxTL>@(#)0.0.0.0 $Revision$Class Subdivision links
# Supervisor
## CRUD-CLASSE ## ALNKSUB
# 2018-08-27 12:20:59 369


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(ALNKSUB,ASTATUS)
Variable Instance ALNKSUB Using C_ALNKSUB
Variable Integer ASTATUS

If ALNKSUB = null : End : Endif

Gosub _AVARIABLES From WMC00ALNKSUB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_ALNKSUB

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(ALNKSUB,ASTATUS)
Variable Instance ALNKSUB Using C_ALNKSUB
Variable Integer ASTATUS

If ALNKSUB = null : End : Endif

Gosub AVARIABLES From WMC00ALNKSUB
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_ALNKSUB
Else
 Gosub ADELETE_ALNKSUB
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If ALNKSUB.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ALNKSUB.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_ALNKSUB
Gosub ADELETE_ALNKSUB
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_ALNKSUB
[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("ADELETE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If ALNKSUB.snapshotEnabled=1
 [L]A_RETIK = ALNKSUB.revertUpdTick
Endif
[L]ASTATUS = max(fmet ALNKSUB.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



