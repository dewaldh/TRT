#<AdxTL>@(#)0.0.0.0 $Revision$Class Company
# Supervisor
## CRUD-CLASSE ## COMPANY
# 2018-08-27 12:29:58 255


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(COMPANY,ASTATUS)
Variable Instance COMPANY Using C_COMPANY
Variable Integer ASTATUS

If COMPANY = null : End : Endif

Gosub _AVARIABLES From WMC00COMPANY

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_COMPANY

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(COMPANY,ASTATUS)
Variable Instance COMPANY Using C_COMPANY
Variable Integer ASTATUS

If COMPANY = null : End : Endif

Gosub AVARIABLES From WMC00COMPANY
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_COMPANY
Else
 Gosub ADELETE_COMPANY
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(COMPANY,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If COMPANY.ASTALIN = [V]CST_ANEWDEL : Return : Endif
COMPANY.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(COMPANY.BPA) : # BPADDRESS -- 2
 If COMPANY.BPA(A_N2) <> null
& and COMPANY.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If COMPANY.BPA(A_N2).ASTALIN<>[V]CST_ANEW
   COMPANY.BPA(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   For [L]A_I=1 To maxtab(COMPANY.BPA(A_N2).COLTEL)
    If COMPANY.BPA(A_N2).COLTEL([L]A_I)<>null
     [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2).COLTEL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   For [L]A_I=1 To maxtab(COMPANY.BPA(A_N2).COLWEB)
    If COMPANY.BPA(A_N2).COLWEB([L]A_I)<>null
     [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2).COLWEB([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(COMPANY.BID) : # BID -- 3
 If COMPANY.BID(A_N2) <> null
& and COMPANY.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If COMPANY.BID(A_N2).ASTALIN<>[V]CST_ANEW
   COMPANY.BID(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BID(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(COMPANY.BPA) : # BPADDRESS -- 2
 If COMPANY.BPA(A_N2) <> null
& and COMPANY.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(COMPANY.BPA(A_N2).COLTEL)
   If COMPANY.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2).COLTEL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(COMPANY.BPA(A_N2).COLWEB)
   If COMPANY.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2).COLWEB([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(COMPANY.BID) : # BID -- 3
 If COMPANY.BID(A_N2) <> null
& and COMPANY.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BID(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_COMPANY
Trbegin [F:CPY]
 Gosub ADELETE_COMPANY
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_COMPANY
[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(COMPANY.BPA)
 If COMPANY.BPA(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BPA(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(COMPANY.BID)
 If COMPANY.BID(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet COMPANY.BID(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(COMPANY,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( COMPANY.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( COMPANY.ASTALIN,[V]CST_AUPD) & 
& fmet COMPANY.AGETATTRIBUTE("LOGO","$isLoaded")="true")
[L]ASTATUS = func WMC00COMPANY._MAJSQL_COMPANY_LOGO(COMPANY,COMPANY.LOGO)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00COMPANY._MAJSQL_COMPANY(COMPANY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If COMPANY.snapshotEnabled=1
 [L]A_RETIK = COMPANY.revertUpdTick
Endif
[L]ASTATUS = max(fmet COMPANY.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



