#<AdxTL>@(#)0.0.0.0 $Revision$Class Report parameters
# Supervisor
## ACLA-CLASSE ## AREPORTD
# 2018-08-27 12:22:24 665


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : RPTCOD Report code ( Field ARP 15)
####################################################################

$SET_RPTCOD
If [L]_AOLDVAL<>this.RPTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RPTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RPTCOD
 Gosub PROPAGATE_RPTCOD
Endif
Return

$INIT_RPTCOD
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "RPTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RPTCOD
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "RPTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RPTCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RPTCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RPTCOD
[L]CURPRO = "RPTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.RPTCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RPTCOD
[L]CURPRO = "RPTCOD"
If vireblc(this.RPTCOD,2)<>vireblc(format$("K:15c",this.RPTCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_RPTCOD
[L]CURPRO = "RPTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RPTCOD
[L]CURPRO = "RPTCOD"
Return

$PROPAGATE_RPTCOD
this.isReadonly = 0
[L]CURPRO = "RPTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RPTCOD
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "RPTCOD"
$_LNKPRO_RPTCOD
Return

$_ALOADATTRIBUTE_RPTCOD
[L]ASTATUS = fmet this.ASETATTRIBUTE("RPTCOD","$isMandatory","true")
Return


####################################################################
# 2 : PARNUM Parameter no. ( Field C 3)
####################################################################

$SET_PARNUM
If [L]_AOLDVAL<>this.PARNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARNUM
 Gosub PROPAGATE_PARNUM
Endif
Return

$INIT_PARNUM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARNUM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARNUM
[L]CURPRO = "PARNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARNUM
[L]CURPRO = "PARNUM"
Return

$_AOTHERS_PARNUM
[L]CURPRO = "PARNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARNUM
[L]CURPRO = "PARNUM"
Return

$PROPAGATE_PARNUM
this.isReadonly = 0
[L]CURPRO = "PARNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARNUM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNUM"
$_LNKPRO_PARNUM
Return


####################################################################
# 3 : PARCOD Description ( Field A 15)
####################################################################

$SET_PARCOD
If [L]_AOLDVAL<>this.PARCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARCOD
 Gosub PROPAGATE_PARCOD
Endif
Return

$INIT_PARCOD
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARCOD
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARCOD
[L]CURPRO = "PARCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARCOD
[L]CURPRO = "PARCOD"
Return

$_AOTHERS_PARCOD
[L]CURPRO = "PARCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARCOD
[L]CURPRO = "PARCOD"
Return

$PROPAGATE_PARCOD
this.isReadonly = 0
[L]CURPRO = "PARCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARCOD
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCOD"
$_LNKPRO_PARCOD
Return


####################################################################
# 4 : PARNAM Parameter title ( Field ATX)
####################################################################

$GET_PARNAM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNAM"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_PARNAM
If [L]_AOLDVAL<>this.PARNAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARNAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARNAM
 Gosub PROPAGATE_PARNAM
Endif
Return

$INIT_PARNAM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARNAM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARNAM
[L]CURPRO = "PARNAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARNAM
[L]CURPRO = "PARNAM"
Return

$_AOTHERS_PARNAM
[L]CURPRO = "PARNAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARNAM
[L]CURPRO = "PARNAM"
Return

$PROPAGATE_PARNAM
this.isReadonly = 0
[L]CURPRO = "PARNAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARNAM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNAM"
$_LNKPRO_PARNAM
Return


####################################################################
# 5 : PARTYP Data type ( Field ATY 8)
####################################################################

$SET_PARTYP
If [L]_AOLDVAL<>this.PARTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARTYP
 Gosub PROPAGATE_PARTYP
Endif
Return

$INIT_PARTYP
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARTYP
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARTYP
[L]CURPRO = "PARTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARTYP
[L]CURPRO = "PARTYP"
If vireblc(this.PARTYP,2)<>vireblc(format$("K:8B",this.PARTYP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PARTYP
[L]CURPRO = "PARTYP"
If vireblc(this.PARTYP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPATY.ACTRLREF(this,"PARTYP",this.PARTYP,this.PARTYP,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PARTYP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARTYP
[L]CURPRO = "PARTYP"
Return

$PROPAGATE_PARTYP
this.isReadonly = 0
[L]CURPRO = "PARTYP"
Gosub _LNKPRO_PARTYP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARTYP
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARTYP"
$_LNKPRO_PARTYP
If vireblc(this.PARTYP,2)<>""
 # Link ATYPE
 Local File ATYPE [WATY]
 Read [F:WATY]CODTYP = this.PARTYP
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WATY]INTITTYP & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("PARTYP","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WATY]
Endif
Return


####################################################################
# 6 : PARLNG Length ( Field DCB 9)
####################################################################

$SET_PARLNG
If [L]_AOLDVAL<>this.PARLNG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARLNG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARLNG
 Gosub PROPAGATE_PARLNG
Endif
Return

$INIT_PARLNG
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARLNG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARLNG
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARLNG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARLNG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARLNG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARLNG
[L]CURPRO = "PARLNG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARLNG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARLNG
[L]CURPRO = "PARLNG"
Return

$_AOTHERS_PARLNG
[L]CURPRO = "PARLNG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARLNG
[L]CURPRO = "PARLNG"
Return

$PROPAGATE_PARLNG
this.isReadonly = 0
[L]CURPRO = "PARLNG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARLNG
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARLNG"
$_LNKPRO_PARLNG
Return


####################################################################
# 7 : PARNOLIB Local menu ( Field C 4)
####################################################################

$SET_PARNOLIB
If [L]_AOLDVAL<>this.PARNOLIB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARNOLIB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARNOLIB
 Gosub PROPAGATE_PARNOLIB
Endif
Return

$INIT_PARNOLIB
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNOLIB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARNOLIB
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNOLIB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARNOLIB              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARNOLIB              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARNOLIB
[L]CURPRO = "PARNOLIB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARNOLIB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARNOLIB
[L]CURPRO = "PARNOLIB"
Return

$_AOTHERS_PARNOLIB
[L]CURPRO = "PARNOLIB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARNOLIB
[L]CURPRO = "PARNOLIB"
Return

$PROPAGATE_PARNOLIB
this.isReadonly = 0
[L]CURPRO = "PARNOLIB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARNOLIB
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARNOLIB"
$_LNKPRO_PARNOLIB
Return


####################################################################
# 8 : PARSTREND Value type ( Field Local menu number 7800)
####################################################################

$SET_PARSTREND
If [L]_AOLDVAL<>this.PARSTREND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARSTREND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARSTREND
 Gosub PROPAGATE_PARSTREND
Endif
Return

$INIT_PARSTREND
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARSTREND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PARSTREND=0 and fmet this.AGETATTRIBUTE("PARSTREND","$isMandatory")="true"
 this.PARSTREND = 1
Endif
Return
 
$CONTROL_PARSTREND
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARSTREND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARSTREND             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARSTREND             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARSTREND
[L]CURPRO = "PARSTREND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARSTREND=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARSTREND
[L]CURPRO = "PARSTREND"
If this.PARSTREND<0 or this.PARSTREND>len(mess(0,7800,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"7800 ->"-num$(this.PARSTREND)-mess(99,123,1)):  Return : # Local menu "7800 -> Invalid option
Endif
Return

$_AOTHERS_PARSTREND
[L]CURPRO = "PARSTREND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARSTREND
[L]CURPRO = "PARSTREND"
Return

$PROPAGATE_PARSTREND
this.isReadonly = 0
[L]CURPRO = "PARSTREND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARSTREND
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARSTREND"
$_LNKPRO_PARSTREND
Return


####################################################################
# 9 : PARDEF1 Default value ( Field AFR 80)
####################################################################

$SET_PARDEF1
If [L]_AOLDVAL<>this.PARDEF1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARDEF1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARDEF1
 Gosub PROPAGATE_PARDEF1
Endif
Return

$INIT_PARDEF1
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARDEF1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARDEF1
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARDEF1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARDEF1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARDEF1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARDEF1
[L]CURPRO = "PARDEF1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARDEF1,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARDEF1
[L]CURPRO = "PARDEF1"
Return

$_AOTHERS_PARDEF1
[L]CURPRO = "PARDEF1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARDEF1
[L]CURPRO = "PARDEF1"
Return

$PROPAGATE_PARDEF1
this.isReadonly = 0
[L]CURPRO = "PARDEF1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARDEF1
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARDEF1"
$_LNKPRO_PARDEF1
Return


####################################################################
# 10 : PARDEF2 Default value ( Field AFR 80)
####################################################################

$SET_PARDEF2
If [L]_AOLDVAL<>this.PARDEF2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARDEF2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARDEF2
 Gosub PROPAGATE_PARDEF2
Endif
Return

$INIT_PARDEF2
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARDEF2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARDEF2
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARDEF2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARDEF2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARDEF2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARDEF2
[L]CURPRO = "PARDEF2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARDEF2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARDEF2
[L]CURPRO = "PARDEF2"
Return

$_AOTHERS_PARDEF2
[L]CURPRO = "PARDEF2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARDEF2
[L]CURPRO = "PARDEF2"
Return

$PROPAGATE_PARDEF2
this.isReadonly = 0
[L]CURPRO = "PARDEF2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARDEF2
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARDEF2"
$_LNKPRO_PARDEF2
Return


####################################################################
# 11 : PARCTL Control ( Field AFR 80)
####################################################################

$SET_PARCTL
If [L]_AOLDVAL<>this.PARCTL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARCTL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARCTL
 Gosub PROPAGATE_PARCTL
Endif
Return

$INIT_PARCTL
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCTL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARCTL
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCTL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARCTL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARCTL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARCTL
[L]CURPRO = "PARCTL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARCTL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARCTL
[L]CURPRO = "PARCTL"
Return

$_AOTHERS_PARCTL
[L]CURPRO = "PARCTL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARCTL
[L]CURPRO = "PARCTL"
Return

$PROPAGATE_PARCTL
this.isReadonly = 0
[L]CURPRO = "PARCTL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARCTL
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCTL"
$_LNKPRO_PARCTL
Return


####################################################################
# 12 : PARCTLTAB Control table ( Field ACL 10)
####################################################################

$SET_PARCTLTAB
If [L]_AOLDVAL<>this.PARCTLTAB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARCTLTAB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARCTLTAB
 Gosub PROPAGATE_PARCTLTAB
Endif
Return

$INIT_PARCTLTAB
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCTLTAB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARCTLTAB
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCTLTAB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARCTLTAB             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARCTLTAB             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARCTLTAB
[L]CURPRO = "PARCTLTAB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARCTLTAB,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARCTLTAB
[L]CURPRO = "PARCTLTAB"
If vireblc(this.PARCTLTAB,2)<>vireblc(format$("KTD:10B",this.PARCTLTAB),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PARCTLTAB
[L]CURPRO = "PARCTLTAB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARCTLTAB
[L]CURPRO = "PARCTLTAB"
Return

$PROPAGATE_PARCTLTAB
this.isReadonly = 0
[L]CURPRO = "PARCTLTAB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARCTLTAB
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARCTLTAB"
$_LNKPRO_PARCTLTAB
Return


####################################################################
# 13 : PARSAI Input ( Field Local menu number 1)
####################################################################

$SET_PARSAI
If [L]_AOLDVAL<>this.PARSAI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARSAI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARSAI
 Gosub PROPAGATE_PARSAI
Endif
Return

$INIT_PARSAI
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARSAI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PARSAI=0 and fmet this.AGETATTRIBUTE("PARSAI","$isMandatory")="true"
 this.PARSAI = 1
Endif
Return
 
$CONTROL_PARSAI
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARSAI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARSAI                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARSAI                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARSAI
[L]CURPRO = "PARSAI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARSAI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARSAI
[L]CURPRO = "PARSAI"
If this.PARSAI<0 or this.PARSAI>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.PARSAI)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_PARSAI
[L]CURPRO = "PARSAI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARSAI
[L]CURPRO = "PARSAI"
Return

$PROPAGATE_PARSAI
this.isReadonly = 0
[L]CURPRO = "PARSAI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARSAI
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARSAI"
$_LNKPRO_PARSAI
Return


####################################################################
# 14 : PARPAR Parameter ( Field AFR 80)
####################################################################

$SET_PARPAR
If [L]_AOLDVAL<>this.PARPAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARPAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARPAR
 Gosub PROPAGATE_PARPAR
Endif
Return

$INIT_PARPAR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARPAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARPAR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARPAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARPAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARPAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARPAR
[L]CURPRO = "PARPAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARPAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARPAR
[L]CURPRO = "PARPAR"
Return

$_AOTHERS_PARPAR
[L]CURPRO = "PARPAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARPAR
[L]CURPRO = "PARPAR"
Return

$PROPAGATE_PARPAR
this.isReadonly = 0
[L]CURPRO = "PARPAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARPAR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARPAR"
$_LNKPRO_PARPAR
Return


####################################################################
# 15 : PARACS Access code ( Field ACS 10)
####################################################################

$SET_PARACS
If [L]_AOLDVAL<>this.PARACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARACS
 Gosub PROPAGATE_PARACS
Endif
Return

$INIT_PARACS
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARACS
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARACS
[L]CURPRO = "PARACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARACS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARACS
[L]CURPRO = "PARACS"
If vireblc(this.PARACS,2)<>vireblc(format$("KTD:10B",this.PARACS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PARACS
[L]CURPRO = "PARACS"
If vireblc(this.PARACS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACS.ACTRLREF(this,"PARACS",this.PARACS,this.PARACS,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PARACS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARACS
[L]CURPRO = "PARACS"
Return

$PROPAGATE_PARACS
this.isReadonly = 0
[L]CURPRO = "PARACS"
Gosub _LNKPRO_PARACS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARACS
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PARACS"
$_LNKPRO_PARACS
If vireblc(this.PARACS,2)<>""
 # Link ACCCOD
 Local File ACCCOD [WACS]
 Read [F:WACS]ACS0 = this.PARACS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ACCCOD" & ZONE="DESACC" & IDENT1=[F:WACS]CODACC & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PARACS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WACS]
Endif
Return


####################################################################
# 16 : PAROPT Options ( Field A 20)
####################################################################

$SET_PAROPT
If [L]_AOLDVAL<>this.PAROPT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PAROPT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PAROPT
 Gosub PROPAGATE_PAROPT
Endif
Return

$INIT_PAROPT
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PAROPT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PAROPT
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PAROPT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PAROPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PAROPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PAROPT
[L]CURPRO = "PAROPT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PAROPT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PAROPT
[L]CURPRO = "PAROPT"
Return

$_AOTHERS_PAROPT
[L]CURPRO = "PAROPT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PAROPT
[L]CURPRO = "PAROPT"
Return

$PROPAGATE_PAROPT
this.isReadonly = 0
[L]CURPRO = "PAROPT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PAROPT
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "PAROPT"
$_LNKPRO_PAROPT
Return


####################################################################
# 17 : CREDDATIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDDATIM
If [L]_AOLDVAL<>this.CREDDATIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDDATIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDDATIM
 Gosub PROPAGATE_CREDDATIM
Endif
Return

$INIT_CREDDATIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREDDATIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDDATIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREDDATIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDDATIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDDATIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDDATIM
[L]CURPRO = "CREDDATIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDDATIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDDATIM
[L]CURPRO = "CREDDATIM"
Return

$_AOTHERS_CREDDATIM
[L]CURPRO = "CREDDATIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDDATIM
[L]CURPRO = "CREDDATIM"
Return

$PROPAGATE_CREDDATIM
this.isReadonly = 0
[L]CURPRO = "CREDDATIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDDATIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREDDATIM"
$_LNKPRO_CREDDATIM
Return


####################################################################
# 18 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 19 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 20 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 21 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 22 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0AREPORTD
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return




