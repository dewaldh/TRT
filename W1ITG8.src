#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ITG8 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:03:50"
A_USER  = "ADMIN"
A_STAMP = "20180828000350"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBENT"
  If [M]NBENT=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ITG8 [ITG8]
Gosub HORODAT
Local Inpbox "ITG8" From GFONCTION At A_STAMP With A_WINDPREV Mask [ITG8] As [SIM_]
Grizo [ITG8]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ITG8]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=81 : Y1(0)=1 : Y2(0)=24
Return

$ON_NBENT
Onevent BEFORE_LINE Call AVANT_NBENT From W1ITG8
Onevent AFTER_LINE Call APRES_NBENT From W1ITG8
Return

Subprog AVANT_NBENT
Local Decimal BASPAG
## Action STD
Call AVANT_NBENT From SUBITG
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBENT
Local Decimal BASPAG
## Action STD
Call APRES_NBENT From SUBITG
If mkstat : End : Endif
Gosub _AFF
End

$ON_TRSTYPE
Onevent BEFORE_INPUT Call AS_TRSTYPE(zc) From W1ITG8
Onevent AFTER_CHANGE Gosub AMM_TRSTYPE From W1ITG8
Onevent INIT_AREA Call D_TRSTYPE(zc) From W1ITG8
Onevent CONTROL Call C_TRSTYPE(zc) From W1ITG8
Return

Subprog D_TRSTYPE(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYPE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYPE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(704) From COMBOS
## Action STD
Call AS_TRSTYPE(VALEUR) From SUBITG
If mkstat=2
 [M]TRSTYPE(INDIC) = VALEUR
 Affzo TRSTYPE(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,704,1))))
Endif
If !mkstat
 Discombo 0 From TRSTYPE(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From TRSTYPE(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_TRSTYPE(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_TRSTYPE
Call AM_TRSTYPE(zc)
If !mkstat & GOBJET
 zoncou = "TRSTYPE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TRSTYPE(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TRSTYPE(VALEUR) From SUBITG
If mkstat : GERR = 1 : GZONE = "TRSTYPE" : GZNUM = 18948 : Endif
Gosub _AFF
End

$ON_TRSCODE
Onevent INIT_AREA Call D_TRSCODE(zc) From W1ITG8
Onevent CONTROL Call C_TRSCODE(zc) From W1ITG8
Onevent BEFORE_INPUT Call AS_TRSCODE(zc) From W1ITG8
Return

Subprog D_TRSCODE(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSCODE,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"14","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_TRSCODE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_TRSCODE(zc) From W1ITG8
Onkey 144 Titled GBOUTP Call P_TRSCODE(zc) From W1ITG8
Onkey 146 Titled GBOUTA Call SA_TRSCODE(zc) From W1ITG8
Gosub _AFF
End

Subprog C_TRSCODE(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"14","") From SUBADI
If mkstat : GERR = 1 : GZONE = "TRSCODE" : GZNUM = 18946 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"14",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "TRSCODE" : GZNUM = 18946 : Endif
 If !mkstat
  ## Action STD
  Call C_TRSCODE(VALEUR) From SUBITG
  If mkstat : GERR = 1 : GZONE = "TRSCODE" : GZNUM = 18946 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_TRSCODE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "14"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_TRSCODE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "14"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TRSCODE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "14"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_LOCNUME
Onevent BEFORE_INPUT Call AS_LOCNUME(zc) From W1ITG8
Onevent CONTROL Call C_LOCNUME(zc) From W1ITG8
Onevent INIT_AREA Call D_LOCNUME(zc) From W1ITG8
Return

Subprog D_LOCNUME(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCNUME,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCNUME(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2713) From COMBOS
## Action STD
Call AS_LOCNUME(VALEUR) From SUBITG
If mkstat=2
 [M]LOCNUME(INDIC) = VALEUR
 Affzo LOCNUME(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2713,1))))
Endif
If !mkstat
 Discombo 0 From LOCNUME(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LOCNUME(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LOCNUME(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_LOCNUME(VALEUR) From SUBITG
If mkstat : GERR = 1 : GZONE = "LOCNUME" : GZNUM = 3623 : Endif
Gosub _AFF
End

$ON_AUZSTAE
Onevent BEFORE_INPUT Call AS_AUZSTAE(zc) From W1ITG8
Onevent AFTER_CHANGE Gosub AMM_AUZSTAE From W1ITG8
Onevent INIT_AREA Call D_AUZSTAE(zc) From W1ITG8
Onevent CONTROL Call C_AUZSTAE(zc) From W1ITG8
Return

Subprog D_AUZSTAE(VALEUR)
Variable Integer VALEUR
If varinit([M]AUZSTAE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AUZSTAE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2701) From COMBOS
## Action STD
Call AS_AUZSTAE(VALEUR) From SUBITG
If mkstat=2
 [M]AUZSTAE(INDIC) = VALEUR
 Affzo AUZSTAE(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2701,1))))
Endif
If !mkstat
 Discombo 0 From AUZSTAE(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From AUZSTAE(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_AUZSTAE(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_AUZSTAE
Call AM_AUZSTAE(zc)
If !mkstat & GOBJET
 zoncou = "AUZSTAE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_AUZSTAE(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_AUZSTAE(VALEUR) From SUBITG
If mkstat : GERR = 1 : GZONE = "AUZSTAE" : GZNUM = 6278 : Endif
Gosub _AFF
End

$ON_AUZSSTE
Onevent CONTROL Call C_AUZSSTE(zc) From W1ITG8
Onevent BEFORE_INPUT Call AS_AUZSSTE(zc) From W1ITG8
Return

Subprog AS_AUZSSTE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6278,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_AUZSSTE(zc) From W1ITG8
Gosub _AFF
End

Subprog C_AUZSSTE(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_AUZSSTE(VALEUR) From SUBITG
If mkstat : GERR = 1 : GZONE = "AUZSSTE" : GZNUM = 18950 : Endif
Gosub _AFF
End

Subprog B1_AUZSSTE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIITGSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIITGSTA"
 PARMSK(1) = num$(nolign)
 PARMSK(2) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"FITGSTA","TRTCATEG","XWFITGSTA") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_DEFSTA
Onevent BEFORE_INPUT Call AS_DEFSTA(zc) From W1ITG8
Onevent CONTROL Call C_DEFSTA(zc) From W1ITG8
Return

Subprog AS_DEFSTA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
If !GWEBSERV
 ## Action STD
 Call AS_DEFSTA(VALEUR) From SUBITG
 If mkstat=2
  [M]DEFSTA(INDIC) = VALEUR
  Affzo DEFSTA(INDIC) : mkstat = 2
 Endif
Endif
Onkey   2 Titled GBOUTS Call S_DEFSTA(zc) From W1ITG8
Onkey 144 Titled GBOUTP Call P_DEFSTA(zc) From W1ITG8
Onkey 146 Titled GBOUTA Call SA_DEFSTA(zc) From W1ITG8
Gosub _AFF
End

Subprog C_DEFSTA(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TST","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "DEFSTA" : GZNUM = 18952 : Endif
If !mkstat
 ## Action STD
 Call C_DEFSTA(VALEUR) From SUBITG
 If mkstat : GERR = 1 : GZONE = "DEFSTA" : GZNUM = 18952 : Endif
Endif
Gosub _AFF
End

Subprog S_DEFSTA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = [M:ITG8]AUZSSTE(nolign-1)
 PARMSK(2) = num$(val(string$([M]GTYP<>8,num$([M:ITG2]QUAFLG))+string$([M]GTYP=8,'1')))
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_DEFSTA(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TST"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_DEFSTA(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TST",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_GTYP
Onevent INIT_AREA Call D_GTYP(zc) From W1ITG8
Return

Subprog D_GTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]GTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QLYCTLFLG
Onevent BEFORE_INPUT Call AS_QLYCTLFLG(zc) From W1ITG8
Onevent INIT_AREA Call D_QLYCTLFLG(zc) From W1ITG8
Return

Subprog D_QLYCTLFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]QLYCTLFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QLYCTLFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_QLYCTLFLG(VALEUR) From SUBITG
If mkstat=2
 [M]QLYCTLFLG(INDIC) = VALEUR
 Affzo QLYCTLFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACLOT
Onevent BEFORE_INPUT Call AS_DACLOT(zc) From W1ITG8
Onevent INIT_AREA Call D_DACLOT(zc) From W1ITG8
Return

Subprog D_DACLOT(VALEUR)
Variable Integer VALEUR
If varinit([M]DACLOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACLOT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACLOT(VALEUR) From SUBITG
If mkstat=2
 [M]DACLOT(INDIC) = VALEUR
 Affzo DACLOT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTSUPINH
Onevent BEFORE_INPUT Call AS_LOTSUPINH(zc) From W1ITG8
Onevent INIT_AREA Call D_LOTSUPINH(zc) From W1ITG8
Return

Subprog D_LOTSUPINH(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSUPINH,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSUPINH(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LOTSUPINH(VALEUR) From SUBITG
If mkstat=2
 [M]LOTSUPINH(INDIC) = VALEUR
 Affzo LOTSUPINH(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


