#<AdxTL>@(#)0.0.0.0 $Revision$Class Expense
# Supervisor
## ACLA-CLASSE ## EXPENSES_RATEXPENS
# 2018-08-27 12:31:12 200


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : LEDTYP Ledger ( Field Local menu number 2644)
####################################################################

$SET_LEDTYP
If [L]_AOLDVAL<>this.LEDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEDTYP
 Gosub PROPAGATE_LEDTYP
Endif
Return

$INIT_LEDTYP
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "LEDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LEDTYP=0 and fmet this.AGETATTRIBUTE("LEDTYP","$isMandatory")="true"
 this.LEDTYP = 1
Endif
Return
 
$CONTROL_LEDTYP
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "LEDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEDTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEDTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEDTYP
[L]CURPRO = "LEDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LEDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEDTYP
[L]CURPRO = "LEDTYP"
If this.LEDTYP<0 or this.LEDTYP>len(mess(0,2644,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2644 ->"-num$(this.LEDTYP)-mess(99,123,1)):  Return : # Local menu "2644 -> Invalid option
Endif
Return

$_AOTHERS_LEDTYP
[L]CURPRO = "LEDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEDTYP
[L]CURPRO = "LEDTYP"
Return

$PROPAGATE_LEDTYP
this.isReadonly = 0
[L]CURPRO = "LEDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEDTYP
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "LEDTYP"
$_LNKPRO_LEDTYP
Return


####################################################################
# 2 : LIBLED Ledger ( Field A 15)
####################################################################

$SET_LIBLED
If [L]_AOLDVAL<>this.LIBLED
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIBLED
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIBLED
 Gosub PROPAGATE_LIBLED
Endif
Return

$INIT_LIBLED
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "LIBLED"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIBLED
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "LIBLED"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIBLED                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIBLED                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIBLED
[L]CURPRO = "LIBLED"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LIBLED,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIBLED
[L]CURPRO = "LIBLED"
Return

$_AOTHERS_LIBLED
[L]CURPRO = "LIBLED"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIBLED
[L]CURPRO = "LIBLED"
Return

$PROPAGATE_LIBLED
this.isReadonly = 0
[L]CURPRO = "LIBLED"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIBLED
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "LIBLED"
$_LNKPRO_LIBLED
Return


####################################################################
# 3 : RATDIV2 Document rate ( Field RCU 0)
####################################################################

$SET_RATDIV2
If [L]_AOLDVAL<>this.RATDIV2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RATDIV2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RATDIV2
 Gosub PROPAGATE_RATDIV2
Endif
Return

$INIT_RATDIV2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATDIV2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RATDIV2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATDIV2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RATDIV2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RATDIV2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RATDIV2
[L]CURPRO = "RATDIV2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RATDIV2=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RATDIV2
[L]CURPRO = "RATDIV2"
Return

$_AOTHERS_RATDIV2
[L]CURPRO = "RATDIV2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RATDIV2
[L]CURPRO = "RATDIV2"
Return

$PROPAGATE_RATDIV2
this.isReadonly = 0
[L]CURPRO = "RATDIV2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RATDIV2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATDIV2"
$_LNKPRO_RATDIV2
Return


####################################################################
# 4 : RATDIV1 Dividing rate ( Field RCU 0)
####################################################################

$SET_RATDIV1
If [L]_AOLDVAL<>this.RATDIV1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RATDIV1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RATDIV1
 Gosub PROPAGATE_RATDIV1
Endif
Return

$INIT_RATDIV1
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATDIV1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RATDIV1
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATDIV1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RATDIV1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RATDIV1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RATDIV1
[L]CURPRO = "RATDIV1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RATDIV1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RATDIV1
[L]CURPRO = "RATDIV1"
Return

$_AOTHERS_RATDIV1
[L]CURPRO = "RATDIV1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RATDIV1
[L]CURPRO = "RATDIV1"
Return

$PROPAGATE_RATDIV1
this.isReadonly = 0
[L]CURPRO = "RATDIV1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RATDIV1
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATDIV1"
$_LNKPRO_RATDIV1
Return


####################################################################
# 5 : CURTRS Transaction currency ( Field CUR 3)
####################################################################

$SET_CURTRS
If [L]_AOLDVAL<>this.CURTRS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CURTRS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CURTRS
 Gosub PROPAGATE_CURTRS
Endif
Return

$INIT_CURTRS
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "CURTRS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CURTRS
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "CURTRS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CURTRS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CURTRS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CURTRS
[L]CURPRO = "CURTRS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CURTRS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CURTRS
[L]CURPRO = "CURTRS"
If vireblc(this.CURTRS,2)<>vireblc(format$("K:3c",this.CURTRS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CURTRS
[L]CURPRO = "CURTRS"
If vireblc(this.CURTRS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CURTRS",this.CURTRS,this.CURTRS,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CURTRS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CURTRS
[L]CURPRO = "CURTRS"
Return

$PROPAGATE_CURTRS
this.isReadonly = 0
[L]CURPRO = "CURTRS"
Gosub _LNKPRO_CURTRS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CURTRS
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "CURTRS"
$_LNKPRO_CURTRS
If vireblc(this.CURTRS,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CURTRS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CURTRS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CURTRS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CURTRS","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CURTRS","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CURTRS","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 6 : RATMLT2 Ledger rate ( Field RCU 0)
####################################################################

$SET_RATMLT2
If [L]_AOLDVAL<>this.RATMLT2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RATMLT2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RATMLT2
 Gosub PROPAGATE_RATMLT2
Endif
Return

$INIT_RATMLT2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATMLT2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RATMLT2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATMLT2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RATMLT2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RATMLT2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RATMLT2
[L]CURPRO = "RATMLT2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RATMLT2=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RATMLT2
[L]CURPRO = "RATMLT2"
Return

$_AOTHERS_RATMLT2
[L]CURPRO = "RATMLT2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RATMLT2
[L]CURPRO = "RATMLT2"
Return

$PROPAGATE_RATMLT2
this.isReadonly = 0
[L]CURPRO = "RATMLT2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RATMLT2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATMLT2"
$_LNKPRO_RATMLT2
Return


####################################################################
# 7 : RATMLT1 Multiplying rate ( Field RCU 0)
####################################################################

$SET_RATMLT1
If [L]_AOLDVAL<>this.RATMLT1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RATMLT1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RATMLT1
 Gosub PROPAGATE_RATMLT1
Endif
Return

$INIT_RATMLT1
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATMLT1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RATMLT1
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATMLT1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RATMLT1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RATMLT1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RATMLT1
[L]CURPRO = "RATMLT1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RATMLT1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RATMLT1
[L]CURPRO = "RATMLT1"
Return

$_AOTHERS_RATMLT1
[L]CURPRO = "RATMLT1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RATMLT1
[L]CURPRO = "RATMLT1"
Return

$PROPAGATE_RATMLT1
this.isReadonly = 0
[L]CURPRO = "RATMLT1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RATMLT1
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "RATMLT1"
$_LNKPRO_RATMLT1
Return


####################################################################
# 8 : CURLED2 Ledger currency ( Field CUR 3)
####################################################################

$SET_CURLED2
If [L]_AOLDVAL<>this.CURLED2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CURLED2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CURLED2
 Gosub PROPAGATE_CURLED2
Endif
Return

$INIT_CURLED2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "CURLED2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CURLED2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "CURLED2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CURLED2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CURLED2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CURLED2
[L]CURPRO = "CURLED2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CURLED2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CURLED2
[L]CURPRO = "CURLED2"
If vireblc(this.CURLED2,2)<>vireblc(format$("K:3c",this.CURLED2),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CURLED2
[L]CURPRO = "CURLED2"
If vireblc(this.CURLED2,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CURLED2",this.CURLED2,this.CURLED2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CURLED2<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CURLED2
[L]CURPRO = "CURLED2"
Return

$PROPAGATE_CURLED2
this.isReadonly = 0
[L]CURPRO = "CURLED2"
Gosub _LNKPRO_CURLED2
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CURLED2
Gosub DECLARE_VAR From WMC0EXPENSES_RATEXPENS
[L]CURPRO = "CURLED2"
$_LNKPRO_CURLED2
If vireblc(this.CURLED2,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CURLED2
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED2","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED2","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED2","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED2","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED2","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return




