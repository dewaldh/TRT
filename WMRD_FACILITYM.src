#<AdxTL>@(#)0.0.0.0 $Revision$Class Sites
# Supervisor
## CRUD-CLASSE ## FACILITYM
# 2018-08-27 13:14:56 235


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(FACILITYM,ASTATUS)
Variable Instance FACILITYM Using R_FACILITYM
Variable Integer ASTATUS

If FACILITYM = null : End : Endif

Gosub AVARIABLES From WMR00FACILITYM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet FACILITYM.ACTX.AGETAFCRIGHT(FACILITYM,"GESFCY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet FACILITYM.ACTX.AGETAFCRIGHTD(FACILITYM,"GESFCY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_FACILITYM
Else
 Gosub ADELETE_FACILITYM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
FACILITYM.ASTALIN = [V]CST_ADEL
FACILITYM.FCY.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(FACILITYM.FCY,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If FACILITYM.FCY.ASTALIN = [V]CST_ANEWDEL : Return : Endif
FACILITYM.FCY.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITYM.FCY.BPA) : # BPADDRESS -- 2
 If FACILITYM.FCY.BPA(A_N2) <> null
& and FACILITYM.FCY.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If FACILITYM.FCY.BPA(A_N2).ASTALIN<>[V]CST_ANEW
   FACILITYM.FCY.BPA(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLTEL)
    If FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
     [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLWEB)
    If FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
     [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITYM.FCY.BID) : # BID -- 3
 If FACILITYM.FCY.BID(A_N2) <> null
& and FACILITYM.FCY.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If FACILITYM.FCY.BID(A_N2).ASTALIN<>[V]CST_ANEW
   FACILITYM.FCY.BID(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BID(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(FACILITYM.FCY.BPA) : # BPADDRESS -- 2
 If FACILITYM.FCY.BPA(A_N2) <> null
& and FACILITYM.FCY.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLTEL)
   If FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLWEB)
   If FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITYM.FCY.BID) : # BID -- 3
 If FACILITYM.FCY.BID(A_N2) <> null
& and FACILITYM.FCY.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BID(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_FACILITYM
Trbegin [F:FCY]
 Gosub ADELETE_FACILITYM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_FACILITYM
[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If FACILITYM.snapshotEnabled=1
 [L]A_RETIK = FACILITYM.revertUpdTick
Endif
[L]ASTATUS = max(fmet FACILITYM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



