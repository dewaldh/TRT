#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MTKBCRIT4 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "12:53:56"
A_USER  = "ADMIN"
A_STAMP = "20180326125356"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MTKBCRIT4 [MTB4]
Gosub HORODAT
Local Inpbox "MTKBCRIT4" From GFONCTION At A_STAMP With A_WINDPREV Mask [MTB4] As [SIM_]
Grizo [MTB4]5
Grizo [MTB4]10
Grizo [MTB4]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MTB4]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=8 : X2(0)=104 : Y1(0)=9 : Y2(0)=11
X1(1)=8 : X2(1)=104 : Y1(1)=12 : Y2(1)=17
X1(2)=8 : X2(2)=104 : Y1(2)=18 : Y2(2)=19
Return

$ON_MEMO
Return

$ON_FORMULE
Onevent CONTROL Call C_FORMULE(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_FORMULE(zc) From W1MTKBCRIT4
Onevent AFTER_CHANGE Gosub AMM_FORMULE From W1MTKBCRIT4
Return

Subprog AS_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4574,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FORMULE(zc) From W1MTKBCRIT4
Onkey   2 Titled GBOUTS Call S_FORMULE(zc) From W1MTKBCRIT4
Onkey 144 Titled GBOUTP Call P_FORMULE(zc) From W1MTKBCRIT4
Onkey 146 Titled GBOUTA Call SA_FORMULE(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_FORMULE(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TFO","!",VALEUR,"22",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "FORMULE" : GZNUM = 12877 : Endif
Gosub _AFF
End

$AMM_FORMULE
Call AM_FORMULE(zc)
If !mkstat & GOBJET
 zoncou = "FORMULE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FORMULE(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZFORMULE)")>indice
 [M]FORMULE(indice) = VALEUR
 Affzo ZFORMULE(indice)
Endif
Gosub _AFF
End

Subprog S_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TFO"
PARMSK(2) = "!"
PARMSK(3) = "22"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FORMULE(VALEUR)
Variable Char    VALEUR()
Call OBJET("TFO",VALEUR,"22") From GOBJET
Gosub _AFF
End

Subprog SA_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TFO"
PARMSK(2) = "22"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "22"
Call VISU("TFO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFORMULE
Onevent BEFORE_AREA Gosub AV_ZFORMULE From W1MTKBCRIT4
Return

$AV_ZFORMULE
Call LECTEXTRA(zc,"TABFOR","DES","22",num$([M]FORMULE(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_WMFGNUMD
Onevent CONTROL Call C_WMFGNUMD(zc) From W1MTKBCRIT4
Onevent AFTER_CHANGE Gosub AMM_WMFGNUMD From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WMFGNUMD(zc) From W1MTKBCRIT4
Return

Subprog AS_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WMFGNUMD(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Endif
Gosub _AFF
End

$AMM_WMFGNUMD
Call AM_WMFGNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WMFGNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WMFGNUMD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Gosub _AFF
End

Subprog S_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "4"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUMF
Onevent CONTROL Call C_WMFGNUMF(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WMFGNUMF(zc) From W1MTKBCRIT4
Return

Subprog AS_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WMFGNUMF(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_WMFGNUMF(VALEUR) From FUNBENPLT
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "4"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ENDDATSTR
Onevent AFTER_CHANGE Gosub AMM_ENDDATSTR From W1MTKBCRIT4
Onevent BEFORE_AREA Gosub AV_ENDDATSTR From W1MTKBCRIT4
Return

$AV_ENDDATSTR
Chgfmt [M]ENDDATSTR(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$AMM_ENDDATSTR
Call AM_ENDDATSTR(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATSTR(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_ENDDATSTR(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 1806 : Endif
Gosub _AFF
End

$ON_ENDDATEND
Onevent CONTROL Call C_ENDDATEND(zc) From W1MTKBCRIT4
Onevent BEFORE_AREA Gosub AV_ENDDATEND From W1MTKBCRIT4
Return

$AV_ENDDATEND
Chgfmt [M]ENDDATEND(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDATEND(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WROUNUMD
Onevent CONTROL Call C_WROUNUMD(zc) From W1MTKBCRIT4
Onevent AFTER_CHANGE Gosub AMM_WROUNUMD From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WROUNUMD(zc) From W1MTKBCRIT4
Return

Subprog IB_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WROUNUMD(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_WROUNUMD(zc) From W1MTKBCRIT4
Onkey 170 Titled GBOUT13 Call B13_WROUNUMD(zc) From W1MTKBCRIT4
Onkey   2 Titled GBOUTS Call S_WROUNUMD(zc) From W1MTKBCRIT4
Onkey 144 Titled GBOUTP Call P_WROUNUMD(zc) From W1MTKBCRIT4
Onkey 146 Titled GBOUTA Call SA_WROUNUMD(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WROUNUMD
Call AM_WROUNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WROUNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WROUNUMD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWROUNUMD)")>indice
 [M]WROUNUMD(indice) = VALEUR
 Affzo ZWROUNUMD(indice)
Endif
Gosub _AFF
End

Subprog S_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUNUMD
Onevent BEFORE_AREA Gosub AV_ZWROUNUMD From W1MTKBCRIT4
Return

$AV_ZWROUNUMD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WROUNUMD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUNUMF
Onevent CONTROL Call C_WROUNUMF(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WROUNUMF(zc) From W1MTKBCRIT4
Onevent AFTER_CHANGE Gosub AMM_WROUNUMF From W1MTKBCRIT4
Return

Subprog IB_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WROUNUMF(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_WROUNUMF(zc) From W1MTKBCRIT4
Onkey   2 Titled GBOUTS Call S_WROUNUMF(zc) From W1MTKBCRIT4
Onkey 144 Titled GBOUTP Call P_WROUNUMF(zc) From W1MTKBCRIT4
Onkey 146 Titled GBOUTA Call SA_WROUNUMF(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WROUNUMF(VALEUR) From FUNBENPLT
   If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WROUNUMF
Call AM_WROUNUMF(zc)
If !mkstat & GOBJET
 zoncou = "WROUNUMF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWROUNUMF)")>indice
 [M]WROUNUMF(indice) = VALEUR
 Affzo ZWROUNUMF(indice)
Endif
Gosub _AFF
End

Subprog S_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUNUMF
Onevent BEFORE_AREA Gosub AV_ZWROUNUMF From W1MTKBCRIT4
Return

$AV_ZWROUNUMF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WROUNUMF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUALTD
Onevent AFTER_CHANGE Gosub AMM_WROUALTD From W1MTKBCRIT4
Onevent CONTROL Call C_WROUALTD(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WROUALTD(zc) From W1MTKBCRIT4
Return

Subprog AS_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6276,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_WROUALTD(zc) From W1MTKBCRIT4
Onkey   2 Titled GBOUTS Call S_WROUALTD(zc) From W1MTKBCRIT4
Onkey 144 Titled GBOUTP Call P_WROUALTD(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_WROUALTD(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TRO","!A",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WROUALTD" : GZNUM = 3964 : Endif
Gosub _AFF
End

$AMM_WROUALTD
Call AM_WROUALTD(zc)
If !mkstat & GOBJET
 zoncou = "WROUALTD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUALTD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WROUALTD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WROUALTD" : GZNUM = 3964 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWROUALTD)")>indice
 [M]WROUALTD(indice) = VALEUR
 Affzo ZWROUALTD(indice)
Endif
Gosub _AFF
End

Subprog S_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRO"
PARMSK(2) = "!A"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TRO",VALCHAR,"") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUALTD
Onevent BEFORE_AREA Gosub AV_ZWROUALTD From W1MTKBCRIT4
Return

$AV_ZWROUALTD
Call LECTEXTRA(zc,"TABROUALT","TRODESAXX",num$([M]WROUALTD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUALTF
Onevent CONTROL Call C_WROUALTF(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WROUALTF(zc) From W1MTKBCRIT4
Onevent AFTER_CHANGE Gosub AMM_WROUALTF From W1MTKBCRIT4
Return

Subprog AS_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6276,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_WROUALTF(zc) From W1MTKBCRIT4
Onkey   2 Titled GBOUTS Call S_WROUALTF(zc) From W1MTKBCRIT4
Onkey 144 Titled GBOUTP Call P_WROUALTF(zc) From W1MTKBCRIT4
Gosub _AFF
End

Subprog C_WROUALTF(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TRO","!A",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WROUALTF" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_WROUALTF(VALEUR) From FUNBENPLT
 If mkstat : GERR = 1 : GZONE = "WROUALTF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_WROUALTF
Call AM_WROUALTF(zc)
If !mkstat & GOBJET
 zoncou = "WROUALTF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUALTF(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZWROUALTF)")>indice
 [M]WROUALTF(indice) = VALEUR
 Affzo ZWROUALTF(indice)
Endif
Gosub _AFF
End

Subprog S_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRO"
PARMSK(2) = "!A"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TRO",VALCHAR,"") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUALTF
Onevent BEFORE_AREA Gosub AV_ZWROUALTF From W1MTKBCRIT4
Return

$AV_ZWROUALTF
Call LECTEXTRA(zc,"TABROUALT","TRODESAXX",num$([M]WROUALTF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WMFGPIOD
Onevent AFTER_CHANGE Gosub AMM_WMFGPIOD From W1MTKBCRIT4
Onevent INIT_AREA Call D_WMFGPIOD(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WMFGPIOD(zc) From W1MTKBCRIT4
Return

Subprog D_WMFGPIOD(VALEUR)
Variable Integer VALEUR
If varinit([M]WMFGPIOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WMFGPIOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_WMFGPIOD
Call AM_WMFGPIOD(zc)
If !mkstat & GOBJET
 zoncou = "WMFGPIOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WMFGPIOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_WMFGPIOD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WMFGPIOD" : GZNUM = 1164 : Endif
Gosub _AFF
End

$ON_WMFGPIOF
Onevent CONTROL Call C_WMFGPIOF(zc) From W1MTKBCRIT4
Onevent INIT_AREA Call D_WMFGPIOF(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_WMFGPIOF(zc) From W1MTKBCRIT4
Return

Subprog D_WMFGPIOF(VALEUR)
Variable Integer VALEUR
If varinit([M]WMFGPIOF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WMFGPIOF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_WMFGPIOF(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_WMFGPIOF(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WMFGPIOF" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_CRIT1
Onevent INIT_AREA Call D_CRIT1(zc) From W1MTKBCRIT4
Onevent BEFORE_INPUT Call AS_CRIT1(zc) From W1MTKBCRIT4
Return

Subprog D_CRIT1(VALEUR)
Variable Integer VALEUR
If varinit([M]CRIT1,indice)=0
 VALEUR = [M:MBP]CRIT1
Endif
Gosub _AFF
End

Subprog AS_CRIT1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


