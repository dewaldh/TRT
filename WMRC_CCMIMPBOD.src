#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-BOM lines
# Supervisor
## CRUD-CLASSE ## CCMIMPBOD
# 2018-08-27 13:11:17 239


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(CCMIMPBOD,ASTATUS)
Variable Instance CCMIMPBOD Using R_CCMIMPBOD
Variable Integer ASTATUS

If CCMIMPBOD = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPBOD
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet CCMIMPBOD.ACTX.AGETAFCRIGHT(CCMIMPBOD,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet CCMIMPBOD.ACTX.AGETAFCRIGHTC(CCMIMPBOD,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_CCMIMPBOD
Else
 Gosub AINSERT_CCMIMPBOD
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = CCMIMPBOD.freeSnapshot
CCMIMPBOD.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
CCMIMPBOD.ASTALIN = [V]CST_ANEW
CCMIMPBOD.CCMIBOD.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPBOD._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPBOD._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPBOD._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If CCMIMPBOD.CCMIBOD.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPBOD.CCMIBOD.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.CCMIBOD.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.CCMIBOD.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_CCMIMPBOD
Trbegin [F:CCMIBOD]
 Gosub AINSERT_CCMIMPBOD
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(CCMIMPBOD.CCMIBOD.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMIMPBOD.CCMIBOD.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_CCMIMPBOD
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.CCMIBOD._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPBOD.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If CCMIMPBOD.snapshotEnabled=1
 [L]A_RETIK = CCMIMPBOD.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMIMPBOD.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



