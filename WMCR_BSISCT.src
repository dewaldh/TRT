#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import segment
# Supervisor
## CRUD-CLASSE ## BSISCT
# 2018-08-27 12:27:21 264


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BSISCT [BSISCT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BSISCT") From ASYRCOM : Endif
Local Instance BSISCT Using C_BSISCT

If !SILENCE : Call TRACE("3 --> New Instance C_BSISCT") From ASYRCOM : Endif
BSISCT = NewInstance C_BSISCT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BSISCT_]BSISCT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BSISCT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.AREAD([BSISCT_]CODSCT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BSISCT.CODSCT ="-num$(BSISCT.CODSCT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BSISCT.AKEYS)
  Call TRACE("-"-num$(I)-":"-BSISCT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BSISCT_]
FreeGroup BSISCT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BSISCT,ACLE,ASTATUS,_ETAG)
Variable Instance BSISCT Using C_BSISCT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODSCT(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODSCT = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BSISCT [BSISCT]
Default File [F:BSISCT]
Read [F:BSISCT]BSISCT0 = [L]_CODSCT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BSISCT]UPDTICK)>0
 [L]_ETAG = num$([F:BSISCT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BSISCT,ACLE,ASTATUS)
Variable Instance BSISCT Using C_BSISCT
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODSCT(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODSCT = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BSISCT.AREAD([L]_CODSCT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BSISCT,_CODSCT,ASTATUS)
Variable Instance BSISCT Using C_BSISCT
Value Char _CODSCT
Variable Integer ASTATUS

If BSISCT = null : End : Endif

Gosub AVARIABLES From WMC00BSISCT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BSISCT.APARENT=null
 [L]A_I = BSISCT.freeSnapshot
 BSISCT.snapshotEnabled = 0
 BSISCT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BSISCT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BSISCT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BSISCT.APARENT=null
 BSISCT.snapshotEnabled = 1
 BSISCT.setAccessorEnabled = 1
Endif
LogicClose File [BSISCT] ,[BSISCTD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BSISCT._ACTION_PARAM("AREAD_BEFORE",[L]_CODSCT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BSISCT]
Read [F:BSISCT]BSISCT0 = [L]_CODSCT
If fstat
[L]A_ERROR = [L]_CODSCT
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BSISCT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:BSISCT]AUUID)>0 & [F:BSISCT]AUUID=NullUuid
 [F:BSISCT]AUUID = getUuid
Endif
SetInstance BSISCT With [F:BSISCT]
BSISCT.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BSISCTD]
 [L]A_N2=0
 For [F:BSISCTD]BSISCTD0 Where CODSCT=[F:BSISCT]CODSCT
  [L]A_N2 +=1
  BSISCT.LINES(A_N2) = NewInstance  C_BSISCTD(BSISCT.ACTX,NullUuid,[L]A_N2,BSISCT,"LINES") AllocGroup BSISCT
  [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ADDINSTANCE_BOUND)
  If dim([F:BSISCTD]AUUID)>0 & [F:BSISCTD]AUUID=NullUuid
   [F:BSISCTD]AUUID = getUuid
  Endif
  SetInstance BSISCT.LINES(A_N2) With [F:BSISCTD]
  [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  BSISCT.LINES(A_N2).ASTALIN = [V]CST_ALL
  For [AXX] Where CODFIC="BSISCTD" & ZONE="DESAXX" & IDENT1=BSISCT.LINES(A_N2).CODSCT & IDENT2=num$(BSISCT.LINES(A_N2).LIN)
   Call ASETTEXTRA(BSISCT.LINES(A_N2).AXX,BSISCT.LINES(A_N2).AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   BSISCT.LINES(A_N2).AXX(maxtab(BSISCT.LINES(A_N2).AXX)).FLG = 0
  Next AXX
  If !len(fmet BSISCT.LINES(A_N2).AGETTEXTRA("DESAXX"))
   Call ASETTEXTRA(BSISCT.LINES(A_N2).AXX,BSISCT.LINES(A_N2).AllocGrp(),"DESAXX",
& fmet BSISCT.LINES(A_N2).AGETTEXTRALAN("DESAXX",BSISCT.LINES(A_N2).ACTX.AFOLD.ALANGDEF),
& BSISCT.LINES(A_N2).ACTX.LAN) From ASYRSUB
  Endif
  [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ASETATTRIBUTE("CODSCT","$namProParent","CODSCT"))
 Next BSISCTD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet BSISCT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="BSISCT" & ZONE="DESAXX" & IDENT1=BSISCT.CODSCT & IDENT2=""
 Call ASETTEXTRA(BSISCT.AXX,BSISCT.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 BSISCT.AXX(maxtab(BSISCT.AXX)).FLG = 0
Next AXX
If !len(fmet BSISCT.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(BSISCT.AXX,BSISCT.AllocGrp(),"DESAXX",
& fmet BSISCT.AGETTEXTRALAN("DESAXX",BSISCT.ACTX.AFOLD.ALANGDEF),
& BSISCT.ACTX.LAN) From ASYRSUB
Endif

Return



