#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SVIC1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:40"
A_USER  = "ADMIN"
A_STAMP = "20180828001540"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SVIC1 [SVIC1]
Gosub HORODAT
Local Inpbox "SVIC1" From GFONCTION At A_STAMP With A_WINDPREV Mask [SVIC1] As [SIM_]
Grizo [SVIC1]5
Grizo [SVIC1]10
Grizo [SVIC1]20
Grizo [SVIC1]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SVIC1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=91 : Y1(0)=1 : Y2(0)=11
X1(1)=1 : X2(1)=91 : Y1(1)=12 : Y2(1)=25
X1(2)=1 : X2(2)=91 : Y1(2)=26 : Y2(2)=25
X1(3)=1 : X2(3)=91 : Y1(3)=26 : Y2(3)=34
Return

$ON_VCRTYP
Onevent BEFORE_INPUT Call AS_VCRTYP(zc) From W1SVIC1
Onevent CONTROL Call C_VCRTYP(zc) From W1SVIC1
Onevent INIT_AREA Call D_VCRTYP(zc) From W1SVIC1
Return

Subprog D_VCRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(476) From COMBOS
## Action STD
Call AS_VCRTYP(VALEUR) From SUBSVIC
If mkstat=2
 [M]VCRTYP(INDIC) = VALEUR
 Affzo VCRTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,476,1))))
Endif
If !mkstat
 Discombo 0 From VCRTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From VCRTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_VCRTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "VCRTYP" : GZNUM = 4969 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action STD
 Call C_VCRTYP(VALEUR) From SUBSVIC
 If mkstat : GERR = 1 : GZONE = "VCRTYP" : GZNUM = 4969 : Endif
Endif
Gosub _AFF
End

$ON_VCRNUMORI
Onevent CONTROL Call C_VCRNUMORI(zc) From W1SVIC1
Onevent BEFORE_INPUT Call AS_VCRNUMORI(zc) From W1SVIC1
Return

Subprog IB_VCRNUMORI(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_VCRNUMORI From SUBSVIC
Gosub _AFF
End

Subprog AS_VCRNUMORI(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call IB_VCRNUMORI(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_VCRNUMORI(zc) From W1SVIC1
Gosub _AFF
End

Subprog C_VCRNUMORI(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCRNUMORI" : GZNUM = 6516 : Endif
Endif
Gosub _AFF
End

Subprog B1_VCRNUMORI(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_VCRNUMORI" : PROGSUB = "SUBSVIC" : PROGSPE = "SPESVIC" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR(VALEUR,[M]VCRABR,"") From GOBJET
 ACTION = "BB1_VCRNUMORI" : PROGSUB = "SUBSVIC" : PROGSPE = "SPESVIC" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_VCRLINORI
Onevent AFTER_CHANGE Gosub AMM_VCRLINORI From W1SVIC1
Return

$AMM_VCRLINORI
Call AM_VCRLINORI(zc)
If !mkstat & GOBJET
 zoncou = "VCRLINORI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRLINORI(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_VCRLINORI(VALEUR) From SUBSVIC
If mkstat : GERR = 1 : GZONE = "VCRLINORI" : GZNUM = 7553 : Endif
Gosub _AFF
End

$ON_VCRSEQORI
Return

$ON_CURLEG
Onevent INIT_AREA Call D_CURLEG(zc) From W1SVIC1
Return

Subprog D_CURLEG(VALEUR)
Variable Char    VALEUR()
If varinit([M]CURLEG,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"909","") From SUBADI
Endif
Gosub _AFF
End

$ON_LEG
Onevent INIT_AREA Call D_LEG(zc) From W1SVIC1
Return

Subprog D_LEG(VALEUR)
Variable Char    VALEUR()
If varinit([M]LEG,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"909","") From SUBADI
Endif
Gosub _AFF
End

$ON_INVCND
Onevent CONTROL Call C_INVCND(zc) From W1SVIC1
Onevent BEFORE_INPUT Call AS_INVCND(zc) From W1SVIC1
Onevent AFTER_CHANGE Gosub AMM_INVCND From W1SVIC1
Return

Subprog IB_INVCND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBTUNLEG
 Call IBTUNLEG("") From TRTVENCTL
Endif
Gosub _AFF
End

Subprog AS_INVCND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(54390,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_INVCND(VALEUR)
## Action STD
Call AS_INVCND(VALEUR) From SUBSVIC
If mkstat=2
 [M]INVCND(INDIC) = VALEUR
 Affzo INVCND(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_INVCND(zc) From W1SVIC1
Onkey   2 Titled GBOUTS Call S_INVCND(zc) From W1SVIC1
Onkey 144 Titled GBOUTP Call P_INVCND(zc) From W1SVIC1
Onkey 146 Titled GBOUTA Call SA_INVCND(zc) From W1SVIC1
Gosub _AFF
End

Subprog C_INVCND(VALEUR)
Variable Char    VALEUR()
## Action CONTINVCND
Call CONTINVCND(VALEUR,LEG,"SVIC1","INVCND",[M:SVIC1]SALFCY,"",GSOCIETE) From SUBINVCND
If mkstat : GERR = 1 : GZONE = "INVCND" : GZNUM = 54504 : Endif
If !mkstat
 ## Action CONTOBJN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJN"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "INVCND" : GZNUM = 54504 : Endif
Endif
Gosub _AFF
End

$AMM_INVCND
Call AM_INVCND(zc)
If !mkstat & GOBJET
 zoncou = "INVCND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INVCND(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_INVCND(VALEUR) From SUBSVIC
If mkstat : GERR = 1 : GZONE = "INVCND" : GZNUM = 54504 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZINVCND)")>indice
 [M]INVCND(indice) = VALEUR
 Affzo ZINVCND(indice)
Endif
Gosub _AFF
End

Subprog S_INVCND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELICNDLEG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELICNDLEG"
 PARMSK(1) = LEG
 PARMSK(2) = [M:SVIC1]SALFCY
 PARMSK(3) = ""
 PARMSK(4) = GSOCIETE
 PARMSK(5) = "SVIC1"
 PARMSK(6) = "INVCND"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELINVCND","SUBINVCND","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_INVCND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNINVCND
 Call TUNINVCND(VALEUR,LEG) From SUBINVCND
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_INVCND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "INVCND"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_INVCND(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("INVCND",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZINVCND
Onevent BEFORE_AREA Gosub AV_ZINVCND From W1SVIC1
Return

$AV_ZINVCND
Call LECTEXTRA(zc,"TABINVCND","DESAXX",num$([M]INVCND(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_INVCNDTYP
Onevent INIT_AREA Call D_INVCNDTYP(zc) From W1SVIC1
Return

Subprog D_INVCNDTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]INVCNDTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DOCDAT
Onevent BEFORE_AREA Gosub AV_DOCDAT From W1SVIC1
Return

$AV_DOCDAT
Chgfmt [M]DOCDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_VCRINVCNDDAT
Onevent BEFORE_AREA Gosub AV_VCRINVCNDDAT From W1SVIC1
Onevent CONTROL Call C_VCRINVCNDDAT(zc) From W1SVIC1
Onevent AFTER_CHANGE Gosub AMM_VCRINVCNDDAT From W1SVIC1
Return

$AV_VCRINVCNDDAT
## Action STD
Call AV_VCRINVCNDDAT(zc) From SUBSVIC
Chgfmt [M]VCRINVCNDDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_VCRINVCNDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_VCRINVCNDDAT(VALEUR) From SUBSVIC
If mkstat : GERR = 1 : GZONE = "VCRINVCNDDAT" : GZNUM = 14895 : Endif
Gosub _AFF
End

$AMM_VCRINVCNDDAT
Call AM_VCRINVCNDDAT(zc)
If !mkstat & GOBJET
 zoncou = "VCRINVCNDDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRINVCNDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_VCRINVCNDDAT(VALEUR) From SUBSVIC
If mkstat : GERR = 1 : GZONE = "VCRINVCNDDAT" : GZNUM = 14895 : Endif
Gosub _AFF
End

$ON_SALFCY
Return

$ON_ZSALFCY
Onevent BEFORE_AREA Gosub AV_ZSALFCY From W1SVIC1
Return

$AV_ZSALFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]SALFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1SVIC1
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_BPCORD
Return

$ON_ZBPCORD
Onevent BEFORE_AREA Gosub AV_ZBPCORD From W1SVIC1
Return

$AV_ZBPCORD
If clalev([F:BPC])=0 : Local File BPCUSTOMER [BPC] : Endif
Call LECTURE("BPC",num$([M]BPCORD(indice)),"") From CONTOBJ
zc = [F:BPC]BPCNAM
Gosub _AFF
Return

$ON_BPAADD
Return

$ON_ZBPAADD
Onevent BEFORE_AREA Gosub AV_ZBPAADD From W1SVIC1
Return

$AV_ZBPAADD
If clalev([F:BPD])=0 : Local File BPDLVCUST [BPD] : Endif
Call LECTURE("BPD",num$([M]BPAADD(indice)),num$(BPCORD)) From CONTOBJ
zc = [F:BPD]BPDNAM
Gosub _AFF
Return

$ON_BPCINV
Return

$ON_ZBPCINV
Onevent BEFORE_AREA Gosub AV_ZBPCINV From W1SVIC1
Return

$AV_ZBPCINV
If clalev([F:BPR])=0
 If dim(GTABCPT)>0 & GTABCPT<>"" & find("BPR",GABRCPT(1..GNBTABCPT))
  Local File =GTABCPT+"BPARTNER" [BPR]
 Else 
  Local File BPARTNER [BPR]
 Endif
Endif
Call LECTURE("BPR",num$([M]BPCINV(indice)),"") From CONTOBJ
zc = [F:BPR]BPRNAM
Gosub _AFF
Return

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1SVIC1
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_LINORISAU
Return

$ON_ZLINORISAU
Onevent BEFORE_AREA Gosub AV_ZLINORISAU From W1SVIC1
Return

$AV_ZLINORISAU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]LINORISAU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_QTY
Onevent BEFORE_AREA Gosub AV_QTY From W1SVIC1
Return

$AV_QTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:SVIC1]LINORISAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PRITYP
Onevent INIT_AREA Call D_PRITYP(zc) From W1SVIC1
Return

Subprog D_PRITYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PRITYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AMTNOT
Onevent BEFORE_AREA Gosub AV_AMTNOT From W1SVIC1
Return

$AV_AMTNOT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(CUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_NETPRINOT
Onevent BEFORE_AREA Gosub AV_NETPRINOT From W1SVIC1
Return

$AV_NETPRINOT
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

$ON_AMTATI
Onevent BEFORE_AREA Gosub AV_AMTATI From W1SVIC1
Return

$AV_AMTATI
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(CUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_NETPRIATI
Onevent BEFORE_AREA Gosub AV_NETPRIATI From W1SVIC1
Return

$AV_NETPRIATI
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

$ON_NETPRIVCR
Onevent BEFORE_AREA Gosub AV_NETPRIVCR From W1SVIC1
Return

$AV_NETPRIVCR
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

$ON_AMTVCR
Onevent BEFORE_AREA Gosub AV_AMTVCR From W1SVIC1
Return

$AV_AMTVCR
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:SVIC1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]AMTVCR(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUR
Return

$ON_ZCUR
Onevent BEFORE_AREA Gosub AV_ZCUR From W1SVIC1
Return

$AV_ZCUR
Call LECTEXTRA(zc,"TABCUR","INTDES",num$([M]CUR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_NBLIG
Onevent BEFORE_LINE Call AVANT_NBLIG From W1SVIC1
Onevent AFTER_LINE Call APRES_NBLIG From W1SVIC1
Onevent BEFORE_INPUT Call AS_NBLIG From W1SVIC1
Onevent BEFORE_AREA Call AV_NBLIG From W1SVIC1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
## Action STD
Call IB_NBLIG From SUBSVIC
Gosub _AFF
End

Subprog AV_NBLIG
Local Decimal BASPAG
GDEV1(1) = "EUR"
GDEV1(1) = [M:SVIC1]CUR
Gosub SETDEV From TRTDIV
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3827,GBOUT1) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1SVIC1
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETAA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETAA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "SUBSVIC" : PROGSPE = "SPESVIC" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR([M]SIHNUM(nolign-1),"SIH","") From GOBJET
 ACTION = "BB1_NBLIG" : PROGSUB = "SUBSVIC" : PROGSPE = "SPESVIC" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From SUBSVIC
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action STD
Call APRES_NBLIG From SUBSVIC
If mkstat : End : Endif
Gosub _AFF
End

$ON_PERFROM
Onevent BEFORE_AREA Gosub AV_PERFROM From W1SVIC1
Return

$AV_PERFROM
## Action STD
Call AV_PERFROM(zc) From SUBSVIC
Chgfmt [M]PERFROM(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$ON_PERTO
Onevent BEFORE_AREA Gosub AV_PERTO From W1SVIC1
Onevent CONTROL Call C_PERTO(zc) From W1SVIC1
Return

$AV_PERTO
## Action STD
Call AV_PERTO(zc) From SUBSVIC
Chgfmt [M]PERTO(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_PERTO(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_PERTO(VALEUR) From SUBSVIC
If mkstat : GERR = 1 : GZONE = "PERTO" : GZNUM = 2498 : Endif
Gosub _AFF
End

$ON_NEXINVDAT
Onevent BEFORE_AREA Gosub AV_NEXINVDAT From W1SVIC1
Return

$AV_NEXINVDAT
## Action STD
Call AV_NEXINVDAT(zc) From SUBSVIC
Chgfmt [M]NEXINVDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$ON_INVPERCENT
Onevent BEFORE_AREA Gosub AV_INVPERCENT From W1SVIC1
Onevent CONTROL Call C_INVPERCENT(zc) From W1SVIC1
Onevent AFTER_CHANGE Gosub AMM_INVPERCENT From W1SVIC1
Return

$AV_INVPERCENT
## Action STD
Call AV_INVPERCENT(zc) From SUBSVIC
Gosub _AFF
Return

Subprog C_INVPERCENT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "INVPERCENT" : GZNUM = 3568 : Endif
If !mkstat
 ## Action STD
 Call C_INVPERCENT(VALEUR) From SUBSVIC
 If mkstat : GERR = 1 : GZONE = "INVPERCENT" : GZNUM = 3568 : Endif
Endif
Gosub _AFF
End

$AMM_INVPERCENT
Call AM_INVPERCENT(zc)
If !mkstat & GOBJET
 zoncou = "INVPERCENT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INVPERCENT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_INVPERCENT(VALEUR) From SUBSVIC
If mkstat : GERR = 1 : GZONE = "INVPERCENT" : GZNUM = 3568 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2SVIC1
Return

$TIT_COL
Gosub TIT_COL From W2SVIC1
Return


