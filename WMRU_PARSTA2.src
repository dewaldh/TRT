#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical parameters
# Supervisor
## CRUD-CLASSE ## PARSTA2
# 2018-08-27 13:20:51 441


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PARSTA2,ASTATUS)
Variable Instance PARSTA2 Using R_PARSTA2
Variable Integer ASTATUS

If PARSTA2 = null : End : Endif

Gosub AVARIABLES From WMR00PARSTA2
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet PARSTA2.ACTX.AGETAFCRIGHT(PARSTA2,"GESPS2",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet PARSTA2.ACTX.AGETAFCRIGHTU(PARSTA2,"GESPS2",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif
If fmet PARSTA2.ACTX.AGETACSRIGHTM(PARSTA2,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AUPDATE_END
  Endif
  
  Gosub AREPCONTROL_AUPDATE
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
  
If !adxlog
 Gosub AUPDATE_TR_PARSTA2
Else
 Gosub AUPDATE_PARSTA2
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PARSTA2.freeSnapshot
PARSTA2.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
PARSTA2.ASTALIN = [V]CST_AUPD
PARSTA2.PS2.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = PARSTA2.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = PARSTA2.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PARSTA2._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PARSTA2._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PARSTA2._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PARSTA2.PS2.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PARSTA2.PS2.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PARSTA2.PS2.ASTALIN)<>""
 [L]A_ASTALIN = PARSTA2.PS2.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.CRICOL)
 If PARSTA2.PS2.CRICOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA2.PS2.CRICOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.CRICOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.INTCOL)
 If PARSTA2.PS2.INTCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA2.PS2.INTCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.INTCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.TBLCOL)
 If PARSTA2.PS2.TBLCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA2.PS2.TBLCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.TBLCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

For [L]A_I=1 To maxtab(PARSTA2.PS2.CRICOL)
 If PARSTA2.PS2.CRICOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA2.PS2.CRICOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.CRICOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.INTCOL)
 If PARSTA2.PS2.INTCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA2.PS2.INTCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.INTCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.TBLCOL)
 If PARSTA2.PS2.TBLCOL([L]A_I)<>null
  [L]A_ASTALIN = PARSTA2.PS2.TBLCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.TBLCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(PARSTA2.PS2.ASTALIN)<>""
 [L]A_ASTALIN = PARSTA2.PS2.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PARSTA2
Trbegin [F:PS2]
 Gosub AUPDATE_PARSTA2
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PARSTA2.PS2.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PARSTA2.PS2.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.CRICOL)
 If PARSTA2.PS2.CRICOL([L]A_I)<>null
  If PARSTA2.PS2.CRICOL([L]A_I).ASTALIN=[V]CST_ADEL or PARSTA2.PS2.CRICOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PARSTA2.PS2.CRICOL([L]A_I)
   PARSTA2.PS2.CRICOL([L]A_I) = null
  Elsif PARSTA2.PS2.CRICOL([L]A_I).ASTALIN <> [V]CST_ALL
   PARSTA2.PS2.CRICOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.INTCOL)
 If PARSTA2.PS2.INTCOL([L]A_I)<>null
  If PARSTA2.PS2.INTCOL([L]A_I).ASTALIN=[V]CST_ADEL or PARSTA2.PS2.INTCOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PARSTA2.PS2.INTCOL([L]A_I)
   PARSTA2.PS2.INTCOL([L]A_I) = null
  Elsif PARSTA2.PS2.INTCOL([L]A_I).ASTALIN <> [V]CST_ALL
   PARSTA2.PS2.INTCOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.TBLCOL)
 If PARSTA2.PS2.TBLCOL([L]A_I)<>null
  If PARSTA2.PS2.TBLCOL([L]A_I).ASTALIN=[V]CST_ADEL or PARSTA2.PS2.TBLCOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PARSTA2.PS2.TBLCOL([L]A_I)
   PARSTA2.PS2.TBLCOL([L]A_I) = null
  Elsif PARSTA2.PS2.TBLCOL([L]A_I).ASTALIN <> [V]CST_ALL
   PARSTA2.PS2.TBLCOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Return

#-----------------------------------------------------#
$AUPDATE_PARSTA2
[L]A_ASTALIN = PARSTA2.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = PARSTA2.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PARSTA2.snapshotEnabled=1
 [L]A_RETIK = PARSTA2.revertUpdTick
Endif

[L]ASTATUS = max(fmet PARSTA2.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



