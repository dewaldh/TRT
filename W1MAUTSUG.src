#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management MAUTSUG 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:05:01"
A_USER  = "ADMIN"
A_STAMP = "20180828000501"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MAUTSUG [DIA]
Gosub HORODAT
Local Inpbox "MAUTSUG" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Grizo [DIA]10
Grizo [DIA]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=22 : X2(0)=91 : Y1(0)=9 : Y2(0)=11
X1(1)=22 : X2(1)=91 : Y1(1)=12 : Y2(1)=16
X1(2)=22 : X2(2)=91 : Y1(2)=17 : Y2(2)=20
Return

$ON_STOFCY
Onevent CONTROL Call C_STOFCY(zc) From W1MAUTSUG
Onevent AFTER_CHANGE Gosub AMM_STOFCY From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_STOFCY(zc) From W1MAUTSUG
Onevent INIT_AREA Call D_STOFCY(zc) From W1MAUTSUG
Return

Subprog D_STOFCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]STOFCY,indice)=0
 VALEUR = GFCYDEF(8)
Endif
Gosub _AFF
End

Subprog AS_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_STOFCY(zc) From W1MAUTSUG
Onkey   2 Titled GBOUTS Call S_STOFCY(zc) From W1MAUTSUG
Onkey 144 Titled GBOUTP Call P_STOFCY(zc) From W1MAUTSUG
Onkey 146 Titled GBOUTA Call SA_STOFCY(zc) From W1MAUTSUG
Gosub _AFF
End

Subprog C_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","D",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_STOFCY
Call AM_STOFCY(zc)
If !mkstat & GOBJET
 zoncou = "STOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STOFCY(VALEUR) From FUNPURSUG
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSTOFCY)")>indice
 [M]STOFCY(indice) = VALEUR
 Affzo ZSTOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "D"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1MAUTSUG
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_FORMULE
Onevent INIT_AREA Call D_FORMULE(zc) From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_FORMULE(zc) From W1MAUTSUG
Onevent CONTROL Call C_FORMULE(zc) From W1MAUTSUG
Onevent AFTER_CHANGE Gosub AMM_FORMULE From W1MAUTSUG
Return

Subprog D_FORMULE(VALEUR)
Variable Char    VALEUR()
If varinit([M]FORMULE,indice)=0
 ## Action MEMFOR0
 Call MEMINI(VALEUR) From GMEMFOR
Endif
Gosub _AFF
End

Subprog AS_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4574,GBOUT1) From OBJDIV
Call TEXTE(845,GBOUT2) From OBJDIV
Call TEXTE(48414,GBOUT3) From OBJDIV
Call TEXTE(49954,GBOUT4) From OBJDIV
Call TEXTE(22164,GBOUT5) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
If !GWEBSERV
 ## Action CXTFORDEF
 Call CXTDEF("ORD, ITM, ITF") From CXTFOR
 If mkstat=2
  [M]FORMULE(INDIC) = VALEUR
  Affzo FORMULE(INDIC) : mkstat = 2
 Endif
Endif
Onkey 129 Titled GBOUT1 Call B1_FORMULE(zc) From W1MAUTSUG
Onkey 130 Titled GBOUT2 Call B2_FORMULE(zc) From W1MAUTSUG
Onkey 131 Titled GBOUT3 Call B3_FORMULE(zc) From W1MAUTSUG
Onkey 132 Titled GBOUT4 Call B4_FORMULE(zc) From W1MAUTSUG
Onkey 133 Titled GBOUT5 Call B5_FORMULE(zc) From W1MAUTSUG
Onkey   2 Titled GBOUTS Call S_FORMULE(zc) From W1MAUTSUG
Onkey 144 Titled GBOUTP Call P_FORMULE(zc) From W1MAUTSUG
Onkey 146 Titled GBOUTA Call SA_FORMULE(zc) From W1MAUTSUG
Gosub _AFF
End

Subprog C_FORMULE(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TFO","!",VALEUR,"10",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "FORMULE" : GZNUM = 4574 : Endif
Gosub _AFF
End

$AMM_FORMULE
Call AM_FORMULE(zc)
If !mkstat & GOBJET
 zoncou = "FORMULE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FORMULE(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZFORMULE)")>indice
 [M]FORMULE(indice) = VALEUR
 Affzo ZFORMULE(indice)
Endif
Gosub _AFF
End

Subprog S_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TFO"
PARMSK(2) = "!"
PARMSK(3) = "10"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FORMULE(VALEUR)
Variable Char    VALEUR()
Call OBJET("TFO",VALEUR,"10") From GOBJET
Gosub _AFF
End

Subprog B2_FORMULE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action MEMFOR1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MEMFOR1"
 Call SAISIE_CHAR(VALEUR,PARMSK,"GMEMFOR","GMEMFOR","") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_FORMULE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action MEMFOR3
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MEMFOR3"
 Call TRAITE_CHAR(VALEUR,PARMSK,"","GMEMFOR","",1,"") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_FORMULE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action MEMFOR2
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MEMFOR2"
 Call TRAITE_CHAR(VALEUR,PARMSK,"","GMEMFOR","",1,"") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_FORMULE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CXTFORDOC
 Call CXTDOC("ORD, ITM, ITF") From CXTFOR
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TFO"
PARMSK(2) = "10"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "10"
Call VISU("TFO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFORMULE
Onevent BEFORE_AREA Gosub AV_ZFORMULE From W1MAUTSUG
Return

$AV_ZFORMULE
Call LECTEXTRA(zc,"TABFOR","DES","10",num$([M]FORMULE(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_WOSFLG
Onevent INIT_AREA Call D_WOSFLG(zc) From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_WOSFLG(zc) From W1MAUTSUG
Return

Subprog D_WOSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]WOSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WOSFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_POSFLG
Onevent INIT_AREA Call D_POSFLG(zc) From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_POSFLG(zc) From W1MAUTSUG
Return

Subprog D_POSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]POSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_POSFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_EOSFLG
Onevent INIT_AREA Call D_EOSFLG(zc) From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_EOSFLG(zc) From W1MAUTSUG
Return

Subprog D_EOSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]EOSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_EOSFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INTFLG
Onevent CONTROL Call C_INTFLG(zc) From W1MAUTSUG
Onevent INIT_AREA Call D_INTFLG(zc) From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_INTFLG(zc) From W1MAUTSUG
Return

Subprog D_INTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]INTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_INTFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_INTFLG(VALEUR) From FUNPURSUG
If mkstat : GERR = 1 : GZONE = "INTFLG" : GZNUM = 24252 : Endif
Gosub _AFF
End

$ON_ORIDEB
Onevent BEFORE_INPUT Call AS_ORIDEB(zc) From W1MAUTSUG
Onevent INIT_AREA Call D_ORIDEB(zc) From W1MAUTSUG
Onevent CONTROL Call C_ORIDEB(zc) From W1MAUTSUG
Return

Subprog D_ORIDEB(VALEUR)
Variable Integer VALEUR
If varinit([M]ORIDEB,indice)=0
 VALEUR = 5
Endif
Gosub _AFF
End

Subprog AS_ORIDEB(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(298) From COMBOS
## Action STD
Call AS_ORIDEB(VALEUR) From FUNPURSUG
If mkstat=2
 [M]ORIDEB(INDIC) = VALEUR
 Affzo ORIDEB(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,298,1))))
Endif
If !mkstat
 Discombo 0 From ORIDEB(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ORIDEB(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ORIDEB(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ORIFIN
Onevent BEFORE_INPUT Call AS_ORIFIN(zc) From W1MAUTSUG
Onevent CONTROL Call C_ORIFIN(zc) From W1MAUTSUG
Onevent INIT_AREA Call D_ORIFIN(zc) From W1MAUTSUG
Return

Subprog D_ORIFIN(VALEUR)
Variable Integer VALEUR
If varinit([M]ORIFIN,indice)=0
 VALEUR = 6
Endif
Gosub _AFF
End

Subprog AS_ORIFIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(298) From COMBOS
## Action STD
Call AS_ORIFIN(VALEUR) From FUNPURSUG
If mkstat=2
 [M]ORIFIN(INDIC) = VALEUR
 Affzo ORIFIN(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,298,1))))
Endif
If !mkstat
 Discombo 0 From ORIFIN(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ORIFIN(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ORIFIN(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_ORIFIN(VALEUR) From FUNPURSUG
If mkstat : GERR = 1 : GZONE = "ORIFIN" : GZNUM = 54755 : Endif
Gosub _AFF
End

$ON_ITMREFDEB
Onevent AFTER_CHANGE Gosub AMM_ITMREFDEB From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_ITMREFDEB(zc) From W1MAUTSUG
Return

Subprog AS_ITMREFDEB(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ITMREFDEB(zc) From W1MAUTSUG
Gosub _AFF
End

$AMM_ITMREFDEB
Call AM_ITMREFDEB(zc)
If !mkstat & GOBJET
 zoncou = "ITMREFDEB" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREFDEB(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREFDEB(VALEUR) From FUNPURSUG
If mkstat : GERR = 1 : GZONE = "ITMREFDEB" : GZNUM = 12930 : Endif
Gosub _AFF
End

Subprog S_ITMREFDEB(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = "12356"
 PARMSK(3) = "123"
 PARMSK(4) = "234"
 PARMSK(5) = ""
 PARMSK(6) = date$
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ITMREFFIN
Onevent CONTROL Call C_ITMREFFIN(zc) From W1MAUTSUG
Onevent BEFORE_INPUT Call AS_ITMREFFIN(zc) From W1MAUTSUG
Return

Subprog AS_ITMREFFIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ITMREFFIN(zc) From W1MAUTSUG
Gosub _AFF
End

Subprog C_ITMREFFIN(VALEUR)
Variable Char    VALEUR()
## Action CTLALPV
Call CTLALPV(VALEUR,ITMREFDEB) From CONTDIV
If mkstat : GERR = 1 : GZONE = "ITMREFFIN" : GZNUM = 12931 : Endif
Gosub _AFF
End

Subprog S_ITMREFFIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = "12356"
 PARMSK(3) = "123"
 PARMSK(4) = "234"
 PARMSK(5) = ""
 PARMSK(6) = date$
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ENDDATDEB
Onevent BEFORE_AREA Gosub AV_ENDDATDEB From W1MAUTSUG
Return

$AV_ENDDATDEB
Chgfmt [M]ENDDATDEB(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$ON_ENDDATFIN
Onevent CONTROL Call C_ENDDATFIN(zc) From W1MAUTSUG
Onevent BEFORE_AREA Gosub AV_ENDDATFIN From W1MAUTSUG
Return

$AV_ENDDATFIN
Chgfmt [M]ENDDATFIN(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_ENDDATFIN(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDATFIN(VALEUR) From FUNPURSUG
If mkstat : GERR = 1 : GZONE = "ENDDATFIN" : GZNUM = 51189 : Endif
Gosub _AFF
End

$CHG_STY
Return


