#<AdxTL>@(#)0.0.0.0 $Revision$Class Transcribe import/export
# Supervisor
## CRUD-CLASSE ## AOBJEXTRD
# 2018-08-27 12:21:43 077

Gosub TEST From WMCR_AOBJEXTRD : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,NUMTAB,NUMLIG)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# AOBJEXTRD : AOBJEXTR
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet AOBJEXTRD._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = AOBJEXTRD.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(AOBJEXTRD.ACTX.AFOLDER,nomap,"")>0
 Local File AOBJEXTR [AOR]
 Local File AOBJEXTR [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =AOBJEXTRD.ACTX.AFOLDER+".AOBJEXTR" [AOR]
 Local File =AOBJEXTRD.ACTX.AFOLDER+".AOBJEXTR" [AAA_]
 Local File =AOBJEXTRD.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTRD.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [AOR] With
& [AAA_]AOR0 = NUMTAB+NUMLIG
& As [LNK_]
Return

############################################################################################
### AOBJEXTR(WAOR)
############################################################################################
Funprog  _MAJSQL_AOBJEXTR(WAOR)
Variable Instance WAOR Using C_AOBJEXTRD
Local Integer ASTATUS,A_I,A_J
Default File [F:AOR]
If WAOR.ASTALIN=[V]CST_ANEW
 Call INICRE(WAOR) From ASYRSUB
 SetInstance [F:AOR] With WAOR
 For J=1 To maxtab(WAOR.AXX)
  If WAOR.AXX(J)<>null & WAOR.AXX(J).PRO= "INTIT" & WAOR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOR,WAOR.AXX(J).TEX,"AOBJEXTR","INTIT",WAOR.AXX(J).LAN,num$(WAOR.NUMTAB),AVOID.ACHAR,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WAOR.AXX)
  If WAOR.AXX(J)<>null & WAOR.AXX(J).PRO= "CODINTIT" & WAOR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOR,WAOR.AXX(J).TEX,"AOBJEXTR","CODINTIT",WAOR.AXX(J).LAN,num$(WAOR.NUMTAB),num$(WAOR.INTINTIT),[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:AOR]
 If fstat
  Call FSTA("AOR",WAOR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAOR.updTick = [F:AOR]updTick
Elsif WAOR.ASTALIN=[V]CST_ALL or WAOR.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAOR) From ASYRSUB
 SetInstance [F:AOR] With WAOR
 For J=1 To maxtab(WAOR.AXX)
  If WAOR.AXX(J)<>null & WAOR.AXX(J).PRO= "INTIT" & WAOR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOR,WAOR.AXX(J).TEX,"AOBJEXTR","INTIT",WAOR.AXX(J).LAN,num$(WAOR.NUMTAB),AVOID.ACHAR,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WAOR.AXX)
  If WAOR.AXX(J)<>null & WAOR.AXX(J).PRO= "CODINTIT" & WAOR.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOR,WAOR.AXX(J).TEX,"AOBJEXTR","CODINTIT",WAOR.AXX(J).LAN,num$(WAOR.NUMTAB),num$(WAOR.INTINTIT),[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAOR,"AOBJEXTR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AOR]AOR0 = [F:AOR]NUMTAB;[F:AOR]NUMLIG
 If fstat
  Call FSTA("AOR",WAOR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAOR.updTick = [F:AOR]updTick
Elsif WAOR.ASTALIN=[V]CST_ADEL
 SetInstance [F:AOR] With WAOR
 For J=1 To maxtab(WAOR.AXX)
  If WAOR.AXX(J)<>null & WAOR.AXX(J).PRO= "INTIT"
   Call SUPTEXTRA(WAOR,WAOR.AXX(J).TEX,"AOBJEXTR","INTIT",WAOR.AXX(J).LAN,num$(WAOR.NUMTAB),AVOID.ACHAR,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WAOR.AXX)
  If WAOR.AXX(J)<>null & WAOR.AXX(J).PRO= "CODINTIT"
   Call SUPTEXTRA(WAOR,WAOR.AXX(J).TEX,"AOBJEXTR","CODINTIT",WAOR.AXX(J).LAN,num$(WAOR.NUMTAB),num$(WAOR.INTINTIT),[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAOR,"AOBJEXTR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AOR]AOR0 = [F:AOR]NUMTAB;[F:AOR]NUMLIG
 If fstat
  Call FSTA("AOR",WAOR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



