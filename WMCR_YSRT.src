#<AdxTL>@(#)0.0.0.0 $Revision$Class Settlement Rule type
# Supervisor
## CRUD-CLASSE ## YSRT
# 2018-11-15 00:34:52 201


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSETRULTYP [YRTP_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YSRT") From ASYRCOM : Endif
Local Instance YSRT Using C_YSRT

If !SILENCE : Call TRACE("3 --> New Instance C_YSRT") From ASYRCOM : Endif
YSRT = NewInstance C_YSRT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YRTP_]YRTP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSRT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSRT.AREAD([YRTP_]YRULTYPCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSRT.YRULTYPCOD ="-num$(YSRT.YRULTYPCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSRT.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSRT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YRTP_]
FreeGroup YSRT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSRT,ACLE,ASTATUS,_ETAG)
Variable Instance YSRT Using C_YSRT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YRULTYPCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YRULTYPCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YSETRULTYP [YRTP]
Default File [F:YRTP]
Read [F:YRTP]YRTP0 = [L]_YRULTYPCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YRTP]UPDTICK)>0
 [L]_ETAG = num$([F:YRTP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSRT,ACLE,ASTATUS)
Variable Instance YSRT Using C_YSRT
Value Char ACLE
Variable Integer ASTATUS
Local Char _YRULTYPCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YRULTYPCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSRT.AREAD([L]_YRULTYPCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSRT,_YRULTYPCOD,ASTATUS)
Variable Instance YSRT Using C_YSRT
Value Char _YRULTYPCOD
Variable Integer ASTATUS

If YSRT = null : End : Endif

Gosub AVARIABLES From WMC00YSRT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSRT.APARENT=null
 [L]A_I = YSRT.freeSnapshot
 YSRT.snapshotEnabled = 0
 YSRT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YSRT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YSRT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YSRT.APARENT=null
 YSRT.snapshotEnabled = 1
 YSRT.setAccessorEnabled = 1
Endif
LogicClose File [YRTP]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YSRT._ACTION_PARAM("AREAD_BEFORE",[L]_YRULTYPCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YRTP]
Read [F:YRTP]YRTP0 = [L]_YRULTYPCOD
If fstat
[L]A_ERROR = [L]_YRULTYPCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSRT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YRTP]AUUID)>0 & [F:YRTP]AUUID=NullUuid
 [F:YRTP]AUUID = getUuid
Endif
SetInstance YSRT With [F:YRTP]
YSRT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YSRT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



