#<AdxTL>@(#)0.0.0.0 $Revision$Class Sites
# Supervisor
## CRUD-CLASSE ## AFCY
# 2018-08-27 12:20:23 675


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File FACILITY [FCY_]

If !SILENCE : Call TRACE("2 --> Local Instance C_AFCY") From ASYRCOM : Endif
Local Instance AFCY Using C_AFCY

If !SILENCE : Call TRACE("3 --> New Instance C_AFCY") From ASYRCOM : Endif
AFCY = NewInstance C_AFCY AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [FCY_]FCY0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of AFCY") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet AFCY.AREAD([FCY_]FCY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("AFCY.FCY ="-num$(AFCY.FCY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(AFCY.AKEYS)
  Call TRACE("-"-num$(I)-":"-AFCY.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [FCY_]
FreeGroup AFCY
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(AFCY,ACLE,ASTATUS,_ETAG)
Variable Instance AFCY Using C_AFCY
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _FCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FCY = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File FACILITY [FCY]
Default File [F:FCY]
Read [F:FCY]FCY0 = [L]_FCY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:FCY]UPDTICK)>0
 [L]_ETAG = num$([F:FCY]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(AFCY,ACLE,ASTATUS)
Variable Instance AFCY Using C_AFCY
Value Char ACLE
Variable Integer ASTATUS
Local Char _FCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FCY = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AFCY.AREAD([L]_FCY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(AFCY,_FCY,ASTATUS)
Variable Instance AFCY Using C_AFCY
Value Char _FCY
Variable Integer ASTATUS

If AFCY = null : End : Endif

Gosub AVARIABLES From WMC00AFCY
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If AFCY.APARENT=null
 [L]A_I = AFCY.freeSnapshot
 AFCY.snapshotEnabled = 0
 AFCY.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif


$AREAD_END
LogicClose File [FCY]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet AFCY._ACTION_PARAM("AREAD_BEFORE",[L]_FCY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:FCY]
Read [F:FCY]FCY0 = [L]_FCY
If fstat
[L]A_ERROR = [L]_FCY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(AFCY,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:FCY]AUUID)>0 & [F:FCY]AUUID=NullUuid
 [F:FCY]AUUID = getUuid
Endif
SetInstance AFCY With [F:FCY]
AFCY.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet AFCY.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



