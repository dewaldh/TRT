#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management BOMRPL3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:52:34"
A_USER  = "ADMIN"
A_STAMP = "20180827235234"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask BOMRPL3 [BOR3]
Gosub HORODAT
Local Inpbox "BOMRPL3" From GFONCTION At A_STAMP With A_WINDPREV Mask [BOR3] As [SIM_]
Grizo [BOR3]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BOR3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=21
Return

$ON_NBLIG
Onevent BEFORE_LINE Call AVANT_NBLIG From W1BOMRPL3
Return

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From SUBBOR
If mkstat : End : Endif
Gosub _AFF
End

$ON_VALID
Onevent CONTROL Call C_VALID(zc) From W1BOMRPL3
Onevent INIT_AREA Call D_VALID(zc) From W1BOMRPL3
Onevent BEFORE_INPUT Call AS_VALID(zc) From W1BOMRPL3
Return

Subprog D_VALID(VALEUR)
Variable Integer VALEUR
If varinit([M]VALID,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VALID(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_VALID(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_VALID(VALEUR) From SUBBOR
If mkstat : GERR = 1 : GZONE = "VALID" : GZNUM = 7358 : Endif
Gosub _AFF
End

$ON_BOMALT
Return

$ON_BOMALTTYP
Onevent INIT_AREA Call D_BOMALTTYP(zc) From W1BOMRPL3
Return

Subprog D_BOMALTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]BOMALTTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1BOMRPL3
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_BOMSEQ
Return

$ON_LIKQTY
Onevent AFTER_CHANGE Gosub AMM_LIKQTY From W1BOMRPL3
Onevent CONTROL Call C_LIKQTY(zc) From W1BOMRPL3
Return

Subprog C_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$AMM_LIKQTY
Call AM_LIKQTY(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_LIKQTY(VALEUR) From SUBBOR
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$ON_BOHSTU
Return

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1BOMRPL3
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LIKQTYCOD
Onevent INIT_AREA Call D_LIKQTYCOD(zc) From W1BOMRPL3
Onevent BEFORE_INPUT Call AS_LIKQTYCOD(zc) From W1BOMRPL3
Return

Subprog D_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LIKQTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYRND
Onevent INIT_AREA Call D_QTYRND(zc) From W1BOMRPL3
Onevent BEFORE_INPUT Call AS_QTYRND(zc) From W1BOMRPL3
Return

Subprog D_QTYRND(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYRND,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYRND(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BASQTY
Onevent BEFORE_AREA Gosub AV_BASQTY From W1BOMRPL3
Return

$AV_BASQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]BOHSTU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]BASQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_QTYCOD
Onevent INIT_AREA Call D_QTYCOD(zc) From W1BOMRPL3
Return

Subprog D_QTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCA
Onevent BEFORE_INPUT Call AS_SCA(zc) From W1BOMRPL3
Onevent CONTROL Call C_SCA(zc) From W1BOMRPL3
Return

Subprog AS_SCA(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SCA(VALEUR) From SUBBOR
If mkstat=2
 [M]SCA(INDIC) = VALEUR
 Affzo SCA(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SCA(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_BOMSTRDAT
Onevent CONTROL Call C_BOMSTRDAT(zc) From W1BOMRPL3
Onevent BEFORE_AREA Gosub AV_BOMSTRDAT From W1BOMRPL3
Return

$AV_BOMSTRDAT
Chgfmt [M]BOMSTRDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_BOMSTRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_BOMSTRDAT(VALEUR) From SUBBOR
If mkstat : GERR = 1 : GZONE = "BOMSTRDAT" : GZNUM = 1536 : Endif
Gosub _AFF
End

$ON_BOMENDDAT
Onevent CONTROL Call C_BOMENDDAT(zc) From W1BOMRPL3
Onevent BEFORE_AREA Gosub AV_BOMENDDAT From W1BOMRPL3
Return

$AV_BOMENDDAT
Chgfmt [M]BOMENDDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_BOMENDDAT(VALEUR)
Variable Date    VALEUR
## Action CTLDATV
Call CTLDATV(VALEUR,[M:BOR1]BOMSTRDAT(nolign-1)) From CONTDIV
If mkstat : GERR = 1 : GZONE = "BOMENDDAT" : GZNUM = 5463 : Endif
If !mkstat
 ## Action STD
 Call C_BOMENDDAT(VALEUR) From SUBBOR
 If mkstat : GERR = 1 : GZONE = "BOMENDDAT" : GZNUM = 5463 : Endif
Endif
Gosub _AFF
End

$ON_BOMENDLOT
Onevent CONTROL Call C_BOMENDLOT(zc) From W1BOMRPL3
Return

Subprog C_BOMENDLOT(VALEUR)
Variable Char    VALEUR()
## Action CTLALPV
Call CTLALPV(VALEUR,[M]BOMSTRLOT(nolign-1)) From CONTDIV
If mkstat : GERR = 1 : GZONE = "BOMENDLOT" : GZNUM = 1555 : Endif
Gosub _AFF
End

$ON_SCOFLG
Onevent BEFORE_INPUT Call AS_SCOFLG(zc) From W1BOMRPL3
Onevent INIT_AREA Call D_SCOFLG(zc) From W1BOMRPL3
Onevent CONTROL Call C_SCOFLG(zc) From W1BOMRPL3
Return

Subprog D_SCOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SCOFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2225) From COMBOS
## Action STD
Call AS_SCOFLG(VALEUR) From SUBBOR
If mkstat=2
 [M]SCOFLG(INDIC) = VALEUR
 Affzo SCOFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2225,1))))
Endif
If !mkstat
 Discombo 0 From SCOFLG(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SCOFLG(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SCOFLG(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_BOMOFS
Onevent CONTROL Call C_BOMOFS(zc) From W1BOMRPL3
Return

Subprog C_BOMOFS(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_CSTFLG
Onevent BEFORE_INPUT Call AS_CSTFLG(zc) From W1BOMRPL3
Onevent INIT_AREA Call D_CSTFLG(zc) From W1BOMRPL3
Return

Subprog D_CSTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CSTFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CSTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CSTFLG(VALEUR) From SUBBOR
If mkstat=2
 [M]CSTFLG(INDIC) = VALEUR
 Affzo CSTFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PICPRN
Onevent BEFORE_INPUT Call AS_PICPRN(zc) From W1BOMRPL3
Onevent INIT_AREA Call D_PICPRN(zc) From W1BOMRPL3
Return

Subprog D_PICPRN(VALEUR)
Variable Integer VALEUR
If varinit([M]PICPRN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PICPRN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PICPRN(VALEUR) From SUBBOR
If mkstat=2
 [M]PICPRN(INDIC) = VALEUR
 Affzo PICPRN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_RPLITMREF
Return

$CHG_STY
Return


