#<AdxTL>@(#)0.0.0.0 $Revision$Class Miscellaneous table 
# Supervisor
## CRUD-CLASSE ## ATABDIVM
# 2018-08-27 13:03:11 705


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(ATABDIVM,ASTATUS)
Variable Instance ATABDIVM Using R_ATABDIVM
Variable Integer ASTATUS

If ATABDIVM = null : End : Endif

Gosub AVARIABLES From WMR00ATABDIVM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_ATABDIVM
Else
 Gosub AUPDATE_ATABDIVM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = ATABDIVM.freeSnapshot
ATABDIVM.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
ATABDIVM.ASTALIN = [V]CST_AUPD
ATABDIVM.ADI.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = ATABDIVM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATABDIVM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATABDIVM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATABDIVM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATABDIVM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If ATABDIVM.ADI.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATABDIVM.ADI.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(ATABDIVM.ADI.ASTALIN)<>""
 [L]A_ASTALIN = ATABDIVM.ADI.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ADI.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(ATABDIVM.ADI.ASTALIN)<>""
 [L]A_ASTALIN = ATABDIVM.ADI.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ADI.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_ATABDIVM
Trbegin [F:ADI]
 Gosub AUPDATE_ATABDIVM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(ATABDIVM.ADI.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATABDIVM.ADI.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_ATABDIVM
[L]A_ASTALIN = ATABDIVM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ADI._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATABDIVM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIVM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If ATABDIVM.snapshotEnabled=1
 [L]A_RETIK = ATABDIVM.revertUpdTick
Endif

[L]ASTATUS = max(fmet ATABDIVM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



