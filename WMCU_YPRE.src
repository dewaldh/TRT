#<AdxTL>@(#)0.0.0.0 $Revision$Class Precinct
# Supervisor
## CRUD-CLASSE ## YPRE
# 2018-11-22 23:22:02 278


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(YPRE,ASTATUS)
Variable Instance YPRE Using C_YPRE
Variable Integer ASTATUS

If YPRE = null : End : Endif

Gosub _AVARIABLES From WMC00YPRE

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_YPRE

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(YPRE,ASTATUS)
Variable Instance YPRE Using C_YPRE
Variable Integer ASTATUS

If YPRE = null : End : Endif

Gosub AVARIABLES From WMC00YPRE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
YPRE.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_YPRE
Else
 Gosub AUPDATE_YPRE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = YPRE.freeSnapshot
YPRE.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YPRE._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YPRE._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YPRE._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If YPRE.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YPRE.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(YPRE.ASTALIN)<>""
 [L]A_ASTALIN = YPRE.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(YPRE.YRMA) : # YRMA -- 2
 If YPRE.YRMA(A_N2) <> null
& and YPRE.YRMA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If YPRE.YRMA(A_N2).ASTALIN<>[V]CST_ANEW & YPRE.ASTALIN=[V]CST_ADEL
   YPRE.YRMA(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If YPRE.YRMA(A_N2).ASTALIN=[V]CST_ANEW & find(YPRE.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   YPRE.YRMA(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(YPRE.YRMA(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(YPRE.YRMA(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(YPRE.YRMA) : # YRMA -- 2
 If YPRE.YRMA(A_N2) <> null
& and YPRE.YRMA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(YPRE.YRMA(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(YPRE.YRMA(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(YPRE.ASTALIN)<>""
 [L]A_ASTALIN = YPRE.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_YPRE
Trbegin [F:YPRC]
 Gosub AUPDATE_YPRE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_YPRE
[L]A_ASTALIN = YPRE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00YPRE._MAJSQL_YPRECINT(YPRE))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(YPRE.YRMA)
  If YPRE.YRMA(A_N2) <> null and
& (YPRE.YRMA(A_N2).ASTALIN=[L]A_TYPMAJ or
& YPRE.YRMA(A_N2).ASTALIN=[V]CST_ALL)
   If YPRE.YRMA(A_N2).ASTALIN=[L]A_TYPMAJ
    Case YPRE.YRMA(A_N2).ASTALIN
     When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._AUPDATE)
     When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._AINSERT)
     When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YRMA(A_N2)._ADELETE)
    Endcase
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YPRE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If YPRE.snapshotEnabled=1
 [L]A_RETIK = YPRE.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YPRE.YRMA)
 If YPRE.YRMA(A_N2) <> null
  [L]ASTATUS2 = fmet YPRE.YRMA(A_N2)._AUPDATE_ABORT
  If YPRE.YRMA(A_N2).ASTALIN=[V]CST_ADEL or YPRE.YRMA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YPRE.YRMA(A_N2)
   YPRE.YRMA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet YPRE.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(YPRE.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YPRE.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YPRE.YRMA)
 If YPRE.YRMA(A_N2) <> null
  [L]ASTATUS2 = fmet YPRE.YRMA(A_N2)._AUPDATE_AFTER
  If YPRE.YRMA(A_N2).ASTALIN=[V]CST_ADEL or YPRE.YRMA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YPRE.YRMA(A_N2)
   YPRE.YRMA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



