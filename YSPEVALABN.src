#<AdxTL>@(#)0.0.0.0 $Revision$
#<AdxTL>@(#)0.0.0.0 $Revision$
$ACTION
  Case ACTION
    When "EXEC" : Gosub EXEC
    When "INIT" : Gosub INIT
  Endcase
Return

$INIT
#REP = "C"
Return

$EXEC

Local Clbfile RESHEAD(0),RESBODY(0)
Local Integer RETVAL
Local Char REGSTA
Local Char BUSVAL(250),COMPVAL(250)

#Infbox(num$([M]CRN))
#Infbox(num$(PARAM(1)))



If PARAM(1) = ""
  GMESSAGE = mess(39,6201,1)
  GERR = 1
#  mkstat = 2
  zonsui = "[M:BPRS]BPSNUM"
  Return
Endif

  # No additional parameter nor additional header value are given here (only the values given in ORDER definition are used)
Local Char PCOD(100)(1..10),PVAL(100)(1..10),HCOD(100)(1..10),HVAL(100)(1..10)
RETVAL=func ASYRRESTCLI.EXEC_REST_WS("DFCABNINF","GET",PARAM(1),PCOD,PVAL,HCOD,HVAL,"{}", 0,"",RESHEAD, RESBODY)

#Call OUVRE_TRACE("TEST") From LECFIC
#Call ECR_TRACE(chr$(10)+chr$(13) + RESHEAD,0) From GESECRAN
#Call ECR_TRACE(chr$(10)+chr$(13) + RESBODY,0) From GESECRAN
#Call FERME_TRACE From LECFIC
#Call LEC_TRACE() From LECFIC

If RETVAL = 500
  GMESSAGE = 'ABN number lookup timeout. Please contact your administrator.'
  GERR = 1
  Return
Endif


If RETVAL = 404
  Call ERRTIT( mess(36,6201,1),"Mandatory field") From GESECRAN
  zonsui = "[M:BPRS]BPSNUM"
Elsif RETVAL = 200

  Local Char YMSG(255)

  YMSG = "ABN: " + seg$(RESBODY,instr(1,RESBODY,"<ABN>")+5,instr(1,RESBODY,"</ABN>")-1)

  If instr(1,RESBODY,"<BusinessName/>") = 0
    BUSVAL = func REPLACESTR(seg$(RESBODY,instr(1,RESBODY,"<BusinessName>")+14,instr(1,RESBODY,"</BusinessName>")-1), "&amp;", "&")
#    YMSG += chr$(10)+chr$(13) + "Business Name: " + ctrans(seg$(RESBODY,instr(1,RESBODY,"<BusinessName>")+14,instr(1,RESBODY,"</BusinessName>")-1),"&amp;","&")
  YMSG += chr$(10)+chr$(13) + "Business Name: "  + BUSVAL
  Else
    YMSG += chr$(10)+chr$(13) + "Business Name: "
  Endif

  If instr(1,RESBODY,"<CompanyName/>") = 0
    COMPVAL = func REPLACESTR(seg$(RESBODY,instr(1,RESBODY,"<CompanyName>")+13,instr(1,RESBODY,"</CompanyName>")-1), "&amp;", "&")
#    YMSG += chr$(10)+chr$(13) + "Company Name: " + ctrans(seg$(RESBODY,instr(1,RESBODY,"<CompanyName>")+13,instr(1,RESBODY,"</CompanyName>")-1),"&amp;","&")
    YMSG += chr$(10)+chr$(13) + "Company Name: "  + COMPVAL
  Else
    YMSG += chr$(10)+chr$(13) + "Company Name: "
  Endif

  If instr(1,RESBODY,"<ABNStatus/>") = 0
    YMSG += chr$(10)+chr$(13) + "ABN Status: " + seg$(RESBODY,instr(1,RESBODY,"<ABNStatus>")+11,instr(1,RESBODY,"</ABNStatus>")-1)
  Else
    YMSG += chr$(10)+chr$(13) + "ABN Status "
  Endif

  If instr(1,RESBODY,"<GSTRegistrationStatus/>") = 0
    If seg$(RESBODY,instr(1,RESBODY,"<GSTRegistrationStatus>")+23,instr(1,RESBODY,"</GSTRegistrationStatus>")-1) = "True"
      REGSTA = "Registered"
    Else If seg$(RESBODY,instr(1,RESBODY,"<GSTRegistrationStatus>")+23,instr(1,RESBODY,"</GSTRegistrationStatus>")-1) = "true"
         REGSTA = "Registered"
         Else
         REGSTA = "Unregistered"
    Endif
    Endif

    YMSG += chr$(10)+chr$(13) + "GST Registration Status: " + REGSTA
  Else
    YMSG += chr$(10)+chr$(13) + "GST Registration Status: "
  Endif

  If instr(1,RESBODY,"<AdditionalInformation/>") = 0
    YMSG += chr$(10)+chr$(13) + "Additional Information: " + seg$(RESBODY,instr(1,RESBODY,"<AdditionalInformation>")+23,instr(1,RESBODY,"</AdditionalInformation>")-1)
  Else
    YMSG += chr$(10)+chr$(13) + "Additional Information: "
  Endif

  YMSG += chr$(10)+chr$(13) + " "
  YMSG += chr$(10)+chr$(13) + "Is this correct? "


  Call OUINON(YMSG,OK)  From GESECRAN
  Case OK
     When 2: Goto YES  #yes
     When 1: Goto NO   #no
  Endcase


#Infbox "ABN: " + seg$(RESBODY,instr(1,RESBODY,"<ABN>")+5,instr(1,RESBODY,"</ABN>")-1),
#& "Business Name: " + seg$(RESBODY,instr(1,RESBODY,"<BusinessName>")+14,instr(1,RESBODY,"</BusinessName>")-1),
#& "Company Name: " + seg$(RESBODY,instr(1,RESBODY,"<CompanyName>")+13,instr(1,RESBODY,"</CompanyName>")-1),
#& "ABN Status: " + seg$(RESBODY,instr(1,RESBODY,"<ABNStatus>")+11,instr(1,RESBODY,"</ABNStatus>")-1),
#& "GST Registration Status: " + seg$(RESBODY,instr(1,RESBODY,"<GSTRegistrationStatus>")+23,instr(1,RESBODY,"</GSTRegistrationStatus>")-1),
#& "Additional Information: " + seg$(RESBODY,instr(1,RESBODY,"<AdditionalInformation>")+23,instr(1,RESBODY,"</AdditionalInformation>")-1)

$YES
Local Char REGSTAS
Local Char BUSVALS(250),COMPVALS(250)


  #populate the screen
  If instr(1,RESBODY,"<BusinessName/>") = 0
    BUSVALS = func REPLACESTR(seg$(RESBODY,instr(1,RESBODY,"<BusinessName>")+14,instr(1,RESBODY,"</BusinessName>")-1), "&amp;", "&")
#    [M:BPS4]YABRBUS = ctrans(seg$(RESBODY,instr(1,RESBODY,"<BusinessName>")+14,instr(1,RESBODY,"</BusinessName>")-1),"&amp;","&")
    [M:BPS4]YABRBUS = BUSVALS
  Endif

  If instr(1,RESBODY,"<CompanyName/>") = 0
    COMPVALS = func REPLACESTR(seg$(RESBODY,instr(1,RESBODY,"<CompanyName>")+13,instr(1,RESBODY,"</CompanyName>")-1), "&amp;", "&")
#    [M:BPS4]YABRCPY = ctrans(seg$(RESBODY,instr(1,RESBODY,"<CompanyName>")+13,instr(1,RESBODY,"</CompanyName>")-1),"&amp;","&")
    [M:BPS4]YABRCPY = COMPVALS
  Endif

  If instr(1,RESBODY,"<ABNStatus/>") = 0
    [M:BPS4]YABRABNSTA = seg$(RESBODY,instr(1,RESBODY,"<ABNStatus>")+11,instr(1,RESBODY,"</ABNStatus>")-1)
  Endif

  If instr(1,RESBODY,"<GSTRegistrationStatus/>") = 0
    If seg$(RESBODY,instr(1,RESBODY,"<GSTRegistrationStatus>")+23,instr(1,RESBODY,"</GSTRegistrationStatus>")-1) = "True"
      REGSTAS = "Registered"
    Else If seg$(RESBODY,instr(1,RESBODY,"<GSTRegistrationStatus>")+23,instr(1,RESBODY,"</GSTRegistrationStatus>")-1) = "true"
         REGSTAS = "Registered"
         Else
         REGSTAS = "Unregistered"
    Endif
    Endif
    [M:BPS4]YARBGSTSTA = REGSTAS
  Endif

  [M:BPS4]YABRLKPDAT = date$
  #[M:BPS4]YABRLKPDAT = gdat$(day(date$), month(date$), year(date$))

  If instr(1,RESBODY,"<AdditionalInformation/>") = 0
    [M:BPS4]YABRINF = seg$(RESBODY,instr(1,RESBODY,"<AdditionalInformation>")+23,instr(1,RESBODY,"</AdditionalInformation>")-1)
  Endif

Affzo [M:BPS4]

  #DEW - 19/10 - Supplier Hotfix - Start
  [M:BPRS]CRN = seg$(RESBODY,instr(1,RESBODY,"<ABN>")+5,instr(1,RESBODY,"</ABN>")-1)
  Affzo [M:BPRS]CRN

  [M:BPS2]YARBGSTSTA = [M:BPS4]YARBGSTSTA
  Affzo [M:BPS2]YARBGSTSTA
  #DEW - 19/10 - Supplier Hotfix - End

  If [M:BPRS]BPRNAM() = ''
    If [M:BPS4]YABRBUS <> ''
      [M:BPRS]BPRNAM(0) = [M:BPS4]YABRBUS
    Else
      [M:BPRS]BPRNAM(0) = [M:BPS4]YABRCPY
    Endif
    Affzo [M:BPRS]BPRNAM(0)
  Endif

  If [M:BPRS]BPRNAM(1) = ''
     [M:BPRS]BPRNAM(1) = [M:BPS4]YABRCPY
     Affzo [M:BPRS]BPRNAM(1)
  Endif

  If [M:BPRS]YLEGNAM = ''
    [M:BPRS]YLEGNAM = [M:BPS4]YABRCPY
    Affzo [M:BPRS]YLEGNAM
  Endif

End

$NO
  #clear the screen
  zonsui = "[M:BPRS]BPSNUM"

Endif

Return

Funprog REPLACE(STR, OLD, NEW)
    Value Clbfile STR()
    Value Char OLD()
    Value Char NEW()
    Local Integer LENOLD
    Local Integer LENNEW

    #length of string to substitute
    LENOLD= len(OLD)
    #length of string that will substitute OLD string
    LENNEW= len(NEW)

    If LENOLD<=0 or LENOLD>len(STR)
        #the string to substitute is empty or it is longer than initial string, so we do nothing
        End STR
    Endif

    Local Integer INDEX
    Local Integer INDEXSTART

    #We search the string to substitute
    INDEX=instr(1,STR,OLD)

    While INDEX>0
        #INDEX>0 this means that we have found an occurrence of OLD
        #We substitute OLD occurrence with the NEW string
        STR =left$(STR, INDEX-1) + NEW + right$(STR, INDEX+LENOLD)

        #We calc the index to which the NEW string just inserted ends
        INDEXSTART=INDEX+LENNEW

        #We search the string to substitute starting from the end of last found occurrence
        INDEX=instr(INDEXSTART,STR,OLD)
    Wend
End STR

Funprog REPLACESTR(STR, OLD, NEW)
    Value Char STR()
    Value Char OLD()
    Value Char NEW()

    Local Char RET(250)
    Local Clbfile STRCLB(1)
    STRCLB = STR
    RET = func REPLACE(STRCLB, OLD, NEW)
End RET

