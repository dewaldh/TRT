#<AdxTL>@(#)0.0.0.0 $Revision$Class Content type 
# Supervisor
## ACLA-CLASSE ## ATYPEPRO
# 2018-08-27 12:23:43 445


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : COD Code ( Field A 10)
####################################################################

$SET_COD
If [L]_AOLDVAL<>this.COD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COD
 Gosub PROPAGATE_COD
Endif
Return

$INIT_COD
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "COD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COD
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "COD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COD
[L]CURPRO = "COD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COD
[L]CURPRO = "COD"
Return

$_AOTHERS_COD
[L]CURPRO = "COD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COD
[L]CURPRO = "COD"
Return

$PROPAGATE_COD
this.isReadonly = 0
[L]CURPRO = "COD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COD
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "COD"
$_LNKPRO_COD
Return


####################################################################
# 2 : INTIT Description ( Field ATX)
####################################################################

$GET_INTIT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "INTIT"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTIT
If [L]_AOLDVAL<>this.INTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTIT
 Gosub PROPAGATE_INTIT
Endif
Return

$INIT_INTIT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "INTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTIT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "INTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTIT
[L]CURPRO = "INTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTIT
[L]CURPRO = "INTIT"
Return

$_AOTHERS_INTIT
[L]CURPRO = "INTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTIT
[L]CURPRO = "INTIT"
Return

$PROPAGATE_INTIT
this.isReadonly = 0
[L]CURPRO = "INTIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTIT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "INTIT"
$_LNKPRO_INTIT
Return


####################################################################
# 3 : STDFLG Standard ( Field Local menu number 1)
####################################################################

$SET_STDFLG
If [L]_AOLDVAL<>this.STDFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STDFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STDFLG
 Gosub PROPAGATE_STDFLG
Endif
Return

$INIT_STDFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "STDFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.STDFLG=0 and fmet this.AGETATTRIBUTE("STDFLG","$isMandatory")="true"
 this.STDFLG = 1
Endif
Return
 
$CONTROL_STDFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "STDFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STDFLG
[L]CURPRO = "STDFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STDFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STDFLG
[L]CURPRO = "STDFLG"
If this.STDFLG<0 or this.STDFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.STDFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_STDFLG
[L]CURPRO = "STDFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STDFLG
[L]CURPRO = "STDFLG"
Return

$PROPAGATE_STDFLG
this.isReadonly = 0
[L]CURPRO = "STDFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STDFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "STDFLG"
$_LNKPRO_STDFLG
Return


####################################################################
# 4 : CODACT Activity code ( Field ACV 5)
####################################################################

$SET_CODACT
If [L]_AOLDVAL<>this.CODACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODACT
 Gosub PROPAGATE_CODACT
Endif
Return

$INIT_CODACT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CODACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODACT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CODACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODACT
[L]CURPRO = "CODACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODACT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>vireblc(format$("KTD:5B",this.CODACT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACV.ACTRLREF(this,"CODACT",this.CODACT,this.CODACT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODACT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODACT
[L]CURPRO = "CODACT"
Return

$PROPAGATE_CODACT
this.isReadonly = 0
[L]CURPRO = "CODACT"
Gosub _LNKPRO_CODACT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODACT
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CODACT"
$_LNKPRO_CODACT
If vireblc(this.CODACT,2)<>""
 # Link ACTIV
 Local File ACTIV [WACV]
 Read [F:WACV]CODACT = this.CODACT
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WACV]LIBACT & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODACT","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WACV]
Endif
Return


####################################################################
# 5 : MODULE Module ( Field Local menu number 14)
####################################################################

$SET_MODULE
If [L]_AOLDVAL<>this.MODULE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODULE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODULE
 Gosub PROPAGATE_MODULE
Endif
Return

$INIT_MODULE
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "MODULE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MODULE=0 and fmet this.AGETATTRIBUTE("MODULE","$isMandatory")="true"
 this.MODULE = 1
Endif
Return
 
$CONTROL_MODULE
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "MODULE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODULE
[L]CURPRO = "MODULE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODULE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODULE
[L]CURPRO = "MODULE"
If this.MODULE<0 or this.MODULE>len(mess(0,14,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"14 ->"-num$(this.MODULE)-mess(99,123,1)):  Return : # Local menu "14 -> Invalid option
Endif
Return

$_AOTHERS_MODULE
[L]CURPRO = "MODULE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODULE
[L]CURPRO = "MODULE"
Return

$PROPAGATE_MODULE
this.isReadonly = 0
[L]CURPRO = "MODULE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODULE
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "MODULE"
$_LNKPRO_MODULE
Return


####################################################################
# 6 : PROTYP Prototype type ( Field A 100)
####################################################################

$SET_PROTYP
If [L]_AOLDVAL<>this.PROTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PROTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PROTYP
 Gosub PROPAGATE_PROTYP
Endif
Return

$INIT_PROTYP
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "PROTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PROTYP
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "PROTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PROTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PROTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PROTYP
[L]CURPRO = "PROTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PROTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PROTYP
[L]CURPRO = "PROTYP"
Return

$_AOTHERS_PROTYP
[L]CURPRO = "PROTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PROTYP
[L]CURPRO = "PROTYP"
Return

$PROPAGATE_PROTYP
this.isReadonly = 0
[L]CURPRO = "PROTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PROTYP
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "PROTYP"
$_LNKPRO_PROTYP
Return


####################################################################
# 7 : PREFLG Specifiable ( Field Local menu number 1)
####################################################################

$SET_PREFLG
If [L]_AOLDVAL<>this.PREFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PREFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PREFLG
 Gosub PROPAGATE_PREFLG
Endif
Return

$INIT_PREFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "PREFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PREFLG=0 and fmet this.AGETATTRIBUTE("PREFLG","$isMandatory")="true"
 this.PREFLG = 1
Endif
Return
 
$CONTROL_PREFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "PREFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PREFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PREFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PREFLG
[L]CURPRO = "PREFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PREFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PREFLG
[L]CURPRO = "PREFLG"
If this.PREFLG<0 or this.PREFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.PREFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_PREFLG
[L]CURPRO = "PREFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PREFLG
[L]CURPRO = "PREFLG"
Return

$PROPAGATE_PREFLG
this.isReadonly = 0
[L]CURPRO = "PREFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PREFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "PREFLG"
$_LNKPRO_PREFLG
Return


####################################################################
# 8 : TYPTYP Internal type ( Field Local menu number 30)
####################################################################

$SET_TYPTYP
If [L]_AOLDVAL<>this.TYPTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPTYP
 Gosub PROPAGATE_TYPTYP
Endif
Return

$INIT_TYPTYP
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "TYPTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPTYP=0 and fmet this.AGETATTRIBUTE("TYPTYP","$isMandatory")="true"
 this.TYPTYP = 1
Endif
Return
 
$CONTROL_TYPTYP
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "TYPTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPTYP
[L]CURPRO = "TYPTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPTYP
[L]CURPRO = "TYPTYP"
If this.TYPTYP<0 or this.TYPTYP>len(mess(0,30,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"30 ->"-num$(this.TYPTYP)-mess(99,123,1)):  Return : # Local menu "30 -> Invalid option
Endif
Return

$_AOTHERS_TYPTYP
[L]CURPRO = "TYPTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPTYP
[L]CURPRO = "TYPTYP"
Return

$PROPAGATE_TYPTYP
this.isReadonly = 0
[L]CURPRO = "TYPTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPTYP
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "TYPTYP"
$_LNKPRO_TYPTYP
Return


####################################################################
# 9 : LISFLG List ( Field Local menu number 1)
####################################################################

$SET_LISFLG
If [L]_AOLDVAL<>this.LISFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LISFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LISFLG
 Gosub PROPAGATE_LISFLG
Endif
Return

$INIT_LISFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "LISFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LISFLG=0 and fmet this.AGETATTRIBUTE("LISFLG","$isMandatory")="true"
 this.LISFLG = 1
Endif
Return
 
$CONTROL_LISFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "LISFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LISFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LISFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LISFLG
[L]CURPRO = "LISFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LISFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LISFLG
[L]CURPRO = "LISFLG"
If this.LISFLG<0 or this.LISFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.LISFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_LISFLG
[L]CURPRO = "LISFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LISFLG
[L]CURPRO = "LISFLG"
Return

$PROPAGATE_LISFLG
this.isReadonly = 0
[L]CURPRO = "LISFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LISFLG
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "LISFLG"
$_LNKPRO_LISFLG
Return


####################################################################
# 10 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 11 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 12 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 13 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 14 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ATYPEPRO
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




