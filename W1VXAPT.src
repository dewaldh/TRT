#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management VXAPT 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:06:58"
A_USER  = "ADMIN"
A_STAMP = "20180326130658"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask VXAPT [XAPT]
Gosub HORODAT
Local Inpbox "VXAPT" From GFONCTION At A_STAMP With A_WINDPREV Mask [XAPT] As [SIM_]
Grizo [XAPT]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [XAPT]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=64 : Y1(0)=1 : Y2(0)=16
Return

$ON_WFCY
Onevent INIT_AREA Call D_WFCY(zc) From W1VXAPT
Return

Subprog D_WFCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]WFCY,indice)=0
 VALEUR = mess(498,197,1)-GXAFCY
Endif
Gosub _AFF
End

$ON_WMILNUM
Onevent INIT_AREA Call D_WMILNUM(zc) From W1VXAPT
Return

Subprog D_WMILNUM(VALEUR)
Variable Char    VALEUR()
If varinit([M]WMILNUM,indice)=0
 VALEUR = mess(681,197,1)
Endif
Gosub _AFF
End

$ON_MILNUM
Onevent CONTROL Call C_MILNUM(zc) From W1VXAPT
Onevent AFTER_CHANGE Gosub AMM_MILNUM From W1VXAPT
Onevent BEFORE_INPUT Call AS_MILNUM(zc) From W1VXAPT
Return

Subprog AS_MILNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_MILNUM(zc) From W1VXAPT
Gosub _AFF
End

Subprog C_MILNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VXACTRBTS
 Call VXACTRMFG(VALEUR,62) From VXACTRTRS
 If mkstat : GERR = 1 : GZONE = "MILNUM" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_MILNUM
Call AM_MILNUM(zc)
If !mkstat & GOBJET
 zoncou = "MILNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MILNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_MILNUM(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "MILNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_MILNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VXAMFGTRS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VXAMFGTRS"
 PARMSK(1) = "62"
 Call S_TAB_CHAR(VALEUR,PARMSK,"VXAMFGTRS","VXASELTRS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUM
Onevent INIT_AREA Call D_WMFGNUM(zc) From W1VXAPT
Return

Subprog D_WMFGNUM(VALEUR)
Variable Char    VALEUR()
If varinit([M]WMFGNUM,indice)=0
 VALEUR = mess(699,197,1)
Endif
Gosub _AFF
End

$ON_MFGNUM
Onevent CONTROL Call C_MFGNUM(zc) From W1VXAPT
Onevent BEFORE_INPUT Call AS_MFGNUM(zc) From W1VXAPT
Return

Subprog AS_MFGNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_MFGNUM(zc) From W1VXAPT
Gosub _AFF
End

Subprog C_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_MFGNUM(VALEUR) From VXAPT
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "4"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WITMREF
Onevent INIT_AREA Call D_WITMREF(zc) From W1VXAPT
Return

Subprog D_WITMREF(VALEUR)
Variable Char    VALEUR()
If varinit([M]WITMREF,indice)=0
 VALEUR = mess(80,197,1)
Endif
Gosub _AFF
End

$ON_ITMREF
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1VXAPT
Onevent CONTROL Call C_ITMREF(zc) From W1VXAPT
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1VXAPT
Return

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_ITMREF(VALEUR) From VXAPT
If mkstat=2
 [M]ITMREF(INDIC) = VALEUR
 Affzo ITMREF(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1VXAPT
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ITMREF(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action INIZONENT
Call INIZONENT(VALEUR,"XAPT",[M:XAPT]FCY,"",0,"US",0,[M:XAPT]TRSTYP
&,[F:BTS]TRSCOD,[M]MFGNUM,3,1) From STKECR
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call AM_ITMREF(VALEUR) From VXAPT
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITMMBI2
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITMMBI2"
 PARMSK(1) = [M]FCY
 PARMSK(2) = [M]MFGNUM
 PARMSK(3) = "1"
 PARMSK(4) = num$([M]MFGLIN)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITMMBI2","MFGSELLIB","") From GACTION
 [M]MFGLIN = val(PARMSK(4))
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WUOMCPLQTY
Onevent INIT_AREA Call D_WUOMCPLQTY(zc) From W1VXAPT
Return

Subprog D_WUOMCPLQTY(VALEUR)
Variable Char    VALEUR()
If varinit([M]WUOMCPLQTY,indice)=0
 VALEUR = mess(677,197,1)
Endif
Gosub _AFF
End

$ON_UOMCPLQTY
Onevent BEFORE_AREA Gosub AV_UOMCPLQTY From W1VXAPT
Onevent AFTER_CHANGE Gosub AMM_UOMCPLQTY From W1VXAPT
Return

$AV_UOMCPLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]UOM,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]UOMCPLQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$AMM_UOMCPLQTY
Call AM_UOMCPLQTY(zc)
If !mkstat & GOBJET
 zoncou = "UOMCPLQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_UOMCPLQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_UOMCPLQTY(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "UOMCPLQTY" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WUOMSTA
Onevent INIT_AREA Call D_WUOMSTA(zc) From W1VXAPT
Return

Subprog D_WUOMSTA(VALEUR)
Variable Char    VALEUR()
If varinit([M]WUOMSTA,indice)=0
 VALEUR = mess(728,197,1)
Endif
Gosub _AFF
End

$ON_UOM
Onevent AFTER_CHANGE Gosub AMM_UOM From W1VXAPT
Onevent BEFORE_INPUT Call AS_UOM(zc) From W1VXAPT
Onevent CONTROL Call C_UOM(zc) From W1VXAPT
Return

Subprog AS_UOM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_UOM(zc) From W1VXAPT
Onkey 144 Titled GBOUTP Call P_UOM(zc) From W1VXAPT
Onkey 146 Titled GBOUTA Call SA_UOM(zc) From W1VXAPT
Gosub _AFF
End

Subprog C_UOM(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "UOM" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_UOM
Call AM_UOM(zc)
If !mkstat & GOBJET
 zoncou = "UOM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_UOM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_UOM(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "UOM" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_UOM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELUOMN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELUOMN"
 PARMSK(1) = "1"
 PARMSK(2) = "1"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELUOMN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_UOM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_UOM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1VXAPT
Onevent BEFORE_INPUT Call AS_STA(zc) From W1VXAPT
Return

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STA(zc) From W1VXAPT
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,[M]QUAFLG,0,0,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = [F:SRU]AUZSST
 PARMSK(2) = num$([M]QUAFLG)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WLOC
Onevent INIT_AREA Call D_WLOC(zc) From W1VXAPT
Return

Subprog D_WLOC(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOC,indice)=0
 VALEUR = mess(672,197,1)
Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1VXAPT
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1VXAPT
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STKSUGEMP
Call STKSUGEMP([M]WLOCSEQ,5,[M:MBI]TRSCOD,[M]FCY,[M]ITMREF,[M]UOM,[M]UOMCPLQTY,[M]STA
&,[M]LOCTYP,VALEUR,"",string$([M]STA="","S"),string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2'),"") From STKLOC
If mkstat=2
 [M]LOC(INDIC) = VALEUR
 Affzo LOC(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
If !mkstat
 ## Action STKCTREMP
 Call STKCTREMP([M]WLOCSEQ,5,[M:MBI]TRSCOD,[M]FCY,[M]ITMREF,[M]UOM,[M]UOMCPLQTY,[M]STA
& ,[M]LOCTYP,VALEUR,"",0,mkstat,GBIDD1,string$([M]STA="","S"),string$([F:BTS]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
& ,"") From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$ON_WLOT
Onevent INIT_AREA Call D_WLOT(zc) From W1VXAPT
Return

Subprog D_WLOT(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOT,indice)=0
 VALEUR = mess(43,197,1)
Endif
Gosub _AFF
End

$ON_LOT
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1VXAPT
Onevent CONTROL Call C_LOT(zc) From W1VXAPT
Onevent AFTER_CHANGE Gosub AMM_LOT From W1VXAPT
Return

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_LOT(VALEUR) From VXAPT
If mkstat=2
 [M]LOT(INDIC) = VALEUR
 Affzo LOT(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_LOT(zc) From W1VXAPT
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKCTRLOT
Call STKCTRLOT(VALEUR,"XAPT",0,[M]ITMREF,"",15,"",0
&,"",0,0,0,[M]FCY,"LOCTYP",[M]GESLOT) From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_LOT
Call AM_LOT(zc)
If !mkstat & GOBJET
 zoncou = "LOT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKAMLOT
Call STKAMLOT(VALEUR,"XAPT",0,[M]ITMREF,"SLO") From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call AM_LOT(VALEUR) From VXAPT
 If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOT"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M]FCY
 PARMSK(3) = "XAPT"
 PARMSK(4) = "0"
 PARMSK(5) = "1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELLOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WSLO
Onevent INIT_AREA Call D_WSLO(zc) From W1VXAPT
Return

Subprog D_WSLO(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSLO,indice)=0
 VALEUR = mess(456,197,1)
Endif
Gosub _AFF
End

$ON_SLO
Onevent CONTROL Call C_SLO(zc) From W1VXAPT
Onevent AFTER_CHANGE Gosub AMM_SLO From W1VXAPT
Return

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SLO(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_SLO
Call AM_SLO(zc)
If !mkstat & GOBJET
 zoncou = "SLO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SLO(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WSER
Onevent INIT_AREA Call D_WSER(zc) From W1VXAPT
Return

Subprog D_WSER(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSER,indice)=0
 VALEUR = mess(453,197,1)
Endif
Gosub _AFF
End

$ON_SERNUM
Onevent CONTROL Call C_SERNUM(zc) From W1VXAPT
Return

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSER
Call STKCTRSER(VALEUR,[M]ITMREF,0,0,[M]WSTOSEQ,5,15,""
&,0,0,"",0,0,0,"") From STKACT
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WSHLDAT
Onevent INIT_AREA Call D_WSHLDAT(zc) From W1VXAPT
Return

Subprog D_WSHLDAT(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSHLDAT,indice)=0
 VALEUR = mess(731,197,1)
Endif
Gosub _AFF
End

$ON_SHLDAT
Onevent BEFORE_INPUT Call AS_SHLDAT(zc) From W1VXAPT
Onevent CONTROL Call C_SHLDAT(zc) From W1VXAPT
Onevent BEFORE_AREA Gosub AV_SHLDAT From W1VXAPT
Return

$AV_SHLDAT
Chgfmt [M]SHLDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_SHLDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLDAT(VALEUR) From VXAPT
If mkstat=2
 [M]SHLDAT(INDIC) = VALEUR
 Affzo SHLDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SHLDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_SHLDAT(VALEUR) From VXAPT
If mkstat : GERR = 1 : GZONE = "SHLDAT" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WCLEFLG
Onevent INIT_AREA Call D_WCLEFLG(zc) From W1VXAPT
Return

Subprog D_WCLEFLG(VALEUR)
Variable Char    VALEUR()
If varinit([M]WCLEFLG,indice)=0
 VALEUR = mess(12,198,1)
Endif
Gosub _AFF
End

$ON_CLEFLG
Onevent INIT_AREA Call D_CLEFLG(zc) From W1VXAPT
Onevent BEFORE_INPUT Call AS_CLEFLG(zc) From W1VXAPT
Return

Subprog D_CLEFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CLEFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CLEFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FCY
Return

$ON_STU
Return

$ON_CPLQTY
Onevent BEFORE_AREA Gosub AV_CPLQTY From W1VXAPT
Return

$AV_CPLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_LOCTYP
Return

$ON_TCLCOD
Return

$ON_TRSTYP
Onevent INIT_AREA Call D_TRSTYP(zc) From W1VXAPT
Return

Subprog D_TRSTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP,indice)=0
 VALEUR = 5
Endif
Gosub _AFF
End

$ON_QUAFLG
Onevent INIT_AREA Call D_QUAFLG(zc) From W1VXAPT
Return

Subprog D_QUAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]QUAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


