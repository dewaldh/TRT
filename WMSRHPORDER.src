#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHPORDER PORDER
# 2018-08-27 12:41:24 150

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","PORDER","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PORDER [POH]
If filinfo(filpath("FIL","PORDERP","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PORDERP [POP]
If filinfo(filpath("FIL","PORDERQ","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PORDERQ [POQ]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CAL]
If filinfo(filpath("FIL","PVCRFOOT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PVCRFOOT [PVF]
If filinfo(filpath("FIL","PVCRVAT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PVCRVAT [PVV]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [PVFCAL]
Local File PORDER [POH_]
Local Char KEY_POH(120)(1..3)
Local Char KEY_POP(120)(1..3)
Local Char KEY_POQ(120)(1..3)
Local Char KEY_CAL(120)(1..3)
Local Char KEY_PVF(120)(1..3)
Local Char KEY_PVV(120)(1..3)
Local Char KEY_PVFCAL(120)(1..3)
#Empty keys :
KEY_POH(3) = ""
KEY_POP(3) = "+0+0"
KEY_POQ(3) = "+0+0"
KEY_CAL(3) = "+0++0+0++0"
KEY_PVF(3) = "+0+0"
KEY_PVV(3) = "+0+0"
KEY_PVFCAL(3) = "+0++0+0++0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [POH]
LogicClose File [POP]
LogicClose File [POQ]
LogicClose File [CAL]
LogicClose File [PVF]
LogicClose File [PVV]
LogicClose File [PVFCAL]
LogicClose File [POH_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [POH] With
& [POP]POP0~=[POH]POHNUM,
& [POQ]POQ0=[POP]POHNUM;[POP]POPLIN;[POP]POPSEQ,
& [CAL]CAL0='POP';0;[F:POP]POHNUM;[F:POP]POPLIN;[F:POP]POPSEQ;'';1,
& [PVF]PVF0=[POH]POHNUM;3,
& [PVV]PVV0=[POH]POHNUM;3,
& [PVFCAL]CAL0='PVF';3;[PVF]VCRNUM;0;[PVF]IND;'';1
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [POH] With
& [POP]POP0~=[POH]POHNUM,
& [POQ]POQ0=[POP]POHNUM;[POP]POPLIN;[POP]POPSEQ,
& [CAL]CAL0='POP';0;[F:POP]POHNUM;[F:POP]POPLIN;[F:POP]POPSEQ;'';1,
& [PVF]PVF0=[POH]POHNUM;3,
& [PVV]PVV0=[POH]POHNUM;3,
& [PVFCAL]CAL0='PVF';3;[PVF]VCRNUM;0;[PVF]IND;'';1
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_POH(2) = [F:POH]POHNUM
KEY_POP(2) = [F:POP]POHNUM+"+"+num$([F:POP]POPLIN)+"+"+num$([F:POP]POPSEQ)
KEY_POQ(2) = [F:POQ]POHNUM+"+"+num$([F:POQ]POPLIN)+"+"+num$([F:POQ]POQSEQ)
KEY_CAL(2) = [F:CAL]ABRFIC+"+"+num$([F:CAL]VCRTYP)+"+"+[F:CAL]VCRNUM+"+"+num$([F:CAL]VCRLIN)+"+"+num$([F:CAL]VCRSEQ)+"+"+[F:CAL]CPLCLE+"+"+num$([F:CAL]ANALIG)
KEY_PVF(2) = [F:PVF]VCRNUM+"+"+num$([F:PVF]VCRTYP)+"+"+num$([F:PVF]IND)
KEY_PVV(2) = [F:PVV]VCRNUM+"+"+num$([F:PVV]VCRTYP)+"+"+num$([F:PVV]IND)
KEY_PVFCAL(2) = [F:PVFCAL]ABRFIC+"+"+num$([F:PVFCAL]VCRTYP)+"+"+[F:PVFCAL]VCRNUM+"+"+num$([F:PVFCAL]VCRLIN)+"+"+num$([F:PVFCAL]VCRSEQ)+"+"+[F:PVFCAL]CPLCLE+"+"+num$([F:PVFCAL]ANALIG)

If (KEY_POH(2) <> KEY_POH(3)) & (KEY_POH(1) <> KEY_POH(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_PORDER(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:POH]
FINS = 1
Local Integer DIE_MAX:DIE_MAX0
CJ1=1
For CI1 = 0 To dim([F:POH]DIE)-1
 Break ([F:POH]DIE(CI1)="" & [F:POH]CCE(CI1)="")
 DIE_MAX+=1
 #Create a new instance
 INS.COL_DIE(CJ1) = NewInstance C_PORDER_COL_DIE(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.COL_DIE(CJ1).setaccessorEnabled = 0
 INS.COL_DIE(CJ1).DIE=[F:POH]DIE(CI1)
 INS.COL_DIE(CJ1).CCE=[F:POH]CCE(CI1)
 CJ1+=1
Next CI1
Local Integer BPOADDLIG_MAX:BPOADDLIG_MAX0
CJ1=1
For CI1 = 0 To dim([F:POH]BPOADDLIG)-1
 Break ([F:POH]BPOADDLIG(CI1)="")
 BPOADDLIG_MAX+=1
 #Create a new instance
 INS.L_BPOADDLIG(CJ1) = NewInstance C_PORDER_L_BPOADDLIG(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.L_BPOADDLIG(CJ1).setaccessorEnabled = 0
 INS.L_BPOADDLIG(CJ1).BPOADDLIG=[F:POH]BPOADDLIG(CI1)
 CJ1+=1
Next CI1
 KEY_POH(1) = KEY_POH(2)
Endif : # KEY_POH(1) <> KEY_POH(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"POHNUM":'          +'"'+escJson(INS.POHNUM)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"POHFCY":'         +'"'+escJson(INS.POHFCY)+'"'
Append ASND.DATA ,',"ORDREF":'         +'"'+escJson(INS.ORDREF)+'"'
Append ASND.DATA ,',"BPSNUM":'         +'"'+escJson(INS.BPSNUM)+'"'
Append ASND.DATA ,',"BPAADD":'         +'"'+escJson(INS.BPAADD)+'"'
Append ASND.DATA ,',"POSCOD":'         +'"'+escJson(INS.POSCOD)+'"'
Append ASND.DATA ,',"CTY":'            +'"'+escJson(INS.CTY)+'"'
Append ASND.DATA ,',"SAT":'            +'"'+escJson(INS.SAT)+'"'
Append ASND.DATA ,',"CRY":'            +'"'+escJson(INS.CRY)+'"'
Append ASND.DATA ,',"CRYNAM":'         +'"'+escJson(INS.CRYNAM)+'"'
Append ASND.DATA ,',"BPOADD":'         +'"'+escJson(INS.BPOADD)+'"'
Append ASND.DATA ,',"BPOPOSCOD":'      +'"'+escJson(INS.BPOPOSCOD)+'"'
Append ASND.DATA ,',"BPOCTY":'         +'"'+escJson(INS.BPOCTY)+'"'
Append ASND.DATA ,',"BPOSAT":'         +'"'+escJson(INS.BPOSAT)+'"'
Append ASND.DATA ,',"BPOCRY":'         +'"'+escJson(INS.BPOCRY)+'"'
Append ASND.DATA ,',"BPOCRYNAM":'      +'"'+escJson(INS.BPOCRYNAM)+'"'
Append ASND.DATA ,',"INVFCY":'         +'"'+escJson(INS.INVFCY)+'"'
Append ASND.DATA ,',"RCPFCY":'         +'"'+escJson(INS.RCPFCY)+'"'
Append ASND.DATA ,',"PTE":'            +'"'+escJson(INS.PTE)+'"'
Append ASND.DATA ,',"DEP":'            +'"'+escJson(INS.DEP)+'"'
Append ASND.DATA ,',"MDL":'            +'"'+escJson(INS.MDL)+'"'
Append ASND.DATA ,',"BPTNUM":'         +'"'+escJson(INS.BPTNUM)+'"'
Append ASND.DATA ,',"BPRPAY":'         +'"'+escJson(INS.BPRPAY)+'"'
Append ASND.DATA ,',"BPAPAY":'         +'"'+escJson(INS.BPAPAY)+'"'
Append ASND.DATA ,',"BPSINV":'         +'"'+escJson(INS.BPSINV)+'"'
Append ASND.DATA ,',"BPAINV":'         +'"'+escJson(INS.BPAINV)+'"'
Append ASND.DATA ,',"EECICT":'         +'"'+escJson(INS.EECICT)+'"'
Append ASND.DATA ,',"ICTCTY":'         +'"'+escJson(INS.ICTCTY)+'"'
Append ASND.DATA ,',"GPGCOD":'         +'"'+escJson(INS.GPGCOD)+'"'
Append ASND.DATA ,',"FFWNUM":'         +'"'+escJson(INS.FFWNUM)+'"'
Append ASND.DATA ,',"FFWADD":'         +'"'+escJson(INS.FFWADD)+'"'
Append ASND.DATA ,',"EECNUM":'         +'"'+escJson(INS.EECNUM)+'"'
Append ASND.DATA ,',"BUY":'            +'"'+escJson(INS.BUY)+'"'
Append ASND.DATA ,',"LAN":'            +'"'+escJson(INS.LAN)+'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"VACBPR":'         +'"'+escJson(INS.VACBPR)+'"'
Append ASND.DATA ,',"TEX1":'           +'"'+escJson(INS.TEX1)+'"'
Append ASND.DATA ,',"TEX2":'           +'"'+escJson(INS.TEX2)+'"'
Append ASND.DATA ,',"OCNNUM":'         +'"'+escJson(INS.OCNNUM)+'"'
Append ASND.DATA ,',"OCNREM":'         +'"'+escJson(INS.OCNREM)+'"'
Append ASND.DATA ,',"ORIFCY":'         +'"'+escJson(INS.ORIFCY)+'"'
Append ASND.DATA ,',"STOFCY":'         +'"'+escJson(INS.STOFCY)+'"'
Append ASND.DATA ,',"SALFCY":'         +'"'+escJson(INS.SALFCY)+'"'
Append ASND.DATA ,',"BPCORD":'         +'"'+escJson(INS.BPCORD)+'"'
Append ASND.DATA ,',"DSPWEU":'         +'"'+escJson(INS.DSPWEU)+'"'
Append ASND.DATA ,',"DSPVOU":'         +'"'+escJson(INS.DSPVOU)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"COL_DIE":['
For CI1=1 To DIE_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"DIE":'             +'"'+escJson(INS.COL_DIE(CJ1).DIE)+'"'
 Append ASND.DATA ,',"CCE":'            +'"'+escJson(INS.COL_DIE(CJ1).CCE)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"L_BPOADDLIG":['
For CI1=1 To BPOADDLIG_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPOADDLIG":'       +'"'+escJson(INS.L_BPOADDLIG(CJ1).BPOADDLIG)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_POH(1),KEY_POP(1),KEY_POQ(1),KEY_CAL(1),KEY_PVF(1),KEY_PVV(1),KEY_PVFCAL(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:POH]POHNUM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From PORDER_CSTD
 Gosub METHODS From PORDER_CSTD
Gosub METHODS From PORDER_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="PORDER" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PORDER")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PORDER")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,10448)+'"'
Append WCLOB,',"$url":"{$baseUrl}/PORDER'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{POHFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,10448)+' {$key}"'
Append WCLOB,',"$key":"{POHNUM}"'
Append WCLOB,',"$url":"{$baseUrl}/PORDER('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'PORDER.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"POHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2212)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"POHFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2550)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ORDREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2567)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"BPSNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3680)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1499)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"POSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"CTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,251)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"SAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,9606)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"CRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,263)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CRYNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1579)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"BPOADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7855)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPOPOSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPOCTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,251)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"BPOSAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,9606)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"BPOCRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,263)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"BPOCRYNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1579)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"INVFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6073)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"RCPFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2552)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PTE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3624)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"DEP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1669)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"MDL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1722)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPTNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1434)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPRPAY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5365)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAPAY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26610)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPSINV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8340)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAINV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4450)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"EECICT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2523)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ICTCTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26526)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"GPGCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"FFWNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3718)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"FFWADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26527)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"EECNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1584)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"BUY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1752)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"LAN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1505)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"VACBPR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3673)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TEX1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"TEX2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"OCNNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2588)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"OCNREM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3712)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"ORIFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8029)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"STOFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3676)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"SALFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5060)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPCORD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4430)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"DSPWEU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2084)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"DSPVOU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2082)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"COL_DIE":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":20'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"DIE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,29327)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CCE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3997)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"L_BPOADDLIG":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":3'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPOADDLIG":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1578)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":50'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/PORDER('+"'"+'{$key}'+"'"+')?representation=PORDER.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHPORDERB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHPORDERB
End RES


