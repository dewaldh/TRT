#<AdxTL>@(#)0.0.0.0 $Revision$Class Table dictionary
# Sage X3 supervisor
## ACLA-CLASSE ## ATABLE
# 2018-06-20 06:34:25 265


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : ABRFIC Table abbreviation ( Field ABR 8)
####################################################################

$SET_ABRFIC
If [L]_AOLDVAL<>this.ABRFIC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ABRFIC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ABRFIC
 Gosub PROPAGATE_ABRFIC
Endif
Return

$INIT_ABRFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "ABRFIC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ABRFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "ABRFIC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ABRFIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ABRFIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ABRFIC
[L]CURPRO = "ABRFIC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ABRFIC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ABRFIC
[L]CURPRO = "ABRFIC"
If vireblc(this.ABRFIC,2)<>vireblc(format$("KTD:A7u",this.ABRFIC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ABRFIC
[L]CURPRO = "ABRFIC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ABRFIC
[L]CURPRO = "ABRFIC"
Return

$PROPAGATE_ABRFIC
this.isReadonly = 0
[L]CURPRO = "ABRFIC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ABRFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "ABRFIC"
$_LNKPRO_ABRFIC
Return

$_ALOADATTRIBUTE_ABRFIC
[L]ASTATUS = fmet this.ASETATTRIBUTE("ABRFIC","$isMandatory","true")
Return


####################################################################
# 2 : CODACT Activity code ( Field ACV 5)
####################################################################

$GET_CODACT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODACT"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_CODACT
If [L]_AOLDVAL<>this.CODACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODACT
 Gosub PROPAGATE_CODACT
Endif
Return

$INIT_CODACT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODACT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODACT
[L]CURPRO = "CODACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODACT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>vireblc(format$("KTD:5B",this.CODACT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACV.ACTRLREF(this,"CODACT",this.CODACT,this.CODACT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODACT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODACT
[L]CURPRO = "CODACT"
Return

$PROPAGATE_CODACT
this.isReadonly = 0
[L]CURPRO = "CODACT"
Gosub _LNKPRO_CODACT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODACT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODACT"
$_LNKPRO_CODACT
If vireblc(this.CODACT,2)<>""
 # Link ACTIV
 Local File ACTIV [WACV]
 Read [F:WACV]CODACT = this.CODACT
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WACV]LIBACT & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODACT","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WACV]
Endif
Return


####################################################################
# 3 : CODFIC Table code ( Field ATB 12)
####################################################################

$SET_CODFIC
If [L]_AOLDVAL<>this.CODFIC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODFIC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODFIC
 Gosub PROPAGATE_CODFIC
Endif
Return

$INIT_CODFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODFIC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODFIC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODFIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODFIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODFIC
[L]CURPRO = "CODFIC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODFIC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODFIC
[L]CURPRO = "CODFIC"
If vireblc(this.CODFIC,2)<>vireblc(format$("KTD:A11B",this.CODFIC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODFIC
[L]CURPRO = "CODFIC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODFIC
[L]CURPRO = "CODFIC"
Return

$PROPAGATE_CODFIC
this.isReadonly = 0
[L]CURPRO = "CODFIC"
Gosub _LNKPRO_CODFIC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CODFIC"
$_LNKPRO_CODFIC
If vireblc(this.CODFIC,2)<>""
 # Link ATABLE
 Local File ATABLE [WATB]
 Read [F:WATB]CODFIC = this.CODFIC
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WATB]INTITFIC & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODFIC","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WATB]
Endif
Return

$_ALOADATTRIBUTE_CODFIC
[L]ASTATUS = fmet this.ASETATTRIBUTE("CODFIC","$isMandatory","true")
Return


####################################################################
# 4 : CRE Copy type ( Field Local menu number 25)
####################################################################

$SET_CRE
If [L]_AOLDVAL<>this.CRE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRE
 Gosub PROPAGATE_CRE
Endif
Return

$INIT_CRE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CRE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CRE=0 and fmet this.AGETATTRIBUTE("CRE","$isMandatory")="true"
 this.CRE = 1
Endif
Return
 
$CONTROL_CRE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CRE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRE
[L]CURPRO = "CRE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRE
[L]CURPRO = "CRE"
If this.CRE<0 or this.CRE>len(mess(0,25,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"25 ->"-num$(this.CRE)-mess(99,123,1)):  Return : # Local menu "25 -> Invalid option
Endif
Return

$_AOTHERS_CRE
[L]CURPRO = "CRE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRE
[L]CURPRO = "CRE"
Return

$PROPAGATE_CRE
this.isReadonly = 0
[L]CURPRO = "CRE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CRE"
$_LNKPRO_CRE
Return


####################################################################
# 6 : UPDFLG Validated flag ( Field Local menu number 1)
####################################################################

$SET_UPDFLG
If [L]_AOLDVAL<>this.UPDFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDFLG
 Gosub PROPAGATE_UPDFLG
Endif
Return

$INIT_UPDFLG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "UPDFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.UPDFLG=0 and fmet this.AGETATTRIBUTE("UPDFLG","$isMandatory")="true"
 this.UPDFLG = 1
Endif
Return
 
$CONTROL_UPDFLG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "UPDFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDFLG
[L]CURPRO = "UPDFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDFLG
[L]CURPRO = "UPDFLG"
If this.UPDFLG<0 or this.UPDFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.UPDFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_UPDFLG
[L]CURPRO = "UPDFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDFLG
[L]CURPRO = "UPDFLG"
Return

$PROPAGATE_UPDFLG
this.isReadonly = 0
[L]CURPRO = "UPDFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDFLG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "UPDFLG"
$_LNKPRO_UPDFLG
Return


####################################################################
# 7 : INTIT Description field ( Field AVA 12)
####################################################################

$SET_INTIT
If [L]_AOLDVAL<>this.INTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTIT
 Gosub PROPAGATE_INTIT
Endif
Return

$INIT_INTIT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTIT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTIT
[L]CURPRO = "INTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTIT
[L]CURPRO = "INTIT"
If vireblc(this.INTIT,2)<>vireblc(format$("KTD:A11u",this.INTIT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INTIT
[L]CURPRO = "INTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTIT
[L]CURPRO = "INTIT"
Return

$PROPAGATE_INTIT
this.isReadonly = 0
[L]CURPRO = "INTIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTIT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTIT"
$_LNKPRO_INTIT
Return


####################################################################
# 8 : INTITC Short title field ( Field AVA 12)
####################################################################

$SET_INTITC
If [L]_AOLDVAL<>this.INTITC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTITC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTITC
 Gosub PROPAGATE_INTITC
Endif
Return

$INIT_INTITC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTITC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTITC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTITC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTITC
[L]CURPRO = "INTITC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTITC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTITC
[L]CURPRO = "INTITC"
If vireblc(this.INTITC,2)<>vireblc(format$("KTD:A11u",this.INTITC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INTITC
[L]CURPRO = "INTITC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTITC
[L]CURPRO = "INTITC"
Return

$PROPAGATE_INTITC
this.isReadonly = 0
[L]CURPRO = "INTITC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTITC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITC"
$_LNKPRO_INTITC
Return


####################################################################
# 9 : INTITFIC Table title ( Field ATX)
####################################################################

$GET_INTITFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITFIC"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTITFIC
If [L]_AOLDVAL<>this.INTITFIC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTITFIC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTITFIC
 Gosub PROPAGATE_INTITFIC
Endif
Return

$INIT_INTITFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITFIC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTITFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITFIC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTITFIC              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTITFIC              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTITFIC
[L]CURPRO = "INTITFIC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTITFIC
[L]CURPRO = "INTITFIC"
Return

$_AOTHERS_INTITFIC
[L]CURPRO = "INTITFIC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTITFIC
[L]CURPRO = "INTITFIC"
Return

$PROPAGATE_INTITFIC
this.isReadonly = 0
[L]CURPRO = "INTITFIC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTITFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "INTITFIC"
$_LNKPRO_INTITFIC
Return


####################################################################
# 10 : MODULE Module ( Field Local menu number 14)
####################################################################

$SET_MODULE
If [L]_AOLDVAL<>this.MODULE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODULE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODULE
 Gosub PROPAGATE_MODULE
Endif
Return

$INIT_MODULE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "MODULE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MODULE=0 and fmet this.AGETATTRIBUTE("MODULE","$isMandatory")="true"
 this.MODULE = 1
Endif
Return
 
$CONTROL_MODULE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "MODULE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODULE
[L]CURPRO = "MODULE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODULE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODULE
[L]CURPRO = "MODULE"
If this.MODULE<0 or this.MODULE>len(mess(0,14,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"14 ->"-num$(this.MODULE)-mess(99,123,1)):  Return : # Local menu "14 -> Invalid option
Endif
Return

$_AOTHERS_MODULE
[L]CURPRO = "MODULE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODULE
[L]CURPRO = "MODULE"
Return

$PROPAGATE_MODULE
this.isReadonly = 0
[L]CURPRO = "MODULE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODULE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "MODULE"
$_LNKPRO_MODULE
Return


####################################################################
# 11 : SYMBOL Symbol field ( Field AVA 12)
####################################################################

$SET_SYMBOL
If [L]_AOLDVAL<>this.SYMBOL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SYMBOL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SYMBOL
 Gosub PROPAGATE_SYMBOL
Endif
Return

$INIT_SYMBOL
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "SYMBOL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SYMBOL
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "SYMBOL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SYMBOL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SYMBOL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SYMBOL
[L]CURPRO = "SYMBOL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SYMBOL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SYMBOL
[L]CURPRO = "SYMBOL"
If vireblc(this.SYMBOL,2)<>vireblc(format$("KTD:A11u",this.SYMBOL),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SYMBOL
[L]CURPRO = "SYMBOL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SYMBOL
[L]CURPRO = "SYMBOL"
Return

$PROPAGATE_SYMBOL
this.isReadonly = 0
[L]CURPRO = "SYMBOL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SYMBOL
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "SYMBOL"
$_LNKPRO_SYMBOL
Return


####################################################################
# 12 : NBENREG No. of records ( Field L 8)
####################################################################

$SET_NBENREG
If [L]_AOLDVAL<>this.NBENREG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBENREG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBENREG
 Gosub PROPAGATE_NBENREG
Endif
Return

$INIT_NBENREG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "NBENREG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBENREG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "NBENREG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBENREG               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBENREG               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBENREG
[L]CURPRO = "NBENREG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBENREG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBENREG
[L]CURPRO = "NBENREG"
Return

$_AOTHERS_NBENREG
[L]CURPRO = "NBENREG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBENREG
[L]CURPRO = "NBENREG"
Return

$PROPAGATE_NBENREG
this.isReadonly = 0
[L]CURPRO = "NBENREG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBENREG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "NBENREG"
$_LNKPRO_NBENREG
Return


####################################################################
# 13 : OPT Copy option ( Field Local menu number 26)
####################################################################

$SET_OPT
If [L]_AOLDVAL<>this.OPT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OPT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OPT
 Gosub PROPAGATE_OPT
Endif
Return

$INIT_OPT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "OPT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.OPT=0 and fmet this.AGETATTRIBUTE("OPT","$isMandatory")="true"
 this.OPT = 1
Endif
Return
 
$CONTROL_OPT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "OPT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OPT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OPT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OPT
[L]CURPRO = "OPT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OPT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OPT
[L]CURPRO = "OPT"
If this.OPT<0 or this.OPT>len(mess(0,26,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"26 ->"-num$(this.OPT)-mess(99,123,1)):  Return : # Local menu "26 -> Invalid option
Endif
Return

$_AOTHERS_OPT
[L]CURPRO = "OPT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OPT
[L]CURPRO = "OPT"
Return

$PROPAGATE_OPT
this.isReadonly = 0
[L]CURPRO = "OPT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OPT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "OPT"
$_LNKPRO_OPT
Return


####################################################################
# 14 : ZERO Reset to zero ( Field Local menu number 1)
####################################################################

$SET_ZERO
If [L]_AOLDVAL<>this.ZERO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ZERO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ZERO
 Gosub PROPAGATE_ZERO
Endif
Return

$INIT_ZERO
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "ZERO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ZERO=0 and fmet this.AGETATTRIBUTE("ZERO","$isMandatory")="true"
 this.ZERO = 1
Endif
Return
 
$CONTROL_ZERO
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "ZERO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ZERO                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ZERO                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ZERO
[L]CURPRO = "ZERO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ZERO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ZERO
[L]CURPRO = "ZERO"
If this.ZERO<0 or this.ZERO>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ZERO)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ZERO
[L]CURPRO = "ZERO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ZERO
[L]CURPRO = "ZERO"
Return

$PROPAGATE_ZERO
this.isReadonly = 0
[L]CURPRO = "ZERO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ZERO
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "ZERO"
$_LNKPRO_ZERO
Return


####################################################################
# 15 : STA Table type ( Field Local menu number 27)
####################################################################

$SET_STA
If [L]_AOLDVAL<>this.STA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STA
 Gosub PROPAGATE_STA
Endif
Return

$INIT_STA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "STA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.STA=0 and fmet this.AGETATTRIBUTE("STA","$isMandatory")="true"
 this.STA = 1
Endif
Return
 
$CONTROL_STA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "STA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STA
[L]CURPRO = "STA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STA
[L]CURPRO = "STA"
If this.STA<0 or this.STA>len(mess(0,27,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"27 ->"-num$(this.STA)-mess(99,123,1)):  Return : # Local menu "27 -> Invalid option
Endif
Return

$_AOTHERS_STA
[L]CURPRO = "STA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STA
[L]CURPRO = "STA"
Return

$PROPAGATE_STA
this.isReadonly = 0
[L]CURPRO = "STA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "STA"
$_LNKPRO_STA
Return


####################################################################
# 16 : TYPDLV Delivery type ( Field Local menu number 58)
####################################################################

$SET_TYPDLV
If [L]_AOLDVAL<>this.TYPDLV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPDLV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPDLV
 Gosub PROPAGATE_TYPDLV
Endif
Return

$INIT_TYPDLV
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPDLV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPDLV=0 and fmet this.AGETATTRIBUTE("TYPDLV","$isMandatory")="true"
 this.TYPDLV = 1
Endif
Return
 
$CONTROL_TYPDLV
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPDLV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPDLV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPDLV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPDLV
[L]CURPRO = "TYPDLV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPDLV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPDLV
[L]CURPRO = "TYPDLV"
If this.TYPDLV<0 or this.TYPDLV>len(mess(0,58,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"58 ->"-num$(this.TYPDLV)-mess(99,123,1)):  Return : # Local menu "58 -> Invalid option
Endif
Return

$_AOTHERS_TYPDLV
[L]CURPRO = "TYPDLV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPDLV
[L]CURPRO = "TYPDLV"
Return

$PROPAGATE_TYPDLV
this.isReadonly = 0
[L]CURPRO = "TYPDLV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPDLV
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPDLV"
$_LNKPRO_TYPDLV
Return


####################################################################
# 17 : TYPDBA Database type ( Field Local menu number 23)
####################################################################

$SET_TYPDBA
If [L]_AOLDVAL<>this.TYPDBA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPDBA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPDBA
 Gosub PROPAGATE_TYPDBA
Endif
Return

$INIT_TYPDBA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPDBA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPDBA=0 and fmet this.AGETATTRIBUTE("TYPDBA","$isMandatory")="true"
 this.TYPDBA = 1
Endif
Return
 
$CONTROL_TYPDBA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPDBA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPDBA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPDBA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPDBA
[L]CURPRO = "TYPDBA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPDBA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPDBA
[L]CURPRO = "TYPDBA"
If this.TYPDBA<0 or this.TYPDBA>len(mess(0,23,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"23 ->"-num$(this.TYPDBA)-mess(99,123,1)):  Return : # Local menu "23 -> Invalid option
Endif
Return

$_AOTHERS_TYPDBA
[L]CURPRO = "TYPDBA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPDBA
[L]CURPRO = "TYPDBA"
Return

$PROPAGATE_TYPDBA
this.isReadonly = 0
[L]CURPRO = "TYPDBA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPDBA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPDBA"
$_LNKPRO_TYPDBA
Return


####################################################################
# 18 : TYPFIC Table type ( Field Local menu number 39)
####################################################################

$SET_TYPFIC
If [L]_AOLDVAL<>this.TYPFIC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPFIC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPFIC
 Gosub PROPAGATE_TYPFIC
Endif
Return

$INIT_TYPFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPFIC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPFIC=0 and fmet this.AGETATTRIBUTE("TYPFIC","$isMandatory")="true"
 this.TYPFIC = 1
Endif
Return
 
$CONTROL_TYPFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPFIC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPFIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPFIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPFIC
[L]CURPRO = "TYPFIC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPFIC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPFIC
[L]CURPRO = "TYPFIC"
If this.TYPFIC<0 or this.TYPFIC>len(mess(0,39,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"39 ->"-num$(this.TYPFIC)-mess(99,123,1)):  Return : # Local menu "39 -> Invalid option
Endif
Return

$_AOTHERS_TYPFIC
[L]CURPRO = "TYPFIC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPFIC
[L]CURPRO = "TYPFIC"
Return

$PROPAGATE_TYPFIC
this.isReadonly = 0
[L]CURPRO = "TYPFIC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPFIC
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "TYPFIC"
$_LNKPRO_TYPFIC
Return


####################################################################
# 19 : FLG130 Format 130 ( Field Local menu number 1)
####################################################################

$SET_FLG130
If [L]_AOLDVAL<>this.FLG130
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLG130
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLG130
 Gosub PROPAGATE_FLG130
Endif
Return

$INIT_FLG130
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FLG130"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLG130=0 and fmet this.AGETATTRIBUTE("FLG130","$isMandatory")="true"
 this.FLG130 = 1
Endif
Return
 
$CONTROL_FLG130
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FLG130"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLG130                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLG130                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLG130
[L]CURPRO = "FLG130"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLG130=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLG130
[L]CURPRO = "FLG130"
If this.FLG130<0 or this.FLG130>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLG130)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLG130
[L]CURPRO = "FLG130"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLG130
[L]CURPRO = "FLG130"
Return

$PROPAGATE_FLG130
this.isReadonly = 0
[L]CURPRO = "FLG130"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLG130
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FLG130"
$_LNKPRO_FLG130
Return


####################################################################
# 20 : FICCFG Configuration file ( Field ATBFIC 1)
####################################################################

$GET_FICCFG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FICCFG"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_CLB("FICCFG",
& this.CODFIC
& ,[L]_CNT,this.FICCFG)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_FICCFG
If fmet this.AGETATTRIBUTE("FICCFG","$isLoaded")<>"true" or [L]_AOLDVAL<>this.FICCFG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FICCFG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("FICCFG","$isLoaded")<>"true" or [L]_AOLDVAL<>this.FICCFG
 Gosub PROPAGATE_FICCFG
Endif
Return

$INIT_FICCFG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FICCFG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FICCFG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FICCFG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FICCFG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FICCFG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FICCFG
[L]CURPRO = "FICCFG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.FICCFG)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FICCFG
[L]CURPRO = "FICCFG"
Return

$_AOTHERS_FICCFG
[L]CURPRO = "FICCFG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FICCFG
[L]CURPRO = "FICCFG"
Return

$PROPAGATE_FICCFG
this.isReadonly = 0
[L]CURPRO = "FICCFG"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FICCFG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FICCFG"
$_LNKPRO_FICCFG
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = func SUBATB.GET_CFGEXIST(this,"FICCFG",[L]_EXI,this.CODFIC)
[L]ASTATUS = fmet this.ASETATTRIBUTE("FICCFG","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Local Char _CNT(100)
[L]ASTATUS = func SUBATB.GET_CFGCNT(this,"FICCFG",[L]_CNT,this.CODFIC)
[L]ASTATUS = fmet this.ASETATTRIBUTE("FICCFG","$contentType",[L]_CNT)
Return


####################################################################
# 21 : AUDCRE Audit creation ( Field Local menu number 1)
####################################################################

$SET_AUDCRE
If [L]_AOLDVAL<>this.AUDCRE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUDCRE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUDCRE
 Gosub PROPAGATE_AUDCRE
Endif
Return

$INIT_AUDCRE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDCRE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUDCRE=0 and fmet this.AGETATTRIBUTE("AUDCRE","$isMandatory")="true"
 this.AUDCRE = 1
Endif
Return
 
$CONTROL_AUDCRE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDCRE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUDCRE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUDCRE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUDCRE
[L]CURPRO = "AUDCRE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUDCRE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUDCRE
[L]CURPRO = "AUDCRE"
If this.AUDCRE<0 or this.AUDCRE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUDCRE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUDCRE
[L]CURPRO = "AUDCRE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUDCRE
[L]CURPRO = "AUDCRE"
Return

$PROPAGATE_AUDCRE
this.isReadonly = 0
[L]CURPRO = "AUDCRE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUDCRE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDCRE"
$_LNKPRO_AUDCRE
Return


####################################################################
# 22 : AUDUPD Auudit modification ( Field Local menu number 1)
####################################################################

$SET_AUDUPD
If [L]_AOLDVAL<>this.AUDUPD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUDUPD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUDUPD
 Gosub PROPAGATE_AUDUPD
Endif
Return

$INIT_AUDUPD
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDUPD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUDUPD=0 and fmet this.AGETATTRIBUTE("AUDUPD","$isMandatory")="true"
 this.AUDUPD = 1
Endif
Return
 
$CONTROL_AUDUPD
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDUPD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUDUPD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUDUPD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUDUPD
[L]CURPRO = "AUDUPD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUDUPD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUDUPD
[L]CURPRO = "AUDUPD"
If this.AUDUPD<0 or this.AUDUPD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUDUPD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUDUPD
[L]CURPRO = "AUDUPD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUDUPD
[L]CURPRO = "AUDUPD"
Return

$PROPAGATE_AUDUPD
this.isReadonly = 0
[L]CURPRO = "AUDUPD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUDUPD
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDUPD"
$_LNKPRO_AUDUPD
Return


####################################################################
# 23 : AUDDEL Audit deletion ( Field Local menu number 1)
####################################################################

$SET_AUDDEL
If [L]_AOLDVAL<>this.AUDDEL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUDDEL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUDDEL
 Gosub PROPAGATE_AUDDEL
Endif
Return

$INIT_AUDDEL
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDDEL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUDDEL=0 and fmet this.AGETATTRIBUTE("AUDDEL","$isMandatory")="true"
 this.AUDDEL = 1
Endif
Return
 
$CONTROL_AUDDEL
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDDEL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUDDEL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUDDEL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUDDEL
[L]CURPRO = "AUDDEL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUDDEL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUDDEL
[L]CURPRO = "AUDDEL"
If this.AUDDEL<0 or this.AUDDEL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUDDEL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUDDEL
[L]CURPRO = "AUDDEL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUDDEL
[L]CURPRO = "AUDDEL"
Return

$PROPAGATE_AUDDEL
this.isReadonly = 0
[L]CURPRO = "AUDDEL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUDDEL
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDDEL"
$_LNKPRO_AUDDEL
Return


####################################################################
# 24 : AUDWRK Workflow ( Field Local menu number 1)
####################################################################

$SET_AUDWRK
If [L]_AOLDVAL<>this.AUDWRK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUDWRK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUDWRK
 Gosub PROPAGATE_AUDWRK
Endif
Return

$INIT_AUDWRK
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDWRK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUDWRK=0 and fmet this.AGETATTRIBUTE("AUDWRK","$isMandatory")="true"
 this.AUDWRK = 1
Endif
Return
 
$CONTROL_AUDWRK
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDWRK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUDWRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUDWRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUDWRK
[L]CURPRO = "AUDWRK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUDWRK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUDWRK
[L]CURPRO = "AUDWRK"
If this.AUDWRK<0 or this.AUDWRK>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUDWRK)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUDWRK
[L]CURPRO = "AUDWRK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUDWRK
[L]CURPRO = "AUDWRK"
Return

$PROPAGATE_AUDWRK
this.isReadonly = 0
[L]CURPRO = "AUDWRK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUDWRK
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDWRK"
$_LNKPRO_AUDWRK
Return


####################################################################
# 25 : AUDBI Audit bl ( Field Local menu number 1)
####################################################################

$SET_AUDBI
If [L]_AOLDVAL<>this.AUDBI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUDBI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUDBI
 Gosub PROPAGATE_AUDBI
Endif
Return

$INIT_AUDBI
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDBI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUDBI=0 and fmet this.AGETATTRIBUTE("AUDBI","$isMandatory")="true"
 this.AUDBI = 1
Endif
Return
 
$CONTROL_AUDBI
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDBI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUDBI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUDBI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUDBI
[L]CURPRO = "AUDBI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUDBI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUDBI
[L]CURPRO = "AUDBI"
If this.AUDBI<0 or this.AUDBI>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUDBI)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUDBI
[L]CURPRO = "AUDBI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUDBI
[L]CURPRO = "AUDBI"
Return

$PROPAGATE_AUDBI
this.isReadonly = 0
[L]CURPRO = "AUDBI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUDBI
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDBI"
$_LNKPRO_AUDBI
Return


####################################################################
# 26 : AUDCLE Key ( Field ANX 10)
####################################################################

$SET_AUDCLE
If [L]_AOLDVAL<>this.AUDCLE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUDCLE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUDCLE
 Gosub PROPAGATE_AUDCLE
Endif
Return

$INIT_AUDCLE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDCLE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUDCLE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDCLE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUDCLE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUDCLE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUDCLE
[L]CURPRO = "AUDCLE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.AUDCLE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUDCLE
[L]CURPRO = "AUDCLE"
If vireblc(this.AUDCLE,2)<>vireblc(format$("K:10c",this.AUDCLE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_AUDCLE
[L]CURPRO = "AUDCLE"
[L]ASTATUS =  func LNKSUB.CTLINDTAB2_SYR(this,"AUDCLE",this.AUDCLE,this.CODFIC)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUDCLE
[L]CURPRO = "AUDCLE"
Return

$PROPAGATE_AUDCLE
this.isReadonly = 0
[L]CURPRO = "AUDCLE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUDCLE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "AUDCLE"
$_LNKPRO_AUDCLE
Return


####################################################################
# 27 : GENTRA Text generation ( Field Local menu number 1)
####################################################################

$SET_GENTRA
If [L]_AOLDVAL<>this.GENTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GENTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GENTRA
 Gosub PROPAGATE_GENTRA
Endif
Return

$INIT_GENTRA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "GENTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GENTRA=0 and fmet this.AGETATTRIBUTE("GENTRA","$isMandatory")="true"
 this.GENTRA = 1
Endif
Return
 
$CONTROL_GENTRA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "GENTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GENTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GENTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GENTRA
[L]CURPRO = "GENTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GENTRA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GENTRA
[L]CURPRO = "GENTRA"
If this.GENTRA<0 or this.GENTRA>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.GENTRA)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_GENTRA
[L]CURPRO = "GENTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GENTRA
[L]CURPRO = "GENTRA"
Return

$PROPAGATE_GENTRA
this.isReadonly = 0
[L]CURPRO = "GENTRA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GENTRA
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "GENTRA"
$_LNKPRO_GENTRA
Return


####################################################################
# 28 : SECURE Open access ( Field Local menu number 1)
####################################################################

$SET_SECURE
If [L]_AOLDVAL<>this.SECURE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SECURE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SECURE
 Gosub PROPAGATE_SECURE
Endif
Return

$INIT_SECURE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "SECURE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SECURE=0 and fmet this.AGETATTRIBUTE("SECURE","$isMandatory")="true"
 this.SECURE = 1
Endif
Return
 
$CONTROL_SECURE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "SECURE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SECURE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SECURE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SECURE
[L]CURPRO = "SECURE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SECURE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SECURE
[L]CURPRO = "SECURE"
If this.SECURE<0 or this.SECURE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SECURE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SECURE
[L]CURPRO = "SECURE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SECURE
[L]CURPRO = "SECURE"
Return

$PROPAGATE_SECURE
this.isReadonly = 0
[L]CURPRO = "SECURE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SECURE
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "SECURE"
$_LNKPRO_SECURE
Return


####################################################################
# 29 : FLGLEG Copy legislation ( Field Local menu number 1)
####################################################################

$SET_FLGLEG
If [L]_AOLDVAL<>this.FLGLEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGLEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGLEG
 Gosub PROPAGATE_FLGLEG
Endif
Return

$INIT_FLGLEG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FLGLEG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGLEG=0 and fmet this.AGETATTRIBUTE("FLGLEG","$isMandatory")="true"
 this.FLGLEG = 1
Endif
Return
 
$CONTROL_FLGLEG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FLGLEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGLEG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGLEG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGLEG
[L]CURPRO = "FLGLEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGLEG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGLEG
[L]CURPRO = "FLGLEG"
If this.FLGLEG<0 or this.FLGLEG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGLEG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGLEG
[L]CURPRO = "FLGLEG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGLEG
[L]CURPRO = "FLGLEG"
Return

$PROPAGATE_FLGLEG
this.isReadonly = 0
[L]CURPRO = "FLGLEG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGLEG
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "FLGLEG"
$_LNKPRO_FLGLEG
Return


####################################################################
# 30 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0ATABLE
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return




