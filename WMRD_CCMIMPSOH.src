#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Sales orders
# Supervisor
## CRUD-CLASSE ## CCMIMPSOH
# 2018-08-27 13:12:12 790


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(CCMIMPSOH,ASTATUS)
Variable Instance CCMIMPSOH Using R_CCMIMPSOH
Variable Integer ASTATUS

If CCMIMPSOH = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPSOH
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet CCMIMPSOH.ACTX.AGETAFCRIGHT(CCMIMPSOH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet CCMIMPSOH.ACTX.AGETAFCRIGHTD(CCMIMPSOH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_CCMIMPSOH
Else
 Gosub ADELETE_CCMIMPSOH
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
CCMIMPSOH.ASTALIN = [V]CST_ADEL
CCMIMPSOH.CCMSOH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(CCMIMPSOH.CCMSOH,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If CCMIMPSOH.CCMSOH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPSOH.CCMSOH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.CCMSOH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.CCMSOH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_CCMIMPSOH
Trbegin [F:CCMSOH]
 Gosub ADELETE_CCMIMPSOH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_CCMIMPSOH
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.CCMSOH._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSOH.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If CCMIMPSOH.snapshotEnabled=1
 [L]A_RETIK = CCMIMPSOH.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMIMPSOH.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



