#<AdxTL>@(#)0.0.0.0 $Revision$Class Addresses
# Supervisor
## CRUD-CLASSE ## BPADDRESS
# 2018-08-27 13:04:51 896


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BPADDRESS,ASTATUS)
Variable Instance BPADDRESS Using R_BPADDRESS
Variable Integer ASTATUS

If BPADDRESS = null : End : Endif

Gosub AVARIABLES From WMR00BPADDRESS
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BPADDRESS
Else
 Gosub AINSERT_BPADDRESS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = BPADDRESS.freeSnapshot
BPADDRESS.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
BPADDRESS.ASTALIN = [V]CST_ANEW
BPADDRESS.BPA.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BPADDRESS._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BPADDRESS._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BPADDRESS._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BPADDRESS.BPA.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BPADDRESS.BPA.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESS.BPA.COLTEL)
 If BPADDRESS.BPA.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.COLTEL([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESS.BPA.COLWEB)
 If BPADDRESS.BPA.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.COLWEB([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

For [L]A_I=1 To maxtab(BPADDRESS.BPA.COLTEL)
 If BPADDRESS.BPA.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.COLTEL([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESS.BPA.COLWEB)
 If BPADDRESS.BPA.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.COLWEB([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BPADDRESS
Trbegin [F:BPA]
 Gosub AINSERT_BPADDRESS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BPADDRESS.BPA.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BPADDRESS.BPA.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(BPADDRESS.BPA.COLTEL)
 If BPADDRESS.BPA.COLTEL([L]A_I)<>null
  If BPADDRESS.BPA.COLTEL([L]A_I).ASTALIN=[V]CST_ADEL or BPADDRESS.BPA.COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BPADDRESS.BPA.COLTEL([L]A_I)
   BPADDRESS.BPA.COLTEL([L]A_I) = null
  Elsif BPADDRESS.BPA.COLTEL([L]A_I).ASTALIN <> [V]CST_ALL
   BPADDRESS.BPA.COLTEL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
For [L]A_I=1 To maxtab(BPADDRESS.BPA.COLWEB)
 If BPADDRESS.BPA.COLWEB([L]A_I)<>null
  If BPADDRESS.BPA.COLWEB([L]A_I).ASTALIN=[V]CST_ADEL or BPADDRESS.BPA.COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BPADDRESS.BPA.COLWEB([L]A_I)
   BPADDRESS.BPA.COLWEB([L]A_I) = null
  Elsif BPADDRESS.BPA.COLWEB([L]A_I).ASTALIN <> [V]CST_ALL
   BPADDRESS.BPA.COLWEB([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
Return

#-----------------------------------------------------#
$AINSERT_BPADDRESS
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If BPADDRESS.snapshotEnabled=1
 [L]A_RETIK = BPADDRESS.revertUpdTick
Endif
[L]ASTATUS = max(fmet BPADDRESS.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



