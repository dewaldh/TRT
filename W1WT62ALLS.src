#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management WT62ALLS 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [16/04/2018]
A_HEURE = "14:36:18"
A_USER  = "ADMIN"
A_STAMP = "20180416143618"
Return

$TITRES
Chgtzn [M:ENT]VCRNUM With GBIDC1
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If GWSINVWRH<>""
    Chgfmt WRH With GWSINVWRH
   Else
    Chgfmt WRH With "-K:1X"
   Endif
   If GWSINVEMPT<>""
    Chgfmt LOCTYP With GWSINVEMPT
   Else
    Chgfmt LOCTYP With "-K:1X"
   Endif
   If GWSINVEMP<>""
    Chgfmt LOC With GWSINVEMP
   Else
    Chgfmt LOC With "-K:1X"
   Endif
   If GWSINVLOT<>""
    Chgfmt BPSLOTAFF With GWSINVLOT
   Else
    Chgfmt BPSLOTAFF With "-K:1X"
   Endif
   If GWSINVLOT<>""
    Chgfmt LOTAFF With GWSINVLOT
   Else
    Chgfmt LOTAFF With "-K:1X"
   Endif
   If GWSINVSLO<>""
    Chgfmt SLOAFF With GWSINVSLO
   Else
    Chgfmt SLOAFF With "-K:1X"
   Endif
   If GWSINVECCMAJ<>""
    Chgfmt ECCVALMAJAFF With GWSINVECCMAJ
   Else
    Chgfmt ECCVALMAJAFF With "-K:1X"
   Endif
   If GWSINVECCMIN<>""
    Chgfmt ECCVALMINAFF With GWSINVECCMIN
   Else
    Chgfmt ECCVALMINAFF With "-K:1X"
   Endif
   If GWSINVSER<>""
    Chgfmt SERNUM With GWSINVSER
   Else
    Chgfmt SERNUM With "-K:1X"
   Endif
  Endif
 When "NBLIGLOT"
  If [M]NBLIGLOT=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT62ALLS [ENT]
Gosub HORODAT
Local Inpbox "WT62ALLS" From GFONCTION At A_STAMP With A_WINDPREV Mask [ENT] As [SIM_]
Grizo [ENT]5
Grizo [ENT]7
Grizo [ENT]10
Grizo [ENT]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ENT]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=85 : Y1(0)=5 : Y2(0)=9
X1(1)=86 : X2(1)=132 : Y1(1)=5 : Y2(1)=9
X1(2)=1 : X2(2)=132 : Y1(2)=10 : Y2(2)=23
X1(4)=1 : X2(4)=0 : Y1(4)=24 : Y2(4)=23
Return

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1WT62ALLS
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1WT62ALLS
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_TRFFCY
Return

$ON_VCRNUM
Return

$ON_PRI
Onevent BEFORE_AREA Gosub AV_PRI From W1WT62ALLS
Return

$AV_PRI
## Action PARDEV
Gosub _AFF
Return

$ON_QUAFLG
Onevent INIT_AREA Call D_QUAFLG(zc) From W1WT62ALLS
Return

Subprog D_QUAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]QUAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_TRSFAM
Onevent INIT_AREA Call D_TRSFAM(zc) From W1WT62ALLS
Return

Subprog D_TRSFAM(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSFAM,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"9","") From SUBADI
Endif
Gosub _AFF
End

$ON_VCRTYP
Onevent INIT_AREA Call D_VCRTYP(zc) From W1WT62ALLS
Return

Subprog D_VCRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_COEFUCUS
Onevent INIT_AREA Call D_COEFUCUS(zc) From W1WT62ALLS
Return

Subprog D_COEFUCUS(VALEUR)
Variable Char    VALEUR()
If varinit([M]COEFUCUS,indice)=0
 VALEUR = "X UC = Y US"
Endif
Gosub _AFF
End

$ON_QTYTOENT
Onevent BEFORE_AREA Gosub AV_QTYTOENT From W1WT62ALLS
Return

$AV_QTYTOENT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ENT]PCUTOENT,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYTOENT(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PCUTOENT
Return

$ON_ZPCUTOENT
Onevent BEFORE_AREA Gosub AV_ZPCUTOENT From W1WT62ALLS
Return

$AV_ZPCUTOENT
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]PCUTOENT(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_PECQTY
Onevent BEFORE_AREA Gosub AV_PECQTY From W1WT62ALLS
Return

$AV_PECQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ENT]PCUTOENT,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PECQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_SAIACTFLG
Onevent BEFORE_AREA Gosub AV_SAIACTFLG From W1WT62ALLS
Onevent INIT_AREA Call D_SAIACTFLG(zc) From W1WT62ALLS
Return

$AV_SAIACTFLG
## Action STD
Call AV_SAIACTFLG(zc) From TRTSTOENT
Gosub _AFF
Return

Subprog D_SAIACTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SAIACTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1WT62ALLS
Onevent BEFORE_LINE Call AVANT_NBLIG From W1WT62ALLS
Onevent AFTER_LINE Call APRES_NBLIG From W1WT62ALLS
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT62ALLS
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From TRTSTOENT
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(19862,GBOUT1) From OBJDIV
Call TEXTE(19863,GBOUT2) From OBJDIV
Call TEXTE(22755,GBOUT3) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT62ALLS
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WT62ALLS
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WT62ALLS
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From TRTSTOENT
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B1_NBLIG From TRTSTOENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B2_NBLIG From TRTSTOENT
Endif
If !GWEBSERV
 ## Action SAIENTLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIENTLOT"
 PARMSK(1) = "ENT"
 PARMSK(2) = [M:ENT]TABLE1
 PARMSK(3) = num$(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"ISTOENTLO","SUBENTL","",1,"SPEENT") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISTKSPL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTKSPL"
 PARMSK(1) = num$(nolign)
 PARMSK(2) = num$([M:ENT]QTYPCU(nolign-1))
 PARMSK(3) = "ENT"
 Call SAISIE_NUM(BASPAG,PARMSK,"ISTSP","TRTSTSP","XWISTSP") From GSAISIE
 nolign = val(PARMSK(1))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From TRTSTOENT
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action STD
Call APRES_NBLIG From TRTSTOENT
If mkstat : End : Endif
## Action SAIENTLOT
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAIENTLOT"
PARMSK(1) = "ENT"
PARMSK(2) = [M:ENT]TABLE1
PARMSK(3) = num$(nolign-1)
Call TRAITE_NUM(BASPAG,PARMSK,"ISTOENTLO","SUBENTL","",1,"SPEENT") From GTRAITE
GACTION = SAVACT
If mkstat : End : Endif
Gosub _AFF
End

$ON_PCU
Return

$ON_QTYPCU
Onevent BEFORE_AREA Gosub AV_QTYPCU From W1WT62ALLS
Onevent BEFORE_INPUT Call AS_QTYPCU(zc) From W1WT62ALLS
Onevent CONTROL Call C_QTYPCU(zc) From W1WT62ALLS
Onevent AFTER_CHANGE Gosub AMM_QTYPCU From W1WT62ALLS
Return

Subprog IB_QTYPCU(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call IB_QTYPCU From TRTSTOENT
Endif
Gosub _AFF
End

$AV_QTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ENT]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCU(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTYPCU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(454,GBOUT5) From OBJDIV
Call IB_QTYPCU(VALEUR)
## Action STD
Call AS_QTYPCU(VALEUR) From TRTSTOENT
If mkstat=2
 [M]QTYPCU(INDIC) = VALEUR
 Affzo QTYPCU(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_QTYPCU(zc) From W1WT62ALLS
Onkey 130 Titled GBOUT2 Call B2_QTYPCU(zc) From W1WT62ALLS
Onkey 132 Titled GBOUT4 Call B4_QTYPCU(zc) From W1WT62ALLS
Onkey 133 Titled GBOUT5 Call B5_QTYPCU(zc) From W1WT62ALLS
Gosub _AFF
End

Subprog C_QTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYPCU(VALEUR) From TRTSTOENT
If mkstat : GERR = 1 : GZONE = "QTYPCU" : GZNUM = 271 : Endif
Gosub _AFF
End

$AMM_QTYPCU
Call AM_QTYPCU(zc)
If !mkstat & GOBJET
 zoncou = "QTYPCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYPCU(VALEUR) From TRTSTOENT
If mkstat : GERR = 1 : GZONE = "QTYPCU" : GZNUM = 271 : Endif
Gosub _AFF
End

Subprog B1_QTYPCU(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B1_QTYPCU(VALEUR) From TRTSTOENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_QTYPCU(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B2_QTYPCU(VALEUR) From TRTSTOENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_QTYPCU(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B4_QTYPCU(VALEUR) From TRTSTOENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_QTYPCU(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B5_QTYPCU(VALEUR) From TRTSTOENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PCUSTUCOE
Return

$ON_QTYPCUO
Onevent BEFORE_AREA Gosub AV_QTYPCUO From W1WT62ALLS
Return

$AV_QTYPCUO
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ENT]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W1WT62ALLS
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ENT]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1WT62ALLS
Onevent BEFORE_INPUT Call AS_STA(zc) From W1WT62ALLS
Return

Subprog IB_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_STA From TRTSTOENT
Endif
Gosub _AFF
End

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call IB_STA(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_STA(zc) From W1WT62ALLS
Onkey   2 Titled GBOUTS Call S_STA(zc) From W1WT62ALLS
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,[M:ENT]QUAFLG,1,[M:ENT]QUAFRE,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1287 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = [F:SRU]AUZSST
 PARMSK(2) = num$([M:ENT]QUAFLG)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B1_STA(VALEUR) From TRTSTOENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WRH
Onevent CONTROL Call C_WRH(zc) From W1WT62ALLS
Onevent AFTER_CHANGE Gosub AMM_WRH From W1WT62ALLS
Onevent BEFORE_INPUT Call AS_WRH(zc) From W1WT62ALLS
Onevent BEFORE_AREA Gosub AV_WRH From W1WT62ALLS
Return

$AV_WRH
If GWSINVWRH<>""
 Chgfmt [M]WRH(indice) With GWSINVWRH
Else
 Chgfmt [M]WRH(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_WRH(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WRH(zc) From W1WT62ALLS
Gosub _AFF
End

Subprog C_WRH(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]STOFCY,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
Gosub _AFF
End

$AMM_WRH
Call AM_WRH(zc)
If !mkstat & GOBJET
 zoncou = "WRH" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRH(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WRH(VALEUR) From TRTSTOENT
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
Gosub _AFF
End

Subprog S_WRH(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M]STOFCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOCTYP
Onevent CONTROL Call C_LOCTYP(zc) From W1WT62ALLS
Onevent BEFORE_INPUT Call AS_LOCTYP(zc) From W1WT62ALLS
Onevent BEFORE_AREA Gosub AV_LOCTYP From W1WT62ALLS
Return

$AV_LOCTYP
If GWSINVEMPT<>""
 Chgfmt [M]LOCTYP(indice) With GWSINVEMPT
Else
 Chgfmt [M]LOCTYP(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOCTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STKSUGTLO
Call STKSUGTLO([M:ENT]WLOCSEQ(nolign-1),[M:ENT]TRSTYP,[M:ENT]TRSCOD,[M:ENT]STOFCY,[M:ENT]ITMREF,[M:ENT]PCU(nolign-1),GQTYPHY,[M:ENT]STA(nolign-1)
&,VALEUR,"",[M:ENT]FILLOCENT,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:ENT]WRH)),[M:ENT]WRH(nolign-1)))),[M:ENT]LOC(nolign-1)) From STKLOC
If mkstat=2
 [M]LOCTYP(INDIC) = VALEUR
 Affzo LOCTYP(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_LOCTYP(zc) From W1WT62ALLS
Gosub _AFF
End

Subprog C_LOCTYP(VALEUR)
Variable Char    VALEUR()
## Action CTLTEMFMT
Call CTLTEMFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 3197 : Endif
If !mkstat
 ## Action STKCTRTLO
 Call STKCTRTLO([M:ENT]WLOCSEQ(nolign-1),[M:ENT]TRSTYP,[M:ENT]TRSCOD,[M:ENT]STOFCY,[M:ENT]ITMREF,[M:ENT]PCU(nolign-1),GQTYPHY,[M:ENT]STA(nolign-1)
& ,0,VALEUR,mkstat,"",[M:ENT]FILLOCENT,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:ENT]WRH)),[M:ENT]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 3197 : Endif
 If !mkstat
  ## Action STD
  Call C_LOCTYP(VALEUR) From TRTSTOENT
  If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 3197 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOCTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELTLO1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELTLO1"
 PARMSK(1) = num$([M:ENT]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:ENT]TRSTYP)
 PARMSK(3) = [M:ENT]TRSCOD
 PARMSK(4) = [M:ENT]STOFCY
 PARMSK(5) = [M:ENT]ITMREF
 PARMSK(6) = [M:ENT]PCU(nolign-1)
 PARMSK(7) = num$(GQTYPHY)
 PARMSK(8) = [M:ENT]STA(nolign-1)
 PARMSK(9) = ""
 PARMSK(10) = [M:ENT]FILLOCENT
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELTLO1","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1WT62ALLS
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1WT62ALLS
Onevent BEFORE_AREA Gosub AV_LOC From W1WT62ALLS
Return

$AV_LOC
If GWSINVEMP<>""
 Chgfmt [M]LOC(indice) With GWSINVEMP
Else
 Chgfmt [M]LOC(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6426,GBOUT2) From OBJDIV
Call TEXTE(8902,GBOUT3) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STKSUGEMP
Call STKSUGEMP([M:ENT]WLOCSEQ(nolign-1),[M:ENT]TRSTYP,[M:ENT]TRSCOD,[M:ENT]STOFCY,[M:ENT]ITMREF,[M:ENT]PCU(nolign-1),GQTYPHY,[M:ENT]STA(nolign-1)
&,[M:ENT]LOCTYP(nolign-1),VALEUR,[M:ENT]BPRNUM,"",[M:ENT]FILLOCENT,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:ENT]WRH)),[M:ENT]WRH(nolign-1))))) From STKLOC
If mkstat=2
 [M]LOC(INDIC) = VALEUR
 Affzo LOC(INDIC) : mkstat = 2
Endif
Onkey 130 Titled GBOUT2 Call B2_LOC(zc) From W1WT62ALLS
Onkey 131 Titled GBOUT3 Call B3_LOC(zc) From W1WT62ALLS
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1WT62ALLS
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
If !mkstat
 ## Action STKCTREMP
 Call STKCTREMP([M:ENT]WLOCSEQ(nolign-1),[M:ENT]TRSTYP,[M:ENT]TRSCOD,[M:ENT]STOFCY,[M:ENT]ITMREF,[M:ENT]PCU(nolign-1),GQTYPHY,[M:ENT]STA(nolign-1)
& ,[M:ENT]LOCTYP(nolign-1),VALEUR,[M:ENT]BPRNUM,1,mkstat,GBIDD1,"",[M:ENT]FILLOCENT
& ,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:ENT]WRH)),[M:ENT]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
 If !mkstat
  ## Action STD
  Call C_LOC(VALEUR) From TRTSTOENT
  If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIEMPLIB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIEMPLIB"
 PARMSK(1) = num$([M:ENT]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:ENT]TRSTYP)
 PARMSK(3) = [M:ENT]TRSCOD
 PARMSK(4) = [M:ENT]STOFCY
 PARMSK(5) = [M:ENT]ITMREF
 PARMSK(6) = [M:ENT]PCU(nolign-1)
 PARMSK(7) = num$(GQTYPHY)
 PARMSK(8) = [M:ENT]STA(nolign-1)
 PARMSK(9) = [M:ENT]LOCTYP(nolign-1)
 PARMSK(10) = VALEUR
 PARMSK(11) = [M:ENT]BPRNUM
 PARMSK(12) = ""
 PARMSK(13) = [M:ENT]FILLOCENT
 PARMSK(14) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:ENT]WRH)),[M:ENT]WRH(nolign-1))))
 Call SAISIE_CHAR(VALEUR,PARMSK,"ISELEMP","STKLOC","XWISELEMP") From GSAISIE
 [M:ENT]WLOCSEQ(nolign-1) = val(PARMSK(1))
 [M:ENT]LOCTYP(nolign-1) = PARMSK(9)
 VALEUR = PARMSK(10)
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B2_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONSSEA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSEA"
 PARMSK(1) = "1"
 PARMSK(2) = [M:ENT]STOFCY
 PARMSK(3) = VALEUR
 PARMSK(4) = [M:ENT]LOCTYP(nolign-1)
 PARMSK(5) = ""
 PARMSK(6) = "3"
 PARMSK(7) = "0"
 PARMSK(8) = [M:ENT]FILLOCENT
 PARMSK(9) = VALEUR
 Call CONSULT_CHAR(VALEUR,"SEA",PARMSK) From GCONSULT
 VALEUR = PARMSK(9)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONSSED
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSED"
 PARMSK(1) = "1"
 PARMSK(2) = [M:ENT]STOFCY
 PARMSK(3) = [M:ENT]ITMREF
 PARMSK(4) = [M:ENT]ITMREF
 PARMSK(5) = "0"
 PARMSK(6) = [M:ENT]FILLOCENT
 PARMSK(7) = VALEUR
 Call CONSULT_CHAR(VALEUR,"SED",PARMSK) From GCONSULT
 VALEUR = PARMSK(7)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W4WT62ALLS
Return

$TIT_COL
Gosub TIT_COL From W4WT62ALLS
Return


