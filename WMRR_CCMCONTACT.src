#<AdxTL>@(#)0.0.0.0 $Revision$Class Contact
# Supervisor
## CRUD-CLASSE ## CCMCONTACT
# 2018-08-27 13:11:06 859


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CONTACT [CNT_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMCONTACT") From ASYRCOM : Endif
Local Instance CCMCONTACT Using R_CCMCONTACT

If !SILENCE : Call TRACE("3 --> New Instance R_CCMCONTACT") From ASYRCOM : Endif
CCMCONTACT = NewInstance R_CCMCONTACT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CNT_]CNT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CONTACT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMCONTACT.AREAD([CNT_]BPATYP,[CNT_]BPANUM,[CNT_]CCNCRM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMCONTACT.CNT.BPATYP ="-num$(CCMCONTACT.CNT.BPATYP)) From ASYRCOM
 Call TRACE("CCMCONTACT.CNT.BPANUM ="-num$(CCMCONTACT.CNT.BPANUM)) From ASYRCOM
 Call TRACE("CCMCONTACT.CNT.CCNCRM ="-num$(CCMCONTACT.CNT.CCNCRM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMCONTACT.CNT.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMCONTACT.CNT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CNT_]
FreeGroup CCMCONTACT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMCONTACT,ACLE,ASTATUS,_ETAG)
Variable Instance CCMCONTACT Using R_CCMCONTACT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _BPATYP
Local Char _BPANUM(15)
Local Char _CCNCRM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPATYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPANUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_CCNCRM = num$([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File CONTACT [CNT]
Default File [F:CNT]
Read [F:CNT]CNT0 = [L]_BPATYP;[L]_BPANUM;[L]_CCNCRM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CNT]UPDTICK)>0
 [L]_ETAG = num$([F:CNT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMCONTACT,ACLE,ASTATUS)
Variable Instance CCMCONTACT Using R_CCMCONTACT
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _BPATYP
Local Char _BPANUM(15)
Local Char _CCNCRM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPATYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPANUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_CCNCRM = num$([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMCONTACT.AREAD([L]_BPATYP,[L]_BPANUM,[L]_CCNCRM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMCONTACT,_BPATYP,_BPANUM,_CCNCRM,ASTATUS)
Variable Instance CCMCONTACT Using R_CCMCONTACT
Value Tinyint _BPATYP
Value Char _BPANUM
Value Char _CCNCRM
Variable Integer ASTATUS

If CCMCONTACT = null : End : Endif

Gosub AVARIABLES From WMR00CCMCONTACT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMCONTACT.APARENT=null
 [L]A_I = CCMCONTACT.freeSnapshot
 CCMCONTACT.snapshotEnabled = 0
 CCMCONTACT.setAccessorEnabled = 0
Endif

If fmet CCMCONTACT.ACTX.AGETAFCRIGHT(CCMCONTACT,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CNT]
Read [F:CNT]CNT0 = [L]_BPATYP;[L]_BPANUM;[L]_CCNCRM
If fstat
[L]A_ERROR = num$([L]_BPATYP)+"~"+[L]_BPANUM+"~"+[L]_CCNCRM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMCONTACT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMCONTACT.ACTX.AGETAFCRIGHTR(CCMCONTACT,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMCONTACT.ACTX.ASTACRITROLE(CCMCONTACT,num$([L]_BPATYP)+"~"+[L]_BPANUM+"~"+[L]_CCNCRM
& ,"CCM","CNT",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMCONTACT.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMCONTACT.CNT.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMCONTACT.CNT.AREAD([L]_BPATYP,[L]_BPANUM,[L]_CCNCRM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMCONTACT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMCONTACT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMCONTACT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMCONTACT.APARENT=null
 CCMCONTACT.snapshotEnabled = 1
 CCMCONTACT.setAccessorEnabled = 1
Endif
LogicClose File [CNT] ,[AIN]
End



