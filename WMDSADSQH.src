#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule SADSQH

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".SQUOTE" : If clalev([F:SQH])=0 : Local File =OUVTAB [SQH] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [SQH]"
Link [SQH] With
& [CPY]CPY0 = [F:SQH]CPY
& As [LNK_]
& Order By Key CLE = [SQH]SQHNUM
FILTRE = ""
Return

$FERME
If clalev([F:SQH]) : Close local File [SQH] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..1)
Local Integer DTYP(1..1)
Local Integer NBDCLE
NBDCLE = 1
DCLE(1) = "SQHNUM"
DTYP(1) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]SQHNUM)>0
 [F:AAA_]SQHNUM = [F:SQH]SQHNUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]SQHNUM=[F:SQH]SQHNUM"

End

$MAJFLD
### SQHNUM
[L]FLD="SQHNUM"
[L]FORMULE='[F:SQH]SQHNUM'
If dim([F:AAA_]SQHNUM)>0
 [F:AAA_]SQHNUM = [F:SQH]SQHNUM
Endif

### SQHNUMLNK
[L]FLD="SQHNUMLNK"
[L]FORMULE='[F:SQH]SQHNUM'
If dim([F:AAA_]SQHNUMLNK)>0
 [F:AAA_]SQHNUMLNK = [F:SQH]SQHNUM
Endif

### QUODAT
[L]FLD="QUODAT"
[L]FORMULE='[F:SQH]QUODAT'
If dim([F:AAA_]QUODAT)>0
 [F:AAA_]QUODAT = [F:SQH]QUODAT
Endif

### VLYDAT
[L]FLD="VLYDAT"
[L]FORMULE='[F:SQH]VLYDAT'
If dim([F:AAA_]VLYDAT)>0
 [F:AAA_]VLYDAT = [F:SQH]VLYDAT
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:SQH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:SQH]EECICT
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:SQH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:SQH]FFWNUM
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:SQH]VACBPR'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:SQH]VACBPR
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:SQH]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:SQH]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:SQH]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:SQH]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### PBYPRC
[L]FLD="PBYPRC"
[L]FORMULE='[F:SQH]PBYPRC'
If dim([F:AAA_]PBYPRC)>0
 [F:AAA_]PBYPRC = [F:SQH]PBYPRC
Endif

### BPCPOSCOD
[L]FLD="BPCPOSCOD"
[L]FORMULE='vireblc([F:SQH]BPCPOSCOD,1)'
If dim([F:AAA_]BPCPOSCOD)>0
 [F:AAA_]BPCPOSCOD = vireblc([F:SQH]BPCPOSCOD,1)
Endif

### BPCCTY
[L]FLD="BPCCTY"
[L]FORMULE='[F:SQH]BPCCTY'
If dim([F:AAA_]BPCCTY)>0
 [F:AAA_]BPCCTY = [F:SQH]BPCCTY
Endif

### BPCCRY
[L]FLD="BPCCRY"
[L]FORMULE='[F:SQH]BPCCRY'
If dim([F:AAA_]BPCCRY)>0
 [F:AAA_]BPCCRY = [F:SQH]BPCCRY
Endif

### BPDNAM
[L]FLD="BPDNAM"
[L]FORMULE='[F:SQH]BPDNAM'
If dim([F:AAA_]BPDNAM)>0
 [F:AAA_]BPDNAM = [F:SQH]BPDNAM
Endif

### BPDPOSCOD
[L]FLD="BPDPOSCOD"
[L]FORMULE='vireblc([F:SQH]BPDPOSCOD,1)'
If dim([F:AAA_]BPDPOSCOD)>0
 [F:AAA_]BPDPOSCOD = vireblc([F:SQH]BPDPOSCOD,1)
Endif

### BPDCTY
[L]FLD="BPDCTY"
[L]FORMULE='[F:SQH]BPDCTY'
If dim([F:AAA_]BPDCTY)>0
 [F:AAA_]BPDCTY = [F:SQH]BPDCTY
Endif

### BPDCRY
[L]FLD="BPDCRY"
[L]FORMULE='[F:SQH]BPDCRY'
If dim([F:AAA_]BPDCRY)>0
 [F:AAA_]BPDCRY = [F:SQH]BPDCRY
Endif

### SQHTYP
[L]FLD="SQHTYP"
[L]FORMULE='[F:SQH]SQHTYP'
If dim([F:AAA_]SQHTYP)>0
 [F:AAA_]SQHTYP = [F:SQH]SQHTYP
Endif

### SOHTYP
[L]FLD="SOHTYP"
[L]FORMULE='[F:SQH]SOHTYP'
If dim([F:AAA_]SOHTYP)>0
 [F:AAA_]SOHTYP = [F:SQH]SOHTYP
Endif


Return

