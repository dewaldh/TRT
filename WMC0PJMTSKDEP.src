#<AdxTL>@(#)0.0.0.0 $Revision$Class Dependencies
# Supervisor
## ACLA-CLASSE ## PJMTSKDEP
# 2018-08-27 12:40:42 558

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "PJMTSKDEP_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Category
$GETCATEGORY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETCATEGORY" : [L]ACTION = "GETCATEGORY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Type
$GETTYPTSK
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETTYPTSK" : [L]ACTION = "GETTYPTSK" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Category type
$GETTYPCAT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETTYPCAT" : [L]ACTION = "GETTYPCAT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number
$GETCOUNT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETCOUNT" : [L]ACTION = "GETCOUNT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number of products
$GETCOUNTART
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETCOUNTART" : [L]ACTION = "GETCOUNTART" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number of operations
$GETCOUNTOPE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETCOUNTOPE" : [L]ACTION = "GETCOUNTOPE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number of children
$GETCOUNTCHILDSLINK
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETCOUNTCHILDSLINK" : [L]ACTION = "GETCOUNTCHILDSLINK" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Startup
$CHANGESTATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CHANGESTATE" : [L]ACTION = "CHANGESTATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Change of status
$GETLISTCHANGE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GETLISTCHANGE" : [L]ACTION = "GETLISTCHANGE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Mixed
$ISMIXTE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ISMIXTE" : [L]ACTION = "ISMIXTE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0PJMTSKDEP
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0PJMTSKDEP
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0PJMTSKDEP
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0PJMTSKDEP
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "OPPNUM"
this.AKEYS(2) = "TASCOD"
this.AKEYS(3) = "OPENUM"
this.AKEYS(4) = "ITTSEQ"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



