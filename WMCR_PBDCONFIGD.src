#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment balance configuration
# Supervisor
## CRUD-CLASSE ## PBDCONFIGD
# 2018-08-27 12:37:27 048


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PBDCONFIGD [PBDCNFD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PBDCONFIGD") From ASYRCOM : Endif
Local Instance PBDCONFIGD Using C_PBDCONFIGD

If !SILENCE : Call TRACE("3 --> New Instance C_PBDCONFIGD") From ASYRCOM : Endif
PBDCONFIGD = NewInstance C_PBDCONFIGD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PBDCNFD_]PBDCNFD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PBDCONFIGD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIGD.AREAD([PBDCNFD_]CODE,[PBDCNFD_]LEG,[PBDCNFD_]ISINCLUDED,[PBDCNFD_]LINE))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PBDCONFIGD.CODE ="-num$(PBDCONFIGD.CODE)) From ASYRCOM
 Call TRACE("PBDCONFIGD.LEG ="-num$(PBDCONFIGD.LEG)) From ASYRCOM
 Call TRACE("PBDCONFIGD.ISINCLUDED ="-num$(PBDCONFIGD.ISINCLUDED)) From ASYRCOM
 Call TRACE("PBDCONFIGD.LINE ="-num$(PBDCONFIGD.LINE)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PBDCONFIGD.AKEYS)
  Call TRACE("-"-num$(I)-":"-PBDCONFIGD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PBDCNFD_]
FreeGroup PBDCONFIGD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PBDCONFIGD,ACLE,ASTATUS,_ETAG)
Variable Instance PBDCONFIGD Using C_PBDCONFIGD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODE(20)
Local Char _LEG(20)
Local Tinyint _ISINCLUDED
Local Shortint _LINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ISINCLUDED = val([L]CLE(3)) : Endif
If [L]CLE(3)="false" : [L]_ISINCLUDED = 1 : Endif
If [L]CLE(3)="true" : [L]_ISINCLUDED = 2 : Endif
If [L]CLE(4)<>"" : [L]_LINE = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File PBDCONFIGD [PBDCNFD]
Default File [F:PBDCNFD]
Read [F:PBDCNFD]PBDCNFD0 = [L]_CODE;[L]_LEG;[L]_ISINCLUDED;[L]_LINE
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PBDCNFD]UPDTICK)>0
 [L]_ETAG = num$([F:PBDCNFD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PBDCONFIGD,ACLE,ASTATUS)
Variable Instance PBDCONFIGD Using C_PBDCONFIGD
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODE(20)
Local Char _LEG(20)
Local Tinyint _ISINCLUDED
Local Shortint _LINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ISINCLUDED = val([L]CLE(3)) : Endif
If [L]CLE(3)="false" : [L]_ISINCLUDED = 1 : Endif
If [L]CLE(3)="true" : [L]_ISINCLUDED = 2 : Endif
If [L]CLE(4)<>"" : [L]_LINE = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIGD.AREAD([L]_CODE,[L]_LEG,[L]_ISINCLUDED,[L]_LINE))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PBDCONFIGD,_CODE,_LEG,_ISINCLUDED,_LINE,ASTATUS)
Variable Instance PBDCONFIGD Using C_PBDCONFIGD
Value Char _CODE
Value Char _LEG
Value Tinyint _ISINCLUDED
Value Shortint _LINE
Variable Integer ASTATUS

If PBDCONFIGD = null : End : Endif

Gosub AVARIABLES From WMC00PBDCONFIGD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PBDCONFIGD.APARENT=null
 [L]A_I = PBDCONFIGD.freeSnapshot
 PBDCONFIGD.snapshotEnabled = 0
 PBDCONFIGD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PBDCONFIGD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIGD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PBDCONFIGD.APARENT=null
 PBDCONFIGD.snapshotEnabled = 1
 PBDCONFIGD.setAccessorEnabled = 1
Endif
LogicClose File [PBDCNFD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIGD._ACTION_PARAM("AREAD_BEFORE",[L]_CODE,[L]_LEG,[L]_ISINCLUDED,[L]_LINE))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PBDCNFD]
Read [F:PBDCNFD]PBDCNFD0 = [L]_CODE;[L]_LEG;[L]_ISINCLUDED;[L]_LINE
If fstat
[L]A_ERROR = [L]_CODE+"~"+[L]_LEG+"~"+num$([L]_ISINCLUDED)+"~"+num$([L]_LINE)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PBDCONFIGD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PBDCNFD]AUUID)>0 & [F:PBDCNFD]AUUID=NullUuid
 [F:PBDCNFD]AUUID = getUuid
Endif
SetInstance PBDCONFIGD With [F:PBDCNFD]
PBDCONFIGD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIGD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



