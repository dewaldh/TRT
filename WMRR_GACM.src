#<AdxTL>@(#)0.0.0.0 $Revision$Class Account core model
# Supervisor
## CRUD-CLASSE ## GACM
# 2018-08-27 13:16:42 769


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GACM [GCM_]

If !SILENCE : Call TRACE("2 --> Local Instance R_GACM") From ASYRCOM : Endif
Local Instance GACM Using R_GACM

If !SILENCE : Call TRACE("3 --> New Instance R_GACM") From ASYRCOM : Endif
GACM = NewInstance R_GACM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [GCM_]GCM0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of GACM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet GACM.AREAD([GCM_]GCM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("GACM.GCM.GCM ="-num$(GACM.GCM.GCM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(GACM.GCM.AKEYS)
  Call TRACE("-"-num$(I)-":"-GACM.GCM.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [GCM_]
FreeGroup GACM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(GACM,ACLE,ASTATUS,_ETAG)
Variable Instance GACM Using R_GACM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _GCM(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_GCM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File GACM [GCM]
Default File [F:GCM]
Read [F:GCM]GCM0 = [L]_GCM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:GCM]UPDTICK)>0
 [L]_ETAG = num$([F:GCM]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(GACM,ACLE,ASTATUS)
Variable Instance GACM Using R_GACM
Value Char ACLE
Variable Integer ASTATUS
Local Char _GCM(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_GCM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet GACM.AREAD([L]_GCM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(GACM,_GCM,ASTATUS)
Variable Instance GACM Using R_GACM
Value Char _GCM
Variable Integer ASTATUS

If GACM = null : End : Endif

Gosub AVARIABLES From WMR00GACM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If GACM.APARENT=null
 [L]A_I = GACM.freeSnapshot
 GACM.snapshotEnabled = 0
 GACM.setAccessorEnabled = 0
Endif

If fmet GACM.ACTX.AGETAFCRIGHT(GACM,"GESGCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:GCM]
Read [F:GCM]GCM0 = [L]_GCM
If fstat
[L]A_ERROR = [L]_GCM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(GACM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet GACM.ACTX.AGETAFCRIGHTR(GACM,"GESGCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet GACM.ACTX.ASTACRITROLE(GACM,[L]_GCM
& ,"GCM","GCM",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet GACM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

GACM.GCM.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet GACM.GCM.AREAD([L]_GCM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet GACM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & GACM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet GACM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If GACM.APARENT=null
 GACM.snapshotEnabled = 1
 GACM.setAccessorEnabled = 1
Endif
LogicClose File [GCM]
End



