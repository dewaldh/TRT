#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHPREQUIS PREQUIS
# 2018-08-27 12:42:40 233

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","PREQUIS","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PREQUIS [PSH]
If filinfo(filpath("FIL","PREQUISD","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PREQUISD [PSD]
Local File PREQUIS [PSH_]
Local Char KEY_PSH(120)(1..3)
Local Char KEY_PSD(120)(1..3)
#Empty keys :
KEY_PSH(3) = ""
KEY_PSD(3) = "+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [PSH]
LogicClose File [PSD]
LogicClose File [PSH_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [PSH] With
& [PSD]PSD0~=[PSH]PSHNUM
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [PSH] With
& [PSD]PSD0~=[PSH]PSHNUM
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_PSH(2) = [F:PSH]PSHNUM
KEY_PSD(2) = [F:PSD]PSHNUM+"+"+num$([F:PSD]PSDLIN)

If (KEY_PSH(2) <> KEY_PSH(3)) & (KEY_PSH(1) <> KEY_PSH(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_PREQUIS(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:PSH]
FINS = 1
Local Integer DIE_MAX:DIE_MAX0
CJ1=1
For CI1 = 0 To dim([F:PSH]DIE)-1
 Break ([F:PSH]DIE(CI1)="" & [F:PSH]CCE(CI1)="")
 DIE_MAX+=1
 #Create a new instance
 INS.C_DIE(CJ1) = NewInstance C_PREQUIS_C_DIE(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_DIE(CJ1).setaccessorEnabled = 0
 INS.C_DIE(CJ1).DIE=[F:PSH]DIE(CI1)
 INS.C_DIE(CJ1).CCE=[F:PSH]CCE(CI1)
 CJ1+=1
Next CI1
 KEY_PSH(1) = KEY_PSH(2)
Endif : # KEY_PSH(1) <> KEY_PSH(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"PSHNUM":'          +'"'+escJson(INS.PSHNUM)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"PSHFCY":'         +'"'+escJson(INS.PSHFCY)+'"'
Append ASND.DATA ,',"TEX1":'           +'"'+escJson(INS.TEX1)+'"'
Append ASND.DATA ,',"TEX2":'           +'"'+escJson(INS.TEX2)+'"'
Append ASND.DATA ,',"REQUSR":'         +'"'+escJson(INS.REQUSR)+'"'
Append ASND.DATA ,',"PSHNUMMMS":'      +'"'+escJson(INS.PSHNUMMMS)+'"'
Append ASND.DATA ,',"MMSURL":'         +'"'+escJson(INS.MMSURL)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"C_DIE":['
For CI1=1 To DIE_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"DIE":'             +'"'+escJson(INS.C_DIE(CJ1).DIE)+'"'
 Append ASND.DATA ,',"CCE":'            +'"'+escJson(INS.C_DIE(CJ1).CCE)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_PSH(1),KEY_PSD(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:PSH]PSHNUM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From PREQUIS_CSTD
Gosub METHODS From PREQUIS_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="PREQUIS" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PREQUIS")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PREQUIS")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,2738)+'"'
Append WCLOB,',"$url":"{$baseUrl}/PREQUIS'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{PSHFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2738)+' {$key}"'
Append WCLOB,',"$key":"{PSHNUM}"'
Append WCLOB,',"$url":"{$baseUrl}/PREQUIS('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'PREQUIS.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"PSHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2741)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PSHFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2740)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TEX1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"TEX2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"REQUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2695)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PSHNUMMMS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,40808)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"MMSURL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,41437)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"C_DIE":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":20'
Append WCLOB,',"$maxItems":20'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"DIE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,29327)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CCE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1688)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHPREQUISB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHPREQUISB
End RES


