#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ACV2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:47:21"
A_USER  = "ADMIN"
A_STAMP = "20180827234721"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ACV2 [ACV2]
Gosub HORODAT
Local Inpbox "ACV2" From GFONCTION At A_STAMP With A_WINDPREV Mask [ACV2] As [SIM_]
Grizo [ACV2]10
Grizo [ACV2]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ACV2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=74 : Y1(1)=3 : Y2(1)=28
Return

$ON_CODACT
Onevent CONTROL Call C_CODACT(zc) From W1ACV2
Onevent AFTER_AREA Call AP_CODACT(zc) From W1ACV2
Onevent BEFORE_INPUT Call AS_CODACT(zc) From W1ACV2
Return

Subprog AS_CODACT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_CODACT(zc) From W1ACV2
Onkey 144 Titled GBOUTP Call P_CODACT(zc) From W1ACV2
Onkey 146 Titled GBOUTA Call SA_CODACT(zc) From W1ACV2
Gosub _AFF
End

Subprog C_CODACT(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CODACT" : GZNUM = 4 : Endif
If !mkstat
 ## Action CONTOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJW"
 PARMSK(1) = "ACV"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJW","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CODACT" : GZNUM = 4 : Endif
Endif
Gosub _AFF
End

Subprog AP_CODACT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_CODACT(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "CODACT" : GZNUM = 4 : Endif
Gosub _AFF
End

Subprog S_CODACT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJET"
 PARMSK(1) = "ACV"
 PARMSK(2) = "CODACT"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJET","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ACV"
PARMSK(3) = "$"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODACT(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ACV",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZLIBACT
Onevent BEFORE_INPUT Call AS_ZLIBACT(zc) From W1ACV2
Onevent AFTER_AREA Call AP_ZLIBACT(zc) From W1ACV2
Return

Subprog AS_ZLIBACT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
If !GWEBSERV
 ## Action ABRINI
 Call INIABR From SUBAAB
 If mkstat=2
  [M]ZLIBACT(INDIC) = VALEUR
  Affzo ZLIBACT(INDIC) : mkstat = 2
 Endif
Endif
If !mkstat
 ## Action STD
 Call AS_ZLIBACT(VALEUR) From SUBACV
 If mkstat=2
  [M]ZLIBACT(INDIC) = VALEUR
  Affzo ZLIBACT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog AP_ZLIBACT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TXTCONT
 Call TXTCONT(VALEUR,[M]ZLIBACT,[M]LIBACT,30,8,[M]CODACT,"#1") From OBJDIV
 If mkstat : GERR = 1 : GZONE = "ZLIBACT" : GZNUM = 8 : Endif
Endif
Gosub _AFF
End

$ON_FLACT
Onevent INIT_AREA Call D_FLACT(zc) From W1ACV2
Onevent BEFORE_INPUT Call AS_FLACT(zc) From W1ACV2
Return

Subprog D_FLACT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLACT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLACT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MODULE
Onevent INIT_AREA Call D_MODULE(zc) From W1ACV2
Onevent BEFORE_INPUT Call AS_MODULE(zc) From W1ACV2
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODULE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RANG
Onevent CONTROL Call C_RANG(zc) From W1ACV2
Return

Subprog C_RANG(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_TYP
Onevent CONTROL Call C_TYP(zc) From W1ACV2
Onevent INIT_AREA Call D_TYP(zc) From W1ACV2
Onevent BEFORE_INPUT Call AS_TYP(zc) From W1ACV2
Return

Subprog D_TYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_TYP(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 680 : Endif
Gosub _AFF
End

$ON_DIMFIL
Onevent CONTROL Call C_DIMFIL(zc) From W1ACV2
Return

Subprog C_DIMFIL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DIMFIL(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "DIMFIL" : GZNUM = 20740 : Endif
Gosub _AFF
End

$ON_DIMMAX
Onevent CONTROL Call C_DIMMAX(zc) From W1ACV2
Onevent AFTER_CHANGE Gosub AMM_DIMMAX From W1ACV2
Return

Subprog C_DIMMAX(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DIMMAX(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "DIMMAX" : GZNUM = 20741 : Endif
Gosub _AFF
End

$AMM_DIMMAX
Call AM_DIMMAX(zc)
If !mkstat & GOBJET
 zoncou = "DIMMAX" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DIMMAX(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_DIMMAX(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "DIMMAX" : GZNUM = 20741 : Endif
Gosub _AFF
End

$ON_DIME
Onevent CONTROL Call C_DIME(zc) From W1ACV2
Return

Subprog C_DIME(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DIME(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "DIME" : GZNUM = 21719 : Endif
Gosub _AFF
End

$ON_DEP
Onevent CONTROL Call C_DEP(zc) From W1ACV2
Onevent INIT_AREA Call D_DEP(zc) From W1ACV2
Onevent BEFORE_INPUT Call AS_DEP(zc) From W1ACV2
Return

Subprog D_DEP(VALEUR)
Variable Integer VALEUR
If varinit([M]DEP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_DEP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_DEP(VALEUR) From SUBACV
If mkstat : GERR = 1 : GZONE = "DEP" : GZNUM = 13894 : Endif
Gosub _AFF
End

$ON_ACTDEP
Onevent BEFORE_INPUT Call AS_ACTDEP(zc) From W1ACV2
Onevent CONTROL Call C_ACTDEP(zc) From W1ACV2
Return

Subprog AS_ACTDEP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_ACTDEP(VALEUR) From SUBACV
If mkstat=2
 [M]ACTDEP(INDIC) = VALEUR
 Affzo ACTDEP(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ACTDEP(zc) From W1ACV2
Onkey 144 Titled GBOUTP Call P_ACTDEP(zc) From W1ACV2
Onkey 146 Titled GBOUTA Call SA_ACTDEP(zc) From W1ACV2
Gosub _AFF
End

Subprog C_ACTDEP(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ACV","!$",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "ACTDEP" : GZNUM = 4 : Endif
If !mkstat
 ## Action STD
 Call C_ACTDEP(VALEUR) From SUBACV
 If mkstat : GERR = 1 : GZONE = "ACTDEP" : GZNUM = 4 : Endif
Endif
Gosub _AFF
End

Subprog S_ACTDEP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ACV"
PARMSK(2) = "!$"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_ACTDEP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ACV"
PARMSK(3) = "$"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ACTDEP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ACV",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ACTFOR
Onevent BEFORE_INPUT Call AS_ACTFOR(zc) From W1ACV2
Onevent CONTROL Call C_ACTFOR(zc) From W1ACV2
Return

Subprog AS_ACTFOR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1484,GBOUT1) From OBJDIV
Call TEXTE(27108,GBOUT2) From OBJDIV
Call TEXTE(29795,GBOUT3) From OBJDIV
If !GWEBSERV
 ## Action AFRIB
 Call IB_FORMULE From AFORMULE
 If mkstat=2
  [M]ACTFOR(INDIC) = VALEUR
  Affzo ACTFOR(INDIC) : mkstat = 2
 Endif
Endif
Onkey 129 Titled GBOUT1 Call B1_ACTFOR(zc) From W1ACV2
Onkey 130 Titled GBOUT2 Call B2_ACTFOR(zc) From W1ACV2
Onkey 131 Titled GBOUT3 Call B3_ACTFOR(zc) From W1ACV2
Gosub _AFF
End

Subprog C_ACTFOR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFRCONT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AFRCONT"
 PARMSK(1) = ""
 Call S_AFF_CHAR(VALEUR,PARMSK,"AFRCONT","AFORMULE","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ACTFOR" : GZNUM = 4574 : Endif
Endif
Gosub _AFF
End

Subprog B1_ACTFOR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFRB1
 Call B1_FORMULE(VALEUR,"","","","","") From AFORMULE
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_ACTFOR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFFMESS
 Call AFFMESS From AFORMULE
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_ACTFOR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ANAFOR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ANAFOR"
 PARMSK(1) = ""
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = ""
 Call TRAITE_CHAR(VALEUR,PARMSK,"","ANAFOR","ANAFOR",3,"") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$CHG_STY
Return


