#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PJMBUD1D 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:07:50"
A_USER  = "ADMIN"
A_STAMP = "20180828000750"
Return

$TITRES
Chgtzn [M:PJBU1D]PSCBUDQTY With func SUBPJBU1D.COL_GET_TITLE(3)
Chgtzn [M:PJBU1D]PSCBUDAMT With func SUBPJBU1D.COL_GET_TITLE(4)
Chgtzn [M:PJBU1D]PSCQTY1 With func SUBPJBU1D.COL_GET_TITLE(5)
Chgtzn [M:PJBU1D]PSCAMT1 With func SUBPJBU1D.COL_GET_TITLE(6)
Chgtzn [M:PJBU1D]PSCQTY2 With func SUBPJBU1D.COL_GET_TITLE(7)
Chgtzn [M:PJBU1D]PSCAMT2 With func SUBPJBU1D.COL_GET_TITLE(8)
Chgtzn [M:PJBU1D]PSCQTY3 With func SUBPJBU1D.COL_GET_TITLE(9)
Chgtzn [M:PJBU1D]PSCAMT3 With func SUBPJBU1D.COL_GET_TITLE(10)
Chgtzn [M:PJBU1D]PSCQTY4 With func SUBPJBU1D.COL_GET_TITLE(11)
Chgtzn [M:PJBU1D]PSCAMT4 With func SUBPJBU1D.COL_GET_TITLE(12)
Chgtzn [M:PJBU1D]PSCQTY5 With func SUBPJBU1D.COL_GET_TITLE(13)
Chgtzn [M:PJBU1D]PSCAMT5 With func SUBPJBU1D.COL_GET_TITLE(14)
Chgtzn [M:PJBU1D]PSCREMQTY With func SUBPJBU1D.COL_GET_TITLE(15)
Chgtzn [M:PJBU1D]PSCREMAMT With func SUBPJBU1D.COL_GET_TITLE(16)
Chgtzn [M:PJBU1D]PSCWIPQTY With func SUBPJBU1D.COL_GET_TITLE(17)
Chgtzn [M:PJBU1D]PSCWIPAMT With func SUBPJBU1D.COL_GET_TITLE(18)
Chgtzn [M:PJBU1D]PSCTOTQTY With func SUBPJBU1D.COL_GET_TITLE(19)
Chgtzn [M:PJBU1D]PSCTOTAMT With func SUBPJBU1D.COL_GET_TITLE(20)
Chgtzn [M:PJBU1D]PSCMARGQTY With func SUBPJBU1D.COL_GET_TITLE(21)
Chgtzn [M:PJBU1D]PSCMARGAMT With func SUBPJBU1D.COL_GET_TITLE(23)
Chgtzn [M:PJBU1D]PSCPCTMQTY With func SUBPJBU1D.COL_GET_TITLE(22)
Chgtzn [M:PJBU1D]PSCPCTMAMT With func SUBPJBU1D.COL_GET_TITLE(24)
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PJMBUD1D [PJBU1D]
Gosub HORODAT
Local Inpbox "PJMBUD1D" From GFONCTION At A_STAMP With A_WINDPREV Mask [PJBU1D] As [SIM_]
Grizo [PJBU1D]15
Grizo [PJBU1D]20
Grizo [PJBU1D]30
Grizo [PJBU1D]35
Grizo [PJBU1D]40
Grizo [PJBU1D]43
Grizo [PJBU1D]45
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PJBU1D]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=176 : Y1(0)=2 : Y2(0)=4
X1(1)=1 : X2(1)=176 : Y1(1)=5 : Y2(1)=13
X1(2)=1 : X2(2)=86 : Y1(2)=17 : Y2(2)=22
X1(3)=87 : X2(3)=176 : Y1(3)=17 : Y2(3)=22
X1(4)=1 : X2(4)=176 : Y1(4)=14 : Y2(4)=16
X1(5)=1 : X2(5)=86 : Y1(5)=23 : Y2(5)=27
X1(6)=87 : X2(6)=176 : Y1(6)=23 : Y2(6)=27
Return

$ON_PBUCOD
Return

$ON_PCCCOD
Onevent AFTER_CHANGE Gosub AMM_PCCCOD From W1PJMBUD1D
Onevent CONTROL Call C_PCCCOD(zc) From W1PJMBUD1D
Onevent BEFORE_INPUT Call AS_PCCCOD(zc) From W1PJMBUD1D
Return

Subprog AS_PCCCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(43998,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PCCCOD(zc) From W1PJMBUD1D
Onkey   2 Titled GBOUTS Call S_PCCCOD(zc) From W1PJMBUD1D
Onkey 144 Titled GBOUTP Call P_PCCCOD(zc) From W1PJMBUD1D
Onkey 146 Titled GBOUTA Call SA_PCCCOD(zc) From W1PJMBUD1D
Gosub _AFF
End

Subprog C_PCCCOD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PCCCOD" : GZNUM = 43998 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("PJCC","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "PCCCOD" : GZNUM = 43998 : Endif
Endif
Gosub _AFF
End

$AMM_PCCCOD
Call AM_PCCCOD(zc)
If !mkstat & GOBJET
 zoncou = "PCCCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCCCOD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCCCOD(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PCCCOD" : GZNUM = 43998 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZPCCCOD)")>indice
 [M]PCCCOD(indice) = VALEUR
 Affzo ZPCCCOD(indice)
Endif
Gosub _AFF
End

Subprog S_PCCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "PJCC"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PCCCOD(VALEUR)
Variable Char    VALEUR()
Call OBJET("PJCC",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PCCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "PJCC"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("PJCC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPCCCOD
Onevent BEFORE_AREA Gosub AV_ZPCCCOD From W1PJMBUD1D
Return

$AV_ZPCCCOD
Call LECTEXTRA(zc,"PJMCOSTCTR","DESAXX",num$([M]PCCCOD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_CUR
Return

$ON_ZCUR
Onevent BEFORE_AREA Gosub AV_ZCUR From W1PJMBUD1D
Return

$AV_ZCUR
Call LECTEXTRA(zc,"TABCUR","INTDES",num$([M]CUR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_PLBDESAXX
Onevent INIT_AREA Call D_PLBDESAXX(zc) From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBDESAXX From W1PJMBUD1D
Onevent BEFORE_INPUT Call AS_PLBDESAXX(zc) From W1PJMBUD1D
Return

Subprog IB_PLBDESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_PLBDESAXX(VALEUR)
Variable Char    VALEUR()
If varinit([M]PLBDESAXX,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"PJMBUDLIG","PLBDESAXX",[M:PJBU0]OPPNUM + "~" + [M:PJBU0]PBUCOD,num$([M:PJBU1D]PLBSEQ)) From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_PLBDESAXX(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_PLBDESAXX(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_PLBDESAXX(zc) From W1PJMBUD1D
Gosub _AFF
End

$AMM_PLBDESAXX
Call AM_PLBDESAXX(zc)
If !mkstat & GOBJET
 zoncou = "PLBDESAXX" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBDESAXX(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PLBDESAXX(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBDESAXX" : GZNUM = 282 : Endif
Gosub _AFF
End

Subprog B1_PLBDESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_PLBDESAXX" : PROGSUB = "SUBPJBU1D" : PROGSPE = "SPEPJBU1D" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "PJMBUDLIG"
 PARMSK(2) = "PLBDESAXX"
 PARMSK(3) = [M:PJBU0]OPPNUM + "~" + [M:PJBU0]PBUCOD
 PARMSK(4) = num$([M:PJBU1D]PLBSEQ)
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_PLBDESAXX" : PROGSUB = "SUBPJBU1D" : PROGSPE = "SPEPJBU1D" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PLBU
Onevent CONTROL Call C_PLBU(zc) From W1PJMBUD1D
Onevent BEFORE_INPUT Call AS_PLBU(zc) From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBU From W1PJMBUD1D
Return

Subprog AS_PLBU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLBU(zc) From W1PJMBUD1D
Onkey   2 Titled GBOUTS Call S_PLBU(zc) From W1PJMBUD1D
Onkey 144 Titled GBOUTP Call P_PLBU(zc) From W1PJMBUD1D
Onkey 146 Titled GBOUTA Call SA_PLBU(zc) From W1PJMBUD1D
Gosub _AFF
End

Subprog C_PLBU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PLBU" : GZNUM = 2685 : Endif
Gosub _AFF
End

$AMM_PLBU
Call AM_PLBU(zc)
If !mkstat & GOBJET
 zoncou = "PLBU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBU(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZPLBU)")>indice
 [M]PLBU(indice) = VALEUR
 Affzo ZPLBU(indice)
Endif
Gosub _AFF
End

Subprog S_PLBU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TUN"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PLBU(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PLBU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PLBU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPLBU
Onevent BEFORE_AREA Gosub AV_ZPLBU From W1PJMBUD1D
Return

$AV_ZPLBU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]PLBU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_PSCBUDQTY
Onevent BEFORE_AREA Gosub AV_PSCBUDQTY From W1PJMBUD1D
Return

$AV_PSCBUDQTY
If func SUBPJBU1D.COLGETFMT(3)<>""
 Chgfmt [M]PSCBUDQTY(indice) With func SUBPJBU1D.COLGETFMT(3)
Else
 Chgfmt [M]PSCBUDQTY(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCBUDAMT
Onevent BEFORE_AREA Gosub AV_PSCBUDAMT From W1PJMBUD1D
Return

$AV_PSCBUDAMT
If func SUBPJBU1D.COLGETFMT(4)<>""
 Chgfmt [M]PSCBUDAMT(indice) With func SUBPJBU1D.COLGETFMT(4)
Else
 Chgfmt [M]PSCBUDAMT(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCQTY1
Onevent BEFORE_AREA Gosub AV_PSCQTY1 From W1PJMBUD1D
Return

$AV_PSCQTY1
If func SUBPJBU1D.COLGETFMT(5)<>""
 Chgfmt [M]PSCQTY1(indice) With func SUBPJBU1D.COLGETFMT(5)
Else
 Chgfmt [M]PSCQTY1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCAMT1
Onevent BEFORE_AREA Gosub AV_PSCAMT1 From W1PJMBUD1D
Return

$AV_PSCAMT1
If func SUBPJBU1D.COLGETFMT(6)<>""
 Chgfmt [M]PSCAMT1(indice) With func SUBPJBU1D.COLGETFMT(6)
Else
 Chgfmt [M]PSCAMT1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCQTY2
Onevent BEFORE_AREA Gosub AV_PSCQTY2 From W1PJMBUD1D
Return

$AV_PSCQTY2
If func SUBPJBU1D.COLGETFMT(7)<>""
 Chgfmt [M]PSCQTY2(indice) With func SUBPJBU1D.COLGETFMT(7)
Else
 Chgfmt [M]PSCQTY2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCAMT2
Onevent BEFORE_AREA Gosub AV_PSCAMT2 From W1PJMBUD1D
Return

$AV_PSCAMT2
If func SUBPJBU1D.COLGETFMT(8)<>""
 Chgfmt [M]PSCAMT2(indice) With func SUBPJBU1D.COLGETFMT(8)
Else
 Chgfmt [M]PSCAMT2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCQTY3
Onevent BEFORE_AREA Gosub AV_PSCQTY3 From W1PJMBUD1D
Return

$AV_PSCQTY3
If func SUBPJBU1D.COLGETFMT(9)<>""
 Chgfmt [M]PSCQTY3(indice) With func SUBPJBU1D.COLGETFMT(9)
Else
 Chgfmt [M]PSCQTY3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCAMT3
Onevent BEFORE_AREA Gosub AV_PSCAMT3 From W1PJMBUD1D
Return

$AV_PSCAMT3
If func SUBPJBU1D.COLGETFMT(10)<>""
 Chgfmt [M]PSCAMT3(indice) With func SUBPJBU1D.COLGETFMT(10)
Else
 Chgfmt [M]PSCAMT3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCQTY4
Onevent BEFORE_AREA Gosub AV_PSCQTY4 From W1PJMBUD1D
Return

$AV_PSCQTY4
If func SUBPJBU1D.COLGETFMT(11)<>""
 Chgfmt [M]PSCQTY4(indice) With func SUBPJBU1D.COLGETFMT(11)
Else
 Chgfmt [M]PSCQTY4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCAMT4
Onevent BEFORE_AREA Gosub AV_PSCAMT4 From W1PJMBUD1D
Return

$AV_PSCAMT4
If func SUBPJBU1D.COLGETFMT(12)<>""
 Chgfmt [M]PSCAMT4(indice) With func SUBPJBU1D.COLGETFMT(12)
Else
 Chgfmt [M]PSCAMT4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCQTY5
Onevent BEFORE_AREA Gosub AV_PSCQTY5 From W1PJMBUD1D
Return

$AV_PSCQTY5
If func SUBPJBU1D.COLGETFMT(13)<>""
 Chgfmt [M]PSCQTY5(indice) With func SUBPJBU1D.COLGETFMT(13)
Else
 Chgfmt [M]PSCQTY5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PSCAMT5
Onevent BEFORE_AREA Gosub AV_PSCAMT5 From W1PJMBUD1D
Return

$AV_PSCAMT5
If func SUBPJBU1D.COLGETFMT(14)<>""
 Chgfmt [M]PSCAMT5(indice) With func SUBPJBU1D.COLGETFMT(14)
Else
 Chgfmt [M]PSCAMT5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PLBQTY
Onevent BEFORE_AREA Gosub AV_PLBQTY From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBQTY From W1PJMBUD1D
Onevent CONTROL Call C_PLBQTY(zc) From W1PJMBUD1D
Return

$AV_PLBQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:PJBU1D]PLBU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PLBQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog C_PLBQTY(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_PLBQTY
Call AM_PLBQTY(zc)
If !mkstat & GOBJET
 zoncou = "PLBQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PLBQTY(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBQTY" : GZNUM = 41552 : Endif
Gosub _AFF
End

$ON_PLBPRI
Onevent BEFORE_AREA Gosub AV_PLBPRI From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBPRI From W1PJMBUD1D
Onevent CONTROL Call C_PLBPRI(zc) From W1PJMBUD1D
Return

$AV_PLBPRI
## Action FMTFM2DEV
Call FMTFM2DEV([M:PJBU1D]CUR) From TRTDIV
Chgfmt [M]PLBPRI(indice) With "N+z3:"+GFMT
Gosub _AFF
Return

Subprog C_PLBPRI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_PLBPRI
Call AM_PLBPRI(zc)
If !mkstat & GOBJET
 zoncou = "PLBPRI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBPRI(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PLBPRI(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBPRI" : GZNUM = 41554 : Endif
Gosub _AFF
End

$ON_PLBAMT
Onevent BEFORE_AREA Gosub AV_PLBAMT From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBAMT From W1PJMBUD1D
Onevent CONTROL Call C_PLBAMT(zc) From W1PJMBUD1D
Return

$AV_PLBAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:PJBU1D]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]PLBAMT(indice) With "N+z3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_PLBAMT(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_PLBAMT
Call AM_PLBAMT(zc)
If !mkstat & GOBJET
 zoncou = "PLBAMT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBAMT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PLBAMT(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBAMT" : GZNUM = 6202 : Endif
Gosub _AFF
End

$ON_PLBDATBUD
Onevent AFTER_CHANGE Gosub AMM_PLBDATBUD From W1PJMBUD1D
Onevent BEFORE_AREA Gosub AV_PLBDATBUD From W1PJMBUD1D
Return

$AV_PLBDATBUD
Chgfmt [M]PLBDATBUD(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$AMM_PLBDATBUD
Call AM_PLBDATBUD(zc)
If !mkstat & GOBJET
 zoncou = "PLBDATBUD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBDATBUD(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_PLBDATBUD(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBDATBUD" : GZNUM = 41557 : Endif
Gosub _AFF
End

$ON_PLBFLGREM
Onevent AFTER_CHANGE Gosub AMM_PLBFLGREM From W1PJMBUD1D
Onevent INIT_AREA Call D_PLBFLGREM(zc) From W1PJMBUD1D
Onevent BEFORE_INPUT Call AS_PLBFLGREM(zc) From W1PJMBUD1D
Return

Subprog D_PLBFLGREM(VALEUR)
Variable Integer VALEUR
If varinit([M]PLBFLGREM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PLBFLGREM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_PLBFLGREM
Call AM_PLBFLGREM(zc)
If !mkstat & GOBJET
 zoncou = "PLBFLGREM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBFLGREM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_PLBFLGREM(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBFLGREM" : GZNUM = 56329 : Endif
Gosub _AFF
End

$ON_PLBQTYREM
Onevent BEFORE_AREA Gosub AV_PLBQTYREM From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBQTYREM From W1PJMBUD1D
Return

$AV_PLBQTYREM
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:PJBU1D]PLBU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PLBQTYREM(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$AMM_PLBQTYREM
Call AM_PLBQTYREM(zc)
If !mkstat & GOBJET
 zoncou = "PLBQTYREM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBQTYREM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PLBQTYREM(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBQTYREM" : GZNUM = 41559 : Endif
Gosub _AFF
End

$ON_PLBPRIREM
Onevent BEFORE_AREA Gosub AV_PLBPRIREM From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBPRIREM From W1PJMBUD1D
Onevent CONTROL Call C_PLBPRIREM(zc) From W1PJMBUD1D
Return

$AV_PLBPRIREM
## Action FMTFM2DEV
Call FMTFM2DEV([M:PJBU1D]CUR) From TRTDIV
Chgfmt [M]PLBPRIREM(indice) With "N+z3:"+GFMT
Gosub _AFF
Return

Subprog C_PLBPRIREM(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_PLBPRIREM
Call AM_PLBPRIREM(zc)
If !mkstat & GOBJET
 zoncou = "PLBPRIREM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBPRIREM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PLBPRIREM(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBPRIREM" : GZNUM = 41561 : Endif
Gosub _AFF
End

$ON_PLBAMTREM
Onevent BEFORE_AREA Gosub AV_PLBAMTREM From W1PJMBUD1D
Onevent AFTER_CHANGE Gosub AMM_PLBAMTREM From W1PJMBUD1D
Return

$AV_PLBAMTREM
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:PJBU1D]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]PLBAMTREM(indice) With "Nz3:"+GDEVFMT
Gosub _AFF
Return

$AMM_PLBAMTREM
Call AM_PLBAMTREM(zc)
If !mkstat & GOBJET
 zoncou = "PLBAMTREM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBAMTREM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PLBAMTREM(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBAMTREM" : GZNUM = 41563 : Endif
Gosub _AFF
End

$ON_PLBDATREM
Onevent AFTER_CHANGE Gosub AMM_PLBDATREM From W1PJMBUD1D
Onevent BEFORE_AREA Gosub AV_PLBDATREM From W1PJMBUD1D
Return

$AV_PLBDATREM
Chgfmt [M]PLBDATREM(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$AMM_PLBDATREM
Call AM_PLBDATREM(zc)
If !mkstat & GOBJET
 zoncou = "PLBDATREM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLBDATREM(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_PLBDATREM(VALEUR) From SUBPJBU1D
If mkstat : GERR = 1 : GZONE = "PLBDATREM" : GZNUM = 41565 : Endif
Gosub _AFF
End

$ON_PSCREMQTY
Onevent BEFORE_AREA Gosub AV_PSCREMQTY From W1PJMBUD1D
Return

$AV_PSCREMQTY
If func SUBPJBU1D.COLGETFMT(15)<>""
 Chgfmt [M]PSCREMQTY(indice) With func SUBPJBU1D.COLGETFMT(15)
Else
 Chgfmt [M]PSCREMQTY(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2PJMBUD1D
Return

$TIT_COL
Gosub TIT_COL From W2PJMBUD1D
Return


