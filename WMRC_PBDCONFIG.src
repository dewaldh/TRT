#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment balance configuration
# Supervisor
## CRUD-CLASSE ## PBDCONFIG
# 2018-08-27 13:21:02 598


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(PBDCONFIG,ASTATUS)
Variable Instance PBDCONFIG Using R_PBDCONFIG
Variable Integer ASTATUS

If PBDCONFIG = null : End : Endif

Gosub AVARIABLES From WMR00PBDCONFIG
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet PBDCONFIG.ACTX.AGETAFCRIGHT(PBDCONFIG,"GESPBDECO",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet PBDCONFIG.ACTX.AGETAFCRIGHTC(PBDCONFIG,"GESPBDECO",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_PBDCONFIG
Else
 Gosub AINSERT_PBDCONFIG
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = PBDCONFIG.freeSnapshot
PBDCONFIG.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
PBDCONFIG.ASTALIN = [V]CST_ANEW
PBDCONFIG.PBDCNF.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PBDCONFIG._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PBDCONFIG._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PBDCONFIG._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If PBDCONFIG.PBDCNF.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PBDCONFIG.PBDCNF.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PBDCONFIG.PBDCNF.LINESEXCL) : # PBDCONFIGD -- 2
 If PBDCONFIG.PBDCNF.LINESEXCL(A_N2) <> null
& and !find(PBDCONFIG.PBDCNF.LINESEXCL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF.LINESEXCL(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PBDCONFIG.PBDCNF.LINESINCL) : # PBDCONFIGD -- 3
 If PBDCONFIG.PBDCNF.LINESINCL(A_N2) <> null
& and !find(PBDCONFIG.PBDCNF.LINESINCL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF.LINESINCL(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(PBDCONFIG.PBDCNF.LINESEXCL) : # PBDCONFIGD -- 2
 If PBDCONFIG.PBDCNF.LINESEXCL(A_N2) <> null
& and !find(PBDCONFIG.PBDCNF.LINESEXCL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF.LINESEXCL(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PBDCONFIG.PBDCNF.LINESINCL) : # PBDCONFIGD -- 3
 If PBDCONFIG.PBDCNF.LINESINCL(A_N2) <> null
& and !find(PBDCONFIG.PBDCNF.LINESINCL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF.LINESINCL(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_PBDCONFIG
Trbegin [F:PBDCNF]
 Gosub AINSERT_PBDCONFIG
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(PBDCONFIG.PBDCNF.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PBDCONFIG.PBDCNF.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PBDCONFIG.PBDCNF.LINESEXCL)
 If PBDCONFIG.PBDCNF.LINESEXCL(A_N2) <> null
  [L]ASTATUS2 = fmet PBDCONFIG.PBDCNF.LINESEXCL(A_N2)._AINSERT_AFTER
  If PBDCONFIG.PBDCNF.LINESEXCL(A_N2).ASTALIN=[V]CST_ADEL or PBDCONFIG.PBDCNF.LINESEXCL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PBDCONFIG.PBDCNF.LINESEXCL(A_N2)
   PBDCONFIG.PBDCNF.LINESEXCL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(PBDCONFIG.PBDCNF.LINESINCL)
 If PBDCONFIG.PBDCNF.LINESINCL(A_N2) <> null
  [L]ASTATUS2 = fmet PBDCONFIG.PBDCNF.LINESINCL(A_N2)._AINSERT_AFTER
  If PBDCONFIG.PBDCNF.LINESINCL(A_N2).ASTALIN=[V]CST_ADEL or PBDCONFIG.PBDCNF.LINESINCL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PBDCONFIG.PBDCNF.LINESINCL(A_N2)
   PBDCONFIG.PBDCNF.LINESINCL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_PBDCONFIG
[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.PBDCNF._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDCONFIG.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If PBDCONFIG.snapshotEnabled=1
 [L]A_RETIK = PBDCONFIG.revertUpdTick
Endif
[L]ASTATUS = max(fmet PBDCONFIG.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



