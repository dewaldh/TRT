#<AdxTL>@(#)0.0.0.0 $Revision$Class Costing sales invoice
# Supervisor
## ACLA-CLASSE ## SINVOICEV
# 2018-08-27 12:46:59 714

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "SINVOICEV_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Miscellaneous table loading
$INIT_TSCCODADI
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "INIT_TSCCODADI" : [L]ACTION = "INIT_TSCCODADI" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0SINVOICEV
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 2
 If this.C_BPINAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPINAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPDNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDNAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPDADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDADDLIG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_TSCCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TSCCOD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRGTYP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRGTYP(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 4
 If this.C_PAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.SIH<>null
 [L]ASTATUS = fmet this.SIH._AERROR(_CTX,_SUPP)
Endif
For AINDCLA=1 To maxtab(this.SID)
 If this.SID(AINDCLA)<>null
  [L]ASTATUS = fmet this.SID(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVV)
 If this.SVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVV(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVF)
 If this.SVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVF(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.BPDADD<>null
 [L]ASTATUS = fmet this.BPDADD._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0SINVOICEV
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 2
 If this.C_BPINAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPINAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPDNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDNAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPDADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDADDLIG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_TSCCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TSCCOD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRGTYP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRGTYP(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 4
 If this.C_PAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.SIH<>null
 [L]ASTATUS = fmet this.SIH._ADELERRORS(_APARAM)
Endif
For AINDCLA=1 To maxtab(this.SID)
 If this.SID(AINDCLA)<>null
  [L]ASTATUS = fmet this.SID(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVV)
 If this.SVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVV(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVF)
 If this.SVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVF(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.BPDADD<>null
 [L]ASTATUS = fmet this.BPDADD._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0SINVOICEV
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 2
 If this.C_BPINAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPINAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPINAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPDNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDNAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPDNAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPDADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDADDLIG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPDADDLIG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_REP('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_TSCCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TSCCOD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_TSCCOD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRGTYP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRGTYP(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DISCRGTYP('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_INVDTAAMT('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 4
 If this.C_PAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_PAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.SIH<>null
 [L]ASTATUS = fmet this.SIH._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SIH')
Endif
For AINDCLA=1 To maxtab(this.SID)
 If this.SID(AINDCLA)<>null
  [L]ASTATUS = fmet this.SID(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SID('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVV)
 If this.SVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVV(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SVV('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVF)
 If this.SVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVF(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SVF('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.BPDADD<>null
 [L]ASTATUS = fmet this.BPDADD._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPDADD')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0SINVOICEV
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "BPDADD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPDADD",this)
 When "C_BPDADDLIG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPDADDLIG",this)
 When "C_BPDNAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPDNAM",this)
 When "C_BPINAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPINAM",this)
 When "C_DISCRGTYP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DISCRGTYP",this)
 When "C_INVDTAAMT"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_INVDTAAMT",this)
 When "C_PAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_PAM",this)
 When "C_REP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_REP",this)
 When "C_TSCCOD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_TSCCOD",this)
 When "SID"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SID",this)
 When "SIH"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SIH",this)
 When "SVF"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SVF",this)
 When "SVV"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SVV",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "BPDADD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPDADD","C_SALADDRESS",this)
 When "C_BPDADDLIG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPDADDLIG","C_SINVOICEV_C_BPDADDLIG",this)
 When "C_BPDNAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPDNAM","C_SINVOICEV_C_BPDNAM",this)
 When "C_BPINAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPINAM","C_SINVOICEV_C_BPINAM",this)
 When "C_DISCRGTYP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DISCRGTYP","C_SINVOICEV_C_DISCRGTYP",this)
 When "C_INVDTAAMT"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_INVDTAAMT","C_SINVOICEV_C_INVDTAAMT",this)
 When "C_PAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_PAM","C_SINVOICEV_C_PAM",this)
 When "C_REP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_REP","C_SINVOICEV_C_REP",this)
 When "C_TSCCOD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_TSCCOD","C_SINVOICEV_C_TSCCOD",this)
 When "SID"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SID","C_SINVOICED",this)
 When "SIH"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SIH","C_SINVOICE",this)
 When "SVF"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SVF","C_SVCRFOOT",this)
 When "SVV"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SVV","C_SVCRVAT",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "BPDADD"
  [L]_ALINE = 1
 When "C_BPDADDLIG"
  [L]_ALINE = 3
 When "C_BPDNAM"
  [L]_ALINE = 2
 When "C_BPINAM"
  [L]_ALINE = 2
 When "C_DISCRGTYP"
  [L]_ALINE = 9
 When "C_INVDTAAMT"
  [L]_ALINE = 30
 When "C_PAM"
  [L]_ALINE = 4
 When "C_REP"
  [L]_ALINE = 2
 When "C_TSCCOD"
  [L]_ALINE = 5
 When "SID"
  [L]_ALINE = 0
 When "SIH"
  [L]_ALINE = 1
 When "SVF"
  [L]_ALINE = 0
 When "SVV"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "BPDADD"
  [L]_ALINE = 2
 When "C_BPDADDLIG"
  [L]_ALINE = 2
 When "C_BPDNAM"
  [L]_ALINE = 2
 When "C_BPINAM"
  [L]_ALINE = 2
 When "C_DISCRGTYP"
  [L]_ALINE = 1
 When "C_INVDTAAMT"
  [L]_ALINE = 1
 When "C_PAM"
  [L]_ALINE = 2
 When "C_REP"
  [L]_ALINE = 1
 When "C_TSCCOD"
  [L]_ALINE = 3
 When "SID"
  [L]_ALINE = 2
 When "SIH"
  [L]_ALINE = 2
 When "SVF"
  [L]_ALINE = 1
 When "SVV"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "NUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.BPDADD(1) = NewInstance C_SALADDRESS(this.ACTX,NullUuid,1,this,"BPDADD") AllocGroup this
this.BPDADD(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.BPDADD(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SIH(1) = NewInstance C_SINVOICE(this.ACTX,NullUuid,1,this,"SIH") AllocGroup this
this.SIH(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SIH(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SIH.BPRADD(1) = NewInstance C_SALADDRESS(this.ACTX,NullUuid,1,this.SIH,"BPRADD") AllocGroup this
this.SIH.BPRADD(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SIH.BPRADD(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SIH.BPYADD(1) = NewInstance C_SALADDRESS(this.ACTX,NullUuid,1,this.SIH,"BPYADD") AllocGroup this
this.SIH.BPYADD(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SIH.BPYADD(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



