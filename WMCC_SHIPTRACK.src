#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment logistical tracking
# Supervisor
## CRUD-CLASSE ## SHIPTRACK
# 2018-08-27 12:45:53 163


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(SHIPTRACK,ASTATUS)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Variable Integer ASTATUS

If SHIPTRACK = null : End : Endif

Gosub _AVARIABLES From WMC00SHIPTRACK

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_SHIPTRACK

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(SHIPTRACK,ASTATUS)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Variable Integer ASTATUS

If SHIPTRACK = null : End : Endif

Gosub AVARIABLES From WMC00SHIPTRACK
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_SHIPTRACK
Else
 Gosub AINSERT_SHIPTRACK
Endif

Gosub _AINSERT_AFTER
[L]A_I = SHIPTRACK.freeSnapshot
SHIPTRACK.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPTRACK._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPTRACK._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPTRACK._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If SHIPTRACK.ASTALIN = [V]CST_ANEWDEL : Return : Endif
SHIPTRACK.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_SHIPTRACK
Trbegin [F:SHIPT]
 Gosub AINSERT_SHIPTRACK
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_SHIPTRACK
Raz [F:SHIPT]
[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00SHIPTRACK._MAJSQL_SHIPTRACK(SHIPTRACK))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If SHIPTRACK.snapshotEnabled=1
 [L]A_RETIK = SHIPTRACK.revertUpdTick
Endif
[L]ASTATUS = max(fmet SHIPTRACK.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(SHIPTRACK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 SHIPTRACK.ASTALIN = [V]CST_ALL
Endif
Return



