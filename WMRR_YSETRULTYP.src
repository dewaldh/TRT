#<AdxTL>@(#)0.0.0.0 $Revision$Class Settlement Rule Type
# Supervisor
## CRUD-CLASSE ## YSETRULTYP
# 2018-12-07 03:57:56 646


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSETRULTYP [YSRT_]

If !SILENCE : Call TRACE("2 --> Local Instance R_YSETRULTYP") From ASYRCOM : Endif
Local Instance YSETRULTYP Using R_YSETRULTYP

If !SILENCE : Call TRACE("3 --> New Instance R_YSETRULTYP") From ASYRCOM : Endif
YSETRULTYP = NewInstance R_YSETRULTYP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YSRT_]YSRT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSETRULTYP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSETRULTYP.AREAD([YSRT_]YRULTYPCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSETRULTYP.YSRT.YRULTYPCOD ="-num$(YSETRULTYP.YSRT.YRULTYPCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSETRULTYP.YSRT.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSETRULTYP.YSRT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YSRT_]
FreeGroup YSETRULTYP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSETRULTYP,ACLE,ASTATUS,_ETAG)
Variable Instance YSETRULTYP Using R_YSETRULTYP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YRULTYPCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YRULTYPCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YSETRULTYP [YSRT]
Default File [F:YSRT]
Read [F:YSRT]YSRT0 = [L]_YRULTYPCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YSRT]UPDTICK)>0
 [L]_ETAG = num$([F:YSRT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSETRULTYP,ACLE,ASTATUS)
Variable Instance YSETRULTYP Using R_YSETRULTYP
Value Char ACLE
Variable Integer ASTATUS
Local Char _YRULTYPCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YRULTYPCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSETRULTYP.AREAD([L]_YRULTYPCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSETRULTYP,_YRULTYPCOD,ASTATUS)
Variable Instance YSETRULTYP Using R_YSETRULTYP
Value Char _YRULTYPCOD
Variable Integer ASTATUS

If YSETRULTYP = null : End : Endif

Gosub AVARIABLES From WMR00YSETRULTYP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSETRULTYP.APARENT=null
 [L]A_I = YSETRULTYP.freeSnapshot
 YSETRULTYP.snapshotEnabled = 0
 YSETRULTYP.setAccessorEnabled = 0
Endif

If fmet YSETRULTYP.ACTX.AGETAFCRIGHT(YSETRULTYP,"GESYSETRULT",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:YSRT]
Read [F:YSRT]YSRT0 = [L]_YRULTYPCOD
If fstat
[L]A_ERROR = [L]_YRULTYPCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSETRULTYP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet YSETRULTYP.ACTX.AGETAFCRIGHTR(YSETRULTYP,"GESYSETRULT",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet YSETRULTYP.ACTX.ASTACRITROLE(YSETRULTYP,[L]_YRULTYPCOD
& ,"YSETRULT","YSRT",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRULTYP.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

YSETRULTYP.YSRT.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet YSETRULTYP.YSRT.AREAD([L]_YRULTYPCOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRULTYP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YSETRULTYP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YSETRULTYP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YSETRULTYP.APARENT=null
 YSETRULTYP.snapshotEnabled = 1
 YSETRULTYP.setAccessorEnabled = 1
Endif
LogicClose File [YSRT]
End



