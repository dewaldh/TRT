#<AdxTL>@(#)0.0.0.0 $Revision$Class Work order - operations
# Sage X3 supervisor
## CRUD-CLASSE ## MFGOPE
# 2018-03-26 00:33:05 681


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File MFGOPE [MFO_]

If !SILENCE : Call TRACE("2 --> Local Instance C_MFGOPE") From ASYRCOM : Endif
Local Instance MFGOPE Using C_MFGOPE

If !SILENCE : Call TRACE("3 --> New Instance C_MFGOPE") From ASYRCOM : Endif
MFGOPE = NewInstance C_MFGOPE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [MFO_]MFO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of MFGOPE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.AREAD([MFO_]MFGNUM,[MFO_]OPENUM,[MFO_]OPESPLNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("MFGOPE.MFGNUM ="-num$(MFGOPE.MFGNUM)) From ASYRCOM
 Call TRACE("MFGOPE.OPENUM ="-num$(MFGOPE.OPENUM)) From ASYRCOM
 Call TRACE("MFGOPE.OPESPLNUM ="-num$(MFGOPE.OPESPLNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(MFGOPE.AKEYS)
  Call TRACE("-"-num$(I)-":"-MFGOPE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [MFO_]
FreeGroup MFGOPE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(MFGOPE,ACLE,ASTATUS,_ETAG)
Variable Instance MFGOPE Using C_MFGOPE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _MFGNUM(20)
Local Shortint _OPENUM
Local Shortint _OPESPLNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_MFGNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_OPENUM = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPESPLNUM = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File MFGOPE [MFO]
Default File [F:MFO]
Read [F:MFO]MFO0 = [L]_MFGNUM;[L]_OPENUM;[L]_OPESPLNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:MFO]UPDTICK)>0
 [L]_ETAG = num$([F:MFO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(MFGOPE,ACLE,ASTATUS)
Variable Instance MFGOPE Using C_MFGOPE
Value Char ACLE
Variable Integer ASTATUS
Local Char _MFGNUM(20)
Local Shortint _OPENUM
Local Shortint _OPESPLNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_MFGNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_OPENUM = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPESPLNUM = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.AREAD([L]_MFGNUM,[L]_OPENUM,[L]_OPESPLNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(MFGOPE,_MFGNUM,_OPENUM,_OPESPLNUM,ASTATUS)
Variable Instance MFGOPE Using C_MFGOPE
Value Char _MFGNUM
Value Shortint _OPENUM
Value Shortint _OPESPLNUM
Variable Integer ASTATUS

If MFGOPE = null : End : Endif

Gosub AVARIABLES From WMC00MFGOPE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If MFGOPE.APARENT=null
 [L]A_I = MFGOPE.freeSnapshot
 MFGOPE.snapshotEnabled = 0
 MFGOPE.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & MFGOPE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If MFGOPE.APARENT=null
 MFGOPE.snapshotEnabled = 1
 MFGOPE.setAccessorEnabled = 1
Endif
LogicClose File [MFO] ,[CALO]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet MFGOPE._ACTION_PARAM("AREAD_BEFORE",[L]_MFGNUM,[L]_OPENUM,[L]_OPESPLNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet MFGOPE._ACTION_PARAM("AREAD",[L]_MFGNUM,[L]_OPENUM,[L]_OPESPLNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
MFGOPE.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:CALO]
 [L]A_N2=0
 For [F:CALO]CAL0 Where ABRFIC='MFO' & VCRTYP=0 & VCRNUM=[F:MFO]MFGNUM & VCRLIN=[F:MFO]OPENUM & VCRSEQ=[F:MFO]OPESPLNUM & CPLCLE='' & ANALIG=1
  [L]A_N2 +=1
  MFGOPE.CALO(A_N2) = NewInstance  C_CPTANALIN(MFGOPE.ACTX,NullUuid,[L]A_N2,MFGOPE,"CALO") AllocGroup MFGOPE
  [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.CALO(A_N2).ADDINSTANCE_BOUND)
  If dim([F:CALO]AUUID)>0 & [F:CALO]AUUID=NullUuid
   [F:CALO]AUUID = getUuid
  Endif
  SetInstance MFGOPE.CALO(A_N2) With [F:CALO]
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 10
   If ([F:CALO]COA([L]A_I-1)<>"" or [F:CALO]ACC([L]A_I-1)<>"")
    [L]A_NEWCOL += 1
    MFGOPE.CALO(A_N2).C_COA(A_NEWCOL) = NewInstance  C_CPTANALIN_C_COA(MFGOPE.ACTX,NullUuid,[L]A_I,MFGOPE.CALO(A_N2),"C_COA") AllocGroup MFGOPE
    MFGOPE.CALO(A_N2).C_COA(A_NEWCOL).COA = [F:CALO]COA([L]A_I-1)
    MFGOPE.CALO(A_N2).C_COA(A_NEWCOL).ACC = [F:CALO]ACC([L]A_I-1)
    [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.CALO(A_N2).C_COA(A_NEWCOL).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 20
   [L]A_NEWCOL += 1
   MFGOPE.CALO(A_N2).C_DIE(A_NEWCOL) = NewInstance  C_CPTANALIN_C_DIE(MFGOPE.ACTX,NullUuid,[L]A_I,MFGOPE.CALO(A_N2),"C_DIE") AllocGroup MFGOPE
   MFGOPE.CALO(A_N2).C_DIE(A_NEWCOL).DIE = [F:CALO]DIE([L]A_I-1)
   MFGOPE.CALO(A_N2).C_DIE(A_NEWCOL).CCE = [F:CALO]CCE([L]A_I-1)
   [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.CALO(A_N2).C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 10
   If ([F:CALO]LED([L]A_I-1)<>"")
    [L]A_NEWCOL += 1
    MFGOPE.CALO(A_N2).C_LED(A_NEWCOL) = NewInstance  C_CPTANALIN_C_LED(MFGOPE.ACTX,NullUuid,[L]A_I,MFGOPE.CALO(A_N2),"C_LED") AllocGroup MFGOPE
    MFGOPE.CALO(A_N2).C_LED(A_NEWCOL).LED = [F:CALO]LED([L]A_I-1)
    [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.CALO(A_N2).C_LED(A_NEWCOL).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   Endif
  Next
  [L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.CALO(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  MFGOPE.CALO(A_N2).ASTALIN = [V]CST_ALL
 Next CALO
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet MFGOPE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



