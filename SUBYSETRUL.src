#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################################
# Script            : SUBYSETRUL                                                                                     #
# Creation date     : 19/11/2018                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : Majid (Leverage)                                                                               #
# Module            : Settlement Rule - Land Development                                                             #
# -------------------------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-187                                              #
# Description       : Settlement Rule                                                                                #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
######################################################################################################################

$ACTION

Case ACTION
  When "OUVRE"        : Gosub OUVRE
  When "FERME"        : Gosub FERME
  When "SETBOUT"      : Gosub SETBOUT
  When "RAZCRE"       : Gosub RAZCRE
  When "LIENS"        : Gosub LIENS
  When "VERIF_CRE"    : Gosub VERIF_CRE
  When "CREATION"     : Gosub CREATION
  When "APRES_CRE"    : Gosub APRES_CRE
  When "MODIF"        : Gosub MODIF
  When "APRES_MOD"    : Gosub APRES_MOD
  When "RAZDUP"       : Gosub RAZDUP
  When "AV_ANNULE"    : Gosub AV_ANNULE
  When "ANNULE"       : Gosub ANNULE
  When Default
Endcase
Return

#------------------------------------------------------------------------------------#
#Open screen
#------------------------------------------------------------------------------------#
$OUVRE
#disable the regular Classic CUD operations
ANOWRITE = 1

#nstance for your class
Global Instance YSETRUL_INSTANCE Using C_YSETRUL

Return

#------------------------------------------------------------------------------------#
#Close screen
#------------------------------------------------------------------------------------#
$FERME
#When you are leaving the transaction, you have to free the instance.
If (YSETRUL_INSTANCE <> null) : FreeGroup YSETRUL_INSTANCE : Endif
Kill YSETRUL_INSTANCE

Return

#------------------------------------------------------------------------------------#
#Refresh
#------------------------------------------------------------------------------------#
$SETBOUT

If GREP = "C" or GREP = "D"
  #Call VIREBOUT(CHAINE,"C") From GOBJET  :
  Diszo [M:YSTR]YRULID
  Actzo [M:YSTR]YEST, YLANDPUR, YPRECINCT, YSTAG, YLOT
Endif

Return

#------------------------------------------------------------------------------------#
#Before Create
#------------------------------------------------------------------------------------#
$RAZCRE

Local Integer MY_STATUS

If (YSETRUL_INSTANCE <> null) : FreeGroup YSETRUL_INSTANCE : Endif
YSETRUL_INSTANCE = NewInstance C_YSETRUL AllocGroup null

#Then you have to initialize the class properties by calling the AINIT method and/or setting properties manually
[L]MY_STATUS = fmet YSETRUL_INSTANCE.AINIT()
If ([L]MY_STATUS >= [V]CST_AERROR)
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YSETRUL_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

#To finish you have to refresh the UI to display the values of initialized properties.
#Because it is not possible to directly transfer class property values into screen field values, you may use the file [F] as interface.
#Complete the process for properties and fields with non matching name

SetInstance [F:YSTR] With YSETRUL_INSTANCE
[M:YSTR]  = [F:YSTR]

Affzo [M:YSTR]1-99

Return

#------------------------------------------------------------------------------------#
#Read record
#------------------------------------------------------------------------------------#
$LIENS

If (YSETRUL_INSTANCE <> null) : FreeGroup YSETRUL_INSTANCE : Endif
YSETRUL_INSTANCE = NewInstance C_YSETRUL AllocGroup null

Local Integer MY_STATUS
[L]MY_STATUS = fmet YSETRUL_INSTANCE.AREAD([M:YSTR]YRULID)
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YSETRUL_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif
#Read [F:YSTR]YSTR0 =[M:YSTR]YRULID
#[M:YSTR] = [F:YSTR]

Return

#------------------------------------------------------------------------------------#
#Create record
#------------------------------------------------------------------------------------#
$CREATION
Local Integer MY_STATUS

#YOU CAN USE THE INSTRUCTION SetInstance WHICH WILL SET PROPERTIE's values from field'S VALUES
#For PROPERTIE's names that are identical to a field'S NAME OF THE [F] File.
SetInstance YSETRUL_INSTANCE With [F:YSTR]


[L]MY_STATUS = fmet YSETRUL_INSTANCE.AINSERT()
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YSETRUL_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

SetInstance [F:YSTR] With YSETRUL_INSTANCE
Affzo [M:YSTR]1-99

Return

#------------------------------------------------------------------------------------#
#After create record
#------------------------------------------------------------------------------------#
$APRES_CRE

Gosub RELIT From GOBJSUB

Return

#------------------------------------------------------------------------------------#
#Modify record
#------------------------------------------------------------------------------------#
$MODIF
Local Integer MY_STATUS

SetInstance YSETRUL_INSTANCE With [F:YSTR]

[L]MY_STATUS = fmet YSETRUL_INSTANCE.AUPDATE()
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YSETRUL_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

Return

#------------------------------------------------------------------------------------#
#AFTER UPDATE
#------------------------------------------------------------------------------------#
$APRES_MOD

Gosub RELIT From GOBJSUB

Return

#------------------------------------------------------------------------------------#
#This action is called when a field of the primary key is changed
#------------------------------------------------------------------------------------#
$RAZDUP
Local Integer MY_STATUS

If (YSETRUL_INSTANCE <> null) : FreeGroup YSETRUL_INSTANCE : Endif
YSETRUL_INSTANCE = NewInstance C_YSETRUL AllocGroup null

[L]MY_STATUS = fmet YSETRUL_INSTANCE.AINIT()
If ([L]MY_STATUS >= [V]CST_AERROR)
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YSETRUL_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

Return

#------------------------------------------------------------------------------------#
#Begin delete record
#------------------------------------------------------------------------------------#
$AV_ANNULE
  Local Integer ANOWRITE
  ANOWRITE = 1
Return


#------------------------------------------------------------------------------------#
#Delete record
#------------------------------------------------------------------------------------#
$ANNULE

Local Integer MY_STATUS
[L]MY_STATUS = fmet YSETRUL_INSTANCE.ADELETE()
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YSETRUL_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

Return

#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(YSETRUL_INSTANCE)

  Variable Instance YSETRUL_INSTANCE Using C_YSETRUL

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(YSETRUL_INSTANCE, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End


#------------------------------------------------------------------------------------#
#Verificatio of create record
#------------------------------------------------------------------------------------#
$VERIF_CRE

# one of the object should be selected
If [M:YSTR]YEST=0 & [M:YSTR]YLANDPUR="" & [M:YSTR]YPRECINCT="" & [M:YSTR]YSTAG="" & [M:YSTR]YLOT=""
  GMESSAGE = mess(39,6255,1)      # At least one Object should have value
  GOK = 0
  GERR = 1
Endif

# Sequence Number
  Local Char SEQCODE
  Local Integer STAT
  Call NUMERO("YSETR","",date$,"",SEQCODE,STAT) From SUBANM

  SEQCODE = num$(val(SEQCODE) + 100000)

  [M:YSTR]YRULID = SEQCODE

  [M:YSTR]YACTFLG = 2


Return

