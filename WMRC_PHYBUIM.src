#<AdxTL>@(#)0.0.0.0 $Revision$Class Buildings
# Supervisor
## CRUD-CLASSE ## PHYBUIM
# 2018-08-27 13:21:37 850


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(PHYBUIM,ASTATUS)
Variable Instance PHYBUIM Using R_PHYBUIM
Variable Integer ASTATUS

If PHYBUIM = null : End : Endif

Gosub AVARIABLES From WMR00PHYBUIM
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_PHYBUIM
Else
 Gosub AINSERT_PHYBUIM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = PHYBUIM.freeSnapshot
PHYBUIM.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
PHYBUIM.ASTALIN = [V]CST_ANEW
PHYBUIM.BUI.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PHYBUIM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PHYBUIM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PHYBUIM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If PHYBUIM.BUI.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PHYBUIM.BUI.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PHYBUIM.BUI.BPA) : # BPADDRESS -- 2
 If PHYBUIM.BUI.BPA(A_N2) <> null
& and !find(PHYBUIM.BUI.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.BPA(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(PHYBUIM.BUI.BPA(A_N2).COLTEL)
   If PHYBUIM.BUI.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.BPA(A_N2).COLTEL([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(PHYBUIM.BUI.BPA(A_N2).COLWEB)
   If PHYBUIM.BUI.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.BPA(A_N2).COLWEB([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(PHYBUIM.BUI.BPA) : # BPADDRESS -- 2
 If PHYBUIM.BUI.BPA(A_N2) <> null
& and !find(PHYBUIM.BUI.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.BPA(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(PHYBUIM.BUI.BPA(A_N2).COLTEL)
   If PHYBUIM.BUI.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.BPA(A_N2).COLTEL([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(PHYBUIM.BUI.BPA(A_N2).COLWEB)
   If PHYBUIM.BUI.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.BPA(A_N2).COLWEB([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_PHYBUIM
Trbegin [F:BUI]
 Gosub AINSERT_PHYBUIM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(PHYBUIM.BUI.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PHYBUIM.BUI.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PHYBUIM.BUI.BPA)
 If PHYBUIM.BUI.BPA(A_N2) <> null
  [L]ASTATUS2 = fmet PHYBUIM.BUI.BPA(A_N2)._AINSERT_AFTER
  If PHYBUIM.BUI.BPA(A_N2).ASTALIN=[V]CST_ADEL or PHYBUIM.BUI.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PHYBUIM.BUI.BPA(A_N2)
   PHYBUIM.BUI.BPA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_PHYBUIM
[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.BUI._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYBUIM.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If PHYBUIM.snapshotEnabled=1
 [L]A_RETIK = PHYBUIM.revertUpdTick
Endif
[L]ASTATUS = max(fmet PHYBUIM.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



