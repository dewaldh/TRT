#<AdxTL>@(#)0.0.0.0 $Revision$Class Budget line
# Supervisor
## CRUD-CLASSE ## PJMBUDLIG
# 2018-08-27 12:39:51 320


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(PJMBUDLIG,ASTATUS)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Variable Integer ASTATUS

If PJMBUDLIG = null : End : Endif

Gosub _AVARIABLES From WMC00PJMBUDLIG

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_PJMBUDLIG

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PJMBUDLIG,ASTATUS)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Variable Integer ASTATUS

If PJMBUDLIG = null : End : Endif

Gosub AVARIABLES From WMC00PJMBUDLIG
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
PJMBUDLIG.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PJMBUDLIG
Else
 Gosub AUPDATE_PJMBUDLIG
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PJMBUDLIG.freeSnapshot
PJMBUDLIG.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PJMBUDLIG._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PJMBUDLIG._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PJMBUDLIG._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PJMBUDLIG.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMBUDLIG.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PJMBUDLIG.ASTALIN)<>""
 [L]A_ASTALIN = PJMBUDLIG.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(PJMBUDLIG.ASTALIN)<>""
 [L]A_ASTALIN = PJMBUDLIG.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PJMBUDLIG
Trbegin [F:PJLB]
 Gosub AUPDATE_PJMBUDLIG
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_PJMBUDLIG
[L]A_ASTALIN = PJMBUDLIG.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMBUDLIG.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMBUDLIG.ASTALIN,[V]CST_AUPD) & 
& fmet PJMBUDLIG.AGETATTRIBUTE("PLBDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMBUDLIG._MAJSQL_PJMBUDLIG_PLBDESTEX(PJMBUDLIG,PJMBUDLIG.PLBDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMBUDLIG.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMBUDLIG.ASTALIN,[V]CST_AUPD) & 
& fmet PJMBUDLIG.AGETATTRIBUTE("PLBCOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMBUDLIG._MAJSQL_PJMBUDLIG_PLBCOMTEX(PJMBUDLIG,PJMBUDLIG.PLBCOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMBUDLIG._MAJSQL_PJMBUDLIG(PJMBUDLIG))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = PJMBUDLIG.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PJMBUDLIG.snapshotEnabled=1
 [L]A_RETIK = PJMBUDLIG.revertUpdTick
Endif

[L]ASTATUS = max(fmet PJMBUDLIG.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PJMBUDLIG.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PJMBUDLIG.ASTALIN = [V]CST_ALL
Endif
Return



