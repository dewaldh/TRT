#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry MKI

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:33"
A_USER  = "ADMIN"
A_STAMP = "20180326134133"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(17927,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSMKISTD"
PROGSPE    = "CNSMKISPE"
CBOITE     = "DCNSMKI"
BOITE      = "FCNSMKI"
NOMMSK(0)  = "CONSMKI1"
ABMSK(0)   = "MKI1"
NOMMSK(1)  = "CONSMKI2"
ABMSK(1)   = "MKI2"
CMEMO      = "mki"
CNOMMSK    = "CRITMKI"
CABMSK     = "CMKI"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:MKI])=0 : Local File MFGITMTRK    [MKI] : Endif
If clalev([F:MFG])=0 : Local File MFGHEAD      [MFG] : Endif
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:ITM])=0 : Local File ITMMASTER    [ITM] : Endif
If clalev([F:MFI])=0 : Local File MFGITM       [MFI] : Endif
If clalev([F:MTK])=0 : Local File MFGHEADTRK   [MTK] : Endif
If clalev([F:TBO])=0 : Local File TABBOMALT    [TBO] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CMKI]
 When  0 : Local Mask =NOMMSK(0) [MKI1]
 When  1 : Local Mask =NOMMSK(1) [MKI2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CMKI]
 When  0 : Grizo [MKI1]
 When  1 : Grizo [MKI2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CMKI]ITMREFDEB)>0
 Grizo [CMKI]ITMREFDEB
Endif
If dim([M:CMKI]ITMREFFIN)>0
 Grizo [CMKI]ITMREFFIN
Endif
If dim([M:CMKI]MFGDATDEB)>0
 Grizo [CMKI]MFGDATDEB
Endif
If dim([M:CMKI]MFGDATFIN)>0
 Grizo [CMKI]MFGDATFIN
Endif
If dim([M:CMKI]MFGTNUMDEB)>0
 Grizo [CMKI]MFGTNUMDEB
Endif
If dim([M:CMKI]MFGTNUMFIN)>0
 Grizo [CMKI]MFGTNUMFIN
Endif
If dim([M:CMKI]MFGNUMDEB)>0
 Grizo [CMKI]MFGNUMDEB
Endif
If dim([M:CMKI]MFGNUMFIN)>0
 Grizo [CMKI]MFGNUMFIN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CMKI])>0 : Close Local Mask [CMKI] : Endif
 When  0 : If clalev([M:MKI1])>0 : Close Local Mask [MKI1] : Endif
 When  1 : If clalev([M:MKI2])>0 : Close Local Mask [MKI2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CMKI]
 When  0 : Default Mask [MKI1]
 When  1 : Default Mask [MKI2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CMKI]
 When  0 : Raz [M:MKI1]
 When  1 : Raz [M:MKI2]
Endcase
Return

$CRITENT
If dim([M:CMKI]ITMREFDEB)>0 & dim([M:MKI1]ITMREFDEB)>0
 [M:CMKI]ITMREFDEB = [M:MKI1]ITMREFDEB
Endif
If dim([M:CMKI]ITMREFFIN)>0 & dim([M:MKI1]ITMREFFIN)>0
 [M:CMKI]ITMREFFIN = [M:MKI1]ITMREFFIN
Endif
If dim([M:CMKI]MFGDATDEB)>0 & dim([M:MKI1]MFGDATDEB)>0
 [M:CMKI]MFGDATDEB = [M:MKI1]MFGDATDEB
Endif
If dim([M:CMKI]MFGDATFIN)>0 & dim([M:MKI1]MFGDATFIN)>0
 [M:CMKI]MFGDATFIN = [M:MKI1]MFGDATFIN
Endif
If dim([M:CMKI]MFGTNUMDEB)>0 & dim([M:MKI1]MFGTNUMDEB)>0
 [M:CMKI]MFGTNUMDEB = [M:MKI1]MFGTNUMDEB
Endif
If dim([M:CMKI]MFGTNUMFIN)>0 & dim([M:MKI1]MFGTNUMFIN)>0
 [M:CMKI]MFGTNUMFIN = [M:MKI1]MFGTNUMFIN
Endif
If dim([M:CMKI]MFGNUMDEB)>0 & dim([M:MKI1]MFGNUMDEB)>0
 [M:CMKI]MFGNUMDEB = [M:MKI1]MFGNUMDEB
Endif
If dim([M:CMKI]MFGNUMFIN)>0 & dim([M:MKI1]MFGNUMFIN)>0
 [M:CMKI]MFGNUMFIN = [M:MKI1]MFGNUMFIN
Endif
Return

$ENTCRIT
If dim([M:CMKI]ITMREFDEB)>0 & dim([M:MKI1]ITMREFDEB)>0
[M:MKI1]ITMREFDEB = [M:CMKI]ITMREFDEB
Endif
If dim([M:CMKI]ITMREFFIN)>0 & dim([M:MKI1]ITMREFFIN)>0
[M:MKI1]ITMREFFIN = [M:CMKI]ITMREFFIN
Endif
If dim([M:CMKI]MFGDATDEB)>0 & dim([M:MKI1]MFGDATDEB)>0
[M:MKI1]MFGDATDEB = [M:CMKI]MFGDATDEB
Endif
If dim([M:CMKI]MFGDATFIN)>0 & dim([M:MKI1]MFGDATFIN)>0
[M:MKI1]MFGDATFIN = [M:CMKI]MFGDATFIN
Endif
If dim([M:CMKI]MFGTNUMDEB)>0 & dim([M:MKI1]MFGTNUMDEB)>0
[M:MKI1]MFGTNUMDEB = [M:CMKI]MFGTNUMDEB
Endif
If dim([M:CMKI]MFGTNUMFIN)>0 & dim([M:MKI1]MFGTNUMFIN)>0
[M:MKI1]MFGTNUMFIN = [M:CMKI]MFGTNUMFIN
Endif
If dim([M:CMKI]MFGNUMDEB)>0 & dim([M:MKI1]MFGNUMDEB)>0
[M:MKI1]MFGNUMDEB = [M:CMKI]MFGNUMDEB
Endif
If dim([M:CMKI]MFGNUMFIN)>0 & dim([M:MKI1]MFGNUMFIN)>0
[M:MKI1]MFGNUMFIN = [M:CMKI]MFGNUMFIN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSMKI2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "MKI"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MFG","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "MKI"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MTK","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "MKI"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGTRKDAT(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT4<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT4
 VALBOUT(NBBOUT) = "MKI"
 VALBOUT(NBBOUT) += "~B4"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGTRKDAT(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT5<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT5
 VALBOUT(NBBOUT) = "MKI"
 VALBOUT(NBBOUT) += "~B5"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("2","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKI2]ITMREF(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:MKI2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSMKI2"
 When "B2"
  Onerrgo RIEN
  Assign "[M:MKI2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSMKI2"
 When "B3"
  Onerrgo RIEN
  Assign "[M:MKI1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MKI2]MFGTRKDAT(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MKI2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:MKI2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Onerrgo
  Call B3_NBLIG From ="W1CONSMKI2"
 When "B4"
  Onerrgo RIEN
  Assign "[M:MKI1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MKI2]MFGTRKDAT(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MKI2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:MKI2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Onerrgo
  Call B4_NBLIG From ="W1CONSMKI2"
 When "B5"
  Onerrgo RIEN
  Assign "[M:MKI1]MFGFCY" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:MKI2]ITMREF(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Onerrgo
  Call B5_NBLIG From ="W1CONSMKI2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


