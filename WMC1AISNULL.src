#<AdxTL>@(#)0.0.0.0 $Revision$Class Empty variables
# Supervisor
## ACLA-CLASSE ## AISNULL
# 2018-08-27 12:20:39 259


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : ACHAR Empty char ( Field A 30)
####################################################################

$SET_ACHAR
If [L]_AOLDVAL<>this.ACHAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACHAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACHAR
 Gosub PROPAGATE_ACHAR
Endif
Return

$INIT_ACHAR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACHAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACHAR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACHAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACHAR                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACHAR                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACHAR
[L]CURPRO = "ACHAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACHAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACHAR
[L]CURPRO = "ACHAR"
Return

$_AOTHERS_ACHAR
[L]CURPRO = "ACHAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACHAR
[L]CURPRO = "ACHAR"
Return

$PROPAGATE_ACHAR
this.isReadonly = 0
[L]CURPRO = "ACHAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACHAR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACHAR"
$_LNKPRO_ACHAR
Return


####################################################################
# 2 : ASHORT Empty shortint ( Field C 2)
####################################################################

$SET_ASHORT
If [L]_AOLDVAL<>this.ASHORT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ASHORT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ASHORT
 Gosub PROPAGATE_ASHORT
Endif
Return

$INIT_ASHORT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ASHORT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ASHORT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ASHORT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ASHORT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ASHORT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ASHORT
[L]CURPRO = "ASHORT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ASHORT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ASHORT
[L]CURPRO = "ASHORT"
Return

$_AOTHERS_ASHORT
[L]CURPRO = "ASHORT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ASHORT
[L]CURPRO = "ASHORT"
Return

$PROPAGATE_ASHORT
this.isReadonly = 0
[L]CURPRO = "ASHORT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ASHORT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ASHORT"
$_LNKPRO_ASHORT
Return


####################################################################
# 3 : AINT Empty integer ( Field L 4)
####################################################################

$SET_AINT
If [L]_AOLDVAL<>this.AINT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AINT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AINT
 Gosub PROPAGATE_AINT
Endif
Return

$INIT_AINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AINT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AINT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AINT                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AINT                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AINT
[L]CURPRO = "AINT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AINT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AINT
[L]CURPRO = "AINT"
Return

$_AOTHERS_AINT
[L]CURPRO = "AINT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AINT
[L]CURPRO = "AINT"
Return

$PROPAGATE_AINT
this.isReadonly = 0
[L]CURPRO = "AINT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AINT"
$_LNKPRO_AINT
Return


####################################################################
# 4 : ADEC Empty decimal ( Field DCB 2)
####################################################################

$SET_ADEC
If [L]_AOLDVAL<>this.ADEC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADEC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADEC
 Gosub PROPAGATE_ADEC
Endif
Return

$INIT_ADEC
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADEC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADEC
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADEC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADEC                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADEC                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADEC
[L]CURPRO = "ADEC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ADEC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADEC
[L]CURPRO = "ADEC"
Return

$_AOTHERS_ADEC
[L]CURPRO = "ADEC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADEC
[L]CURPRO = "ADEC"
Return

$PROPAGATE_ADEC
this.isReadonly = 0
[L]CURPRO = "ADEC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADEC
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADEC"
$_LNKPRO_ADEC
Return


####################################################################
# 5 : ADATE Empty date ( Field D)
####################################################################

$SET_ADATE
If [L]_AOLDVAL<>this.ADATE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADATE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADATE
 Gosub PROPAGATE_ADATE
Endif
Return

$INIT_ADATE
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADATE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADATE
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADATE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADATE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADATE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADATE
[L]CURPRO = "ADATE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ADATE=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADATE
[L]CURPRO = "ADATE"
Return

$_AOTHERS_ADATE
[L]CURPRO = "ADATE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADATE
[L]CURPRO = "ADATE"
Return

$PROPAGATE_ADATE
this.isReadonly = 0
[L]CURPRO = "ADATE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADATE
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADATE"
$_LNKPRO_ADATE
Return


####################################################################
# 6 : ALIB Libelle empty (obsolete) ( Field Local menu number 1)
####################################################################

$GET_ALIB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ALIB"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_ALIB
If [L]_AOLDVAL<>this.ALIB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALIB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALIB
 Gosub PROPAGATE_ALIB
Endif
Return

$INIT_ALIB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ALIB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALIB=0 and fmet this.AGETATTRIBUTE("ALIB","$isMandatory")="true"
 this.ALIB = 1
Endif
Return
 
$CONTROL_ALIB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ALIB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALIB                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALIB                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALIB
[L]CURPRO = "ALIB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALIB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALIB
[L]CURPRO = "ALIB"
If this.ALIB<0 or this.ALIB>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ALIB)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ALIB
[L]CURPRO = "ALIB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALIB
[L]CURPRO = "ALIB"
Return

$PROPAGATE_ALIB
this.isReadonly = 0
[L]CURPRO = "ALIB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALIB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ALIB"
$_LNKPRO_ALIB
Return


####################################################################
# 7 : ACLOB Clbfile empty ( Field AVOIDCLB 1)
####################################################################

$GET_ACLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACLOB"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_CLB("ACLOB",
& ""
& ,[L]_CNT,this.ACLOB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_ACLOB
If fmet this.AGETATTRIBUTE("ACLOB","$isLoaded")<>"true" or [L]_AOLDVAL<>this.ACLOB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACLOB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("ACLOB","$isLoaded")<>"true" or [L]_AOLDVAL<>this.ACLOB
 Gosub PROPAGATE_ACLOB
Endif
Return

$INIT_ACLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACLOB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACLOB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACLOB                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACLOB                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACLOB
[L]CURPRO = "ACLOB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.ACLOB)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACLOB
[L]CURPRO = "ACLOB"
Return

$_AOTHERS_ACLOB
[L]CURPRO = "ACLOB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACLOB
[L]CURPRO = "ACLOB"
Return

$PROPAGATE_ACLOB
this.isReadonly = 0
[L]CURPRO = "ACLOB"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ACLOB"
$_LNKPRO_ACLOB
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = func AISNULL_CSTD.GET_LOBEXIST(this,"ACLOB",[L]_EXI,"")
[L]ASTATUS = fmet this.ASETATTRIBUTE("ACLOB","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Return


####################################################################
# 8 : ABLOB Blbfile empty ( Field AVOIDBLB 1)
####################################################################

$GET_ABLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ABLOB"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_BLB("ABLOB",
& ""
& ,[L]_CNT,this.ABLOB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_ABLOB
If fmet this.AGETATTRIBUTE("ABLOB","$isLoaded")<>"true" or [L]_AOLDVAL<>this.ABLOB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ABLOB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("ABLOB","$isLoaded")<>"true" or [L]_AOLDVAL<>this.ABLOB
 Gosub PROPAGATE_ABLOB
Endif
Return

$INIT_ABLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ABLOB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ABLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ABLOB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ABLOB                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ABLOB                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ABLOB
[L]CURPRO = "ABLOB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.ABLOB)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ABLOB
[L]CURPRO = "ABLOB"
Return

$_AOTHERS_ABLOB
[L]CURPRO = "ABLOB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ABLOB
[L]CURPRO = "ABLOB"
Return

$PROPAGATE_ABLOB
this.isReadonly = 0
[L]CURPRO = "ABLOB"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ABLOB
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ABLOB"
$_LNKPRO_ABLOB
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = func AISNULL_CSTD.GET_LOBEXIST(this,"ABLOB",[L]_EXI,"")
[L]ASTATUS = fmet this.ASETATTRIBUTE("ABLOB","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Local Char _CNT(100)
[L]ASTATUS = func AISNULL_CSTD.GET_LOBCNT(this,"ABLOB",[L]_CNT,"")
[L]ASTATUS = fmet this.ASETATTRIBUTE("ABLOB","$contentType",[L]_CNT)
Return


####################################################################
# 10 : AUUIDENT Empty uuid ( Field  Uuident)
####################################################################

$SET_AUUIDENT
If [L]_AOLDVAL<>this.AUUIDENT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUIDENT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUIDENT
 Gosub PROPAGATE_AUUIDENT
Endif
Return

$INIT_AUUIDENT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AUUIDENT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUIDENT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AUUIDENT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUIDENT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUIDENT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUIDENT
[L]CURPRO = "AUUIDENT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUIDENT=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUIDENT
[L]CURPRO = "AUUIDENT"
Return

$_AOTHERS_AUUIDENT
[L]CURPRO = "AUUIDENT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUIDENT
[L]CURPRO = "AUUIDENT"
Return

$PROPAGATE_AUUIDENT
this.isReadonly = 0
[L]CURPRO = "AUUIDENT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUIDENT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AUUIDENT"
$_LNKPRO_AUUIDENT
Return


####################################################################
# 11 : ADATTIM Empty datetime ( Field ADATIM 0)
####################################################################

$SET_ADATTIM
If [L]_AOLDVAL<>this.ADATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADATTIM
 Gosub PROPAGATE_ADATTIM
Endif
Return

$INIT_ADATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADATTIM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADATTIM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADATTIM
[L]CURPRO = "ADATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ADATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADATTIM
[L]CURPRO = "ADATTIM"
Return

$_AOTHERS_ADATTIM
[L]CURPRO = "ADATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADATTIM
[L]CURPRO = "ADATTIM"
Return

$PROPAGATE_ADATTIM
this.isReadonly = 0
[L]CURPRO = "ADATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ADATTIM"
$_LNKPRO_ADATTIM
Return


####################################################################
# 12 : ATINYINT TinyInt empty ( Field Local menu number 1)
####################################################################

$GET_ATINYINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ATINYINT"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_ATINYINT
If [L]_AOLDVAL<>this.ATINYINT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ATINYINT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ATINYINT
 Gosub PROPAGATE_ATINYINT
Endif
Return

$INIT_ATINYINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ATINYINT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ATINYINT=0 and fmet this.AGETATTRIBUTE("ATINYINT","$isMandatory")="true"
 this.ATINYINT = 1
Endif
Return
 
$CONTROL_ATINYINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ATINYINT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ATINYINT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ATINYINT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ATINYINT
[L]CURPRO = "ATINYINT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ATINYINT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ATINYINT
[L]CURPRO = "ATINYINT"
If this.ATINYINT<0 or this.ATINYINT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ATINYINT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ATINYINT
[L]CURPRO = "ATINYINT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ATINYINT
[L]CURPRO = "ATINYINT"
Return

$PROPAGATE_ATINYINT
this.isReadonly = 0
[L]CURPRO = "ATINYINT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ATINYINT
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "ATINYINT"
$_LNKPRO_ATINYINT
Return


####################################################################
# 13 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 14 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 15 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 16 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 17 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0AISNULL
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




