#<AdxTL>@(#)0.0.0.0 $Revision$Class Economic reason code
# Supervisor
## CRUD-CLASSE ## PBDECOCOD
# 2018-08-27 12:37:30 777

Gosub TEST From WMCR_PBDECOCOD : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,COD,LEG)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# PBDECOCOD : PBDECOCOD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet PBDECOCOD._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = PBDECOCOD.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(PBDECOCOD.ACTX.AFOLDER,nomap,"")>0
 Local File PBDECOCOD [PBDECO]
 Local File PBDECOCOD [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =PBDECOCOD.ACTX.AFOLDER+".PBDECOCOD" [PBDECO]
 Local File =PBDECOCOD.ACTX.AFOLDER+".PBDECOCOD" [AAA_]
 Local File =PBDECOCOD.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet PBDECOCOD.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [PBDECO] With
& [AAA_]PBDECO0 = COD+LEG
& As [LNK_]
Return

############################################################################################
### PBDECOCOD(WPBDECO)
############################################################################################
Funprog  _MAJSQL_PBDECOCOD(WPBDECO)
Variable Instance WPBDECO Using C_PBDECOCOD
Local Integer ASTATUS,A_I,A_J
Default File [F:PBDECO]
If WPBDECO.ASTALIN=[V]CST_ANEW
 Call INICRE(WPBDECO) From ASYRSUB
 SetInstance [F:PBDECO] With WPBDECO
 For J=1 To maxtab(WPBDECO.AXX)
  If WPBDECO.AXX(J)<>null & WPBDECO.AXX(J).PRO= "DES" & WPBDECO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPBDECO,WPBDECO.AXX(J).TEX,"PBDECOCOD","DES",WPBDECO.AXX(J).LAN,WPBDECO.COD,WPBDECO.LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPBDECO.AXX)
  If WPBDECO.AXX(J)<>null & WPBDECO.AXX(J).PRO= "TIT" & WPBDECO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPBDECO,WPBDECO.AXX(J).TEX,"PBDECOCOD","TIT",WPBDECO.AXX(J).LAN,WPBDECO.COD,WPBDECO.LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:PBDECO]
 If fstat
  Call FSTA("PBDECO",WPBDECO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPBDECO.updTick = [F:PBDECO]updTick
Elsif WPBDECO.ASTALIN=[V]CST_ALL or WPBDECO.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPBDECO) From ASYRSUB
 SetInstance [F:PBDECO] With WPBDECO
 For J=1 To maxtab(WPBDECO.AXX)
  If WPBDECO.AXX(J)<>null & WPBDECO.AXX(J).PRO= "DES" & WPBDECO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPBDECO,WPBDECO.AXX(J).TEX,"PBDECOCOD","DES",WPBDECO.AXX(J).LAN,WPBDECO.COD,WPBDECO.LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPBDECO.AXX)
  If WPBDECO.AXX(J)<>null & WPBDECO.AXX(J).PRO= "TIT" & WPBDECO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPBDECO,WPBDECO.AXX(J).TEX,"PBDECOCOD","TIT",WPBDECO.AXX(J).LAN,WPBDECO.COD,WPBDECO.LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPBDECO,"PBDECOCOD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PBDECO]PBDECO0 = [F:PBDECO]COD;[F:PBDECO]LEG
 If fstat
  Call FSTA("PBDECO",WPBDECO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPBDECO.updTick = [F:PBDECO]updTick
Elsif WPBDECO.ASTALIN=[V]CST_ADEL
 SetInstance [F:PBDECO] With WPBDECO
 For J=1 To maxtab(WPBDECO.AXX)
  If WPBDECO.AXX(J)<>null & WPBDECO.AXX(J).PRO= "DES"
   Call SUPTEXTRA(WPBDECO,WPBDECO.AXX(J).TEX,"PBDECOCOD","DES",WPBDECO.AXX(J).LAN,WPBDECO.COD,WPBDECO.LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPBDECO.AXX)
  If WPBDECO.AXX(J)<>null & WPBDECO.AXX(J).PRO= "TIT"
   Call SUPTEXTRA(WPBDECO,WPBDECO.AXX(J).TEX,"PBDECOCOD","TIT",WPBDECO.AXX(J).LAN,WPBDECO.COD,WPBDECO.LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPBDECO,"PBDECOCOD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PBDECO]PBDECO0 = [F:PBDECO]COD;[F:PBDECO]LEG
 If fstat
  Call FSTA("PBDECO",WPBDECO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



