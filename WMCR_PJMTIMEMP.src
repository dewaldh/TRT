#<AdxTL>@(#)0.0.0.0 $Revision$Class Time summary
# Supervisor
## CRUD-CLASSE ## PJMTIMEMP
# 2018-08-27 12:40:29 553


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMTIMEMP [PTE_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMTIMEMP") From ASYRCOM : Endif
Local Instance PJMTIMEMP Using C_PJMTIMEMP

If !SILENCE : Call TRACE("3 --> New Instance C_PJMTIMEMP") From ASYRCOM : Endif
PJMTIMEMP = NewInstance C_PJMTIMEMP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PTE_]PTE0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMTIMEMP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.AREAD([PTE_]CLB,[PTE_]OPPNUM,[PTE_]PTEDAT,[PTE_]PTESEQ))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMTIMEMP.CLB ="-num$(PJMTIMEMP.CLB)) From ASYRCOM
 Call TRACE("PJMTIMEMP.OPPNUM ="-num$(PJMTIMEMP.OPPNUM)) From ASYRCOM
 Call TRACE("PJMTIMEMP.PTEDAT ="-num$(PJMTIMEMP.PTEDAT)) From ASYRCOM
 Call TRACE("PJMTIMEMP.PTESEQ ="-num$(PJMTIMEMP.PTESEQ)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMTIMEMP.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMTIMEMP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PTE_]
FreeGroup PJMTIMEMP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMTIMEMP,ACLE,ASTATUS,_ETAG)
Variable Instance PJMTIMEMP Using C_PJMTIMEMP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CLB(5)
Local Char _OPPNUM(40)
Local Date _PTEDAT
Local Integer _PTESEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CLB = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_OPPNUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PTEDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PTESEQ = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File PJMTIMEMP [PTE]
Default File [F:PTE]
Read [F:PTE]PTE0 = [L]_CLB;[L]_OPPNUM;[L]_PTEDAT;[L]_PTESEQ
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PTE]UPDTICK)>0
 [L]_ETAG = num$([F:PTE]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMTIMEMP,ACLE,ASTATUS)
Variable Instance PJMTIMEMP Using C_PJMTIMEMP
Value Char ACLE
Variable Integer ASTATUS
Local Char _CLB(5)
Local Char _OPPNUM(40)
Local Date _PTEDAT
Local Integer _PTESEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CLB = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_OPPNUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PTEDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PTESEQ = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.AREAD([L]_CLB,[L]_OPPNUM,[L]_PTEDAT,[L]_PTESEQ))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMTIMEMP,_CLB,_OPPNUM,_PTEDAT,_PTESEQ,ASTATUS)
Variable Instance PJMTIMEMP Using C_PJMTIMEMP
Value Char _CLB
Value Char _OPPNUM
Value Date _PTEDAT
Value Integer _PTESEQ
Variable Integer ASTATUS

If PJMTIMEMP = null : End : Endif

Gosub AVARIABLES From WMC00PJMTIMEMP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMTIMEMP.APARENT=null
 [L]A_I = PJMTIMEMP.freeSnapshot
 PJMTIMEMP.snapshotEnabled = 0
 PJMTIMEMP.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMTIMEMP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMTIMEMP.APARENT=null
 PJMTIMEMP.snapshotEnabled = 1
 PJMTIMEMP.setAccessorEnabled = 1
Endif
LogicClose File [PTE]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP._ACTION_PARAM("AREAD_BEFORE",[L]_CLB,[L]_OPPNUM,[L]_PTEDAT,[L]_PTESEQ))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PTE]
Read [F:PTE]PTE0 = [L]_CLB;[L]_OPPNUM;[L]_PTEDAT;[L]_PTESEQ
If fstat
[L]A_ERROR = [L]_CLB+"~"+[L]_OPPNUM+"~"+num$([L]_PTEDAT)+"~"+num$([L]_PTESEQ)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTIMEMP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PTE]AUUID)>0 & [F:PTE]AUUID=NullUuid
 [F:PTE]AUUID = getUuid
Endif
If dim([F:PTE]PTEDESTEX)>0: Raz [F:PTE]PTEDESTEX: Endif
If dim([F:PTE]PTECOMTEX)>0: Raz [F:PTE]PTECOMTEX: Endif
SetInstance PJMTIMEMP With [F:PTE]
PJMTIMEMP.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PJMTIMEMP" & ZONE="PTEDESAXX" & IDENT1=PJMTIMEMP.KEYCONCAT & IDENT2=""
 Call ASETTEXTRA(PJMTIMEMP.AXX,PJMTIMEMP.AllocGrp(),"PTEDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMTIMEMP.AXX(maxtab(PJMTIMEMP.AXX)).FLG = 0
Next AXX
If !len(fmet PJMTIMEMP.AGETTEXTRA("PTEDESAXX"))
 Call ASETTEXTRA(PJMTIMEMP.AXX,PJMTIMEMP.AllocGrp(),"PTEDESAXX",
& fmet PJMTIMEMP.AGETTEXTRALAN("PTEDESAXX",PJMTIMEMP.ACTX.AFOLD.ALANGDEF),
& PJMTIMEMP.ACTX.LAN) From ASYRSUB
Endif

Return



