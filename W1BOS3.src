#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management BOS3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:52:37"
A_USER  = "ADMIN"
A_STAMP = "20180827235237"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask BOS3 [BOS3]
Gosub HORODAT
Local Inpbox "BOS3" From GFONCTION At A_STAMP With A_WINDPREV Mask [BOS3] As [SIM_]
Grizo [BOS3]20
Grizo [BOS3]0
Grizo [BOS3]25
Grizo [BOS3]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BOS3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=17 : X2(0)=96 : Y1(0)=10 : Y2(0)=12
X1(1)=17 : X2(1)=44 : Y1(1)=13 : Y2(1)=12
X1(2)=17 : X2(2)=73 : Y1(2)=13 : Y2(2)=19
X1(3)=74 : X2(3)=96 : Y1(3)=13 : Y2(3)=19
Return

$ON_BOMSEQ
Onevent INIT_AREA Call D_BOMSEQ(zc) From W1BOS3
Onevent BEFORE_INPUT Call AS_BOMSEQ(zc) From W1BOS3
Onevent CONTROL Call C_BOMSEQ(zc) From W1BOS3
Return

Subprog D_BOMSEQ(VALEUR)
Variable Decimal VALEUR
If varinit([M]BOMSEQ,indice)=0
 ## Action STD
 Call D_BOMSEQ(VALEUR) From SUBBODB
Endif
Gosub _AFF
End

Subprog AS_BOMSEQ(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMSEQ(VALEUR) From SUBBODB
If mkstat=2
 [M]BOMSEQ(INDIC) = VALEUR
 Affzo BOMSEQ(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BOMSEQ(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMSEQ" : GZNUM = 1251 : Endif
Gosub _AFF
End

$ON_CPNITMREF
Onevent CONTROL Call C_CPNITMREF(zc) From W1BOS3
Onevent BEFORE_INPUT Call AS_CPNITMREF(zc) From W1BOS3
Onevent AFTER_CHANGE Gosub AMM_CPNITMREF From W1BOS3
Return

Subprog IB_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_CPNITMREF(VALEUR)
## Action STD
Call AS_CPNITMREF(VALEUR) From SUBBODB
If mkstat=2
 [M]CPNITMREF(INDIC) = VALEUR
 Affzo CPNITMREF(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CPNITMREF(zc) From W1BOS3
Onkey 170 Titled GBOUT13 Call B13_CPNITMREF(zc) From W1BOS3
Onkey   2 Titled GBOUTS Call S_CPNITMREF(zc) From W1BOS3
Onkey 144 Titled GBOUTP Call P_CPNITMREF(zc) From W1BOS3
Onkey 146 Titled GBOUTA Call SA_CPNITMREF(zc) From W1BOS3
Gosub _AFF
End

Subprog C_CPNITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
If !GWEBSERV
 If !mkstat
  ## Action ITMCHOICE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "ITMCHOICE"
  Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
 Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","E",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
  If !mkstat
   ## Action STD
   Call C_CPNITMREF(VALEUR) From SUBBODB
   If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPNITMREF
Call AM_CPNITMREF(zc)
If !mkstat & GOBJET
 zoncou = "CPNITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPNITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CPNITMREF(VALEUR) From SUBBODB
If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
If !GWEBSERV
 If !mkstat
  ## Action NOTE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "NOTE"
  PARMSK(1) = VALEUR
  PARMSK(2) = "ITMREF"
  Call TRAITE_CHAR(VALEUR,PARMSK,"NOTE","TRTNTSCTL","",1,"") From GTRAITE
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 38667 : Endif
 Endif
Endif
If !mkstat & evalue("dim("+clanam([M])+"ZCPNITMREF)")>indice
 [M]CPNITMREF(indice) = VALEUR
 Affzo ZCPNITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITMBOH
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITMBOH"
 PARMSK(1) = "SCSFLG=2"
 PARMSK(2) = "#$"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITMBOH","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPNITMREF
Onevent BEFORE_AREA Gosub AV_ZCPNITMREF From W1BOS3
Return

$AV_ZCPNITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]CPNITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_BOMSTRDAT
Onevent BEFORE_AREA Gosub AV_BOMSTRDAT From W1BOS3
Return

$AV_BOMSTRDAT
Chgfmt [M]BOMSTRDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

$ON_BOMENDDAT
Onevent BEFORE_AREA Gosub AV_BOMENDDAT From W1BOS3
Return

$AV_BOMENDDAT
Chgfmt [M]BOMENDDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

$ON_LIKQTYCOD
Onevent INIT_AREA Call D_LIKQTYCOD(zc) From W1BOS3
Onevent BEFORE_INPUT Call AS_LIKQTYCOD(zc) From W1BOS3
Return

Subprog D_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LIKQTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYRND
Onevent INIT_AREA Call D_QTYRND(zc) From W1BOS3
Onevent BEFORE_INPUT Call AS_QTYRND(zc) From W1BOS3
Return

Subprog D_QTYRND(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYRND,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYRND(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LIKQTY
Onevent BEFORE_AREA Gosub AV_LIKQTY From W1BOS3
Onevent INIT_AREA Call D_LIKQTY(zc) From W1BOS3
Onevent CONTROL Call C_LIKQTY(zc) From W1BOS3
Return

$AV_LIKQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]LIKQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog D_LIKQTY(VALEUR)
Variable Decimal VALEUR
If varinit([M]LIKQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_LIKQTY(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1BOS3
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DESSHO",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WBOMSTUCOE
Onevent INIT_AREA Call D_WBOMSTUCOE(zc) From W1BOS3
Return

Subprog D_WBOMSTUCOE(VALEUR)
Variable Decimal VALEUR
If varinit([M]WBOMSTUCOE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CSTFLG
Onevent INIT_AREA Call D_CSTFLG(zc) From W1BOS3
Onevent BEFORE_INPUT Call AS_CSTFLG(zc) From W1BOS3
Return

Subprog D_CSTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CSTFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CSTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


