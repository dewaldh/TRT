#<AdxTL>@(#)0.0.0.0 $Revision$Class Housing Jobs
# Supervisor
## ACLA-CLASSE ## YHOU
# 2019-05-02 03:03:18 224

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : CUSCUR Currency ( Field CUR 3)
####################################################################
 
$SET_CUSCUR
If [L]_AOLDVAL<>this.CUSCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CUSCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CUSCUR
 Gosub PROPAGATE_CUSCUR
Endif
Return

$INIT_CUSCUR
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "CUSCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CUSCUR
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "CUSCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CUSCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CUSCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CUSCUR
[L]CURPRO = "CUSCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CUSCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CUSCUR
[L]CURPRO = "CUSCUR"
If vireblc(this.CUSCUR,2)<>vireblc(format$("K:3c",this.CUSCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CUSCUR
[L]CURPRO = "CUSCUR"
If vireblc(this.CUSCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CUSCUR",this.CUSCUR,this.CUSCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CUSCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CUSCUR
[L]CURPRO = "CUSCUR"
Return

$PROPAGATE_CUSCUR
this.isReadonly = 0
[L]CURPRO = "CUSCUR"
Gosub _LNKPRO_CUSCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CUSCUR
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "CUSCUR"
$_LNKPRO_CUSCUR
If vireblc(this.CUSCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CUSCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUSCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUSCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CUSCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUSCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUSCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 2 : CONTPRCINC Contract Price Incl. GST ( Field DCB 9)
####################################################################
 
$SET_CONTPRCINC
If [L]_AOLDVAL<>this.CONTPRCINC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CONTPRCINC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CONTPRCINC
 Gosub PROPAGATE_CONTPRCINC
Endif
Return

$INIT_CONTPRCINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "CONTPRCINC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CONTPRCINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "CONTPRCINC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CONTPRCINC            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CONTPRCINC            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CONTPRCINC
[L]CURPRO = "CONTPRCINC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CONTPRCINC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CONTPRCINC
[L]CURPRO = "CONTPRCINC"
Return

$_AOTHERS_CONTPRCINC
[L]CURPRO = "CONTPRCINC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CONTPRCINC
[L]CURPRO = "CONTPRCINC"
Return

$PROPAGATE_CONTPRCINC
this.isReadonly = 0
[L]CURPRO = "CONTPRCINC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CONTPRCINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "CONTPRCINC"
$_LNKPRO_CONTPRCINC
Return


####################################################################
# 3 : TOTCLAMINC Total Claimed Incl. GST ( Field DCB 9)
####################################################################
 
$SET_TOTCLAMINC
If [L]_AOLDVAL<>this.TOTCLAMINC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOTCLAMINC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOTCLAMINC
 Gosub PROPAGATE_TOTCLAMINC
Endif
Return

$INIT_TOTCLAMINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTCLAMINC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOTCLAMINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTCLAMINC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOTCLAMINC            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOTCLAMINC            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOTCLAMINC
[L]CURPRO = "TOTCLAMINC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOTCLAMINC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOTCLAMINC
[L]CURPRO = "TOTCLAMINC"
Return

$_AOTHERS_TOTCLAMINC
[L]CURPRO = "TOTCLAMINC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOTCLAMINC
[L]CURPRO = "TOTCLAMINC"
Return

$PROPAGATE_TOTCLAMINC
this.isReadonly = 0
[L]CURPRO = "TOTCLAMINC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOTCLAMINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTCLAMINC"
$_LNKPRO_TOTCLAMINC
Return


####################################################################
# 4 : TOTVARINC Total Variations Incl. GST ( Field DCB 9)
####################################################################
 
$SET_TOTVARINC
If [L]_AOLDVAL<>this.TOTVARINC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOTVARINC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOTVARINC
 Gosub PROPAGATE_TOTVARINC
Endif
Return

$INIT_TOTVARINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTVARINC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOTVARINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTVARINC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOTVARINC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOTVARINC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOTVARINC
[L]CURPRO = "TOTVARINC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOTVARINC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOTVARINC
[L]CURPRO = "TOTVARINC"
Return

$_AOTHERS_TOTVARINC
[L]CURPRO = "TOTVARINC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOTVARINC
[L]CURPRO = "TOTVARINC"
Return

$PROPAGATE_TOTVARINC
this.isReadonly = 0
[L]CURPRO = "TOTVARINC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOTVARINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTVARINC"
$_LNKPRO_TOTVARINC
Return


####################################################################
# 5 : TOTRECVD Total Received ( Field DCB 9)
####################################################################
 
$SET_TOTRECVD
If [L]_AOLDVAL<>this.TOTRECVD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOTRECVD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOTRECVD
 Gosub PROPAGATE_TOTRECVD
Endif
Return

$INIT_TOTRECVD
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTRECVD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOTRECVD
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTRECVD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOTRECVD              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOTRECVD              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOTRECVD
[L]CURPRO = "TOTRECVD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOTRECVD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOTRECVD
[L]CURPRO = "TOTRECVD"
Return

$_AOTHERS_TOTRECVD
[L]CURPRO = "TOTRECVD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOTRECVD
[L]CURPRO = "TOTRECVD"
Return

$PROPAGATE_TOTRECVD
this.isReadonly = 0
[L]CURPRO = "TOTRECVD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOTRECVD
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "TOTRECVD"
$_LNKPRO_TOTRECVD
Return


####################################################################
# 6 : ADJCONTINC Adj. Contract Price Incl. GST ( Field DCB 9)
####################################################################
 
$SET_ADJCONTINC
If [L]_AOLDVAL<>this.ADJCONTINC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADJCONTINC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADJCONTINC
 Gosub PROPAGATE_ADJCONTINC
Endif
Return

$INIT_ADJCONTINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "ADJCONTINC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADJCONTINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "ADJCONTINC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADJCONTINC            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADJCONTINC            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADJCONTINC
[L]CURPRO = "ADJCONTINC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ADJCONTINC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADJCONTINC
[L]CURPRO = "ADJCONTINC"
Return

$_AOTHERS_ADJCONTINC
[L]CURPRO = "ADJCONTINC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADJCONTINC
[L]CURPRO = "ADJCONTINC"
Return

$PROPAGATE_ADJCONTINC
this.isReadonly = 0
[L]CURPRO = "ADJCONTINC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADJCONTINC
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "ADJCONTINC"
$_LNKPRO_ADJCONTINC
Return


####################################################################
# 7 : BALOWING Balance Owing ( Field DCB 9)
####################################################################
 
$SET_BALOWING
If [L]_AOLDVAL<>this.BALOWING
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BALOWING
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BALOWING
 Gosub PROPAGATE_BALOWING
Endif
Return

$INIT_BALOWING
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "BALOWING"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BALOWING
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "BALOWING"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BALOWING              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BALOWING              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BALOWING
[L]CURPRO = "BALOWING"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BALOWING=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BALOWING
[L]CURPRO = "BALOWING"
Return

$_AOTHERS_BALOWING
[L]CURPRO = "BALOWING"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BALOWING
[L]CURPRO = "BALOWING"
Return

$PROPAGATE_BALOWING
this.isReadonly = 0
[L]CURPRO = "BALOWING"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BALOWING
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "BALOWING"
$_LNKPRO_BALOWING
Return


####################################################################
# 8 : JOBACTIVE Job Active ( Field Local menu number 1)
####################################################################
 
$SET_JOBACTIVE
If [L]_AOLDVAL<>this.JOBACTIVE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_JOBACTIVE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.JOBACTIVE
 Gosub PROPAGATE_JOBACTIVE
Endif
Return

$INIT_JOBACTIVE
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "JOBACTIVE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.JOBACTIVE=0 and fmet this.AGETATTRIBUTE("JOBACTIVE","$isMandatory")="true"
 this.JOBACTIVE = 1
Endif
Return
 
$CONTROL_JOBACTIVE
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "JOBACTIVE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_JOBACTIVE             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_JOBACTIVE             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_JOBACTIVE
[L]CURPRO = "JOBACTIVE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.JOBACTIVE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_JOBACTIVE
[L]CURPRO = "JOBACTIVE"
If this.JOBACTIVE<0 or this.JOBACTIVE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.JOBACTIVE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_JOBACTIVE
[L]CURPRO = "JOBACTIVE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_JOBACTIVE
[L]CURPRO = "JOBACTIVE"
Return

$PROPAGATE_JOBACTIVE
this.isReadonly = 0
[L]CURPRO = "JOBACTIVE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_JOBACTIVE
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "JOBACTIVE"
$_LNKPRO_JOBACTIVE
Return


####################################################################
# 9 : ADDQUERY Address ( Field A 250)
####################################################################
 
$SET_ADDQUERY
If [L]_AOLDVAL<>this.ADDQUERY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADDQUERY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADDQUERY
 Gosub PROPAGATE_ADDQUERY
Endif
Return

$INIT_ADDQUERY
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "ADDQUERY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADDQUERY
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "ADDQUERY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADDQUERY              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADDQUERY              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADDQUERY
[L]CURPRO = "ADDQUERY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ADDQUERY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADDQUERY
[L]CURPRO = "ADDQUERY"
Return

$_AOTHERS_ADDQUERY
[L]CURPRO = "ADDQUERY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADDQUERY
[L]CURPRO = "ADDQUERY"
Return

$PROPAGATE_ADDQUERY
this.isReadonly = 0
[L]CURPRO = "ADDQUERY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADDQUERY
Gosub DECLARE_VAR From WMR0YHOU
[L]CURPRO = "ADDQUERY"
$_LNKPRO_ADDQUERY
Return




