#<AdxTL>@(#)0.0.0.0 $Revision$Class 
# Sage X3 supervisor
## ACLA-CLASSE ## WMACONTEXT
# 2018-08-07 02:17:53 318

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMACONTEXT_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "ACONTEXT_CMET"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod 
$ACTX_INIT_LAN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ACTX_INIT_LAN" : [L]ACTION = "ACTX_INIT_LAN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$ACTX_INIT_LANISO
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ACTX_INIT_LANISO" : [L]ACTION = "ACTX_INIT_LANISO" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$ACTX_SET_LANISO
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ACTX_SET_LANISO" : [L]ACTION = "ACTX_SET_LANISO" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$ACLEAN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ACLEAN" : [L]ACTION = "ACLEAN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$ACLEANRIGHT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ACLEANRIGHT" : [L]ACTION = "ACLEANRIGHT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHT" : [L]ACTION = "AGETAFCRIGHT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTFCY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTFCY" : [L]ACTION = "AGETAFCRIGHTFCY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTCPY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTCPY" : [L]ACTION = "AGETAFCRIGHTCPY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTC" : [L]ACTION = "AGETAFCRIGHTC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTR
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTR" : [L]ACTION = "AGETAFCRIGHTR" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTU
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTU" : [L]ACTION = "AGETAFCRIGHTU" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTD" : [L]ACTION = "AGETAFCRIGHTD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTN" : [L]ACTION = "AGETAFCRIGHTN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETAFCRIGHTALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETAFCRIGHTALL" : [L]ACTION = "AGETAFCRIGHTALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETACSRIGHTALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETACSRIGHTALL" : [L]ACTION = "AGETACSRIGHTALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETACSRIGHTC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETACSRIGHTC" : [L]ACTION = "AGETACSRIGHTC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETACSRIGHTM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETACSRIGHTM" : [L]ACTION = "AGETACSRIGHTM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETACSRIGHTE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETACSRIGHTE" : [L]ACTION = "AGETACSRIGHTE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AFINDFCY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AFINDFCY" : [L]ACTION = "AFINDFCY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETNBFCY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETNBFCY" : [L]ACTION = "AGETNBFCY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AFINDLEG
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AFINDLEG" : [L]ACTION = "AFINDLEG" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETNBLEG
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETNBLEG" : [L]ACTION = "AGETNBLEG" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AFINDCPY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AFINDCPY" : [L]ACTION = "AFINDCPY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETNBCPY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETNBCPY" : [L]ACTION = "AGETNBCPY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETCRITROLE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETCRITROLE" : [L]ACTION = "AGETCRITROLE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$ASTACRITROLE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "ASTACRITROLE" : [L]ACTION = "ASTACRITROLE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICACV
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICACV" : [L]ACTION = "AGETLICACV" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICFCT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICFCT" : [L]ACTION = "AGETLICFCT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICKIT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICKIT" : [L]ACTION = "AGETLICKIT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICLAN
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICLAN" : [L]ACTION = "AGETLICLAN" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICLEG
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICLEG" : [L]ACTION = "AGETLICLEG" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICMOD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICMOD" : [L]ACTION = "AGETLICMOD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICPAR
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICPAR" : [L]ACTION = "AGETLICPAR" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLICLIC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLICLIC" : [L]ACTION = "AGETLICLIC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLIC_PARTNERID
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLIC_PARTNERID" : [L]ACTION = "AGETLIC_PARTNERID" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLIC_PRODUCTVER
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLIC_PRODUCTVER" : [L]ACTION = "AGETLIC_PRODUCTVER" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLIC_POLICYCODE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLIC_POLICYCODE" : [L]ACTION = "AGETLIC_POLICYCODE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLIC_POLICYVER
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLIC_POLICYVER" : [L]ACTION = "AGETLIC_POLICYVER" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLIC_EXPIRED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLIC_EXPIRED" : [L]ACTION = "AGETLIC_EXPIRED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETLIC_SERIAL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETLIC_SERIAL" : [L]ACTION = "AGETLIC_SERIAL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod 
$AGETPRFFCYDEF
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AGETPRFFCYDEF" : [L]ACTION = "AGETPRFFCYDEF" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0WMACONTEXT
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
If this.ACPT<>null
 [L]ASTATUS = fmet this.ACPT._AERROR(_CTX,_SUPP)
Endif
If this.AENV<>null
 [L]ASTATUS = fmet this.AENV._AERROR(_CTX,_SUPP)
Endif
If this.AFOLD<>null
 [L]ASTATUS = fmet this.AFOLD._AERROR(_CTX,_SUPP)
Endif
If this.AINTL<>null
 [L]ASTATUS = fmet this.AINTL._AERROR(_CTX,_SUPP)
Endif
If this.ASOL<>null
 [L]ASTATUS = fmet this.ASOL._AERROR(_CTX,_SUPP)
Endif
If this.TRC<>null
 [L]ASTATUS = fmet this.TRC._AERROR(_CTX,_SUPP)
Endif
If this.APARAM<>null
 [L]ASTATUS = fmet this.APARAM._AERROR(_CTX,_SUPP)
Endif
If this.ACACHE<>null
 [L]ASTATUS = fmet this.ACACHE._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0WMACONTEXT
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
If this.ACPT<>null
 [L]ASTATUS = fmet this.ACPT._ADELERRORS(_APARAM)
Endif
If this.AENV<>null
 [L]ASTATUS = fmet this.AENV._ADELERRORS(_APARAM)
Endif
If this.AFOLD<>null
 [L]ASTATUS = fmet this.AFOLD._ADELERRORS(_APARAM)
Endif
If this.AINTL<>null
 [L]ASTATUS = fmet this.AINTL._ADELERRORS(_APARAM)
Endif
If this.ASOL<>null
 [L]ASTATUS = fmet this.ASOL._ADELERRORS(_APARAM)
Endif
If this.TRC<>null
 [L]ASTATUS = fmet this.TRC._ADELERRORS(_APARAM)
Endif
If this.APARAM<>null
 [L]ASTATUS = fmet this.APARAM._ADELERRORS(_APARAM)
Endif
If this.ACACHE<>null
 [L]ASTATUS = fmet this.ACACHE._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0WMACONTEXT
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
If this.ACPT<>null
 [L]ASTATUS = fmet this.ACPT._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'ACPT')
Endif
If this.AENV<>null
 [L]ASTATUS = fmet this.AENV._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'AENV')
Endif
If this.AFOLD<>null
 [L]ASTATUS = fmet this.AFOLD._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'AFOLD')
Endif
If this.AINTL<>null
 [L]ASTATUS = fmet this.AINTL._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'AINTL')
Endif
If this.ASOL<>null
 [L]ASTATUS = fmet this.ASOL._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'ASOL')
Endif
If this.TRC<>null
 [L]ASTATUS = fmet this.TRC._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'TRC')
Endif
If this.APARAM<>null
 [L]ASTATUS = fmet this.APARAM._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'APARAM')
Endif
If this.ACACHE<>null
 [L]ASTATUS = fmet this.ACACHE._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'ACACHE')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0WMACONTEXT
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



