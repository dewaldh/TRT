#<AdxTL>@(#)0.0.0.0 $Revision$Class Interface
# Supervisor
## ACLA-CLASSE ## SIDTOSVIC
# 2018-08-27 12:45:56 441

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "SIDTOSVIC_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod After
$AFTER_CHANGES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "AFTER_CHANGES" : [L]ACTION = "AFTER_CHANGES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Before
$BEFORE_CHANGES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "BEFORE_CHANGES" : [L]ACTION = "BEFORE_CHANGES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Cancel
$CANCEL_CHANGES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CANCEL_CHANGES" : [L]ACTION = "CANCEL_CHANGES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Run
$DO_CHANGES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DO_CHANGES" : [L]ACTION = "DO_CHANGES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Run
$DO_CHANGES_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DO_CHANGES_ALL" : [L]ACTION = "DO_CHANGES_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Delete line
$INV_LINE_DELETED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "INV_LINE_DELETED" : [L]ACTION = "INV_LINE_DELETED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Control
$IS_DEPICK_ALLOWED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "IS_DEPICK_ALLOWED" : [L]ACTION = "IS_DEPICK_ALLOWED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Picking
$IS_PICK_ALLOWED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "IS_PICK_ALLOWED" : [L]ACTION = "IS_PICK_ALLOWED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Credit memo
$SET_FROM_CREDITNOTE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_FROM_CREDITNOTE" : [L]ACTION = "SET_FROM_CREDITNOTE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Flag
$SET_LIG_INVCNDSTA
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_LIG_INVCNDSTA" : [L]ACTION = "SET_LIG_INVCNDSTA" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Invoiced
$SET_LIG_SIHNUM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_LIG_SIHNUM" : [L]ACTION = "SET_LIG_SIHNUM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod New value
$SET_NEW_AMOUNT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_NEW_AMOUNT" : [L]ACTION = "SET_NEW_AMOUNT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod New value
$SET_NEW_PERCENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_NEW_PERCENT" : [L]ACTION = "SET_NEW_PERCENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod New value
$SET_NEW_PRICE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_NEW_PRICE" : [L]ACTION = "SET_NEW_PRICE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod New value
$SET_NEW_QTY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_NEW_QTY" : [L]ACTION = "SET_NEW_QTY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Taken into account
$UNSET_NEW
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "UNSET_NEW" : [L]ACTION = "UNSET_NEW" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0SIDTOSVIC
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
If this.SVCRINVCND<>null
 [L]ASTATUS = fmet this.SVCRINVCND._AERROR(_CTX,_SUPP)
Endif
For AINDCLA=1 To maxtab(this.SIDTOSVICD)
 If this.SIDTOSVICD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SIDTOSVICD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0SIDTOSVIC
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
If this.SVCRINVCND<>null
 [L]ASTATUS = fmet this.SVCRINVCND._ADELERRORS(_APARAM)
Endif
For AINDCLA=1 To maxtab(this.SIDTOSVICD)
 If this.SIDTOSVICD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SIDTOSVICD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0SIDTOSVIC
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
If this.SVCRINVCND<>null
 [L]ASTATUS = fmet this.SVCRINVCND._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SVCRINVCND')
Endif
For AINDCLA=1 To maxtab(this.SIDTOSVICD)
 If this.SIDTOSVICD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SIDTOSVICD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SIDTOSVICD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0SIDTOSVIC
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "SIDTOSVICD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SIDTOSVICD",this)
 When "SVCRINVCND"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SVCRINVCND",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "SIDTOSVICD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SIDTOSVICD","C_SIDTOSVICD",this)
 When "SVCRINVCND"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SVCRINVCND","C_SVCRINVCND",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "SIDTOSVICD"
  [L]_ALINE = 0
 When "SVCRINVCND"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "SIDTOSVICD"
  [L]_ALINE = 1
 When "SVCRINVCND"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



