#<AdxTL>@(#)0.0.0.0 $Revision$Class Dimensions views
# Supervisor
## CRUD-CLASSE ## SIFINDTP
# 2018-08-27 13:28:44 145


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SIFINDTP [SIDTP_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SIFINDTP") From ASYRCOM : Endif
Local Instance SIFINDTP Using R_SIFINDTP

If !SILENCE : Call TRACE("3 --> New Instance R_SIFINDTP") From ASYRCOM : Endif
SIFINDTP = NewInstance R_SIFINDTP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SIDTP_]FDTP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SIFINDTP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SIFINDTP.AREAD([SIDTP_]DIE))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SIFINDTP.SIDTP.DIE ="-num$(SIFINDTP.SIDTP.DIE)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SIFINDTP.SIDTP.AKEYS)
  Call TRACE("-"-num$(I)-":"-SIFINDTP.SIDTP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SIDTP_]
FreeGroup SIFINDTP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SIFINDTP,ACLE,ASTATUS,_ETAG)
Variable Instance SIFINDTP Using R_SIFINDTP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _DIE(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_DIE = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SIFINDTP [SIDTP]
Default File [F:SIDTP]
Read [F:SIDTP]FDTP0 = [L]_DIE
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SIDTP]UPDTICK)>0
 [L]_ETAG = num$([F:SIDTP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SIFINDTP,ACLE,ASTATUS)
Variable Instance SIFINDTP Using R_SIFINDTP
Value Char ACLE
Variable Integer ASTATUS
Local Char _DIE(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_DIE = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SIFINDTP.AREAD([L]_DIE))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SIFINDTP,_DIE,ASTATUS)
Variable Instance SIFINDTP Using R_SIFINDTP
Value Char _DIE
Variable Integer ASTATUS

If SIFINDTP = null : End : Endif

Gosub AVARIABLES From WMR00SIFINDTP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SIFINDTP.APARENT=null
 [L]A_I = SIFINDTP.freeSnapshot
 SIFINDTP.snapshotEnabled = 0
 SIFINDTP.setAccessorEnabled = 0
Endif

If fmet SIFINDTP.ACTX.AGETAFCRIGHT(SIFINDTP,"GESDIE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SIDTP]
Read [F:SIDTP]FDTP0 = [L]_DIE
If fstat
[L]A_ERROR = [L]_DIE
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SIFINDTP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet SIFINDTP.ACTX.AGETAFCRIGHTR(SIFINDTP,"GESDIE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SIFINDTP.ACTX.ASTACRITROLE(SIFINDTP,[L]_DIE
& ,"DIE","SIDTP",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SIFINDTP.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SIFINDTP.SIDTP.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SIFINDTP.SIDTP.AREAD([L]_DIE))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SIFINDTP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SIFINDTP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SIFINDTP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SIFINDTP.APARENT=null
 SIFINDTP.snapshotEnabled = 1
 SIFINDTP.setAccessorEnabled = 1
Endif
LogicClose File [SIDTP]
End



