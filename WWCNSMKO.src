#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry MKO

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:33"
A_USER  = "ADMIN"
A_STAMP = "20180326134133"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(17858,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSMKOSTD"
PROGSPE    = "CNSMKOSPE"
CBOITE     = "DCNSMKO"
BOITE      = "FCNSMKO"
NOMMSK(0)  = "CONSMKO1"
ABMSK(0)   = "MKO1"
NOMMSK(1)  = "CONSMKO2"
ABMSK(1)   = "MKO2"
CMEMO      = "mko"
CNOMMSK    = "CRITMKO"
CABMSK     = "CMKO"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:MKO])=0 : Local File MFGOPETRK    [MKO] : Endif
If clalev([F:MTK])=0 : Local File MFGHEADTRK   [MTK] : Endif
If clalev([F:MWS])=0 : Local File WORKSTATIO   [MWS] : Endif
If clalev([F:MFG])=0 : Local File MFGHEAD      [MFG] : Endif
If clalev([F:TMA])=0 : Local File TABMAT       [TMA] : Endif
If clalev([F:TRO])=0 : Local File TABROUALT    [TRO] : Endif
If clalev([F:ITM])=0 : Local File ITMMASTER    [ITM] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CMKO]
 When  0 : Local Mask =NOMMSK(0) [MKO1]
 When  1 : Local Mask =NOMMSK(1) [MKO2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CMKO]
 When  0 : Grizo [MKO1]
 When  1 : Grizo [MKO2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CMKO]EMPNUMDEB)>0
 Grizo [CMKO]EMPNUMDEB
Endif
If dim([M:CMKO]EMPNUMFIN)>0
 Grizo [CMKO]EMPNUMFIN
Endif
If dim([M:CMKO]MFGDATDEB)>0
 Grizo [CMKO]MFGDATDEB
Endif
If dim([M:CMKO]MFGDATFIN)>0
 Grizo [CMKO]MFGDATFIN
Endif
If dim([M:CMKO]CPLWSTDEB)>0
 Grizo [CMKO]CPLWSTDEB
Endif
If dim([M:CMKO]CPLWSTFIN)>0
 Grizo [CMKO]CPLWSTFIN
Endif
If dim([M:CMKO]MFGTNUMDEB)>0
 Grizo [CMKO]MFGTNUMDEB
Endif
If dim([M:CMKO]MFGTNUMFIN)>0
 Grizo [CMKO]MFGTNUMFIN
Endif
If dim([M:CMKO]MFGNUMDEB)>0
 Grizo [CMKO]MFGNUMDEB
Endif
If dim([M:CMKO]MFGNUMFIN)>0
 Grizo [CMKO]MFGNUMFIN
Endif
If dim([M:CMKO]RELITMDEB)>0
 Grizo [CMKO]RELITMDEB
Endif
If dim([M:CMKO]RELITMFIN)>0
 Grizo [CMKO]RELITMFIN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CMKO])>0 : Close Local Mask [CMKO] : Endif
 When  0 : If clalev([M:MKO1])>0 : Close Local Mask [MKO1] : Endif
 When  1 : If clalev([M:MKO2])>0 : Close Local Mask [MKO2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CMKO]
 When  0 : Default Mask [MKO1]
 When  1 : Default Mask [MKO2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CMKO]
 When  0 : Raz [M:MKO1]
 When  1 : Raz [M:MKO2]
Endcase
Return

$CRITENT
If dim([M:CMKO]EMPNUMDEB)>0 & dim([M:MKO1]EMPNUMDEB)>0
 [M:CMKO]EMPNUMDEB = [M:MKO1]EMPNUMDEB
Endif
If dim([M:CMKO]EMPNUMFIN)>0 & dim([M:MKO1]EMPNUMFIN)>0
 [M:CMKO]EMPNUMFIN = [M:MKO1]EMPNUMFIN
Endif
If dim([M:CMKO]MFGDATDEB)>0 & dim([M:MKO1]MFGDATDEB)>0
 [M:CMKO]MFGDATDEB = [M:MKO1]MFGDATDEB
Endif
If dim([M:CMKO]MFGDATFIN)>0 & dim([M:MKO1]MFGDATFIN)>0
 [M:CMKO]MFGDATFIN = [M:MKO1]MFGDATFIN
Endif
If dim([M:CMKO]CPLWSTDEB)>0 & dim([M:MKO1]CPLWSTDEB)>0
 [M:CMKO]CPLWSTDEB = [M:MKO1]CPLWSTDEB
Endif
If dim([M:CMKO]CPLWSTFIN)>0 & dim([M:MKO1]CPLWSTFIN)>0
 [M:CMKO]CPLWSTFIN = [M:MKO1]CPLWSTFIN
Endif
If dim([M:CMKO]MFGTNUMDEB)>0 & dim([M:MKO1]MFGTNUMDEB)>0
 [M:CMKO]MFGTNUMDEB = [M:MKO1]MFGTNUMDEB
Endif
If dim([M:CMKO]MFGTNUMFIN)>0 & dim([M:MKO1]MFGTNUMFIN)>0
 [M:CMKO]MFGTNUMFIN = [M:MKO1]MFGTNUMFIN
Endif
If dim([M:CMKO]MFGNUMDEB)>0 & dim([M:MKO1]MFGNUMDEB)>0
 [M:CMKO]MFGNUMDEB = [M:MKO1]MFGNUMDEB
Endif
If dim([M:CMKO]MFGNUMFIN)>0 & dim([M:MKO1]MFGNUMFIN)>0
 [M:CMKO]MFGNUMFIN = [M:MKO1]MFGNUMFIN
Endif
If dim([M:CMKO]RELITMDEB)>0 & dim([M:MKO1]RELITMDEB)>0
 [M:CMKO]RELITMDEB = [M:MKO1]RELITMDEB
Endif
If dim([M:CMKO]RELITMFIN)>0 & dim([M:MKO1]RELITMFIN)>0
 [M:CMKO]RELITMFIN = [M:MKO1]RELITMFIN
Endif
Return

$ENTCRIT
If dim([M:CMKO]EMPNUMDEB)>0 & dim([M:MKO1]EMPNUMDEB)>0
[M:MKO1]EMPNUMDEB = [M:CMKO]EMPNUMDEB
Endif
If dim([M:CMKO]EMPNUMFIN)>0 & dim([M:MKO1]EMPNUMFIN)>0
[M:MKO1]EMPNUMFIN = [M:CMKO]EMPNUMFIN
Endif
If dim([M:CMKO]MFGDATDEB)>0 & dim([M:MKO1]MFGDATDEB)>0
[M:MKO1]MFGDATDEB = [M:CMKO]MFGDATDEB
Endif
If dim([M:CMKO]MFGDATFIN)>0 & dim([M:MKO1]MFGDATFIN)>0
[M:MKO1]MFGDATFIN = [M:CMKO]MFGDATFIN
Endif
If dim([M:CMKO]CPLWSTDEB)>0 & dim([M:MKO1]CPLWSTDEB)>0
[M:MKO1]CPLWSTDEB = [M:CMKO]CPLWSTDEB
Endif
If dim([M:CMKO]CPLWSTFIN)>0 & dim([M:MKO1]CPLWSTFIN)>0
[M:MKO1]CPLWSTFIN = [M:CMKO]CPLWSTFIN
Endif
If dim([M:CMKO]MFGTNUMDEB)>0 & dim([M:MKO1]MFGTNUMDEB)>0
[M:MKO1]MFGTNUMDEB = [M:CMKO]MFGTNUMDEB
Endif
If dim([M:CMKO]MFGTNUMFIN)>0 & dim([M:MKO1]MFGTNUMFIN)>0
[M:MKO1]MFGTNUMFIN = [M:CMKO]MFGTNUMFIN
Endif
If dim([M:CMKO]MFGNUMDEB)>0 & dim([M:MKO1]MFGNUMDEB)>0
[M:MKO1]MFGNUMDEB = [M:CMKO]MFGNUMDEB
Endif
If dim([M:CMKO]MFGNUMFIN)>0 & dim([M:MKO1]MFGNUMFIN)>0
[M:MKO1]MFGNUMFIN = [M:CMKO]MFGNUMFIN
Endif
If dim([M:CMKO]RELITMDEB)>0 & dim([M:MKO1]RELITMDEB)>0
[M:MKO1]RELITMDEB = [M:CMKO]RELITMDEB
Endif
If dim([M:CMKO]RELITMFIN)>0 & dim([M:MKO1]RELITMFIN)>0
[M:MKO1]RELITMFIN = [M:CMKO]RELITMFIN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSMKO2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "MKO"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MFG","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "MKO"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MTK","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "MKO"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGTRKDAT(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT4<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT4
 VALBOUT(NBBOUT) = "MKO"
 VALBOUT(NBBOUT) += "~B4"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]RELITM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGTRKDAT(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKO2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:MKO2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSMKO2"
 When "B2"
  Onerrgo RIEN
  Assign "[M:MKO2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSMKO2"
 When "B3"
  Onerrgo RIEN
  Assign "[M:MKO1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MKO2]MFGTRKDAT(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MKO2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:MKO2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Onerrgo
  Call B3_NBLIG From ="W1CONSMKO2"
 When "B4"
  Onerrgo RIEN
  Assign "[M:MKO1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MKO2]RELITM(nolign-1)" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:MKO2]MFGTRKDAT(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MKO2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:MKO2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Onerrgo
  Call B4_NBLIG From ="W1CONSMKO2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


