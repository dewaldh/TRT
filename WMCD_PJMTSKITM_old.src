#<AdxTL>@(#)0.0.0.0 $Revision$Class Main product
# Sage X3 supervisor
## CRUD-CLASSE ## PJMTSKITM
# 2018-06-20 06:52:54 958


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMTSKITM,ASTATUS)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Variable Integer ASTATUS

If PJMTSKITM = null : End : Endif

Gosub _AVARIABLES From WMC00PJMTSKITM

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMTSKITM

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMTSKITM,ASTATUS)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Variable Integer ASTATUS

If PJMTSKITM = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSKITM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMTSKITM
Else
 Gosub ADELETE_PJMTSKITM
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMTSKITM,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMTSKITM.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMTSKITM.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMTSKITM
Trbegin [F:JTT]
 Gosub ADELETE_PJMTSKITM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMTSKITM
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMTSKITM,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMTSKITM.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSKITM.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSKITM.AGETATTRIBUTE("ITTDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSKITM._MAJSQL_PJMTSKITM_ITTDESTEX(PJMTSKITM,PJMTSKITM.ITTDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMTSKITM.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSKITM.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSKITM.AGETATTRIBUTE("ITTCOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSKITM._MAJSQL_PJMTSKITM_ITTCOMTEX(PJMTSKITM,PJMTSKITM.ITTCOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMTSKITM._MAJSQL_PJMTSKITM(PJMTSKITM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMTSKITM.snapshotEnabled=1
 [L]A_RETIK = PJMTSKITM.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMTSKITM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



