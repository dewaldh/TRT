#<AdxTL>@(#)0.0.0.0 $Revision$Class Business batch
# Supervisor
## CRUD-CLASSE ## YBBT
# 2019-05-05 23:59:15 091


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YBBHEADER [YBBH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YBBT") From ASYRCOM : Endif
Local Instance YBBT Using C_YBBT

If !SILENCE : Call TRACE("3 --> New Instance C_YBBT") From ASYRCOM : Endif
YBBT = NewInstance C_YBBT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YBBH_]YBBH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YBBT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YBBT.AREAD([YBBH_]YBATNBR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YBBT.YBATNBR ="-num$(YBBT.YBATNBR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YBBT.AKEYS)
  Call TRACE("-"-num$(I)-":"-YBBT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YBBH_]
FreeGroup YBBT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YBBT,ACLE,ASTATUS,_ETAG)
Variable Instance YBBT Using C_YBBT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YBATNBR(30)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YBATNBR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YBBHEADER [YBBH]
Default File [F:YBBH]
Read [F:YBBH]YBBH0 = [L]_YBATNBR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YBBH]UPDTICK)>0
 [L]_ETAG = num$([F:YBBH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YBBT,ACLE,ASTATUS)
Variable Instance YBBT Using C_YBBT
Value Char ACLE
Variable Integer ASTATUS
Local Char _YBATNBR(30)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YBATNBR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YBBT.AREAD([L]_YBATNBR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YBBT,_YBATNBR,ASTATUS)
Variable Instance YBBT Using C_YBBT
Value Char _YBATNBR
Variable Integer ASTATUS

If YBBT = null : End : Endif

Gosub AVARIABLES From WMC00YBBT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YBBT.APARENT=null
 [L]A_I = YBBT.freeSnapshot
 YBBT.snapshotEnabled = 0
 YBBT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YBBT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YBBT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YBBT.APARENT=null
 YBBT.snapshotEnabled = 1
 YBBT.setAccessorEnabled = 1
Endif
LogicClose File [YBBH] ,[YBBD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YBBT._ACTION_PARAM("AREAD_BEFORE",[L]_YBATNBR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YBBH]
Read [F:YBBH]YBBH0 = [L]_YBATNBR
If fstat
[L]A_ERROR = [L]_YBATNBR
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YBBT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:YBBH]YBATFCY
[L]A_STRACC = ""
If dim([F:YBBH]AUUID)>0 & [F:YBBH]AUUID=NullUuid
 [F:YBBH]AUUID = getUuid
Endif
SetInstance YBBT With [F:YBBH]
YBBT.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YBBD]
 [L]A_N2=0
 For [F:YBBD]YBBD0 Where YBATNBR=[F:YBBH]YBATNBR
  [L]A_N2 +=1
  YBBT.YBBD(A_N2) = NewInstance  C_YBBD(YBBT.ACTX,NullUuid,[L]A_N2,YBBT,"YBBD") AllocGroup YBBT
  [L]ASTATUS = max([L]ASTATUS,fmet YBBT.YBBD(A_N2).ADDINSTANCE_BOUND)
  Callmet YBBT.YBBD(A_N2).AREAD([F:YBBD]YBATNBR,[F:YBBD]YDETLIG)
  YBBT.YBBD(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YBBT.YBBD(A_N2).ASETATTRIBUTE("YBATNBR","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet YBBT.YBBD(A_N2).ASETATTRIBUTE("YDETLIG","$isDisabled","true"))
 Next YBBD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



