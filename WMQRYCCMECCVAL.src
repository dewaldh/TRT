#<AdxTL>@(#)0.0.0.0 $Revision$Class Minor version
# Supervisor
## WMREP REPRESENTATION ## CCMECCVAL
# 2018-08-27 13:11:13 323

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:EVL])=0 : Local File ECCVAL [EVL] : Endif
If clalev([F:A_])=0 : Local File ECCVAL [A_] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [EVL]
LogicClose File [A_]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CCM","EVL",ACRITROLE,[V]CST_AFALSE)
Link [EVL] With
& [A_]EVL1~=[EVL]ITMREF;[EVL]ECCVALMAJ;[EVL]ECCVALMIN;[EVL]ECCTYP
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CCM","EVL",ACRITROLE,[V]CST_AFALSE)
Link [EVL] With
& [A_]EVL1~=[EVL]ITMREF;[EVL]ECCVALMAJ;[EVL]ECCVALMIN;[EVL]ECCTYP
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# EVL --- ECCVAL(EVL)
QRY(NBREP) = NewInstance R_CCMECCVAL AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:EVL]AUUID)>0 & [F:EVL]AUUID=NullUuid
 [F:EVL]AUUID = getUuid
Endif
SetInstance QRY(NBREP).EVL With [F:EVL]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# EVL --- ECCVAL(EVL)
QRY = NewInstance R_CCMECCVAL AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:EVL]AUUID)>0 & [F:EVL]AUUID=NullUuid
 [F:EVL]AUUID = getUuid
Endif
SetInstance QRY.EVL With [F:EVL]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0CCMECCVAL
CURQRY = "R_CCMECCVAL"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).EVL.ITMREF.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.EVL.ITMREF.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "ITMREF" : TBFIL(NBPRO) = "[F:EVL]ITMREF"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EVL.ITMREF"
NBPRO += 1 : TBPRO(NBPRO) = "ECCVALMAJ" : TBFIL(NBPRO) = "[F:EVL]ECCVALMAJ"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EVL.ECCVALMAJ"
NBPRO += 1 : TBPRO(NBPRO) = "ECCVALMIN" : TBFIL(NBPRO) = "[F:EVL]ECCVALMIN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EVL.ECCVALMIN"
NBPRO += 1 : TBPRO(NBPRO) = "ECCSEQ" : TBFIL(NBPRO) = "[F:EVL]ECCSEQ"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "EVL.ECCSEQ"
NBPRO += 1 : TBPRO(NBPRO) = "USESTA" : TBFIL(NBPRO) = "[F:EVL]USESTA"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "EVL.USESTA"
NBPRO += 1 : TBPRO(NBPRO) = "STRDAT" : TBFIL(NBPRO) = "[F:EVL]STRDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "EVL.STRDAT"
NBPRO += 1 : TBPRO(NBPRO) = "ENDDAT" : TBFIL(NBPRO) = "[F:EVL]ENDDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "EVL.ENDDAT"
NBPRO += 1 : TBPRO(NBPRO) = "EXNFLG" : TBFIL(NBPRO) = "[F:EVL]EXNFLG"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "EVL.EXNFLG"
NBPRO += 1 : TBPRO(NBPRO) = "EXNDAT" : TBFIL(NBPRO) = "[F:EVL]EXNDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "EVL.EXNDAT"
NBPRO += 1 : TBPRO(NBPRO) = "ECCTYP" : TBFIL(NBPRO) = "[F:EVL]ECCTYP"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "EVL.ECCTYP"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:EVL]ITMREF"
ASTDKEY += ";"+"[F:EVL]ECCVALMAJ"
ASTDKEY += ";"+"[F:EVL]ECCVALMIN"
ASTDKEY += ";"+"[F:EVL]ECCTYP"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From CCMECCVAL_RSTD
Gosub EVENTS From CCMECCVAL_RSTD
Return
 


