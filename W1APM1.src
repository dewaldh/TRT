#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management APM1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:49:34"
A_USER  = "ADMIN"
A_STAMP = "20180827234934"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBFONCS"
  If [M]NBFONCS=0
   If "K:"+[M]FORMAT<>""
    Chgfmt CODMENS With "K:"+[M]FORMAT
   Else
    Chgfmt CODMENS With "-K:1X"
   Endif
  Endif
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask APM1 [APM1]
Gosub HORODAT
Local Inpbox "APM1" From GFONCTION At A_STAMP With A_WINDPREV Mask [APM1] As [SIM_]
Grizo [APM1]5
Grizo [APM1]10
Grizo [APM1]15
Grizo [APM1]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [APM1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=37 : Y1(1)=3 : Y2(1)=7
X1(2)=1 : X2(2)=37 : Y1(2)=8 : Y2(2)=28
X1(3)=38 : X2(3)=74 : Y1(3)=3 : Y2(3)=28
Return

$ON_MODULE
Onevent INIT_AREA Call D_MODULE(zc) From W1APM1
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_MODULE(VALEUR) From SUBAPM
Endif
Gosub _AFF
End

$ON_CODPRF
Onevent CONTROL Call C_CODPRF(zc) From W1APM1
Onevent BEFORE_INPUT Call AS_CODPRF(zc) From W1APM1
Return

Subprog AS_CODPRF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_CODPRF(zc) From W1APM1
Onkey 144 Titled GBOUTP Call P_CODPRF(zc) From W1APM1
Onkey 146 Titled GBOUTA Call SA_CODPRF(zc) From W1APM1
Gosub _AFF
End

Subprog C_CODPRF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CODPRF" : GZNUM = 1460 : Endif
If !mkstat
 ## Action CONTOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJW"
 PARMSK(1) = "APM"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJW","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CODPRF" : GZNUM = 1460 : Endif
Endif
Gosub _AFF
End

Subprog S_CODPRF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJET"
 PARMSK(1) = "APM"
 PARMSK(2) = "CODPRF"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJET","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_CODPRF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "APN"
PARMSK(2) = "0"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODPRF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "0"
Call VISU("APN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_INTPRF
Onevent INIT_AREA Call D_INTPRF(zc) From W1APM1
Onevent BEFORE_INPUT Call AS_INTPRF(zc) From W1APM1
Return

Subprog IB_INTPRF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_INTPRF(VALEUR)
Variable Char    VALEUR()
If varinit([M]INTPRF,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"APROFIL","INTPRF","0",[M]CODPRF) From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_INTPRF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_INTPRF(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_INTPRF(zc) From W1APM1
Gosub _AFF
End

Subprog B1_INTPRF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_INTPRF" : PROGSUB = "SUBAPM" : PROGSPE = "SPEAPM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "APROFIL"
 PARMSK(2) = "INTPRF"
 PARMSK(3) = "0"
 PARMSK(4) = [M]CODPRF
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_INTPRF" : PROGSUB = "SUBAPM" : PROGSPE = "SPEAPM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_TYPPRF
Onevent INIT_AREA Call D_TYPPRF(zc) From W1APM1
Onevent BEFORE_INPUT Call AS_TYPPRF(zc) From W1APM1
Return

Subprog D_TYPPRF(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPPRF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPPRF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MENDEP
Onevent BEFORE_INPUT Call AS_MENDEP(zc) From W1APM1
Onevent AFTER_AREA Call AP_MENDEP(zc) From W1APM1
Onevent CONTROL Call C_MENDEP(zc) From W1APM1
Return

Subprog AS_MENDEP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_MENDEP(VALEUR) From SUBAPM
If mkstat=2
 [M]MENDEP(INDIC) = VALEUR
 Affzo MENDEP(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_MENDEP(zc) From W1APM1
Gosub _AFF
End

Subprog C_MENDEP(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MENDEP" : GZNUM = 965 : Endif
Gosub _AFF
End

Subprog AP_MENDEP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_MENDEP(VALEUR) From SUBAPM
If mkstat : GERR = 1 : GZONE = "MENDEP" : GZNUM = 965 : Endif
Gosub _AFF
End

Subprog S_MENDEP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJW"
 PARMSK(1) = "AFC"
 PARMSK(2) = "M"
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_OTYP
Onevent INIT_AREA Call D_OTYP(zc) From W1APM1
Return

Subprog D_OTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]OTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBFONCS
Onevent BEFORE_INPUT Call AS_NBFONCS From W1APM1
Onevent CONTROL Call C_NBFONCS From W1APM1
Onevent BEFORE_LINE Call AVANT_NBFONCS From W1APM1
Return

Subprog AS_NBFONCS
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(169,GBOUT3) From OBJDIV
Call TEXTE(5231,GBOUT4) From OBJDIV
## Action STD
Call AS_NBFONCS From SUBAPM
Onkey 131 Titled GBOUT3 Call B3_NBFONCS From W1APM1
Onkey 132 Titled GBOUT4 Call B4_NBFONCS From W1APM1
Gosub _AFF
End

Subprog C_NBFONCS
Local Decimal BASPAG
## Action STD
Call C_NBFONCS From SUBAPM
If mkstat : GERR = 1 : GZONE = "NBFONCS" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B3_NBFONCS
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B3_NBFONCS From SUBAPM
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBFONCS
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B4_NBFONCS From SUBAPM
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBFONCS
Local Decimal BASPAG
## Action STD
Call AVANT_NBFONCS From SUBAPM
If mkstat : End : Endif
Gosub _AFF
End

$ON_FONCTIONS
Onevent AFTER_CHANGE Gosub AMM_FONCTIONS From W1APM1
Onevent BEFORE_INPUT Call AS_FONCTIONS(zc) From W1APM1
Onevent CONTROL Call C_FONCTIONS(zc) From W1APM1
Return

Subprog AS_FONCTIONS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1043,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FONCTIONS(zc) From W1APM1
Onkey   2 Titled GBOUTS Call S_FONCTIONS(zc) From W1APM1
Gosub _AFF
End

Subprog C_FONCTIONS(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FONCTIONS" : GZNUM = 103 : Endif
Gosub _AFF
End

$AMM_FONCTIONS
Call AM_FONCTIONS(zc)
If !mkstat & GOBJET
 zoncou = "FONCTIONS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FONCTIONS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FONCTIONS(VALEUR) From SUBAPM
If mkstat : GERR = 1 : GZONE = "FONCTIONS" : GZNUM = 103 : Endif
Gosub _AFF
End

Subprog S_FONCTIONS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJW"
 PARMSK(1) = "AFC"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_FONCTIONS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_FONCTIONS" : PROGSUB = "SUBAPM" : PROGSPE = "SPEAPM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR(VALEUR,"AFC","") From GOBJET
 ACTION = "BB1_FONCTIONS" : PROGSUB = "SUBAPM" : PROGSPE = "SPEAPM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CODMENS
Onevent BEFORE_AREA Gosub AV_CODMENS From W1APM1
Onevent BEFORE_INPUT Call AS_CODMENS(zc) From W1APM1
Onevent CONTROL Call C_CODMENS(zc) From W1APM1
Onevent AFTER_CHANGE Gosub AMM_CODMENS From W1APM1
Return

$AV_CODMENS
## Action STD
Call AV_CODMENS(zc) From SUBAPM
If "K:"+[M]FORMAT<>""
 Chgfmt [M]CODMENS(indice) With "K:"+[M]FORMAT
Else
 Chgfmt [M]CODMENS(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_CODMENS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_CODMENS(VALEUR) From SUBAPM
If mkstat=2
 [M]CODMENS(INDIC) = VALEUR
 Affzo CODMENS(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_CODMENS(zc) From W1APM1
Gosub _AFF
End

Subprog C_CODMENS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CODMENS(VALEUR) From SUBAPM
If mkstat : GERR = 1 : GZONE = "CODMENS" : GZNUM = 34 : Endif
Gosub _AFF
End

$AMM_CODMENS
Call AM_CODMENS(zc)
If !mkstat & GOBJET
 zoncou = "CODMENS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODMENS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CODMENS(VALEUR) From SUBAPM
If mkstat : GERR = 1 : GZONE = "CODMENS" : GZNUM = 34 : Endif
Gosub _AFF
End

Subprog S_CODMENS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action APMCODMENS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "APMCODMENS"
 Call S_TAB_CHAR(VALEUR,PARMSK,"CODMENS","SUBAPM","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ZLIBMENUS
Onevent BEFORE_INPUT Call AS_ZLIBMENUS(zc) From W1APM1
Onevent CONTROL Call C_ZLIBMENUS(zc) From W1APM1
Return

Subprog AS_ZLIBMENUS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ZLIBMENUS(VALEUR) From SUBAPM
If mkstat=2
 [M]ZLIBMENUS(INDIC) = VALEUR
 Affzo ZLIBMENUS(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_ZLIBMENUS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ZLIBMENUS(VALEUR) From SUBAPM
If mkstat : GERR = 1 : GZONE = "ZLIBMENUS" : GZNUM = 8 : Endif
If !mkstat
 ## Action APMSYS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "APMSYS"
 Call TRAITE_CHAR(VALEUR,PARMSK,"","SUBAPM","APMSYS",3,"SPEAPM") From GTRAITE
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ZLIBMENUS" : GZNUM = 8 : Endif
Endif
Gosub _AFF
End

$ON_NBLIG
Onevent BEFORE_INPUT Call AS_NBLIG From W1APM1
Return

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
mkstat = 2 : GMESSAGE = ""
If !mkstat
Endif
Gosub _AFF
End

$CHG_STY
Return


