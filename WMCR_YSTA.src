#<AdxTL>@(#)0.0.0.0 $Revision$Class Stage
# Supervisor
## CRUD-CLASSE ## YSTA
# 2019-05-03 01:15:43 321


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSTAGE [YSTG_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YSTA") From ASYRCOM : Endif
Local Instance YSTA Using C_YSTA

If !SILENCE : Call TRACE("3 --> New Instance C_YSTA") From ASYRCOM : Endif
YSTA = NewInstance C_YSTA AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YSTG_]YSTG0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSTA") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSTA.AREAD([YSTG_]YSTAID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSTA.YSTAID ="-num$(YSTA.YSTAID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSTA.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSTA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YSTG_]
FreeGroup YSTA
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSTA,ACLE,ASTATUS,_ETAG)
Variable Instance YSTA Using C_YSTA
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YSTAID(9)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSTAID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YSTAGE [YSTG]
Default File [F:YSTG]
Read [F:YSTG]YSTG0 = [L]_YSTAID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YSTG]UPDTICK)>0
 [L]_ETAG = num$([F:YSTG]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSTA,ACLE,ASTATUS)
Variable Instance YSTA Using C_YSTA
Value Char ACLE
Variable Integer ASTATUS
Local Char _YSTAID(9)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSTAID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSTA.AREAD([L]_YSTAID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSTA,_YSTAID,ASTATUS)
Variable Instance YSTA Using C_YSTA
Value Char _YSTAID
Variable Integer ASTATUS

If YSTA = null : End : Endif

Gosub AVARIABLES From WMC00YSTA
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSTA.APARENT=null
 [L]A_I = YSTA.freeSnapshot
 YSTA.snapshotEnabled = 0
 YSTA.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YSTA.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YSTA._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YSTA.APARENT=null
 YSTA.snapshotEnabled = 1
 YSTA.setAccessorEnabled = 1
Endif
LogicClose File [YSTG] ,[YRMA] ,[YSRG] ,[YSLC] ,[YSLD] ,[YLOT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YSTA._ACTION_PARAM("AREAD_BEFORE",[L]_YSTAID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YSTG]
Read [F:YSTG]YSTG0 = [L]_YSTAID
If fstat
[L]A_ERROR = [L]_YSTAID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSTA,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:YSTG]YACCESS
If dim([F:YSTG]AUUID)>0 & [F:YSTG]AUUID=NullUuid
 [F:YSTG]AUUID = getUuid
Endif
SetInstance YSTA With [F:YSTG]
YSTA.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YRMA]
 [L]A_N2=0
 For [F:YRMA]YRMA0 Where YGUID=[F:YSTG]YGUID
  [L]A_N2 +=1
  YSTA.YRMA(A_N2) = NewInstance  C_YRMA(YSTA.ACTX,NullUuid,[L]A_N2,YSTA,"YRMA") AllocGroup YSTA
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YRMA(A_N2).ADDINSTANCE_BOUND)
  Callmet YSTA.YRMA(A_N2).AREAD([F:YRMA]YGUID,[F:YRMA]YLIGID)
  YSTA.YRMA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YRMA(A_N2).ASETATTRIBUTE("YGUID","$namProParent","YGUID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YRMA(A_N2).ASETATTRIBUTE("YLIGID","$isDisabled","true"))
 Next YRMA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YSRG]
 [L]A_N2=0
 For [F:YSRG]YSTRG0 Where YSTAID=[F:YSTG]YSTAID
  [L]A_N2 +=1
  YSTA.YSRG(A_N2) = NewInstance  C_YSRG(YSTA.ACTX,NullUuid,[L]A_N2,YSTA,"YSRG") AllocGroup YSTA
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSRG(A_N2).ADDINSTANCE_BOUND)
  Callmet YSTA.YSRG(A_N2).AREAD([F:YSRG]YSTAID,[F:YSRG]YLINE)
  YSTA.YSRG(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSRG(A_N2).ASETATTRIBUTE("YSTAID","$namProParent","YSTAID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSRG(A_N2).ASETATTRIBUTE("YLINE","$isDisabled","true"))
 Next YSRG
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YSLC]
 [L]A_N2=0
 For [F:YSLC]YSLC2 Where YSTA=[F:YSTG]YSTAID
  [L]A_N2 +=1
  YSTA.YSLC(A_N2) = NewInstance  C_YSLCVIW(YSTA.ACTX,NullUuid,[L]A_N2,YSTA,"YSLC") AllocGroup YSTA
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLC(A_N2).ADDINSTANCE_BOUND)
  Callmet YSTA.YSLC(A_N2).AREAD([F:YSLC]YSLCID)
  YSTA.YSLC(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLC(A_N2).ASETATTRIBUTE("YSTA","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLC(A_N2).ASETATTRIBUTE("YSLCID","$namProParent","YSTAID"))
 Next YSLC
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YSLD]
 [L]A_N2=0
 For [F:YSLD]YSLD0 Where YSTAID=[F:YSTG]YSTAID
  [L]A_N2 +=1
  YSTA.YSLD(A_N2) = NewInstance  C_YSLD(YSTA.ACTX,NullUuid,[L]A_N2,YSTA,"YSLD") AllocGroup YSTA
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLD(A_N2).ADDINSTANCE_BOUND)
  Callmet YSTA.YSLD(A_N2).AREAD([F:YSLD]YSTAID,[F:YSLD]YLINE)
  YSTA.YSLD(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLD(A_N2).ASETATTRIBUTE("YSTAID","$namProParent","YSTAID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLD(A_N2).ASETATTRIBUTE("YLINE","$isDisabled","true"))
 Next YSLD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YLOT]
 [L]A_N2=0
 For [F:YLOT]YLOT3 Where YSTAID=[F:YSTG]YSTAID
  [L]A_N2 +=1
  YSTA.YSLT(A_N2) = NewInstance  C_YLOTVIW(YSTA.ACTX,NullUuid,[L]A_N2,YSTA,"YSLT") AllocGroup YSTA
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLT(A_N2).ADDINSTANCE_BOUND)
  Callmet YSTA.YSLT(A_N2).AREAD([F:YLOT]YLOTID)
  YSTA.YSLT(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLT(A_N2).ASETATTRIBUTE("YSTAID","$namProParent","YSTAID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSLT(A_N2).ASETATTRIBUTE("YLOTID","$isDisabled","true"))
 Next YLOT
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YSTA.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



