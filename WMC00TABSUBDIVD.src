#<AdxTL>@(#)0.0.0.0 $Revision$Class Geographic subdivisions
# Supervisor
## CRUD-CLASSE ## TABSUBDIVD
# 2018-08-27 12:52:52 124

Gosub TEST From WMCR_TABSUBDIVD : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CRY,TYP,COD)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TABSUBDIVD : TABSUBDIV
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TABSUBDIVD._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TABSUBDIVD.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TABSUBDIVD.ACTX.AFOLDER,nomap,"")>0
 Local File TABSUBDIV [ATU]
 Local File TABSUBDIV [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =TABSUBDIVD.ACTX.AFOLDER+".TABSUBDIV" [ATU]
 Local File =TABSUBDIVD.ACTX.AFOLDER+".TABSUBDIV" [AAA_]
 Local File =TABSUBDIVD.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIVD.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [ATU] With
& [AAA_]ATU0 = CRY+TYP+COD
& As [LNK_]
Return

############################################################################################
### TABSUBDIV(WATU)
############################################################################################
Funprog  _MAJSQL_TABSUBDIV(WATU)
Variable Instance WATU Using C_TABSUBDIVD
Local Integer ASTATUS,A_I,A_J
Default File [F:ATU]
If WATU.ASTALIN=[V]CST_ANEW
 Call INICRE(WATU) From ASYRSUB
 SetInstance [F:ATU] With WATU
 For J=1 To maxtab(WATU.AXX)
  If WATU.AXX(J)<>null & WATU.AXX(J).PRO= "INTIT" & WATU.AXX(J).FLG>0
   Call MAJTEXTRALAN(WATU,WATU.AXX(J).TEX,"TABSUBDIV","INTIT",WATU.AXX(J).LAN,WATU.CRYTYP,WATU.COD,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ATU]
 If fstat
  Call FSTA("ATU",WATU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATU.updTick = [F:ATU]updTick
Elsif WATU.ASTALIN=[V]CST_ALL or WATU.ASTALIN=[V]CST_AUPD
 Call INIUPD(WATU) From ASYRSUB
 SetInstance [F:ATU] With WATU
 For J=1 To maxtab(WATU.AXX)
  If WATU.AXX(J)<>null & WATU.AXX(J).PRO= "INTIT" & WATU.AXX(J).FLG>0
   Call MAJTEXTRALAN(WATU,WATU.AXX(J).TEX,"TABSUBDIV","INTIT",WATU.AXX(J).LAN,WATU.CRYTYP,WATU.COD,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATU,"TABSUBDIV")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ATU]ATU0 = [F:ATU]CRY;[F:ATU]TYP;[F:ATU]COD
 If fstat
  Call FSTA("ATU",WATU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATU.updTick = [F:ATU]updTick
Elsif WATU.ASTALIN=[V]CST_ADEL
 SetInstance [F:ATU] With WATU
 For J=1 To maxtab(WATU.AXX)
  If WATU.AXX(J)<>null & WATU.AXX(J).PRO= "INTIT"
   Call SUPTEXTRA(WATU,WATU.AXX(J).TEX,"TABSUBDIV","INTIT",WATU.AXX(J).LAN,WATU.CRYTYP,WATU.COD,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATU,"TABSUBDIV")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ATU]ATU0 = [F:ATU]CRY;[F:ATU]TYP;[F:ATU]COD
 If fstat
  Call FSTA("ATU",WATU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



