#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## ACLA-CLASSE ## SVCRINVCNDD
# 2018-08-27 12:50:29 502


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : VCRTYP Entry type ( Field Local menu number 476)
####################################################################

$SET_VCRTYP
If [L]_AOLDVAL<>this.VCRTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRTYP
 Gosub PROPAGATE_VCRTYP
Endif
Return

$INIT_VCRTYP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VCRTYP=0 and fmet this.AGETATTRIBUTE("VCRTYP","$isMandatory")="true"
 this.VCRTYP = 1
Endif
Return
 
$CONTROL_VCRTYP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRTYP
[L]CURPRO = "VCRTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRTYP
[L]CURPRO = "VCRTYP"
If this.VCRTYP<0 or this.VCRTYP>len(mess(0,476,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"476 ->"-num$(this.VCRTYP)-mess(99,123,1)):  Return : # Local menu "476 -> Invalid option
Endif
Return

$_AOTHERS_VCRTYP
[L]CURPRO = "VCRTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRTYP
[L]CURPRO = "VCRTYP"
Return

$PROPAGATE_VCRTYP
this.isReadonly = 0
[L]CURPRO = "VCRTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRTYP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRTYP"
$_LNKPRO_VCRTYP
Return

$_ALOADATTRIBUTE_VCRTYP
[L]ASTATUS = fmet this.ASETATTRIBUTE("VCRTYP","$isMandatory","true")
Return


####################################################################
# 2 : VCRNUMORI Origin document no. ( Field VCR 20)
####################################################################

$SET_VCRNUMORI
If [L]_AOLDVAL<>this.VCRNUMORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRNUMORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRNUMORI
 Gosub PROPAGATE_VCRNUMORI
Endif
Return

$INIT_VCRNUMORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRNUMORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRNUMORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRNUMORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRNUMORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRNUMORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VCRNUMORI,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
If vireblc(this.VCRNUMORI,2)<>vireblc(format$("K:20X",this.VCRNUMORI),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
Return

$PROPAGATE_VCRNUMORI
this.isReadonly = 0
[L]CURPRO = "VCRNUMORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRNUMORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRNUMORI"
$_LNKPRO_VCRNUMORI
Return

$_ALOADATTRIBUTE_VCRNUMORI
[L]ASTATUS = fmet this.ASETATTRIBUTE("VCRNUMORI","$isMandatory","true")
Return


####################################################################
# 3 : VCRLINORI Source document line no. ( Field L 8)
####################################################################

$SET_VCRLINORI
If [L]_AOLDVAL<>this.VCRLINORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRLINORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRLINORI
 Gosub PROPAGATE_VCRLINORI
Endif
Return

$INIT_VCRLINORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRLINORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRLINORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRLINORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRLINORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRLINORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRLINORI
[L]CURPRO = "VCRLINORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRLINORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRLINORI
[L]CURPRO = "VCRLINORI"
Return

$_AOTHERS_VCRLINORI
[L]CURPRO = "VCRLINORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRLINORI
[L]CURPRO = "VCRLINORI"
Return

$PROPAGATE_VCRLINORI
this.isReadonly = 0
[L]CURPRO = "VCRLINORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRLINORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRLINORI"
$_LNKPRO_VCRLINORI
Return

$_ALOADATTRIBUTE_VCRLINORI
[L]ASTATUS = fmet this.ASETATTRIBUTE("VCRLINORI","$isMandatory","true")
Return


####################################################################
# 4 : VCRSEQORI Source document sequence no. ( Field L 8)
####################################################################

$SET_VCRSEQORI
If [L]_AOLDVAL<>this.VCRSEQORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRSEQORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRSEQORI
 Gosub PROPAGATE_VCRSEQORI
Endif
Return

$INIT_VCRSEQORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRSEQORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRSEQORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRSEQORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRSEQORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRSEQORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRSEQORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
Return

$_AOTHERS_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
Return

$PROPAGATE_VCRSEQORI
this.isReadonly = 0
[L]CURPRO = "VCRSEQORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRSEQORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRSEQORI"
$_LNKPRO_VCRSEQORI
Return


####################################################################
# 5 : NOCTL_NUMORI Flag ( Field Local menu number 1)
####################################################################

$SET_NOCTL_NUMORI
If [L]_AOLDVAL<>this.NOCTL_NUMORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NOCTL_NUMORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NOCTL_NUMORI
 Gosub PROPAGATE_NOCTL_NUMORI
Endif
Return

$INIT_NOCTL_NUMORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "NOCTL_NUMORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.NOCTL_NUMORI=0 and fmet this.AGETATTRIBUTE("NOCTL_NUMORI","$isMandatory")="true"
 this.NOCTL_NUMORI = 1
Endif
Return
 
$CONTROL_NOCTL_NUMORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "NOCTL_NUMORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NOCTL_NUMORI          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NOCTL_NUMORI          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NOCTL_NUMORI
[L]CURPRO = "NOCTL_NUMORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NOCTL_NUMORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NOCTL_NUMORI
[L]CURPRO = "NOCTL_NUMORI"
If this.NOCTL_NUMORI<0 or this.NOCTL_NUMORI>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.NOCTL_NUMORI)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_NOCTL_NUMORI
[L]CURPRO = "NOCTL_NUMORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NOCTL_NUMORI
[L]CURPRO = "NOCTL_NUMORI"
Return

$PROPAGATE_NOCTL_NUMORI
this.isReadonly = 0
[L]CURPRO = "NOCTL_NUMORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NOCTL_NUMORI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "NOCTL_NUMORI"
$_LNKPRO_NOCTL_NUMORI
Return


####################################################################
# 6 : INVCNDTYP Scheduled invoice type ( Field Local menu number 2420)
####################################################################

$SET_INVCNDTYP
If [L]_AOLDVAL<>this.INVCNDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDTYP
 Gosub PROPAGATE_INVCNDTYP
Endif
Return

$INIT_INVCNDTYP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVCNDTYP=0 and fmet this.AGETATTRIBUTE("INVCNDTYP","$isMandatory")="true"
 this.INVCNDTYP = 1
Endif
Return
 
$CONTROL_INVCNDTYP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
If this.INVCNDTYP<0 or this.INVCNDTYP>len(mess(0,2420,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2420 ->"-num$(this.INVCNDTYP)-mess(99,123,1)):  Return : # Local menu "2420 -> Invalid option
Endif
Return

$_AOTHERS_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
Return

$PROPAGATE_INVCNDTYP
this.isReadonly = 0
[L]CURPRO = "INVCNDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDTYP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDTYP"
$_LNKPRO_INVCNDTYP
Return


####################################################################
# 7 : INVCND Code ( Field INVCND 20)
####################################################################

$SET_INVCND
If [L]_AOLDVAL<>this.INVCND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCND
 Gosub PROPAGATE_INVCND
Endif
Return

$INIT_INVCND
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCND
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCND
[L]CURPRO = "INVCND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INVCND,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCND
[L]CURPRO = "INVCND"
If vireblc(this.INVCND,2)<>vireblc(format$("K:20c",this.INVCND),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INVCND
[L]CURPRO = "INVCND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCND
[L]CURPRO = "INVCND"
Return

$PROPAGATE_INVCND
this.isReadonly = 0
[L]CURPRO = "INVCND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCND
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCND"
$_LNKPRO_INVCND
Return


####################################################################
# 8 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;""
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 9 : INVCNDLIN Line number ( Field L 8)
####################################################################

$SET_INVCNDLIN
If [L]_AOLDVAL<>this.INVCNDLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDLIN
 Gosub PROPAGATE_INVCNDLIN
Endif
Return

$INIT_INVCNDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCNDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDLIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDLIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
Return

$_AOTHERS_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
Return

$PROPAGATE_INVCNDLIN
this.isReadonly = 0
[L]CURPRO = "INVCNDLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDLIN"
$_LNKPRO_INVCNDLIN
Return


####################################################################
# 10 : VCRINVCNDLIN Line number ( Field L 8)
####################################################################

$SET_VCRINVCNDLIN
If [L]_AOLDVAL<>this.VCRINVCNDLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRINVCNDLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRINVCNDLIN
 Gosub PROPAGATE_VCRINVCNDLIN
Endif
Return

$INIT_VCRINVCNDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRINVCNDLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRINVCNDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRINVCNDLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRINVCNDLIN          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRINVCNDLIN          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRINVCNDLIN
[L]CURPRO = "VCRINVCNDLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRINVCNDLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRINVCNDLIN
[L]CURPRO = "VCRINVCNDLIN"
Return

$_AOTHERS_VCRINVCNDLIN
[L]CURPRO = "VCRINVCNDLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRINVCNDLIN
[L]CURPRO = "VCRINVCNDLIN"
Return

$PROPAGATE_VCRINVCNDLIN
this.isReadonly = 0
[L]CURPRO = "VCRINVCNDLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRINVCNDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRINVCNDLIN"
$_LNKPRO_VCRINVCNDLIN
Return

$_ALOADATTRIBUTE_VCRINVCNDLIN
[L]ASTATUS = fmet this.ASETATTRIBUTE("VCRINVCNDLIN","$isMandatory","true")
Return


####################################################################
# 11 : VCRINVCNDDAT Date ( Field D)
####################################################################

$SET_VCRINVCNDDAT
If [L]_AOLDVAL<>this.VCRINVCNDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRINVCNDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRINVCNDDAT
 Gosub PROPAGATE_VCRINVCNDDAT
Endif
Return

$INIT_VCRINVCNDDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRINVCNDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRINVCNDDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRINVCNDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRINVCNDDAT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRINVCNDDAT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRINVCNDDAT
[L]CURPRO = "VCRINVCNDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRINVCNDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRINVCNDDAT
[L]CURPRO = "VCRINVCNDDAT"
Return

$_AOTHERS_VCRINVCNDDAT
[L]CURPRO = "VCRINVCNDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRINVCNDDAT
[L]CURPRO = "VCRINVCNDDAT"
Return

$PROPAGATE_VCRINVCNDDAT
this.isReadonly = 0
[L]CURPRO = "VCRINVCNDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRINVCNDDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "VCRINVCNDDAT"
$_LNKPRO_VCRINVCNDDAT
Return


####################################################################
# 12 : DESAXX Description ( Field AX3)
####################################################################

$GET_DESAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DESAXX"
this.DESAXX = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESAXX
If [L]_AOLDVAL<>this.DESAXX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESAXX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESAXX
 Gosub PROPAGATE_DESAXX
Endif
Return

$INIT_DESAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DESAXX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DESAXX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESAXX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESAXX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESAXX
[L]CURPRO = "DESAXX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESAXX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESAXX
[L]CURPRO = "DESAXX"
If vireblc(fmet this.AGETTEXTRA("DESAXX"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESAXX")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESAXX
[L]CURPRO = "DESAXX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESAXX
[L]CURPRO = "DESAXX"
Return

$PROPAGATE_DESAXX
this.isReadonly = 0
[L]CURPRO = "DESAXX"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESAXX)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DESAXX"
$_LNKPRO_DESAXX
Return


####################################################################
# 13 : SHOAXX Short description ( Field AX1)
####################################################################

$GET_SHOAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SHOAXX"
this.SHOAXX = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SHOAXX
If [L]_AOLDVAL<>this.SHOAXX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHOAXX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHOAXX
 Gosub PROPAGATE_SHOAXX
Endif
Return

$INIT_SHOAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SHOAXX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHOAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SHOAXX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHOAXX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHOAXX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHOAXX
[L]CURPRO = "SHOAXX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHOAXX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHOAXX
[L]CURPRO = "SHOAXX"
If vireblc(fmet this.AGETTEXTRA("SHOAXX"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("SHOAXX")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SHOAXX
[L]CURPRO = "SHOAXX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHOAXX
[L]CURPRO = "SHOAXX"
Return

$PROPAGATE_SHOAXX
this.isReadonly = 0
[L]CURPRO = "SHOAXX"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.SHOAXX)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHOAXX
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SHOAXX"
$_LNKPRO_SHOAXX
Return


####################################################################
# 14 : SIHNUM Invoice no. ( Field SIH 20)
####################################################################

$SET_SIHNUM
If [L]_AOLDVAL<>this.SIHNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIHNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIHNUM
 Gosub PROPAGATE_SIHNUM
Endif
Return

$INIT_SIHNUM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SIHNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIHNUM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SIHNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIHNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIHNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIHNUM
[L]CURPRO = "SIHNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SIHNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIHNUM
[L]CURPRO = "SIHNUM"
Return

$_AOTHERS_SIHNUM
[L]CURPRO = "SIHNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIHNUM
[L]CURPRO = "SIHNUM"
Return

$PROPAGATE_SIHNUM
this.isReadonly = 0
[L]CURPRO = "SIHNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIHNUM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SIHNUM"
$_LNKPRO_SIHNUM
Return


####################################################################
# 15 : SIDLIN Invoice line ( Field L 8)
####################################################################

$SET_SIDLIN
If [L]_AOLDVAL<>this.SIDLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIDLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIDLIN
 Gosub PROPAGATE_SIDLIN
Endif
Return

$INIT_SIDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SIDLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SIDLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIDLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIDLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIDLIN
[L]CURPRO = "SIDLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SIDLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIDLIN
[L]CURPRO = "SIDLIN"
Return

$_AOTHERS_SIDLIN
[L]CURPRO = "SIDLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIDLIN
[L]CURPRO = "SIDLIN"
Return

$PROPAGATE_SIDLIN
this.isReadonly = 0
[L]CURPRO = "SIDLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIDLIN
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SIDLIN"
$_LNKPRO_SIDLIN
Return


####################################################################
# 16 : INVCNDSTA Status ( Field Local menu number 2419)
####################################################################

$SET_INVCNDSTA
If [L]_AOLDVAL<>this.INVCNDSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDSTA
 Gosub PROPAGATE_INVCNDSTA
Endif
Return

$INIT_INVCNDSTA
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVCNDSTA=0 and fmet this.AGETATTRIBUTE("INVCNDSTA","$isMandatory")="true"
 this.INVCNDSTA = 1
Endif
Return
 
$CONTROL_INVCNDSTA
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDSTA             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDSTA             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDSTA
[L]CURPRO = "INVCNDSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDSTA
[L]CURPRO = "INVCNDSTA"
If this.INVCNDSTA<0 or this.INVCNDSTA>len(mess(0,2419,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2419 ->"-num$(this.INVCNDSTA)-mess(99,123,1)):  Return : # Local menu "2419 -> Invalid option
Endif
Return

$_AOTHERS_INVCNDSTA
[L]CURPRO = "INVCNDSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDSTA
[L]CURPRO = "INVCNDSTA"
Return

$PROPAGATE_INVCNDSTA
this.isReadonly = 0
[L]CURPRO = "INVCNDSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDSTA
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDSTA"
$_LNKPRO_INVCNDSTA
Return


####################################################################
# 17 : PERFROM Period start ( Field D)
####################################################################

$SET_PERFROM
If [L]_AOLDVAL<>this.PERFROM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PERFROM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PERFROM
 Gosub PROPAGATE_PERFROM
Endif
Return

$INIT_PERFROM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PERFROM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PERFROM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PERFROM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PERFROM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PERFROM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PERFROM
[L]CURPRO = "PERFROM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PERFROM=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PERFROM
[L]CURPRO = "PERFROM"
Return

$_AOTHERS_PERFROM
[L]CURPRO = "PERFROM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PERFROM
[L]CURPRO = "PERFROM"
Return

$PROPAGATE_PERFROM
this.isReadonly = 0
[L]CURPRO = "PERFROM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PERFROM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PERFROM"
$_LNKPRO_PERFROM
Return


####################################################################
# 18 : PERTO Period end ( Field D)
####################################################################

$SET_PERTO
If [L]_AOLDVAL<>this.PERTO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PERTO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PERTO
 Gosub PROPAGATE_PERTO
Endif
Return

$INIT_PERTO
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PERTO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PERTO
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PERTO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PERTO                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PERTO                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PERTO
[L]CURPRO = "PERTO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PERTO=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PERTO
[L]CURPRO = "PERTO"
Return

$_AOTHERS_PERTO
[L]CURPRO = "PERTO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PERTO
[L]CURPRO = "PERTO"
Return

$PROPAGATE_PERTO
this.isReadonly = 0
[L]CURPRO = "PERTO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PERTO
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PERTO"
$_LNKPRO_PERTO
Return


####################################################################
# 19 : INVPERCENT Percentage ( Field DCB 3)
####################################################################

$SET_INVPERCENT
If [L]_AOLDVAL<>this.INVPERCENT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVPERCENT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVPERCENT
 Gosub PROPAGATE_INVPERCENT
Endif
Return

$INIT_INVPERCENT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVPERCENT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVPERCENT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVPERCENT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVPERCENT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVPERCENT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVPERCENT
[L]CURPRO = "INVPERCENT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVPERCENT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVPERCENT
[L]CURPRO = "INVPERCENT"
Return

$_AOTHERS_INVPERCENT
[L]CURPRO = "INVPERCENT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVPERCENT
[L]CURPRO = "INVPERCENT"
Return

$PROPAGATE_INVPERCENT
this.isReadonly = 0
[L]CURPRO = "INVPERCENT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVPERCENT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVPERCENT"
$_LNKPRO_INVPERCENT
Return


####################################################################
# 20 : DNETPRINOT Net price - tax ( Field DCB 10)
####################################################################

$SET_DNETPRINOT
If [L]_AOLDVAL<>this.DNETPRINOT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DNETPRINOT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DNETPRINOT
 Gosub PROPAGATE_DNETPRINOT
Endif
Return

$INIT_DNETPRINOT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DNETPRINOT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DNETPRINOT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DNETPRINOT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DNETPRINOT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DNETPRINOT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DNETPRINOT
[L]CURPRO = "DNETPRINOT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DNETPRINOT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DNETPRINOT
[L]CURPRO = "DNETPRINOT"
Return

$_AOTHERS_DNETPRINOT
[L]CURPRO = "DNETPRINOT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DNETPRINOT
[L]CURPRO = "DNETPRINOT"
Return

$PROPAGATE_DNETPRINOT
this.isReadonly = 0
[L]CURPRO = "DNETPRINOT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DNETPRINOT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DNETPRINOT"
$_LNKPRO_DNETPRINOT
Return


####################################################################
# 21 : INVCNDAMTNOT Amount - tax ( Field MD1 0)
####################################################################

$SET_INVCNDAMTNOT
If [L]_AOLDVAL<>this.INVCNDAMTNOT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDAMTNOT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDAMTNOT
 Gosub PROPAGATE_INVCNDAMTNOT
Endif
Return

$INIT_INVCNDAMTNOT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDAMTNOT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCNDAMTNOT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDAMTNOT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDAMTNOT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDAMTNOT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDAMTNOT
[L]CURPRO = "INVCNDAMTNOT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDAMTNOT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDAMTNOT
[L]CURPRO = "INVCNDAMTNOT"
Return

$_AOTHERS_INVCNDAMTNOT
[L]CURPRO = "INVCNDAMTNOT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"INVCNDAMTNOT",this.INVCNDAMTNOT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDAMTNOT
[L]CURPRO = "INVCNDAMTNOT"
Return

$PROPAGATE_INVCNDAMTNOT
this.isReadonly = 0
[L]CURPRO = "INVCNDAMTNOT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDAMTNOT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDAMTNOT"
$_LNKPRO_INVCNDAMTNOT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"INVCNDAMTNOT",this.INVCNDAMTNOT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("INVCNDAMTNOT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 22 : DNETPRIATI Net price + tax ( Field DCB 10)
####################################################################

$SET_DNETPRIATI
If [L]_AOLDVAL<>this.DNETPRIATI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DNETPRIATI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DNETPRIATI
 Gosub PROPAGATE_DNETPRIATI
Endif
Return

$INIT_DNETPRIATI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DNETPRIATI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DNETPRIATI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DNETPRIATI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DNETPRIATI            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DNETPRIATI            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DNETPRIATI
[L]CURPRO = "DNETPRIATI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DNETPRIATI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DNETPRIATI
[L]CURPRO = "DNETPRIATI"
Return

$_AOTHERS_DNETPRIATI
[L]CURPRO = "DNETPRIATI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DNETPRIATI
[L]CURPRO = "DNETPRIATI"
Return

$PROPAGATE_DNETPRIATI
this.isReadonly = 0
[L]CURPRO = "DNETPRIATI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DNETPRIATI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DNETPRIATI"
$_LNKPRO_DNETPRIATI
Return


####################################################################
# 23 : INVCNDAMTATI Amount + tax ( Field MD1 0)
####################################################################

$SET_INVCNDAMTATI
If [L]_AOLDVAL<>this.INVCNDAMTATI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDAMTATI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDAMTATI
 Gosub PROPAGATE_INVCNDAMTATI
Endif
Return

$INIT_INVCNDAMTATI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDAMTATI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCNDAMTATI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDAMTATI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDAMTATI          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDAMTATI          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDAMTATI
[L]CURPRO = "INVCNDAMTATI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDAMTATI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDAMTATI
[L]CURPRO = "INVCNDAMTATI"
Return

$_AOTHERS_INVCNDAMTATI
[L]CURPRO = "INVCNDAMTATI"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"INVCNDAMTATI",this.INVCNDAMTATI,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDAMTATI
[L]CURPRO = "INVCNDAMTATI"
Return

$PROPAGATE_INVCNDAMTATI
this.isReadonly = 0
[L]CURPRO = "INVCNDAMTATI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDAMTATI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDAMTATI"
$_LNKPRO_INVCNDAMTATI
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"INVCNDAMTATI",this.INVCNDAMTATI,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("INVCNDAMTATI","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 24 : CUR Currency ( Field CUR 3)
####################################################################

$SET_CUR
If [L]_AOLDVAL<>this.CUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CUR
 Gosub PROPAGATE_CUR
Endif
Return

$INIT_CUR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CUR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CUR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CUR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CUR
[L]CURPRO = "CUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CUR
[L]CURPRO = "CUR"
If vireblc(this.CUR,2)<>vireblc(format$("K:3c",this.CUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CUR
[L]CURPRO = "CUR"
If vireblc(this.CUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CUR",this.CUR,this.CUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CUR
[L]CURPRO = "CUR"
Return

$PROPAGATE_CUR
this.isReadonly = 0
[L]CURPRO = "CUR"
Gosub _LNKPRO_CUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CUR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CUR"
$_LNKPRO_CUR
If vireblc(this.CUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return

$_ALOADATTRIBUTE_CUR
[L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$isMandatory","true")
Return


####################################################################
# 25 : INVCNDQTY Quantity ( Field DCB 11)
####################################################################

$SET_INVCNDQTY
If [L]_AOLDVAL<>this.INVCNDQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDQTY
 Gosub PROPAGATE_INVCNDQTY
Endif
Return

$INIT_INVCNDQTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCNDQTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDQTY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDQTY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDQTY
[L]CURPRO = "INVCNDQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDQTY
[L]CURPRO = "INVCNDQTY"
Return

$_AOTHERS_INVCNDQTY
[L]CURPRO = "INVCNDQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDQTY
[L]CURPRO = "INVCNDQTY"
Return

$PROPAGATE_INVCNDQTY
this.isReadonly = 0
[L]CURPRO = "INVCNDQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDQTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "INVCNDQTY"
$_LNKPRO_INVCNDQTY
Return


####################################################################
# 26 : SAU Sales unit ( Field UOM 3)
####################################################################

$SET_SAU
If [L]_AOLDVAL<>this.SAU
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SAU
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SAU
 Gosub PROPAGATE_SAU
Endif
Return

$INIT_SAU
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SAU"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SAU
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SAU"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SAU                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SAU                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SAU
[L]CURPRO = "SAU"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SAU,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SAU
[L]CURPRO = "SAU"
If vireblc(this.SAU,2)<>vireblc(format$("K:3X",this.SAU),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SAU
[L]CURPRO = "SAU"
If vireblc(this.SAU,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPUOM.ACTRLREF(this,"SAU",this.SAU,this.SAU,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SAU<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SAU
[L]CURPRO = "SAU"
Return

$PROPAGATE_SAU
this.isReadonly = 0
[L]CURPRO = "SAU"
Gosub _LNKPRO_SAU
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SAU
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "SAU"
$_LNKPRO_SAU
If vireblc(this.SAU,2)<>""
 # Link TABUNIT
 Local File TABUNIT [WTUN]
 Read [F:WTUN]TUN0 = this.SAU
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SAU","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SAU","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("SAU","$symbol",[F:WTUN]UOMSYM)
  If int([WTUN]UOMDEC)>0
   Local Char WSCALE(10)
   WSCALE=num$([F:WTUN]UOMDEC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("SAU","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTUN]
Endif
Return


####################################################################
# 27 : NEXINVDAT Next invoice ( Field D)
####################################################################

$SET_NEXINVDAT
If [L]_AOLDVAL<>this.NEXINVDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NEXINVDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NEXINVDAT
 Gosub PROPAGATE_NEXINVDAT
Endif
Return

$INIT_NEXINVDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "NEXINVDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NEXINVDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "NEXINVDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NEXINVDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NEXINVDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NEXINVDAT
[L]CURPRO = "NEXINVDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NEXINVDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NEXINVDAT
[L]CURPRO = "NEXINVDAT"
Return

$_AOTHERS_NEXINVDAT
[L]CURPRO = "NEXINVDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NEXINVDAT
[L]CURPRO = "NEXINVDAT"
Return

$PROPAGATE_NEXINVDAT
this.isReadonly = 0
[L]CURPRO = "NEXINVDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NEXINVDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "NEXINVDAT"
$_LNKPRO_NEXINVDAT
Return


####################################################################
# 28 : MODFLG Modification ( Field Local menu number 2421)
####################################################################

$SET_MODFLG
If [L]_AOLDVAL<>this.MODFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODFLG
 Gosub PROPAGATE_MODFLG
Endif
Return

$INIT_MODFLG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "MODFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MODFLG=0 and fmet this.AGETATTRIBUTE("MODFLG","$isMandatory")="true"
 this.MODFLG = 1
Endif
Return
 
$CONTROL_MODFLG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "MODFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODFLG
[L]CURPRO = "MODFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODFLG
[L]CURPRO = "MODFLG"
If this.MODFLG<0 or this.MODFLG>len(mess(0,2421,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2421 ->"-num$(this.MODFLG)-mess(99,123,1)):  Return : # Local menu "2421 -> Invalid option
Endif
Return

$_AOTHERS_MODFLG
[L]CURPRO = "MODFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODFLG
[L]CURPRO = "MODFLG"
Return

$PROPAGATE_MODFLG
this.isReadonly = 0
[L]CURPRO = "MODFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODFLG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "MODFLG"
$_LNKPRO_MODFLG
Return


####################################################################
# 29 : MODDAT Change date ( Field D)
####################################################################

$SET_MODDAT
If [L]_AOLDVAL<>this.MODDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODDAT
 Gosub PROPAGATE_MODDAT
Endif
Return

$INIT_MODDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "MODDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MODDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "MODDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODDAT
[L]CURPRO = "MODDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODDAT
[L]CURPRO = "MODDAT"
Return

$_AOTHERS_MODDAT
[L]CURPRO = "MODDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODDAT
[L]CURPRO = "MODDAT"
Return

$PROPAGATE_MODDAT
this.isReadonly = 0
[L]CURPRO = "MODDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODDAT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "MODDAT"
$_LNKPRO_MODDAT
Return


####################################################################
# 30 : HASRIGHTHEAD Technical ( Field Local menu number 1)
####################################################################

$SET_HASRIGHTHEAD
If [L]_AOLDVAL<>this.HASRIGHTHEAD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HASRIGHTHEAD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HASRIGHTHEAD
 Gosub PROPAGATE_HASRIGHTHEAD
Endif
Return

$INIT_HASRIGHTHEAD
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "HASRIGHTHEAD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.HASRIGHTHEAD=0 and fmet this.AGETATTRIBUTE("HASRIGHTHEAD","$isMandatory")="true"
 this.HASRIGHTHEAD = 1
Endif
Return
 
$CONTROL_HASRIGHTHEAD
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "HASRIGHTHEAD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HASRIGHTHEAD          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HASRIGHTHEAD          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HASRIGHTHEAD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
If this.HASRIGHTHEAD<0 or this.HASRIGHTHEAD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.HASRIGHTHEAD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
Return

$PROPAGATE_HASRIGHTHEAD
this.isReadonly = 0
[L]CURPRO = "HASRIGHTHEAD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HASRIGHTHEAD
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "HASRIGHTHEAD"
$_LNKPRO_HASRIGHTHEAD
Return




