#<AdxTL>@(#)%I%
# Supervisor
# Inquiry SET

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [23/11/2018]
A_HEURE = "15:26:53"
A_USER  = "MAJID"
A_STAMP = "20181123152653"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(50324,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSSETSTD"
PROGSPE    = "CNSSETSPE"
CBOITE     = "DCNSSET"
BOITE      = "FCNSSET"
NOMMSK(0)  = "CONSSET1"
ABMSK(0)   = "SET1"
NOMMSK(1)  = "CONSSET2"
ABMSK(1)   = "SET2"
CMEMO      = "set"
CNOMMSK    = "CRITSET"
CABMSK     = "CSET"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CSET]
 When  0 : Local Mask =NOMMSK(0) [SET1]
 When  1 : Local Mask =NOMMSK(1) [SET2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CSET]
 When  0 : Grizo [SET1]
 When  1 : Grizo [SET2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CSET]VCRNUMORI)>0
 Grizo [CSET]VCRNUMORI
Endif
If dim([M:CSET]BPCNUM)>0
 Grizo [CSET]BPCNUM
Endif
If dim([M:CSET]VANREF)>0
 Grizo [CSET]VANREF
Endif
If dim([M:CSET]REQ)>0
 Grizo [CSET]REQ
Endif
If dim([M:CSET]RESP)>0
 Grizo [CSET]RESP
Endif
If dim([M:CSET]TXNDATDEB)>0
 Grizo [CSET]TXNDATDEB
Endif
If dim([M:CSET]TXNDATFIN)>0
 Grizo [CSET]TXNDATFIN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CSET])>0 : Close Local Mask [CSET] : Endif
 When  0 : If clalev([M:SET1])>0 : Close Local Mask [SET1] : Endif
 When  1 : If clalev([M:SET2])>0 : Close Local Mask [SET2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CSET]
 When  0 : Default Mask [SET1]
 When  1 : Default Mask [SET2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CSET]
 When  0 : Raz [M:SET1]
 When  1 : Raz [M:SET2]
Endcase
Return

$CRITENT
If dim([M:CSET]VCRNUMORI)>0 & dim([M:SET1]VCRNUMORI)>0
 [M:CSET]VCRNUMORI = [M:SET1]VCRNUMORI
Endif
If dim([M:CSET]BPCNUM)>0 & dim([M:SET1]BPCNUM)>0
 [M:CSET]BPCNUM = [M:SET1]BPCNUM
Endif
If dim([M:CSET]VANREF)>0 & dim([M:SET1]VANREF)>0
 [M:CSET]VANREF = [M:SET1]VANREF
Endif
If dim([M:CSET]REQ)>0 & dim([M:SET1]REQ)>0
 [M:CSET]REQ = [M:SET1]REQ
Endif
If dim([M:CSET]RESP)>0 & dim([M:SET1]RESP)>0
 [M:CSET]RESP = [M:SET1]RESP
Endif
If dim([M:CSET]TXNDATDEB)>0 & dim([M:SET1]TXNDATDEB)>0
 [M:CSET]TXNDATDEB = [M:SET1]TXNDATDEB
Endif
If dim([M:CSET]TXNDATFIN)>0 & dim([M:SET1]TXNDATFIN)>0
 [M:CSET]TXNDATFIN = [M:SET1]TXNDATFIN
Endif
Return

$ENTCRIT
If dim([M:CSET]VCRNUMORI)>0 & dim([M:SET1]VCRNUMORI)>0
[M:SET1]VCRNUMORI = [M:CSET]VCRNUMORI
Endif
If dim([M:CSET]BPCNUM)>0 & dim([M:SET1]BPCNUM)>0
[M:SET1]BPCNUM = [M:CSET]BPCNUM
Endif
If dim([M:CSET]VANREF)>0 & dim([M:SET1]VANREF)>0
[M:SET1]VANREF = [M:CSET]VANREF
Endif
If dim([M:CSET]REQ)>0 & dim([M:SET1]REQ)>0
[M:SET1]REQ = [M:CSET]REQ
Endif
If dim([M:CSET]RESP)>0 & dim([M:SET1]RESP)>0
[M:SET1]RESP = [M:CSET]RESP
Endif
If dim([M:CSET]TXNDATDEB)>0 & dim([M:SET1]TXNDATDEB)>0
[M:SET1]TXNDATDEB = [M:CSET]TXNDATDEB
Endif
If dim([M:CSET]TXNDATFIN)>0 & dim([M:SET1]TXNDATFIN)>0
[M:SET1]TXNDATFIN = [M:CSET]TXNDATFIN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "TRI" : CRITAFF2(1) = ""
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
NBBOUT = 0
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Case BOUT
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


