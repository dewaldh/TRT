#<AdxTL>@(#)0.0.0.0 $Revision$Class Stock
# Supervisor
## CRUD-CLASSE ## STOCK
# 2018-08-27 12:49:59 709


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File STOCK [STO_]

If !SILENCE : Call TRACE("2 --> Local Instance C_STOCK") From ASYRCOM : Endif
Local Instance STOCK Using C_STOCK

If !SILENCE : Call TRACE("3 --> New Instance C_STOCK") From ASYRCOM : Endif
STOCK = NewInstance C_STOCK AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [STO_]STO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of STOCK") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet STOCK.AREAD([STO_]STOFCY,[STO_]STOCOU))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("STOCK.STOFCY ="-num$(STOCK.STOFCY)) From ASYRCOM
 Call TRACE("STOCK.STOCOU ="-num$(STOCK.STOCOU)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(STOCK.AKEYS)
  Call TRACE("-"-num$(I)-":"-STOCK.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [STO_]
FreeGroup STOCK
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(STOCK,ACLE,ASTATUS,_ETAG)
Variable Instance STOCK Using C_STOCK
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _STOFCY(5)
Local Decimal _STOCOU(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STOCOU = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File STOCK [STO]
Default File [F:STO]
Read [F:STO]STO0 = [L]_STOFCY;[L]_STOCOU
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:STO]UPDTICK)>0
 [L]_ETAG = num$([F:STO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(STOCK,ACLE,ASTATUS)
Variable Instance STOCK Using C_STOCK
Value Char ACLE
Variable Integer ASTATUS
Local Char _STOFCY(5)
Local Decimal _STOCOU(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STOCOU = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet STOCK.AREAD([L]_STOFCY,[L]_STOCOU))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(STOCK,_STOFCY,_STOCOU,ASTATUS)
Variable Instance STOCK Using C_STOCK
Value Char _STOFCY
Value Decimal _STOCOU
Variable Integer ASTATUS

If STOCK = null : End : Endif

Gosub AVARIABLES From WMC00STOCK
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If STOCK.APARENT=null
 [L]A_I = STOCK.freeSnapshot
 STOCK.snapshotEnabled = 0
 STOCK.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & STOCK.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet STOCK._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If STOCK.APARENT=null
 STOCK.snapshotEnabled = 1
 STOCK.setAccessorEnabled = 1
Endif
LogicClose File [STO] ,[ITM]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet STOCK._ACTION_PARAM("AREAD_BEFORE",[L]_STOFCY,[L]_STOCOU))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:STO]
Read [F:STO]STO0 = [L]_STOFCY;[L]_STOCOU
If fstat
[L]A_ERROR = [L]_STOFCY+"~"+num$([L]_STOCOU)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(STOCK,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:STO]AUUID)>0 & [F:STO]AUUID=NullUuid
 [F:STO]AUUID = getUuid
Endif
SetInstance STOCK With [F:STO]
STOCK.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:ITM]
 [L]A_N2=1
 Read [F:ITM]ITM0 = [F:STO]ITMREF
 If !fstat
  If dim([F:ITM]AUUID)>0 & [F:ITM]AUUID=NullUuid
   [F:ITM]AUUID = getUuid
  Endif
  SetInstance STOCK.ITM(A_N2) With [F:ITM]
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 20
   If ([F:ITM]DIE([L]A_I-1)<>"" or [F:ITM]CCE([L]A_I-1)<>"")
    [L]A_NEWCOL += 1
    STOCK.ITM(A_N2).CDIE(A_NEWCOL) = NewInstance  C_ITMMASTER_CDIE(STOCK.ACTX,NullUuid,[L]A_I,STOCK.ITM(A_N2),"CDIE") AllocGroup STOCK
    STOCK.ITM(A_N2).CDIE(A_NEWCOL).DIE = [F:ITM]DIE([L]A_I-1)
    STOCK.ITM(A_N2).CDIE(A_NEWCOL).CCE = [F:ITM]CCE([L]A_I-1)
    [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).CDIE(A_NEWCOL).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 2
   If ([F:ITM]ECCBOMALT2([L]A_I-1)<>0 or [F:ITM]ECCBOMALT3([L]A_I-1)<>0)
    [L]A_NEWCOL += 1
    STOCK.ITM(A_N2).CECCBOMALT(A_NEWCOL) = NewInstance  C_ITMMASTER_CECCBOMALT(STOCK.ACTX,NullUuid,[L]A_I,STOCK.ITM(A_N2),"CECCBOMALT") AllocGroup STOCK
    STOCK.ITM(A_N2).CECCBOMALT(A_NEWCOL).ECCBOMALT2 = [F:ITM]ECCBOMALT2([L]A_I-1)
    STOCK.ITM(A_N2).CECCBOMALT(A_NEWCOL).ECCBOMALT3 = [F:ITM]ECCBOMALT3([L]A_I-1)
    [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).CECCBOMALT(A_NEWCOL).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 4
   If ([F:ITM]PCU([L]A_I-1)<>"" or [F:ITM]PCUSTUCOE([L]A_I-1)<>0 or [F:ITM]DACPCUCOE([L]A_I-1)<>0 or [F:ITM]PCURUL([L]A_I-1)<>0
& or [F:ITM]LBEFMT([L]A_I-1)<>"")
    [L]A_NEWCOL += 1
    STOCK.ITM(A_N2).CPCU(A_NEWCOL) = NewInstance  C_ITMMASTER_CPCU(STOCK.ACTX,NullUuid,[L]A_I,STOCK.ITM(A_N2),"CPCU") AllocGroup STOCK
    STOCK.ITM(A_N2).CPCU(A_NEWCOL).PCU = [F:ITM]PCU([L]A_I-1)
    STOCK.ITM(A_N2).CPCU(A_NEWCOL).PCUSTUCOE = [F:ITM]PCUSTUCOE([L]A_I-1)
    STOCK.ITM(A_N2).CPCU(A_NEWCOL).DACPCUCOE = [F:ITM]DACPCUCOE([L]A_I-1)
    STOCK.ITM(A_N2).CPCU(A_NEWCOL).PCURUL = [F:ITM]PCURUL([L]A_I-1)
    STOCK.ITM(A_N2).CPCU(A_NEWCOL).LBEFMT = [F:ITM]LBEFMT([L]A_I-1)
    [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).CPCU(A_NEWCOL).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 5
   [L]A_NEWCOL += 1
   STOCK.ITM(A_N2).CTSICOD(A_NEWCOL) = NewInstance  C_ITMMASTER_CTSICOD(STOCK.ACTX,NullUuid,[L]A_I,STOCK.ITM(A_N2),"CTSICOD") AllocGroup STOCK
   STOCK.ITM(A_N2).CTSICOD(A_NEWCOL).TSICOD = [F:ITM]TSICOD([L]A_I-1)
   [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).CTSICOD(A_NEWCOL).ACTION("AREAD_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 3
   If ([F:ITM]VACITM([L]A_I-1)<>"")
    [L]A_NEWCOL += 1
    STOCK.ITM(A_N2).CVACITM(A_NEWCOL) = NewInstance  C_ITMMASTER_CVACITM(STOCK.ACTX,NullUuid,[L]A_I,STOCK.ITM(A_N2),"CVACITM") AllocGroup STOCK
    STOCK.ITM(A_N2).CVACITM(A_NEWCOL).VACITM = [F:ITM]VACITM([L]A_I-1)
    [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).CVACITM(A_NEWCOL).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   Endif
  Next
  [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  STOCK.ITM(A_N2).ASTALIN = [V]CST_ALL
  For [AXX] Where CODFIC="ITMMASTER" & ZONE="DES1AXX" & IDENT1=STOCK.ITM(A_N2).ITMREF & IDENT2=""
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"DES1AXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   STOCK.ITM(A_N2).AXX(maxtab(STOCK.ITM(A_N2).AXX)).FLG = 0
  Next AXX
  If !len(fmet STOCK.ITM(A_N2).AGETTEXTRA("DES1AXX"))
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"DES1AXX",
& fmet STOCK.ITM(A_N2).AGETTEXTRALAN("DES1AXX",STOCK.ITM(A_N2).ACTX.AFOLD.ALANGDEF),
& STOCK.ITM(A_N2).ACTX.LAN) From ASYRSUB
  Endif
  For [AXX] Where CODFIC="ITMMASTER" & ZONE="DES2AXX" & IDENT1=STOCK.ITM(A_N2).ITMREF & IDENT2=""
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"DES2AXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   STOCK.ITM(A_N2).AXX(maxtab(STOCK.ITM(A_N2).AXX)).FLG = 0
  Next AXX
  If !len(fmet STOCK.ITM(A_N2).AGETTEXTRA("DES2AXX"))
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"DES2AXX",
& fmet STOCK.ITM(A_N2).AGETTEXTRALAN("DES2AXX",STOCK.ITM(A_N2).ACTX.AFOLD.ALANGDEF),
& STOCK.ITM(A_N2).ACTX.LAN) From ASYRSUB
  Endif
  For [AXX] Where CODFIC="ITMMASTER" & ZONE="DES3AXX" & IDENT1=STOCK.ITM(A_N2).ITMREF & IDENT2=""
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"DES3AXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   STOCK.ITM(A_N2).AXX(maxtab(STOCK.ITM(A_N2).AXX)).FLG = 0
  Next AXX
  If !len(fmet STOCK.ITM(A_N2).AGETTEXTRA("DES3AXX"))
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"DES3AXX",
& fmet STOCK.ITM(A_N2).AGETTEXTRALAN("DES3AXX",STOCK.ITM(A_N2).ACTX.AFOLD.ALANGDEF),
& STOCK.ITM(A_N2).ACTX.LAN) From ASYRSUB
  Endif
  For [AXX] Where CODFIC="ITMMASTER" & ZONE="RPLITMDES" & IDENT1=STOCK.ITM(A_N2).RPLITM & IDENT2=""
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"RPLITMDES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   STOCK.ITM(A_N2).AXX(maxtab(STOCK.ITM(A_N2).AXX)).FLG = 0
  Next AXX
  If !len(fmet STOCK.ITM(A_N2).AGETTEXTRA("RPLITMDES"))
   Call ASETTEXTRA(STOCK.ITM(A_N2).AXX,STOCK.ITM(A_N2).AllocGrp(),"RPLITMDES",
& fmet STOCK.ITM(A_N2).AGETTEXTRALAN("RPLITMDES",STOCK.ITM(A_N2).ACTX.AFOLD.ALANGDEF),
& STOCK.ITM(A_N2).ACTX.LAN) From ASYRSUB
  Endif
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet STOCK.ITM(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"ITM")+" : "+num$([F:STO]ITMREF)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"ITMMASTER"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet STOCK.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



