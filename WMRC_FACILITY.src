#<AdxTL>@(#)0.0.0.0 $Revision$Class Sites
# Supervisor
## CRUD-CLASSE ## FACILITY
# 2018-08-27 13:14:47 415


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(FACILITY,ASTATUS)
Variable Instance FACILITY Using R_FACILITY
Variable Integer ASTATUS

If FACILITY = null : End : Endif

Gosub AVARIABLES From WMR00FACILITY
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet FACILITY.ACTX.AGETAFCRIGHT(FACILITY,"GESFCY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet FACILITY.ACTX.AGETAFCRIGHTC(FACILITY,"GESFCY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_FACILITY
Else
 Gosub AINSERT_FACILITY
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = FACILITY.freeSnapshot
FACILITY.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
FACILITY.ASTALIN = [V]CST_ANEW
FACILITY.FCY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet FACILITY._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet FACILITY._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet FACILITY._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If FACILITY.FCY.ASTALIN = [V]CST_ANEWDEL : Return : Endif
FACILITY.FCY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITY.FCY.BPA) : # BPADDRESS -- 2
 If FACILITY.FCY.BPA(A_N2) <> null
& and !find(FACILITY.FCY.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BPA(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(FACILITY.FCY.BPA(A_N2).COLTEL)
   If FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(FACILITY.FCY.BPA(A_N2).COLWEB)
   If FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITY.FCY.BID) : # BID -- 3
 If FACILITY.FCY.BID(A_N2) <> null
& and !find(FACILITY.FCY.BID(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BID(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(FACILITY.FCY.BPA) : # BPADDRESS -- 2
 If FACILITY.FCY.BPA(A_N2) <> null
& and !find(FACILITY.FCY.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BPA(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(FACILITY.FCY.BPA(A_N2).COLTEL)
   If FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(FACILITY.FCY.BPA(A_N2).COLWEB)
   If FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITY.FCY.BID) : # BID -- 3
 If FACILITY.FCY.BID(A_N2) <> null
& and !find(FACILITY.FCY.BID(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.BID(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_FACILITY
Trbegin [F:FCY]
 Gosub AINSERT_FACILITY
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(FACILITY.FCY.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 FACILITY.FCY.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(FACILITY.FCY.BPA)
 If FACILITY.FCY.BPA(A_N2) <> null
  If FACILITY.FCY.BPA(A_N2).ASTALIN=[V]CST_ADEL or FACILITY.FCY.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance FACILITY.FCY.BPA(A_N2)
   FACILITY.FCY.BPA(A_N2) = null
  Elsif FACILITY.FCY.BPA(A_N2).ASTALIN <> [V]CST_ALL
   FACILITY.FCY.BPA(A_N2).ASTALIN = [V]CST_ALL
   For [L]A_I=1 To maxtab(FACILITY.FCY.BPA(A_N2).COLTEL)
    If FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
     If FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ADEL or FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
      FreeInstance FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I)
      FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I) = null
     Elsif FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN <> [V]CST_ALL
      FACILITY.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN = [V]CST_ALL
     Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
   For [L]A_I=1 To maxtab(FACILITY.FCY.BPA(A_N2).COLWEB)
    If FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
     If FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ADEL or FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
      FreeInstance FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I)
      FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I) = null
     Elsif FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN <> [V]CST_ALL
      FACILITY.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN = [V]CST_ALL
     Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(FACILITY.FCY.BID)
 If FACILITY.FCY.BID(A_N2) <> null
  [L]ASTATUS2 = fmet FACILITY.FCY.BID(A_N2)._AINSERT_AFTER
  If FACILITY.FCY.BID(A_N2).ASTALIN=[V]CST_ADEL or FACILITY.FCY.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance FACILITY.FCY.BID(A_N2)
   FACILITY.FCY.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_FACILITY
[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.FCY._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If FACILITY.snapshotEnabled=1
 [L]A_RETIK = FACILITY.revertUpdTick
Endif
[L]ASTATUS = max(fmet FACILITY.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



