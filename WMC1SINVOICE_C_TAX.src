#<AdxTL>@(#)0.0.0.0 $Revision$Class Customer invoices
# Supervisor
## ACLA-CLASSE ## SINVOICE_C_TAX
# 2018-08-27 12:46:28 451


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : TAX Taxes ( Field VAT 5)
####################################################################

$SET_TAX
If [L]_AOLDVAL<>this.TAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TAX
 Gosub PROPAGATE_TAX
Endif
Return

$INIT_TAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "TAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "TAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TAX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TAX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TAX
[L]CURPRO = "TAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TAX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TAX
[L]CURPRO = "TAX"
If vireblc(this.TAX,2)<>vireblc(format$("K:5c",this.TAX),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TAX
[L]CURPRO = "TAX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TAX
[L]CURPRO = "TAX"
If vireblc(this.TAX,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPVAT.ACTRLREF(this,"TAX",this.TAX,this.TAX,this.TAX_LEG,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.TAX<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_TAX
this.isReadonly = 0
[L]CURPRO = "TAX"
Gosub _LNKPRO_TAX
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "TAX"
$_LNKPRO_TAX
If vireblc(this.TAX,2)<>""
 # Link TABVAT
 Local File TABVAT [WTVT]
 Read [F:WTVT]TVT0 = this.TAX;this.TAX_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVAT" & ZONE="SHOAXX" & IDENT1=[F:WTVT]vat & IDENT2=[F:WTVT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("TAX","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVAT" & ZONE="DESAXX" & IDENT1=[F:WTVT]vat & IDENT2=[F:WTVT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("TAX","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTVT]
Endif
Return


####################################################################
# 2 : TAX_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_TAX_LEG
If [L]_AOLDVAL<>this.TAX_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TAX_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TAX_LEG
 Gosub PROPAGATE_TAX_LEG
Endif
Return

$INIT_TAX_LEG
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "TAX_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"TAX_LEG",this.TAX_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TAX_LEG
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "TAX_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TAX_LEG               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TAX_LEG               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TAX_LEG
[L]CURPRO = "TAX_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TAX_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TAX_LEG
[L]CURPRO = "TAX_LEG"
If vireblc(this.TAX_LEG,2)<>vireblc(format$("K:20B",this.TAX_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TAX_LEG
[L]CURPRO = "TAX_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"TAX_LEG",this.TAX_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TAX_LEG
[L]CURPRO = "TAX_LEG"
Return

$PROPAGATE_TAX_LEG
this.isReadonly = 0
[L]CURPRO = "TAX_LEG"
Gosub _LNKPRO_TAX_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TAX_LEG
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "TAX_LEG"
$_LNKPRO_TAX_LEG
If vireblc(this.TAX_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.TAX_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("TAX_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("TAX_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 3 : BASTAX Tax basis ( Field MD1 0)
####################################################################

$SET_BASTAX
If [L]_AOLDVAL<>this.BASTAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BASTAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BASTAX
 Gosub PROPAGATE_BASTAX
Endif
Return

$INIT_BASTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "BASTAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BASTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "BASTAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BASTAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BASTAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BASTAX
[L]CURPRO = "BASTAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BASTAX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BASTAX
[L]CURPRO = "BASTAX"
Return

$_AOTHERS_BASTAX
[L]CURPRO = "BASTAX"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"BASTAX",this.BASTAX,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BASTAX
[L]CURPRO = "BASTAX"
Return

$PROPAGATE_BASTAX
this.isReadonly = 0
[L]CURPRO = "BASTAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BASTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "BASTAX"
$_LNKPRO_BASTAX
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"BASTAX",this.BASTAX,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("BASTAX","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 4 : AMTTAX Tax amount ( Field MD1 0)
####################################################################

$SET_AMTTAX
If [L]_AOLDVAL<>this.AMTTAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMTTAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMTTAX
 Gosub PROPAGATE_AMTTAX
Endif
Return

$INIT_AMTTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "AMTTAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AMTTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "AMTTAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMTTAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMTTAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMTTAX
[L]CURPRO = "AMTTAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMTTAX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMTTAX
[L]CURPRO = "AMTTAX"
Return

$_AOTHERS_AMTTAX
[L]CURPRO = "AMTTAX"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"AMTTAX",this.AMTTAX,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMTTAX
[L]CURPRO = "AMTTAX"
Return

$PROPAGATE_AMTTAX
this.isReadonly = 0
[L]CURPRO = "AMTTAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMTTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "AMTTAX"
$_LNKPRO_AMTTAX
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"AMTTAX",this.AMTTAX,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("AMTTAX","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 5 : EXEAMTTAX Exemption amount ( Field MD1 0)
####################################################################

$SET_EXEAMTTAX
If [L]_AOLDVAL<>this.EXEAMTTAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXEAMTTAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXEAMTTAX
 Gosub PROPAGATE_EXEAMTTAX
Endif
Return

$INIT_EXEAMTTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "EXEAMTTAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXEAMTTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "EXEAMTTAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXEAMTTAX             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXEAMTTAX             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXEAMTTAX
[L]CURPRO = "EXEAMTTAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXEAMTTAX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXEAMTTAX
[L]CURPRO = "EXEAMTTAX"
Return

$_AOTHERS_EXEAMTTAX
[L]CURPRO = "EXEAMTTAX"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"EXEAMTTAX",this.EXEAMTTAX,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXEAMTTAX
[L]CURPRO = "EXEAMTTAX"
Return

$PROPAGATE_EXEAMTTAX
this.isReadonly = 0
[L]CURPRO = "EXEAMTTAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXEAMTTAX
Gosub DECLARE_VAR From WMC0SINVOICE_C_TAX
[L]CURPRO = "EXEAMTTAX"
$_LNKPRO_EXEAMTTAX
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"EXEAMTTAX",this.EXEAMTTAX,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("EXEAMTTAX","$x3Format",[L]AFORMAT)
Endif
Return




