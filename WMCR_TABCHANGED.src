#<AdxTL>@(#)0.0.0.0 $Revision$Class Currency rates
# Supervisor
## CRUD-CLASSE ## TABCHANGED
# 2018-08-27 12:50:46 621


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABCHANGE [TCH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABCHANGED") From ASYRCOM : Endif
Local Instance TABCHANGED Using C_TABCHANGED

If !SILENCE : Call TRACE("3 --> New Instance C_TABCHANGED") From ASYRCOM : Endif
TABCHANGED = NewInstance C_TABCHANGED AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TCH_]TCH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABCHANGED") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABCHANGED.AREAD([TCH_]CHGTYP,[TCH_]CURDEN,[TCH_]CUR,[TCH_]CHGSTRDAT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABCHANGED.CHGTYP ="-num$(TABCHANGED.CHGTYP)) From ASYRCOM
 Call TRACE("TABCHANGED.CURDEN ="-num$(TABCHANGED.CURDEN)) From ASYRCOM
 Call TRACE("TABCHANGED.CUR ="-num$(TABCHANGED.CUR)) From ASYRCOM
 Call TRACE("TABCHANGED.CHGSTRDAT ="-num$(TABCHANGED.CHGSTRDAT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABCHANGED.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABCHANGED.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TCH_]
FreeGroup TABCHANGED
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABCHANGED,ACLE,ASTATUS,_ETAG)
Variable Instance TABCHANGED Using C_TABCHANGED
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _CHGTYP
Local Char _CURDEN(3)
Local Char _CUR(3)
Local Date _CHGSTRDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CHGTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CURDEN = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_CUR = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_CHGSTRDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File TABCHANGE [TCH]
Default File [F:TCH]
Read [F:TCH]TCH0 = [L]_CHGTYP;[L]_CURDEN;[L]_CUR;[L]_CHGSTRDAT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TCH]UPDTICK)>0
 [L]_ETAG = num$([F:TCH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABCHANGED,ACLE,ASTATUS)
Variable Instance TABCHANGED Using C_TABCHANGED
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _CHGTYP
Local Char _CURDEN(3)
Local Char _CUR(3)
Local Date _CHGSTRDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CHGTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CURDEN = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_CUR = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_CHGSTRDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGED.AREAD([L]_CHGTYP,[L]_CURDEN,[L]_CUR,[L]_CHGSTRDAT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABCHANGED,_CHGTYP,_CURDEN,_CUR,_CHGSTRDAT,ASTATUS)
Variable Instance TABCHANGED Using C_TABCHANGED
Value Tinyint _CHGTYP
Value Char _CURDEN
Value Char _CUR
Value Date _CHGSTRDAT
Variable Integer ASTATUS

If TABCHANGED = null : End : Endif

Gosub AVARIABLES From WMC00TABCHANGED
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABCHANGED.APARENT=null
 [L]A_I = TABCHANGED.freeSnapshot
 TABCHANGED.snapshotEnabled = 0
 TABCHANGED.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABCHANGED.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABCHANGED._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABCHANGED.APARENT=null
 TABCHANGED.snapshotEnabled = 1
 TABCHANGED.setAccessorEnabled = 1
Endif
LogicClose File [TCH]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGED._ACTION_PARAM("AREAD_BEFORE",[L]_CHGTYP,[L]_CURDEN,[L]_CUR,[L]_CHGSTRDAT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TCH]
Read [F:TCH]TCH0 = [L]_CHGTYP;[L]_CURDEN;[L]_CUR;[L]_CHGSTRDAT
If fstat
[L]A_ERROR = num$([L]_CHGTYP)+"~"+[L]_CURDEN+"~"+[L]_CUR+"~"+num$([L]_CHGSTRDAT)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABCHANGED,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TCH]AUUID)>0 & [F:TCH]AUUID=NullUuid
 [F:TCH]AUUID = getUuid
Endif
SetInstance TABCHANGED With [F:TCH]
TABCHANGED.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet TABCHANGED.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=TABCHANGED.CUR & IDENT2=AVOID.ACHAR
 Call ASETTEXTRA(TABCHANGED.AXX,TABCHANGED.AllocGrp(),"INTDES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCHANGED.AXX(maxtab(TABCHANGED.AXX)).FLG = 0
Next AXX
If !len(fmet TABCHANGED.AGETTEXTRA("INTDES"))
 Call ASETTEXTRA(TABCHANGED.AXX,TABCHANGED.AllocGrp(),"INTDES",
& fmet TABCHANGED.AGETTEXTRALAN("INTDES",TABCHANGED.ACTX.AFOLD.ALANGDEF),
& TABCHANGED.ACTX.LAN) From ASYRSUB
Endif

Return



