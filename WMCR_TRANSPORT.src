#<AdxTL>@(#)0.0.0.0 $Revision$Class Transport
# Supervisor
## CRUD-CLASSE ## TRANSPORT
# 2018-08-27 12:54:32 048


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TRANSPORT [TRNP_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TRANSPORT") From ASYRCOM : Endif
Local Instance TRANSPORT Using C_TRANSPORT

If !SILENCE : Call TRACE("3 --> New Instance C_TRANSPORT") From ASYRCOM : Endif
TRANSPORT = NewInstance C_TRANSPORT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TRNP_]TRNP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TRANSPORT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.AREAD([TRNP_]TRNNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TRANSPORT.TRNNUM ="-num$(TRANSPORT.TRNNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TRANSPORT.AKEYS)
  Call TRACE("-"-num$(I)-":"-TRANSPORT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TRNP_]
FreeGroup TRANSPORT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TRANSPORT,ACLE,ASTATUS,_ETAG)
Variable Instance TRANSPORT Using C_TRANSPORT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _TRNNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TRNNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TRANSPORT [TRNP]
Default File [F:TRNP]
Read [F:TRNP]TRNP0 = [L]_TRNNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TRNP]UPDTICK)>0
 [L]_ETAG = num$([F:TRNP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TRANSPORT,ACLE,ASTATUS)
Variable Instance TRANSPORT Using C_TRANSPORT
Value Char ACLE
Variable Integer ASTATUS
Local Char _TRNNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TRNNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.AREAD([L]_TRNNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TRANSPORT,_TRNNUM,ASTATUS)
Variable Instance TRANSPORT Using C_TRANSPORT
Value Char _TRNNUM
Variable Integer ASTATUS

If TRANSPORT = null : End : Endif

Gosub AVARIABLES From WMC00TRANSPORT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TRANSPORT.APARENT=null
 [L]A_I = TRANSPORT.freeSnapshot
 TRANSPORT.snapshotEnabled = 0
 TRANSPORT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TRANSPORT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TRANSPORT.APARENT=null
 TRANSPORT.snapshotEnabled = 1
 TRANSPORT.setAccessorEnabled = 1
Endif
LogicClose File [TRNP] ,[EVT] ,[SHIPD] ,[SHIPT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT._ACTION_PARAM("AREAD_BEFORE",[L]_TRNNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TRNP]
Read [F:TRNP]TRNP0 = [L]_TRNNUM
If fstat
[L]A_ERROR = [L]_TRNNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TRANSPORT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TRNP]AUUID)>0 & [F:TRNP]AUUID=NullUuid
 [F:TRNP]AUUID = getUuid
Endif
SetInstance TRANSPORT With [F:TRNP]
TRANSPORT.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:EVT]
 [L]A_N2=0
 For [F:EVT]EVT0 Where TRNNUM=[F:TRNP]TRNNUM
  [L]A_N2 +=1
  TRANSPORT.EVT(A_N2) = NewInstance  C_EVENTTRNP(TRANSPORT.ACTX,NullUuid,[L]A_N2,TRANSPORT,"EVT") AllocGroup TRANSPORT
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.EVT(A_N2).ADDINSTANCE_BOUND)
  Callmet TRANSPORT.EVT(A_N2).AREAD([F:EVT]TRNNUM,[F:EVT]EVTNUM)
  TRANSPORT.EVT(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.EVT(A_N2).ASETATTRIBUTE("TRNNUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.EVT(A_N2).ASETATTRIBUTE("EVTNUM","$isDisabled","true"))
 Next EVT
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SHIPD]
 [L]A_N2=0
 For [F:SHIPD]SHIPD0 Where VCRNUM=[F:TRNP]TRNNUM & VCRTYP=39
  [L]A_N2 +=1
  TRANSPORT.SHIPD(A_N2) = NewInstance  C_SHIPDOC(TRANSPORT.ACTX,NullUuid,[L]A_N2,TRANSPORT,"SHIPD") AllocGroup TRANSPORT
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPD(A_N2).ADDINSTANCE_BOUND)
  Callmet TRANSPORT.SHIPD(A_N2).AREAD([F:SHIPD]VCRNUM,[F:SHIPD]VCRTYP,[F:SHIPD]SDLIN)
  TRANSPORT.SHIPD(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPD(A_N2).ASETATTRIBUTE("VCRNUM","$namProParent","TRNNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPD(A_N2).ASETATTRIBUTE("VCRTYP","$namProParent","VCRTYP"))
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPD(A_N2).ASETATTRIBUTE("SDLIN","$isDisabled","true"))
 Next SHIPD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SHIPT]
 [L]A_N2=0
 For [F:SHIPT]SHIPT0 Where VCRNUM=[F:TRNP]TRNNUM & VCRTYP=39
  [L]A_N2 +=1
  TRANSPORT.SHIPT(A_N2) = NewInstance  C_SHIPTRACK(TRANSPORT.ACTX,NullUuid,[L]A_N2,TRANSPORT,"SHIPT") AllocGroup TRANSPORT
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPT(A_N2).ADDINSTANCE_BOUND)
  Callmet TRANSPORT.SHIPT(A_N2).AREAD([F:SHIPT]VCRNUM,[F:SHIPT]VCRTYP,[F:SHIPT]STLIN)
  TRANSPORT.SHIPT(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPT(A_N2).ASETATTRIBUTE("VCRNUM","$namProParent","TRNNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPT(A_N2).ASETATTRIBUTE("VCRTYP","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.SHIPT(A_N2).ASETATTRIBUTE("STLIN","$isDisabled","true"))
 Next SHIPT
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet TRANSPORT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TRANSPORT" & ZONE="DESAXX" & IDENT1=TRANSPORT.TRNNUM & IDENT2=""
 Call ASETTEXTRA(TRANSPORT.AXX,TRANSPORT.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TRANSPORT.AXX(maxtab(TRANSPORT.AXX)).FLG = 0
Next AXX
If !len(fmet TRANSPORT.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TRANSPORT.AXX,TRANSPORT.AllocGrp(),"DESAXX",
& fmet TRANSPORT.AGETTEXTRALAN("DESAXX",TRANSPORT.ACTX.AFOLD.ALANGDEF),
& TRANSPORT.ACTX.LAN) From ASYRSUB
Endif

Return



