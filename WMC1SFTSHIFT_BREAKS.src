#<AdxTL>@(#)0.0.0.0 $Revision$Class Shift code
# Supervisor
## ACLA-CLASSE ## SFTSHIFT_BREAKS
# 2018-08-27 12:45:35 244


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : BRKCOD Break code ( Field INDREF 3)
####################################################################

$SET_BRKCOD
If [L]_AOLDVAL<>this.BRKCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BRKCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BRKCOD
 Gosub PROPAGATE_BRKCOD
Endif
Return

$INIT_BRKCOD
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BRKCOD
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BRKCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BRKCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BRKCOD
[L]CURPRO = "BRKCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BRKCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BRKCOD
[L]CURPRO = "BRKCOD"
If vireblc(this.BRKCOD,2)<>vireblc(format$("K:3c",this.BRKCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BRKCOD
[L]CURPRO = "BRKCOD"
If vireblc(this.BRKCOD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPINDREF.ACTRLREF(this,"BRKCOD",this.BRKCOD,this.BRKCOD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BRKCOD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BRKCOD
[L]CURPRO = "BRKCOD"
Return

$PROPAGATE_BRKCOD
this.isReadonly = 0
[L]CURPRO = "BRKCOD"
Gosub _LNKPRO_BRKCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BRKCOD
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKCOD"
$_LNKPRO_BRKCOD
If vireblc(this.BRKCOD,2)<>""
 # Link SFTINDREF
 Local File SFTINDREF [WSFTIR]
 Read [F:WSFTIR]SFTAG0 = this.BRKCOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="SFTINDREF" & ZONE="INDESAXX" & IDENT1=[F:WSFTIR]INDCOD & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BRKCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WSFTIR]
Endif
Return


####################################################################
# 2 : BRKSTR Start time ( Field HM 6)
####################################################################

$SET_BRKSTR
If [L]_AOLDVAL<>this.BRKSTR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BRKSTR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BRKSTR
 Gosub PROPAGATE_BRKSTR
Endif
Return

$INIT_BRKSTR
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKSTR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BRKSTR
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKSTR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BRKSTR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BRKSTR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BRKSTR
[L]CURPRO = "BRKSTR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BRKSTR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BRKSTR
[L]CURPRO = "BRKSTR"
If vireblc(this.BRKSTR,2)<>vireblc(format$("Kz:6X",this.BRKSTR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BRKSTR
[L]CURPRO = "BRKSTR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BRKSTR
[L]CURPRO = "BRKSTR"
Return

$PROPAGATE_BRKSTR
this.isReadonly = 0
[L]CURPRO = "BRKSTR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BRKSTR
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKSTR"
$_LNKPRO_BRKSTR
Return


####################################################################
# 3 : BRKEND End time ( Field HM 6)
####################################################################

$SET_BRKEND
If [L]_AOLDVAL<>this.BRKEND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BRKEND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BRKEND
 Gosub PROPAGATE_BRKEND
Endif
Return

$INIT_BRKEND
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKEND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BRKEND
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKEND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BRKEND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BRKEND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BRKEND
[L]CURPRO = "BRKEND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BRKEND,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BRKEND
[L]CURPRO = "BRKEND"
If vireblc(this.BRKEND,2)<>vireblc(format$("Kz:6X",this.BRKEND),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BRKEND
[L]CURPRO = "BRKEND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BRKEND
[L]CURPRO = "BRKEND"
Return

$PROPAGATE_BRKEND
this.isReadonly = 0
[L]CURPRO = "BRKEND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BRKEND
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKEND"
$_LNKPRO_BRKEND
Return


####################################################################
# 4 : BRKDUR Duration ( Field DCB 2)
####################################################################

$SET_BRKDUR
If [L]_AOLDVAL<>this.BRKDUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BRKDUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BRKDUR
 Gosub PROPAGATE_BRKDUR
Endif
Return

$INIT_BRKDUR
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKDUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BRKDUR
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKDUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BRKDUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BRKDUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BRKDUR
[L]CURPRO = "BRKDUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BRKDUR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BRKDUR
[L]CURPRO = "BRKDUR"
Return

$_AOTHERS_BRKDUR
[L]CURPRO = "BRKDUR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BRKDUR
[L]CURPRO = "BRKDUR"
Return

$PROPAGATE_BRKDUR
this.isReadonly = 0
[L]CURPRO = "BRKDUR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BRKDUR
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "BRKDUR"
$_LNKPRO_BRKDUR
Return


####################################################################
# 5 : DURCHECKB Check ( Field C 4)
####################################################################

$SET_DURCHECKB
If [L]_AOLDVAL<>this.DURCHECKB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DURCHECKB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DURCHECKB
 Gosub PROPAGATE_DURCHECKB
Endif
Return

$INIT_DURCHECKB
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "DURCHECKB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DURCHECKB
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "DURCHECKB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DURCHECKB             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DURCHECKB             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DURCHECKB
[L]CURPRO = "DURCHECKB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DURCHECKB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DURCHECKB
[L]CURPRO = "DURCHECKB"
Return

$_AOTHERS_DURCHECKB
[L]CURPRO = "DURCHECKB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DURCHECKB
[L]CURPRO = "DURCHECKB"
Return

$PROPAGATE_DURCHECKB
this.isReadonly = 0
[L]CURPRO = "DURCHECKB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DURCHECKB
Gosub DECLARE_VAR From WMC0SFTSHIFT_BREAKS
[L]CURPRO = "DURCHECKB"
$_LNKPRO_DURCHECKB
Return




