#<AdxTL>@(#)0.0.0.0 $Revision$Class Formula wizard setup
# Supervisor
## CRUD-CLASSE ## AVARLOC
# 2018-08-27 13:03:58 776


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(AVARLOC,ASTATUS)
Variable Instance AVARLOC Using R_AVARLOC
Variable Integer ASTATUS

If AVARLOC = null : End : Endif

Gosub AVARIABLES From WMR00AVARLOC
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_AVARLOC
Else
 Gosub ADELETE_AVARLOC
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
AVARLOC.ASTALIN = [V]CST_ADEL
AVARLOC.AVR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If AVARLOC.AVR.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AVARLOC.AVR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.AVR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.AVR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_AVARLOC
Gosub ADELETE_AVARLOC
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_AVARLOC
[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.AVR._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AVARLOC.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If AVARLOC.snapshotEnabled=1
 [L]A_RETIK = AVARLOC.revertUpdTick
Endif
[L]ASTATUS = max(fmet AVARLOC.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



