#<AdxTL>@(#)0.0.0.0 $Revision$
# WMACONTEXTAFOLD_CSTD
# 2018-08-07 02:17:26 327

$PROPERTIES
Case ACTION
 When "GET" : Gosub GET
 When Default
Endcase
Return

$EVENTS
Case AEVENT
 When "AINIT" : Gosub AINIT
 When Default
Endcase
Return

$METHODS
Case [L]AMETHOD
 When Default
Endcase
Return


#------------------------------------------------------------------------------#
$AINIT
Local Char    PARAM(250)
Local Integer RES
this.isReadonly = 0
Gosub INIT_TEST_SUP3
RES = fmet this.ASETATTRIBUTE("ALANGDEF","STA","0")
RES = fmet this.ASETATTRIBUTE("AMODULE","STA","0")
RES = fmet this.ASETATTRIBUTE("ALEGCUR","STA","0")
RES = fmet this.ASETATTRIBUTE("ALISTLEG","STA","0")
RES = fmet this.ASETATTRIBUTE("ANBLEG","STA","0")
RES = fmet this.ASETATTRIBUTE("AVERSION","STA","0")
RES = fmet this.ASETATTRIBUTE("AHISTO","STA","0")
RES = fmet this.ASETATTRIBUTE("AUDIT","STA","0")
RES = fmet this.ASETATTRIBUTE("HISTO","STA","0")
this.isReadonly = 1
Return

#------------------------------------------------------------------------------#
$GET
Local Char    PARAM(250)
Case CURPRO
When "ALANGDEF" : Gosub GET_ALANGDEF
When "AMODULE" : Gosub GET_AMODULE
When "ALEGCUR" : Gosub GET_ALEGCUR
When "ALISTLEG" : Gosub GET_ALISTLEG
When "ANBLEG" : Gosub GET_ANBLEG
When "AVERSION" : Gosub GET_AVERSION
When "AHISTO" : Gosub GET_AHISTO
When "AUDIT" : Gosub GET_AUDIT
When "HISTO" : Gosub GET_HISTO
Endcase
Return

##############################################################################
# GET for different properties
##############################################################################

#ALANGDEF : 
$GET_ALANGDEF
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("ALANGDEF","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_ALANGDEF
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("ALANGDEF","STA","1")
Endif
Return

#AMODULE : 
$GET_AMODULE
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("AMODULE","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_AMODULE
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("AMODULE","STA","1")
Endif
Return

#ALEGCUR : 
$GET_ALEGCUR
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("ALEGCUR","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_ALEGCUR
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("ALEGCUR","STA","1")
Endif
Return

#ALISTLEG : 
$GET_ALISTLEG
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("ALISTLEG","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_ALISTLEG
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("ALISTLEG","STA","1")
Endif
Return

#ANBLEG : 
$GET_ANBLEG
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("ANBLEG","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_ANBLEG
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("ANBLEG","STA","1")
Endif
Return

#AVERSION : 
$GET_AVERSION
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("AVERSION","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_AVERSION
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("AVERSION","STA","1")
Endif
Return

#AHISTO : 
$GET_AHISTO
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("AHISTO","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_AHISTO
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("AHISTO","STA","1")
Endif
Return

#AUDIT : 
$GET_AUDIT
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("AUDIT","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_AUDIT
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("AUDIT","STA","1")
Endif
Return

#HISTO : 
$GET_HISTO
Local Char    PARAM(250)
If Fmet THIS.AGETATTRIBUTE("HISTO","STA")<>"1"
 this.isReadonly = 0
 Gosub INIT_HISTO
 this.isReadonly = 1
 Local Integer RES : RES = Fmet THIS.ASETATTRIBUTE("HISTO","STA","1")
Endif
Return

##############################################################################
# INIT for different properties
##############################################################################

#TEST_SUP3 : 
$INIT_TEST_SUP3
PARAM = func ADP_TOOL.GET_PARAM(this.APARENT.AFOLDER,1,"","ADONIX")
this.TEST_SUP3 = val(PARAM)
Return

#ALANGDEF : 
$INIT_ALANGDEF
this.ALANGDEF = func ADS_TOOL.GET_LANDEF(this.APARENT.AFOLDER)
Return

#AMODULE : 
$INIT_AMODULE
Local Integer I 
Local Char PARAM(250)
Local File ADOVAL [ADW] 

Read [ADW]ADW0 = "";"";"MODULE1"
If !fstat 
 PARAM = [ADW]VALEUR
Endif
If PARAM = ""
 PARAM = "2222222222"
Endif
For I=1 To 10
 this.AMODULE(I) = val(mid$(PARAM,I,1))
Next 
I

Raz PARAM
Read [ADW]ADW0 = "";"";"MODULE2"
If !fstat 
 PARAM = [ADW]VALEUR
Endif
If PARAM = ""
 PARAM = "2222222222"
Endif
For I=1 To 10
 this.AMODULE(I+10) = val(mid$(PARAM,I,1))
Next I

Return

#ALEGCUR : 
$INIT_ALEGCUR
Local Shortint T_NBLEG
Local Char T_FOLDLEG(10)(1..40)
Call SETLEG(nomap,T_FOLDLEG,T_NBLEG) From ASYRCTLFOLDER
If T_NBLEG = 1 : this.ALEGCUR = T_FOLDLEG(1) : Endif

Return

#ALISTLEG : 
$INIT_ALISTLEG
Local Shortint T_NBLEG
Call SETLEG(nomap,this.ALISTLEG,T_NBLEG) From ASYRCTLFOLDER

Return

#ANBLEG : 
$INIT_ANBLEG
Local Char T_FOLDLEG(10)(1..40)
Call SETLEG(nomap,T_FOLDLEG,this.ANBLEG) From ASYRCTLFOLDER
Return

#AVERSION : 
$INIT_AVERSION
   this.AVERSION = "1.8.0"
Return

#AHISTO : 
$INIT_AHISTO
this.AHISTO = (filinfo(filpath("","histo","",0),0)>=0)
Return

#AUDIT : 
$INIT_AUDIT
If filinfo(filpath("FIL","ALOGIN","fde",0),0)<=0
 this.AUDIT = 1
Else
 Local Integer OPETAB
 If clalev([F:ACV])=0 
  Local File ACTIV [ACV] : OPETAB = 1
 Endif
 Read [ACV]CODACT = "AUDIT"
 If !fstat & [F:ACV]FLACT=2
  this.AUDIT = 2
 Else

  this.AUDIT = 1
 Endif
 If OPETAB
  Close Local File [ACV]
 Endif
Endif
Return

#HISTO : 
$INIT_HISTO
this.HISTO = (filinfo(filpath("","histo","",0),0)>=0)
Return

