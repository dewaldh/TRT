#<AdxTL>@(#)0.0.0.0 $Revision$Class Business batch
# Sage X3 supervisor
## CRUD-CLASSE ## YBBM
# 2018-04-30 06:20:16 058


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(YBBM,ASTATUS)
Variable Instance YBBM Using R_YBBM
Variable Integer ASTATUS

If YBBM = null : End : Endif

Gosub AVARIABLES From WMR00YBBM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_YBBM
Else
 Gosub AUPDATE_YBBM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = YBBM.freeSnapshot
YBBM.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
YBBM.ASTALIN = [V]CST_AUPD
YBBM.YBBH.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = YBBM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YBBM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YBBM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YBBM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YBBM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If YBBM.YBBH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YBBM.YBBH.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(YBBM.YBBH.ASTALIN)<>""
 [L]A_ASTALIN = YBBM.YBBH.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YBBM.YBBH.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(YBBM.YBBH.ASTALIN)<>""
 [L]A_ASTALIN = YBBM.YBBH.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YBBM.YBBH.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_YBBM
Trbegin [F:YBBH]
 Gosub AUPDATE_YBBM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(YBBM.YBBH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YBBM.YBBH.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_YBBM
[L]A_ASTALIN = YBBM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBM.YBBH._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YBBM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If YBBM.snapshotEnabled=1
 [L]A_RETIK = YBBM.revertUpdTick
Endif

[L]ASTATUS = max(fmet YBBM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



