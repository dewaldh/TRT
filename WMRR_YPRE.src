#<AdxTL>@(#)0.0.0.0 $Revision$Class Precinct
# Supervisor
## CRUD-CLASSE ## YPRE
# 2018-11-13 04:27:14 168


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YPRECINT [YPRC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_YPRE") From ASYRCOM : Endif
Local Instance YPRE Using R_YPRE

If !SILENCE : Call TRACE("3 --> New Instance R_YPRE") From ASYRCOM : Endif
YPRE = NewInstance R_YPRE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YPRC_]YPRC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YPRE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YPRE.AREAD([YPRC_]YPREID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YPRE.YPRC.YPREID ="-num$(YPRE.YPRC.YPREID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YPRE.YPRC.AKEYS)
  Call TRACE("-"-num$(I)-":"-YPRE.YPRC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YPRC_]
FreeGroup YPRE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YPRE,ACLE,ASTATUS,_ETAG)
Variable Instance YPRE Using R_YPRE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YPREID(7)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YPREID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YPRECINT [YPRC]
Default File [F:YPRC]
Read [F:YPRC]YPRC0 = [L]_YPREID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YPRC]UPDTICK)>0
 [L]_ETAG = num$([F:YPRC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YPRE,ACLE,ASTATUS)
Variable Instance YPRE Using R_YPRE
Value Char ACLE
Variable Integer ASTATUS
Local Char _YPREID(7)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YPREID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.AREAD([L]_YPREID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YPRE,_YPREID,ASTATUS)
Variable Instance YPRE Using R_YPRE
Value Char _YPREID
Variable Integer ASTATUS

If YPRE = null : End : Endif

Gosub AVARIABLES From WMR00YPRE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YPRE.APARENT=null
 [L]A_I = YPRE.freeSnapshot
 YPRE.snapshotEnabled = 0
 YPRE.setAccessorEnabled = 0
Endif

If fmet YPRE.ACTX.AGETAFCRIGHT(YPRE,"GESYPRE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:YPRC]
Read [F:YPRC]YPRC0 = [L]_YPREID
If fstat
[L]A_ERROR = [L]_YPREID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YPRE,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet YPRE.ACTX.AGETAFCRIGHTR(YPRE,"GESYPRE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet YPRE.ACTX.ASTACRITROLE(YPRE,[L]_YPREID
& ,"YPRE","YPRC",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

YPRE.YPRC.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.YPRC.AREAD([L]_YPREID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YPRE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YPRE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YPRE.APARENT=null
 YPRE.snapshotEnabled = 1
 YPRE.setAccessorEnabled = 1
Endif
LogicClose File [YPRC] ,[YGGN] ,[YRMA] ,[YSTG]
End



