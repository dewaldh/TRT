#<AdxTL>@(#)0.0.0.0 $Revision$Class Geographic subdivisions
# Supervisor
## CRUD-CLASSE ## TABSUBDIV
# 2018-08-27 13:38:58 390


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(TABSUBDIV,ASTATUS)
Variable Instance TABSUBDIV Using R_TABSUBDIV
Variable Integer ASTATUS

If TABSUBDIV = null : End : Endif

Gosub AVARIABLES From WMR00TABSUBDIV
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet TABSUBDIV.ACTX.AGETAFCRIGHT(TABSUBDIV,"GESATU",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet TABSUBDIV.ACTX.AGETAFCRIGHTC(TABSUBDIV,"GESATU",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_TABSUBDIV
Else
 Gosub AINSERT_TABSUBDIV
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = TABSUBDIV.freeSnapshot
TABSUBDIV.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
TABSUBDIV.ASTALIN = [V]CST_ANEW
TABSUBDIV.ATU.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet TABSUBDIV._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet TABSUBDIV._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet TABSUBDIV._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If TABSUBDIV.ATU.ASTALIN = [V]CST_ANEWDEL : Return : Endif
TABSUBDIV.ATU.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ATU.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ATU.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_TABSUBDIV
Trbegin [F:__INT]
 Gosub AINSERT_TABSUBDIV
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(TABSUBDIV.ATU.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 TABSUBDIV.ATU.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_TABSUBDIV
[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ATU._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABSUBDIV.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If TABSUBDIV.snapshotEnabled=1
 [L]A_RETIK = TABSUBDIV.revertUpdTick
Endif
[L]ASTATUS = max(fmet TABSUBDIV.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



