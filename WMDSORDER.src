#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule SORDER

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".SORDERQ" : If clalev([F:SOQ])=0 : Local File =OUVTAB [SOQ] : Endif
OUVTAB = GDOSSIER+".SORDER" : If clalev([F:SOH])=0 : Local File =OUVTAB [SOH] : Endif
OUVTAB = GDOSSIER+".SORDERP" : If clalev([F:SOP])=0 : Local File =OUVTAB [SOP] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [SOQ]"
Link [SOQ] With
& [SOH]SOH0 = [F:SOQ]SOHNUM,
& [SOP]SOP0 = [F:SOQ]SOHNUM;[F:SOQ]SOPLIN;[F:SOQ]SOQSEQ,
& [CPY]CPY0 = [F:SOH]CPY
& As [LNK_]
& Where [F:SOQ]SOHCAT<>4
& Order By Key CLE = [SOQ]SOHNUM;[SOQ]SOPLIN;[SOQ]SOQSEQ
FILTRE = ""
Return

$FERME
If clalev([F:SOQ]) : Close local File [SOQ] : Endif
If clalev([F:SOH]) : Close local File [SOH] : Endif
If clalev([F:SOP]) : Close local File [SOP] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..3)
Local Integer DTYP(1..3)
Local Integer NBDCLE
NBDCLE = 3
DCLE(1) = "SOHNUM"
DTYP(1) =  7
DCLE(2) = "SOPLIN"
DTYP(2) =  3
DCLE(3) = "SOQSEQ"
DTYP(3) =  3
Return

$CHARGE_CLE
If dim([F:AAA_]SOHNUM)>0
 [F:AAA_]SOHNUM = [F:SOQ]SOHNUM
Endif
If dim([F:AAA_]SOPLIN)>0
 [F:AAA_]SOPLIN = [F:SOQ]SOPLIN
Endif
If dim([F:AAA_]SOQSEQ)>0
 [F:AAA_]SOQSEQ = [F:SOQ]SOQSEQ
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]SOHNUM=[F:SOQ]SOHNUM"
Append PFLT, " & [F:AAA_]SOPLIN=[F:SOQ]SOPLIN"
Append PFLT, " & [F:AAA_]SOQSEQ=[F:SOQ]SOQSEQ"

End

$MAJFLD
### SOHNUM
[L]FLD="SOHNUM"
[L]FORMULE='[F:SOQ]SOHNUM'
If dim([F:AAA_]SOHNUM)>0
 [F:AAA_]SOHNUM = [F:SOQ]SOHNUM
Endif

### SOPLIN
[L]FLD="SOPLIN"
[L]FORMULE='[F:SOQ]SOPLIN'
If dim([F:AAA_]SOPLIN)>0
 [F:AAA_]SOPLIN = [F:SOQ]SOPLIN
Endif

### SOQSEQ
[L]FLD="SOQSEQ"
[L]FORMULE='[F:SOQ]SOQSEQ'
If dim([F:AAA_]SOQSEQ)>0
 [F:AAA_]SOQSEQ = [F:SOQ]SOQSEQ
Endif

### SOHTYP
[L]FLD="SOHTYP"
[L]FORMULE='[F:SOH]SOHTYP'
If dim([F:AAA_]SOHTYP)>0
 [F:AAA_]SOHTYP = [F:SOH]SOHTYP
Endif

### SOHTYP_LEG
[L]FLD="SOHTYP_LEG"
[L]FORMULE='func TRTX3BIVEN.GETLEG_SOHTYP([F:AAA_]SOHTYP,[F:CPY]LEG)'
If dim([F:AAA_]SOHTYP_LEG)>0
 [F:AAA_]SOHTYP_LEG = func TRTX3BIVEN.GETLEG_SOHTYP([F:AAA_]SOHTYP,[F:CPY]LEG)
Endif

### SOHCAT
[L]FLD="SOHCAT"
[L]FORMULE='[F:SOH]SOHCAT'
If dim([F:AAA_]SOHCAT)>0
 [F:AAA_]SOHCAT = [F:SOH]SOHCAT
Endif

### ORDDAT
[L]FLD="ORDDAT"
[L]FORMULE='[F:SOH]ORDDAT'
If dim([F:AAA_]ORDDAT)>0
 [F:AAA_]ORDDAT = [F:SOH]ORDDAT
Endif

### REVNUM
[L]FLD="REVNUM"
[L]FORMULE='[F:SOH]REVNUM'
If dim([F:AAA_]REVNUM)>0
 [F:AAA_]REVNUM = [F:SOH]REVNUM
Endif

### SOQSTA
[L]FLD="SOQSTA"
[L]FORMULE='[F:SOQ]SOQSTA'
If dim([F:AAA_]SOQSTA)>0
 [F:AAA_]SOQSTA = [F:SOQ]SOQSTA
Endif

### INVFLG
[L]FLD="INVFLG"
[L]FORMULE='[F:SOQ]INVFLG'
If dim([F:AAA_]INVFLG)>0
 [F:AAA_]INVFLG = [F:SOQ]INVFLG
Endif

### DEMSTA
[L]FLD="DEMSTA"
[L]FORMULE='[F:SOQ]DEMSTA'
If dim([F:AAA_]DEMSTA)>0
 [F:AAA_]DEMSTA = [F:SOQ]DEMSTA
Endif

### DEMDLVDAT
[L]FLD="DEMDLVDAT"
[L]FORMULE='[F:SOQ]DEMDLVDAT'
If dim([F:AAA_]DEMDLVDAT)>0
 [F:AAA_]DEMDLVDAT = [F:SOQ]DEMDLVDAT
Endif

### SHIDAT
[L]FLD="SHIDAT"
[L]FORMULE='[F:SOQ]SHIDAT'
If dim([F:AAA_]SHIDAT)>0
 [F:AAA_]SHIDAT = [F:SOQ]SHIDAT
Endif

### EXTDLVDAT
[L]FLD="EXTDLVDAT"
[L]FORMULE='[F:SOQ]EXTDLVDAT'
If dim([F:AAA_]EXTDLVDAT)>0
 [F:AAA_]EXTDLVDAT = [F:SOQ]EXTDLVDAT
Endif

### DAYLTI
[L]FLD="DAYLTI"
[L]FORMULE='[F:SOQ]DAYLTI'
If dim([F:AAA_]DAYLTI)>0
 [F:AAA_]DAYLTI = [F:SOQ]DAYLTI
Endif

### FMI
[L]FLD="FMI"
[L]FORMULE='[F:SOQ]FMI'
If dim([F:AAA_]FMI)>0
 [F:AAA_]FMI = [F:SOQ]FMI
Endif

### MDL
[L]FLD="MDL"
[L]FORMULE='[F:SOQ]MDL'
If dim([F:AAA_]MDL)>0
 [F:AAA_]MDL = [F:SOQ]MDL
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:SOH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:SOH]EECICT
Endif

### BPTNUM
[L]FLD="BPTNUM"
[L]FORMULE='[F:SOQ]BPTNUM'
If dim([F:AAA_]BPTNUM)>0
 [F:AAA_]BPTNUM = [F:SOQ]BPTNUM
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:SOH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:SOH]FFWNUM
Endif

### PCK
[L]FLD="PCK"
[L]FORMULE='[F:SOQ]PCK'
If dim([F:AAA_]PCK)>0
 [F:AAA_]PCK = [F:SOQ]PCK
Endif

### PCKCAP
[L]FLD="PCKCAP"
[L]FORMULE='[F:SOQ]PCKCAP'
If dim([F:AAA_]PCKCAP)>0
 [F:AAA_]PCKCAP = [F:SOQ]PCKCAP
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:SOH]VACBPR'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:SOH]VACBPR
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### VAT
[L]FLD="VAT"
[L]FORMULE='[F:SOP]VAT(0)'
If dim([F:AAA_]VAT)>0
 [F:AAA_]VAT = [F:SOP]VAT(0)
Endif

### VAT_LEG
[L]FLD="VAT_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VAT([F:AAA_]VAT,[F:CPY]LEG)'
If dim([F:AAA_]VAT_LEG)>0
 [F:AAA_]VAT_LEG = func TRTX3BITC.GETLEG_VAT([F:AAA_]VAT,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:SOH]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:SOH]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:SOH]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:SOH]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### CCLREN
[L]FLD="CCLREN"
[L]FORMULE='[F:SOQ]CCLREN'
If dim([F:AAA_]CCLREN)>0
 [F:AAA_]CCLREN = [F:SOQ]CCLREN
Endif

### CCLDAT
[L]FLD="CCLDAT"
[L]FORMULE='[F:SOQ]CCLDAT'
If dim([F:AAA_]CCLDAT)>0
 [F:AAA_]CCLDAT = [F:SOQ]CCLDAT
Endif

### ITMDES1
[L]FLD="ITMDES1"
[L]FORMULE='[F:SOP]ITMDES1'
If dim([F:AAA_]ITMDES1)>0
 [F:AAA_]ITMDES1 = [F:SOP]ITMDES1
Endif

### LINTYP
[L]FLD="LINTYP"
[L]FORMULE='[F:SOP]LINTYP'
If dim([F:AAA_]LINTYP)>0
 [F:AAA_]LINTYP = [F:SOP]LINTYP
Endif

### FOCFLG
[L]FLD="FOCFLG"
[L]FORMULE='[F:SOP]FOCFLG'
If dim([F:AAA_]FOCFLG)>0
 [F:AAA_]FOCFLG = [F:SOP]FOCFLG
Endif

### GROPRI
[L]FLD="GROPRI"
[L]FORMULE='[F:SOP]GROPRI'
If dim([F:AAA_]GROPRI)>0
 [F:AAA_]GROPRI = [F:SOP]GROPRI
Endif

### NETPRI
[L]FLD="NETPRI"
[L]FORMULE='[F:SOP]NETPRI'
If dim([F:AAA_]NETPRI)>0
 [F:AAA_]NETPRI = [F:SOP]NETPRI
Endif

### CPRPRI
[L]FLD="CPRPRI"
[L]FORMULE='[F:SOP]CPRPRI'
If dim([F:AAA_]CPRPRI)>0
 [F:AAA_]CPRPRI = [F:SOP]CPRPRI
Endif

### PFM
[L]FLD="PFM"
[L]FORMULE='[F:SOP]PFM'
If dim([F:AAA_]PFM)>0
 [F:AAA_]PFM = [F:SOP]PFM
Endif

### SAU
[L]FLD="SAU"
[L]FORMULE='[F:SOP]SAU'
If dim([F:AAA_]SAU)>0
 [F:AAA_]SAU = [F:SOP]SAU
Endif

### SAUSTUCOE
[L]FLD="SAUSTUCOE"
[L]FORMULE='[F:SOP]SAUSTUCOE'
If dim([F:AAA_]SAUSTUCOE)>0
 [F:AAA_]SAUSTUCOE = [F:SOP]SAUSTUCOE
Endif

### REPRAT1
[L]FLD="REPRAT1"
[L]FORMULE='[F:SOP]REPRAT1'
If dim([F:AAA_]REPRAT1)>0
 [F:AAA_]REPRAT1 = [F:SOP]REPRAT1
Endif

### REPRAT2
[L]FLD="REPRAT2"
[L]FORMULE='[F:SOP]REPRAT2'
If dim([F:AAA_]REPRAT2)>0
 [F:AAA_]REPRAT2 = [F:SOP]REPRAT2
Endif

### BPCNAM
[L]FLD="BPCNAM"
[L]FORMULE='[F:SOH]BPCNAM'
If dim([F:AAA_]BPCNAM)>0
 [F:AAA_]BPCNAM = [F:SOH]BPCNAM
Endif

### CNTNAM
[L]FLD="CNTNAM"
[L]FORMULE='[F:SOH]CNTNAM'
If dim([F:AAA_]CNTNAM)>0
 [F:AAA_]CNTNAM = [F:SOH]CNTNAM
Endif

### BPCPOSCOD
[L]FLD="BPCPOSCOD"
[L]FORMULE='vireblc([F:SOH]BPCPOSCOD,1)'
If dim([F:AAA_]BPCPOSCOD)>0
 [F:AAA_]BPCPOSCOD = vireblc([F:SOH]BPCPOSCOD,1)
Endif

### BPCCTY
[L]FLD="BPCCTY"
[L]FORMULE='[F:SOH]BPCCTY'
If dim([F:AAA_]BPCCTY)>0
 [F:AAA_]BPCCTY = [F:SOH]BPCCTY
Endif

### BPCCRY
[L]FLD="BPCCRY"
[L]FORMULE='[F:SOH]BPCCRY'
If dim([F:AAA_]BPCCRY)>0
 [F:AAA_]BPCCRY = [F:SOH]BPCCRY
Endif

### BPDNAM
[L]FLD="BPDNAM"
[L]FORMULE='[F:SOH]BPDNAM'
If dim([F:AAA_]BPDNAM)>0
 [F:AAA_]BPDNAM = [F:SOH]BPDNAM
Endif

### CNDNAM
[L]FLD="CNDNAM"
[L]FORMULE='[F:SOH]CNDNAM'
If dim([F:AAA_]CNDNAM)>0
 [F:AAA_]CNDNAM = [F:SOH]CNDNAM
Endif

### BPDPOSCOD
[L]FLD="BPDPOSCOD"
[L]FORMULE='vireblc([F:SOH]BPDPOSCOD,1)'
If dim([F:AAA_]BPDPOSCOD)>0
 [F:AAA_]BPDPOSCOD = vireblc([F:SOH]BPDPOSCOD,1)
Endif

### BPDCTY
[L]FLD="BPDCTY"
[L]FORMULE='[F:SOH]BPDCTY'
If dim([F:AAA_]BPDCTY)>0
 [F:AAA_]BPDCTY = [F:SOH]BPDCTY
Endif

### BPDCRY
[L]FLD="BPDCRY"
[L]FORMULE='[F:SOH]BPDCRY'
If dim([F:AAA_]BPDCRY)>0
 [F:AAA_]BPDCRY = [F:SOH]BPDCRY
Endif

### BPINAM
[L]FLD="BPINAM"
[L]FORMULE='[F:SOH]BPINAM'
If dim([F:AAA_]BPINAM)>0
 [F:AAA_]BPINAM = [F:SOH]BPINAM
Endif

### CNINAM
[L]FLD="CNINAM"
[L]FORMULE='[F:SOH]CNINAM'
If dim([F:AAA_]CNINAM)>0
 [F:AAA_]CNINAM = [F:SOH]CNINAM
Endif

### BPIPOSCOD
[L]FLD="BPIPOSCOD"
[L]FORMULE='vireblc([F:SOH]BPIPOSCOD,1)'
If dim([F:AAA_]BPIPOSCOD)>0
 [F:AAA_]BPIPOSCOD = vireblc([F:SOH]BPIPOSCOD,1)
Endif

### BPICTY
[L]FLD="BPICTY"
[L]FORMULE='[F:SOH]BPICTY'
If dim([F:AAA_]BPICTY)>0
 [F:AAA_]BPICTY = [F:SOH]BPICTY
Endif

### BPICRY
[L]FLD="BPICRY"
[L]FORMULE='[F:SOH]BPICRY'
If dim([F:AAA_]BPICRY)>0
 [F:AAA_]BPICRY = [F:SOH]BPICRY
Endif

### FMINUM
[L]FLD="FMINUM"
[L]FORMULE='[F:SOQ]FMINUM'
If dim([F:AAA_]FMINUM)>0
 [F:AAA_]FMINUM = [F:SOQ]FMINUM
Endif

### FMILIN
[L]FLD="FMILIN"
[L]FORMULE='[F:SOQ]FMILIN'
If dim([F:AAA_]FMILIN)>0
 [F:AAA_]FMILIN = [F:SOQ]FMILIN
Endif

### FMISEQ
[L]FLD="FMISEQ"
[L]FORMULE='[F:SOQ]FMISEQ'
If dim([F:AAA_]FMISEQ)>0
 [F:AAA_]FMISEQ = [F:SOQ]FMISEQ
Endif

### POHNUM
[L]FLD="POHNUM"
[L]FORMULE='[F:SOQ]POHNUM'
If dim([F:AAA_]POHNUM)>0
 [F:AAA_]POHNUM = [F:SOQ]POHNUM
Endif

### POPLIN
[L]FLD="POPLIN"
[L]FORMULE='[F:SOQ]POPLIN'
If dim([F:AAA_]POPLIN)>0
 [F:AAA_]POPLIN = [F:SOQ]POPLIN
Endif

### POQSEQ
[L]FLD="POQSEQ"
[L]FORMULE='[F:SOQ]POQSEQ'
If dim([F:AAA_]POQSEQ)>0
 [F:AAA_]POQSEQ = [F:SOQ]POQSEQ
Endif

### SQHNUM
[L]FLD="SQHNUM"
[L]FORMULE='[F:SOP]SQHNUM'
If dim([F:AAA_]SQHNUM)>0
 [F:AAA_]SQHNUM = [F:SOP]SQHNUM
Endif

### SQDLIN
[L]FLD="SQDLIN"
[L]FORMULE='[F:SOP]SQDLIN'
If dim([F:AAA_]SQDLIN)>0
 [F:AAA_]SQDLIN = [F:SOP]SQDLIN
Endif

### SDHTYP
[L]FLD="SDHTYP"
[L]FORMULE='[F:SOH]SDHTYP'
If dim([F:AAA_]SDHTYP)>0
 [F:AAA_]SDHTYP = [F:SOH]SDHTYP
Endif

### SDHTYP_LEG
[L]FLD="SDHTYP_LEG"
[L]FORMULE='func TRTX3BIVEN.GETLEG_SDHTYP([F:AAA_]SDHTYP,[F:CPY]LEG)'
If dim([F:AAA_]SDHTYP_LEG)>0
 [F:AAA_]SDHTYP_LEG = func TRTX3BIVEN.GETLEG_SDHTYP([F:AAA_]SDHTYP,[F:CPY]LEG)
Endif


Return

