#<AdxTL>@(#)0.0.0.0 $Revision$Class Budget line
# Sage X3 supervisor
## CRUD-CLASSE ## PJMBUDLIG
# 2018-07-31 00:26:08 995


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMBUDLIG [PJLB_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMBUDLIG") From ASYRCOM : Endif
Local Instance PJMBUDLIG Using C_PJMBUDLIG

If !SILENCE : Call TRACE("3 --> New Instance C_PJMBUDLIG") From ASYRCOM : Endif
PJMBUDLIG = NewInstance C_PJMBUDLIG AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PJLB_]PJLB0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMBUDLIG") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.AREAD([PJLB_]OPPNUM,[PJLB_]PBUCOD,[PJLB_]PLBSEQ))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMBUDLIG.OPPNUM ="-num$(PJMBUDLIG.OPPNUM)) From ASYRCOM
 Call TRACE("PJMBUDLIG.PBUCOD ="-num$(PJMBUDLIG.PBUCOD)) From ASYRCOM
 Call TRACE("PJMBUDLIG.PLBSEQ ="-num$(PJMBUDLIG.PLBSEQ)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMBUDLIG.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMBUDLIG.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PJLB_]
FreeGroup PJMBUDLIG
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMBUDLIG,ACLE,ASTATUS,_ETAG)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Local Integer _PLBSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBUCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PLBSEQ = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File PJMBUDLIG [PJLB]
Default File [F:PJLB]
Read [F:PJLB]PJLB0 = [L]_OPPNUM;[L]_PBUCOD;[L]_PLBSEQ
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PJLB]UPDTICK)>0
 [L]_ETAG = num$([F:PJLB]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMBUDLIG,ACLE,ASTATUS)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Local Integer _PLBSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBUCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PLBSEQ = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.AREAD([L]_OPPNUM,[L]_PBUCOD,[L]_PLBSEQ))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMBUDLIG,_OPPNUM,_PBUCOD,_PLBSEQ,ASTATUS)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Value Char _OPPNUM
Value Char _PBUCOD
Value Integer _PLBSEQ
Variable Integer ASTATUS

If PJMBUDLIG = null : End : Endif

Gosub AVARIABLES From WMC00PJMBUDLIG
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMBUDLIG.APARENT=null
 [L]A_I = PJMBUDLIG.freeSnapshot
 PJMBUDLIG.snapshotEnabled = 0
 PJMBUDLIG.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMBUDLIG.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMBUDLIG.APARENT=null
 PJMBUDLIG.snapshotEnabled = 1
 PJMBUDLIG.setAccessorEnabled = 1
Endif
LogicClose File [PJLB]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_PBUCOD,[L]_PLBSEQ))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PJLB]
Read [F:PJLB]PJLB0 = [L]_OPPNUM;[L]_PBUCOD;[L]_PLBSEQ
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_PBUCOD+"~"+num$([L]_PLBSEQ)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMBUDLIG,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PJLB]AUUID)>0 & [F:PJLB]AUUID=NullUuid
 [F:PJLB]AUUID = getUuid
Endif
If dim([F:PJLB]PLBDESTEX)>0: Raz [F:PJLB]PLBDESTEX: Endif
If dim([F:PJLB]PLBCOMTEX)>0: Raz [F:PJLB]PLBCOMTEX: Endif
SetInstance PJMBUDLIG With [F:PJLB]
PJMBUDLIG.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PJMBUDLIG" & ZONE="PLBDESAXX" & IDENT1=PJMBUDLIG.KEYCONCAT & IDENT2=num$(PJMBUDLIG.PLBSEQ)
 Call ASETTEXTRA(PJMBUDLIG.AXX,PJMBUDLIG.AllocGrp(),"PLBDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMBUDLIG.AXX(maxtab(PJMBUDLIG.AXX)).FLG = 0
Next AXX
If !len(fmet PJMBUDLIG.AGETTEXTRA("PLBDESAXX"))
 Call ASETTEXTRA(PJMBUDLIG.AXX,PJMBUDLIG.AllocGrp(),"PLBDESAXX",
& fmet PJMBUDLIG.AGETTEXTRALAN("PLBDESAXX",PJMBUDLIG.ACTX.AFOLD.ALANGDEF),
& PJMBUDLIG.ACTX.LAN) From ASYRSUB
Endif

Return



