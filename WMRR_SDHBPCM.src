#<AdxTL>@(#)0.0.0.0 $Revision$Class Deliveries
# Supervisor
## CRUD-CLASSE ## SDHBPCM
# 2018-08-27 13:28:23 464


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SDELIVERY [SDH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SDHBPCM") From ASYRCOM : Endif
Local Instance SDHBPCM Using R_SDHBPCM

If !SILENCE : Call TRACE("3 --> New Instance R_SDHBPCM") From ASYRCOM : Endif
SDHBPCM = NewInstance R_SDHBPCM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SDH_]SDH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SDHBPCM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SDHBPCM.AREAD([SDH_]SDHNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SDHBPCM.SDH.SDHNUM ="-num$(SDHBPCM.SDH.SDHNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SDHBPCM.SDH.AKEYS)
  Call TRACE("-"-num$(I)-":"-SDHBPCM.SDH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SDH_]
FreeGroup SDHBPCM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SDHBPCM,ACLE,ASTATUS,_ETAG)
Variable Instance SDHBPCM Using R_SDHBPCM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SDHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SDHNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SDELIVERY [SDH]
Default File [F:SDH]
Read [F:SDH]SDH0 = [L]_SDHNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SDH]UPDTICK)>0
 [L]_ETAG = num$([F:SDH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SDHBPCM,ACLE,ASTATUS)
Variable Instance SDHBPCM Using R_SDHBPCM
Value Char ACLE
Variable Integer ASTATUS
Local Char _SDHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SDHNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SDHBPCM.AREAD([L]_SDHNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SDHBPCM,_SDHNUM,ASTATUS)
Variable Instance SDHBPCM Using R_SDHBPCM
Value Char _SDHNUM
Variable Integer ASTATUS

If SDHBPCM = null : End : Endif

Gosub AVARIABLES From WMR00SDHBPCM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SDHBPCM.APARENT=null
 [L]A_I = SDHBPCM.freeSnapshot
 SDHBPCM.snapshotEnabled = 0
 SDHBPCM.setAccessorEnabled = 0
Endif

If fmet SDHBPCM.ACTX.AGETAFCRIGHT(SDHBPCM,"GESSDH",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SDH]
Read [F:SDH]SDH0 = [L]_SDHNUM
If fstat
[L]A_ERROR = [L]_SDHNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SDHBPCM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:SDH]STOFCY
[L]A_STRACC = ""
If fmet SDHBPCM.ACTX.AGETAFCRIGHTR(SDHBPCM,"GESSDH",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SDHBPCM.ACTX.ASTACRITROLE(SDHBPCM,[L]_SDHNUM
& ,"SDH","SDH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SDHBPCM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SDHBPCM.SDH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SDHBPCM.SDH.AREAD([L]_SDHNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SDHBPCM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SDHBPCM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SDHBPCM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SDHBPCM.APARENT=null
 SDHBPCM.snapshotEnabled = 1
 SDHBPCM.setAccessorEnabled = 1
Endif
LogicClose File [SDH] ,[SDD] ,[SVV] ,[SVF] ,[CALSVF]
End



