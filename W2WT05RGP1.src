#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT05RGP1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_WRHORI
Onevent CONTROL Call C_WRHORI(zc) From W2WT05RGP1
Onevent BEFORE_INPUT Call AS_WRHORI(zc) From W2WT05RGP1
Return

Subprog AS_WRHORI(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WRHORI(zc) From W2WT05RGP1
Gosub _AFF
End

Subprog C_WRHORI(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]STOFCY,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRHORI" : GZNUM = 281 : Endif
If !mkstat
 ## Action STD
 Call C_WRHORI(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "WRHORI" : GZNUM = 281 : Endif
Endif
Gosub _AFF
End

Subprog S_WRHORI(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSRG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRG"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = "WRH"
 PARMSK(3) = num$([M:SSL1]VCRTYP(nolign-1))
 PARMSK(4) = [M:SSL1]VCRNUM(nolign-1)
 PARMSK(5) = num$(nolign-1)
 PARMSK(6) = "5"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSRG","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOCORI
Onevent CONTROL Call C_LOCORI(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_LOCORI From W2WT05RGP1
Onevent BEFORE_INPUT Call AS_LOCORI(zc) From W2WT05RGP1
Return

Subprog AS_LOCORI(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOCORI(zc) From W2WT05RGP1
Onkey 144 Titled GBOUTP Call P_LOCORI(zc) From W2WT05RGP1
Onkey 146 Titled GBOUTA Call SA_LOCORI(zc) From W2WT05RGP1
Gosub _AFF
End

Subprog C_LOCORI(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("LOC","!",VALEUR,num$([M:SSL1]STOFCY),mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "LOCORI" : GZNUM = 3623 : Endif
If !mkstat
 ## Action STD
 Call C_LOCORI(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "LOCORI" : GZNUM = 3623 : Endif
Endif
Gosub _AFF
End

$AMM_LOCORI
Call AM_LOCORI(zc)
If !mkstat & GOBJET
 zoncou = "LOCORI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOCORI(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOCORI(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "LOCORI" : GZNUM = 3623 : Endif
Gosub _AFF
End

Subprog S_LOCORI(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSRG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRG"
 PARMSK(1) = [M:SSL1]STOFCY
 PARMSK(2) = "LIG"
 PARMSK(3) = num$([M:SSL1]VCRTYP(nolign-1))
 PARMSK(4) = [M:SSL1]VCRNUM(nolign-1)
 PARMSK(5) = num$(nolign-1)
 PARMSK(6) = "4"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSRG","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_LOCORI(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "LOC"
PARMSK(2) = num$([M:SSL1]STOFCY)
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LOCORI(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$([M:SSL1]STOFCY)
Call VISU("LOC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_IPTDAT
Onevent BEFORE_AREA Gosub AV_IPTDAT From W2WT05RGP1
Return

$AV_IPTDAT
Chgfmt [M]IPTDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_PCUORI
Return

$ON_QTYPCUORI
Onevent BEFORE_AREA Gosub AV_QTYPCUORI From W2WT05RGP1
Return

$AV_QTYPCUORI
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCUORI(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCUORI(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STU
Return

$ON_QTYSTUORI
Onevent BEFORE_AREA Gosub AV_QTYSTUORI From W2WT05RGP1
Return

$AV_QTYSTUORI
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTUORI(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PCU
Onevent BEFORE_INPUT Call AS_PCU(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_PCU From W2WT05RGP1
Onevent CONTROL Call C_PCU(zc) From W2WT05RGP1
Return

Subprog AS_PCU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]PCU(INDIC) = VALEUR
 Affzo PCU(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_PCU(zc) From W2WT05RGP1
Onkey   2 Titled GBOUTS Call S_PCU(zc) From W2WT05RGP1
Onkey 144 Titled GBOUTP Call P_PCU(zc) From W2WT05RGP1
Onkey 146 Titled GBOUTA Call SA_PCU(zc) From W2WT05RGP1
Gosub _AFF
End

Subprog C_PCU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 5201 : Endif
Gosub _AFF
End

$AMM_PCU
Call AM_PCU(zc)
If !mkstat & GOBJET
 zoncou = "PCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCU(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 5201 : Endif
Gosub _AFF
End

Subprog S_PCU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELUOMN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELUOMN"
 PARMSK(1) = "1"
 PARMSK(2) = "1"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELUOMN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_PCU(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_QTYPCU
Onevent BEFORE_AREA Gosub AV_QTYPCU From W2WT05RGP1
Onevent BEFORE_INPUT Call AS_QTYPCU(zc) From W2WT05RGP1
Onevent CONTROL Call C_QTYPCU(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_QTYPCU From W2WT05RGP1
Return

$AV_QTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCU(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTYPCU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]QTYPCU(INDIC) = VALEUR
 Affzo QTYPCU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_QTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYPCU(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "QTYPCU" : GZNUM = 19856 : Endif
Gosub _AFF
End

$AMM_QTYPCU
Call AM_QTYPCU(zc)
If !mkstat & GOBJET
 zoncou = "QTYPCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYPCU(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "QTYPCU" : GZNUM = 19856 : Endif
Gosub _AFF
End

$ON_PCUSTUCOE
Onevent BEFORE_INPUT Call AS_PCUSTUCOE(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_PCUSTUCOE From W2WT05RGP1
Return

Subprog AS_PCUSTUCOE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]PCUSTUCOE(INDIC) = VALEUR
 Affzo PCUSTUCOE(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_PCUSTUCOE
Call AM_PCUSTUCOE(zc)
If !mkstat & GOBJET
 zoncou = "PCUSTUCOE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCUSTUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PCUSTUCOE(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "PCUSTUCOE" : GZNUM = 5053 : Endif
Gosub _AFF
End

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W2WT05RGP1
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_WRH
Onevent CONTROL Call C_WRH(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_WRH From W2WT05RGP1
Onevent BEFORE_INPUT Call AS_WRH(zc) From W2WT05RGP1
Return

Subprog AS_WRH(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WRH(zc) From W2WT05RGP1
Gosub _AFF
End

Subprog C_WRH(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]STOFCY,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 41042 : Endif
If !mkstat
 ## Action STD
 Call C_WRH(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 41042 : Endif
Endif
Gosub _AFF
End

$AMM_WRH
Call AM_WRH(zc)
If !mkstat & GOBJET
 zoncou = "WRH" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRH(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WRH(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 41042 : Endif
Gosub _AFF
End

Subprog S_WRH(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M]STOFCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STA
Onevent BEFORE_INPUT Call AS_STA(zc) From W2WT05RGP1
Onevent CONTROL Call C_STA(zc) From W2WT05RGP1
Return

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]STA(INDIC) = VALEUR
 Affzo STA(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_STA(zc) From W2WT05RGP1
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,[M:SSL1]QUAFLG(nolign-1),0,[M:SSL1]QUAFRE(nolign-1),mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1287 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = [F:SRU]AUZSST
 PARMSK(2) = num$([M:SSL1]QUAFLG(nolign-1))
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOCTYP
Onevent CONTROL Call C_LOCTYP(zc) From W2WT05RGP1
Onevent BEFORE_INPUT Call AS_LOCTYP(zc) From W2WT05RGP1
Return

Subprog AS_LOCTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STKSUGTLO
Call STKSUGTLO([M:SSL1]WLOCSEQ(nolign-1),[M:SSL1]TRSTYP(nolign-1),[M:SSL1]TRSCOD(nolign-1),[M:SSL1]STOFCY,[M:SSL1]ITMREF(nolign-1),[M:SSL1]PCU(nolign-1),[M:SSL1]QTYPCU(nolign-1),[M:SSL1]STA(nolign-1)
&,VALEUR,"Q"+string$([M:SSL1]STA(nolign-1)="","S"),"",string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SSL1]WRH)),[M:SSL1]WRH(nolign-1)))),[M:SSL1]LOC(nolign-1)) From STKLOC
If mkstat=2
 [M]LOCTYP(INDIC) = VALEUR
 Affzo LOCTYP(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_LOCTYP(VALEUR) From TRTSSL
 If mkstat=2
  [M]LOCTYP(INDIC) = VALEUR
  Affzo LOCTYP(INDIC) : mkstat = 2
 Endif
 If !mkstat
  ## Action PASSAI
  Call PASSAI From TRTSSLA
  If mkstat=2
   [M]LOCTYP(INDIC) = VALEUR
   Affzo LOCTYP(INDIC) : mkstat = 2
  Endif
  Onkey   2 Titled GBOUTS Call S_LOCTYP(zc) From W2WT05RGP1
 Endif
Endif
Gosub _AFF
End

Subprog C_LOCTYP(VALEUR)
Variable Char    VALEUR()
## Action CTLTEMFMT
Call CTLTEMFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 3197 : Endif
If !mkstat
 ## Action STKCTRTLO
 Call STKCTRTLO([M:SSL1]WLOCSEQ(nolign-1),[M:SSL1]TRSTYP(nolign-1),[M:SSL1]TRSCOD(nolign-1),[M:SSL1]STOFCY,[M:SSL1]ITMREF(nolign-1),[M:SSL1]PCU(nolign-1),[M:SSL1]QTYPCU(nolign-1),[M:SSL1]STA(nolign-1)
& ,0,VALEUR,mkstat,"Q"+string$([M:SSL1]STA(nolign-1)="","S"),"",string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SSL1]WRH)),[M:SSL1]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 3197 : Endif
 If !mkstat
  ## Action STD
  Call C_LOCTYP(VALEUR) From TRTSSL
  If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 3197 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOCTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELTLO1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELTLO1"
 PARMSK(1) = num$([M:SSL1]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:SSL1]TRSTYP(nolign-1))
 PARMSK(3) = [M:SSL1]TRSCOD(nolign-1)
 PARMSK(4) = [M:SSL1]STOFCY
 PARMSK(5) = [M:SSL1]ITMREF(nolign-1)
 PARMSK(6) = [M:SSL1]PCU(nolign-1)
 PARMSK(7) = num$([M:SSL1]QTYPCU(nolign-1))
 PARMSK(8) = [M:SSL1]STA(nolign-1)
 PARMSK(9) = "Q"+string$([M:SSL1]STA(nolign-1)="","S")
 PARMSK(10) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELTLO1","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W2WT05RGP1
Onevent BEFORE_INPUT Call AS_LOC(zc) From W2WT05RGP1
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6426,GBOUT2) From OBJDIV
Call TEXTE(8902,GBOUT3) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]LOC(INDIC) = VALEUR
 Affzo LOC(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STKSUGEMP
 Call STKSUGEMP([M:SSL1]WLOCSEQ(nolign-1),[M:SSL1]TRSTYP(nolign-1),[M:SSL1]TRSCOD(nolign-1),[M:SSL1]STOFCY,[M:SSL1]ITMREF(nolign-1),[M:SSL1]PCU(nolign-1),[M:SSL1]QTYPCU(nolign-1),[M:SSL1]STA(nolign-1)
& ,[M:SSL1]LOCTYP(nolign-1),VALEUR,"",string$([M:SSL1]STA(nolign-1)="","S"),string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2'),string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SSL1]WRH)),[M:SSL1]WRH(nolign-1))))) From STKLOC
 If mkstat=2
  [M]LOC(INDIC) = VALEUR
  Affzo LOC(INDIC) : mkstat = 2
 Endif
 Onkey 130 Titled GBOUT2 Call B2_LOC(zc) From W2WT05RGP1
 Onkey 131 Titled GBOUT3 Call B3_LOC(zc) From W2WT05RGP1
 Onkey   2 Titled GBOUTS Call S_LOC(zc) From W2WT05RGP1
Endif
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 7101 : Endif
If !mkstat
 ## Action STKCTREMP
 Call STKCTREMP([M:SSL1]WLOCSEQ(nolign-1),[M:SSL1]TRSTYP(nolign-1),[M:SSL1]TRSCOD(nolign-1),[M:SSL1]STOFCY,[M:SSL1]ITMREF(nolign-1),[M:SSL1]PCU(nolign-1),[M:SSL1]QTYPCU(nolign-1),[M:SSL1]STA(nolign-1)
& ,[M:SSL1]LOCTYP(nolign-1),VALEUR,"",0,mkstat,GBIDD1,string$([M:SSL1]STA(nolign-1)="","S"),string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
& ,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SSL1]WRH)),[M:SSL1]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 7101 : Endif
 If !mkstat
  ## Action STD
  Call C_LOC(VALEUR) From TRTSSL
  If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 7101 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIEMPLIB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIEMPLIB"
 PARMSK(1) = num$([M:SSL1]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:SSL1]TRSTYP(nolign-1))
 PARMSK(3) = [M:SSL1]TRSCOD(nolign-1)
 PARMSK(4) = [M:SSL1]STOFCY
 PARMSK(5) = [M:SSL1]ITMREF(nolign-1)
 PARMSK(6) = [M:SSL1]PCU(nolign-1)
 PARMSK(7) = num$([M:SSL1]QTYPCU(nolign-1))
 PARMSK(8) = [M:SSL1]STA(nolign-1)
 PARMSK(9) = [M:SSL1]LOCTYP(nolign-1)
 PARMSK(10) = VALEUR
 PARMSK(11) = ""
 PARMSK(12) = string$([M:SSL1]STA(nolign-1)="","S")
 PARMSK(13) = string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
 PARMSK(14) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SSL1]WRH)),[M:SSL1]WRH(nolign-1))))
 Call SAISIE_CHAR(VALEUR,PARMSK,"ISELEMP","STKLOC","XWISELEMP") From GSAISIE
 [M:SSL1]WLOCSEQ(nolign-1) = val(PARMSK(1))
 [M:SSL1]LOCTYP(nolign-1) = PARMSK(9)
 VALEUR = PARMSK(10)
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B2_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONSSEA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSEA"
 PARMSK(1) = "1"
 PARMSK(2) = [M:SSL1]STOFCY
 PARMSK(3) = VALEUR
 PARMSK(4) = [M:SSL1]LOCTYP(nolign-1)
 PARMSK(5) = ""
 PARMSK(6) = "3"
 PARMSK(7) = "0"
 PARMSK(8) = string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
 PARMSK(9) = VALEUR
 Call CONSULT_CHAR(VALEUR,"SEA",PARMSK) From GCONSULT
 VALEUR = PARMSK(9)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_LOC(VALEUR)
Variable Char    VALEUR()
## Action CONSSED
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONSSED"
PARMSK(1) = "1"
PARMSK(2) = [M:SSL1]STOFCY
PARMSK(3) = [M:SSL1]ITMREF(nolign-1)
PARMSK(4) = [M:SSL1]ITMREF(nolign-1)
PARMSK(5) = "0"
PARMSK(6) = string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
PARMSK(7) = VALEUR
Call CONSULT_CHAR(VALEUR,"SED",PARMSK) From GCONSULT
VALEUR = PARMSK(7)
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_BPSLOT
Onevent BEFORE_INPUT Call AS_BPSLOT(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_BPSLOT From W2WT05RGP1
Return

Subprog AS_BPSLOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_BPSLOT(VALEUR) From TRTSSL
If mkstat=2
 [M]BPSLOT(INDIC) = VALEUR
 Affzo BPSLOT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASSAI
 Call PASSAI From TRTSSLA
 If mkstat=2
  [M]BPSLOT(INDIC) = VALEUR
  Affzo BPSLOT(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_BPSLOT(zc) From W2WT05RGP1
Endif
Gosub _AFF
End

$AMM_BPSLOT
Call AM_BPSLOT(zc)
If !mkstat & GOBJET
 zoncou = "BPSLOT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPSLOT(VALEUR)
Variable Char    VALEUR()
## Action STKAMLOF
Call STKAMLOF(VALEUR,"SSL1",nolign-1,[M:SSL1]ITMREF(nolign-1),[M:SSL1]STOFCY,[M:SSL1]BPSLOT(nolign-1),"LOT","SLO"
&,"LOCTYP",[M:SSL1]GESLOT(nolign-1)) From STKACT
If mkstat : GERR = 1 : GZONE = "BPSLOT" : GZNUM = 5115 : Endif
Gosub _AFF
End

Subprog S_BPSLOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELBPLN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELBPLN"
 PARMSK(1) = [M:SSL1]STOFCY
 PARMSK(2) = [M:SSL1]ITMREF(nolign-1)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELBPLN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOT
Onevent BEFORE_INPUT Call AS_LOT(zc) From W2WT05RGP1
Onevent CONTROL Call C_LOT(zc) From W2WT05RGP1
Onevent AFTER_AREA Call AP_LOT(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_LOT From W2WT05RGP1
Return

Subprog IB_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKIBLOT
 Call STKIBLOT(VALEUR,sigma(1,dim([M:SSL1]NBSLO)>0,[M:SSL1]NBSLO(nolign-1)),2,3,4) From STKACT
Endif
Gosub _AFF
End

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call IB_LOT(VALEUR)
## Action STD
Call AS_LOT(VALEUR) From TRTSSL
If mkstat=2
 [M]LOT(INDIC) = VALEUR
 Affzo LOT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASSAI
 Call PASSAI From TRTSSLA
 If mkstat=2
  [M]LOT(INDIC) = VALEUR
  Affzo LOT(INDIC) : mkstat = 2
 Endif
 Onkey 130 Titled GBOUT2 Call B2_LOT(zc) From W2WT05RGP1
 Onkey 131 Titled GBOUT3 Call B3_LOT(zc) From W2WT05RGP1
 Onkey 132 Titled GBOUT4 Call B4_LOT(zc) From W2WT05RGP1
 Onkey   2 Titled GBOUTS Call S_LOT(zc) From W2WT05RGP1
Endif
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKCTRLOT
Call STKCTRLOT(VALEUR,"SSL1",nolign-1,[M:SSL1]ITMREF(nolign-1),[M:SSL1]BPSLOT(nolign-1),[M:SSL1]VCRTYP(nolign-1),[M:SSL1]VCRNUM(nolign-1),[M:SSL1]VCRLIN(nolign-1)
&,[M:SSL1]VCRNUMORI(nolign-1),[M:SSL1]VCRTYPORI(nolign-1),[M:SSL1]VCRLINORI(nolign-1),0,[M:SSL1]STOFCY,"LOCTYP",[M:SSL1]GESLOT(nolign-1)) From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
If !mkstat
 ## Action STD
 Call C_LOT(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Endif
Gosub _AFF
End

Subprog AP_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKINIECC
Call STKINIECC([M:SSL1]ITMREF(nolign-1),VALEUR,"SSL1",2,2,nolign-1,2,func TRTX3FNC.VALFLD_C("[M]ECCVALMAJ(nolign-1)")
&,"ECCVALMAJ","ECCVALMIN","","",1,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Gosub _AFF
End

$AMM_LOT
Call AM_LOT(zc)
If !mkstat & GOBJET
 zoncou = "LOT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOT(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
If !mkstat
 ## Action STKAMLOT
 Call STKAMLOT(VALEUR,"SSL1",nolign-1,[M:SSL1]ITMREF(nolign-1),"SLO") From STKACT
 If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOT"
 PARMSK(1) = [M:SSL1]ITMREF(nolign-1)
 PARMSK(2) = [M:SSL1]STOFCY
 PARMSK(3) = "SSL1"
 PARMSK(4) = num$(nolign-1)
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELLOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B2_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action LOTNUMCPT
 Call LOTNUMCPT(VALEUR,[M:SSL1]STOFCY,[M:SSS1]IPTDAT(nolign-1),[M:SSL1]ITMREF(nolign-1)) From STKACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action LOTBLANC
 Call STKLOTBLAN(VALEUR) From STKACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKINFLOT
 Call INFOLOT("SSL1",nolign-1) From STKENT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_NBSLO
Onevent BEFORE_INPUT Call AS_NBSLO(zc) From W2WT05RGP1
Onevent CONTROL Call C_NBSLO(zc) From W2WT05RGP1
Return

Subprog AS_NBSLO(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NBSLO(VALEUR) From TRTSSL
If mkstat=2
 [M]NBSLO(INDIC) = VALEUR
 Affzo NBSLO(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASSAI
 Call PASSAI From TRTSSLA
 If mkstat=2
  [M]NBSLO(INDIC) = VALEUR
  Affzo NBSLO(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_NBSLO(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_NBSLO(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "NBSLO" : GZNUM = 4333 : Endif
Gosub _AFF
End

$ON_SLO
Onevent BEFORE_INPUT Call AS_SLO(zc) From W2WT05RGP1
Onevent CONTROL Call C_SLO(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_SLO From W2WT05RGP1
Return

Subprog AS_SLO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12420,GBOUT3) From OBJDIV
## Action STD
Call AS_SLO(VALEUR) From TRTSSL
If mkstat=2
 [M]SLO(INDIC) = VALEUR
 Affzo SLO(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASSAI
 Call PASSAI From TRTSSLA
 If mkstat=2
  [M]SLO(INDIC) = VALEUR
  Affzo SLO(INDIC) : mkstat = 2
 Endif
 Onkey 131 Titled GBOUT3 Call B3_SLO(zc) From W2WT05RGP1
Endif
Gosub _AFF
End

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SLO(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 18960 : Endif
Gosub _AFF
End

$AMM_SLO
Call AM_SLO(zc)
If !mkstat & GOBJET
 zoncou = "SLO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SLO(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 18960 : Endif
Gosub _AFF
End

Subprog B3_SLO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B3_SLO(VALEUR) From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ECCVALMIN
Return

$ON_ECCVALMINORI
Return

$ON_SERNUM
Onevent BEFORE_INPUT Call AS_SERNUM(zc) From W2WT05RGP1
Onevent CONTROL Call C_SERNUM(zc) From W2WT05RGP1
Onevent AFTER_CHANGE Gosub AMM_SERNUM From W2WT05RGP1
Return

Subprog AS_SERNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SERNUM(VALEUR) From TRTSSL
If mkstat=2
 [M]SERNUM(INDIC) = VALEUR
 Affzo SERNUM(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASSAI
 Call PASSAI From TRTSSLA
 If mkstat=2
  [M]SERNUM(INDIC) = VALEUR
  Affzo SERNUM(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSER
Call STKCTRSER(VALEUR,[M:SSL1]ITMREF(nolign-1),nolign-1,[M:SSL1]NBLIG,[M:SSL1]WSTOSEQ(nolign-1),[M:SSL1]TRSTYP(nolign-1),[M:SSL1]VCRTYP(nolign-1),[M:SSL1]VCRNUM(nolign-1)
&,[M:SSL1]VCRLIN(nolign-1),[M:SSL1]VCRTYPORI(nolign-1),[M:SSL1]VCRNUMORI(nolign-1),[M:SSL1]VCRLINORI(nolign-1),0,0,"") From STKACT
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 3206 : Endif
Gosub _AFF
End

$AMM_SERNUM
Call AM_SERNUM(zc)
If !mkstat & GOBJET
 zoncou = "SERNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SERNUM(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 3206 : Endif
Gosub _AFF
End

$ON_PALNUM
Onevent BEFORE_INPUT Call AS_PALNUM(zc) From W2WT05RGP1
Return

Subprog AS_PALNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]PALNUM(INDIC) = VALEUR
 Affzo PALNUM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_CTRNUM
Onevent BEFORE_INPUT Call AS_CTRNUM(zc) From W2WT05RGP1
Return

Subprog AS_CTRNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]CTRNUM(INDIC) = VALEUR
 Affzo CTRNUM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_MVTDES
Onevent BEFORE_INPUT Call AS_MVTDES(zc) From W2WT05RGP1
Return

Subprog AS_MVTDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAI
Call PASSAI From TRTSSLA
If mkstat=2
 [M]MVTDES(INDIC) = VALEUR
 Affzo MVTDES(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_PJT
Return

$ON_WFLG
Onevent INIT_AREA Call D_WFLG(zc) From W2WT05RGP1
Return

Subprog D_WFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]WFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_COCHAGE_AV
Onevent INIT_AREA Call D_COCHAGE_AV(zc) From W2WT05RGP1
Return

Subprog D_COCHAGE_AV(VALEUR)
Variable Integer VALEUR
If varinit([M]COCHAGE_AV,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP
Onevent INIT_AREA Call D_TRSTYP(zc) From W2WT05RGP1
Return

Subprog D_TRSTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRTYPORI
Onevent INIT_AREA Call D_VCRTYPORI(zc) From W2WT05RGP1
Return

Subprog D_VCRTYPORI(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMORI
Return

$ON_TRSCOD
Onevent INIT_AREA Call D_TRSCOD(zc) From W2WT05RGP1
Return

Subprog D_TRSCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSCOD,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"14","") From SUBADI
Endif
Gosub _AFF
End

$ON_MODFLG
Onevent INIT_AREA Call D_MODFLG(zc) From W2WT05RGP1
Return

Subprog D_MODFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MODFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPRNUM
Return

$ON_BETCPY
Onevent INIT_AREA Call D_BETCPY(zc) From W2WT05RGP1
Return

Subprog D_BETCPY(VALEUR)
Variable Integer VALEUR
If varinit([M]BETCPY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QUAFLG
Onevent INIT_AREA Call D_QUAFLG(zc) From W2WT05RGP1
Return

Subprog D_QUAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]QUAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


