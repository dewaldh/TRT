#<AdxTL>@(#)0.0.0.0 $Revision$Class Account core model
# Supervisor
## ACLA-CLASSE ## GACM
# 2018-08-27 12:32:44 782


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : GCM Account core model ( Field GCM 3)
####################################################################

$SET_GCM
If [L]_AOLDVAL<>this.GCM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GCM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GCM
 Gosub PROPAGATE_GCM
Endif
Return

$INIT_GCM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "GCM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_GCM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "GCM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GCM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GCM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GCM
[L]CURPRO = "GCM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.GCM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GCM
[L]CURPRO = "GCM"
If vireblc(this.GCM,2)<>vireblc(format$("K:3c",this.GCM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_GCM
[L]CURPRO = "GCM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GCM
[L]CURPRO = "GCM"
Return

$PROPAGATE_GCM
this.isReadonly = 0
[L]CURPRO = "GCM"
Gosub _LNKPRO_GCM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GCM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "GCM"
$_LNKPRO_GCM
If vireblc(this.GCM,2)<>""
 # Link GACM
 Local File GACM [WGCM]
 Read [F:WGCM]GCM0 = this.GCM
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACM" & ZONE="SHOTRA" & IDENT1=[F:WGCM]GCM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("GCM","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACM" & ZONE="DESTRA" & IDENT1=[F:WGCM]GCM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("GCM","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGCM]
Endif
Return

$_ALOADATTRIBUTE_GCM
[L]ASTATUS = fmet this.ASETATTRIBUTE("GCM","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field DES 30)
####################################################################

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(this.DES,2)<>vireblc(format$("K:30X",this.DES),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : DESSHO Short description ( Field SHO 10)
####################################################################

$SET_DESSHO
If [L]_AOLDVAL<>this.DESSHO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESSHO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESSHO
 Gosub PROPAGATE_DESSHO
Endif
Return

$INIT_DESSHO
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESSHO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESSHO
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESSHO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESSHO
[L]CURPRO = "DESSHO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESSHO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESSHO
[L]CURPRO = "DESSHO"
If vireblc(this.DESSHO,2)<>vireblc(format$("K:10X",this.DESSHO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESSHO
[L]CURPRO = "DESSHO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESSHO
[L]CURPRO = "DESSHO"
Return

$PROPAGATE_DESSHO
this.isReadonly = 0
[L]CURPRO = "DESSHO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESSHO
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESSHO"
$_LNKPRO_DESSHO
Return


####################################################################
# 4 : DESTRA Description ( Field AX3)
####################################################################

$GET_DESTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESTRA"
this.DESTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESTRA
If [L]_AOLDVAL<>this.DESTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESTRA
 Gosub PROPAGATE_DESTRA
Endif
Return

$INIT_DESTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESTRA
[L]CURPRO = "DESTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESTRA
[L]CURPRO = "DESTRA"
If vireblc(fmet this.AGETTEXTRA("DESTRA"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESTRA
[L]CURPRO = "DESTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESTRA
[L]CURPRO = "DESTRA"
Return

$PROPAGATE_DESTRA
this.isReadonly = 0
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "DESTRA"
$_LNKPRO_DESTRA
Return


####################################################################
# 5 : SHOTRA Short description ( Field AX1)
####################################################################

$GET_SHOTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "SHOTRA"
this.SHOTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SHOTRA
If [L]_AOLDVAL<>this.SHOTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHOTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHOTRA
 Gosub PROPAGATE_SHOTRA
Endif
Return

$INIT_SHOTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "SHOTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHOTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHOTRA
[L]CURPRO = "SHOTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHOTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHOTRA
[L]CURPRO = "SHOTRA"
If vireblc(fmet this.AGETTEXTRA("SHOTRA"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("SHOTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SHOTRA
[L]CURPRO = "SHOTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHOTRA
[L]CURPRO = "SHOTRA"
Return

$PROPAGATE_SHOTRA
this.isReadonly = 0
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.SHOTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHOTRA
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "SHOTRA"
$_LNKPRO_SHOTRA
Return


####################################################################
# 6 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 8 : GENLEDTYP Ledger type ( Field Local menu number 2644)
####################################################################

$SET_GENLEDTYP
If [L]_AOLDVAL<>this.GENLEDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GENLEDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GENLEDTYP
 Gosub PROPAGATE_GENLEDTYP
Endif
Return

$INIT_GENLEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "GENLEDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GENLEDTYP=0 and fmet this.AGETATTRIBUTE("GENLEDTYP","$isMandatory")="true"
 this.GENLEDTYP = 1
Endif
Return
 
$CONTROL_GENLEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "GENLEDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GENLEDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GENLEDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GENLEDTYP
[L]CURPRO = "GENLEDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GENLEDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GENLEDTYP
[L]CURPRO = "GENLEDTYP"
If this.GENLEDTYP<0 or this.GENLEDTYP>len(mess(0,2644,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2644 ->"-num$(this.GENLEDTYP)-mess(99,123,1)):  Return : # Local menu "2644 -> Invalid option
Endif
Return

$_AOTHERS_GENLEDTYP
[L]CURPRO = "GENLEDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GENLEDTYP
[L]CURPRO = "GENLEDTYP"
Return

$PROPAGATE_GENLEDTYP
this.isReadonly = 0
[L]CURPRO = "GENLEDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GENLEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "GENLEDTYP"
$_LNKPRO_GENLEDTYP
Return


####################################################################
# 9 : ANALEDTYP Main analytical ledger type ( Field Local menu number 2644)
####################################################################

$SET_ANALEDTYP
If [L]_AOLDVAL<>this.ANALEDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ANALEDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ANALEDTYP
 Gosub PROPAGATE_ANALEDTYP
Endif
Return

$INIT_ANALEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "ANALEDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ANALEDTYP=0 and fmet this.AGETATTRIBUTE("ANALEDTYP","$isMandatory")="true"
 this.ANALEDTYP = 1
Endif
Return
 
$CONTROL_ANALEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "ANALEDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ANALEDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ANALEDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ANALEDTYP
[L]CURPRO = "ANALEDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ANALEDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ANALEDTYP
[L]CURPRO = "ANALEDTYP"
If this.ANALEDTYP<0 or this.ANALEDTYP>len(mess(0,2644,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2644 ->"-num$(this.ANALEDTYP)-mess(99,123,1)):  Return : # Local menu "2644 -> Invalid option
Endif
Return

$_AOTHERS_ANALEDTYP
[L]CURPRO = "ANALEDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ANALEDTYP
[L]CURPRO = "ANALEDTYP"
Return

$PROPAGATE_ANALEDTYP
this.isReadonly = 0
[L]CURPRO = "ANALEDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ANALEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "ANALEDTYP"
$_LNKPRO_ANALEDTYP
Return


####################################################################
# 10 : FLGIAS IAS management ( Field Local menu number 1)
####################################################################

$SET_FLGIAS
If [L]_AOLDVAL<>this.FLGIAS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGIAS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGIAS
 Gosub PROPAGATE_FLGIAS
Endif
Return

$INIT_FLGIAS
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "FLGIAS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGIAS=0 and fmet this.AGETATTRIBUTE("FLGIAS","$isMandatory")="true"
 this.FLGIAS = 1
Endif
Return
 
$CONTROL_FLGIAS
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "FLGIAS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGIAS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGIAS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGIAS
[L]CURPRO = "FLGIAS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGIAS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGIAS
[L]CURPRO = "FLGIAS"
If this.FLGIAS<0 or this.FLGIAS>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGIAS)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGIAS
[L]CURPRO = "FLGIAS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGIAS
[L]CURPRO = "FLGIAS"
Return

$PROPAGATE_FLGIAS
this.isReadonly = 0
[L]CURPRO = "FLGIAS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGIAS
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "FLGIAS"
$_LNKPRO_FLGIAS
Return


####################################################################
# 11 : IASLEDTYP Ledger type ( Field Local menu number 2644)
####################################################################

$SET_IASLEDTYP
If [L]_AOLDVAL<>this.IASLEDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IASLEDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IASLEDTYP
 Gosub PROPAGATE_IASLEDTYP
Endif
Return

$INIT_IASLEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "IASLEDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IASLEDTYP=0 and fmet this.AGETATTRIBUTE("IASLEDTYP","$isMandatory")="true"
 this.IASLEDTYP = 1
Endif
Return
 
$CONTROL_IASLEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "IASLEDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IASLEDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IASLEDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IASLEDTYP
[L]CURPRO = "IASLEDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IASLEDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IASLEDTYP
[L]CURPRO = "IASLEDTYP"
If this.IASLEDTYP<0 or this.IASLEDTYP>len(mess(0,2644,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2644 ->"-num$(this.IASLEDTYP)-mess(99,123,1)):  Return : # Local menu "2644 -> Invalid option
Endif
Return

$_AOTHERS_IASLEDTYP
[L]CURPRO = "IASLEDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IASLEDTYP
[L]CURPRO = "IASLEDTYP"
Return

$PROPAGATE_IASLEDTYP
this.isReadonly = 0
[L]CURPRO = "IASLEDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IASLEDTYP
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "IASLEDTYP"
$_LNKPRO_IASLEDTYP
Return


####################################################################
# 12 : NBRCTL No. of controls ( Field C 2)
####################################################################

$SET_NBRCTL
If [L]_AOLDVAL<>this.NBRCTL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBRCTL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBRCTL
 Gosub PROPAGATE_NBRCTL
Endif
Return

$INIT_NBRCTL
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "NBRCTL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBRCTL
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "NBRCTL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBRCTL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBRCTL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBRCTL
[L]CURPRO = "NBRCTL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBRCTL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBRCTL
[L]CURPRO = "NBRCTL"
Return

$_AOTHERS_NBRCTL
[L]CURPRO = "NBRCTL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBRCTL
[L]CURPRO = "NBRCTL"
Return

$PROPAGATE_NBRCTL
this.isReadonly = 0
[L]CURPRO = "NBRCTL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBRCTL
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "NBRCTL"
$_LNKPRO_NBRCTL
Return


####################################################################
# 14 : UPDTIM Time ( Field L 8)
####################################################################

$SET_UPDTIM
If [L]_AOLDVAL<>this.UPDTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDTIM
 Gosub PROPAGATE_UPDTIM
Endif
Return

$INIT_UPDTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDTIM
[L]CURPRO = "UPDTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDTIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$_AOTHERS_UPDTIM
[L]CURPRO = "UPDTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$PROPAGATE_UPDTIM
this.isReadonly = 0
[L]CURPRO = "UPDTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDTIM"
$_LNKPRO_UPDTIM
Return


####################################################################
# 15 : CRETIM Time ( Field L 8)
####################################################################

$SET_CRETIM
If [L]_AOLDVAL<>this.CRETIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRETIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRETIM
 Gosub PROPAGATE_CRETIM
Endif
Return

$INIT_CRETIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CRETIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CRETIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CRETIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRETIM
[L]CURPRO = "CRETIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRETIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRETIM
[L]CURPRO = "CRETIM"
Return

$_AOTHERS_CRETIM
[L]CURPRO = "CRETIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRETIM
[L]CURPRO = "CRETIM"
Return

$PROPAGATE_CRETIM
this.isReadonly = 0
[L]CURPRO = "CRETIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRETIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CRETIM"
$_LNKPRO_CRETIM
Return


####################################################################
# 16 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 17 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 18 : UPDUSR Change user ( Field A 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
Return


####################################################################
# 19 : CREUSR Creation user ( Field A 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
Return


####################################################################
# 20 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return


####################################################################
# 21 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 22 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 23 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0GACM
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return




