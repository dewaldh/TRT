#<AdxTL>@(#)0.0.0.0 $Revision$Class Camt element mapping
# Supervisor
## CRUD-CLASSE ## BSIELTMAP
# 2018-08-27 13:07:32 357


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSIELTMAP,ASTATUS)
Variable Instance BSIELTMAP Using R_BSIELTMAP
Variable Integer ASTATUS

If BSIELTMAP = null : End : Endif

Gosub AVARIABLES From WMR00BSIELTMAP
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSIELTMAP
Else
 Gosub AUPDATE_BSIELTMAP
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSIELTMAP.freeSnapshot
BSIELTMAP.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
BSIELTMAP.ASTALIN = [V]CST_AUPD
BSIELTMAP.BSIELT.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = BSIELTMAP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSIELTMAP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIELTMAP._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIELTMAP._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIELTMAP._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSIELTMAP.BSIELT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIELTMAP.BSIELT.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSIELTMAP.BSIELT.ASTALIN)<>""
 [L]A_ASTALIN = BSIELTMAP.BSIELT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES) : # BSIELTMAPD -- 2
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
& and BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN<>[V]CST_ANEW & BSIELTMAP.BSIELT.ASTALIN=[V]CST_ADEL
   BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN=[V]CST_ANEW & find(BSIELTMAP.BSIELT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES) : # BSIELTMAPD -- 2
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
& and BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(BSIELTMAP.BSIELT.ASTALIN)<>""
 [L]A_ASTALIN = BSIELTMAP.BSIELT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSIELTMAP
Trbegin [F:BSIELT]
 Gosub AUPDATE_BSIELTMAP
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSIELTMAP.BSIELT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIELTMAP.BSIELT.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES)
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
  If BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSIELTMAP.BSIELT.LINES(A_N2)
   BSIELTMAP.BSIELT.LINES(A_N2) = null
  Elsif BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_BSIELTMAP
[L]A_ASTALIN = BSIELTMAP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSIELTMAP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If BSIELTMAP.snapshotEnabled=1
 [L]A_RETIK = BSIELTMAP.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES)
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
  If BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet BSIELTMAP.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



