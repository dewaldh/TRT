#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management RECHACT 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:10:34"
A_USER  = "ADMIN"
A_STAMP = "20180828001034"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask RECHACT [DIA]
Gosub HORODAT
Local Inpbox "RECHACT" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]10
Grizo [DIA]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=37 : X2(0)=76 : Y1(0)=5 : Y2(0)=6
X1(1)=37 : X2(1)=76 : Y1(1)=7 : Y2(1)=23
Return

$ON_ACTIV
Onevent CONTROL Call C_ACTIV(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ACTIV(zc) From W1RECHACT
Return

Subprog AS_ACTIV(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ACTIV(zc) From W1RECHACT
Gosub _AFF
End

Subprog C_ACTIV(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ACTIV" : GZNUM = 4 : Endif
If !GWEBSERV
 If !mkstat
  ## Action CONTOBJW
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "CONTOBJW"
  PARMSK(1) = "ACV"
  Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJW","CONTOBJ","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "ACTIV" : GZNUM = 4 : Endif
 Endif
Endif
If !mkstat
 ## Action STD
 Call C_ACTIV(VALEUR) From RECHACT
 If mkstat : GERR = 1 : GZONE = "ACTIV" : GZNUM = 4 : Endif
Endif
Gosub _AFF
End

Subprog S_ACTIV(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJW"
 PARMSK(1) = "ACV"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ATB
Onevent INIT_AREA Call D_ATB(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ATB(zc) From W1RECHACT
Return

Subprog D_ATB(VALEUR)
Variable Integer VALEUR
If varinit([M]ATB,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ATB(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AMK
Onevent INIT_AREA Call D_AMK(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AMK(zc) From W1RECHACT
Return

Subprog D_AMK(VALEUR)
Variable Integer VALEUR
If varinit([M]AMK,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AMK(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AWI
Onevent INIT_AREA Call D_AWI(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AWI(zc) From W1RECHACT
Return

Subprog D_AWI(VALEUR)
Variable Integer VALEUR
If varinit([M]AWI,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AWI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AOB
Onevent INIT_AREA Call D_AOB(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AOB(zc) From W1RECHACT
Return

Subprog D_AOB(VALEUR)
Variable Integer VALEUR
If varinit([M]AOB,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AOB(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ATY
Onevent INIT_AREA Call D_ATY(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ATY(zc) From W1RECHACT
Return

Subprog D_ATY(VALEUR)
Variable Integer VALEUR
If varinit([M]ATY,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ATY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ACT
Onevent INIT_AREA Call D_ACT(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ACT(zc) From W1RECHACT
Return

Subprog D_ACT(VALEUR)
Variable Integer VALEUR
If varinit([M]ACT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ACT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AFC
Onevent INIT_AREA Call D_AFC(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AFC(zc) From W1RECHACT
Return

Subprog D_AFC(VALEUR)
Variable Integer VALEUR
If varinit([M]AFC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AFC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ARP
Onevent INIT_AREA Call D_ARP(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ARP(zc) From W1RECHACT
Return

Subprog D_ARP(VALEUR)
Variable Integer VALEUR
If varinit([M]ARP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ARP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ADI
Onevent INIT_AREA Call D_ADI(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ADI(zc) From W1RECHACT
Return

Subprog D_ADI(VALEUR)
Variable Integer VALEUR
If varinit([M]ADI,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ADI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AML
Onevent INIT_AREA Call D_AML(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AML(zc) From W1RECHACT
Return

Subprog D_AML(VALEUR)
Variable Integer VALEUR
If varinit([M]AML,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AML(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AMA
Onevent INIT_AREA Call D_AMA(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AMA(zc) From W1RECHACT
Return

Subprog D_AMA(VALEUR)
Variable Integer VALEUR
If varinit([M]AMA,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AMA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AEP
Onevent INIT_AREA Call D_AEP(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AEP(zc) From W1RECHACT
Return

Subprog D_AEP(VALEUR)
Variable Integer VALEUR
If varinit([M]AEP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AEP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ADP
Onevent INIT_AREA Call D_ADP(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ADP(zc) From W1RECHACT
Return

Subprog D_ADP(VALEUR)
Variable Integer VALEUR
If varinit([M]ADP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ADP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ACLA
Onevent INIT_AREA Call D_ACLA(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ACLA(zc) From W1RECHACT
Return

Subprog D_ACLA(VALEUR)
Variable Integer VALEUR
If varinit([M]ACLA,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ACLA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ASW
Onevent INIT_AREA Call D_ASW(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_ASW(zc) From W1RECHACT
Return

Subprog D_ASW(VALEUR)
Variable Integer VALEUR
If varinit([M]ASW,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ASW(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AUT
Onevent INIT_AREA Call D_AUT(zc) From W1RECHACT
Onevent BEFORE_INPUT Call AS_AUT(zc) From W1RECHACT
Return

Subprog D_AUT(VALEUR)
Variable Integer VALEUR
If varinit([M]AUT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AUT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


