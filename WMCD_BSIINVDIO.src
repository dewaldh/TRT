#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoice number definition
# Supervisor
## CRUD-CLASSE ## BSIINVDIO
# 2018-08-27 12:27:12 808


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(BSIINVDIO,ASTATUS)
Variable Instance BSIINVDIO Using C_BSIINVDIO
Variable Integer ASTATUS

If BSIINVDIO = null : End : Endif

Gosub _AVARIABLES From WMC00BSIINVDIO

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_BSIINVDIO

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(BSIINVDIO,ASTATUS)
Variable Instance BSIINVDIO Using C_BSIINVDIO
Variable Integer ASTATUS

If BSIINVDIO = null : End : Endif

Gosub AVARIABLES From WMC00BSIINVDIO
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_BSIINVDIO
Else
 Gosub ADELETE_BSIINVDIO
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(BSIINVDIO,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If BSIINVDIO.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIINVDIO.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSIINVDIO.LINES) : # BSIINVDIOD -- 2
 If BSIINVDIO.LINES(A_N2) <> null
& and BSIINVDIO.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSIINVDIO.LINES(A_N2).ASTALIN<>[V]CST_ANEW
   BSIINVDIO.LINES(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(BSIINVDIO.LINES) : # BSIINVDIOD -- 2
 If BSIINVDIO.LINES(A_N2) <> null
& and BSIINVDIO.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_BSIINVDIO
Trbegin [F:BSIIND]
 Gosub ADELETE_BSIINVDIO
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_BSIINVDIO
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(BSIINVDIO.LINES)
 If BSIINVDIO.LINES(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ACTION("ADELETE_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  BSIINVDIO.LINES(A_N2).ASTALIN=[V]CST_ADEL
  [L]ASTATUS = func WMC00BSIINVDIO._MAJSQL_BSIINVDIOD(BSIINVDIO.LINES(A_N2))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ACTION("ADELETE_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(BSIINVDIO,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00BSIINVDIO._MAJSQL_BSIINVDIO(BSIINVDIO))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If BSIINVDIO.snapshotEnabled=1
 [L]A_RETIK = BSIINVDIO.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIINVDIO.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



