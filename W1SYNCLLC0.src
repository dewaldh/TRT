#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SYNCLLC0 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:47"
A_USER  = "ADMIN"
A_STAMP = "20180828001547"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SYNCLLC0 [DIA]
Gosub HORODAT
Local Inpbox "SYNCLLC0" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=29 : X2(0)=84 : Y1(0)=12 : Y2(0)=16
Return

$ON_TOUTES
Onevent AFTER_CHANGE Gosub AMM_TOUTES From W1SYNCLLC0
Onevent INIT_AREA Call D_TOUTES(zc) From W1SYNCLLC0
Onevent BEFORE_INPUT Call AS_TOUTES(zc) From W1SYNCLLC0
Return

Subprog D_TOUTES(VALEUR)
Variable Integer VALEUR
If varinit([M]TOUTES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TOUTES(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_TOUTES
Call AM_TOUTES(zc)
If !mkstat & GOBJET
 zoncou = "TOUTES" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TOUTES(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TOUTES(VALEUR) From SYNCLLC
If mkstat : GERR = 1 : GZONE = "TOUTES" : GZNUM = 29351 : Endif
Gosub _AFF
End

$ON_LLCTYP
Onevent INIT_AREA Call D_LLCTYP(zc) From W1SYNCLLC0
Onevent BEFORE_INPUT Call AS_LLCTYP(zc) From W1SYNCLLC0
Return

Subprog D_LLCTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]LLCTYP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_LLCTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BOMALT
Onevent CONTROL Call C_BOMALT(zc) From W1SYNCLLC0
Onevent BEFORE_INPUT Call AS_BOMALT(zc) From W1SYNCLLC0
Onevent AFTER_CHANGE Gosub AMM_BOMALT From W1SYNCLLC0
Return

Subprog AS_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3570,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BOMALT(zc) From W1SYNCLLC0
Onkey   2 Titled GBOUTS Call S_BOMALT(zc) From W1SYNCLLC0
Onkey 144 Titled GBOUTP Call P_BOMALT(zc) From W1SYNCLLC0
Gosub _AFF
End

Subprog C_BOMALT(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TBO","!",VALEUR,num$([M]LLCTYP),mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "BOMALT" : GZNUM = 4258 : Endif
If !mkstat
 ## Action STD
 Call C_BOMALT(VALEUR) From SYNCLLC
 If mkstat : GERR = 1 : GZONE = "BOMALT" : GZNUM = 4258 : Endif
Endif
Gosub _AFF
End

$AMM_BOMALT
Call AM_BOMALT(zc)
If !mkstat & GOBJET
 zoncou = "BOMALT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMALT(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZBOMALT)")>indice
 [M]BOMALT(indice) = VALEUR
 Affzo ZBOMALT(indice)
Endif
Gosub _AFF
End

Subprog S_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TBO"
PARMSK(2) = "!"
PARMSK(3) = num$([M]LLCTYP)
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TBO",VALCHAR,num$([M]LLCTYP)) From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = num$([M]LLCTYP)
Call VISU("TBO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBOMALT
Onevent BEFORE_AREA Gosub AV_ZBOMALT From W1SYNCLLC0
Return

$AV_ZBOMALT
Call LECTEXTRA(zc,"TABBOMALT","TBODESAXX",num$([M]LLCTYP),num$([M]BOMALT(indice))) From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Return


