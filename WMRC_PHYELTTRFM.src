#<AdxTL>@(#)0.0.0.0 $Revision$Class Physical asset transfer
# Supervisor
## CRUD-CLASSE ## PHYELTTRFM
# 2018-08-27 13:22:40 680


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(PHYELTTRFM,ASTATUS)
Variable Instance PHYELTTRFM Using R_PHYELTTRFM
Variable Integer ASTATUS

If PHYELTTRFM = null : End : Endif

Gosub AVARIABLES From WMR00PHYELTTRFM
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet PHYELTTRFM.ACTX.AGETAFCRIGHT(PHYELTTRFM,"GESPHY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet PHYELTTRFM.ACTX.AGETAFCRIGHTC(PHYELTTRFM,"GESPHY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_PHYELTTRFM
Else
 Gosub AINSERT_PHYELTTRFM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = PHYELTTRFM.freeSnapshot
PHYELTTRFM.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
PHYELTTRFM.ASTALIN = [V]CST_ANEW
PHYELTTRFM.PHYTRF.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PHYELTTRFM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PHYELTTRFM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PHYELTTRFM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If PHYELTTRFM.PHYTRF.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PHYELTTRFM.PHYTRF.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.PHYTRF.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PHYELTTRFM.PHYTRF.PHYMVT) : # PHYMVT -- 2
 If PHYELTTRFM.PHYTRF.PHYMVT(A_N2) <> null
& and !find(PHYELTTRFM.PHYTRF.PHYMVT(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.PHYTRF.PHYMVT(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(PHYELTTRFM.PHYTRF.PHYMVT) : # PHYMVT -- 2
 If PHYELTTRFM.PHYTRF.PHYMVT(A_N2) <> null
& and !find(PHYELTTRFM.PHYTRF.PHYMVT(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.PHYTRF.PHYMVT(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.PHYTRF.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_PHYELTTRFM
Trbegin [F:PHY]
 Gosub AINSERT_PHYELTTRFM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(PHYELTTRFM.PHYTRF.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PHYELTTRFM.PHYTRF.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PHYELTTRFM.PHYTRF.PHYMVT)
 If PHYELTTRFM.PHYTRF.PHYMVT(A_N2) <> null
  [L]ASTATUS2 = fmet PHYELTTRFM.PHYTRF.PHYMVT(A_N2)._AINSERT_AFTER
  If PHYELTTRFM.PHYTRF.PHYMVT(A_N2).ASTALIN=[V]CST_ADEL or PHYELTTRFM.PHYTRF.PHYMVT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PHYELTTRFM.PHYTRF.PHYMVT(A_N2)
   PHYELTTRFM.PHYTRF.PHYMVT(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_PHYELTTRFM
[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.PHYTRF._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRFM.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If PHYELTTRFM.snapshotEnabled=1
 [L]A_RETIK = PHYELTTRFM.revertUpdTick
Endif
[L]ASTATUS = max(fmet PHYELTTRFM.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



