#<AdxTL>@(#)0.0.0.0 $Revision$Class Search term list
# Supervisor
## CRUD-CLASSE ## BSISEALISDUP
# 2018-08-27 12:27:37 036


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(BSISEALISDUP,ASTATUS)
Variable Instance BSISEALISDUP Using C_BSISEALISDUP
Variable Integer ASTATUS

If BSISEALISDUP = null : End : Endif

Gosub _AVARIABLES From WMC00BSISEALISDUP

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_BSISEALISDUP

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BSISEALISDUP,ASTATUS)
Variable Instance BSISEALISDUP Using C_BSISEALISDUP
Variable Integer ASTATUS

If BSISEALISDUP = null : End : Endif

Gosub AVARIABLES From WMC00BSISEALISDUP
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BSISEALISDUP
Else
 Gosub AINSERT_BSISEALISDUP
Endif

Gosub _AINSERT_AFTER
[L]A_I = BSISEALISDUP.freeSnapshot
BSISEALISDUP.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALISDUP._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALISDUP._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALISDUP._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BSISEALISDUP.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISEALISDUP.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALISDUP.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALISDUP.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BSISEALISDUP
Gosub AINSERT_BSISEALISDUP
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_BSISEALISDUP
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALISDUP.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALISDUP.ACTION("AINSERT"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALISDUP.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
$_AINSERT_ABORT
If BSISEALISDUP.snapshotEnabled=1
 [L]A_RETIK = BSISEALISDUP.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSISEALISDUP.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BSISEALISDUP.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSISEALISDUP.ASTALIN = [V]CST_ALL
Endif
Return



