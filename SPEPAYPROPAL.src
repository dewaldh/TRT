#<AdxTL>@(#)0.0.0.0 $Revision$
#######################################################################################################
# FILE NAME   : SPEPAYPROPAL
# DESCRIPTION : This process uses for Payment Proposal customization
# COMPANY     : Leverage Technologies (MZ)
#-------------------------------------------------------------------------------------------------------
# Detail
#
# DFCX1-56
# 001   Majid     06-08-2018      Adding Supplier stat group 1 to the filter of Payment proposal Open item
# 002   Majid     07/08/2018      Transfer BPAY reference from Invoice to Payment on Pay-proposal
# DFCX1-56
#
#######################################################################################################

$ACTION

Case ACTION
  When "FILTRE"               :    Gosub FILTRE
  When "CREPYH"               :    Gosub CREPYH
  When Default
Endcase
Return

######################################################################################
##
$DEBUT

# 001
If func AFNC.ACTIV("YAPPP")
 [M:DI1]YALLTSS1=2    :   Grizo [M:DI1]YTSS1DEB, YTSS1FIN
 [M:DI1]ALLTPY = 1
Endif

Return


######################################################################################
##
$FILTRE

If func AFNC.ACTIV("YAPPP")

  [L]CRITSPE = "1=1"
# Filter Supplier group

  Local Integer YNO_BPR, BPR_END
  # Attention: This value should be same as dimension value of YBPR field on the PAYPROP1 screen
  # There is a limitation on the size of value that "find" can search on that
  BPR_END = 1250
  Local Char BPR_LIST(30)(BPR_END)

  If [M:DI1]YALLTSS1 = 1
    Local Char REQUEST(255)(2)
    REQUEST(0) = "SELECT DISTINCT BPSNUM_0 FROM BPSUPPLIER WHERE TSSCOD_0>='" + [M:DI1]YTSS1DEB + "' AND TSSCOD_0<='" + [M:DI1]YTSS1FIN + "' "
    REQUEST(1) = "AND BPSNUM_0 IN (SELECT DISTINCT BPR_0 FROM GACCDUDATE WHERE AMTCUR_0>PAYCUR_0)"

    YNO_BPR = 0
    For (Char YBPR(30))From "5" Sql REQUEST As [LNK]
      [M:DI1]YBPR(YNO_BPR) = [F:LNK]YBPR
      YNO_BPR += 1

      If YNO_BPR+1 >= BPR_END
        Call ECR_TRACE("Number of Supplier in the group range is more than" - num$(BPR_END) - "Please use small range", 1) From GESECRAN
        Break
      Endif
    Next

    # There is a limitation on the size of list that "find" can search and it does not work for long list
    #[L]CRITSPE -= "and find([F]BPR,[M:DI1]YBPR(0..YNO_BPR-1))>0"
    #[L]CRITSPE -= "and (find([F]BPR,[M:DI1]YBPR(0..999))>0+find([F]BPR,[M:DI1]YBPR(1000..2000))>0)"
    [L]CRITSPE -= "and find([F]BPR,[M:DI1]YBPR(0..YNO_BPR-1))>0"

  Endif

# MZ Find does not work for list of value more than 1000
#  Local Char REQUEST(255)(2)
#  Local Integer YNO_INV, INV_END
#  INV_END = 10000   # Attention: This value should be same as dimension value of YNUM field on the PAYPROP1 screen
#  Local Char INV_LIST(30)(INV_END)
#
#  If [M:DI1]ALLTYPBPR=1 and [M:DI1]TYPBPR = 2     # just Supplier
#    [L]CRITSPE -= "and [F]YPAYBANK='"+[M:DI2]BAN+"'"
#
#    REQUEST(0) = "SELECT DISTINCT PIH.NUM_0 FROM GACCDUDATE DUD INNER JOIN PINVOICE PIH ON DUD.NUM_0=PIH.NUM_0 WHERE DUD.AMTCUR_0-DUD.PAYCUR_0>0 "
#    REQUEST(1) = "AND DUD.CPY_0='"+ [M:DIA]CPY +"' AND PIH.YPAYBANK_0='"+ [M:DI2]BAN +"'"
#
#    YNO_INV = 0
#    For (Char YNUM(30))From "5" Sql REQUEST As [LNK]
#      [M:DI1]YNUM(YNO_INV) = [F:LNK]YNUM
#      YNO_INV += 1
#
#      If YNO_INV+1 >= INV_END
#        Call ECR_TRACE("Number of Invoices for that bank is more than" - num$(INV_END) - "Please contact system admin", 1) From GESECRAN
#        Break
#      Endif
#    Next
#  Else
#
#
#    REQUEST(0) = "SELECT DISTINCT PIH.NUM_0 FROM GACCDUDATE DUD INNER JOIN PINVOICE PIH ON DUD.NUM_0=PIH.NUM_0 WHERE DUD.AMTCUR_0-DUD.PAYCUR_0>0 "
#    REQUEST(1) = "AND DUD.CPY_0='"+ [M:DIA]CPY +"' AND PIH.YPAYBANK_0='"+ [M:DI2]BAN +"' OR PIH.YPAYBANK_0 is null"
#
#    For (Char YNUM(30))From "5" Sql REQUEST As [LNK]
#      [M:DI1]YNUM(YNO_INV) = [F:LNK]YNUM
#      YNO_INV += 1
#
#      If YNO_INV+1 > INV_END
#        Call ECR_TRACE("Number of Invoices for that bank is more than" - num$(INV_END) - "Please contact system admin", 1) From GESECRAN
#        Break
#      Endif
#
#    Next
#  Endif
#
#  # Working
#  #[L]CRITSPE -= "and find([F]NUM,[M:DI1]YNUM(1..1000))>0"
#  #[L]CRITSPE -= "and find([F]NUM,[M:DI1]YNUM(1000..YNO_INV-1))>0"
#  #[L]CRITSPE -= "and (find([F]NUM,[M:DI1]YNUM(0..999))>0+find([F]NUM,[M:DI1]YNUM(1000..1010)))>0"
#
#  # Not working
#  #[L]CRITSPE -= "and find([F]NUM,[M:DI1]YNUM(0..YNO_INV-1))>0"
#  #[L]CRITSPE -= "and (find([F]NUM,[M:DI1]YNUM(0..999))>0+find([F]NUM,[M:DI1]YNUM(1000..1100)))>0"
#

# Filter Bank
  [L]CRITSPE -= "and ([F]YPAYBANK='"+[M:DI2]BAN+"' or [F]YPAYBANK='')"

Endif

Return

######################################################################################
##
$CREPYH

# 002
If func AFNC.ACTIV("YAPPP")

  Read [F:PYL]PYL0 = [F:PYL]COD
  [F:PYL]DES = [M:DIA]YDES
  Rewrite [F:PYL]

  If !clalev([F:YPIH])       :   Local File PINVOICE [YPIH]      :   Endif
  Read [F:YPIH]PIH0 = [F:DUD]NUM
  If !fstat and [F:YPIH]YBPAYREF <> ''
    [F:PYH]REF = [F:YPIH]YBPAYREF
  Endif

Endif
# 002

Return

