#<AdxTL>@(#)0.0.0.0 $Revision$Class Expense codes
# Supervisor
## ACLA-CLASSE ## TABEXPENS_DIMCEN
# 2018-08-27 12:51:27 834


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : DIE Analytical dimension type ( Field DIE 3)
####################################################################

$SET_DIE
If [L]_AOLDVAL<>this.DIE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIE
 Gosub PROPAGATE_DIE
Endif
Return

$INIT_DIE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "DIE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "DIE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIE
[L]CURPRO = "DIE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DIE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIE
[L]CURPRO = "DIE"
If vireblc(this.DIE,2)<>vireblc(format$("K:3c",this.DIE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DIE
[L]CURPRO = "DIE"
If vireblc(this.DIE,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPDIE.ACTRLREF(this,"DIE",this.DIE,this.DIE,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DIE<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIE
[L]CURPRO = "DIE"
Return

$PROPAGATE_DIE
this.isReadonly = 0
[L]CURPRO = "DIE"
Gosub _LNKPRO_DIE
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "DIE"
$_LNKPRO_DIE
If vireblc(this.DIE,2)<>""
 # Link GDIE
 Local File GDIE [WDIE]
 Read [F:WDIE]DIE0 = this.DIE
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GDIE" & ZONE="SHOTRA" & IDENT1=[F:WDIE]DIE & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DIE","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GDIE" & ZONE="DESTRA" & IDENT1=[F:WDIE]DIE & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DIE","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WDIE]
Endif
Return


####################################################################
# 2 : CCEFLG Analytical modifications ( Field Local menu number 1)
####################################################################

$SET_CCEFLG
If [L]_AOLDVAL<>this.CCEFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCEFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCEFLG
 Gosub PROPAGATE_CCEFLG
Endif
Return

$INIT_CCEFLG
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "CCEFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CCEFLG=0 and fmet this.AGETATTRIBUTE("CCEFLG","$isMandatory")="true"
 this.CCEFLG = 1
Endif
Return
 
$CONTROL_CCEFLG
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "CCEFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCEFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCEFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCEFLG
[L]CURPRO = "CCEFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CCEFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCEFLG
[L]CURPRO = "CCEFLG"
If this.CCEFLG<0 or this.CCEFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CCEFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CCEFLG
[L]CURPRO = "CCEFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCEFLG
[L]CURPRO = "CCEFLG"
Return

$PROPAGATE_CCEFLG
this.isReadonly = 0
[L]CURPRO = "CCEFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCEFLG
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "CCEFLG"
$_LNKPRO_CCEFLG
Return


####################################################################
# 3 : CCE Analytical dimension ( Field CCE 15)
####################################################################

$SET_CCE
If [L]_AOLDVAL<>this.CCE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCE
 Gosub PROPAGATE_CCE
Endif
Return

$INIT_CCE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "CCE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CCE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "CCE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCE
[L]CURPRO = "CCE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CCE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCE
[L]CURPRO = "CCE"
If vireblc(this.CCE,2)<>vireblc(format$("K:15c",this.CCE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CCE
[L]CURPRO = "CCE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCE
[L]CURPRO = "CCE"
If vireblc(this.CCE,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCE.ACTRLREF(this,"CCE",this.CCE,this.DIE,this.CCE,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CCE<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CCE
this.isReadonly = 0
[L]CURPRO = "CCE"
Gosub _LNKPRO_CCE
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "CCE"
$_LNKPRO_CCE
If vireblc(this.CCE,2)<>""
 # Link CACCE
 Local File CACCE [WCCE]
 Read [F:WCCE]CCE0 = this.DIE;this.CCE
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="CACCE" & ZONE="SHOTRA" & IDENT1=[F:WCCE]DIE & IDENT2=[F:WCCE]CCE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCE","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="CACCE" & ZONE="DESTRA" & IDENT1=[F:WCCE]DIE & IDENT2=[F:WCCE]CCE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCE","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCCE]
Endif
Return


####################################################################
# 4 : INICCE Initialization ( Field Local menu number 2802)
####################################################################

$SET_INICCE
If [L]_AOLDVAL<>this.INICCE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INICCE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INICCE
 Gosub PROPAGATE_INICCE
Endif
Return

$INIT_INICCE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "INICCE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INICCE=0 and fmet this.AGETATTRIBUTE("INICCE","$isMandatory")="true"
 this.INICCE = 1
Endif
Return
 
$CONTROL_INICCE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "INICCE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INICCE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INICCE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INICCE
[L]CURPRO = "INICCE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INICCE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INICCE
[L]CURPRO = "INICCE"
If this.INICCE<0 or this.INICCE>len(mess(0,2802,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2802 ->"-num$(this.INICCE)-mess(99,123,1)):  Return : # Local menu "2802 -> Invalid option
Endif
Return

$_AOTHERS_INICCE
[L]CURPRO = "INICCE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INICCE
[L]CURPRO = "INICCE"
Return

$PROPAGATE_INICCE
this.isReadonly = 0
[L]CURPRO = "INICCE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INICCE
Gosub DECLARE_VAR From WMC0TABEXPENS_DIMCEN
[L]CURPRO = "INICCE"
$_LNKPRO_INICCE
Return




