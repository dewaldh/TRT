#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SCMW 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:11:26"
A_USER  = "ADMIN"
A_STAMP = "20180828001126"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SCMW [SCMW]
Gosub HORODAT
Local Inpbox "SCMW" From GFONCTION At A_STAMP With A_WINDPREV Mask [SCMW] As [SIM_]
Grizo [SCMW]5
Grizo [SCMW]10
Grizo [SCMW]20
Grizo [SCMW]25
Grizo [SCMW]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SCMW]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=80 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=40 : Y1(1)=4 : Y2(1)=14
X1(2)=41 : X2(2)=80 : Y1(2)=4 : Y2(2)=8
X1(3)=41 : X2(3)=80 : Y1(3)=9 : Y2(3)=22
X1(4)=1 : X2(4)=40 : Y1(4)=15 : Y2(4)=22
Return

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1SCMW
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DESSHO",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1SCMW
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGFCY
Return

$ON_ZMFGFCY
Onevent BEFORE_AREA Gosub AV_ZMFGFCY From W1SCMW
Return

$AV_ZMFGFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]MFGFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_QTYCOD
Onevent BEFORE_INPUT Call AS_QTYCOD(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_QTYCOD From W1SCMW
Onevent INIT_AREA Call D_QTYCOD(zc) From W1SCMW
Onevent CONTROL Call C_QTYCOD(zc) From W1SCMW
Return

Subprog D_QTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(225) From COMBOS
## Action STD
Call AS_QTYCOD(VALEUR) From SUBSCM
If mkstat=2
 [M]QTYCOD(INDIC) = VALEUR
 Affzo QTYCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,225,1))))
Endif
If !mkstat
 Discombo 0 From QTYCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From QTYCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_QTYCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_QTYCOD
Call AM_QTYCOD(zc)
If !mkstat & GOBJET
 zoncou = "QTYCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_QTYCOD(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "QTYCOD" : GZNUM = 1545 : Endif
Gosub _AFF
End

$ON_BASQTY
Onevent BEFORE_INPUT Call AS_BASQTY(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_BASQTY From W1SCMW
Onevent INIT_AREA Call D_BASQTY(zc) From W1SCMW
Onevent CONTROL Call C_BASQTY(zc) From W1SCMW
Return

Subprog D_BASQTY(VALEUR)
Variable Decimal VALEUR
If varinit([M]BASQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BASQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BASQTY(VALEUR) From SUBSCM
If mkstat=2
 [M]BASQTY(INDIC) = VALEUR
 Affzo BASQTY(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BASQTY(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_BASQTY
Call AM_BASQTY(zc)
If !mkstat & GOBJET
 zoncou = "BASQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BASQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BASQTY(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "BASQTY" : GZNUM = 1543 : Endif
Gosub _AFF
End

$ON_LIKQTY
Onevent BEFORE_INPUT Call AS_LIKQTY(zc) From W1SCMW
Onevent CONTROL Call C_LIKQTY(zc) From W1SCMW
Onevent AFTER_AREA Call AP_LIKQTY(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_LIKQTY From W1SCMW
Onevent INIT_AREA Call D_LIKQTY(zc) From W1SCMW
Return

Subprog D_LIKQTY(VALEUR)
Variable Decimal VALEUR
If varinit([M]LIKQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LIKQTY(VALEUR) From SUBSCM
If mkstat=2
 [M]LIKQTY(INDIC) = VALEUR
 Affzo LIKQTY(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_LIKQTY(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

Subprog AP_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_LIKQTY(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$AMM_LIKQTY
Call AM_LIKQTY(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_LIKQTY(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$ON_LIKQTYCOD
Onevent BEFORE_INPUT Call AS_LIKQTYCOD(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_LIKQTYCOD From W1SCMW
Onevent INIT_AREA Call D_LIKQTYCOD(zc) From W1SCMW
Return

Subprog D_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LIKQTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LIKQTYCOD(VALEUR) From SUBSCM
If mkstat=2
 [M]LIKQTYCOD(INDIC) = VALEUR
 Affzo LIKQTYCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_LIKQTYCOD
Call AM_LIKQTYCOD(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTYCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LIKQTYCOD(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "LIKQTYCOD" : GZNUM = 4683 : Endif
Gosub _AFF
End

$ON_SCA
Onevent BEFORE_INPUT Call AS_SCA(zc) From W1SCMW
Onevent CONTROL Call C_SCA(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_SCA From W1SCMW
Onevent INIT_AREA Call D_SCA(zc) From W1SCMW
Return

Subprog D_SCA(VALEUR)
Variable Decimal VALEUR
If varinit([M]SCA,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

Subprog AS_SCA(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SCA(VALEUR) From SUBSCM
If mkstat=2
 [M]SCA(INDIC) = VALEUR
 Affzo SCA(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SCA(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_SCA(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "SCA" : GZNUM = 6244 : Endif
Gosub _AFF
End

$AMM_SCA
Call AM_SCA(zc)
If !mkstat & GOBJET
 zoncou = "SCA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SCA(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SCA(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "SCA" : GZNUM = 6244 : Endif
Gosub _AFF
End

$ON_QTYRND
Onevent BEFORE_INPUT Call AS_QTYRND(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_QTYRND From W1SCMW
Onevent INIT_AREA Call D_QTYRND(zc) From W1SCMW
Return

Subprog D_QTYRND(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYRND,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_QTYRND(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_QTYRND(VALEUR) From SUBSCM
If mkstat=2
 [M]QTYRND(INDIC) = VALEUR
 Affzo QTYRND(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_QTYRND
Call AM_QTYRND(zc)
If !mkstat & GOBJET
 zoncou = "QTYRND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYRND(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_QTYRND(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "QTYRND" : GZNUM = 4684 : Endif
Gosub _AFF
End

$ON_RELSCATIA
Onevent AFTER_CHANGE Gosub AMM_RELSCATIA From W1SCMW
Onevent INIT_AREA Call D_RELSCATIA(zc) From W1SCMW
Onevent BEFORE_INPUT Call AS_RELSCATIA(zc) From W1SCMW
Return

Subprog D_RELSCATIA(VALEUR)
Variable Integer VALEUR
If varinit([M]RELSCATIA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RELSCATIA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_RELSCATIA
Call AM_RELSCATIA(zc)
If !mkstat & GOBJET
 zoncou = "RELSCATIA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RELSCATIA(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_RELSCATIA(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "RELSCATIA" : GZNUM = 17623 : Endif
Gosub _AFF
End

$ON_RETQTY
Onevent BEFORE_AREA Gosub AV_RETQTY From W1SCMW
Onevent CONTROL Call C_RETQTY(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_RETQTY From W1SCMW
Return

$AV_RETQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]RETQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog C_RETQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_RETQTY(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "RETQTY" : GZNUM = 271 : Endif
Gosub _AFF
End

$AMM_RETQTY
Call AM_RETQTY(zc)
If !mkstat & GOBJET
 zoncou = "RETQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RETQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_RETQTY(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "RETQTY" : GZNUM = 271 : Endif
Gosub _AFF
End

$ON_SCOFLG
Onevent BEFORE_INPUT Call AS_SCOFLG(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_SCOFLG From W1SCMW
Onevent INIT_AREA Call D_SCOFLG(zc) From W1SCMW
Onevent CONTROL Call C_SCOFLG(zc) From W1SCMW
Return

Subprog D_SCOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SCOFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2225) From COMBOS
## Action STD
Call AS_SCOFLG(VALEUR) From SUBSCM
If mkstat=2
 [M]SCOFLG(INDIC) = VALEUR
 Affzo SCOFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2225,1))))
Endif
If !mkstat
 Discombo 0 From SCOFLG(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SCOFLG(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SCOFLG(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_SCOFLG
Call AM_SCOFLG(zc)
If !mkstat & GOBJET
 zoncou = "SCOFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SCOFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SCOFLG(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "SCOFLG" : GZNUM = 30421 : Endif
Gosub _AFF
End

$ON_BOMOFS
Onevent AFTER_CHANGE Gosub AMM_BOMOFS From W1SCMW
Return

$AMM_BOMOFS
Call AM_BOMOFS(zc)
If !mkstat & GOBJET
 zoncou = "BOMOFS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMOFS(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BOMOFS(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "BOMOFS" : GZNUM = 2620 : Endif
Gosub _AFF
End

$ON_DLVDAT
Onevent CONTROL Call C_DLVDAT(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_DLVDAT From W1SCMW
Onevent BEFORE_AREA Gosub AV_DLVDAT From W1SCMW
Return

$AV_DLVDAT
Chgfmt [M]DLVDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_DLVDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_DLVDAT(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "DLVDAT" : GZNUM = 280 : Endif
Gosub _AFF
End

$AMM_DLVDAT
Call AM_DLVDAT(zc)
If !mkstat & GOBJET
 zoncou = "DLVDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DLVDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_DLVDAT(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "DLVDAT" : GZNUM = 280 : Endif
Gosub _AFF
End

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1SCMW
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_LOC
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1SCMW
Onevent CONTROL Call C_LOC(zc) From W1SCMW
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_LOC(VALEUR) From SUBSCM
If mkstat=2
 [M]LOC(INDIC) = VALEUR
 Affzo LOC(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1SCMW
Onkey 144 Titled GBOUTP Call P_LOC(zc) From W1SCMW
Onkey 146 Titled GBOUTA Call SA_LOC(zc) From W1SCMW
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("LOC","!",VALEUR,num$([M:SCMW]STOFCY),mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "LOC"
PARMSK(2) = "!"
PARMSK(3) = num$([M:SCMW]STOFCY)
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_LOC(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "LOC"
PARMSK(2) = num$([M:SCMW]STOFCY)
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LOC(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$([M:SCMW]STOFCY)
Call VISU("LOC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_LOT
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1SCMW
Return

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LOT(VALEUR) From SUBSCM
If mkstat=2
 [M]LOT(INDIC) = VALEUR
 Affzo LOT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_ALLSTA
Onevent INIT_AREA Call D_ALLSTA(zc) From W1SCMW
Return

Subprog D_ALLSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATSTA
Onevent INIT_AREA Call D_MATSTA(zc) From W1SCMW
Return

Subprog D_MATSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]MATSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PICPRN
Onevent INIT_AREA Call D_PICPRN(zc) From W1SCMW
Return

Subprog D_PICPRN(VALEUR)
Variable Integer VALEUR
If varinit([M]PICPRN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GROPRI
Onevent BEFORE_AREA Gosub AV_GROPRI From W1SCMW
Onevent BEFORE_INPUT Call AS_GROPRI(zc) From W1SCMW
Onevent AFTER_AREA Call AP_GROPRI(zc) From W1SCMW
Onevent AFTER_CHANGE Gosub AMM_GROPRI From W1SCMW
Return

Subprog IB_GROPRI(VALEUR)
Variable Decimal VALEUR
## Action INIREN
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "INIREN"
PARMSK(1) = "SCMW"
PARMSK(2) = "6"
PARMSK(3) = "0"
PARMSK(4) = "GROPRI"
Call S_AFF_NUM(VALEUR,PARMSK,"INIREN","TRTPRICE","") From GACTION
GACTION = SAVACT
Gosub _AFF
End

$AV_GROPRI
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

Subprog AS_GROPRI(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(7720,GBOUT2) From OBJDIV
Call IB_GROPRI(VALEUR)
## Action STD
Call AS_GROPRI(VALEUR) From SUBSCM
If mkstat=2
 [M]GROPRI(INDIC) = VALEUR
 Affzo GROPRI(INDIC) : mkstat = 2
Endif
Onkey 130 Titled GBOUT2 Call B2_GROPRI(zc) From W1SCMW
Gosub _AFF
End

Subprog AP_GROPRI(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_GROPRI(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "GROPRI" : GZNUM = 2541 : Endif
Gosub _AFF
End

$AMM_GROPRI
Call AM_GROPRI(zc)
If !mkstat & GOBJET
 zoncou = "GROPRI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GROPRI(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_GROPRI(VALEUR) From SUBSCM
If mkstat : GERR = 1 : GZONE = "GROPRI" : GZNUM = 2541 : Endif
If !mkstat
 ## Action PAMDISCRG
 Call PAMDISCRG(VALEUR,"SCMW",0,0,[M:SCMW]CUR) From TRTACHPRI1
 If mkstat : GERR = 1 : GZONE = "GROPRI" : GZNUM = 2541 : Endif
Endif
Gosub _AFF
End

Subprog B2_GROPRI(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SAIPURREN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIPURREN"
 PARMSK(1) = "SCMW"
 PARMSK(2) = "0"
 Call SAISIE_NUM(VALEUR,PARMSK,"IPURREN","TRTPRICE","XWIPURREN") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CUR
Return

$ON_NETPRI
Onevent BEFORE_AREA Gosub AV_NETPRI From W1SCMW
Return

$AV_NETPRI
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

$ON_LINAMT
Onevent BEFORE_AREA Gosub AV_LINAMT From W1SCMW
Return

$AV_LINAMT
Chgfmt [M]LINAMT(indice) With "NPz3:"+GDEVFM1(1)
Gosub _AFF
Return

$ON_PRIREN
Return

$ON_ZPRIREN
Onevent BEFORE_AREA Gosub AV_ZPRIREN From W1SCMW
Return

$AV_ZPRIREN
Call LECTEXTRA(zc,"PPREASON","DESAXX",num$([M]PRIREN(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_REFPRI
Onevent BEFORE_AREA Gosub AV_REFPRI From W1SCMW
Return

$AV_REFPRI
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

$ON_CURL
Onevent INIT_AREA Call D_CURL(zc) From W1SCMW
Return

Subprog D_CURL(VALEUR)
Variable Char    VALEUR()
If varinit([M]CURL,indice)=0
 VALEUR = GLOCALDEV
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2SCMW
Return

$TIT_COL
Gosub TIT_COL From W2SCMW
Return


