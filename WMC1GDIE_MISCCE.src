#<AdxTL>@(#)0.0.0.0 $Revision$Class Dimension types
# Supervisor
## ACLA-CLASSE ## GDIE_MISCCE
# 2018-08-27 12:33:00 375


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CCEDES Dimensions ( Field Local menu number 2650)
####################################################################

$SET_CCEDES
If [L]_AOLDVAL<>this.CCEDES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCEDES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCEDES
 Gosub PROPAGATE_CCEDES
Endif
Return

$INIT_CCEDES
Gosub DECLARE_VAR From WMC0GDIE_MISCCE
[L]CURPRO = "CCEDES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CCEDES=0 and fmet this.AGETATTRIBUTE("CCEDES","$isMandatory")="true"
 this.CCEDES = 1
Endif
Return
 
$CONTROL_CCEDES
Gosub DECLARE_VAR From WMC0GDIE_MISCCE
[L]CURPRO = "CCEDES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCEDES                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCEDES                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCEDES
[L]CURPRO = "CCEDES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CCEDES=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCEDES
[L]CURPRO = "CCEDES"
If this.CCEDES<0 or this.CCEDES>len(mess(0,2650,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2650 ->"-num$(this.CCEDES)-mess(99,123,1)):  Return : # Local menu "2650 -> Invalid option
Endif
Return

$_AOTHERS_CCEDES
[L]CURPRO = "CCEDES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCEDES
[L]CURPRO = "CCEDES"
Return

$PROPAGATE_CCEDES
this.isReadonly = 0
[L]CURPRO = "CCEDES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCEDES
Gosub DECLARE_VAR From WMC0GDIE_MISCCE
[L]CURPRO = "CCEDES"
$_LNKPRO_CCEDES
Return


####################################################################
# 2 : CCEMIS Miscellaneous dimensions ( Field CCE 15)
####################################################################

$SET_CCEMIS
If [L]_AOLDVAL<>this.CCEMIS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCEMIS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCEMIS
 Gosub PROPAGATE_CCEMIS
Endif
Return

$INIT_CCEMIS
Gosub DECLARE_VAR From WMC0GDIE_MISCCE
[L]CURPRO = "CCEMIS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CCEMIS
Gosub DECLARE_VAR From WMC0GDIE_MISCCE
[L]CURPRO = "CCEMIS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCEMIS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCEMIS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCEMIS
[L]CURPRO = "CCEMIS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CCEMIS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCEMIS
[L]CURPRO = "CCEMIS"
If vireblc(this.CCEMIS,2)<>vireblc(format$("K:15c",this.CCEMIS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CCEMIS
[L]CURPRO = "CCEMIS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCEMIS
[L]CURPRO = "CCEMIS"
If vireblc(this.CCEMIS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCE.ACTRLREF(this,"CCEMIS",this.CCEMIS,this.APARENT.DIE,this.CCEMIS,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CCEMIS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CCEMIS
this.isReadonly = 0
[L]CURPRO = "CCEMIS"
Gosub _LNKPRO_CCEMIS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCEMIS
Gosub DECLARE_VAR From WMC0GDIE_MISCCE
[L]CURPRO = "CCEMIS"
$_LNKPRO_CCEMIS
If vireblc(this.CCEMIS,2)<>""
 # Link CACCE
 Local File CACCE [WCCE]
 Read [F:WCCE]CCE0 = this.APARENT.DIE;this.CCEMIS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="CACCE" & ZONE="SHOTRA" & IDENT1=[F:WCCE]DIE & IDENT2=[F:WCCE]CCE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCEMIS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="CACCE" & ZONE="DESTRA" & IDENT1=[F:WCCE]DIE & IDENT2=[F:WCCE]CCE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCEMIS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCCE]
Endif
Return




