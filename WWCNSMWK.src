#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry MWK

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:33"
A_USER  = "ADMIN"
A_STAMP = "20180326134133"
Return

$DEFAUT
Default File [WKL]
Return

$OUVFIC
Local File WORKLOAD [WKL]
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(18245,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSMWKSTD"
PROGSPE    = "CNSMWKSPE"
CBOITE     = "DCNSMWK"
BOITE      = "FCNSMWK"
NOMMSK(0)  = "CONSMWK1"
ABMSK(0)   = "MWK1"
NOMMSK(1)  = "CONSMWK2"
ABMSK(1)   = "MWK2"
CMEMO      = "mwk"
CNOMMSK    = "CRITMWK"
CABMSK     = "CMWK"
NOMFIC     = "WORKLOAD"
ABFIC      = "WKL"
MAGNETO    = 2
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..3), CLEMSK(10)(0..3)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = "WKL1"
NBCMP = 4
CLECMP(0) = "MFGFCY"
CLEMSK(0) = "MFGFCY"
CLECMP(1) = "WCR"
CLEMSK(1) = "WCR"
CLECMP(2) = "WST"
CLEMSK(2) = "WST"
CLECMP(3) = "PEREND"
CLEMSK(3) = "PEREND"
Return

$OUVRE
If clalev([F:WKL])=0 : Local File WORKLOAD     [WKL] : Endif
If clalev([F:WKL])=0 : Local File WORKLOAD     [WKL] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CMWK]
 When  0 : Local Mask =NOMMSK(0) [MWK1]
 When  1 : Local Mask =NOMMSK(1) [MWK2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CMWK]
 When  0 : Grizo [MWK1]
 When  1 : Grizo [MWK2]
Endcase
Return

$GRISE_CLE
Case MA
 When -1 : If dim([M:CMWK]WCR)>0 : Grizo [CMWK]WCR : Endif
           If dim([M:CMWK]WST)>0 : Grizo [CMWK]WST : Endif
 When  0 : If dim([M:MWK1]MFGFCY)>0 : Grizo [MWK1]MFGFCY : Endif
           If dim([M:MWK1]WCR)>0 : Grizo [MWK1]WCR : Endif
           If dim([M:MWK1]WST)>0 : Grizo [MWK1]WST : Endif
           If dim([M:MWK1]PEREND)>0 : Grizo [MWK1]PEREND : Endif
Endcase
Return

$GRISE_CRIT
If dim([M:CMWK]MENU)>0
 Grizo [CMWK]MENU
Endif
If dim([M:CMWK]WCR)>0
 Grizo [CMWK]WCR
Endif
If dim([M:CMWK]WST)>0
 Grizo [CMWK]WST
Endif
If dim([M:CMWK]WSTTYPDEB)>0
 Grizo [CMWK]WSTTYPDEB
Endif
If dim([M:CMWK]WSTTYPFIN)>0
 Grizo [CMWK]WSTTYPFIN
Endif
If dim([M:CMWK]STRDATSTR)>0
 Grizo [CMWK]STRDATSTR
Endif
If dim([M:CMWK]STRDATEND)>0
 Grizo [CMWK]STRDATEND
Endif
If dim([M:CMWK]SURCHARGE)>0
 Grizo [CMWK]SURCHARGE
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CMWK])>0 : Close Local Mask [CMWK] : Endif
 When  0 : If clalev([M:MWK1])>0 : Close Local Mask [MWK1] : Endif
 When  1 : If clalev([M:MWK2])>0 : Close Local Mask [MWK2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CMWK]
 When  0 : Default Mask [MWK1]
 When  1 : Default Mask [MWK2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CMWK]
 When  0 : Raz [M:MWK1]
 When  1 : Raz [M:MWK2]
Endcase
Return

$CRITENT
If dim([M:CMWK]MENU)>0 & dim([M:MWK1]MENU)>0
 [M:CMWK]MENU = [M:MWK1]MENU
Endif
If dim([M:CMWK]WCR)>0 & dim([M:MWK1]WCR)>0
 [M:CMWK]WCR = [M:MWK1]WCR
Endif
If dim([M:CMWK]WST)>0 & dim([M:MWK1]WST)>0
 [M:CMWK]WST = [M:MWK1]WST
Endif
If dim([M:CMWK]WSTTYPDEB)>0 & dim([M:MWK1]WSTTYPDEB)>0
 [M:CMWK]WSTTYPDEB = [M:MWK1]WSTTYPDEB
Endif
If dim([M:CMWK]WSTTYPFIN)>0 & dim([M:MWK1]WSTTYPFIN)>0
 [M:CMWK]WSTTYPFIN = [M:MWK1]WSTTYPFIN
Endif
If dim([M:CMWK]STRDATSTR)>0 & dim([M:MWK1]STRDATSTR)>0
 [M:CMWK]STRDATSTR = [M:MWK1]STRDATSTR
Endif
If dim([M:CMWK]STRDATEND)>0 & dim([M:MWK1]STRDATEND)>0
 [M:CMWK]STRDATEND = [M:MWK1]STRDATEND
Endif
If dim([M:CMWK]SURCHARGE)>0 & dim([M:MWK1]SURCHARGE)>0
 [M:CMWK]SURCHARGE = [M:MWK1]SURCHARGE
Endif
Return

$ENTCRIT
If dim([M:CMWK]MENU)>0 & dim([M:MWK1]MENU)>0
[M:MWK1]MENU = [M:CMWK]MENU
Endif
If dim([M:CMWK]WCR)>0 & dim([M:MWK1]WCR)>0
[M:MWK1]WCR = [M:CMWK]WCR
Endif
If dim([M:CMWK]WST)>0 & dim([M:MWK1]WST)>0
[M:MWK1]WST = [M:CMWK]WST
Endif
If dim([M:CMWK]WSTTYPDEB)>0 & dim([M:MWK1]WSTTYPDEB)>0
[M:MWK1]WSTTYPDEB = [M:CMWK]WSTTYPDEB
Endif
If dim([M:CMWK]WSTTYPFIN)>0 & dim([M:MWK1]WSTTYPFIN)>0
[M:MWK1]WSTTYPFIN = [M:CMWK]WSTTYPFIN
Endif
If dim([M:CMWK]STRDATSTR)>0 & dim([M:MWK1]STRDATSTR)>0
[M:MWK1]STRDATSTR = [M:CMWK]STRDATSTR
Endif
If dim([M:CMWK]STRDATEND)>0 & dim([M:MWK1]STRDATEND)>0
[M:MWK1]STRDATEND = [M:CMWK]STRDATEND
Endif
If dim([M:CMWK]SURCHARGE)>0 & dim([M:MWK1]SURCHARGE)>0
[M:MWK1]SURCHARGE = [M:CMWK]SURCHARGE
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSMWK2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "MWK"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MWK1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MWK1]WCR,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MWK1]WST,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MWK2]PERSTR(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MWK2]PEREND(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:MWK1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MWK1]WCR" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:MWK1]WST" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MWK2]PERSTR(nolign-1)" With ctrans(func AFNC.PART(INFO,8),"¨","~")
  Assign "[M:MWK2]PEREND(nolign-1)" With ctrans(func AFNC.PART(INFO,9),"¨","~")
  Assign "1" With val(ctrans(func AFNC.PART(INFO,12),"¨","~"))
  Onerrgo
  Call B1_NBLIG From ="W1CONSMWK2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


