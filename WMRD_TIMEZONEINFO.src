#<AdxTL>@(#)0.0.0.0 $Revision$Class Time zones
# Supervisor
## CRUD-CLASSE ## TIMEZONEINFO
# 2018-08-27 13:45:52 263


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(TIMEZONEINFO,ASTATUS)
Variable Instance TIMEZONEINFO Using R_TIMEZONEINFO
Variable Integer ASTATUS

If TIMEZONEINFO = null : End : Endif

Gosub AVARIABLES From WMR00TIMEZONEINFO
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_TIMEZONEINFO
Else
 Gosub ADELETE_TIMEZONEINFO
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
TIMEZONEINFO.ASTALIN = [V]CST_ADEL
TIMEZONEINFO.TZI.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(TIMEZONEINFO.TZI,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If TIMEZONEINFO.TZI.ASTALIN = [V]CST_ANEWDEL : Return : Endif
TIMEZONEINFO.TZI.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.TZI.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.TZI.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_TIMEZONEINFO
Trbegin [F:TZI]
 Gosub ADELETE_TIMEZONEINFO
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_TIMEZONEINFO
[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.TZI._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TIMEZONEINFO.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If TIMEZONEINFO.snapshotEnabled=1
 [L]A_RETIK = TIMEZONEINFO.revertUpdTick
Endif
[L]ASTATUS = max(fmet TIMEZONEINFO.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



