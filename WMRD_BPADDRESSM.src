#<AdxTL>@(#)0.0.0.0 $Revision$Class Addresses
# Supervisor
## CRUD-CLASSE ## BPADDRESSM
# 2018-08-27 13:04:55 976


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(BPADDRESSM,ASTATUS)
Variable Instance BPADDRESSM Using R_BPADDRESSM
Variable Integer ASTATUS

If BPADDRESSM = null : End : Endif

Gosub AVARIABLES From WMR00BPADDRESSM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_BPADDRESSM
Else
 Gosub ADELETE_BPADDRESSM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
BPADDRESSM.ASTALIN = [V]CST_ADEL
BPADDRESSM.BPA.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(BPADDRESSM.BPA,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If BPADDRESSM.BPA.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BPADDRESSM.BPA.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLTEL)
 If BPADDRESSM.BPA.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLTEL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLWEB)
 If BPADDRESSM.BPA.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLWEB([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLTEL)
 If BPADDRESSM.BPA.COLTEL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLTEL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(BPADDRESSM.BPA.COLWEB)
 If BPADDRESSM.BPA.COLWEB([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.COLWEB([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_BPADDRESSM
Trbegin [F:BPA]
 Gosub ADELETE_BPADDRESSM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_BPADDRESSM
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.BPA._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESSM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If BPADDRESSM.snapshotEnabled=1
 [L]A_RETIK = BPADDRESSM.revertUpdTick
Endif
[L]ASTATUS = max(fmet BPADDRESSM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



