#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule LINACCANA

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GACCENTRYA" : If clalev([F:DAA])=0 : Local File =OUVTAB [DAA] : Endif
OUVTAB = GDOSSIER+".GACCOUNT" : If clalev([F:ACC])=0 : Local File =OUVTAB [ACC] : Endif
OUVTAB = GDOSSIER+".GACCENTRYD" : If clalev([F:DAE])=0 : Local File =OUVTAB [DAE] : Endif
OUVTAB = "Link [DAA]"
Link [DAA] With
& [ACC]GAC0 = [F:DAA]COA;[F:DAA]ACC,
& [DAE]DAE0 = [F:DAA]TYP;[F:DAA]NUM;[F:DAA]LIN;[F:DAA]LEDTYP
& As [LNK_]
& Order By Key CLE = [DAA]TYP;[DAA]NUM;[DAA]LIN;[DAA]LEDTYP;[DAA]ANALIN
FILTRE = ""
Return

$FERME
If clalev([F:DAA]) : Close local File [DAA] : Endif
If clalev([F:ACC]) : Close local File [ACC] : Endif
If clalev([F:DAE]) : Close local File [DAE] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..4)
Local Integer DTYP(1..4)
Local Integer NBDCLE
NBDCLE = 4
DCLE(1) = "TYP"
DTYP(1) =  7
DCLE(2) = "NUM"
DTYP(2) =  7
DCLE(3) = "NUMLIG"
DTYP(3) =  7
DCLE(4) = "ANALIG"
DTYP(4) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]TYP)>0
 [F:AAA_]TYP = [F:DAA]TYP
Endif
If dim([F:AAA_]NUM)>0
 [F:AAA_]NUM = [F:DAA]NUM
Endif
If dim([F:AAA_]NUMLIG)>0
 [F:AAA_]NUMLIG = [F:DAA]LIN
Endif
If dim([F:AAA_]ANALIG)>0
 [F:AAA_]ANALIG = [F:DAA]ANALIN
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### TYP
[L]FLD="TYP"
[L]FORMULE='[F:DAA]TYP'
If dim([F:AAA_]TYP)>0
 [F:AAA_]TYP = [F:DAA]TYP
Endif

### NUM
[L]FLD="NUM"
[L]FORMULE='[F:DAA]NUM'
If dim([F:AAA_]NUM)>0
 [F:AAA_]NUM = [F:DAA]NUM
Endif

### NUMLIG
[L]FLD="NUMLIG"
[L]FORMULE='[F:DAA]LIN'
If dim([F:AAA_]NUMLIG)>0
 [F:AAA_]NUMLIG = [F:DAA]LIN
Endif

### LEDTYP
[L]FLD="LEDTYP"
[L]FORMULE='[F:DAA]LEDTYP'
If dim([F:AAA_]LEDTYP)>0
 [F:AAA_]LEDTYP = [F:DAA]LEDTYP
Endif

### ANALIG
[L]FLD="ANALIG"
[L]FORMULE='[F:DAA]ANALIN'
If dim([F:AAA_]ANALIG)>0
 [F:AAA_]ANALIG = [F:DAA]ANALIN
Endif

### IDTLIN
[L]FLD="IDTLIN"
[L]FORMULE='[F:DAA]IDTLIN'
If dim([F:AAA_]IDTLIN)>0
 [F:AAA_]IDTLIN = [F:DAA]IDTLIN
Endif

### FCYLIN
[L]FLD="FCYLIN"
[L]FORMULE='[F:DAE]FCYLIN'
If dim([F:AAA_]FCYLIN)>0
 [F:AAA_]FCYLIN = [F:DAE]FCYLIN
Endif

### DES
[L]FLD="DES"
[L]FORMULE='[F:DAE]DES'
If dim([F:AAA_]DES)>0
 [F:AAA_]DES = [F:DAE]DES
Endif

### UOM
[L]FLD="UOM"
[L]FORMULE='[F:DAA]UOM'
If dim([F:AAA_]UOM)>0
 [F:AAA_]UOM = [F:DAA]UOM
Endif

### DSP
[L]FLD="DSP"
[L]FORMULE='[F:DAE]DSP'
If dim([F:AAA_]DSP)>0
 [F:AAA_]DSP = [F:DAE]DSP
Endif

### CCE1
[L]FLD="CCE1"
[L]FORMULE='func BICPT.SETCCE(1,"DAA")'
If dim([F:AAA_]CCE1)>0
 [F:AAA_]CCE1 = func BICPT.SETCCE(1,"DAA")
Endif

### DESCCE1
[L]FLD="DESCCE1"
[L]FORMULE='func BICPT.GETCCENAM(1,"DAA")'
If dim([F:AAA_]DESCCE1)>0
 [F:AAA_]DESCCE1 = func BICPT.GETCCENAM(1,"DAA")
Endif

### CCE2
[L]FLD="CCE2"
[L]FORMULE='func BICPT.SETCCE(2,"DAA")'
If dim([F:AAA_]CCE2)>0
 [F:AAA_]CCE2 = func BICPT.SETCCE(2,"DAA")
Endif

### DESCCE2
[L]FLD="DESCCE2"
[L]FORMULE='func BICPT.GETCCENAM(2,"DAA")'
If dim([F:AAA_]DESCCE2)>0
 [F:AAA_]DESCCE2 = func BICPT.GETCCENAM(2,"DAA")
Endif

### CCE3
[L]FLD="CCE3"
[L]FORMULE='func BICPT.SETCCE(3,"DAA")'
If dim([F:AAA_]CCE3)>0
 [F:AAA_]CCE3 = func BICPT.SETCCE(3,"DAA")
Endif

### DESCCE3
[L]FLD="DESCCE3"
[L]FORMULE='func BICPT.GETCCENAM(3,"DAA")'
If dim([F:AAA_]DESCCE3)>0
 [F:AAA_]DESCCE3 = func BICPT.GETCCENAM(3,"DAA")
Endif

### CCE4
[L]FLD="CCE4"
[L]FORMULE='func BICPT.SETCCE(4,"DAA")'
If dim([F:AAA_]CCE4)>0
 [F:AAA_]CCE4 = func BICPT.SETCCE(4,"DAA")
Endif

### DESCCE4
[L]FLD="DESCCE4"
[L]FORMULE='func BICPT.GETCCENAM(4,"DAA")'
If dim([F:AAA_]DESCCE4)>0
 [F:AAA_]DESCCE4 = func BICPT.GETCCENAM(4,"DAA")
Endif

### CCE5
[L]FLD="CCE5"
[L]FORMULE='func BICPT.SETCCE(5,"DAA")'
If dim([F:AAA_]CCE5)>0
 [F:AAA_]CCE5 = func BICPT.SETCCE(5,"DAA")
Endif

### DESCCE5
[L]FLD="DESCCE5"
[L]FORMULE='func BICPT.GETCCENAM(5,"DAA")'
If dim([F:AAA_]DESCCE5)>0
 [F:AAA_]DESCCE5 = func BICPT.GETCCENAM(5,"DAA")
Endif

### CCE6
[L]FLD="CCE6"
[L]FORMULE='func BICPT.SETCCE(6,"DAA")'
If dim([F:AAA_]CCE6)>0
 [F:AAA_]CCE6 = func BICPT.SETCCE(6,"DAA")
Endif

### DESCCE6
[L]FLD="DESCCE6"
[L]FORMULE='func BICPT.GETCCENAM(6,"DAA")'
If dim([F:AAA_]DESCCE6)>0
 [F:AAA_]DESCCE6 = func BICPT.GETCCENAM(6,"DAA")
Endif

### CCE7
[L]FLD="CCE7"
[L]FORMULE='func BICPT.SETCCE(7,"DAA")'
If dim([F:AAA_]CCE7)>0
 [F:AAA_]CCE7 = func BICPT.SETCCE(7,"DAA")
Endif

### DESCCE7
[L]FLD="DESCCE7"
[L]FORMULE='func BICPT.GETCCENAM(7,"DAA")'
If dim([F:AAA_]DESCCE7)>0
 [F:AAA_]DESCCE7 = func BICPT.GETCCENAM(7,"DAA")
Endif

### CCE8
[L]FLD="CCE8"
[L]FORMULE='func BICPT.SETCCE(8,"DAA")'
If dim([F:AAA_]CCE8)>0
 [F:AAA_]CCE8 = func BICPT.SETCCE(8,"DAA")
Endif

### DESCCE8
[L]FLD="DESCCE8"
[L]FORMULE='func BICPT.GETCCENAM(8,"DAA")'
If dim([F:AAA_]DESCCE8)>0
 [F:AAA_]DESCCE8 = func BICPT.GETCCENAM(8,"DAA")
Endif

### CCE9
[L]FLD="CCE9"
[L]FORMULE='func BICPT.SETCCE(9,"DAA")'
If dim([F:AAA_]CCE9)>0
 [F:AAA_]CCE9 = func BICPT.SETCCE(9,"DAA")
Endif

### DESCCE9
[L]FLD="DESCCE9"
[L]FORMULE='func BICPT.GETCCENAM(9,"DAA")'
If dim([F:AAA_]DESCCE9)>0
 [F:AAA_]DESCCE9 = func BICPT.GETCCENAM(9,"DAA")
Endif


Return

