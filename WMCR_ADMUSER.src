#<AdxTL>@(#)0.0.0.0 $Revision$Class User
# Supervisor
## CRUD-CLASSE ## ADMUSER
# 2018-08-27 12:19:42 516


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AUTILIS [AUS_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ADMUSER") From ASYRCOM : Endif
Local Instance ADMUSER Using C_ADMUSER

If !SILENCE : Call TRACE("3 --> New Instance C_ADMUSER") From ASYRCOM : Endif
ADMUSER = NewInstance C_ADMUSER AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AUS_]CODUSR First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ADMUSER") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ADMUSER.AREAD([AUS_]USR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ADMUSER.USR ="-num$(ADMUSER.USR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ADMUSER.AKEYS)
  Call TRACE("-"-num$(I)-":"-ADMUSER.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AUS_]
FreeGroup ADMUSER
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ADMUSER,ACLE,ASTATUS,_ETAG)
Variable Instance ADMUSER Using C_ADMUSER
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AUTILIS [AUS]
Default File [F:AUS]
Read [F:AUS]CODUSR = [L]_USR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AUS]UPDTICK)>0
 [L]_ETAG = num$([F:AUS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ADMUSER,ACLE,ASTATUS)
Variable Instance ADMUSER Using C_ADMUSER
Value Char ACLE
Variable Integer ASTATUS
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ADMUSER.AREAD([L]_USR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ADMUSER,_USR,ASTATUS)
Variable Instance ADMUSER Using C_ADMUSER
Value Char _USR
Variable Integer ASTATUS

If ADMUSER = null : End : Endif

Gosub AVARIABLES From WMC00ADMUSER
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ADMUSER.APARENT=null
 [L]A_I = ADMUSER.freeSnapshot
 ADMUSER.snapshotEnabled = 0
 ADMUSER.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ADMUSER.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ADMUSER._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ADMUSER.APARENT=null
 ADMUSER.snapshotEnabled = 1
 ADMUSER.setAccessorEnabled = 1
Endif
LogicClose File [AUS]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ADMUSER._ACTION_PARAM("AREAD_BEFORE",[L]_USR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ADMUSER._ACTION_PARAM("AREAD",[L]_USR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
ADMUSER.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ADMUSER.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



