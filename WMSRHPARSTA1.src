#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHPARSTA1 PARSTA1
# 2018-08-27 12:37:03 577

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","PARSTA1","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PARSTA1 [PS1]
Local File PARSTA1 [PS1_]
Local File ATEXTRA [AXX_1]
Local File ATEXTRA [AXX_2]
Local File ATEXTRA [AXX_3]
Local Char KEY_PS1(120)(1..3)
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [PS1]
LogicClose File [PS1_]
LogicClose File [AXX_1]
LogicClose File [AXX_2]
LogicClose File [AXX_3]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [PS1] With
& [PS1_]PS10=[PS1]COD,
& [F:AXX_1]AXX0 = "PARSTA1";"INTIT";GACTX.LAN;[F:PS1]COD;"",
& [F:AXX_2]AXX0 = "PARSTA1";"INTSHO";GACTX.LAN;[F:PS1]COD;""
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [PS1] With
& [PS1_]PS10=[PS1]COD,
& [F:AXX_1]AXX0 = "PARSTA1";"INTIT";GACTX.LAN;[F:PS1]COD;"",
& [F:AXX_2]AXX0 = "PARSTA1";"INTSHO";GACTX.LAN;[F:PS1]COD;""
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
#Create a new instance
INS = NewInstance C_PARSTA1(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

CJ1=1
For CI1 = 0 To dim([F:PS1]CRI)-1
#Create a new instance
INS.CRICOL(CJ1) = NewInstance C_PARSTA1_CRICOL(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.CRICOL(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
CJ1=1
For CI1 = 0 To dim([F:PS1]TBL)-1
#Create a new instance
INS.TBLCOL(CJ1) = NewInstance C_PARSTA1_TBLCOL(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.TBLCOL(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
CJ1=1
For CI1 = 0 To dim([F:PS1]VARNAM)-1
#Create a new instance
INS.VARCOL(CJ1) = NewInstance C_PARSTA1_VARCOL(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.VARCOL(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE

SetInstance INS With [F:PS1]
FINS = 1
Call ASETTEXTRA(INS.AXX,INS.ALLOCGRP(),"INTIT",[F:AXX_1]TEXTE,GACTX.LAN) From ASYRSUB
Call ASETTEXTRA(INS.AXX,INS.ALLOCGRP(),"INTSHO",[F:AXX_2]TEXTE,GACTX.LAN) From ASYRSUB
Local Integer CRI_MAX:CRI_MAX0
CJ1=1
For CI1 = 0 To dim([F:PS1]CRI)-1
 Break ((CI1 > [F:PS1]NBRCRI) & (CJ1 >= 1))
 CRI_MAX+=1
 INS.CRICOL(CJ1).CRI=[F:PS1]CRI(CI1)
 CJ1+=1
Next CI1
Local Integer TBL_MAX:TBL_MAX0
CJ1=1
For CI1 = 0 To dim([F:PS1]TBL)-1
 Break ((CI1 > [F:PS1]NBRTBL) & (CJ1 >= 1))
 TBL_MAX+=1
 INS.TBLCOL(CJ1).TBL=[F:PS1]TBL(CI1)
 INS.TBLCOL(CJ1).ABRLNK=[F:PS1]ABRLNK(CI1)
 INS.TBLCOL(CJ1).CLELNK=[F:PS1]CLELNK(CI1)
 INS.TBLCOL(CJ1).EXPLNK=[F:PS1]EXPLNK(CI1)
 CJ1+=1
Next CI1
Local Integer VARNAM_MAX:VARNAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:PS1]VARNAM)-1
 Break ((CI1 > [F:PS1]NBRVAR) & (CJ1 >= 1))
 VARNAM_MAX+=1
 INS.VARCOL(CJ1).VARNAM=[F:PS1]VARNAM(CI1)
 Read [F:AXX_3]AXX0 = "PARSTA1";"VARINTIT";GACTX.LAN;[F:PS1]COD;num$(CI1)
 If !fstat
  Call ASETTEXTRA(INS.VARCOL(CJ1).AXX,INS.VARCOL(CJ1).ALLOCGRP(),"VARINTIT",[F:AXX_3]TEXTE,GACTX.LAN) From ASYRSUB
 Endif
 INS.VARCOL(CJ1).VARFOR=[F:PS1]VARFOR(CI1)
 INS.VARCOL(CJ1).VARCUR=[F:PS1]VARCUR(CI1)
 CJ1+=1
Next CI1
[L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
Gosub ASEARCH_TO_JSON
Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"COD":'             +'"'+escJson(INS.COD)+'"'
Append ASND.DATA ,',"INTIT":'          
Append ASND.DATA ,'"'
Append ASND.DATA ,escJson(func ASYRSUB.AGETTEXTRA(INS.AXX,"INTIT",GACTX.LAN))
Append ASND.DATA ,'"'
Append ASND.DATA ,',"INTSHO":'         
Append ASND.DATA ,'"'
Append ASND.DATA ,escJson(func ASYRSUB.AGETTEXTRA(INS.AXX,"INTSHO",GACTX.LAN))
Append ASND.DATA ,'"'
Append ASND.DATA ,',"RLGTBL":'         +'"'+escJson(INS.RLGTBL)+'"'
Append ASND.DATA ,',"DATFLD":'         +'"'+escJson(INS.DATFLD)+'"'
Append ASND.DATA ,',"DATTBL":'         +'"'+escJson(INS.DATTBL)+'"'
Append ASND.DATA ,',"CPYFLD":'         +'"'+escJson(INS.CPYFLD)+'"'
Append ASND.DATA ,',"CPYTBL":'         +'"'+escJson(INS.CPYTBL)+'"'
Append ASND.DATA ,',"FCYFLD":'         +'"'+escJson(INS.FCYFLD)+'"'
Append ASND.DATA ,',"FCYTBL":'         +'"'+escJson(INS.FCYTBL)+'"'
Append ASND.DATA ,',"CODACT":'         +'"'+escJson(INS.CODACT)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"CRICOL":['
For CI1=1 To CRI_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"CRI":'             +'"'+escJson(INS.CRICOL(CJ1).CRI)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"TBLCOL":['
For CI1=1 To TBL_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"TBL":'             +'"'+escJson(INS.TBLCOL(CJ1).TBL)+'"'
 Append ASND.DATA ,',"ABRLNK":'         +'"'+escJson(INS.TBLCOL(CJ1).ABRLNK)+'"'
 Append ASND.DATA ,',"CLELNK":'         +'"'+escJson(INS.TBLCOL(CJ1).CLELNK)+'"'
 Append ASND.DATA ,',"EXPLNK":'         +'"'+escJson(INS.TBLCOL(CJ1).EXPLNK)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"VARCOL":['
For CI1=1 To VARNAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"VARNAM":'          +'"'+escJson(INS.VARCOL(CJ1).VARNAM)+'"'
 Append ASND.DATA ,',"VARINTIT":'       
 Append ASND.DATA ,'"'
 Append ASND.DATA ,escJson(func ASYRSUB.AGETTEXTRA(INS.VARCOL(CJ1).AXX,"VARINTIT",GACTX.LAN))
 Append ASND.DATA ,'"'
 Append ASND.DATA ,',"VARFOR":'         +'"'+escJson(INS.VARCOL(CJ1).VARFOR)+'"'
 Append ASND.DATA ,',"VARCUR":'         +'"'+escJson(INS.VARCOL(CJ1).VARCUR)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:PS1]COD"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From PARSTA1_CSTD
 Gosub METHODS From PARSTA1_CSTD
 Gosub METHODS From PARSTA1_CSTD
Gosub METHODS From PARSTA1_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="PARSTA1" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PARSTA1")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PARSTA1")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,11490)+'"'
Append WCLOB,',"$url":"{$baseUrl}/PARSTA1'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,11490)+' {$key}"'
Append WCLOB,',"$key":"{COD}"'
Append WCLOB,',"$url":"{$baseUrl}/PARSTA1('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'PARSTA1.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"COD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5296)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"INTIT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"INTSHO":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4010)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"RLGTBL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5621)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"DATFLD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6699)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"DATTBL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1176)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CPYFLD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6713)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"CPYTBL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1176)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"FCYFLD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1386)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"FCYTBL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1176)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CODACT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4049)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4051)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CRICOL":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":5'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"CRI":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6425)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"TBLCOL":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":10'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"TBL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6710)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"ABRLNK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,903)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":8'
Append WCLOB,"}"
Append WCLOB,',"CLELNK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14868)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"EXPLNK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,988)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"VARCOL":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":10'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"VARNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,124)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"VARINTIT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"VARFOR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,843)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"VARCUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/PARSTA1('+"'"+'{$key}'+"'"+')?representation=PARSTA1.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHPARSTA1B
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHPARSTA1B
End RES


