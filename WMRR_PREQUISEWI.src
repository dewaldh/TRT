#<AdxTL>@(#)0.0.0.0 $Revision$Class Purchase request
# Supervisor
## CRUD-CLASSE ## PREQUISEWI
# 2018-08-27 13:26:10 012


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PREQUIS [PSH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_PREQUISEWI") From ASYRCOM : Endif
Local Instance PREQUISEWI Using R_PREQUISEWI

If !SILENCE : Call TRACE("3 --> New Instance R_PREQUISEWI") From ASYRCOM : Endif
PREQUISEWI = NewInstance R_PREQUISEWI AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PSH_]PSH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PREQUIS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PREQUISEWI.AREAD([PSH_]PSHNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PREQUISEWI.PSH.PSHNUM ="-num$(PREQUISEWI.PSH.PSHNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PREQUISEWI.PSH.AKEYS)
  Call TRACE("-"-num$(I)-":"-PREQUISEWI.PSH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PSH_]
FreeGroup PREQUISEWI
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PREQUISEWI,ACLE,ASTATUS,_ETAG)
Variable Instance PREQUISEWI Using R_PREQUISEWI
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PSHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PSHNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PREQUIS [PSH]
Default File [F:PSH]
Read [F:PSH]PSH0 = [L]_PSHNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PSH]UPDTICK)>0
 [L]_ETAG = num$([F:PSH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PREQUISEWI,ACLE,ASTATUS)
Variable Instance PREQUISEWI Using R_PREQUISEWI
Value Char ACLE
Variable Integer ASTATUS
Local Char _PSHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PSHNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PREQUISEWI.AREAD([L]_PSHNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PREQUISEWI,_PSHNUM,ASTATUS)
Variable Instance PREQUISEWI Using R_PREQUISEWI
Value Char _PSHNUM
Variable Integer ASTATUS

If PREQUISEWI = null : End : Endif

Gosub AVARIABLES From WMR00PREQUISEWI
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PREQUISEWI.APARENT=null
 [L]A_I = PREQUISEWI.freeSnapshot
 PREQUISEWI.snapshotEnabled = 0
 PREQUISEWI.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet PREQUISEWI.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

PREQUISEWI.PSH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet PREQUISEWI.PSH.AREAD([L]_PSHNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PREQUISEWI.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PREQUISEWI.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PREQUISEWI._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PREQUISEWI.APARENT=null
 PREQUISEWI.snapshotEnabled = 1
 PREQUISEWI.setAccessorEnabled = 1
Endif
LogicClose File [PSH] ,[PSD]
End



