#<AdxTL>@(#)0.0.0.0 $Revision$Class Conversion factor table
# Supervisor
## CRUD-CLASSE ## TABCOEFF
# 2018-08-27 12:50:54 906

Gosub TEST From WMCR_TABCOEFF : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,UOM1,UOM2)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TABCOEFF : TABCOEFF
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TABCOEFF._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TABCOEFF.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TABCOEFF.ACTX.AFOLDER,nomap,"")>0
 Local File TABCOEFF [TCO]
 Local File TABCOEFF [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =TABCOEFF.ACTX.AFOLDER+".TABCOEFF" [TCO]
 Local File =TABCOEFF.ACTX.AFOLDER+".TABCOEFF" [AAA_]
 Local File =TABCOEFF.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TABCOEFF.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [TCO] With
& [AAA_]TCO0 = UOM1+UOM2
& As [LNK_]
Return

############################################################################################
### TABCOEFF(WTCO)
############################################################################################
Funprog  _MAJSQL_TABCOEFF(WTCO)
Variable Instance WTCO Using C_TABCOEFF
Local Integer ASTATUS,A_I,A_J
Default File [F:TCO]
If WTCO.ASTALIN=[V]CST_ANEW
 Call INICRE(WTCO) From ASYRSUB
 SetInstance [F:TCO] With WTCO
 For J=1 To maxtab(WTCO.AXX)
  If WTCO.AXX(J)<>null & WTCO.AXX(J).PRO= "COEAX1" & WTCO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCO,WTCO.AXX(J).TEX,"TABCOEFF","COEAX1",WTCO.AXX(J).LAN,WTCO.UOM1,WTCO.UOM2,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTCO.AXX)
  If WTCO.AXX(J)<>null & WTCO.AXX(J).PRO= "COEAX2" & WTCO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCO,WTCO.AXX(J).TEX,"TABCOEFF","COEAX2",WTCO.AXX(J).LAN,WTCO.UOM1,WTCO.UOM2,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TCO]
 If fstat
  Call FSTA("TCO",WTCO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTCO.updTick = [F:TCO]updTick
Elsif WTCO.ASTALIN=[V]CST_ALL or WTCO.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTCO) From ASYRSUB
 SetInstance [F:TCO] With WTCO
 For J=1 To maxtab(WTCO.AXX)
  If WTCO.AXX(J)<>null & WTCO.AXX(J).PRO= "COEAX1" & WTCO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCO,WTCO.AXX(J).TEX,"TABCOEFF","COEAX1",WTCO.AXX(J).LAN,WTCO.UOM1,WTCO.UOM2,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTCO.AXX)
  If WTCO.AXX(J)<>null & WTCO.AXX(J).PRO= "COEAX2" & WTCO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTCO,WTCO.AXX(J).TEX,"TABCOEFF","COEAX2",WTCO.AXX(J).LAN,WTCO.UOM1,WTCO.UOM2,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTCO,"TABCOEFF")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TCO]TCO0 = [F:TCO]UOM1;[F:TCO]UOM2
 If fstat
  Call FSTA("TCO",WTCO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTCO.updTick = [F:TCO]updTick
Elsif WTCO.ASTALIN=[V]CST_ADEL
 SetInstance [F:TCO] With WTCO
 For J=1 To maxtab(WTCO.AXX)
  If WTCO.AXX(J)<>null & WTCO.AXX(J).PRO= "COEAX1"
   Call SUPTEXTRA(WTCO,WTCO.AXX(J).TEX,"TABCOEFF","COEAX1",WTCO.AXX(J).LAN,WTCO.UOM1,WTCO.UOM2,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTCO.AXX)
  If WTCO.AXX(J)<>null & WTCO.AXX(J).PRO= "COEAX2"
   Call SUPTEXTRA(WTCO,WTCO.AXX(J).TEX,"TABCOEFF","COEAX2",WTCO.AXX(J).LAN,WTCO.UOM1,WTCO.UOM2,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTCO,"TABCOEFF")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TCO]TCO0 = [F:TCO]UOM1;[F:TCO]UOM2
 If fstat
  Call FSTA("TCO",WTCO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



