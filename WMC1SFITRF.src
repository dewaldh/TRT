#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoicing elements
# Supervisor
## ACLA-CLASSE ## SFITRF
# 2018-08-27 12:45:21 693


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : NBSFI Elements ( Field ABS 0)
####################################################################

$SET_NBSFI
If [L]_AOLDVAL<>this.NBSFI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBSFI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBSFI
 Gosub PROPAGATE_NBSFI
Endif
Return

$INIT_NBSFI
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBSFI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBSFI
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBSFI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBSFI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBSFI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBSFI
[L]CURPRO = "NBSFI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBSFI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBSFI
[L]CURPRO = "NBSFI"
Return

$_AOTHERS_NBSFI
[L]CURPRO = "NBSFI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBSFI
[L]CURPRO = "NBSFI"
Return

$PROPAGATE_NBSFI
this.isReadonly = 0
[L]CURPRO = "NBSFI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBSFI
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBSFI"
$_LNKPRO_NBSFI
Return


####################################################################
# 3 : NBSFIT Rules ( Field ABS 0)
####################################################################

$SET_NBSFIT
If [L]_AOLDVAL<>this.NBSFIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBSFIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBSFIT
 Gosub PROPAGATE_NBSFIT
Endif
Return

$INIT_NBSFIT
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBSFIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBSFIT
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBSFIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBSFIT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBSFIT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBSFIT
[L]CURPRO = "NBSFIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBSFIT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBSFIT
[L]CURPRO = "NBSFIT"
Return

$_AOTHERS_NBSFIT
[L]CURPRO = "NBSFIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBSFIT
[L]CURPRO = "NBSFIT"
Return

$PROPAGATE_NBSFIT
this.isReadonly = 0
[L]CURPRO = "NBSFIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBSFIT
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBSFIT"
$_LNKPRO_NBSFIT
Return


####################################################################
# 5 : NBTRF Calculations ( Field ABS 0)
####################################################################

$SET_NBTRF
If [L]_AOLDVAL<>this.NBTRF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBTRF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBTRF
 Gosub PROPAGATE_NBTRF
Endif
Return

$INIT_NBTRF
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBTRF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBTRF
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBTRF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBTRF                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBTRF                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBTRF
[L]CURPRO = "NBTRF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBTRF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBTRF
[L]CURPRO = "NBTRF"
Return

$_AOTHERS_NBTRF
[L]CURPRO = "NBTRF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBTRF
[L]CURPRO = "NBTRF"
Return

$PROPAGATE_NBTRF
this.isReadonly = 0
[L]CURPRO = "NBTRF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBTRF
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "NBTRF"
$_LNKPRO_NBTRF
Return


####################################################################
# 7 : S_OBJ Object ( Field A 5)
####################################################################

$SET_S_OBJ
If [L]_AOLDVAL<>this.S_OBJ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_S_OBJ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.S_OBJ
 Gosub PROPAGATE_S_OBJ
Endif
Return

$INIT_S_OBJ
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_OBJ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_S_OBJ
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_OBJ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_S_OBJ                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_S_OBJ                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_S_OBJ
[L]CURPRO = "S_OBJ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.S_OBJ,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_S_OBJ
[L]CURPRO = "S_OBJ"
Return

$_AOTHERS_S_OBJ
[L]CURPRO = "S_OBJ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_S_OBJ
[L]CURPRO = "S_OBJ"
Return

$PROPAGATE_S_OBJ
this.isReadonly = 0
[L]CURPRO = "S_OBJ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_S_OBJ
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_OBJ"
$_LNKPRO_S_OBJ
Return


####################################################################
# 8 : S_SOC Company ( Field CPY 5)
####################################################################

$SET_S_SOC
If [L]_AOLDVAL<>this.S_SOC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_S_SOC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.S_SOC
 Gosub PROPAGATE_S_SOC
Endif
Return

$INIT_S_SOC
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_SOC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_S_SOC
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_SOC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_S_SOC                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_S_SOC                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_S_SOC
[L]CURPRO = "S_SOC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.S_SOC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_S_SOC
[L]CURPRO = "S_SOC"
If vireblc(this.S_SOC,2)<>vireblc(format$("K:5c",this.S_SOC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_S_SOC
[L]CURPRO = "S_SOC"
If vireblc(this.S_SOC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCPY.ACTRLREF(this,"S_SOC",this.S_SOC,this.S_SOC,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.S_SOC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_S_SOC
[L]CURPRO = "S_SOC"
Return

$PROPAGATE_S_SOC
this.isReadonly = 0
[L]CURPRO = "S_SOC"
Gosub _LNKPRO_S_SOC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_S_SOC
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_SOC"
$_LNKPRO_S_SOC
If vireblc(this.S_SOC,2)<>""
 # Link COMPANY
 Local File COMPANY [WCPY]
 Read [F:WCPY]CPY0 = this.S_SOC
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_SOC","$title",[F:WCPY]CPYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_SOC","$description",[F:WCPY]CPYNAM)
 Endif
 LogicClose File [WCPY]
Endif
Return


####################################################################
# 9 : S_CUR Currency ( Field CUR 3)
####################################################################

$SET_S_CUR
If [L]_AOLDVAL<>this.S_CUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_S_CUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.S_CUR
 Gosub PROPAGATE_S_CUR
Endif
Return

$INIT_S_CUR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_CUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_S_CUR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_CUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_S_CUR                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_S_CUR                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_S_CUR
[L]CURPRO = "S_CUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.S_CUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_S_CUR
[L]CURPRO = "S_CUR"
If vireblc(this.S_CUR,2)<>vireblc(format$("K:3c",this.S_CUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_S_CUR
[L]CURPRO = "S_CUR"
If vireblc(this.S_CUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"S_CUR",this.S_CUR,this.S_CUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.S_CUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_S_CUR
[L]CURPRO = "S_CUR"
Return

$PROPAGATE_S_CUR
this.isReadonly = 0
[L]CURPRO = "S_CUR"
Gosub _LNKPRO_S_CUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_S_CUR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_CUR"
$_LNKPRO_S_CUR
If vireblc(this.S_CUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.S_CUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("S_CUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("S_CUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_CUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("S_CUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("S_CUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 10 : S_BPCINV Bill-to customer ( Field BPC 15)
####################################################################

$SET_S_BPCINV
If [L]_AOLDVAL<>this.S_BPCINV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_S_BPCINV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.S_BPCINV
 Gosub PROPAGATE_S_BPCINV
Endif
Return

$INIT_S_BPCINV
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_BPCINV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_S_BPCINV
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_BPCINV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_S_BPCINV              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_S_BPCINV              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_S_BPCINV
[L]CURPRO = "S_BPCINV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.S_BPCINV,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_S_BPCINV
[L]CURPRO = "S_BPCINV"
If vireblc(this.S_BPCINV,2)<>vireblc(format$("K:15c",this.S_BPCINV),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_S_BPCINV
[L]CURPRO = "S_BPCINV"
If vireblc(this.S_BPCINV,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPC.ACTRLREF(this,"S_BPCINV",this.S_BPCINV,this.S_BPCINV,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.S_BPCINV<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_S_BPCINV
[L]CURPRO = "S_BPCINV"
Return

$PROPAGATE_S_BPCINV
this.isReadonly = 0
[L]CURPRO = "S_BPCINV"
Gosub _LNKPRO_S_BPCINV
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_S_BPCINV
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_BPCINV"
$_LNKPRO_S_BPCINV
If vireblc(this.S_BPCINV,2)<>""
 # Link BPCUSTOMER
 Local File BPCUSTOMER [WBPC]
 Read [F:WBPC]BPC0 = this.S_BPCINV
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_BPCINV","$title",[F:WBPC]BPCSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_BPCINV","$description",[F:WBPC]BPCNAM)
 Endif
 LogicClose File [WBPC]
Endif
Return


####################################################################
# 11 : S_BPCORD Sold-to ( Field BPC 15)
####################################################################

$SET_S_BPCORD
If [L]_AOLDVAL<>this.S_BPCORD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_S_BPCORD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.S_BPCORD
 Gosub PROPAGATE_S_BPCORD
Endif
Return

$INIT_S_BPCORD
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_BPCORD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_S_BPCORD
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_BPCORD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_S_BPCORD              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_S_BPCORD              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_S_BPCORD
[L]CURPRO = "S_BPCORD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.S_BPCORD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_S_BPCORD
[L]CURPRO = "S_BPCORD"
If vireblc(this.S_BPCORD,2)<>vireblc(format$("K:15c",this.S_BPCORD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_S_BPCORD
[L]CURPRO = "S_BPCORD"
If vireblc(this.S_BPCORD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPC.ACTRLREF(this,"S_BPCORD",this.S_BPCORD,this.S_BPCORD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.S_BPCORD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_S_BPCORD
[L]CURPRO = "S_BPCORD"
Return

$PROPAGATE_S_BPCORD
this.isReadonly = 0
[L]CURPRO = "S_BPCORD"
Gosub _LNKPRO_S_BPCORD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_S_BPCORD
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_BPCORD"
$_LNKPRO_S_BPCORD
If vireblc(this.S_BPCORD,2)<>""
 # Link BPCUSTOMER
 Local File BPCUSTOMER [WBPC]
 Read [F:WBPC]BPC0 = this.S_BPCORD
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_BPCORD","$title",[F:WBPC]BPCSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("S_BPCORD","$description",[F:WBPC]BPCNAM)
 Endif
 LogicClose File [WBPC]
Endif
Return


####################################################################
# 12 : S_VCRNUM Source ( Field VCR 20)
####################################################################

$SET_S_VCRNUM
If [L]_AOLDVAL<>this.S_VCRNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_S_VCRNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.S_VCRNUM
 Gosub PROPAGATE_S_VCRNUM
Endif
Return

$INIT_S_VCRNUM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_VCRNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_S_VCRNUM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_VCRNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_S_VCRNUM              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_S_VCRNUM              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_S_VCRNUM
[L]CURPRO = "S_VCRNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.S_VCRNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_S_VCRNUM
[L]CURPRO = "S_VCRNUM"
If vireblc(this.S_VCRNUM,2)<>vireblc(format$("K:20X",this.S_VCRNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_S_VCRNUM
[L]CURPRO = "S_VCRNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_S_VCRNUM
[L]CURPRO = "S_VCRNUM"
Return

$PROPAGATE_S_VCRNUM
this.isReadonly = 0
[L]CURPRO = "S_VCRNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_S_VCRNUM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "S_VCRNUM"
$_LNKPRO_S_VCRNUM
Return


####################################################################
# 13 : C_ORIVCR Source document ( Field Local menu number 476)
####################################################################

$SET_C_ORIVCR
If [L]_AOLDVAL<>this.C_ORIVCR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_C_ORIVCR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.C_ORIVCR
 Gosub PROPAGATE_C_ORIVCR
Endif
Return

$INIT_C_ORIVCR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_ORIVCR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.C_ORIVCR=0 and fmet this.AGETATTRIBUTE("C_ORIVCR","$isMandatory")="true"
 this.C_ORIVCR = 1
Endif
Return
 
$CONTROL_C_ORIVCR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_ORIVCR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_C_ORIVCR              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_C_ORIVCR              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_C_ORIVCR
[L]CURPRO = "C_ORIVCR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.C_ORIVCR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_C_ORIVCR
[L]CURPRO = "C_ORIVCR"
If this.C_ORIVCR<0 or this.C_ORIVCR>len(mess(0,476,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"476 ->"-num$(this.C_ORIVCR)-mess(99,123,1)):  Return : # Local menu "476 -> Invalid option
Endif
Return

$_AOTHERS_C_ORIVCR
[L]CURPRO = "C_ORIVCR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_C_ORIVCR
[L]CURPRO = "C_ORIVCR"
Return

$PROPAGATE_C_ORIVCR
this.isReadonly = 0
[L]CURPRO = "C_ORIVCR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_C_ORIVCR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_ORIVCR"
$_LNKPRO_C_ORIVCR
Return


####################################################################
# 14 : C_DESVCR Destination document ( Field Local menu number 476)
####################################################################

$SET_C_DESVCR
If [L]_AOLDVAL<>this.C_DESVCR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_C_DESVCR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.C_DESVCR
 Gosub PROPAGATE_C_DESVCR
Endif
Return

$INIT_C_DESVCR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_DESVCR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.C_DESVCR=0 and fmet this.AGETATTRIBUTE("C_DESVCR","$isMandatory")="true"
 this.C_DESVCR = 1
Endif
Return
 
$CONTROL_C_DESVCR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_DESVCR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_C_DESVCR              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_C_DESVCR              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_C_DESVCR
[L]CURPRO = "C_DESVCR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.C_DESVCR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_C_DESVCR
[L]CURPRO = "C_DESVCR"
If this.C_DESVCR<0 or this.C_DESVCR>len(mess(0,476,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"476 ->"-num$(this.C_DESVCR)-mess(99,123,1)):  Return : # Local menu "476 -> Invalid option
Endif
Return

$_AOTHERS_C_DESVCR
[L]CURPRO = "C_DESVCR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_C_DESVCR
[L]CURPRO = "C_DESVCR"
Return

$PROPAGATE_C_DESVCR
this.isReadonly = 0
[L]CURPRO = "C_DESVCR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_C_DESVCR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_DESVCR"
$_LNKPRO_C_DESVCR
Return


####################################################################
# 15 : C_BRDRUL Split rule ( Field Local menu number 473)
####################################################################

$SET_C_BRDRUL
If [L]_AOLDVAL<>this.C_BRDRUL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_C_BRDRUL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.C_BRDRUL
 Gosub PROPAGATE_C_BRDRUL
Endif
Return

$INIT_C_BRDRUL
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_BRDRUL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.C_BRDRUL=0 and fmet this.AGETATTRIBUTE("C_BRDRUL","$isMandatory")="true"
 this.C_BRDRUL = 1
Endif
Return
 
$CONTROL_C_BRDRUL
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_BRDRUL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_C_BRDRUL              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_C_BRDRUL              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_C_BRDRUL
[L]CURPRO = "C_BRDRUL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.C_BRDRUL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_C_BRDRUL
[L]CURPRO = "C_BRDRUL"
If this.C_BRDRUL<0 or this.C_BRDRUL>len(mess(0,473,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"473 ->"-num$(this.C_BRDRUL)-mess(99,123,1)):  Return : # Local menu "473 -> Invalid option
Endif
Return

$_AOTHERS_C_BRDRUL
[L]CURPRO = "C_BRDRUL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_C_BRDRUL
[L]CURPRO = "C_BRDRUL"
Return

$PROPAGATE_C_BRDRUL
this.isReadonly = 0
[L]CURPRO = "C_BRDRUL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_C_BRDRUL
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_BRDRUL"
$_LNKPRO_C_BRDRUL
Return


####################################################################
# 16 : C_GRUFLG Grouping ( Field Local menu number 474)
####################################################################

$SET_C_GRUFLG
If [L]_AOLDVAL<>this.C_GRUFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_C_GRUFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.C_GRUFLG
 Gosub PROPAGATE_C_GRUFLG
Endif
Return

$INIT_C_GRUFLG
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_GRUFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.C_GRUFLG=0 and fmet this.AGETATTRIBUTE("C_GRUFLG","$isMandatory")="true"
 this.C_GRUFLG = 1
Endif
Return
 
$CONTROL_C_GRUFLG
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_GRUFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_C_GRUFLG              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_C_GRUFLG              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_C_GRUFLG
[L]CURPRO = "C_GRUFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.C_GRUFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_C_GRUFLG
[L]CURPRO = "C_GRUFLG"
If this.C_GRUFLG<0 or this.C_GRUFLG>len(mess(0,474,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"474 ->"-num$(this.C_GRUFLG)-mess(99,123,1)):  Return : # Local menu "474 -> Invalid option
Endif
Return

$_AOTHERS_C_GRUFLG
[L]CURPRO = "C_GRUFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_C_GRUFLG
[L]CURPRO = "C_GRUFLG"
Return

$PROPAGATE_C_GRUFLG
this.isReadonly = 0
[L]CURPRO = "C_GRUFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_C_GRUFLG
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_GRUFLG"
$_LNKPRO_C_GRUFLG
Return


####################################################################
# 17 : C_GRURUL Grouping rule ( Field Local menu number 472)
####################################################################

$SET_C_GRURUL
If [L]_AOLDVAL<>this.C_GRURUL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_C_GRURUL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.C_GRURUL
 Gosub PROPAGATE_C_GRURUL
Endif
Return

$INIT_C_GRURUL
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_GRURUL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.C_GRURUL=0 and fmet this.AGETATTRIBUTE("C_GRURUL","$isMandatory")="true"
 this.C_GRURUL = 1
Endif
Return
 
$CONTROL_C_GRURUL
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_GRURUL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_C_GRURUL              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_C_GRURUL              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_C_GRURUL
[L]CURPRO = "C_GRURUL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.C_GRURUL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_C_GRURUL
[L]CURPRO = "C_GRURUL"
If this.C_GRURUL<0 or this.C_GRURUL>len(mess(0,472,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"472 ->"-num$(this.C_GRURUL)-mess(99,123,1)):  Return : # Local menu "472 -> Invalid option
Endif
Return

$_AOTHERS_C_GRURUL
[L]CURPRO = "C_GRURUL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_C_GRURUL
[L]CURPRO = "C_GRURUL"
Return

$PROPAGATE_C_GRURUL
this.isReadonly = 0
[L]CURPRO = "C_GRURUL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_C_GRURUL
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "C_GRURUL"
$_LNKPRO_C_GRURUL
Return


####################################################################
# 18 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 19 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 20 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 21 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 22 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0SFITRF
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




