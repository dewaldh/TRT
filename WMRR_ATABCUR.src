#<AdxTL>@(#)0.0.0.0 $Revision$Class Currency
# Supervisor
## CRUD-CLASSE ## ATABCUR
# 2018-08-27 13:03:02 566


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABCUR [TCU_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ATABCUR") From ASYRCOM : Endif
Local Instance ATABCUR Using R_ATABCUR

If !SILENCE : Call TRACE("3 --> New Instance R_ATABCUR") From ASYRCOM : Endif
ATABCUR = NewInstance R_ATABCUR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TCU_]TCU0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ATABCUR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.AREAD([TCU_]CUR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ATABCUR.TCU.CUR ="-num$(ATABCUR.TCU.CUR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ATABCUR.TCU.AKEYS)
  Call TRACE("-"-num$(I)-":"-ATABCUR.TCU.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TCU_]
FreeGroup ATABCUR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ATABCUR,ACLE,ASTATUS,_ETAG)
Variable Instance ATABCUR Using R_ATABCUR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CUR(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CUR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABCUR [TCU]
Default File [F:TCU]
Read [F:TCU]TCU0 = [L]_CUR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TCU]UPDTICK)>0
 [L]_ETAG = num$([F:TCU]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ATABCUR,ACLE,ASTATUS)
Variable Instance ATABCUR Using R_ATABCUR
Value Char ACLE
Variable Integer ASTATUS
Local Char _CUR(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CUR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.AREAD([L]_CUR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ATABCUR,_CUR,ASTATUS)
Variable Instance ATABCUR Using R_ATABCUR
Value Char _CUR
Variable Integer ASTATUS

If ATABCUR = null : End : Endif

Gosub AVARIABLES From WMR00ATABCUR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ATABCUR.APARENT=null
 [L]A_I = ATABCUR.freeSnapshot
 ATABCUR.snapshotEnabled = 0
 ATABCUR.setAccessorEnabled = 0
Endif

If fmet ATABCUR.ACTX.AGETAFCRIGHT(ATABCUR,"GESTCU",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TCU]
Read [F:TCU]TCU0 = [L]_CUR
If fstat
[L]A_ERROR = [L]_CUR
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATABCUR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet ATABCUR.ACTX.AGETAFCRIGHTR(ATABCUR,"GESTCU",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet ATABCUR.ACTX.ASTACRITROLE(ATABCUR,[L]_CUR
& ,"TCU","TCU",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ATABCUR.TCU.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.AREAD([L]_CUR))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ATABCUR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ATABCUR.APARENT=null
 ATABCUR.snapshotEnabled = 1
 ATABCUR.setAccessorEnabled = 1
Endif
LogicClose File [TCU] ,[TCH]
End



