#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule SADSOH

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".SORDER" : If clalev([F:SOH])=0 : Local File =OUVTAB [SOH] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [SOH]"
Link [SOH] With
& [CPY]CPY0 = [F:SOH]CPY
& As [LNK_]
& Order By Key CLE = [SOH]SOHNUM
FILTRE = ""
Return

$FERME
If clalev([F:SOH]) : Close local File [SOH] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..1)
Local Integer DTYP(1..1)
Local Integer NBDCLE
NBDCLE = 1
DCLE(1) = "SOHNUM"
DTYP(1) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]SOHNUM)>0
 [F:AAA_]SOHNUM = [F:SOH]SOHNUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]SOHNUM=[F:SOH]SOHNUM"

End

$MAJFLD
### SOHNUM
[L]FLD="SOHNUM"
[L]FORMULE='[F:SOH]SOHNUM'
If dim([F:AAA_]SOHNUM)>0
 [F:AAA_]SOHNUM = [F:SOH]SOHNUM
Endif

### SOHNUMLNK
[L]FLD="SOHNUMLNK"
[L]FORMULE='[F:SOH]SOHNUM'
If dim([F:AAA_]SOHNUMLNK)>0
 [F:AAA_]SOHNUMLNK = [F:SOH]SOHNUM
Endif

### SOHTYP
[L]FLD="SOHTYP"
[L]FORMULE='[F:SOH]SOHTYP'
If dim([F:AAA_]SOHTYP)>0
 [F:AAA_]SOHTYP = [F:SOH]SOHTYP
Endif

### SOHTYP_LEG
[L]FLD="SOHTYP_LEG"
[L]FORMULE='func TRTX3BIVEN.GETLEG_SOHTYP([F:AAA_]SOHTYP,[F:CPY]LEG)'
If dim([F:AAA_]SOHTYP_LEG)>0
 [F:AAA_]SOHTYP_LEG = func TRTX3BIVEN.GETLEG_SOHTYP([F:AAA_]SOHTYP,[F:CPY]LEG)
Endif

### SOHCAT
[L]FLD="SOHCAT"
[L]FORMULE='[F:SOH]SOHCAT'
If dim([F:AAA_]SOHCAT)>0
 [F:AAA_]SOHCAT = [F:SOH]SOHCAT
Endif

### ORDDAT
[L]FLD="ORDDAT"
[L]FORMULE='[F:SOH]ORDDAT'
If dim([F:AAA_]ORDDAT)>0
 [F:AAA_]ORDDAT = [F:SOH]ORDDAT
Endif

### REVNUM
[L]FLD="REVNUM"
[L]FORMULE='[F:SOH]REVNUM'
If dim([F:AAA_]REVNUM)>0
 [F:AAA_]REVNUM = [F:SOH]REVNUM
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:SOH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:SOH]EECICT
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:SOH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:SOH]FFWNUM
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:SOH]VACBPR'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:SOH]VACBPR
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:SOH]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:SOH]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:SOH]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:SOH]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### BPCNAM
[L]FLD="BPCNAM"
[L]FORMULE='[F:SOH]BPCNAM'
If dim([F:AAA_]BPCNAM)>0
 [F:AAA_]BPCNAM = [F:SOH]BPCNAM
Endif

### CNTNAM
[L]FLD="CNTNAM"
[L]FORMULE='[F:SOH]CNTNAM'
If dim([F:AAA_]CNTNAM)>0
 [F:AAA_]CNTNAM = [F:SOH]CNTNAM
Endif

### BPCPOSCOD
[L]FLD="BPCPOSCOD"
[L]FORMULE='vireblc([F:SOH]BPCPOSCOD,1)'
If dim([F:AAA_]BPCPOSCOD)>0
 [F:AAA_]BPCPOSCOD = vireblc([F:SOH]BPCPOSCOD,1)
Endif

### BPCCTY
[L]FLD="BPCCTY"
[L]FORMULE='[F:SOH]BPCCTY'
If dim([F:AAA_]BPCCTY)>0
 [F:AAA_]BPCCTY = [F:SOH]BPCCTY
Endif

### BPCCRY
[L]FLD="BPCCRY"
[L]FORMULE='[F:SOH]BPCCRY'
If dim([F:AAA_]BPCCRY)>0
 [F:AAA_]BPCCRY = [F:SOH]BPCCRY
Endif

### BPDNAM
[L]FLD="BPDNAM"
[L]FORMULE='[F:SOH]BPDNAM'
If dim([F:AAA_]BPDNAM)>0
 [F:AAA_]BPDNAM = [F:SOH]BPDNAM
Endif

### CNDNAM
[L]FLD="CNDNAM"
[L]FORMULE='[F:SOH]CNDNAM'
If dim([F:AAA_]CNDNAM)>0
 [F:AAA_]CNDNAM = [F:SOH]CNDNAM
Endif

### BPDPOSCOD
[L]FLD="BPDPOSCOD"
[L]FORMULE='vireblc([F:SOH]BPDPOSCOD,1)'
If dim([F:AAA_]BPDPOSCOD)>0
 [F:AAA_]BPDPOSCOD = vireblc([F:SOH]BPDPOSCOD,1)
Endif

### BPDCTY
[L]FLD="BPDCTY"
[L]FORMULE='[F:SOH]BPDCTY'
If dim([F:AAA_]BPDCTY)>0
 [F:AAA_]BPDCTY = [F:SOH]BPDCTY
Endif

### BPDCRY
[L]FLD="BPDCRY"
[L]FORMULE='[F:SOH]BPDCRY'
If dim([F:AAA_]BPDCRY)>0
 [F:AAA_]BPDCRY = [F:SOH]BPDCRY
Endif

### BPINAM
[L]FLD="BPINAM"
[L]FORMULE='[F:SOH]BPINAM'
If dim([F:AAA_]BPINAM)>0
 [F:AAA_]BPINAM = [F:SOH]BPINAM
Endif

### CNINAM
[L]FLD="CNINAM"
[L]FORMULE='[F:SOH]CNINAM'
If dim([F:AAA_]CNINAM)>0
 [F:AAA_]CNINAM = [F:SOH]CNINAM
Endif

### BPIPOSCOD
[L]FLD="BPIPOSCOD"
[L]FORMULE='vireblc([F:SOH]BPIPOSCOD,1)'
If dim([F:AAA_]BPIPOSCOD)>0
 [F:AAA_]BPIPOSCOD = vireblc([F:SOH]BPIPOSCOD,1)
Endif

### BPICTY
[L]FLD="BPICTY"
[L]FORMULE='[F:SOH]BPICTY'
If dim([F:AAA_]BPICTY)>0
 [F:AAA_]BPICTY = [F:SOH]BPICTY
Endif

### BPICRY
[L]FLD="BPICRY"
[L]FORMULE='[F:SOH]BPICRY'
If dim([F:AAA_]BPICRY)>0
 [F:AAA_]BPICRY = [F:SOH]BPICRY
Endif

### SDHTYP
[L]FLD="SDHTYP"
[L]FORMULE='[F:SOH]SDHTYP'
If dim([F:AAA_]SDHTYP)>0
 [F:AAA_]SDHTYP = [F:SOH]SDHTYP
Endif

### SDHTYP_LEG
[L]FLD="SDHTYP_LEG"
[L]FORMULE='func TRTX3BIVEN.GETLEG_SDHTYP([F:AAA_]SDHTYP,[F:CPY]LEG)'
If dim([F:AAA_]SDHTYP_LEG)>0
 [F:AAA_]SDHTYP_LEG = func TRTX3BIVEN.GETLEG_SDHTYP([F:AAA_]SDHTYP,[F:CPY]LEG)
Endif


Return

