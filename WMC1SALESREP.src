#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales rep
# Supervisor
## ACLA-CLASSE ## SALESREP
# 2018-08-27 12:43:57 532


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : REPNUM Sales rep ( Field REP 15)
####################################################################

$SET_REPNUM
If [L]_AOLDVAL<>this.REPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REPNUM
 Gosub PROPAGATE_REPNUM
Endif
Return

$INIT_REPNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "REPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REPNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "REPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REPNUM
[L]CURPRO = "REPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.REPNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REPNUM
[L]CURPRO = "REPNUM"
If vireblc(this.REPNUM,2)<>vireblc(format$("K:15c",this.REPNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_REPNUM
[L]CURPRO = "REPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REPNUM
[L]CURPRO = "REPNUM"
Return

$PROPAGATE_REPNUM
this.isReadonly = 0
[L]CURPRO = "REPNUM"
Gosub _LNKPRO_REPNUM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REPNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "REPNUM"
$_LNKPRO_REPNUM
If vireblc(this.REPNUM,2)<>""
 # Link SALESREP
 Local File SALESREP [WREP]
 Read [F:WREP]REP0 = this.REPNUM
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("REPNUM","$description",[F:WREP]REPNAM)
 Endif
 LogicClose File [WREP]
Endif
Return

$_ALOADATTRIBUTE_REPNUM
[L]ASTATUS = fmet this.ASETATTRIBUTE("REPNUM","$isMandatory","true")
Return


####################################################################
# 2 : REPNAM Last name ( Field NAM 35)
####################################################################

$SET_REPNAM
If [L]_AOLDVAL<>this.REPNAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REPNAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REPNAM
 Gosub PROPAGATE_REPNAM
Endif
Return

$INIT_REPNAM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "REPNAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REPNAM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "REPNAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REPNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REPNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REPNAM
[L]CURPRO = "REPNAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.REPNAM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REPNAM
[L]CURPRO = "REPNAM"
If vireblc(this.REPNAM,2)<>vireblc(format$("K:35X",this.REPNAM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_REPNAM
[L]CURPRO = "REPNAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REPNAM
[L]CURPRO = "REPNAM"
Return

$PROPAGATE_REPNAM
this.isReadonly = 0
[L]CURPRO = "REPNAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REPNAM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "REPNAM"
$_LNKPRO_REPNAM
Return


####################################################################
# 3 : COMBAS Commission base ( Field Local menu number 405)
####################################################################

$SET_COMBAS
If [L]_AOLDVAL<>this.COMBAS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COMBAS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COMBAS
 Gosub PROPAGATE_COMBAS
Endif
Return

$INIT_COMBAS
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMBAS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.COMBAS=0 and fmet this.AGETATTRIBUTE("COMBAS","$isMandatory")="true"
 this.COMBAS = 1
Endif
Return
 
$CONTROL_COMBAS
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMBAS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COMBAS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COMBAS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COMBAS
[L]CURPRO = "COMBAS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.COMBAS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COMBAS
[L]CURPRO = "COMBAS"
If this.COMBAS<0 or this.COMBAS>len(mess(0,405,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"405 ->"-num$(this.COMBAS)-mess(99,123,1)):  Return : # Local menu "405 -> Invalid option
Endif
Return

$_AOTHERS_COMBAS
[L]CURPRO = "COMBAS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COMBAS
[L]CURPRO = "COMBAS"
Return

$PROPAGATE_COMBAS
this.isReadonly = 0
[L]CURPRO = "COMBAS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COMBAS
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMBAS"
$_LNKPRO_COMBAS
Return


####################################################################
# 4 : COMFOR1 Commission formula 1 ( Field FOR 3)
####################################################################

$SET_COMFOR1
If [L]_AOLDVAL<>this.COMFOR1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COMFOR1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COMFOR1
 Gosub PROPAGATE_COMFOR1
Endif
Return

$INIT_COMFOR1
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMFOR1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COMFOR1
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMFOR1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COMFOR1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COMFOR1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COMFOR1
[L]CURPRO = "COMFOR1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COMFOR1,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COMFOR1
[L]CURPRO = "COMFOR1"
If vireblc(this.COMFOR1,2)<>vireblc(format$("K:3c",this.COMFOR1),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COMFOR1
[L]CURPRO = "COMFOR1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COMFOR1
[L]CURPRO = "COMFOR1"
If vireblc(this.COMFOR1,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFOR.ACTRLREF(this,"COMFOR1",this.COMFOR1,0,this.COMFOR1,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.COMFOR1<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_COMFOR1
this.isReadonly = 0
[L]CURPRO = "COMFOR1"
Gosub _LNKPRO_COMFOR1
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COMFOR1
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMFOR1"
$_LNKPRO_COMFOR1
If vireblc(this.COMFOR1,2)<>""
 # Link TABFOR
 Local File TABFOR [WTFO]
 Read [F:WTFO]TFO0 = 0;this.COMFOR1
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DESSHO" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COMFOR1","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DES" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COMFOR1","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTFO]
Endif
Return


####################################################################
# 5 : COMFOR2 Commission formula 2 ( Field FOR 3)
####################################################################

$SET_COMFOR2
If [L]_AOLDVAL<>this.COMFOR2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COMFOR2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COMFOR2
 Gosub PROPAGATE_COMFOR2
Endif
Return

$INIT_COMFOR2
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMFOR2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COMFOR2
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMFOR2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COMFOR2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COMFOR2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COMFOR2
[L]CURPRO = "COMFOR2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COMFOR2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COMFOR2
[L]CURPRO = "COMFOR2"
If vireblc(this.COMFOR2,2)<>vireblc(format$("K:3c",this.COMFOR2),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COMFOR2
[L]CURPRO = "COMFOR2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COMFOR2
[L]CURPRO = "COMFOR2"
If vireblc(this.COMFOR2,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFOR.ACTRLREF(this,"COMFOR2",this.COMFOR2,0,this.COMFOR2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.COMFOR2<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_COMFOR2
this.isReadonly = 0
[L]CURPRO = "COMFOR2"
Gosub _LNKPRO_COMFOR2
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COMFOR2
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "COMFOR2"
$_LNKPRO_COMFOR2
If vireblc(this.COMFOR2,2)<>""
 # Link TABFOR
 Local File TABFOR [WTFO]
 Read [F:WTFO]TFO0 = 0;this.COMFOR2
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DESSHO" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COMFOR2","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DES" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COMFOR2","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTFO]
Endif
Return


####################################################################
# 7 : ACCCOD Accounting code ( Field CAC 10)
####################################################################

$SET_ACCCOD
If [L]_AOLDVAL<>this.ACCCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCCOD
 Gosub PROPAGATE_ACCCOD
Endif
Return

$INIT_ACCCOD
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "ACCCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCCOD
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "ACCCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCCOD
[L]CURPRO = "ACCCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCCOD
[L]CURPRO = "ACCCOD"
If vireblc(this.ACCCOD,2)<>vireblc(format$("K:10c",this.ACCCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCCOD
[L]CURPRO = "ACCCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCCOD
[L]CURPRO = "ACCCOD"
Return

$PROPAGATE_ACCCOD
this.isReadonly = 0
[L]CURPRO = "ACCCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCCOD
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "ACCCOD"
$_LNKPRO_ACCCOD
Return


####################################################################
# 9 : OBJCLL Call objective ( Field L 8)
####################################################################

$SET_OBJCLL
If [L]_AOLDVAL<>this.OBJCLL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OBJCLL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OBJCLL
 Gosub PROPAGATE_OBJCLL
Endif
Return

$INIT_OBJCLL
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "OBJCLL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OBJCLL
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "OBJCLL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OBJCLL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OBJCLL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OBJCLL
[L]CURPRO = "OBJCLL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OBJCLL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OBJCLL
[L]CURPRO = "OBJCLL"
Return

$_AOTHERS_OBJCLL
[L]CURPRO = "OBJCLL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OBJCLL
[L]CURPRO = "OBJCLL"
Return

$PROPAGATE_OBJCLL
this.isReadonly = 0
[L]CURPRO = "OBJCLL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OBJCLL
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "OBJCLL"
$_LNKPRO_OBJCLL
Return


####################################################################
# 10 : CLLDEL No. of late calls ( Field L 8)
####################################################################

$SET_CLLDEL
If [L]_AOLDVAL<>this.CLLDEL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CLLDEL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CLLDEL
 Gosub PROPAGATE_CLLDEL
Endif
Return

$INIT_CLLDEL
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CLLDEL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CLLDEL
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CLLDEL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CLLDEL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CLLDEL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CLLDEL
[L]CURPRO = "CLLDEL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CLLDEL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CLLDEL
[L]CURPRO = "CLLDEL"
Return

$_AOTHERS_CLLDEL
[L]CURPRO = "CLLDEL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CLLDEL
[L]CURPRO = "CLLDEL"
Return

$PROPAGATE_CLLDEL
this.isReadonly = 0
[L]CURPRO = "CLLDEL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CLLDEL
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CLLDEL"
$_LNKPRO_CLLDEL
Return


####################################################################
# 11 : NSE No. of reschedules ( Field L 8)
####################################################################

$SET_NSE
If [L]_AOLDVAL<>this.NSE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NSE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NSE
 Gosub PROPAGATE_NSE
Endif
Return

$INIT_NSE
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "NSE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NSE
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "NSE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NSE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NSE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NSE
[L]CURPRO = "NSE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NSE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NSE
[L]CURPRO = "NSE"
Return

$_AOTHERS_NSE
[L]CURPRO = "NSE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NSE
[L]CURPRO = "NSE"
Return

$PROPAGATE_NSE
this.isReadonly = 0
[L]CURPRO = "NSE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NSE
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "NSE"
$_LNKPRO_NSE
Return


####################################################################
# 12 : FCY Sales site ( Field FCY 5)
####################################################################

$SET_FCY
If [L]_AOLDVAL<>this.FCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FCY
 Gosub PROPAGATE_FCY
Endif
Return

$INIT_FCY
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "FCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FCY
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "FCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FCY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FCY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FCY
[L]CURPRO = "FCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FCY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FCY
[L]CURPRO = "FCY"
If vireblc(this.FCY,2)<>vireblc(format$("K:5c",this.FCY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FCY
[L]CURPRO = "FCY"
If vireblc(this.FCY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFCY.ACTRLREF(this,"FCY",this.FCY,this.FCY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FCY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FCY
[L]CURPRO = "FCY"
Return

$PROPAGATE_FCY
this.isReadonly = 0
[L]CURPRO = "FCY"
Gosub _LNKPRO_FCY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FCY
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "FCY"
$_LNKPRO_FCY
If vireblc(this.FCY,2)<>""
 # Link FACILITY
 Local File FACILITY [WFCY]
 Read [F:WFCY]FCY0 = this.FCY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FCY","$title",[F:WFCY]FCYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FCY","$description",[F:WFCY]FCYNAM)
 Endif
 LogicClose File [WFCY]
Endif
Return


####################################################################
# 13 : AUSNUM User code ( Field AUS 5)
####################################################################

$SET_AUSNUM
If [L]_AOLDVAL<>this.AUSNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUSNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUSNUM
 Gosub PROPAGATE_AUSNUM
Endif
Return

$INIT_AUSNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "AUSNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUSNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "AUSNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUSNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUSNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUSNUM
[L]CURPRO = "AUSNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.AUSNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUSNUM
[L]CURPRO = "AUSNUM"
If vireblc(this.AUSNUM,2)<>vireblc(format$("K:5B",this.AUSNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_AUSNUM
[L]CURPRO = "AUSNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUSNUM
[L]CURPRO = "AUSNUM"
Return

$PROPAGATE_AUSNUM
this.isReadonly = 0
[L]CURPRO = "AUSNUM"
Gosub _LNKPRO_AUSNUM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUSNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "AUSNUM"
$_LNKPRO_AUSNUM
If vireblc(this.AUSNUM,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.AUSNUM
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("AUSNUM","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("AUSNUM","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 14 : CFY Company ( Field CPY 5)
####################################################################

$SET_CFY
If [L]_AOLDVAL<>this.CFY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CFY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CFY
 Gosub PROPAGATE_CFY
Endif
Return

$INIT_CFY
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CFY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CFY
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CFY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CFY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CFY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CFY
[L]CURPRO = "CFY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CFY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CFY
[L]CURPRO = "CFY"
If vireblc(this.CFY,2)<>vireblc(format$("K:5c",this.CFY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CFY
[L]CURPRO = "CFY"
If vireblc(this.CFY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCPY.ACTRLREF(this,"CFY",this.CFY,this.CFY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CFY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CFY
[L]CURPRO = "CFY"
Return

$PROPAGATE_CFY
this.isReadonly = 0
[L]CURPRO = "CFY"
Gosub _LNKPRO_CFY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CFY
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CFY"
$_LNKPRO_CFY
If vireblc(this.CFY,2)<>""
 # Link COMPANY
 Local File COMPANY [WCPY]
 Read [F:WCPY]CPY0 = this.CFY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CFY","$title",[F:WCPY]CPYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CFY","$description",[F:WCPY]CPYNAM)
 Endif
 LogicClose File [WCPY]
Endif
Return


####################################################################
# 15 : CUR Currency ( Field CUR 3)
####################################################################

$SET_CUR
If [L]_AOLDVAL<>this.CUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CUR
 Gosub PROPAGATE_CUR
Endif
Return

$INIT_CUR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CUR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CUR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CUR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CUR
[L]CURPRO = "CUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CUR
[L]CURPRO = "CUR"
If vireblc(this.CUR,2)<>vireblc(format$("K:3c",this.CUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CUR
[L]CURPRO = "CUR"
If vireblc(this.CUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CUR",this.CUR,this.CUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CUR
[L]CURPRO = "CUR"
Return

$PROPAGATE_CUR
this.isReadonly = 0
[L]CURPRO = "CUR"
Gosub _LNKPRO_CUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CUR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CUR"
$_LNKPRO_CUR
If vireblc(this.CUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 16 : BPAADD Default address ( Field ADR 5)
####################################################################

$SET_BPAADD
If [L]_AOLDVAL<>this.BPAADD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPAADD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPAADD
 Gosub PROPAGATE_BPAADD
Endif
Return

$INIT_BPAADD
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "BPAADD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BPAADD
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "BPAADD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPAADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPAADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPAADD
[L]CURPRO = "BPAADD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BPAADD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPAADD
[L]CURPRO = "BPAADD"
If vireblc(this.BPAADD,2)<>vireblc(format$("K:5c",this.BPAADD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BPAADD
[L]CURPRO = "BPAADD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPAADD
[L]CURPRO = "BPAADD"
If vireblc(this.BPAADD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPADR.ACTRLREF(this,"BPAADD",this.BPAADD,1,this.REPNUM,this.BPAADD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BPAADD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_BPAADD
this.isReadonly = 0
[L]CURPRO = "BPAADD"
Gosub _LNKPRO_BPAADD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPAADD
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "BPAADD"
$_LNKPRO_BPAADD
If vireblc(this.BPAADD,2)<>""
 # Link BPADDRESS
 Local File BPADDRESS [WBPA]
 Read [F:WBPA]BPA0 = 1;this.REPNUM;this.BPAADD
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("BPAADD","$description",[F:WBPA]BPADES)
 Endif
 LogicClose File [WBPA]
Endif
Return


####################################################################
# 19 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return


####################################################################
# 20 : CREUSR Creation user ( Field A 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
Return


####################################################################
# 21 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 22 : UPDUSR Change user ( Field A 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
Return


####################################################################
# 23 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 24 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 25 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 26 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0SALESREP
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return




