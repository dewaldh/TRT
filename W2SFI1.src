#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SFI1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_CLCDEB
Onevent INIT_AREA Call D_CLCDEB(zc) From W2SFI1
Onevent BEFORE_INPUT Call AS_CLCDEB(zc) From W2SFI1
Return

Subprog D_CLCDEB(VALEUR)
Variable Integer VALEUR
If varinit([M]CLCDEB,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CLCDEB(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INVFOOGRU
Onevent AFTER_CHANGE Gosub AMM_INVFOOGRU From W2SFI1
Return

$AMM_INVFOOGRU
Call AM_INVFOOGRU(zc)
If !mkstat & GOBJET
 zoncou = "INVFOOGRU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INVFOOGRU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_INVFOOGRU(VALEUR) From SUBSFI
If mkstat : GERR = 1 : GZONE = "INVFOOGRU" : GZNUM = 5920 : Endif
Gosub _AFF
End

$ON_ACCCOD
Onevent CONTROL Call C_ACCCOD(zc) From W2SFI1
Onevent INIT_AREA Call D_ACCCOD(zc) From W2SFI1
Onevent BEFORE_INPUT Call AS_ACCCOD(zc) From W2SFI1
Onevent AFTER_CHANGE Gosub AMM_ACCCOD From W2SFI1
Return

Subprog D_ACCCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]ACCCOD,indice)=0
 ## Action INITACCCOD
 Call INITACCCOD(VALEUR,11) From TRTX3
Endif
Gosub _AFF
End

Subprog AS_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3946,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ACCCOD(zc) From W2SFI1
Onkey   2 Titled GBOUTS Call S_ACCCOD(zc) From W2SFI1
Onkey 144 Titled GBOUTP Call P_ACCCOD(zc) From W2SFI1
Onkey 146 Titled GBOUTA Call SA_ACCCOD(zc) From W2SFI1
Gosub _AFF
End

Subprog C_ACCCOD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
If !mkstat
 ## Action CONTCAC
 Call CONTCAC(VALEUR,"11") From SUBCAC
 If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CAC","",VALEUR,"11",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
  If !mkstat
   ## Action CONTACCCOD
   Call CONTACCCOD(VALEUR,11) From TRTX3
   If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ACCCOD
Call AM_ACCCOD(zc)
If !mkstat & GOBJET
 zoncou = "ACCCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZACCCOD)")>indice
 [M]ACCCOD(indice) = VALEUR
 Affzo ZACCCOD(indice)
Endif
Gosub _AFF
End

Subprog S_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELCAC
 Call SELCAC(VALEUR,"11") From SUBCAC
Endif
Gosub _AFF
End

Subprog B1_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNCAC
 Call TUNCAC(VALEUR,"11") From SUBCAC
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CAC"
PARMSK(2) = "11"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "11"
Call VISU("CAC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZACCCOD
Onevent BEFORE_AREA Gosub AV_ZACCCOD From W2SFI1
Return

$AV_ZACCCOD
Call LECTEXTRA(zc,"GACCCODE","SHOTRA","11",num$([M]ACCCOD(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_DSP
Onevent AFTER_CHANGE Gosub AMM_DSP From W2SFI1
Onevent CONTROL Call C_DSP(zc) From W2SFI1
Onevent BEFORE_INPUT Call AS_DSP(zc) From W2SFI1
Return

Subprog AS_DSP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4805,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DSP(zc) From W2SFI1
Onkey   2 Titled GBOUTS Call S_DSP(zc) From W2SFI1
Onkey 144 Titled GBOUTP Call P_DSP(zc) From W2SFI1
Onkey 146 Titled GBOUTA Call SA_DSP(zc) From W2SFI1
Gosub _AFF
End

Subprog C_DSP(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("DSP","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "DSP" : GZNUM = 3022 : Endif
Gosub _AFF
End

$AMM_DSP
Call AM_DSP(zc)
If !mkstat & GOBJET
 zoncou = "DSP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DSP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_DSP(VALEUR) From SUBSFI
If mkstat : GERR = 1 : GZONE = "DSP" : GZNUM = 3022 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZDSP)")>indice
 [M]DSP(indice) = VALEUR
 Affzo ZDSP(indice)
Endif
Gosub _AFF
End

Subprog S_DSP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "DSP"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_DSP(VALEUR)
Variable Char    VALEUR()
Call OBJET("DSP",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_DSP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "DSP"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_DSP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("DSP",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZDSP
Onevent BEFORE_AREA Gosub AV_ZDSP From W2SFI1
Return

$AV_ZDSP
Call LECTEXTRA(zc,"CADSP","SHOTRA",num$([M]DSP(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_NBAXE
Onevent BEFORE_INPUT Call AS_NBAXE From W2SFI1
Return

Subprog AS_NBAXE
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NBAXE From SUBSFI
Gosub _AFF
End

$ON_DIE
Return

$ON_ZDIE
Onevent BEFORE_AREA Gosub AV_ZDIE From W2SFI1
Return

$AV_ZDIE
Call LECTEXTRA(zc,"GDIE","SHOTRA",num$([M]DIE(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_CCE
Onevent BEFORE_AREA Gosub AV_CCE From W2SFI1
Onevent CONTROL Call C_CCE(zc) From W2SFI1
Onevent BEFORE_INPUT Call AS_CCE(zc) From W2SFI1
Onevent AFTER_CHANGE Gosub AMM_CCE From W2SFI1
Return

$AV_CCE
## Action INICCEFMT
Call INICCEFMT(num$([M]DIE(nolign-1))) From SETGLBDIE
If GCCEFMT<>""
 Chgfmt [M]CCE(indice) With "K:"+GCCEFMT
Else
 Chgfmt [M]CCE(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_CCE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3531,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CCE(zc) From W2SFI1
Onkey   2 Titled GBOUTS Call S_CCE(zc) From W2SFI1
Onkey 144 Titled GBOUTP Call P_CCE(zc) From W2SFI1
Onkey 146 Titled GBOUTA Call SA_CCE(zc) From W2SFI1
Gosub _AFF
End

Subprog C_CCE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CCECHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CCECHOICE"
 PARMSK(1) = num$([M]DIE(nolign-1))
 Call S_TAB_CHAR(VALEUR,PARMSK,"CCECHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CCE" : GZNUM = 3997 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CCE","!",VALEUR,num$([M]DIE(nolign-1)),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CCE" : GZNUM = 3997 : Endif
 If !mkstat
  ## Action CNTCCE
  Call SECTION(VALEUR,1,"",[0/0/0],[M]DIE(nolign-1)) From SUPCPT
  If mkstat : GERR = 1 : GZONE = "CCE" : GZNUM = 3997 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CCE
Call AM_CCE(zc)
If !mkstat & GOBJET
 zoncou = "CCE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CCE(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCCE)")>indice
 [M]CCE(indice) = VALEUR
 Affzo ZCCE(indice)
Endif
Gosub _AFF
End

Subprog S_CCE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CCE"
PARMSK(2) = "!"
PARMSK(3) = num$([M]DIE(nolign-1))
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CCE(VALEUR)
Variable Char    VALEUR()
Call OBJET("CCE",VALEUR,num$([M]DIE(nolign-1))) From GOBJET
Gosub _AFF
End

Subprog SA_CCE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CCE"
PARMSK(2) = num$([M]DIE(nolign-1))
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CCE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$([M]DIE(nolign-1))
Call VISU("CCE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCCE
Onevent BEFORE_AREA Gosub AV_ZCCE From W2SFI1
Return

$AV_ZCCE
Call LECTEXTRA(zc,"CACCE","DESTRA",num$([M]DIE(nolign-1)),num$([M]CCE(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_NBREG
Onevent BEFORE_LINE Call AVANT_NBREG From W2SFI1
Onevent AFTER_LINE Call APRES_NBREG From W2SFI1
Return

Subprog AVANT_NBREG
Local Decimal BASPAG
## Action STD
Call AVANT_NBREG From SUBSFI
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBREG
Local Decimal BASPAG
## Action STD
Call APRES_NBREG From SUBSFI
If mkstat : End : Endif
Gosub _AFF
End

$ON_ORIVCR
Onevent INIT_AREA Call D_ORIVCR(zc) From W2SFI1
Return

Subprog D_ORIVCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ORIVCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DESVCR
Onevent INIT_AREA Call D_DESVCR(zc) From W2SFI1
Return

Subprog D_DESVCR(VALEUR)
Variable Integer VALEUR
If varinit([M]DESVCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BRDRUL
Onevent BEFORE_INPUT Call AS_BRDRUL(zc) From W2SFI1
Onevent AFTER_CHANGE Gosub AMM_BRDRUL From W2SFI1
Onevent INIT_AREA Call D_BRDRUL(zc) From W2SFI1
Onevent CONTROL Call C_BRDRUL(zc) From W2SFI1
Return

Subprog D_BRDRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]BRDRUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BRDRUL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(473) From COMBOS
## Action STD
Call AS_BRDRUL(VALEUR) From SUBSFI
If mkstat=2
 [M]BRDRUL(INDIC) = VALEUR
 Affzo BRDRUL(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,473,1))))
Endif
If !mkstat
 Discombo 0 From BRDRUL(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From BRDRUL(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_BRDRUL(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_BRDRUL
Call AM_BRDRUL(zc)
If !mkstat & GOBJET
 zoncou = "BRDRUL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BRDRUL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_BRDRUL(VALEUR) From SUBSFI
If mkstat : GERR = 1 : GZONE = "BRDRUL" : GZNUM = 26379 : Endif
Gosub _AFF
End

$ON_GRUFLG
Onevent BEFORE_INPUT Call AS_GRUFLG(zc) From W2SFI1
Onevent AFTER_CHANGE Gosub AMM_GRUFLG From W2SFI1
Onevent INIT_AREA Call D_GRUFLG(zc) From W2SFI1
Return

Subprog D_GRUFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]GRUFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_GRUFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_GRUFLG(VALEUR) From SUBSFI
If mkstat=2
 [M]GRUFLG(INDIC) = VALEUR
 Affzo GRUFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_GRUFLG
Call AM_GRUFLG(zc)
If !mkstat & GOBJET
 zoncou = "GRUFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GRUFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_GRUFLG(VALEUR) From SUBSFI
If mkstat : GERR = 1 : GZONE = "GRUFLG" : GZNUM = 5935 : Endif
Gosub _AFF
End

$ON_GRURUL
Onevent BEFORE_INPUT Call AS_GRURUL(zc) From W2SFI1
Onevent AFTER_CHANGE Gosub AMM_GRURUL From W2SFI1
Onevent INIT_AREA Call D_GRURUL(zc) From W2SFI1
Onevent CONTROL Call C_GRURUL(zc) From W2SFI1
Return

Subprog D_GRURUL(VALEUR)
Variable Integer VALEUR
If varinit([M]GRURUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_GRURUL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(472) From COMBOS
## Action STD
Call AS_GRURUL(VALEUR) From SUBSFI
If mkstat=2
 [M]GRURUL(INDIC) = VALEUR
 Affzo GRURUL(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,472,1))))
Endif
If !mkstat
 Discombo 0 From GRURUL(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From GRURUL(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_GRURUL(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_GRURUL
Call AM_GRURUL(zc)
If !mkstat & GOBJET
 zoncou = "GRURUL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GRURUL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_GRURUL(VALEUR) From SUBSFI
If mkstat : GERR = 1 : GZONE = "GRURUL" : GZNUM = 26380 : Endif
Gosub _AFF
End

$CHG_STY
Return


