#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PRE1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:09:03"
A_USER  = "ADMIN"
A_STAMP = "20180828000903"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PRE1 [PRE1]
Gosub HORODAT
Local Inpbox "PRE1" From GFONCTION At A_STAMP With A_WINDPREV Mask [PRE1] As [SIM_]
Grizo [PRE1]5
Grizo [PRE1]10
Grizo [PRE1]15
Grizo [PRE1]20
Grizo [PRE1]25
Grizo [PRE1]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PRE1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=32 : Y1(0)=1 : Y2(0)=8
X1(1)=1 : X2(1)=32 : Y1(1)=9 : Y2(1)=13
X1(2)=1 : X2(2)=32 : Y1(2)=14 : Y2(2)=15
X1(3)=1 : X2(3)=32 : Y1(3)=16 : Y2(3)=25
X1(4)=33 : X2(4)=74 : Y1(4)=1 : Y2(4)=8
X1(5)=33 : X2(5)=74 : Y1(5)=9 : Y2(5)=25
Return

$ON_SRUB1FLG
Onevent AFTER_CHANGE Gosub AMM_SRUB1FLG From W1PRE1
Onevent INIT_AREA Call D_SRUB1FLG(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SRUB1FLG(zc) From W1PRE1
Return

Subprog D_SRUB1FLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SRUB1FLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_SRUB1FLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SRUB1FLG
Call AM_SRUB1FLG(zc)
If !mkstat & GOBJET
 zoncou = "SRUB1FLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SRUB1FLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SRUB1FLG(VALEUR) From SUBPRE
If mkstat : GERR = 1 : GZONE = "SRUB1FLG" : GZNUM = 3823 : Endif
Gosub _AFF
End

$ON_SRUB2FLG
Onevent AFTER_CHANGE Gosub AMM_SRUB2FLG From W1PRE1
Onevent INIT_AREA Call D_SRUB2FLG(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SRUB2FLG(zc) From W1PRE1
Return

Subprog D_SRUB2FLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SRUB2FLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SRUB2FLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SRUB2FLG
Call AM_SRUB2FLG(zc)
If !mkstat & GOBJET
 zoncou = "SRUB2FLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SRUB2FLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SRUB2FLG(VALEUR) From SUBPRE
If mkstat : GERR = 1 : GZONE = "SRUB2FLG" : GZNUM = 26467 : Endif
Gosub _AFF
End

$ON_SRUB3FLG
Onevent AFTER_CHANGE Gosub AMM_SRUB3FLG From W1PRE1
Onevent INIT_AREA Call D_SRUB3FLG(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SRUB3FLG(zc) From W1PRE1
Return

Subprog D_SRUB3FLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SRUB3FLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SRUB3FLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SRUB3FLG
Call AM_SRUB3FLG(zc)
If !mkstat & GOBJET
 zoncou = "SRUB3FLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SRUB3FLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SRUB3FLG(VALEUR) From SUBPRE
If mkstat : GERR = 1 : GZONE = "SRUB3FLG" : GZNUM = 29751 : Endif
Gosub _AFF
End

$ON_SRUB4FLG
Onevent AFTER_CHANGE Gosub AMM_SRUB4FLG From W1PRE1
Onevent INIT_AREA Call D_SRUB4FLG(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SRUB4FLG(zc) From W1PRE1
Return

Subprog D_SRUB4FLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SRUB4FLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SRUB4FLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SRUB4FLG
Call AM_SRUB4FLG(zc)
If !mkstat & GOBJET
 zoncou = "SRUB4FLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SRUB4FLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SRUB4FLG(VALEUR) From SUBPRE
If mkstat : GERR = 1 : GZONE = "SRUB4FLG" : GZNUM = 26469 : Endif
Gosub _AFF
End

$ON_BPCORDCOD
Onevent BEFORE_INPUT Call AS_BPCORDCOD(zc) From W1PRE1
Onevent INIT_AREA Call D_BPCORDCOD(zc) From W1PRE1
Onevent CONTROL Call C_BPCORDCOD(zc) From W1PRE1
Return

Subprog D_BPCORDCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]BPCORDCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPCORDCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_BPCORDCOD(VALEUR) From SUBPRE
If mkstat=2
 [M]BPCORDCOD(INDIC) = VALEUR
 Affzo BPCORDCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From BPCORDCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From BPCORDCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_BPCORDCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_DRNCOD
Onevent BEFORE_INPUT Call AS_DRNCOD(zc) From W1PRE1
Onevent INIT_AREA Call D_DRNCOD(zc) From W1PRE1
Onevent CONTROL Call C_DRNCOD(zc) From W1PRE1
Return

Subprog D_DRNCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]DRNCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DRNCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_DRNCOD(VALEUR) From SUBPRE
If mkstat=2
 [M]DRNCOD(INDIC) = VALEUR
 Affzo DRNCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From DRNCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DRNCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DRNCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_BPTCOD
Onevent BEFORE_INPUT Call AS_BPTCOD(zc) From W1PRE1
Onevent INIT_AREA Call D_BPTCOD(zc) From W1PRE1
Onevent CONTROL Call C_BPTCOD(zc) From W1PRE1
Return

Subprog D_BPTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]BPTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_BPTCOD(VALEUR) From SUBPRE
If mkstat=2
 [M]BPTCOD(INDIC) = VALEUR
 Affzo BPTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From BPTCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From BPTCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_BPTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_VCRNUMCOD
Onevent BEFORE_INPUT Call AS_VCRNUMCOD(zc) From W1PRE1
Onevent INIT_AREA Call D_VCRNUMCOD(zc) From W1PRE1
Onevent CONTROL Call C_VCRNUMCOD(zc) From W1PRE1
Return

Subprog D_VCRNUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRNUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRNUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_VCRNUMCOD(VALEUR) From SUBPRE
If mkstat=2
 [M]VCRNUMCOD(INDIC) = VALEUR
 Affzo VCRNUMCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From VCRNUMCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From VCRNUMCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_VCRNUMCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_FLGLOCDES
Onevent INIT_AREA Call D_FLGLOCDES(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_FLGLOCDES(zc) From W1PRE1
Return

Subprog D_FLGLOCDES(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGLOCDES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGLOCDES(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSCOD
Onevent INIT_AREA Call D_TRSCOD(zc) From W1PRE1
Onevent CONTROL Call C_TRSCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_TRSCOD(zc) From W1PRE1
Onevent AFTER_CHANGE Gosub AMM_TRSCOD From W1PRE1
Return

Subprog D_TRSCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSCOD,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"14","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_TRSCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TITADI(GBOUT1,"14") From TRTDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_TRSCOD(zc) From W1PRE1
Onkey   2 Titled GBOUTS Call S_TRSCOD(zc) From W1PRE1
Onkey 144 Titled GBOUTP Call P_TRSCOD(zc) From W1PRE1
Onkey 146 Titled GBOUTA Call SA_TRSCOD(zc) From W1PRE1
Gosub _AFF
End

Subprog C_TRSCOD(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"14","") From SUBADI
If mkstat : GERR = 1 : GZONE = "TRSCOD" : GZNUM = 18946 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"14",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "TRSCOD" : GZNUM = 18946 : Endif
Endif
Gosub _AFF
End

$AMM_TRSCOD
Call AM_TRSCOD(zc)
If !mkstat & GOBJET
 zoncou = "TRSCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TRSCOD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZTRSCOD)")>indice
 [M]TRSCOD(indice) = VALEUR
 Affzo ZTRSCOD(indice)
Endif
Gosub _AFF
End

Subprog S_TRSCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "14"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_TRSCOD(VALEUR)
Variable Char    VALEUR()
Call OBJET("ADI",VALEUR,"14") From GOBJET
Gosub _AFF
End

Subprog SA_TRSCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "14"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TRSCOD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "14"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZTRSCOD
Onevent BEFORE_AREA Gosub AV_ZTRSCOD From W1PRE1
Return

$AV_ZTRSCOD
Call LECTEXTRA(zc,"ATABDIV","SHODES","14",num$([M]TRSCOD(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_ORINUMCOD
Onevent INIT_AREA Call D_ORINUMCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_ORINUMCOD(zc) From W1PRE1
Return

Subprog D_ORINUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ORINUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORINUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORINUMSCR
Onevent INIT_AREA Call D_ORINUMSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_ORINUMSCR(zc) From W1PRE1
Return

Subprog D_ORINUMSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ORINUMSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORINUMSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SHIDATCOD
Onevent INIT_AREA Call D_SHIDATCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SHIDATCOD(zc) From W1PRE1
Return

Subprog D_SHIDATCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SHIDATCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SHIDATCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SHIDATSCR
Onevent INIT_AREA Call D_SHIDATSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SHIDATSCR(zc) From W1PRE1
Return

Subprog D_SHIDATSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SHIDATSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SHIDATSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMDES1COD
Onevent INIT_AREA Call D_ITMDES1COD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_ITMDES1COD(zc) From W1PRE1
Return

Subprog D_ITMDES1COD(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDES1COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDES1COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMDES1SCR
Onevent INIT_AREA Call D_ITMDES1SCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_ITMDES1SCR(zc) From W1PRE1
Return

Subprog D_ITMDES1SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDES1SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDES1SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REOLOCCOD
Onevent INIT_AREA Call D_REOLOCCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_REOLOCCOD(zc) From W1PRE1
Return

Subprog D_REOLOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]REOLOCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REOLOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REOLOCSCR
Onevent INIT_AREA Call D_REOLOCSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_REOLOCSCR(zc) From W1PRE1
Return

Subprog D_REOLOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]REOLOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REOLOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LINTYPCOD
Onevent INIT_AREA Call D_LINTYPCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_LINTYPCOD(zc) From W1PRE1
Return

Subprog D_LINTYPCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LINTYPCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LINTYPCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LINTYPSCR
Onevent INIT_AREA Call D_LINTYPSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_LINTYPSCR(zc) From W1PRE1
Return

Subprog D_LINTYPSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LINTYPSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LINTYPSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCKCOD
Onevent INIT_AREA Call D_PCKCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_PCKCOD(zc) From W1PRE1
Return

Subprog D_PCKCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PCKCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PCKCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCKSCR
Onevent INIT_AREA Call D_PCKSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_PCKSCR(zc) From W1PRE1
Return

Subprog D_PCKSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]PCKSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PCKSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SDHTYPCOD
Onevent INIT_AREA Call D_SDHTYPCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SDHTYPCOD(zc) From W1PRE1
Return

Subprog D_SDHTYPCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SDHTYPCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SDHTYPCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SDHTYPSCR
Onevent INIT_AREA Call D_SDHTYPSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SDHTYPSCR(zc) From W1PRE1
Return

Subprog D_SDHTYPSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SDHTYPSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SDHTYPSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTCOD
Onevent AFTER_CHANGE Gosub AMM_LOTCOD From W1PRE1
Onevent INIT_AREA Call D_LOTCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1PRE1
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_LOTCOD
Call AM_LOTCOD(zc)
If !mkstat & GOBJET
 zoncou = "LOTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LOTCOD(VALEUR) From SUBPRE
If mkstat : GERR = 1 : GZONE = "LOTCOD" : GZNUM = 2721 : Endif
Gosub _AFF
End

$ON_LOTSCR
Onevent INIT_AREA Call D_LOTSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_LOTSCR(zc) From W1PRE1
Return

Subprog D_LOTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOCOD
Onevent INIT_AREA Call D_SLOCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SLOCOD(zc) From W1PRE1
Return

Subprog D_SLOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOSCR
Onevent INIT_AREA Call D_SLOSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SLOSCR(zc) From W1PRE1
Return

Subprog D_SLOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERCOD
Onevent INIT_AREA Call D_SERCOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SERCOD(zc) From W1PRE1
Return

Subprog D_SERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERSCR
Onevent INIT_AREA Call D_SERSCR(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SERSCR(zc) From W1PRE1
Return

Subprog D_SERSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERECOD
Onevent INIT_AREA Call D_SERECOD(zc) From W1PRE1
Onevent BEFORE_INPUT Call AS_SERECOD(zc) From W1PRE1
Return

Subprog D_SERECOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERECOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERECOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2PRE1
Return

$TIT_COL
Gosub TIT_COL From W2PRE1
Return


