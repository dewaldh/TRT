#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT04LOMF 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:28:28"
A_USER  = "ADMIN"
A_STAMP = "20180828002828"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT04LOMF [SUD2]
Gosub HORODAT
Local Inpbox "WT04LOMF" From GFONCTION At A_STAMP With A_WINDPREV Mask [SUD2] As [SIM_]
Grizo [SUD2]5
Grizo [SUD2]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SUD2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=112 : Y1(1)=3 : Y2(1)=28
Return

$ON_ALLSTOFCY
Onevent INIT_AREA Call D_ALLSTOFCY(zc) From W1WT04LOMF
Return

Subprog D_ALLSTOFCY(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLSTOFCY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1WT04LOMF
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_NBLIG
Onevent BEFORE_AREA Call AV_NBLIG From W1WT04LOMF
Return

Subprog AV_NBLIG
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBLIG" : Gosub TIT_COL From W1WT04LOMF
Endif
Gosub _AFF
End

$ON_ITMREF
Return

$ON_VCRNUM
Return

$ON_ECCVALMAJ
Return

$ON_ECCVALMIN
Return

$ON_BPSLOT
Onevent AFTER_CHANGE Gosub AMM_BPSLOT From W1WT04LOMF
Onevent BEFORE_INPUT Call AS_BPSLOT(zc) From W1WT04LOMF
Return

Subprog AS_BPSLOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_BPSLOT(zc) From W1WT04LOMF
Gosub _AFF
End

$AMM_BPSLOT
Call AM_BPSLOT(zc)
If !mkstat & GOBJET
 zoncou = "BPSLOT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPSLOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_BPSLOT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "BPSLOT" : GZNUM = 5115 : Endif
Gosub _AFF
End

Subprog S_BPSLOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELBPLN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELBPLN"
 PARMSK(1) = [M:SUD2]STOFCY
 PARMSK(2) = [M:SUD2]ITMREF(nolign-1)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELBPLN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_POT
Onevent BEFORE_INPUT Call AS_POT(zc) From W1WT04LOMF
Onevent CONTROL Call C_POT(zc) From W1WT04LOMF
Return

Subprog AS_POT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_POT(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]POT(INDIC) = VALEUR
 Affzo POT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_POT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_POT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "POT" : GZNUM = 51 : Endif
Gosub _AFF
End

$ON_REFPER
Onevent BEFORE_INPUT Call AS_REFPER(zc) From W1WT04LOMF
Onevent CONTROL Call C_REFPER(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_REFPER From W1WT04LOMF
Onevent BEFORE_AREA Gosub AV_REFPER From W1WT04LOMF
Return

$AV_REFPER
Chgfmt [M]REFPER(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_REFPER(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_REFPER(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]REFPER(INDIC) = VALEUR
 Affzo REFPER(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_REFPER(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_REFPER(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "REFPER" : GZNUM = 24152 : Endif
Gosub _AFF
End

$AMM_REFPER
Call AM_REFPER(zc)
If !mkstat & GOBJET
 zoncou = "REFPER" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REFPER(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_REFPER(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "REFPER" : GZNUM = 24152 : Endif
Gosub _AFF
End

$ON_SHL
Onevent BEFORE_INPUT Call AS_SHL(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_SHL From W1WT04LOMF
Return

Subprog AS_SHL(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHL(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]SHL(INDIC) = VALEUR
 Affzo SHL(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_SHL
Call AM_SHL(zc)
If !mkstat & GOBJET
 zoncou = "SHL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SHL(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "SHL" : GZNUM = 2123 : Endif
Gosub _AFF
End

$ON_SHLUOM
Onevent BEFORE_INPUT Call AS_SHLUOM(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_SHLUOM From W1WT04LOMF
Onevent INIT_AREA Call D_SHLUOM(zc) From W1WT04LOMF
Return

Subprog D_SHLUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]SHLUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SHLUOM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLUOM(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]SHLUOM(INDIC) = VALEUR
 Affzo SHLUOM(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SHLUOM
Call AM_SHLUOM(zc)
If !mkstat & GOBJET
 zoncou = "SHLUOM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHLUOM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SHLUOM(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "SHLUOM" : GZNUM = 6176 : Endif
Gosub _AFF
End

$ON_SHLDAT
Onevent BEFORE_INPUT Call AS_SHLDAT(zc) From W1WT04LOMF
Onevent CONTROL Call C_SHLDAT(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_SHLDAT From W1WT04LOMF
Onevent BEFORE_AREA Gosub AV_SHLDAT From W1WT04LOMF
Return

$AV_SHLDAT
Chgfmt [M]SHLDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_SHLDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLDAT(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]SHLDAT(INDIC) = VALEUR
 Affzo SHLDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SHLDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_SHLDAT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "SHLDAT" : GZNUM = 4958 : Endif
Gosub _AFF
End

$AMM_SHLDAT
Call AM_SHLDAT(zc)
If !mkstat & GOBJET
 zoncou = "SHLDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHLDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_SHLDAT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "SHLDAT" : GZNUM = 4958 : Endif
Gosub _AFF
End

$ON_DLU
Onevent BEFORE_INPUT Call AS_DLU(zc) From W1WT04LOMF
Onevent CONTROL Call C_DLU(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_DLU From W1WT04LOMF
Return

Subprog AS_DLU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DLU(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]DLU(INDIC) = VALEUR
 Affzo DLU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DLU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DLU(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "DLU" : GZNUM = 33614 : Endif
Gosub _AFF
End

$AMM_DLU
Call AM_DLU(zc)
If !mkstat & GOBJET
 zoncou = "DLU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DLU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_DLU(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "DLU" : GZNUM = 33614 : Endif
Gosub _AFF
End

$ON_DLULTIUOM
Onevent INIT_AREA Call D_DLULTIUOM(zc) From W1WT04LOMF
Return

Subprog D_DLULTIUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]DLULTIUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DLUDAT
Onevent BEFORE_INPUT Call AS_DLUDAT(zc) From W1WT04LOMF
Onevent CONTROL Call C_DLUDAT(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_DLUDAT From W1WT04LOMF
Onevent BEFORE_AREA Gosub AV_DLUDAT From W1WT04LOMF
Return

$AV_DLUDAT
Chgfmt [M]DLUDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_DLUDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DLUDAT(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]DLUDAT(INDIC) = VALEUR
 Affzo DLUDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DLUDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_DLUDAT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "DLUDAT" : GZNUM = 33633 : Endif
Gosub _AFF
End

$AMM_DLUDAT
Call AM_DLUDAT(zc)
If !mkstat & GOBJET
 zoncou = "DLUDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DLUDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_DLUDAT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "DLUDAT" : GZNUM = 33633 : Endif
Gosub _AFF
End

$ON_SHLLTI
Onevent BEFORE_INPUT Call AS_SHLLTI(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_SHLLTI From W1WT04LOMF
Return

Subprog AS_SHLLTI(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLLTI(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]SHLLTI(INDIC) = VALEUR
 Affzo SHLLTI(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_SHLLTI
Call AM_SHLLTI(zc)
If !mkstat & GOBJET
 zoncou = "SHLLTI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHLLTI(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SHLLTI(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "SHLLTI" : GZNUM = 17814 : Endif
Gosub _AFF
End

$ON_SHLLTIUOM
Onevent BEFORE_INPUT Call AS_SHLLTIUOM(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_SHLLTIUOM From W1WT04LOMF
Onevent INIT_AREA Call D_SHLLTIUOM(zc) From W1WT04LOMF
Return

Subprog D_SHLLTIUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]SHLLTIUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SHLLTIUOM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SHLLTIUOM(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]SHLLTIUOM(INDIC) = VALEUR
 Affzo SHLLTIUOM(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SHLLTIUOM
Call AM_SHLLTIUOM(zc)
If !mkstat & GOBJET
 zoncou = "SHLLTIUOM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SHLLTIUOM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SHLLTIUOM(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "SHLLTIUOM" : GZNUM = 6176 : Endif
Gosub _AFF
End

$ON_NEWLTIDAT
Onevent BEFORE_INPUT Call AS_NEWLTIDAT(zc) From W1WT04LOMF
Onevent CONTROL Call C_NEWLTIDAT(zc) From W1WT04LOMF
Onevent BEFORE_AREA Gosub AV_NEWLTIDAT From W1WT04LOMF
Return

$AV_NEWLTIDAT
Chgfmt [M]NEWLTIDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_NEWLTIDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NEWLTIDAT(VALEUR) From SUBSMXUPD2
If mkstat=2
 [M]NEWLTIDAT(INDIC) = VALEUR
 Affzo NEWLTIDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_NEWLTIDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_NEWLTIDAT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "NEWLTIDAT" : GZNUM = 33631 : Endif
Gosub _AFF
End

$ON_USRFLD4
Onevent BEFORE_AREA Gosub AV_USRFLD4 From W1WT04LOMF
Return

$AV_USRFLD4
Chgfmt [M]USRFLD4(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$ON_IPTDAT
Onevent CONTROL Call C_IPTDAT(zc) From W1WT04LOMF
Onevent BEFORE_AREA Gosub AV_IPTDAT From W1WT04LOMF
Return

$AV_IPTDAT
Chgfmt [M]IPTDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_IPTDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_IPTDAT(VALEUR) From SUBSMXUPD2
If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 3205 : Endif
Gosub _AFF
End

$ON_PJT
Onevent BEFORE_INPUT Call AS_PJT(zc) From W1WT04LOMF
Onevent CONTROL Call C_PJT(zc) From W1WT04LOMF
Onevent AFTER_CHANGE Gosub AMM_PJT From W1WT04LOMF
Return

Subprog IB_PJT(VALEUR)
Variable Char    VALEUR()
## Action PJTINIBUT
Call PJT_INIT_BUTTON(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
Gosub _AFF
End

Subprog AS_PJT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(43841,GBOUT1) From OBJDIV
Call TEXTE(14667,GBOUT2) From OBJDIV
Call TEXTE(54273,GBOUT3) From OBJDIV
Call TEXTE(43844,GBOUT4) From OBJDIV
Call TEXTE(43868,GBOUT15) From OBJDIV
Call TEXTE(17676,GBOUT16) From OBJDIV
Call TEXTE(54274,GBOUT17) From OBJDIV
Call TEXTE(54275,GBOUT18) From OBJDIV
Call TEXTE(11781,GBOUT19) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_PJT(VALEUR)
## Action PJTBEFZON
Call PJT_BEFORE_ZONE(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
If mkstat=2
 [M]PJT(INDIC) = VALEUR
 Affzo PJT(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_PJT(zc) From W1WT04LOMF
Onkey 130 Titled GBOUT2 Call B2_PJT(zc) From W1WT04LOMF
Onkey 131 Titled GBOUT3 Call B3_PJT(zc) From W1WT04LOMF
Onkey 132 Titled GBOUT4 Call B4_PJT(zc) From W1WT04LOMF
Onkey 172 Titled GBOUT15 Call B15_PJT(zc) From W1WT04LOMF
Onkey 173 Titled GBOUT16 Call B16_PJT(zc) From W1WT04LOMF
Onkey 174 Titled GBOUT17 Call B17_PJT(zc) From W1WT04LOMF
Onkey 175 Titled GBOUT18 Call B18_PJT(zc) From W1WT04LOMF
Onkey 176 Titled GBOUT19 Call B19_PJT(zc) From W1WT04LOMF
Onkey   2 Titled GBOUTS Call S_PJT(zc) From W1WT04LOMF
Onkey 144 Titled GBOUTP Call P_PJT(zc) From W1WT04LOMF
Onkey 146 Titled GBOUTA Call SA_PJT(zc) From W1WT04LOMF
Gosub _AFF
End

Subprog C_PJT(VALEUR)
Variable Char    VALEUR()
## Action PJTCTL
Call PJT_CONTROL(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
If mkstat : GERR = 1 : GZONE = "PJT" : GZNUM = 1886 : Endif
If !mkstat
 ## Action CONTOBJN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJN"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "PJT" : GZNUM = 1886 : Endif
Endif
Gosub _AFF
End

$AMM_PJT
Call AM_PJT(zc)
If !mkstat & GOBJET
 zoncou = "PJT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PJT(VALEUR)
Variable Char    VALEUR()
## Action PJTAFTMOD
Call PJT_AFTER_MODIFY(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
If mkstat : GERR = 1 : GZONE = "PJT" : GZNUM = 1886 : Endif
Gosub _AFF
End

Subprog S_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBUT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBUT"
 PARMSK(1) = "SUD2"
 PARMSK(2) = "PJT"
 PARMSK(3) = num$(nolign-1)
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:SUD2]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJT","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU1CRM
 Call PJT_BUT1_CRM(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU2PRP
 Call PJT_BUT2_PRP(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU3BUD
 Call PJT_BUT3_PRPBUD(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU4TAC
 Call PJT_BUT4_PRPTAC(VALEUR,"SUD2","PJT",nolign-1,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:SUD2]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B15_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBCRM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBCRM"
 PARMSK(1) = "SUD2"
 PARMSK(2) = "PJT"
 PARMSK(3) = num$(nolign-1)
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:SUD2]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTCRM","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B16_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBPRP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBPRP"
 PARMSK(1) = "SUD2"
 PARMSK(2) = "PJT"
 PARMSK(3) = num$(nolign-1)
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:SUD2]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTPRP","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B17_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBBUD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBBUD"
 PARMSK(1) = "SUD2"
 PARMSK(2) = "PJT"
 PARMSK(3) = num$(nolign-1)
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:SUD2]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTBUD","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B18_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBTAC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBTAC"
 PARMSK(1) = "SUD2"
 PARMSK(2) = "PJT"
 PARMSK(3) = num$(nolign-1)
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:SUD2]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTTAC","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B19_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBBPR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBBPR"
 PARMSK(1) = "SUD2"
 PARMSK(2) = "PJT"
 PARMSK(3) = num$(nolign-1)
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:SUD2]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:SUD2]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTBPR","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_PJT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "PIM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PJT(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("PIM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_TRSFAM
Onevent INIT_AREA Call D_TRSFAM(zc) From W1WT04LOMF
Onevent CONTROL Call C_TRSFAM(zc) From W1WT04LOMF
Onevent BEFORE_INPUT Call AS_TRSFAM(zc) From W1WT04LOMF
Return

Subprog D_TRSFAM(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSFAM,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"9","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_TRSFAM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TITADI(GBOUT1,"9") From TRTDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_TRSFAM(zc) From W1WT04LOMF
Onkey   2 Titled GBOUTS Call S_TRSFAM(zc) From W1WT04LOMF
Onkey 144 Titled GBOUTP Call P_TRSFAM(zc) From W1WT04LOMF
Onkey 146 Titled GBOUTA Call SA_TRSFAM(zc) From W1WT04LOMF
Gosub _AFF
End

Subprog C_TRSFAM(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"9","") From SUBADI
If mkstat : GERR = 1 : GZONE = "TRSFAM" : GZNUM = 17501 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"9",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "TRSFAM" : GZNUM = 17501 : Endif
Endif
Gosub _AFF
End

Subprog S_TRSFAM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "9"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_TRSFAM(VALEUR)
Variable Char    VALEUR()
Call OBJET("ADI",VALEUR,"9") From GOBJET
Gosub _AFF
End

Subprog SA_TRSFAM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "9"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TRSFAM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "9"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$TIT_COL
Local Char TITCL(200)(1..4)
Raz TITCL
Case BASPAG
 When "NBLIG"
  TITCL(1) = mess(1,726,1)
  TITCL(2) = mess(2,726,1)
  TITCL(3) = mess(3,726,1)
  TITCL(4) = mess(4,726,1)
  If !GORITITCOL
   Titcol [M]NBLIG TITCL(1) For USRFLD1
   Titcol [M]NBLIG TITCL(2) For USRFLD2
   Titcol [M]NBLIG TITCL(3) For USRFLD3
   Titcol [M]NBLIG TITCL(4) For USRFLD4
  Else
   Titcol [M:SUD2]NBLIG TITCL(1) For USRFLD1
   Titcol [M:SUD2]NBLIG TITCL(2) For USRFLD2
   Titcol [M:SUD2]NBLIG TITCL(3) For USRFLD3
   Titcol [M:SUD2]NBLIG TITCL(4) For USRFLD4
  Endif
Endcase
Return

$CHG_STY
Return


