#<AdxTL>@(#)0.0.0.0 $Revision$Class Mass mailing
# Supervisor
## CRUD-CLASSE ## MAILING
# 2018-08-27 12:36:13 864


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File MAILING [OMM_]

If !SILENCE : Call TRACE("2 --> Local Instance C_MAILING") From ASYRCOM : Endif
Local Instance MAILING Using C_MAILING

If !SILENCE : Call TRACE("3 --> New Instance C_MAILING") From ASYRCOM : Endif
MAILING = NewInstance C_MAILING AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [OMM_]OMM0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of MAILING") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet MAILING.AREAD([OMM_]OMMNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("MAILING.OMMNUM ="-num$(MAILING.OMMNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(MAILING.AKEYS)
  Call TRACE("-"-num$(I)-":"-MAILING.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [OMM_]
FreeGroup MAILING
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(MAILING,ACLE,ASTATUS,_ETAG)
Variable Instance MAILING Using C_MAILING
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OMMNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OMMNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File MAILING [OMM]
Default File [F:OMM]
Read [F:OMM]OMM0 = [L]_OMMNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:OMM]UPDTICK)>0
 [L]_ETAG = num$([F:OMM]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(MAILING,ACLE,ASTATUS)
Variable Instance MAILING Using C_MAILING
Value Char ACLE
Variable Integer ASTATUS
Local Char _OMMNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OMMNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet MAILING.AREAD([L]_OMMNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(MAILING,_OMMNUM,ASTATUS)
Variable Instance MAILING Using C_MAILING
Value Char _OMMNUM
Variable Integer ASTATUS

If MAILING = null : End : Endif

Gosub AVARIABLES From WMC00MAILING
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If MAILING.APARENT=null
 [L]A_I = MAILING.freeSnapshot
 MAILING.snapshotEnabled = 0
 MAILING.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & MAILING.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet MAILING._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If MAILING.APARENT=null
 MAILING.snapshotEnabled = 1
 MAILING.setAccessorEnabled = 1
Endif
LogicClose File [OMM]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet MAILING._ACTION_PARAM("AREAD_BEFORE",[L]_OMMNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:OMM]
Read [F:OMM]OMM0 = [L]_OMMNUM
If fstat
[L]A_ERROR = [L]_OMMNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(MAILING,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:OMM]FCY
[L]A_STRACC = ""
If dim([F:OMM]AUUID)>0 & [F:OMM]AUUID=NullUuid
 [F:OMM]AUUID = getUuid
Endif
SetInstance MAILING With [F:OMM]
MAILING.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet MAILING.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



