#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHCONTEXT CONTEXT
# 2018-08-27 12:30:17 627

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","CONTEXT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CONTEXT [CNX]
If filinfo(filpath("FIL","FISCYEAR","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File FISCYEAR [FIS]
Local File CONTEXT [CNX_]
Local Char KEY_CNX(120)(1..3)
Local Char KEY_FIS(120)(1..3)
#Empty keys :
KEY_CNX(3) = "+0"
KEY_FIS(3) = "+0+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [CNX]
LogicClose File [FIS]
LogicClose File [CNX_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [CNX] With
& [FIS]FIY0~=[CNX]CPY;[CNX]CNX
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [CNX] With
& [FIS]FIY0~=[CNX]CPY;[CNX]CNX
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_CNX(2) = [F:CNX]CPY+"+"+num$([F:CNX]CNX)
KEY_FIS(2) = [F:FIS]CPY+"+"+num$([F:FIS]CNX)+"+"+num$([F:FIS]DATSTRFIY)

If (KEY_CNX(2) <> KEY_CNX(3)) & (KEY_CNX(1) <> KEY_CNX(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_CONTEXT(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:CNX]
FINS = 1
 KEY_CNX(1) = KEY_CNX(2)
Endif : # KEY_CNX(1) <> KEY_CNX(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"CPY":'             +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"CNX":'             + num$(INS.CNX)
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_CNX(1),KEY_FIS(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:CNX]CPY"
ASTDKEY += ";[F:CNX]CNX"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From CONTEXT_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="CONTEXT" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"CONTEXT")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"CONTEXT")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,23633)+'"'
Append WCLOB,',"$url":"{$baseUrl}/CONTEXT'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,23633)+' {$key}"'
Append WCLOB,',"$key":"{CPY}~{CNX}"'
Append WCLOB,',"$url":"{$baseUrl}/CONTEXT('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'CONTEXT.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CNX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,22164)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-choice"'
Append WCLOB,',"$value":{'
Append WCLOB,'"$type":"application/x-integer"'
Append WCLOB,',"$enum":['
Append WCLOB,'{'
Append WCLOB,'"$value":1'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.1")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":2'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.2")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":3'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.3")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":4'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.4")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":5'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.5")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":6'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.6")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":7'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.7")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":8'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.8")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":9'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.9")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":10'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.10")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":11'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"3100.11")+'"'
Append WCLOB,"}"
Append WCLOB,"]"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/CONTEXT('+"'"+'{$key}'+"'"+')?representation=CONTEXT.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHCONTEXTB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHCONTEXTB
End RES


