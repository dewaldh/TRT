#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Routing
# Supervisor
## CRUD-CLASSE ## CCMIMPROD
# 2018-08-27 12:29:18 813


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPROD [CCMROD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_CCMIMPROD") From ASYRCOM : Endif
Local Instance CCMIMPROD Using C_CCMIMPROD

If !SILENCE : Call TRACE("3 --> New Instance C_CCMIMPROD") From ASYRCOM : Endif
CCMIMPROD = NewInstance C_CCMIMPROD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMROD_]CCMROD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPROD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROD.AREAD([CCMROD_]CRID,[CCMROD_]LINENO))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMIMPROD.CRID ="-num$(CCMIMPROD.CRID)) From ASYRCOM
 Call TRACE("CCMIMPROD.LINENO ="-num$(CCMIMPROD.LINENO)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMIMPROD.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMIMPROD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMROD_]
FreeGroup CCMIMPROD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMIMPROD,ACLE,ASTATUS,_ETAG)
Variable Instance CCMIMPROD Using C_CCMIMPROD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File CCMIMPROD [CCMROD]
Default File [F:CCMROD]
Read [F:CCMROD]CCMROD0 = [L]_CRID;[L]_LINENO
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMROD]UPDTICK)>0
 [L]_ETAG = num$([F:CCMROD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMIMPROD,ACLE,ASTATUS)
Variable Instance CCMIMPROD Using C_CCMIMPROD
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROD.AREAD([L]_CRID,[L]_LINENO))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMIMPROD,_CRID,_LINENO,ASTATUS)
Variable Instance CCMIMPROD Using C_CCMIMPROD
Value Char _CRID
Value Shortint _LINENO
Variable Integer ASTATUS

If CCMIMPROD = null : End : Endif

Gosub AVARIABLES From WMC00CCMIMPROD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMIMPROD.APARENT=null
 [L]A_I = CCMIMPROD.freeSnapshot
 CCMIMPROD.snapshotEnabled = 0
 CCMIMPROD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMIMPROD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMIMPROD.APARENT=null
 CCMIMPROD.snapshotEnabled = 1
 CCMIMPROD.setAccessorEnabled = 1
Endif
LogicClose File [CCMROD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROD._ACTION_PARAM("AREAD_BEFORE",[L]_CRID,[L]_LINENO))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:CCMROD]
Read [F:CCMROD]CCMROD0 = [L]_CRID;[L]_LINENO
If fstat
[L]A_ERROR = [L]_CRID+"~"+num$([L]_LINENO)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMIMPROD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:CCMROD]AUUID)>0 & [F:CCMROD]AUUID=NullUuid
 [F:CCMROD]AUUID = getUuid
Endif
SetInstance CCMIMPROD With [F:CCMROD]
CCMIMPROD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="ROUDESAXX" & ZONE="ROUTING" & IDENT1=CCMIMPROD.IDENT1 & IDENT2=CCMIMPROD.FCY
 Call ASETTEXTRA(CCMIMPROD.AXX,CCMIMPROD.AllocGrp(),"ROUDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 CCMIMPROD.AXX(maxtab(CCMIMPROD.AXX)).FLG = 0
Next AXX
If !len(fmet CCMIMPROD.AGETTEXTRA("ROUDESAXX"))
 Call ASETTEXTRA(CCMIMPROD.AXX,CCMIMPROD.AllocGrp(),"ROUDESAXX",
& fmet CCMIMPROD.AGETTEXTRALAN("ROUDESAXX",CCMIMPROD.ACTX.AFOLD.ALANGDEF),
& CCMIMPROD.ACTX.LAN) From ASYRSUB
Endif

Return



