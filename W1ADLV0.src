#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ADLV0 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:47:29"
A_USER  = "ADMIN"
A_STAMP = "20180827234729"
Return

$TITRES
Chgtzn [M:ADLV0]COD With mess (57,7999,1)+" $"
Chgtzn [M:ADLV0]PDT With mess (47,7999,1)+" $"
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ADLV0 [ADLV0]
Gosub HORODAT
Local Inpbox "ADLV0" From GFONCTION At A_STAMP With A_WINDPREV Mask [ADLV0] As [SIM_]
Grizo [ADLV0]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ADLV0]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=3
Return

$ON_COD
Onevent BEFORE_INPUT Call AS_COD(zc) From W1ADLV0
Onevent CONTROL Call C_COD(zc) From W1ADLV0
Return

Subprog AS_COD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_COD(VALEUR) From SUBADLV
If mkstat=2
 [M]COD(INDIC) = VALEUR
 Affzo COD(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_COD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_COD(VALEUR) From SUBADLV
 If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$ON_DLVDES
Onevent INIT_AREA Call D_DLVDES(zc) From W1ADLV0
Onevent BEFORE_INPUT Call AS_DLVDES(zc) From W1ADLV0
Onevent CONTROL Call C_DLVDES(zc) From W1ADLV0
Return

Subprog IB_DLVDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_DLVDES(VALEUR)
Variable Char    VALEUR()
If varinit([M]DLVDES,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"ADELIVER","DLVDES",[M]COD,"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_DLVDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_DLVDES(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_DLVDES(zc) From W1ADLV0
Gosub _AFF
End

Subprog C_DLVDES(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DLVDES" : GZNUM = 8 : Endif
Gosub _AFF
End

Subprog B1_DLVDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_DLVDES" : PROGSUB = "SUBADLV" : PROGSPE = "SPEADLV" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "ADELIVER"
 PARMSK(2) = "DLVDES"
 PARMSK(3) = [M]COD
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_DLVDES" : PROGSUB = "SUBADLV" : PROGSPE = "SPEADLV" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ENAFLG
Onevent INIT_AREA Call D_ENAFLG(zc) From W1ADLV0
Onevent BEFORE_INPUT Call AS_ENAFLG(zc) From W1ADLV0
Return

Subprog D_ENAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ENAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ENAFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ADLVTYP
Onevent INIT_AREA Call D_ADLVTYP(zc) From W1ADLV0
Return

Subprog D_ADLVTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ADLVTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PDT
Onevent BEFORE_INPUT Call AS_PDT(zc) From W1ADLV0
Onevent INIT_AREA Call D_PDT(zc) From W1ADLV0
Onevent CONTROL Call C_PDT(zc) From W1ADLV0
Return

Subprog D_PDT(VALEUR)
Variable Integer VALEUR
If varinit([M]PDT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PDT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(7884) From COMBOS
## Action STD
Call AS_PDT(VALEUR) From SUBADLV
If mkstat=2
 [M]PDT(INDIC) = VALEUR
 Affzo PDT(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,7884,1))))
Endif
If !mkstat
 Discombo 0 From PDT(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PDT(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PDT(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PDT" : GZNUM = 0 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_RPBUSR
Onevent CONTROL Call C_RPBUSR(zc) From W1ADLV0
Onevent BEFORE_INPUT Call AS_RPBUSR(zc) From W1ADLV0
Onevent AFTER_CHANGE Gosub AMM_RPBUSR From W1ADLV0
Onevent INIT_AREA Call D_RPBUSR(zc) From W1ADLV0
Return

Subprog D_RPBUSR(VALEUR)
Variable Char    VALEUR()
If varinit([M]RPBUSR,indice)=0
 VALEUR = GUSER
Endif
Gosub _AFF
End

Subprog AS_RPBUSR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(485,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_RPBUSR(zc) From W1ADLV0
Onkey   2 Titled GBOUTS Call S_RPBUSR(zc) From W1ADLV0
Onkey 144 Titled GBOUTP Call P_RPBUSR(zc) From W1ADLV0
Onkey 146 Titled GBOUTA Call SA_RPBUSR(zc) From W1ADLV0
Gosub _AFF
End

Subprog C_RPBUSR(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("AUS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "RPBUSR" : GZNUM = 1462 : Endif
Gosub _AFF
End

$AMM_RPBUSR
Call AM_RPBUSR(zc)
If !mkstat & GOBJET
 zoncou = "RPBUSR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RPBUSR(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZRPBUSR)")>indice
 [M]RPBUSR(indice) = VALEUR
 Affzo ZRPBUSR(indice)
Endif
Gosub _AFF
End

Subprog S_RPBUSR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AUS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_RPBUSR(VALEUR)
Variable Char    VALEUR()
Call OBJET("AUS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_RPBUSR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AUS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_RPBUSR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AUS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZRPBUSR
Onevent BEFORE_AREA Gosub AV_ZRPBUSR From W1ADLV0
Return

$AV_ZRPBUSR
Call LECTEXTRA(zc,"AUTILIS","INTUSR",num$([M]RPBUSR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Return


