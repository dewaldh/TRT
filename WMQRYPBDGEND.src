#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment balance decl details
# Supervisor
## WMREP REPRESENTATION ## PBDGEND
# 2018-08-27 13:21:21 142

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:PBDGEND])=0 : Local File PBDGEND [PBDGEND] : Endif
If clalev([F:A_])=0 : Local File PBDGEND [A_] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [PBDGEND]
LogicClose File [A_]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Link [PBDGEND] With
& [A_]PBDGEND0~=[PBDGEND]CODE;[PBDGEND]LEG;[PBDGEND]ISDETAIL;[PBDGEND]ISOITEM;[PBDGEND]LINE
& As [LNK_]
& Where ( (1=1)
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Link [PBDGEND] With
& [A_]PBDGEND0~=[PBDGEND]CODE;[PBDGEND]LEG;[PBDGEND]ISDETAIL;[PBDGEND]ISOITEM;[PBDGEND]LINE
& As [LNK_]
& Where ( (1=1)
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# PBDGEND --- PBDGEND(PBDGEND)
QRY(NBREP) = NewInstance R_PBDGEND AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:PBDGEND]AUUID)>0 & [F:PBDGEND]AUUID=NullUuid
 [F:PBDGEND]AUUID = getUuid
Endif
SetInstance QRY(NBREP).PBDGEND With [F:PBDGEND]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# PBDGEND --- PBDGEND(PBDGEND)
QRY = NewInstance R_PBDGEND AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:PBDGEND]AUUID)>0 & [F:PBDGEND]AUUID=NullUuid
 [F:PBDGEND]AUUID = getUuid
Endif
SetInstance QRY.PBDGEND With [F:PBDGEND]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0PBDGEND
CURQRY = "R_PBDGEND"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).PBDGEND.LEG.LNKPRO
Callmet QRY(NBREP).PBDGEND.AMOUNT.LNKPRO
Callmet QRY(NBREP).PBDGEND.CUR.LNKPRO
Callmet QRY(NBREP).PBDGEND.ECOCOD.LNKPRO
Callmet QRY(NBREP).PBDGEND.BPRCRY.LNKPRO
Callmet QRY(NBREP).PBDGEND.BPR.LNKPRO
Callmet QRY(NBREP).PBDGEND.NOMAMT.LNKPRO
Callmet QRY(NBREP).PBDGEND.ACCCRY.LNKPRO
Callmet QRY(NBREP).PBDGEND.ACTCRY.LNKPRO
Callmet QRY(NBREP).PBDGEND.COUPARCRY.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.PBDGEND.LEG.LNKPRO
Callmet QRY.PBDGEND.AMOUNT.LNKPRO
Callmet QRY.PBDGEND.CUR.LNKPRO
Callmet QRY.PBDGEND.ECOCOD.LNKPRO
Callmet QRY.PBDGEND.BPRCRY.LNKPRO
Callmet QRY.PBDGEND.BPR.LNKPRO
Callmet QRY.PBDGEND.NOMAMT.LNKPRO
Callmet QRY.PBDGEND.ACCCRY.LNKPRO
Callmet QRY.PBDGEND.ACTCRY.LNKPRO
Callmet QRY.PBDGEND.COUPARCRY.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "CODE" : TBFIL(NBPRO) = "[F:PBDGEND]CODE"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.CODE"
NBPRO += 1 : TBPRO(NBPRO) = "LEG" : TBFIL(NBPRO) = "[F:PBDGEND]LEG"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.LEG"
NBPRO += 1 : TBPRO(NBPRO) = "ISDETAIL" : TBFIL(NBPRO) = "[F:PBDGEND]ISDETAIL"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "PBDGEND.ISDETAIL"
NBPRO += 1 : TBPRO(NBPRO) = "ISOITEM" : TBFIL(NBPRO) = "[F:PBDGEND]ISOITEM"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "PBDGEND.ISOITEM"
NBPRO += 1 : TBPRO(NBPRO) = "LINE" : TBFIL(NBPRO) = "[F:PBDGEND]LINE"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "PBDGEND.LINE"
NBPRO += 1 : TBPRO(NBPRO) = "ACCNUM" : TBFIL(NBPRO) = "[F:PBDGEND]ACCNUM"
           : TBTYP(NBPRO) = 3 : TBPTH(NBPRO) = "PBDGEND.ACCNUM"
NBPRO += 1 : TBPRO(NBPRO) = "TYPAMT" : TBFIL(NBPRO) = "[F:PBDGEND]TYPAMT"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.TYPAMT"
NBPRO += 1 : TBPRO(NBPRO) = "AMOUNT" : TBFIL(NBPRO) = "[F:PBDGEND]AMOUNT"
           : TBTYP(NBPRO) = 4 : TBPTH(NBPRO) = "PBDGEND.AMOUNT"
NBPRO += 1 : TBPRO(NBPRO) = "CUR" : TBFIL(NBPRO) = "[F:PBDGEND]CUR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.CUR"
NBPRO += 1 : TBPRO(NBPRO) = "ECOCOD" : TBFIL(NBPRO) = "[F:PBDGEND]ECOCOD"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.ECOCOD"
NBPRO += 1 : TBPRO(NBPRO) = "ECOTYP" : TBFIL(NBPRO) = "[F:PBDGEND]ECOTYP"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "PBDGEND.ECOTYP"
NBPRO += 1 : TBPRO(NBPRO) = "ORIENT" : TBFIL(NBPRO) = "[F:PBDGEND]ORIENT"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "PBDGEND.ORIENT"
NBPRO += 1 : TBPRO(NBPRO) = "BPRCRY" : TBFIL(NBPRO) = "[F:PBDGEND]BPRCRY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.BPRCRY"
NBPRO += 1 : TBPRO(NBPRO) = "NOTES" : TBFIL(NBPRO) = "[F:PBDGEND]NOTES"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.NOTES"
NBPRO += 1 : TBPRO(NBPRO) = "DOCTYP" : TBFIL(NBPRO) = "[F:PBDGEND]DOCTYP"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.DOCTYP"
NBPRO += 1 : TBPRO(NBPRO) = "DOCNUM" : TBFIL(NBPRO) = "[F:PBDGEND]DOCNUM"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.DOCNUM"
NBPRO += 1 : TBPRO(NBPRO) = "BPR" : TBFIL(NBPRO) = "[F:PBDGEND]BPR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.BPR"
NBPRO += 1 : TBPRO(NBPRO) = "ECODES" : TBFIL(NBPRO) = "[F:PBDGEND]ECODES"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.ECODES"
NBPRO += 1 : TBPRO(NBPRO) = "INFO" : TBFIL(NBPRO) = "[F:PBDGEND]INFO"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.INFO"
NBPRO += 1 : TBPRO(NBPRO) = "ISIN" : TBFIL(NBPRO) = "[F:PBDGEND]ISIN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.ISIN"
NBPRO += 1 : TBPRO(NBPRO) = "NOMAMT" : TBFIL(NBPRO) = "[F:PBDGEND]NOMAMT"
           : TBTYP(NBPRO) = 4 : TBPTH(NBPRO) = "PBDGEND.NOMAMT"
NBPRO += 1 : TBPRO(NBPRO) = "ISSCURR" : TBFIL(NBPRO) = "[F:PBDGEND]ISSCURR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.ISSCURR"
NBPRO += 1 : TBPRO(NBPRO) = "EUVATN" : TBFIL(NBPRO) = "[F:PBDGEND]EUVATN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.EUVATN"
NBPRO += 1 : TBPRO(NBPRO) = "ACCDAT" : TBFIL(NBPRO) = "[F:PBDGEND]ACCDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "PBDGEND.ACCDAT"
NBPRO += 1 : TBPRO(NBPRO) = "FLG" : TBFIL(NBPRO) = "[F:PBDGEND]FLG"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "PBDGEND.FLG"
NBPRO += 1 : TBPRO(NBPRO) = "NPC" : TBFIL(NBPRO) = "[F:PBDGEND]NPC"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.NPC"
NBPRO += 1 : TBPRO(NBPRO) = "NPC2" : TBFIL(NBPRO) = "[F:PBDGEND]NPC2"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.NPC2"
NBPRO += 1 : TBPRO(NBPRO) = "ACCTYP" : TBFIL(NBPRO) = "[F:PBDGEND]ACCTYP"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "PBDGEND.ACCTYP"
NBPRO += 1 : TBPRO(NBPRO) = "BIDNUM" : TBFIL(NBPRO) = "[F:PBDGEND]BIDNUM"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.BIDNUM"
NBPRO += 1 : TBPRO(NBPRO) = "ACCCRY" : TBFIL(NBPRO) = "[F:PBDGEND]ACCCRY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.ACCCRY"
NBPRO += 1 : TBPRO(NBPRO) = "ACTCRY" : TBFIL(NBPRO) = "[F:PBDGEND]ACTCRY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.ACTCRY"
NBPRO += 1 : TBPRO(NBPRO) = "DUEDAT" : TBFIL(NBPRO) = "[F:PBDGEND]DUEDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "PBDGEND.DUEDAT"
NBPRO += 1 : TBPRO(NBPRO) = "COUPAR" : TBFIL(NBPRO) = "[F:PBDGEND]COUPAR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.COUPAR"
NBPRO += 1 : TBPRO(NBPRO) = "COUPARCRY" : TBFIL(NBPRO) = "[F:PBDGEND]COUPARCRY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "PBDGEND.COUPARCRY"
NBPRO += 1 : TBPRO(NBPRO) = "CRITERIA" : TBFIL(NBPRO) = "[F:PBDGEND]"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CRITERIA"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:PBDGEND]CODE"
ASTDKEY += ";"+"[F:PBDGEND]LEG"
ASTDKEY += ";"+"[F:PBDGEND]ISDETAIL"
ASTDKEY += ";"+"[F:PBDGEND]ISOITEM"
ASTDKEY += ";"+"[F:PBDGEND]LINE"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From PBDGEND_RSTD
Gosub EVENTS From PBDGEND_RSTD
Return
 


