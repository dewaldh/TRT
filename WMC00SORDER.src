#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales orders - header
# Supervisor
## CRUD-CLASSE ## SORDER
# 2018-08-27 12:48:01 036

Gosub TEST From WMCR_SORDER : End

############################################################################################
## R : Subprog AREAD(INSTANCE,SOHNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# SORDER : SORDER
# SORDERP : SORDER SORDERP
# SORDERQ : SORDERP SORDERQ
# CPTANALIN : SORDERP CPTANALIN
# SVCRVAT : SORDER SVCRVAT
# SVCRFOOT : SORDER SVCRFOOT
# CPTANALIN : SVCRFOOT CPTANALIN
# GACCDUDATE : SORDER GACCDUDATE
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet SORDER._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5,A_N6,A_S6,A_N7,A_S7,A_N8,A_S8
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = SORDER.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(SORDER.ACTX.AFOLDER,nomap,"")>0
 Local File SORDER [SOH]
 Local File SORDERP [SOP]
 Local File SORDERQ [SOQ]
 Local File CPTANALIN [CALSOP]
 Local File SVCRVAT [SVV]
 Local File SVCRFOOT [SVF]
 Local File CPTANALIN [CALSVF]
 Local File GACCDUDATE [DUD]
 Local File ATEXTRA [AXX]
Else
 Local File =SORDER.ACTX.AFOLDER+".SORDER" [SOH]
 Local File =SORDER.ACTX.AFOLDER+".SORDERP" [SOP]
 Local File =SORDER.ACTX.AFOLDER+".SORDERQ" [SOQ]
 Local File =SORDER.ACTX.AFOLDER+".CPTANALIN" [CALSOP]
 Local File =SORDER.ACTX.AFOLDER+".SVCRVAT" [SVV]
 Local File =SORDER.ACTX.AFOLDER+".SVCRFOOT" [SVF]
 Local File =SORDER.ACTX.AFOLDER+".CPTANALIN" [CALSVF]
 Local File =SORDER.ACTX.AFOLDER+".GACCDUDATE" [DUD]
 Local File =SORDER.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet SORDER.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [SOH] With
& [SOP]SOP0 ~= [F:SOH]SOHNUM,
& [SOQ]SOQ0 = [F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ,
& [CALSOP]CAL0 ~= "SOP";0;[F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ;"";1,
& [SVV]SVV0 = 20;[F:SOH]SOHNUM,
& [SVF]SVF1 = 20;[F:SOH]SOHNUM,
& [CALSVF]CAL0 ~= "SVF";[F:SVF]VCRTYP;[F:SVF]VCRNUM;0;[F:SVF]DTA;"";1,
& [DUD]DUD0 = "*SO";[F:SOH]SOHNUM
& As [LNK_]
Return

############################################################################################
### SORDER(WSOH)
############################################################################################
Funprog  _MAJSQL_SORDER(WSOH)
Variable Instance WSOH Using C_SORDER
Local Integer ASTATUS,A_I,A_J
Default File [F:SOH]
If WSOH.ASTALIN=[V]CST_ANEW
 Call INICRE(WSOH) From ASYRSUB
 SetInstance [F:SOH] With WSOH
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WSOH.C_ANA)
   If WSOH.C_ANA([L]A_I)<>null & !find(WSOH.C_ANA([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_ANA([L]A_I).AORDER=[L]A_J
    [F:SOH]DIE([L]A_J-1) = WSOH.C_ANA([L]A_I).DIE
    [F:SOH]CCE([L]A_J-1) = WSOH.C_ANA([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOH.C_BPCADDLIG)
   If WSOH.C_BPCADDLIG([L]A_I)<>null & !find(WSOH.C_BPCADDLIG([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPCADDLIG([L]A_I).AORDER=[L]A_J
    [F:SOH]BPCADDLIG([L]A_J-1) = WSOH.C_BPCADDLIG([L]A_I).BPCADDLIG
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_BPCNAM)
   If WSOH.C_BPCNAM([L]A_I)<>null & !find(WSOH.C_BPCNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPCNAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPCNAM([L]A_J-1) = WSOH.C_BPCNAM([L]A_I).BPCNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOH.C_BPDADDLIG)
   If WSOH.C_BPDADDLIG([L]A_I)<>null & !find(WSOH.C_BPDADDLIG([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPDADDLIG([L]A_I).AORDER=[L]A_J
    [F:SOH]BPDADDLIG([L]A_J-1) = WSOH.C_BPDADDLIG([L]A_I).BPDADDLIG
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_BPDNAM)
   If WSOH.C_BPDNAM([L]A_I)<>null & !find(WSOH.C_BPDNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPDNAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPDNAM([L]A_J-1) = WSOH.C_BPDNAM([L]A_I).BPDNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOH.C_BPIADDLIG)
   If WSOH.C_BPIADDLIG([L]A_I)<>null & !find(WSOH.C_BPIADDLIG([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPIADDLIG([L]A_I).AORDER=[L]A_J
    [F:SOH]BPIADDLIG([L]A_J-1) = WSOH.C_BPIADDLIG([L]A_I).BPIADDLIG
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_BPINAM)
   If WSOH.C_BPINAM([L]A_I)<>null & !find(WSOH.C_BPINAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPINAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPINAM([L]A_J-1) = WSOH.C_BPINAM([L]A_I).BPINAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 9
  For [L]A_I=1 To maxtab(WSOH.C_DISCRGTYP)
   If WSOH.C_DISCRGTYP([L]A_I)<>null & !find(WSOH.C_DISCRGTYP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_DISCRGTYP([L]A_I).AORDER=[L]A_J
    [F:SOH]DISCRGTYP([L]A_J-1) = WSOH.C_DISCRGTYP([L]A_I).DISCRGTYP
    [F:SOH]INVDTALIN([L]A_J-1) = WSOH.C_DISCRGTYP([L]A_I).INVDTALIN
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 30
  For [L]A_I=1 To maxtab(WSOH.C_INVDTAAMT)
   If WSOH.C_INVDTAAMT([L]A_I)<>null & !find(WSOH.C_INVDTAAMT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_INVDTAAMT([L]A_I).AORDER=[L]A_J
    [F:SOH]INVDTAAMT([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTAAMT
    [F:SOH]INVDTATYP([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTATYP
    [F:SOH]INVDTADSP([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTADSP
    [F:SOH]INVDTA([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTA
    For J=1 To maxtab(WSOH.C_INVDTAAMT([L]A_I).AXX)
     If WSOH.C_INVDTAAMT([L]A_I).AXX(J)<>null & WSOH.C_INVDTAAMT([L]A_I).AXX(J).PRO= "INVDTASHO" & WSOH.C_INVDTAAMT([L]A_I).AXX(J).FLG>0
      Call MAJTEXTRALAN(WSOH.C_INVDTAAMT([L]A_I),WSOH.C_INVDTAAMT([L]A_I).AXX(J).TEX,"SFOOTINV","SHOAXX",WSOH.C_INVDTAAMT([L]A_I).AXX(J).LAN,num$(WSOH.C_INVDTAAMT([L]A_I).INVDTA),"",[L]ASTATUS) From ASYRSUB
      If [L]ASTATUS>=[V]CST_AERROR : Break 3 : Endif
     Endif
    Next J
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_REP)
   If WSOH.C_REP([L]A_I)<>null & !find(WSOH.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_REP([L]A_I).AORDER=[L]A_J
    [F:SOH]REP([L]A_J-1) = WSOH.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WSOH.C_TSCCOD)
   If WSOH.C_TSCCOD([L]A_I)<>null & !find(WSOH.C_TSCCOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_TSCCOD([L]A_I).AORDER=[L]A_J
    [F:SOH]TSCCOD([L]A_J-1) = WSOH.C_TSCCOD([L]A_I).TSCCOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SOH]
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOH.updTick = [F:SOH]updTick
Elsif WSOH.ASTALIN=[V]CST_ALL or WSOH.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSOH) From ASYRSUB
 SetInstance [F:SOH] With WSOH
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WSOH.C_ANA)
   If WSOH.C_ANA([L]A_I)<>null & !find(WSOH.C_ANA([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_ANA([L]A_I).AORDER=[L]A_J
    [F:SOH]DIE([L]A_J-1) = WSOH.C_ANA([L]A_I).DIE
    [F:SOH]CCE([L]A_J-1) = WSOH.C_ANA([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOH.C_BPCADDLIG)
   If WSOH.C_BPCADDLIG([L]A_I)<>null & !find(WSOH.C_BPCADDLIG([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPCADDLIG([L]A_I).AORDER=[L]A_J
    [F:SOH]BPCADDLIG([L]A_J-1) = WSOH.C_BPCADDLIG([L]A_I).BPCADDLIG
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_BPCNAM)
   If WSOH.C_BPCNAM([L]A_I)<>null & !find(WSOH.C_BPCNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPCNAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPCNAM([L]A_J-1) = WSOH.C_BPCNAM([L]A_I).BPCNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOH.C_BPDADDLIG)
   If WSOH.C_BPDADDLIG([L]A_I)<>null & !find(WSOH.C_BPDADDLIG([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPDADDLIG([L]A_I).AORDER=[L]A_J
    [F:SOH]BPDADDLIG([L]A_J-1) = WSOH.C_BPDADDLIG([L]A_I).BPDADDLIG
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_BPDNAM)
   If WSOH.C_BPDNAM([L]A_I)<>null & !find(WSOH.C_BPDNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPDNAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPDNAM([L]A_J-1) = WSOH.C_BPDNAM([L]A_I).BPDNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOH.C_BPIADDLIG)
   If WSOH.C_BPIADDLIG([L]A_I)<>null & !find(WSOH.C_BPIADDLIG([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPIADDLIG([L]A_I).AORDER=[L]A_J
    [F:SOH]BPIADDLIG([L]A_J-1) = WSOH.C_BPIADDLIG([L]A_I).BPIADDLIG
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_BPINAM)
   If WSOH.C_BPINAM([L]A_I)<>null & !find(WSOH.C_BPINAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPINAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPINAM([L]A_J-1) = WSOH.C_BPINAM([L]A_I).BPINAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 9
  For [L]A_I=1 To maxtab(WSOH.C_DISCRGTYP)
   If WSOH.C_DISCRGTYP([L]A_I)<>null & !find(WSOH.C_DISCRGTYP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_DISCRGTYP([L]A_I).AORDER=[L]A_J
    [F:SOH]DISCRGTYP([L]A_J-1) = WSOH.C_DISCRGTYP([L]A_I).DISCRGTYP
    [F:SOH]INVDTALIN([L]A_J-1) = WSOH.C_DISCRGTYP([L]A_I).INVDTALIN
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 30
  For [L]A_I=1 To maxtab(WSOH.C_INVDTAAMT)
   If WSOH.C_INVDTAAMT([L]A_I)<>null & !find(WSOH.C_INVDTAAMT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_INVDTAAMT([L]A_I).AORDER=[L]A_J
    [F:SOH]INVDTAAMT([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTAAMT
    [F:SOH]INVDTATYP([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTATYP
    [F:SOH]INVDTADSP([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTADSP
    [F:SOH]INVDTA([L]A_J-1) = WSOH.C_INVDTAAMT([L]A_I).INVDTA
    For J=1 To maxtab(WSOH.C_INVDTAAMT([L]A_I).AXX)
     If WSOH.C_INVDTAAMT([L]A_I).AXX(J)<>null & WSOH.C_INVDTAAMT([L]A_I).AXX(J).PRO= "INVDTASHO" & WSOH.C_INVDTAAMT([L]A_I).AXX(J).FLG>0
      Call MAJTEXTRALAN(WSOH.C_INVDTAAMT([L]A_I),WSOH.C_INVDTAAMT([L]A_I).AXX(J).TEX,"SFOOTINV","SHOAXX",WSOH.C_INVDTAAMT([L]A_I).AXX(J).LAN,num$(WSOH.C_INVDTAAMT([L]A_I).INVDTA),"",[L]ASTATUS) From ASYRSUB
      If [L]ASTATUS>=[V]CST_AERROR : Break 3 : Endif
     Endif
    Next J
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WSOH.C_REP)
   If WSOH.C_REP([L]A_I)<>null & !find(WSOH.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_REP([L]A_I).AORDER=[L]A_J
    [F:SOH]REP([L]A_J-1) = WSOH.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WSOH.C_TSCCOD)
   If WSOH.C_TSCCOD([L]A_I)<>null & !find(WSOH.C_TSCCOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_TSCCOD([L]A_I).AORDER=[L]A_J
    [F:SOH]TSCCOD([L]A_J-1) = WSOH.C_TSCCOD([L]A_I).TSCCOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOH,"SORDER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SOH]SOH0 = [F:SOH]SOHNUM
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOH.updTick = [F:SOH]updTick
Elsif WSOH.ASTALIN=[V]CST_ADEL
 SetInstance [F:SOH] With WSOH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOH,"SORDER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SOH]SOH0 = [F:SOH]SOHNUM
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SORDERP(WSOP)
############################################################################################
Funprog  _MAJSQL_SORDERP(WSOP)
Variable Instance WSOP Using C_SORDERP
Local Integer ASTATUS,A_I,A_J
Default File [F:SOP]
If WSOP.ASTALIN=[V]CST_ANEW
 Call INICRE(WSOP) From ASYRSUB
 SetInstance [F:SOP] With WSOP
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WSOP.C_TSICOD)
   If WSOP.C_TSICOD([L]A_I)<>null & !find(WSOP.C_TSICOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOP.C_TSICOD([L]A_I).AORDER=[L]A_J
    [F:SOP]TSICOD([L]A_J-1) = WSOP.C_TSICOD([L]A_I).TSICOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOP.C_VACITM)
   If WSOP.C_VACITM([L]A_I)<>null & !find(WSOP.C_VACITM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOP.C_VACITM([L]A_I).AORDER=[L]A_J
    [F:SOP]VACITM([L]A_J-1) = WSOP.C_VACITM([L]A_I).VACITM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOP.C_VAT)
   If WSOP.C_VAT([L]A_I)<>null & !find(WSOP.C_VAT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOP.C_VAT([L]A_I).AORDER=[L]A_J
    [F:SOP]VAT([L]A_J-1) = WSOP.C_VAT([L]A_I).VAT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SOP]
 If fstat
  Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOP.updTick = [F:SOP]updTick
Elsif WSOP.ASTALIN=[V]CST_ALL or WSOP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSOP) From ASYRSUB
 SetInstance [F:SOP] With WSOP
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WSOP.C_TSICOD)
   If WSOP.C_TSICOD([L]A_I)<>null & !find(WSOP.C_TSICOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOP.C_TSICOD([L]A_I).AORDER=[L]A_J
    [F:SOP]TSICOD([L]A_J-1) = WSOP.C_TSICOD([L]A_I).TSICOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOP.C_VACITM)
   If WSOP.C_VACITM([L]A_I)<>null & !find(WSOP.C_VACITM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOP.C_VACITM([L]A_I).AORDER=[L]A_J
    [F:SOP]VACITM([L]A_J-1) = WSOP.C_VACITM([L]A_I).VACITM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 3
  For [L]A_I=1 To maxtab(WSOP.C_VAT)
   If WSOP.C_VAT([L]A_I)<>null & !find(WSOP.C_VAT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOP.C_VAT([L]A_I).AORDER=[L]A_J
    [F:SOP]VAT([L]A_J-1) = WSOP.C_VAT([L]A_I).VAT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOP,"SORDERP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SOP]SOP0 = [F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ
 If fstat
  Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOP.updTick = [F:SOP]updTick
Elsif WSOP.ASTALIN=[V]CST_ADEL
 SetInstance [F:SOP] With WSOP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOP,"SORDERP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SOP]SOP0 = [F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ
 If fstat
  Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SORDERQ(WSOQ)
############################################################################################
Funprog  _MAJSQL_SORDERQ(WSOQ)
Variable Instance WSOQ Using C_SORDERQ
Local Integer ASTATUS,A_I,A_J
Default File [F:SOQ]
If WSOQ.ASTALIN=[V]CST_ANEW
 Call INICRE(WSOQ) From ASYRSUB
 SetInstance [F:SOQ] With WSOQ
 For [L]A_J=1 to 9
  For [L]A_I=1 To maxtab(WSOQ.C_DDTANUM)
   If WSOQ.C_DDTANUM([L]A_I)<>null & !find(WSOQ.C_DDTANUM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOQ.C_DDTANUM([L]A_I).AORDER=[L]A_J
    [F:SOQ]DDTANUM([L]A_J-1) = WSOQ.C_DDTANUM([L]A_I).DDTANUM
    [F:SOQ]DDTANOT([L]A_J-1) = WSOQ.C_DDTANUM([L]A_I).DDTANOT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SOQ]
 If fstat
  Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOQ.updTick = [F:SOQ]updTick
Elsif WSOQ.ASTALIN=[V]CST_ALL or WSOQ.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSOQ) From ASYRSUB
 SetInstance [F:SOQ] With WSOQ
 For [L]A_J=1 to 9
  For [L]A_I=1 To maxtab(WSOQ.C_DDTANUM)
   If WSOQ.C_DDTANUM([L]A_I)<>null & !find(WSOQ.C_DDTANUM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOQ.C_DDTANUM([L]A_I).AORDER=[L]A_J
    [F:SOQ]DDTANUM([L]A_J-1) = WSOQ.C_DDTANUM([L]A_I).DDTANUM
    [F:SOQ]DDTANOT([L]A_J-1) = WSOQ.C_DDTANUM([L]A_I).DDTANOT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOQ,"SORDERQ")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SOQ]SOQ0 = [F:SOQ]SOHNUM;[F:SOQ]SOPLIN;[F:SOQ]SOQSEQ
 If fstat
  Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOQ.updTick = [F:SOQ]updTick
Elsif WSOQ.ASTALIN=[V]CST_ADEL
 SetInstance [F:SOQ] With WSOQ
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOQ,"SORDERQ")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SOQ]SOQ0 = [F:SOQ]SOHNUM;[F:SOQ]SOPLIN;[F:SOQ]SOQSEQ
 If fstat
  Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### CPTANALIN(WCALSOP)
############################################################################################
Funprog  _MAJSQL_CPTANALIN(WCALSOP)
Variable Instance WCALSOP Using C_CPTANALIN
Local Integer ASTATUS,A_I,A_J
Default File [F:CALSOP]
If WCALSOP.ASTALIN=[V]CST_ANEW
 Call INICRE(WCALSOP) From ASYRSUB
 SetInstance [F:CALSOP] With WCALSOP
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WCALSOP.C_COA)
   If WCALSOP.C_COA([L]A_I)<>null & !find(WCALSOP.C_COA([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WCALSOP.C_COA([L]A_I).AORDER=[L]A_J
    [F:CALSOP]COA([L]A_J-1) = WCALSOP.C_COA([L]A_I).COA
    [F:CALSOP]ACC([L]A_J-1) = WCALSOP.C_COA([L]A_I).ACC
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WCALSOP.C_DIE)
   If WCALSOP.C_DIE([L]A_I)<>null & !find(WCALSOP.C_DIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WCALSOP.C_DIE([L]A_I).AORDER=[L]A_J
    [F:CALSOP]DIE([L]A_J-1) = WCALSOP.C_DIE([L]A_I).DIE
    [F:CALSOP]CCE([L]A_J-1) = WCALSOP.C_DIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WCALSOP.C_LED)
   If WCALSOP.C_LED([L]A_I)<>null & !find(WCALSOP.C_LED([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WCALSOP.C_LED([L]A_I).AORDER=[L]A_J
    [F:CALSOP]LED([L]A_J-1) = WCALSOP.C_LED([L]A_I).LED
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:CALSOP]
 If fstat
  Call FSTA("CALSOP",WCALSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCALSOP.updTick = [F:CALSOP]updTick
Elsif WCALSOP.ASTALIN=[V]CST_ALL or WCALSOP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCALSOP) From ASYRSUB
 SetInstance [F:CALSOP] With WCALSOP
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WCALSOP.C_COA)
   If WCALSOP.C_COA([L]A_I)<>null & !find(WCALSOP.C_COA([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WCALSOP.C_COA([L]A_I).AORDER=[L]A_J
    [F:CALSOP]COA([L]A_J-1) = WCALSOP.C_COA([L]A_I).COA
    [F:CALSOP]ACC([L]A_J-1) = WCALSOP.C_COA([L]A_I).ACC
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WCALSOP.C_DIE)
   If WCALSOP.C_DIE([L]A_I)<>null & !find(WCALSOP.C_DIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WCALSOP.C_DIE([L]A_I).AORDER=[L]A_J
    [F:CALSOP]DIE([L]A_J-1) = WCALSOP.C_DIE([L]A_I).DIE
    [F:CALSOP]CCE([L]A_J-1) = WCALSOP.C_DIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WCALSOP.C_LED)
   If WCALSOP.C_LED([L]A_I)<>null & !find(WCALSOP.C_LED([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WCALSOP.C_LED([L]A_I).AORDER=[L]A_J
    [F:CALSOP]LED([L]A_J-1) = WCALSOP.C_LED([L]A_I).LED
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCALSOP,"CPTANALIN")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CALSOP]CAL0 = [F:CALSOP]ABRFIC;[F:CALSOP]VCRTYP;[F:CALSOP]VCRNUM;[F:CALSOP]VCRLIN;[F:CALSOP]VCRSEQ;[F:CALSOP]CPLCLE;[F:CALSOP]ANALIG
 If fstat
  Call FSTA("CALSOP",WCALSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCALSOP.updTick = [F:CALSOP]updTick
Elsif WCALSOP.ASTALIN=[V]CST_ADEL
 SetInstance [F:CALSOP] With WCALSOP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCALSOP,"CPTANALIN")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CALSOP]CAL0 = [F:CALSOP]ABRFIC;[F:CALSOP]VCRTYP;[F:CALSOP]VCRNUM;[F:CALSOP]VCRLIN;[F:CALSOP]VCRSEQ;[F:CALSOP]CPLCLE;[F:CALSOP]ANALIG
 If fstat
  Call FSTA("CALSOP",WCALSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SVCRVAT(WSVV)
############################################################################################
Funprog  _MAJSQL_SVCRVAT(WSVV)
Variable Instance WSVV Using C_SVCRVAT
Local Integer ASTATUS,A_I,A_J
Default File [F:SVV]
If WSVV.ASTALIN=[V]CST_ANEW
 Call INICRE(WSVV) From ASYRSUB
 SetInstance [F:SVV] With WSVV
 For J=1 To maxtab(WSVV.AXX)
  If WSVV.AXX(J)<>null & WSVV.AXX(J).PRO= "SHOAXX" & WSVV.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVV,WSVV.AXX(J).TEX,"TABVAT","SHOAXX",WSVV.AXX(J).LAN,WSVV.VAT,WSVV.VAT_LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SVV]
 If fstat
  Call FSTA("SVV",WSVV,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVV.updTick = [F:SVV]updTick
Elsif WSVV.ASTALIN=[V]CST_ALL or WSVV.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSVV) From ASYRSUB
 SetInstance [F:SVV] With WSVV
 For J=1 To maxtab(WSVV.AXX)
  If WSVV.AXX(J)<>null & WSVV.AXX(J).PRO= "SHOAXX" & WSVV.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVV,WSVV.AXX(J).TEX,"TABVAT","SHOAXX",WSVV.AXX(J).LAN,WSVV.VAT,WSVV.VAT_LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVV,"SVCRVAT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SVV]SVV0 = [F:SVV]VCRTYP;[F:SVV]VCRNUM;[F:SVV]VAT
 If fstat
  Call FSTA("SVV",WSVV,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVV.updTick = [F:SVV]updTick
Elsif WSVV.ASTALIN=[V]CST_ADEL
 SetInstance [F:SVV] With WSVV
 For J=1 To maxtab(WSVV.AXX)
  If WSVV.AXX(J)<>null & WSVV.AXX(J).PRO= "SHOAXX"
   Call SUPTEXTRA(WSVV,WSVV.AXX(J).TEX,"TABVAT","SHOAXX",WSVV.AXX(J).LAN,WSVV.VAT,WSVV.VAT_LEG,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVV,"SVCRVAT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SVV]SVV0 = [F:SVV]VCRTYP;[F:SVV]VCRNUM;[F:SVV]VAT
 If fstat
  Call FSTA("SVV",WSVV,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SVCRFOOT(WSVF)
############################################################################################
Funprog  _MAJSQL_SVCRFOOT(WSVF)
Variable Instance WSVF Using C_SVCRFOOT
Local Integer ASTATUS,A_I,A_J
Default File [F:SVF]
If WSVF.ASTALIN=[V]CST_ANEW
 Call INICRE(WSVF) From ASYRSUB
 SetInstance [F:SVF] With WSVF
 For J=1 To maxtab(WSVF.AXX)
  If WSVF.AXX(J)<>null & WSVF.AXX(J).PRO= "SHOAXX" & WSVF.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVF,WSVF.AXX(J).TEX,"SFOOTINV","SHOAXX",WSVF.AXX(J).LAN,num$(WSVF.DTA),"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WSVF.C_DTAVAT)
   If WSVF.C_DTAVAT([L]A_I)<>null & !find(WSVF.C_DTAVAT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSVF.C_DTAVAT([L]A_I).AORDER=[L]A_J
    [F:SVF]DTAVATNOT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVATNOT
    [F:SVF]DTANET([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTANET
    [F:SVF]DTAVAT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVAT
    [F:SVF]DTAVATRAT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVATRAT
    [F:SVF]DTAVATAMT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVATAMT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SVF]
 If fstat
  Call FSTA("SVF",WSVF,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVF.updTick = [F:SVF]updTick
Elsif WSVF.ASTALIN=[V]CST_ALL or WSVF.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSVF) From ASYRSUB
 SetInstance [F:SVF] With WSVF
 For J=1 To maxtab(WSVF.AXX)
  If WSVF.AXX(J)<>null & WSVF.AXX(J).PRO= "SHOAXX" & WSVF.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVF,WSVF.AXX(J).TEX,"SFOOTINV","SHOAXX",WSVF.AXX(J).LAN,num$(WSVF.DTA),"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WSVF.C_DTAVAT)
   If WSVF.C_DTAVAT([L]A_I)<>null & !find(WSVF.C_DTAVAT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSVF.C_DTAVAT([L]A_I).AORDER=[L]A_J
    [F:SVF]DTAVATNOT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVATNOT
    [F:SVF]DTANET([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTANET
    [F:SVF]DTAVAT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVAT
    [F:SVF]DTAVATRAT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVATRAT
    [F:SVF]DTAVATAMT([L]A_J-1) = WSVF.C_DTAVAT([L]A_I).DTAVATAMT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVF,"SVCRFOOT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SVF]SVF1 = [F:SVF]VCRTYP;[F:SVF]VCRNUM;[F:SVF]DTA
 If fstat
  Call FSTA("SVF",WSVF,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVF.updTick = [F:SVF]updTick
Elsif WSVF.ASTALIN=[V]CST_ADEL
 SetInstance [F:SVF] With WSVF
 For J=1 To maxtab(WSVF.AXX)
  If WSVF.AXX(J)<>null & WSVF.AXX(J).PRO= "SHOAXX"
   Call SUPTEXTRA(WSVF,WSVF.AXX(J).TEX,"SFOOTINV","SHOAXX",WSVF.AXX(J).LAN,num$(WSVF.DTA),"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVF,"SVCRFOOT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SVF]SVF1 = [F:SVF]VCRTYP;[F:SVF]VCRNUM;[F:SVF]DTA
 If fstat
  Call FSTA("SVF",WSVF,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### GACCDUDATE(WDUD)
############################################################################################
Funprog  _MAJSQL_GACCDUDATE(WDUD)
Variable Instance WDUD Using C_GACCDUDATE
Local Integer ASTATUS,A_I,A_J
Default File [F:DUD]
If WDUD.ASTALIN=[V]CST_ANEW
 Call INICRE(WDUD) From ASYRSUB
 SetInstance [F:DUD] With WDUD
 Write [F:DUD]
 If fstat
  Call FSTA("DUD",WDUD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WDUD.updTick = [F:DUD]updTick
Elsif WDUD.ASTALIN=[V]CST_ALL or WDUD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WDUD) From ASYRSUB
 SetInstance [F:DUD] With WDUD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WDUD,"GACCDUDATE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:DUD]DUD0 = [F:DUD]TYP;[F:DUD]NUM;[F:DUD]LIG;[F:DUD]DUDLIG
 If fstat
  Call FSTA("DUD",WDUD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WDUD.updTick = [F:DUD]updTick
Elsif WDUD.ASTALIN=[V]CST_ADEL
 SetInstance [F:DUD] With WDUD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WDUD,"GACCDUDATE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:DUD]DUD0 = [F:DUD]TYP;[F:DUD]NUM;[F:DUD]LIG;[F:DUD]DUDLIG
 If fstat
  Call FSTA("DUD",WDUD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_SORDER_CLASOHTEX1(WSOH,CLASOHTEX1)
Variable Instance WSOH Using C_SORDER
Value Clbfile CLASOHTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WSOH.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLASOHTEX1
 Raz [TXC]
 Call INICRE(WSOH) From ASYRSUB
 [F:TXC]CODE = WSOH.SOHTEX1
 [F:TXC]TEXTE = [L]CLASOHTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WSOH.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WSOH.SOHTEX1
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WSOH.ASTALIN=[V]CST_ALL or WSOH.ASTALIN=[V]CST_AUPD
 If fmet WSOH.AGETATTRIBUTE("CLASOHTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WSOH.SOHTEX1
  If !fstat & [L]WEMPTY<>[L]CLASOHTEX1
   Call INIUPD(WSOH) From ASYRSUB
   [F:TXC]TEXTE = [L]CLASOHTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLASOHTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLASOHTEX1
   Raz [TXC]
   Call INICRE(WSOH) From ASYRSUB
   [TXC]CODE = WSOH.SOHTEX1
   [F:TXC]TEXTE = [L]CLASOHTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_SORDER_CLASOHTEX2(WSOH,CLASOHTEX2)
Variable Instance WSOH Using C_SORDER
Value Clbfile CLASOHTEX2
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WSOH.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLASOHTEX2
 Raz [TXC]
 Call INICRE(WSOH) From ASYRSUB
 [F:TXC]CODE = WSOH.SOHTEX2
 [F:TXC]TEXTE = [L]CLASOHTEX2
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WSOH.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WSOH.SOHTEX2
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WSOH.ASTALIN=[V]CST_ALL or WSOH.ASTALIN=[V]CST_AUPD
 If fmet WSOH.AGETATTRIBUTE("CLASOHTEX2","$isLoaded")="true"
  Read [F:TXC]TXC0 =WSOH.SOHTEX2
  If !fstat & [L]WEMPTY<>[L]CLASOHTEX2
   Call INIUPD(WSOH) From ASYRSUB
   [F:TXC]TEXTE = [L]CLASOHTEX2
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLASOHTEX2
   Delete [F:TXC]
   If fstat
    Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLASOHTEX2
   Raz [TXC]
   Call INICRE(WSOH) From ASYRSUB
   [TXC]CODE = WSOH.SOHTEX2
   [F:TXC]TEXTE = [L]CLASOHTEX2
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_SORDERP_PICITMREF(WSOP,PICITMREF)
Variable Instance WSOP Using C_SORDERP
Value Blbfile PICITMREF
Local Blbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File CBLOB [F:CBB]
If WSOP.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]PICITMREF
 Raz [CBB]
 Call INICRE(WSOP) From ASYRSUB
 [F:CBB]CODBLB = "ITM"
 [F:CBB]IDENT1 = WSOP.APARENT.ITMREF
 [F:CBB]IDENT2 = ""
 [F:CBB]BLOB = [L]PICITMREF
 [L]WATYP = 'ATYPE9-1'
 [L]WCNT = 'image'
 [F:CBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
 Write [F:CBB]
 If fstat
  Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WSOP.ASTALIN=[V]CST_ADEL
 Read [F:CBB]CBB0 ="ITM";WSOP.APARENT.ITMREF;""
 If !fstat
  Delete [F:CBB]
  If fstat
   Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WSOP.ASTALIN=[V]CST_ALL or WSOP.ASTALIN=[V]CST_AUPD
 If fmet WSOP.AGETATTRIBUTE("PICITMREF","$isLoaded")="true"
  Read [F:CBB]CBB0 ="ITM";WSOP.APARENT.ITMREF;""
  If !fstat & [L]WEMPTY<>[L]PICITMREF
   Call INIUPD(WSOP) From ASYRSUB
   [F:CBB]BLOB = [L]PICITMREF
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:CBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Rewrite [F:CBB]
   If fstat
    Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]PICITMREF
   Delete [F:CBB]
   If fstat
    Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]PICITMREF
   Raz [CBB]
   Call INICRE(WSOP) From ASYRSUB
   [CBB]CODBLB = "ITM"
   [CBB]IDENT1 = WSOP.APARENT.ITMREF
   [CBB]IDENT2 = ""
   [F:CBB]BLOB = [L]PICITMREF
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:CBB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Write [F:CBB]
   If fstat
    Call FSTA("SOP",WSOP,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:CBB]
End 0

Funprog  _MAJSQL_SORDERQ_CLASOQTEX(WSOQ,CLASOQTEX)
Variable Instance WSOQ Using C_SORDERQ
Value Clbfile CLASOQTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WSOQ.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLASOQTEX
 Raz [TXC]
 Call INICRE(WSOQ) From ASYRSUB
 [F:TXC]CODE = WSOQ.APARENT.SOQTEX
 [F:TXC]TEXTE = [L]CLASOQTEX
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WSOQ.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WSOQ.APARENT.SOQTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WSOQ.ASTALIN=[V]CST_ALL or WSOQ.ASTALIN=[V]CST_AUPD
 If fmet WSOQ.AGETATTRIBUTE("CLASOQTEX","$isLoaded")="true"
  Read [F:TXC]TXC0 =WSOQ.APARENT.SOQTEX
  If !fstat & [L]WEMPTY<>[L]CLASOQTEX
   Call INIUPD(WSOQ) From ASYRSUB
   [F:TXC]TEXTE = [L]CLASOQTEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLASOQTEX
   Delete [F:TXC]
   If fstat
    Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLASOQTEX
   Raz [TXC]
   Call INICRE(WSOQ) From ASYRSUB
   [TXC]CODE = WSOQ.APARENT.SOQTEX
   [F:TXC]TEXTE = [L]CLASOQTEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("SOQ",WSOQ,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0



