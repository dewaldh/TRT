#<AdxTL>@(#)0.0.0.0 $Revision$Class Business batch
# Supervisor
## CRUD-CLASSE ## YBBT
# 2018-09-25 01:20:19 524


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(YBBT,ASTATUS)
Variable Instance YBBT Using C_YBBT
Variable Integer ASTATUS

If YBBT = null : End : Endif

Gosub _AVARIABLES From WMC00YBBT

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_YBBT

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(YBBT,ASTATUS)
Variable Instance YBBT Using C_YBBT
Variable Integer ASTATUS

If YBBT = null : End : Endif

Gosub AVARIABLES From WMC00YBBT
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
YBBT.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_YBBT
Else
 Gosub AUPDATE_YBBT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = YBBT.freeSnapshot
YBBT.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YBBT._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YBBT._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YBBT._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If YBBT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YBBT.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(YBBT.ASTALIN)<>""
 [L]A_ASTALIN = YBBT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(YBBT.YBBD) : # YBBD -- 2
 If YBBT.YBBD(A_N2) <> null
& and YBBT.YBBD(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(YBBT.YBBD) : # YBBD -- 2
 If YBBT.YBBD(A_N2) <> null
& and YBBT.YBBD(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(YBBT.ASTALIN)<>""
 [L]A_ASTALIN = YBBT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_YBBT
Trbegin [F:YBBH]
 Gosub AUPDATE_YBBT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_YBBT
[L]A_ASTALIN = YBBT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00YBBT._MAJSQL_YBBHEADER(YBBT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(YBBT.YBBD)
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YBBT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If YBBT.snapshotEnabled=1
 [L]A_RETIK = YBBT.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YBBT.YBBD)
 If YBBT.YBBD(A_N2) <> null
  [L]ASTATUS2 = fmet YBBT.YBBD(A_N2)._AUPDATE_ABORT
  If YBBT.YBBD(A_N2).ASTALIN=[V]CST_ADEL or YBBT.YBBD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YBBT.YBBD(A_N2)
   YBBT.YBBD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet YBBT.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(YBBT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YBBT.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YBBT.YBBD)
 If YBBT.YBBD(A_N2) <> null
  [L]ASTATUS2 = fmet YBBT.YBBD(A_N2)._AUPDATE_AFTER
  If YBBT.YBBD(A_N2).ASTALIN=[V]CST_ADEL or YBBT.YBBD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YBBT.YBBD(A_N2)
   YBBT.YBBD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



