#<AdxTL>@(#)0.0.0.0 $Revision$Class Land margin
# Supervisor
## CRUD-CLASSE ## YLDM
# 2018-10-19 04:44:16 157


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YLPLNDMRG [YLDS_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YLDM") From ASYRCOM : Endif
Local Instance YLDM Using C_YLDM

If !SILENCE : Call TRACE("3 --> New Instance C_YLDM") From ASYRCOM : Endif
YLDM = NewInstance C_YLDM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YLDS_]YLDS0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YLDM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YLDM.AREAD([YLDS_]YLNDPURID,[YLDS_]YNBR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YLDM.YLNDPURID ="-num$(YLDM.YLNDPURID)) From ASYRCOM
 Call TRACE("YLDM.YNBR ="-num$(YLDM.YNBR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YLDM.AKEYS)
  Call TRACE("-"-num$(I)-":"-YLDM.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YLDS_]
FreeGroup YLDM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YLDM,ACLE,ASTATUS,_ETAG)
Variable Instance YLDM Using C_YLDM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YLNDPURID(15)
Local Shortint _YNBR
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YLNDPURID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YNBR = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File YLPLNDMRG [YLDS]
Default File [F:YLDS]
Read [F:YLDS]YLDS0 = [L]_YLNDPURID;[L]_YNBR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YLDS]UPDTICK)>0
 [L]_ETAG = num$([F:YLDS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YLDM,ACLE,ASTATUS)
Variable Instance YLDM Using C_YLDM
Value Char ACLE
Variable Integer ASTATUS
Local Char _YLNDPURID(15)
Local Shortint _YNBR
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YLNDPURID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YNBR = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YLDM.AREAD([L]_YLNDPURID,[L]_YNBR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YLDM,_YLNDPURID,_YNBR,ASTATUS)
Variable Instance YLDM Using C_YLDM
Value Char _YLNDPURID
Value Shortint _YNBR
Variable Integer ASTATUS

If YLDM = null : End : Endif

Gosub AVARIABLES From WMC00YLDM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YLDM.APARENT=null
 [L]A_I = YLDM.freeSnapshot
 YLDM.snapshotEnabled = 0
 YLDM.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YLDM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YLDM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YLDM.APARENT=null
 YLDM.snapshotEnabled = 1
 YLDM.setAccessorEnabled = 1
Endif
LogicClose File [YLDS]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YLDM._ACTION_PARAM("AREAD_BEFORE",[L]_YLNDPURID,[L]_YNBR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YLDS]
Read [F:YLDS]YLDS0 = [L]_YLNDPURID;[L]_YNBR
If fstat
[L]A_ERROR = [L]_YLNDPURID+"~"+num$([L]_YNBR)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YLDM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YLDS]AUUID)>0 & [F:YLDS]AUUID=NullUuid
 [F:YLDS]AUUID = getUuid
Endif
SetInstance YLDM With [F:YLDS]
YLDM.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YLDM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



