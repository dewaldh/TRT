#<AdxTL>@(#)0.0.0.0 $Revision$Class Entity Loan Agreement
# Supervisor
## CRUD-CLASSE ## YELA
# 2018-08-27 13:46:05 605


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(YELA,ASTATUS)
Variable Instance YELA Using R_YELA
Variable Integer ASTATUS

If YELA = null : End : Endif

Gosub AVARIABLES From WMR00YELA
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_YELA
Else
 Gosub AUPDATE_YELA
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = YELA.freeSnapshot
YELA.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
YELA.ASTALIN = [V]CST_AUPD
YELA.YELA.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = YELA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YELA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YELA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YELA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YELA._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YELA._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YELA._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If YELA.YELA.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YELA.YELA.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(YELA.YELA.ASTALIN)<>""
 [L]A_ASTALIN = YELA.YELA.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YELA.YELA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(YELA.YELA.ASTALIN)<>""
 [L]A_ASTALIN = YELA.YELA.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YELA.YELA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_YELA
Trbegin [F:YELA]
 Gosub AUPDATE_YELA
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(YELA.YELA.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YELA.YELA.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_YELA
[L]A_ASTALIN = YELA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YELA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YELA.YELA._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YELA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YELA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If YELA.snapshotEnabled=1
 [L]A_RETIK = YELA.revertUpdTick
Endif

[L]ASTATUS = max(fmet YELA.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



