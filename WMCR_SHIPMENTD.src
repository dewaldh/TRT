#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment detail
# Supervisor
## CRUD-CLASSE ## SHIPMENTD
# 2018-08-27 12:45:49 954


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SHIPMENTD [SHD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SHIPMENTD") From ASYRCOM : Endif
Local Instance SHIPMENTD Using C_SHIPMENTD

If !SILENCE : Call TRACE("3 --> New Instance C_SHIPMENTD") From ASYRCOM : Endif
SHIPMENTD = NewInstance C_SHIPMENTD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SHD_]SHD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SHIPMENTD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENTD.AREAD([SHD_]SHIPNUM,[SHD_]SHIPLIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SHIPMENTD.SHIPNUM ="-num$(SHIPMENTD.SHIPNUM)) From ASYRCOM
 Call TRACE("SHIPMENTD.SHIPLIN ="-num$(SHIPMENTD.SHIPLIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SHIPMENTD.AKEYS)
  Call TRACE("-"-num$(I)-":"-SHIPMENTD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SHD_]
FreeGroup SHIPMENTD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SHIPMENTD,ACLE,ASTATUS,_ETAG)
Variable Instance SHIPMENTD Using C_SHIPMENTD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SHIPNUM(20)
Local Integer _SHIPLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SHIPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_SHIPLIN = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File SHIPMENTD [SHD]
Default File [F:SHD]
Read [F:SHD]SHD0 = [L]_SHIPNUM;[L]_SHIPLIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SHD]UPDTICK)>0
 [L]_ETAG = num$([F:SHD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SHIPMENTD,ACLE,ASTATUS)
Variable Instance SHIPMENTD Using C_SHIPMENTD
Value Char ACLE
Variable Integer ASTATUS
Local Char _SHIPNUM(20)
Local Integer _SHIPLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SHIPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_SHIPLIN = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENTD.AREAD([L]_SHIPNUM,[L]_SHIPLIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SHIPMENTD,_SHIPNUM,_SHIPLIN,ASTATUS)
Variable Instance SHIPMENTD Using C_SHIPMENTD
Value Char _SHIPNUM
Value Integer _SHIPLIN
Variable Integer ASTATUS

If SHIPMENTD = null : End : Endif

Gosub AVARIABLES From WMC00SHIPMENTD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SHIPMENTD.APARENT=null
 [L]A_I = SHIPMENTD.freeSnapshot
 SHIPMENTD.snapshotEnabled = 0
 SHIPMENTD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SHIPMENTD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENTD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SHIPMENTD.APARENT=null
 SHIPMENTD.snapshotEnabled = 1
 SHIPMENTD.setAccessorEnabled = 1
Endif
LogicClose File [SHD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENTD._ACTION_PARAM("AREAD_BEFORE",[L]_SHIPNUM,[L]_SHIPLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:SHD]
Read [F:SHD]SHD0 = [L]_SHIPNUM;[L]_SHIPLIN
If fstat
[L]A_ERROR = [L]_SHIPNUM+"~"+num$([L]_SHIPLIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SHIPMENTD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:SHD]AUUID)>0 & [F:SHD]AUUID=NullUuid
 [F:SHD]AUUID = getUuid
Endif
SetInstance SHIPMENTD With [F:SHD]
SHIPMENTD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENTD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



