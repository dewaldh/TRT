#<AdxTL>@(#)0.0.0.0 $Revision$Class Financial overview
# Supervisor
## ACLA-CLASSE ## TECFINOVE
# 2018-08-27 12:53:50 213

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "TECFINOVE_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Control
$CHECK_INPUT_DATA
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CHECK_INPUT_DATA" : [L]ACTION = "CHECK_INPUT_DATA" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$DATA_EXTRACT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DATA_EXTRACT" : [L]ACTION = "DATA_EXTRACT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deletion
$DELETE_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DELETE_ALL" : [L]ACTION = "DELETE_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deletion
$DELETE_PIMPLSEL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DELETE_PIMPLSEL" : [L]ACTION = "DELETE_PIMPLSEL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deletion
$DELETE_PJMDE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DELETE_PJMDE" : [L]ACTION = "DELETE_PJMDE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deletion
$DELETE_PJMSC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DELETE_PJMSC" : [L]ACTION = "DELETE_PJMSC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Deletion
$DELETE_PJMSCCT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DELETE_PJMSCCT" : [L]ACTION = "DELETE_PJMSCCT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Extraction
$EXTRACT_ALL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "EXTRACT_ALL" : [L]ACTION = "EXTRACT_ALL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Cost type
$GET_PCCCOD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_PCCCOD" : [L]ACTION = "GET_PCCCOD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Compute sum
$GET_SUM_PSCAMTX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_SUM_PSCAMTX" : [L]ACTION = "GET_SUM_PSCAMTX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Compute sum
$GET_SUM_PSCQTYX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_SUM_PSCQTYX" : [L]ACTION = "GET_SUM_PSCQTYX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod SQL query
$SQL_CLEAN_COMMENTS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SQL_CLEAN_COMMENTS" : [L]ACTION = "SQL_CLEAN_COMMENTS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Database
$SQL_GET_TYPDBA
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SQL_GET_TYPDBA" : [L]ACTION = "SQL_GET_TYPDBA" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod SQL query
$SQL_READ_CLOB
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SQL_READ_CLOB" : [L]ACTION = "SQL_READ_CLOB" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod SQL query
$SQL_RECURSIVITE_WORD_CLOB
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SQL_RECURSIVITE_WORD_CLOB" : [L]ACTION = "SQL_RECURSIVITE_WORD_CLOB" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod SQL query
$SQL_REPLACE_WORD_CLOB
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SQL_REPLACE_WORD_CLOB" : [L]ACTION = "SQL_REPLACE_WORD_CLOB" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Title extraction
$TITLE_EXTRACT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TITLE_EXTRACT" : [L]ACTION = "TITLE_EXTRACT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PIMPLSEL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PIMPLSEL" : [L]ACTION = "_DATA_EXTRACT_PIMPLSEL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMDE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMDE" : [L]ACTION = "_DATA_EXTRACT_PJMDE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMDE_EXECUTE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMDE_EXECUTE" : [L]ACTION = "_DATA_EXTRACT_PJMDE_EXECUTE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMDE_PROV
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMDE_PROV" : [L]ACTION = "_DATA_EXTRACT_PJMDE_PROV" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMDE_PROV_SQL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMDE_PROV_SQL" : [L]ACTION = "_DATA_EXTRACT_PJMDE_PROV_SQL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC" : [L]ACTION = "_DATA_EXTRACT_PJMSC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSCCT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSCCT" : [L]ACTION = "_DATA_EXTRACT_PJMSCCT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_CONSOLIDAT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_CONSOLIDAT" : [L]ACTION = "_DATA_EXTRACT_PJMSC_CONSOLIDAT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_EXECUTE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_EXECUTE" : [L]ACTION = "_DATA_EXTRACT_PJMSC_EXECUTE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_GET_SQL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_GET_SQL" : [L]ACTION = "_DATA_EXTRACT_PJMSC_GET_SQL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_PROV
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_PROV" : [L]ACTION = "_DATA_EXTRACT_PJMSC_PROV" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_PROV_SQL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_PROV_SQL" : [L]ACTION = "_DATA_EXTRACT_PJMSC_PROV_SQL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_QTYAMT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_QTYAMT" : [L]ACTION = "_DATA_EXTRACT_PJMSC_QTYAMT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_QTYAMT_SQL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_QTYAMT_SQL" : [L]ACTION = "_DATA_EXTRACT_PJMSC_QTYAMT_SQL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_RATIO
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_RATIO" : [L]ACTION = "_DATA_EXTRACT_PJMSC_RATIO" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_SUM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_SUM" : [L]ACTION = "_DATA_EXTRACT_PJMSC_SUM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_SUM_SQL
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_SUM_SQL" : [L]ACTION = "_DATA_EXTRACT_PJMSC_SUM_SQL" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_DATA_EXTRACT_PJMSC_SUM_TOTAUX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_DATA_EXTRACT_PJMSC_SUM_TOTAUX" : [L]ACTION = "_DATA_EXTRACT_PJMSC_SUM_TOTAUX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Data extract
$_EXIST_PCCCOD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_EXIST_PCCCOD" : [L]ACTION = "_EXIST_PCCCOD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Unit
$_GET_BUDLIG_PLBU
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_BUDLIG_PLBU" : [L]ACTION = "_GET_BUDLIG_PLBU" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Group
$_GET_DEFAULT_GRP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_DEFAULT_GRP" : [L]ACTION = "_GET_DEFAULT_GRP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod String
$_GET_EMPTY_STRING
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_EMPTY_STRING" : [L]ACTION = "_GET_EMPTY_STRING" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Cost type
$_GET_ITM_PCCCOD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_ITM_PCCCOD" : [L]ACTION = "_GET_ITM_PCCCOD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Cost type
$_GET_MWS_PCCCOD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_MWS_PCCCOD" : [L]ACTION = "_GET_MWS_PCCCOD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Cost type
$_GET_PCCCOD_GRP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_PCCCOD_GRP" : [L]ACTION = "_GET_PCCCOD_GRP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Consolidated
$_GET_PJMSC_BUDTOT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_PJMSC_BUDTOT" : [L]ACTION = "_GET_PJMSC_BUDTOT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Group
$_GET_SELECTED_GRP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_SELECTED_GRP" : [L]ACTION = "_GET_SELECTED_GRP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Expense type
$_GET_TES_PCCCOD
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_GET_TES_PCCCOD" : [L]ACTION = "_GET_TES_PCCCOD" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Reading
$_LOAD_PROJECT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_LOAD_PROJECT" : [L]ACTION = "_LOAD_PROJECT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0TECFINOVE
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 40
 If this.TITLE(AINDCLA)<>null
  [L]ASTATUS = fmet this.TITLE(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.LOGFILE<>null
 [L]ASTATUS = fmet this.LOGFILE._AERROR(_CTX,_SUPP)
Endif
If this.PROJECT<>null
 [L]ASTATUS = fmet this.PROJECT._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0TECFINOVE
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 40
 If this.TITLE(AINDCLA)<>null
  [L]ASTATUS = fmet this.TITLE(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.LOGFILE<>null
 [L]ASTATUS = fmet this.LOGFILE._ADELERRORS(_APARAM)
Endif
If this.PROJECT<>null
 [L]ASTATUS = fmet this.PROJECT._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0TECFINOVE
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 40
 If this.TITLE(AINDCLA)<>null
  [L]ASTATUS = fmet this.TITLE(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'TITLE('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.LOGFILE<>null
 [L]ASTATUS = fmet this.LOGFILE._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'LOGFILE')
Endif
If this.PROJECT<>null
 [L]ASTATUS = fmet this.PROJECT._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PROJECT')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0TECFINOVE
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "LOGFILE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"LOGFILE",this)
 When "PROJECT"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PROJECT",this)
 When "TITLE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"TITLE",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "LOGFILE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"LOGFILE","C_ALOG",this)
 When "PROJECT"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PROJECT","C_OPPOR",this)
 When "TITLE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"TITLE","C_TECFINOVE_TITLE",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "LOGFILE"
  [L]_ALINE = 1
 When "PROJECT"
  [L]_ALINE = 1
 When "TITLE"
  [L]_ALINE = 40
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "LOGFILE"
  [L]_ALINE = 2
 When "PROJECT"
  [L]_ALINE = 2
 When "TITLE"
  [L]_ALINE = 2
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "OPPNUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.LOGFILE(1) = NewInstance C_ALOG(this.ACTX,NullUuid,1,this,"LOGFILE") AllocGroup this
this.LOGFILE(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.LOGFILE(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.PROJECT(1) = NewInstance C_OPPOR(this.ACTX,NullUuid,1,this,"PROJECT") AllocGroup this
this.PROJECT(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PROJECT(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.PROJECT.PIMPL(1) = NewInstance C_PIMPL(this.ACTX,NullUuid,1,this.PROJECT,"PIMPL") AllocGroup this
this.PROJECT.PIMPL(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PROJECT.PIMPL(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



