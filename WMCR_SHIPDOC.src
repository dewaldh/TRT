#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment documents
# Supervisor
## CRUD-CLASSE ## SHIPDOC
# 2018-08-27 12:45:39 606


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SHIPDOC [SHIPD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SHIPDOC") From ASYRCOM : Endif
Local Instance SHIPDOC Using C_SHIPDOC

If !SILENCE : Call TRACE("3 --> New Instance C_SHIPDOC") From ASYRCOM : Endif
SHIPDOC = NewInstance C_SHIPDOC AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SHIPD_]SHIPD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SHIPDOC") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPDOC.AREAD([SHIPD_]VCRNUM,[SHIPD_]VCRTYP,[SHIPD_]SDLIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SHIPDOC.VCRNUM ="-num$(SHIPDOC.VCRNUM)) From ASYRCOM
 Call TRACE("SHIPDOC.VCRTYP ="-num$(SHIPDOC.VCRTYP)) From ASYRCOM
 Call TRACE("SHIPDOC.SDLIN ="-num$(SHIPDOC.SDLIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SHIPDOC.AKEYS)
  Call TRACE("-"-num$(I)-":"-SHIPDOC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SHIPD_]
FreeGroup SHIPDOC
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SHIPDOC,ACLE,ASTATUS,_ETAG)
Variable Instance SHIPDOC Using C_SHIPDOC
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VCRNUM(20)
Local Tinyint _VCRTYP
Local Integer _SDLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_SDLIN = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File SHIPDOC [SHIPD]
Default File [F:SHIPD]
Read [F:SHIPD]SHIPD0 = [L]_VCRNUM;[L]_VCRTYP;[L]_SDLIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SHIPD]UPDTICK)>0
 [L]_ETAG = num$([F:SHIPD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SHIPDOC,ACLE,ASTATUS)
Variable Instance SHIPDOC Using C_SHIPDOC
Value Char ACLE
Variable Integer ASTATUS
Local Char _VCRNUM(20)
Local Tinyint _VCRTYP
Local Integer _SDLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_SDLIN = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SHIPDOC.AREAD([L]_VCRNUM,[L]_VCRTYP,[L]_SDLIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SHIPDOC,_VCRNUM,_VCRTYP,_SDLIN,ASTATUS)
Variable Instance SHIPDOC Using C_SHIPDOC
Value Char _VCRNUM
Value Tinyint _VCRTYP
Value Integer _SDLIN
Variable Integer ASTATUS

If SHIPDOC = null : End : Endif

Gosub AVARIABLES From WMC00SHIPDOC
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SHIPDOC.APARENT=null
 [L]A_I = SHIPDOC.freeSnapshot
 SHIPDOC.snapshotEnabled = 0
 SHIPDOC.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SHIPDOC.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPDOC._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SHIPDOC.APARENT=null
 SHIPDOC.snapshotEnabled = 1
 SHIPDOC.setAccessorEnabled = 1
Endif
LogicClose File [SHIPD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SHIPDOC._ACTION_PARAM("AREAD_BEFORE",[L]_VCRNUM,[L]_VCRTYP,[L]_SDLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:SHIPD]
Read [F:SHIPD]SHIPD0 = [L]_VCRNUM;[L]_VCRTYP;[L]_SDLIN
If fstat
[L]A_ERROR = [L]_VCRNUM+"~"+num$([L]_VCRTYP)+"~"+num$([L]_SDLIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SHIPDOC,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:SHIPD]AUUID)>0 & [F:SHIPD]AUUID=NullUuid
 [F:SHIPD]AUUID = getUuid
Endif
SetInstance SHIPDOC With [F:SHIPD]
SHIPDOC.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet SHIPDOC.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



