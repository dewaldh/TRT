#<AdxTL>@(#)0.0.0.0 $Revision$Class Purchase invoices
# Supervisor
## ACLA-CLASSE ## PINVOICE
# 2018-08-27 12:39:19 687

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 122 : DIFLINAMT Variance - tax ( Field MD3 0)
####################################################################

$SET_DIFLINAMT
If [L]_AOLDVAL<>this.DIFLINAMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIFLINAMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIFLINAMT
 Gosub PROPAGATE_DIFLINAMT
Endif
Return

$INIT_DIFLINAMT
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DIFLINAMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIFLINAMT
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DIFLINAMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIFLINAMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIFLINAMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIFLINAMT
[L]CURPRO = "DIFLINAMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIFLINAMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIFLINAMT
[L]CURPRO = "DIFLINAMT"
Return

$_AOTHERS_DIFLINAMT
[L]CURPRO = "DIFLINAMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD3(this,"DIFLINAMT",this.DIFLINAMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIFLINAMT
[L]CURPRO = "DIFLINAMT"
Return

$PROPAGATE_DIFLINAMT
this.isReadonly = 0
[L]CURPRO = "DIFLINAMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIFLINAMT
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DIFLINAMT"
$_LNKPRO_DIFLINAMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD3(this,"DIFLINAMT",this.DIFLINAMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("DIFLINAMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 123 : DIFTAXAMT Tax variance ( Field MD3 0)
####################################################################

$SET_DIFTAXAMT
If [L]_AOLDVAL<>this.DIFTAXAMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIFTAXAMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIFTAXAMT
 Gosub PROPAGATE_DIFTAXAMT
Endif
Return

$INIT_DIFTAXAMT
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DIFTAXAMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIFTAXAMT
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DIFTAXAMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIFTAXAMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIFTAXAMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIFTAXAMT
[L]CURPRO = "DIFTAXAMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIFTAXAMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIFTAXAMT
[L]CURPRO = "DIFTAXAMT"
Return

$_AOTHERS_DIFTAXAMT
[L]CURPRO = "DIFTAXAMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD3(this,"DIFTAXAMT",this.DIFTAXAMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIFTAXAMT
[L]CURPRO = "DIFTAXAMT"
Return

$PROPAGATE_DIFTAXAMT
this.isReadonly = 0
[L]CURPRO = "DIFTAXAMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIFTAXAMT
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DIFTAXAMT"
$_LNKPRO_DIFTAXAMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD3(this,"DIFTAXAMT",this.DIFTAXAMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("DIFTAXAMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 124 : DOCCUR Document currency ( Field CUR 3)
####################################################################

$SET_DOCCUR
If [L]_AOLDVAL<>this.DOCCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DOCCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DOCCUR
 Gosub PROPAGATE_DOCCUR
Endif
Return

$INIT_DOCCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DOCCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DOCCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DOCCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DOCCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DOCCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DOCCUR
[L]CURPRO = "DOCCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DOCCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DOCCUR
[L]CURPRO = "DOCCUR"
If vireblc(this.DOCCUR,2)<>vireblc(format$("K:3c",this.DOCCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DOCCUR
[L]CURPRO = "DOCCUR"
If vireblc(this.DOCCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"DOCCUR",this.DOCCUR,this.DOCCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DOCCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DOCCUR
[L]CURPRO = "DOCCUR"
Return

$PROPAGATE_DOCCUR
this.isReadonly = 0
[L]CURPRO = "DOCCUR"
Gosub _LNKPRO_DOCCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DOCCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "DOCCUR"
$_LNKPRO_DOCCUR
If vireblc(this.DOCCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.DOCCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DOCCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DOCCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("DOCCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("DOCCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("DOCCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 125 : CPYCUR Company currency ( Field CUR 3)
####################################################################

$SET_CPYCUR
If [L]_AOLDVAL<>this.CPYCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPYCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPYCUR
 Gosub PROPAGATE_CPYCUR
Endif
Return

$INIT_CPYCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "CPYCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPYCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "CPYCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPYCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPYCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPYCUR
[L]CURPRO = "CPYCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CPYCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPYCUR
[L]CURPRO = "CPYCUR"
If vireblc(this.CPYCUR,2)<>vireblc(format$("K:3c",this.CPYCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CPYCUR
[L]CURPRO = "CPYCUR"
If vireblc(this.CPYCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CPYCUR",this.CPYCUR,this.CPYCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CPYCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPYCUR
[L]CURPRO = "CPYCUR"
Return

$PROPAGATE_CPYCUR
this.isReadonly = 0
[L]CURPRO = "CPYCUR"
Gosub _LNKPRO_CPYCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPYCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "CPYCUR"
$_LNKPRO_CPYCUR
If vireblc(this.CPYCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CPYCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 126 : CUMLINAMT1 Invoice line - tax ( Field MD3 0)
####################################################################

$SET_CUMLINAMT1
If [L]_AOLDVAL<>this.CUMLINAMT1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CUMLINAMT1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CUMLINAMT1
 Gosub PROPAGATE_CUMLINAMT1
Endif
Return

$INIT_CUMLINAMT1
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "CUMLINAMT1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CUMLINAMT1
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "CUMLINAMT1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CUMLINAMT1            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CUMLINAMT1            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CUMLINAMT1
[L]CURPRO = "CUMLINAMT1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CUMLINAMT1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CUMLINAMT1
[L]CURPRO = "CUMLINAMT1"
Return

$_AOTHERS_CUMLINAMT1
[L]CURPRO = "CUMLINAMT1"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD3(this,"CUMLINAMT1",this.CUMLINAMT1,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CUMLINAMT1
[L]CURPRO = "CUMLINAMT1"
Return

$PROPAGATE_CUMLINAMT1
this.isReadonly = 0
[L]CURPRO = "CUMLINAMT1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CUMLINAMT1
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "CUMLINAMT1"
$_LNKPRO_CUMLINAMT1
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD3(this,"CUMLINAMT1",this.CUMLINAMT1,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("CUMLINAMT1","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 127 : WCUR Currency ( Field CUR 3)
####################################################################

$SET_WCUR
If [L]_AOLDVAL<>this.WCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_WCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.WCUR
 Gosub PROPAGATE_WCUR
Endif
Return

$INIT_WCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "WCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_WCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "WCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_WCUR                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_WCUR                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_WCUR
[L]CURPRO = "WCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.WCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_WCUR
[L]CURPRO = "WCUR"
If vireblc(this.WCUR,2)<>vireblc(format$("K:3c",this.WCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_WCUR
[L]CURPRO = "WCUR"
If vireblc(this.WCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"WCUR",this.WCUR,this.WCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.WCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_WCUR
[L]CURPRO = "WCUR"
Return

$PROPAGATE_WCUR
this.isReadonly = 0
[L]CURPRO = "WCUR"
Gosub _LNKPRO_WCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_WCUR
Gosub DECLARE_VAR From WMC0PINVOICE
[L]CURPRO = "WCUR"
$_LNKPRO_WCUR
If vireblc(this.WCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.WCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("WCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("WCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("WCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("WCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("WCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return




