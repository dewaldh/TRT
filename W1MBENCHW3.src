#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management MBENCHW3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:05:08"
A_USER  = "ADMIN"
A_STAMP = "20180828000508"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MBENCHW3 [MBW3]
Gosub HORODAT
Local Inpbox "MBENCHW3" From GFONCTION At A_STAMP With A_WINDPREV Mask [MBW3] As [SIM_]
Grizo [MBW3]5
Grizo [MBW3]10
Grizo [MBW3]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MBW3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=118 : Y1(0)=10 : Y2(0)=13
X1(1)=1 : X2(1)=50 : Y1(1)=14 : Y2(1)=18
X1(2)=51 : X2(2)=118 : Y1(2)=14 : Y2(2)=18
Return

$ON_STOFCY
Onevent CONTROL Call C_STOFCY(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_STOFCY From W1MBENCHW3
Onevent BEFORE_INPUT Call AS_STOFCY(zc) From W1MBENCHW3
Return

Subprog AS_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_STOFCY(zc) From W1MBENCHW3
Onkey   2 Titled GBOUTS Call S_STOFCY(zc) From W1MBENCHW3
Onkey 144 Titled GBOUTP Call P_STOFCY(zc) From W1MBENCHW3
Onkey 146 Titled GBOUTA Call SA_STOFCY(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 6505 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 6505 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 6505 : Endif
  If !mkstat
   ## Action STD
   Call C_STOFCY(VALEUR) From SUBMBW3
   If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 6505 : Endif
   If !mkstat
    ## Action CTLFCYAUZ
    Local Char    PARMSK(250)(1..20) , SAVACT(20)
    SAVACT = GACTION : GACTION = "CTLFCYAUZ"
    Call S_AFF_CHAR(VALEUR,PARMSK,"CTLFCYAUZ","CONTX3","") From GACTION
    GACTION = SAVACT
    If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 6505 : Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_STOFCY
Call AM_STOFCY(zc)
If !mkstat & GOBJET
 zoncou = "STOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STOFCY(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 6505 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSTOFCY)")>indice
 [M]STOFCY(indice) = VALEUR
 Affzo ZSTOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1MBENCHW3
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1MBENCHW3
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1MBENCHW3
Return

Subprog IB_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREF(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_ITMREF(zc) From W1MBENCHW3
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1MBENCHW3
Onkey 144 Titled GBOUTP Call P_ITMREF(zc) From W1MBENCHW3
Onkey 146 Titled GBOUTA Call SA_ITMREF(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
If !GWEBSERV
 If !mkstat
  ## Action ITMCHOICE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "ITMCHOICE"
  Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","AC",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREF(VALEUR) From SUBMBW3
   If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREF(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZITMREF)")>indice
 [M]ITMREF(indice) = VALEUR
 Affzo ZITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ITMCAT
 PARMSK(3) = "1"
 PARMSK(4) = "1234"
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = [M]ITMFILTER
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B13_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1MBENCHW3
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ECCVALMAJ
Onevent BEFORE_INPUT Call AS_ECCVALMAJ(zc) From W1MBENCHW3
Onevent CONTROL Call C_ECCVALMAJ(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_ECCVALMAJ From W1MBENCHW3
Return

Subprog AS_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_ECCVALMAJ(VALEUR) From SUBMBW3
If mkstat=2
 [M]ECCVALMAJ(INDIC) = VALEUR
 Affzo ECCVALMAJ(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ECCVALMAJ(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ECCVALMAJ(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

$AMM_ECCVALMAJ
Call AM_ECCVALMAJ(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMAJ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMAJ(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELECCVAL"
 PARMSK(1) = [M:MBW3]ITMREF
 PARMSK(2) = VALEUR
 PARMSK(3) = "[M:MBW3]ECCVALMIN"
 PARMSK(4) = "2"
 PARMSK(5) = [0/0/0]
 PARMSK(6) = "MBW3"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELECCVAL","ECCLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ECCVALMIN
Onevent BEFORE_INPUT Call AS_ECCVALMIN(zc) From W1MBENCHW3
Onevent CONTROL Call C_ECCVALMIN(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_ECCVALMIN From W1MBENCHW3
Return

Subprog AS_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_ECCVALMIN(VALEUR) From SUBMBW3
If mkstat=2
 [M]ECCVALMIN(INDIC) = VALEUR
 Affzo ECCVALMIN(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ECCVALMIN(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ECCVALMIN(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

$AMM_ECCVALMIN
Call AM_ECCVALMIN(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMIN(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

Subprog S_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELECCVAL"
 PARMSK(1) = [M:MBW3]ITMREF
 PARMSK(2) = [M:MBW3]ECCVALMAJ
 PARMSK(3) = ""
 PARMSK(4) = "2"
 PARMSK(5) = [0/0/0]
 PARMSK(6) = "MBW3"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELECCVAL","ECCLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_PJT
Onevent BEFORE_INPUT Call AS_PJT(zc) From W1MBENCHW3
Onevent CONTROL Call C_PJT(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_PJT From W1MBENCHW3
Return

Subprog IB_PJT(VALEUR)
Variable Char    VALEUR()
## Action PJTINIBUT
Call PJT_INIT_BUTTON(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
Gosub _AFF
End

Subprog AS_PJT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(43841,GBOUT1) From OBJDIV
Call TEXTE(14667,GBOUT2) From OBJDIV
Call TEXTE(54273,GBOUT3) From OBJDIV
Call TEXTE(43844,GBOUT4) From OBJDIV
Call TEXTE(43868,GBOUT15) From OBJDIV
Call TEXTE(17676,GBOUT16) From OBJDIV
Call TEXTE(54274,GBOUT17) From OBJDIV
Call TEXTE(54275,GBOUT18) From OBJDIV
Call TEXTE(11781,GBOUT19) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_PJT(VALEUR)
## Action PJTBEFZON
Call PJT_BEFORE_ZONE(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
If mkstat=2
 [M]PJT(INDIC) = VALEUR
 Affzo PJT(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_PJT(zc) From W1MBENCHW3
Onkey 130 Titled GBOUT2 Call B2_PJT(zc) From W1MBENCHW3
Onkey 131 Titled GBOUT3 Call B3_PJT(zc) From W1MBENCHW3
Onkey 132 Titled GBOUT4 Call B4_PJT(zc) From W1MBENCHW3
Onkey 172 Titled GBOUT15 Call B15_PJT(zc) From W1MBENCHW3
Onkey 173 Titled GBOUT16 Call B16_PJT(zc) From W1MBENCHW3
Onkey 174 Titled GBOUT17 Call B17_PJT(zc) From W1MBENCHW3
Onkey 175 Titled GBOUT18 Call B18_PJT(zc) From W1MBENCHW3
Onkey 176 Titled GBOUT19 Call B19_PJT(zc) From W1MBENCHW3
Onkey   2 Titled GBOUTS Call S_PJT(zc) From W1MBENCHW3
Onkey 144 Titled GBOUTP Call P_PJT(zc) From W1MBENCHW3
Onkey 146 Titled GBOUTA Call SA_PJT(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_PJT(VALEUR)
Variable Char    VALEUR()
## Action PJTCTL
Call PJT_CONTROL(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
If mkstat : GERR = 1 : GZONE = "PJT" : GZNUM = 1886 : Endif
If !mkstat
 ## Action CONTOBJN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJN"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "PJT" : GZNUM = 1886 : Endif
Endif
Gosub _AFF
End

$AMM_PJT
Call AM_PJT(zc)
If !mkstat & GOBJET
 zoncou = "PJT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PJT(VALEUR)
Variable Char    VALEUR()
## Action PJTAFTMOD
Call PJT_AFTER_MODIFY(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
&,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
&,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
If mkstat : GERR = 1 : GZONE = "PJT" : GZNUM = 1886 : Endif
Gosub _AFF
End

Subprog S_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBUT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBUT"
 PARMSK(1) = "MBW3"
 PARMSK(2) = "PJT"
 PARMSK(3) = "0"
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:MBW3]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJT","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU1CRM
 Call PJT_BUT1_CRM(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU2PRP
 Call PJT_BUT2_PRP(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU3BUD
 Call PJT_BUT3_PRPBUD(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTBU4TAC
 Call PJT_BUT4_PRPTAC(VALEUR,"MBW3","PJT",0,7,[V]CST_AYES,[V]CST_AYES,[V]CST_AYES
& ,[V]CST_ANO,[V]CST_AYES,[V]CST_AYES,[V]CST_ANO,[V]CST_ANO,[V]CST_ANO,[M:MBW3]STOFCY,""
& ,"","","",func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)) From TRTPJT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B15_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBCRM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBCRM"
 PARMSK(1) = "MBW3"
 PARMSK(2) = "PJT"
 PARMSK(3) = "0"
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:MBW3]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTCRM","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B16_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBPRP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBPRP"
 PARMSK(1) = "MBW3"
 PARMSK(2) = "PJT"
 PARMSK(3) = "0"
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:MBW3]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTPRP","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B17_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBBUD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBBUD"
 PARMSK(1) = "MBW3"
 PARMSK(2) = "PJT"
 PARMSK(3) = "0"
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:MBW3]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTBUD","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B18_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBTAC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBTAC"
 PARMSK(1) = "MBW3"
 PARMSK(2) = "PJT"
 PARMSK(3) = "0"
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:MBW3]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTTAC","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B19_PJT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PJTSELBBPR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJTSELBBPR"
 PARMSK(1) = "MBW3"
 PARMSK(2) = "PJT"
 PARMSK(3) = "0"
 PARMSK(4) = "7"
 PARMSK(5) = num$([V]CST_AYES)
 PARMSK(6) = num$([V]CST_AYES)
 PARMSK(7) = num$([V]CST_AYES)
 PARMSK(8) = num$([V]CST_ANO)
 PARMSK(9) = num$([V]CST_AYES)
 PARMSK(10) = num$([V]CST_AYES)
 PARMSK(11) = num$([V]CST_ANO)
 PARMSK(12) = num$([V]CST_ANO)
 PARMSK(13) = num$([V]CST_ANO)
 PARMSK(14) = [M:MBW3]STOFCY
 PARMSK(15) = ""
 PARMSK(16) = ""
 PARMSK(17) = ""
 PARMSK(18) = ""
 PARMSK(19) = func TRTPJT.GET_CPY_FROM_FCY([M:MBW3]STOFCY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELPJTBPR","TRTPJT","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_PJT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "PIM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PJT(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("PIM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_COVQTY
Onevent BEFORE_AREA Gosub AV_COVQTY From W1MBENCHW3
Return

$AV_COVQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STOFCY,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_EXTQTY2
Onevent BEFORE_AREA Gosub AV_EXTQTY2 From W1MBENCHW3
Onevent BEFORE_INPUT Call AS_EXTQTY2(zc) From W1MBENCHW3
Onevent CONTROL Call C_EXTQTY2(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_EXTQTY2 From W1MBENCHW3
Return

$AV_EXTQTY2
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU2,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]EXTQTY2(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_EXTQTY2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4874,GBOUT1) From OBJDIV
Call TEXTE(4874,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT3) From OBJDIV
## Action STD
Call AS_EXTQTY2(VALEUR) From SUBMBW3
If mkstat=2
 [M]EXTQTY2(INDIC) = VALEUR
 Affzo EXTQTY2(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_EXTQTY2(zc) From W1MBENCHW3
Onkey 130 Titled GBOUT2 Call B2_EXTQTY2(zc) From W1MBENCHW3
Onkey 131 Titled GBOUT3 Call B3_EXTQTY2(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_EXTQTY2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_EXTQTY2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "EXTQTY2" : GZNUM = 2602 : Endif
Gosub _AFF
End

$AMM_EXTQTY2
Call AM_EXTQTY2(zc)
If !mkstat & GOBJET
 zoncou = "EXTQTY2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EXTQTY2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_EXTQTY2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "EXTQTY2" : GZNUM = 2602 : Endif
Gosub _AFF
End

Subprog B1_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B1_EXTQTY2(VALEUR) From SUBMBW3
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B2_EXTQTY2(VALEUR) From SUBMBW3
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action FDISPNOWN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FDISPNOWN"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = [M]ITMREF
 PARMSK(4) = num$([M]BOMALT2)
 PARMSK(5) = [M]STU2
 PARMSK(6) = [M]STRDAT2
 PARMSK(7) = num$(VALEUR)
 Call SAISIE_NUM(VALEUR,PARMSK,"IDISPNOWN","BENCHLIB","XYZBENCHLIB") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_STU2
Return

$ON_STRDAT2
Onevent BEFORE_INPUT Call AS_STRDAT2(zc) From W1MBENCHW3
Onevent CONTROL Call C_STRDAT2(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_STRDAT2 From W1MBENCHW3
Onevent BEFORE_AREA Gosub AV_STRDAT2 From W1MBENCHW3
Return

$AV_STRDAT2
Chgfmt [M]STRDAT2(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_STRDAT2(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_STRDAT2(VALEUR) From SUBMBW3
If mkstat=2
 [M]STRDAT2(INDIC) = VALEUR
 Affzo STRDAT2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_STRDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_STRDAT2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "STRDAT2" : GZNUM = 1805 : Endif
Gosub _AFF
End

$AMM_STRDAT2
Call AM_STRDAT2(zc)
If !mkstat & GOBJET
 zoncou = "STRDAT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STRDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_STRDAT2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "STRDAT2" : GZNUM = 1805 : Endif
Gosub _AFF
End

$ON_ENDDAT2
Onevent BEFORE_INPUT Call AS_ENDDAT2(zc) From W1MBENCHW3
Onevent CONTROL Call C_ENDDAT2(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_ENDDAT2 From W1MBENCHW3
Onevent BEFORE_AREA Gosub AV_ENDDAT2 From W1MBENCHW3
Return

$AV_ENDDAT2
Chgfmt [M]ENDDAT2(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDAT2(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ENDDAT2(VALEUR) From SUBMBW3
If mkstat=2
 [M]ENDDAT2(INDIC) = VALEUR
 Affzo ENDDAT2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_ENDDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDAT2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ENDDAT2" : GZNUM = 1806 : Endif
Gosub _AFF
End

$AMM_ENDDAT2
Call AM_ENDDAT2(zc)
If !mkstat & GOBJET
 zoncou = "ENDDAT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_ENDDAT2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ENDDAT2" : GZNUM = 1806 : Endif
Gosub _AFF
End

$ON_BOMALT2
Onevent BEFORE_INPUT Call AS_BOMALT2(zc) From W1MBENCHW3
Onevent CONTROL Call C_BOMALT2(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_BOMALT2 From W1MBENCHW3
Return

Subprog AS_BOMALT2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3570,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
## Action STD
Call AS_BOMALT2(VALEUR) From SUBMBW3
If mkstat=2
 [M]BOMALT2(INDIC) = VALEUR
 Affzo BOMALT2(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_BOMALT2(zc) From W1MBENCHW3
Onkey   2 Titled GBOUTS Call S_BOMALT2(zc) From W1MBENCHW3
Onkey 144 Titled GBOUTP Call P_BOMALT2(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_BOMALT2(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TBO","!",VALEUR,"2",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "BOMALT2" : GZNUM = 9555 : Endif
If !mkstat
 ## Action STD
 Call C_BOMALT2(VALEUR) From SUBMBW3
 If mkstat : GERR = 1 : GZONE = "BOMALT2" : GZNUM = 9555 : Endif
Endif
Gosub _AFF
End

$AMM_BOMALT2
Call AM_BOMALT2(zc)
If !mkstat & GOBJET
 zoncou = "BOMALT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMALT2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BOMALT2(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "BOMALT2" : GZNUM = 9555 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZBOMALT2)")>indice
 [M]BOMALT2(indice) = VALEUR
 Affzo ZBOMALT2(indice)
Endif
Gosub _AFF
End

Subprog S_BOMALT2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELMFGNOM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMFGNOM"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ITMREF
 Call S_TAB_NUM(VALEUR,PARMSK,"SELMFGNOM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_BOMALT2(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TBO",VALCHAR,"2") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_BOMALT2(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = "2"
Call VISU("TBO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBOMALT2
Onevent BEFORE_AREA Gosub AV_ZBOMALT2 From W1MBENCHW3
Return

$AV_ZBOMALT2
Call LECTEXTRA(zc,"TABBOMALT","TBODESAXX","2",num$([M]BOMALT2(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_ROUNUM
Onevent CONTROL Call C_ROUNUM(zc) From W1MBENCHW3
Onevent BEFORE_INPUT Call AS_ROUNUM(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_ROUNUM From W1MBENCHW3
Return

Subprog IB_ROUNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ROUNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ROUNUM(VALEUR)
## Action STD
Call AS_ROUNUM(VALEUR) From SUBMBW3
If mkstat=2
 [M]ROUNUM(INDIC) = VALEUR
 Affzo ROUNUM(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_ROUNUM(zc) From W1MBENCHW3
Onkey   2 Titled GBOUTS Call S_ROUNUM(zc) From W1MBENCHW3
Onkey 144 Titled GBOUTP Call P_ROUNUM(zc) From W1MBENCHW3
Onkey 146 Titled GBOUTA Call SA_ROUNUM(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_ROUNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ROUNUM" : GZNUM = 3817 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ROUNUM" : GZNUM = 3817 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ROUNUM" : GZNUM = 3817 : Endif
  If !mkstat
   ## Action STD
   Call C_ROUNUM(VALEUR) From SUBMBW3
   If mkstat : GERR = 1 : GZONE = "ROUNUM" : GZNUM = 3817 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ROUNUM
Call AM_ROUNUM(zc)
If !mkstat & GOBJET
 zoncou = "ROUNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ROUNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ROUNUM(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ROUNUM" : GZNUM = 3817 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZROUNUM)")>indice
 [M]ROUNUM(indice) = VALEUR
 Affzo ZROUNUM(indice)
Endif
Gosub _AFF
End

Subprog S_ROUNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELGAM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELGAM"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELGAM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B13_ROUNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ROUNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ROUNUM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZROUNUM
Onevent BEFORE_AREA Gosub AV_ZROUNUM From W1MBENCHW3
Return

$AV_ZROUNUM
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ROUNUM(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ROUALT
Onevent BEFORE_INPUT Call AS_ROUALT(zc) From W1MBENCHW3
Onevent CONTROL Call C_ROUALT(zc) From W1MBENCHW3
Onevent AFTER_CHANGE Gosub AMM_ROUALT From W1MBENCHW3
Return

Subprog AS_ROUALT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_ROUALT(VALEUR) From SUBMBW3
If mkstat=2
 [M]ROUALT(INDIC) = VALEUR
 Affzo ROUALT(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ROUALT(zc) From W1MBENCHW3
Gosub _AFF
End

Subprog C_ROUALT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_ROUALT(VALEUR) From SUBMBW3
If mkstat : GERR = 1 : GZONE = "ROUALT" : GZNUM = 1528 : Endif
Gosub _AFF
End

$AMM_ROUALT
Call AM_ROUALT(zc)
If !mkstat & GOBJET
 zoncou = "ROUALT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ROUALT(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZROUALT)")>indice
 [M]ROUALT(indice) = VALEUR
 Affzo ZROUALT(indice)
Endif
Gosub _AFF
End

Subprog S_ROUALT(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELROUNUM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELROUNUM"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ROUNUM
 PARMSK(3) = "2"
 Call S_TAB_NUM(VALEUR,PARMSK,"SELROUNUM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_PLANNER
Return

$CHG_STY
Return


