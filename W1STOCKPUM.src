#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management STOCKPUM 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:08"
A_USER  = "ADMIN"
A_STAMP = "20180828001508"
Return

$TITRES
Chgtzn [M:DIA]TRSTYP001 With mess(1,704,1)
Chgtzn [M:DIA]TRSTYP002 With mess(2,704,1)
Chgtzn [M:DIA]TRSTYP003 With mess(3,704,1)
Chgtzn [M:DIA]TRSTYP004 With mess(4,704,1)
Chgtzn [M:DIA]TRSTYP005 With mess(5,704,1)
Chgtzn [M:DIA]TRSTYP006 With mess(6,704,1)
Chgtzn [M:DIA]TRSTYP007 With mess(7,704,1)
Chgtzn [M:DIA]TRSTYP008 With mess(8,704,1)
Chgtzn [M:DIA]TRSTYP009 With mess(9,704,1)
Chgtzn [M:DIA]TRSTYP011 With mess(11,704,1)
Chgtzn [M:DIA]TRSTYP012 With mess(12,704,1)
Chgtzn [M:DIA]TRSTYP013 With mess(13,704,1)
Chgtzn [M:DIA]TRSTYP014 With mess(14,704,1)
Chgtzn [M:DIA]TRSTYP017 With mess(17,704,1)
Chgtzn [M:DIA]TRSTYP018 With mess(18,704,1)
Chgtzn [M:DIA]TRSTYP019 With mess(19,704,1)
Chgtzn [M:DIA]TRSTYP020 With mess(20,704,1)
Chgtzn [M:DIA]TRSTYP021 With mess(21,704,1)
Chgtzn [M:DIA]TRSTYP022 With mess(22,704,1)
Chgtzn [M:DIA]TRSTYP023 With mess(23,704,1)
Chgtzn [M:DIA]TRSTYP024 With mess(24,704,1)
Chgtzn [M:DIA]TRSTYP025 With mess(25,704,1)
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask STOCKPUM [DIA]
Gosub HORODAT
Local Inpbox "STOCKPUM" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Grizo [DIA]13
Grizo [DIA]15
Grizo [DIA]20
Grizo [DIA]25
Grizo [DIA]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=21 : X2(0)=92 : Y1(0)=7 : Y2(0)=9
X1(1)=21 : X2(1)=92 : Y1(1)=10 : Y2(1)=11
X1(2)=21 : X2(2)=44 : Y1(2)=12 : Y2(2)=20
X1(3)=45 : X2(3)=67 : Y1(3)=12 : Y2(3)=20
X1(4)=68 : X2(4)=92 : Y1(4)=12 : Y2(4)=20
X1(5)=21 : X2(5)=92 : Y1(5)=21 : Y2(5)=22
Return

$ON_STOFCY
Onevent CONTROL Call C_STOFCY(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_STOFCY(zc) From W1STOCKPUM
Onevent AFTER_CHANGE Gosub AMM_STOFCY From W1STOCKPUM
Return

Subprog AS_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STKASFCY
Call STKASFCY(VALEUR) From STKACT
If mkstat=2
 [M]STOFCY(INDIC) = VALEUR
 Affzo STOFCY(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_STOFCY(zc) From W1STOCKPUM
Onkey   2 Titled GBOUTS Call S_STOFCY(zc) From W1STOCKPUM
Onkey 144 Titled GBOUTP Call P_STOFCY(zc) From W1STOCKPUM
Onkey 146 Titled GBOUTA Call SA_STOFCY(zc) From W1STOCKPUM
Gosub _AFF
End

Subprog C_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
  If !mkstat
   ## Action STKCTRFCY
   Call STKCTRFCY(VALEUR) From STKACT
   If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
   If !mkstat
    ## Action STD
    Call C_STOFCY(VALEUR) From FUNSTPU
    If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1347 : Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_STOFCY
Call AM_STOFCY(zc)
If !mkstat & GOBJET
 zoncou = "STOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOFCY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZSTOFCY)")>indice
 [M]STOFCY(indice) = VALEUR
 Affzo ZSTOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1STOCKPUM
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_DATREF
Onevent CONTROL Call C_DATREF(zc) From W1STOCKPUM
Onevent BEFORE_AREA Gosub AV_DATREF From W1STOCKPUM
Return

$AV_DATREF
Chgfmt [M]DATREF(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog C_DATREF(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DATREF" : GZNUM = 7329 : Endif
If !mkstat
 ## Action STD
 Call C_DATREF(VALEUR) From FUNSTPU
 If mkstat : GERR = 1 : GZONE = "DATREF" : GZNUM = 7329 : Endif
Endif
Gosub _AFF
End

$ON_SELFLG
Onevent AFTER_CHANGE Gosub AMM_SELFLG From W1STOCKPUM
Onevent INIT_AREA Call D_SELFLG(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_SELFLG(zc) From W1STOCKPUM
Return

Subprog D_SELFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SELFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SELFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SELFLG
Call AM_SELFLG(zc)
If !mkstat & GOBJET
 zoncou = "SELFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SELFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SELFLG(VALEUR) From FUNSTPU
If mkstat : GERR = 1 : GZONE = "SELFLG" : GZNUM = 17766 : Endif
Gosub _AFF
End

$ON_TRSTYP001
Onevent INIT_AREA Call D_TRSTYP001(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP001(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP001(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP001,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP001(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP002
Onevent INIT_AREA Call D_TRSTYP002(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP002(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP002(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP002,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP002(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP003
Onevent INIT_AREA Call D_TRSTYP003(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP003(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP003(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP003,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP003(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP004
Onevent INIT_AREA Call D_TRSTYP004(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP004(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP004(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP004,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP004(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP005
Onevent INIT_AREA Call D_TRSTYP005(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP005(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP005(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP005,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP005(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP006
Onevent INIT_AREA Call D_TRSTYP006(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP006(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP006(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP006,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP006(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP007
Onevent INIT_AREA Call D_TRSTYP007(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP007(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP007(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP007,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP007(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP008
Onevent INIT_AREA Call D_TRSTYP008(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP008(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP008(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP008,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP008(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP009
Onevent INIT_AREA Call D_TRSTYP009(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP009(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP009(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP009,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP009(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP011
Onevent INIT_AREA Call D_TRSTYP011(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP011(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP011(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP011,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP011(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP012
Onevent INIT_AREA Call D_TRSTYP012(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP012(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP012(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP012,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP012(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP013
Onevent INIT_AREA Call D_TRSTYP013(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP013(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP013(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP013,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP013(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP014
Onevent INIT_AREA Call D_TRSTYP014(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP014(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP014(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP014,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP014(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP017
Onevent INIT_AREA Call D_TRSTYP017(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP017(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP017(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP017,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP017(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP018
Onevent INIT_AREA Call D_TRSTYP018(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP018(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP018(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP018,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP018(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP019
Onevent INIT_AREA Call D_TRSTYP019(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP019(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP019(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP019,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP019(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP020
Onevent INIT_AREA Call D_TRSTYP020(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP020(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP020(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP020,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP020(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP021
Onevent INIT_AREA Call D_TRSTYP021(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP021(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP021(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP021,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP021(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP022
Onevent INIT_AREA Call D_TRSTYP022(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP022(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP022(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP022,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP022(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP023
Onevent INIT_AREA Call D_TRSTYP023(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP023(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP023(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP023,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP023(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP024
Onevent INIT_AREA Call D_TRSTYP024(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP024(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP024(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP024,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP024(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP025
Onevent INIT_AREA Call D_TRSTYP025(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_TRSTYP025(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP025(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP025,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSTYP025(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP010
Onevent INIT_AREA Call D_TRSTYP010(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP010(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP010,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP015
Onevent INIT_AREA Call D_TRSTYP015(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP015(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP015,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSTYP016
Onevent INIT_AREA Call D_TRSTYP016(zc) From W1STOCKPUM
Return

Subprog D_TRSTYP016(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP016,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SIM
Onevent INIT_AREA Call D_SIM(zc) From W1STOCKPUM
Onevent BEFORE_INPUT Call AS_SIM(zc) From W1STOCKPUM
Return

Subprog D_SIM(VALEUR)
Variable Integer VALEUR
If varinit([M]SIM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SIM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


