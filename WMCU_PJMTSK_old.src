#<AdxTL>@(#)0.0.0.0 $Revision$Class Task
# Sage X3 supervisor
## CRUD-CLASSE ## PJMTSK
# 2018-06-20 06:52:44 621


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(PJMTSK,ASTATUS)
Variable Instance PJMTSK Using C_PJMTSK
Variable Integer ASTATUS

If PJMTSK = null : End : Endif

Gosub _AVARIABLES From WMC00PJMTSK

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_PJMTSK

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PJMTSK,ASTATUS)
Variable Instance PJMTSK Using C_PJMTSK
Variable Integer ASTATUS

If PJMTSK = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSK
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
PJMTSK.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PJMTSK
Else
 Gosub AUPDATE_PJMTSK
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PJMTSK.freeSnapshot
PJMTSK.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PJMTSK._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PJMTSK._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PJMTSK._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PJMTSK.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMTSK.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PJMTSK.ASTALIN)<>""
 [L]A_ASTALIN = PJMTSK.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(PJMTSK.RITT) : # PJMTSKITM -- 2
 If PJMTSK.RITT(A_N2) <> null
& and PJMTSK.RITT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTSK.RITT(A_N2).ASTALIN<>[V]CST_ANEW & PJMTSK.ASTALIN=[V]CST_ADEL
   PJMTSK.RITT(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If PJMTSK.RITT(A_N2).ASTALIN=[V]CST_ANEW & find(PJMTSK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   PJMTSK.RITT(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(PJMTSK.RITT(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMTSK.RITT(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.RTKO) : # PJMTSKOPE -- 3
 If PJMTSK.RTKO(A_N2) <> null
& and PJMTSK.RTKO(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTSK.RTKO(A_N2).ASTALIN<>[V]CST_ANEW & PJMTSK.ASTALIN=[V]CST_ADEL
   PJMTSK.RTKO(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If PJMTSK.RTKO(A_N2).ASTALIN=[V]CST_ANEW & find(PJMTSK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   PJMTSK.RTKO(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(PJMTSK.RTKO(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMTSK.RTKO(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
& and PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 If PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEW & PJMTSK.ASTALIN=[V]CST_ADEL
  PJMTSK.PIMPL(A_N2).ASTALIN = [V]CST_ADEL
 Endif
 If PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ANEW & find(PJMTSK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
  PJMTSK.PIMPL(A_N2).ASTALIN = [V]CST_ANEWDEL
 Endif
 If [V]CST_ASTALIN(PJMTSK.PIMPL(A_N2).ASTALIN)<>""
  Case [V]CST_ASTALIN(PJMTSK.PIMPL(A_N2).ASTALIN)
   When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._AINSERT_CONTROL_BEFORE)
   When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._AUPDATE_CONTROL_BEFORE)
   When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._ADELETE_CONTROL_BEFORE)
  Endcase
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ADEL & PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTSK,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"PIMPL:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(PJMTSK.SPLD) : # PJMSALITMD -- 5
 If PJMTSK.SPLD(A_N2) <> null
& and PJMTSK.SPLD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTSK.SPLD(A_N2).ASTALIN<>[V]CST_ANEW & PJMTSK.ASTALIN=[V]CST_ADEL
   PJMTSK.SPLD(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If PJMTSK.SPLD(A_N2).ASTALIN=[V]CST_ANEW & find(PJMTSK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   PJMTSK.SPLD(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(PJMTSK.SPLD(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMTSK.SPLD(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(PJMTSK.RITT) : # PJMTSKITM -- 2
 If PJMTSK.RITT(A_N2) <> null
& and PJMTSK.RITT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(PJMTSK.RITT(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMTSK.RITT(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.RTKO) : # PJMTSKOPE -- 3
 If PJMTSK.RTKO(A_N2) <> null
& and PJMTSK.RTKO(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(PJMTSK.RTKO(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMTSK.RTKO(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
& and PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 If [V]CST_ASTALIN(PJMTSK.PIMPL(A_N2).ASTALIN)<>""
  Case [V]CST_ASTALIN(PJMTSK.PIMPL(A_N2).ASTALIN)
   When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._AINSERT_CONTROL_AFTER)
   When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._AUPDATE_CONTROL_AFTER)
   When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._ADELETE_CONTROL_AFTER)
  Endcase
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ADEL & PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTSK,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"PIMPL:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(PJMTSK.SPLD) : # PJMSALITMD -- 5
 If PJMTSK.SPLD(A_N2) <> null
& and PJMTSK.SPLD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(PJMTSK.SPLD(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMTSK.SPLD(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(PJMTSK.ASTALIN)<>""
 [L]A_ASTALIN = PJMTSK.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PJMTSK
Trbegin [F:PJTA]
 Gosub AUPDATE_PJMTSK
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_PJMTSK
[L]A_ASTALIN = PJMTSK.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMTSK.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSK.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSK.AGETATTRIBUTE("TASDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSK._MAJSQL_PJMTSK_TASDESTEX(PJMTSK,PJMTSK.TASDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMTSK.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSK.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSK.AGETATTRIBUTE("TASCOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSK._MAJSQL_PJMTSK_TASCOMTEX(PJMTSK,PJMTSK.TASCOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMTSK._MAJSQL_PJMTSK(PJMTSK))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(PJMTSK.RITT)
  If PJMTSK.RITT(A_N2) <> null and
& (PJMTSK.RITT(A_N2).ASTALIN=[L]A_TYPMAJ or
& PJMTSK.RITT(A_N2).ASTALIN=[V]CST_ALL)
   If PJMTSK.RITT(A_N2).ASTALIN=[L]A_TYPMAJ
    Case PJMTSK.RITT(A_N2).ASTALIN
     When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._AUPDATE)
     When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._AINSERT)
     When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._ADELETE)
    Endcase
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
 #-----------------------#
 For A_N2=1 To maxtab(PJMTSK.RTKO)
  If PJMTSK.RTKO(A_N2) <> null and
& (PJMTSK.RTKO(A_N2).ASTALIN=[L]A_TYPMAJ or
& PJMTSK.RTKO(A_N2).ASTALIN=[V]CST_ALL)
   If PJMTSK.RTKO(A_N2).ASTALIN=[L]A_TYPMAJ
    Case PJMTSK.RTKO(A_N2).ASTALIN
     When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._AUPDATE)
     When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._AINSERT)
     When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._ADELETE)
    Endcase
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
 #-----------------------#
 A_N2=1
 If PJMTSK.PIMPL(A_N2) <> null and 
& PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ALL
 PJMTSK.PIMPL(A_N2).ASTALIN = [V]CST_AUPD
 Endif
 If PJMTSK.PIMPL(A_N2) <> null and
& (PJMTSK.PIMPL(A_N2).ASTALIN=[L]A_TYPMAJ or
& PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ALL)
  If PJMTSK.PIMPL(A_N2).ASTALIN=[L]A_TYPMAJ
   Case PJMTSK.PIMPL(A_N2).ASTALIN
    When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._AUPDATE)
    When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._AINSERT)
    When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._ADELETE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
 #-----------------------#
 For A_N2=1 To maxtab(PJMTSK.SPLD)
  If PJMTSK.SPLD(A_N2) <> null and
& (PJMTSK.SPLD(A_N2).ASTALIN=[L]A_TYPMAJ or
& PJMTSK.SPLD(A_N2).ASTALIN=[V]CST_ALL)
   If PJMTSK.SPLD(A_N2).ASTALIN=[L]A_TYPMAJ
    Case PJMTSK.SPLD(A_N2).ASTALIN
     When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._AUPDATE)
     When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._AINSERT)
     When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._ADELETE)
    Endcase
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = PJMTSK.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PJMTSK.snapshotEnabled=1
 [L]A_RETIK = PJMTSK.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMTSK.RITT)
 If PJMTSK.RITT(A_N2) <> null
  [L]ASTATUS2 = fmet PJMTSK.RITT(A_N2)._AUPDATE_ABORT
  If PJMTSK.RITT(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.RITT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMTSK.RITT(A_N2)
   PJMTSK.RITT(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMTSK.RTKO)
 If PJMTSK.RTKO(A_N2) <> null
  [L]ASTATUS2 = fmet PJMTSK.RTKO(A_N2)._AUPDATE_ABORT
  If PJMTSK.RTKO(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.RTKO(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMTSK.RTKO(A_N2)
   PJMTSK.RTKO(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
 [L]ASTATUS2 = fmet PJMTSK.PIMPL(A_N2)._AUPDATE_ABORT
 If PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance PJMTSK.PIMPL(A_N2)
  PJMTSK.PIMPL(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMTSK.SPLD)
 If PJMTSK.SPLD(A_N2) <> null
  [L]ASTATUS2 = fmet PJMTSK.SPLD(A_N2)._AUPDATE_ABORT
  If PJMTSK.SPLD(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.SPLD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMTSK.SPLD(A_N2)
   PJMTSK.SPLD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet PJMTSK.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PJMTSK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PJMTSK.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMTSK.RITT)
 If PJMTSK.RITT(A_N2) <> null
  [L]ASTATUS2 = fmet PJMTSK.RITT(A_N2)._AUPDATE_AFTER
  If PJMTSK.RITT(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.RITT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMTSK.RITT(A_N2)
   PJMTSK.RITT(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMTSK.RTKO)
 If PJMTSK.RTKO(A_N2) <> null
  [L]ASTATUS2 = fmet PJMTSK.RTKO(A_N2)._AUPDATE_AFTER
  If PJMTSK.RTKO(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.RTKO(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMTSK.RTKO(A_N2)
   PJMTSK.RTKO(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
 [L]ASTATUS2 = fmet PJMTSK.PIMPL(A_N2)._AUPDATE_AFTER
 If PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.PIMPL(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance PJMTSK.PIMPL(A_N2)
  PJMTSK.PIMPL(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMTSK.SPLD)
 If PJMTSK.SPLD(A_N2) <> null
  [L]ASTATUS2 = fmet PJMTSK.SPLD(A_N2)._AUPDATE_AFTER
  If PJMTSK.SPLD(A_N2).ASTALIN=[V]CST_ADEL or PJMTSK.SPLD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMTSK.SPLD(A_N2)
   PJMTSK.SPLD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



