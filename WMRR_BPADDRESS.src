#<AdxTL>@(#)0.0.0.0 $Revision$Class Addresses
# Supervisor
## CRUD-CLASSE ## BPADDRESS
# 2018-08-27 13:04:52 105


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPADDRESS [BPA_]

If !SILENCE : Call TRACE("2 --> Local Instance R_BPADDRESS") From ASYRCOM : Endif
Local Instance BPADDRESS Using R_BPADDRESS

If !SILENCE : Call TRACE("3 --> New Instance R_BPADDRESS") From ASYRCOM : Endif
BPADDRESS = NewInstance R_BPADDRESS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPA_]BPA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPADDRESS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.AREAD([BPA_]BPATYP,[BPA_]BPANUM,[BPA_]BPAADD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPADDRESS.BPA.BPATYP ="-num$(BPADDRESS.BPA.BPATYP)) From ASYRCOM
 Call TRACE("BPADDRESS.BPA.BPANUM ="-num$(BPADDRESS.BPA.BPANUM)) From ASYRCOM
 Call TRACE("BPADDRESS.BPA.BPAADD ="-num$(BPADDRESS.BPA.BPAADD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPADDRESS.BPA.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPADDRESS.BPA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPA_]
FreeGroup BPADDRESS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPADDRESS,ACLE,ASTATUS,_ETAG)
Variable Instance BPADDRESS Using R_BPADDRESS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _BPATYP
Local Char _BPANUM(15)
Local Char _BPAADD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPATYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPANUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BPAADD = num$([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File BPADDRESS [BPA]
Default File [F:BPA]
Read [F:BPA]BPA0 = [L]_BPATYP;[L]_BPANUM;[L]_BPAADD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPA]UPDTICK)>0
 [L]_ETAG = num$([F:BPA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPADDRESS,ACLE,ASTATUS)
Variable Instance BPADDRESS Using R_BPADDRESS
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _BPATYP
Local Char _BPANUM(15)
Local Char _BPAADD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPATYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPANUM = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BPAADD = num$([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.AREAD([L]_BPATYP,[L]_BPANUM,[L]_BPAADD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPADDRESS,_BPATYP,_BPANUM,_BPAADD,ASTATUS)
Variable Instance BPADDRESS Using R_BPADDRESS
Value Tinyint _BPATYP
Value Char _BPANUM
Value Char _BPAADD
Variable Integer ASTATUS

If BPADDRESS = null : End : Endif

Gosub AVARIABLES From WMR00BPADDRESS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPADDRESS.APARENT=null
 [L]A_I = BPADDRESS.freeSnapshot
 BPADDRESS.snapshotEnabled = 0
 BPADDRESS.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

BPADDRESS.BPA.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.BPA.AREAD([L]_BPATYP,[L]_BPANUM,[L]_BPAADD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPADDRESS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPADDRESS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPADDRESS.APARENT=null
 BPADDRESS.snapshotEnabled = 1
 BPADDRESS.setAccessorEnabled = 1
Endif
LogicClose File [BPA]
End



