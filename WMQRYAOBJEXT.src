#<AdxTL>@(#)0.0.0.0 $Revision$Class Import/export templates
# Supervisor
## WMREP REPRESENTATION ## AOBJEXT
# 2018-08-27 13:02:05 120

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:AOE])=0 : Local File AOBJEXT [AOE] : Endif
If clalev([F:A_])=0 : Local File AOBJEXT [A_] : Endif
If clalev([F:ACC])=0 : Local File ACCES [ACC] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [AOE]
LogicClose File [A_]
LogicClose File [ACC]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
If GACTX.ALLACS=[V]CST_AYES
 Gosub AQUERY_JOIN_ALL 
Else
 Local Char ACRITROLE(250)(1..)
 [L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"AOE","AOE",ACRITROLE,[V]CST_AFALSE)
 Link [AOE] With
& [ACC]CODACC~= GACTX.USER;[F:AOE]ACS
& As [LNK_]
& Where ( (1=1)
& and ([F:ACC]CONSUL=2)
& and (evalue([L]ACRITROLE))
&  )
Endif
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN_ALL
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"AOE","AOE",ACRITROLE,[V]CST_AFALSE)
Link [AOE] With
& [A_]AOE0~=[AOE]EXT
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"AOE","AOE",ACRITROLE,[V]CST_AFALSE)
Link [AOE] With
& [ACC]CODACC~= GACTX.USER;[F:AOE]ACS
& As [LNK_]
& Where ( (1=1)
& and ([F:ACC]CONSUL=2)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# AOE --- AOBJEXT(AOE)
QRY(NBREP) = NewInstance R_AOBJEXT AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:AOE]AUUID)>0 & [F:AOE]AUUID=NullUuid
 [F:AOE]AUUID = getUuid
Endif
SetInstance QRY(NBREP).AOE With [F:AOE]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# AOE --- AOBJEXT(AOE)
QRY = NewInstance R_AOBJEXT AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:AOE]AUUID)>0 & [F:AOE]AUUID=NullUuid
 [F:AOE]AUUID = getUuid
Endif
SetInstance QRY.AOE With [F:AOE]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0AOBJEXT
CURQRY = "R_AOBJEXT"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).AOE.EXT.LNKPRO
Callmet QRY(NBREP).AOE.OBJ.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.AOE.EXT.LNKPRO
Callmet QRY.AOE.OBJ.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "LIBDAT" : TBFIL(NBPRO) = "[F:AOE]"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "LIBDAT"
NBPRO += 1 : TBPRO(NBPRO) = "LIBMNL" : TBFIL(NBPRO) = "[F:AOE]"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "LIBMNL"
NBPRO += 1 : TBPRO(NBPRO) = "TABSEL" : TBFIL(NBPRO) = "[F:AOE]"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TABSEL"
NBPRO += 1 : TBPRO(NBPRO) = "EXT" : TBFIL(NBPRO) = "[F:AOE]EXT"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "AOE.EXT"
NBPRO += 1 : TBPRO(NBPRO) = "OBJ" : TBFIL(NBPRO) = "[F:AOE]OBJ"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "AOE.OBJ"
NBPRO += 1 : TBPRO(NBPRO) = "TYPFIL" : TBFIL(NBPRO) = "[F:AOE]TYPFIL"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "AOE.TYPFIL"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:AOE]EXT"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From AOBJEXT_RSTD
Gosub EVENTS From AOBJEXT_RSTD
Return
 


