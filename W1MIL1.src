#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MIL1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "12:53:26"
A_USER  = "ADMIN"
A_STAMP = "20180326125326"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MIL1 [MIL1]
Gosub HORODAT
Local Inpbox "MIL1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MIL1] As [SIM_]
Grizo [MIL1]10
Grizo [MIL1]12
Grizo [MIL1]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MIL1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=35 : Y1(0)=1 : Y2(0)=10
X1(1)=1 : X2(1)=35 : Y1(1)=11 : Y2(1)=16
X1(2)=36 : X2(2)=80 : Y1(2)=1 : Y2(2)=16
Return

$ON_OFFLG
Onevent INIT_AREA Call D_OFFLG(zc) From W1MIL1
Onevent BEFORE_INPUT Call AS_OFFLG(zc) From W1MIL1
Return

Subprog D_OFFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]OFFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_OFFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BOMFLG
Onevent AFTER_CHANGE Gosub AMM_BOMFLG From W1MIL1
Onevent INIT_AREA Call D_BOMFLG(zc) From W1MIL1
Onevent BEFORE_INPUT Call AS_BOMFLG(zc) From W1MIL1
Return

Subprog D_BOMFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]BOMFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_BOMFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_BOMFLG
Call AM_BOMFLG(zc)
If !mkstat & GOBJET
 zoncou = "BOMFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_BOMFLG(VALEUR) From SUBMIL
If mkstat : GERR = 1 : GZONE = "BOMFLG" : GZNUM = 14964 : Endif
Gosub _AFF
End

$ON_QTYSAI
Onevent BEFORE_INPUT Call AS_QTYSAI(zc) From W1MIL1
Onevent INIT_AREA Call D_QTYSAI(zc) From W1MIL1
Return

Subprog D_QTYSAI(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSAI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSAI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_QTYSAI(VALEUR) From SUBMIL
If mkstat=2
 [M]QTYSAI(INDIC) = VALEUR
 Affzo QTYSAI(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRHOBY
Onevent AFTER_CHANGE Gosub AMM_WRHOBY From W1MIL1
Onevent INIT_AREA Call D_WRHOBY(zc) From W1MIL1
Onevent BEFORE_INPUT Call AS_WRHOBY(zc) From W1MIL1
Return

Subprog D_WRHOBY(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHOBY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WRHOBY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_WRHOBY
Call AM_WRHOBY(zc)
If !mkstat & GOBJET
 zoncou = "WRHOBY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRHOBY(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_WRHOBY(VALEUR) From SUBMIL
If mkstat : GERR = 1 : GZONE = "WRHOBY" : GZNUM = 40968 : Endif
Gosub _AFF
End

$ON_WRHCOD
Onevent INIT_AREA Call D_WRHCOD(zc) From W1MIL1
Onevent BEFORE_INPUT Call AS_WRHCOD(zc) From W1MIL1
Return

Subprog D_WRHCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WRHCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATFLG
Onevent AFTER_CHANGE Gosub AMM_MATFLG From W1MIL1
Onevent INIT_AREA Call D_MATFLG(zc) From W1MIL1
Onevent BEFORE_INPUT Call AS_MATFLG(zc) From W1MIL1
Return

Subprog D_MATFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MATFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_MATFLG
Call AM_MATFLG(zc)
If !mkstat & GOBJET
 zoncou = "MATFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MATFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MATFLG(VALEUR) From SUBMIL
If mkstat : GERR = 1 : GZONE = "MATFLG" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_CONSMAT
Onevent BEFORE_INPUT Call AS_CONSMAT(zc) From W1MIL1
Onevent INIT_AREA Call D_CONSMAT(zc) From W1MIL1
Return

Subprog D_CONSMAT(VALEUR)
Variable Integer VALEUR
If varinit([M]CONSMAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CONSMAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:MIL1]MATFLG <> 1)
 Affzo CONSMAT : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CONSMAT(VALEUR) From SUBMIL
 If mkstat=2
  [M]CONSMAT(INDIC) = VALEUR
  Affzo CONSMAT(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_STOCODMAN
Onevent BEFORE_INPUT Call AS_STOCODMAN(zc) From W1MIL1
Onevent INIT_AREA Call D_STOCODMAN(zc) From W1MIL1
Return

Subprog D_STOCODMAN(VALEUR)
Variable Integer VALEUR
If varinit([M]STOCODMAN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STOCODMAN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:MIL1]MATFLG <> 1)
 Affzo STOCODMAN : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_STOCODMAN(VALEUR) From SUBMIL
 If mkstat=2
  [M]STOCODMAN(INDIC) = VALEUR
  Affzo STOCODMAN(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_MATFLTFLG
Onevent INIT_AREA Call D_MATFLTFLG(zc) From W1MIL1
Onevent BEFORE_INPUT Call AS_MATFLTFLG(zc) From W1MIL1
Return

Subprog D_MATFLTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MATFLTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATFLTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:MIL1]MATFLG <> 1)
 Affzo MATFLTFLG : mkstat = 2
Endif
If !mkstat
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$CHG_STY
Return


