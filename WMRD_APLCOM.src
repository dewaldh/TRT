#<AdxTL>@(#)0.0.0.0 $Revision$Class Sequence number type variables
# Supervisor
## CRUD-CLASSE ## APLCOM
# 2018-08-27 13:02:21 131


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(APLCOM,ASTATUS)
Variable Instance APLCOM Using R_APLCOM
Variable Integer ASTATUS

If APLCOM = null : End : Endif

Gosub AVARIABLES From WMR00APLCOM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet APLCOM.ACTX.AGETAFCRIGHT(APLCOM,"GESACM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet APLCOM.ACTX.AGETAFCRIGHTD(APLCOM,"GESACM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_APLCOM
Else
 Gosub ADELETE_APLCOM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
APLCOM.ASTALIN = [V]CST_ADEL
APLCOM.ACM.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If APLCOM.ACM.ASTALIN = [V]CST_ANEWDEL : Return : Endif
APLCOM.ACM.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_APLCOM
Gosub ADELETE_APLCOM
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_APLCOM
[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACM._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet APLCOM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If APLCOM.snapshotEnabled=1
 [L]A_RETIK = APLCOM.revertUpdTick
Endif
[L]ASTATUS = max(fmet APLCOM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



