#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ITF2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:03:39"
A_USER  = "ADMIN"
A_STAMP = "20180828000339"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ITF2 [ITF2]
Gosub HORODAT
Local Inpbox "ITF2" From GFONCTION At A_STAMP With A_WINDPREV Mask [ITF2] As [SIM_]
Grizo [ITF2]5
Grizo [ITF2]10
Grizo [ITF2]15
Grizo [ITF2]20
Grizo [ITF2]25
Grizo [ITF2]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ITF2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=41 : Y1(0)=1 : Y2(0)=7
X1(1)=1 : X2(1)=41 : Y1(1)=8 : Y2(1)=15
X1(2)=42 : X2(2)=81 : Y1(2)=1 : Y2(2)=15
X1(3)=1 : X2(3)=41 : Y1(3)=16 : Y2(3)=17
X1(4)=42 : X2(4)=81 : Y1(4)=16 : Y2(4)=17
X1(5)=1 : X2(5)=41 : Y1(5)=18 : Y2(5)=23
Return

$ON_PLHUOT
Onevent BEFORE_INPUT Call AS_PLHUOT(zc) From W1ITF2
Onevent INIT_AREA Call D_PLHUOT(zc) From W1ITF2
Onevent CONTROL Call C_PLHUOT(zc) From W1ITF2
Return

Subprog D_PLHUOT(VALEUR)
Variable Integer VALEUR
If varinit([M]PLHUOT,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

Subprog AS_PLHUOT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(291) From COMBOS
## Action STD
Call AS_PLHUOT(VALEUR) From SUBITF
If mkstat=2
 [M]PLHUOT(INDIC) = VALEUR
 Affzo PLHUOT(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,291,1))))
Endif
If !mkstat
 Discombo 0 From PLHUOT(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PLHUOT(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PLHUOT(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_FOHUOT
Onevent BEFORE_INPUT Call AS_FOHUOT(zc) From W1ITF2
Onevent INIT_AREA Call D_FOHUOT(zc) From W1ITF2
Onevent CONTROL Call C_FOHUOT(zc) From W1ITF2
Return

Subprog D_FOHUOT(VALEUR)
Variable Integer VALEUR
If varinit([M]FOHUOT,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

Subprog AS_FOHUOT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(291) From COMBOS
## Action STD
Call AS_FOHUOT(VALEUR) From SUBITF
If mkstat=2
 [M]FOHUOT(INDIC) = VALEUR
 Affzo FOHUOT(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,291,1))))
Endif
If !mkstat
 Discombo 0 From FOHUOT(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From FOHUOT(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_FOHUOT(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SESCOD
Onevent CONTROL Call C_SESCOD(zc) From W1ITF2
Onevent BEFORE_INPUT Call AS_SESCOD(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_SESCOD From W1ITF2
Return

Subprog AS_SESCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3017,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_SESCOD(zc) From W1ITF2
Onkey   2 Titled GBOUTS Call S_SESCOD(zc) From W1ITF2
Onkey 144 Titled GBOUTP Call P_SESCOD(zc) From W1ITF2
Onkey 146 Titled GBOUTA Call SA_SESCOD(zc) From W1ITF2
Gosub _AFF
End

Subprog C_SESCOD(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("SES","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "SESCOD" : GZNUM = 2139 : Endif
Gosub _AFF
End

$AMM_SESCOD
Call AM_SESCOD(zc)
If !mkstat & GOBJET
 zoncou = "SESCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SESCOD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZSESCOD)")>indice
 [M]SESCOD(indice) = VALEUR
 Affzo ZSESCOD(indice)
Endif
Gosub _AFF
End

Subprog S_SESCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "SES"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_SESCOD(VALEUR)
Variable Char    VALEUR()
Call OBJET("SES",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_SESCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "SES"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_SESCOD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("SES",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSESCOD
Onevent BEFORE_AREA Gosub AV_ZSESCOD From W1ITF2
Return

$AV_ZSESCOD
Call LECTEXTRA(zc,"SEASON","SESSHOAXX",num$([M]SESCOD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_SHR
Onevent CONTROL Call C_SHR(zc) From W1ITF2
Return

Subprog C_SHR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_SHR(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "SHR" : GZNUM = 1563 : Endif
Gosub _AFF
End

$ON_MFGLTI
Onevent CONTROL Call C_MFGLTI(zc) From W1ITF2
Return

Subprog C_MFGLTI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_MIC
Onevent INIT_AREA Call D_MIC(zc) From W1ITF2
Return

Subprog D_MIC(VALEUR)
Variable Decimal VALEUR
If varinit([M]MIC,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

$ON_QUALTI
Onevent CONTROL Call C_QUALTI(zc) From W1ITF2
Return

Subprog C_QUALTI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_TOTLTI
Onevent CONTROL Call C_TOTLTI(zc) From W1ITF2
Return

Subprog C_TOTLTI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_OFS
Onevent CONTROL Call C_OFS(zc) From W1ITF2
Return

Subprog C_OFS(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_PRPLTI
Onevent CONTROL Call C_PRPLTI(zc) From W1ITF2
Return

Subprog C_PRPLTI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_REOMGTCOD
Onevent BEFORE_AREA Gosub AV_REOMGTCOD From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_REOMGTCOD From W1ITF2
Onevent INIT_AREA Call D_REOMGTCOD(zc) From W1ITF2
Onevent BEFORE_INPUT Call AS_REOMGTCOD(zc) From W1ITF2
Return

$AV_REOMGTCOD
## Action STD
Call AV_REOMGTCOD(zc) From SUBITF
Gosub _AFF
Return

Subprog D_REOMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]REOMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REOMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_REOMGTCOD
Call AM_REOMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "REOMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REOMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_REOMGTCOD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOMGTCOD" : GZNUM = 8610 : Endif
Gosub _AFF
End

$ON_REOPER
Onevent BEFORE_AREA Gosub AV_REOPER From W1ITF2
Onevent CONTROL Call C_REOPER(zc) From W1ITF2
Return

$AV_REOPER
## Action STD
Call AV_REOPER(zc) From SUBITF
Gosub _AFF
Return

Subprog C_REOPER(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_REOPER(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOPER" : GZNUM = 8612 : Endif
Gosub _AFF
End

$ON_REOPOL
Onevent BEFORE_AREA Gosub AV_REOPOL From W1ITF2
Onevent CONTROL Call C_REOPOL(zc) From W1ITF2
Onevent BEFORE_INPUT Call AS_REOPOL(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_REOPOL From W1ITF2
Return

$AV_REOPOL
## Action STD
Call AV_REOPOL(zc) From SUBITF
Gosub _AFF
Return

Subprog AS_REOPOL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1981,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_REOPOL(zc) From W1ITF2
Onkey   2 Titled GBOUTS Call S_REOPOL(zc) From W1ITF2
Onkey 144 Titled GBOUTP Call P_REOPOL(zc) From W1ITF2
Onkey 146 Titled GBOUTA Call SA_REOPOL(zc) From W1ITF2
Gosub _AFF
End

Subprog C_REOPOL(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TRP","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "REOPOL" : GZNUM = 1981 : Endif
If !mkstat
 ## Action STD
 Call C_REOPOL(VALEUR) From SUBITF
 If mkstat : GERR = 1 : GZONE = "REOPOL" : GZNUM = 1981 : Endif
Endif
Gosub _AFF
End

$AMM_REOPOL
Call AM_REOPOL(zc)
If !mkstat & GOBJET
 zoncou = "REOPOL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REOPOL(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZREOPOL)")>indice
 [M]REOPOL(indice) = VALEUR
 Affzo ZREOPOL(indice)
Endif
Gosub _AFF
End

Subprog S_REOPOL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRP"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_REOPOL(VALEUR)
Variable Char    VALEUR()
Call OBJET("TRP",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_REOPOL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TRP"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_REOPOL(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRP",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZREOPOL
Onevent BEFORE_AREA Gosub AV_ZREOPOL From W1ITF2
Return

$AV_ZREOPOL
Call LECTEXTRA(zc,"TABREOPOL","TRPSHOAXX",num$([M]REOPOL(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_DAYCOV
Onevent BEFORE_AREA Gosub AV_DAYCOV From W1ITF2
Onevent BEFORE_INPUT Call AS_DAYCOV(zc) From W1ITF2
Return

$AV_DAYCOV
## Action STD
Call AV_DAYCOV(zc) From SUBITF
Gosub _AFF
Return

Subprog AS_DAYCOV(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DAYCOV(VALEUR) From SUBITF
If mkstat=2
 [M]DAYCOV(INDIC) = VALEUR
 Affzo DAYCOV(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_REOCOD
Onevent BEFORE_INPUT Call AS_REOCOD(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_REOCOD From W1ITF2
Onevent INIT_AREA Call D_REOCOD(zc) From W1ITF2
Onevent CONTROL Call C_REOCOD(zc) From W1ITF2
Return

Subprog D_REOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]REOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(250) From COMBOS
## Action STD
Call AS_REOCOD(VALEUR) From SUBITF
If mkstat=2
 [M]REOCOD(INDIC) = VALEUR
 Affzo REOCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,250,1))))
Endif
If !mkstat
 Discombo 0 From REOCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From REOCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_REOCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_REOCOD
Call AM_REOCOD(zc)
If !mkstat & GOBJET
 zoncou = "REOCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REOCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_REOCOD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOCOD" : GZNUM = 5148 : Endif
Gosub _AFF
End

$ON_REOFCY
Onevent CONTROL Call C_REOFCY(zc) From W1ITF2
Onevent BEFORE_INPUT Call AS_REOFCY(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_REOFCY From W1ITF2
Return

Subprog AS_REOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_REOFCY(zc) From W1ITF2
Onkey   2 Titled GBOUTS Call S_REOFCY(zc) From W1ITF2
Onkey 144 Titled GBOUTP Call P_REOFCY(zc) From W1ITF2
Onkey 146 Titled GBOUTA Call SA_REOFCY(zc) From W1ITF2
Gosub _AFF
End

Subprog C_REOFCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "REOFCY" : GZNUM = 4696 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "REOFCY" : GZNUM = 4696 : Endif
 If !mkstat
  ## Action STD
  Call C_REOFCY(VALEUR) From SUBITF
  If mkstat : GERR = 1 : GZONE = "REOFCY" : GZNUM = 4696 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_REOFCY
Call AM_REOFCY(zc)
If !mkstat & GOBJET
 zoncou = "REOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REOFCY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZREOFCY)")>indice
 [M]REOFCY(indice) = VALEUR
 Affzo ZREOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_REOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_REOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_REOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_REOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZREOFCY
Onevent BEFORE_AREA Gosub AV_ZREOFCY From W1ITF2
Return

$AV_ZREOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]REOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_SAFSTO
Onevent BEFORE_AREA Gosub AV_SAFSTO From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_SAFSTO From W1ITF2
Return

$AV_SAFSTO
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ITF0]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_SAFSTO(zc) From SUBITF
Chgfmt [M]SAFSTO(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$AMM_SAFSTO
Call AM_SAFSTO(zc)
If !mkstat & GOBJET
 zoncou = "SAFSTO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SAFSTO(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SAFSTO(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "SAFSTO" : GZNUM = 1983 : Endif
Gosub _AFF
End

$ON_REOTSD
Onevent BEFORE_AREA Gosub AV_REOTSD From W1ITF2
Onevent CONTROL Call C_REOTSD(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_REOTSD From W1ITF2
Return

$AV_REOTSD
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ITF0]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_REOTSD(zc) From SUBITF
Chgfmt [M]REOTSD(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog C_REOTSD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_REOTSD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOTSD" : GZNUM = 1984 : Endif
Gosub _AFF
End

$AMM_REOTSD
Call AM_REOTSD(zc)
If !mkstat & GOBJET
 zoncou = "REOTSD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REOTSD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_REOTSD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOTSD" : GZNUM = 1984 : Endif
Gosub _AFF
End

$ON_MAXSTO
Onevent BEFORE_AREA Gosub AV_MAXSTO From W1ITF2
Onevent CONTROL Call C_MAXSTO(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_MAXSTO From W1ITF2
Return

$AV_MAXSTO
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ITF0]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_MAXSTO(zc) From SUBITF
Chgfmt [M]MAXSTO(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog C_MAXSTO(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_MAXSTO(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "MAXSTO" : GZNUM = 1985 : Endif
Gosub _AFF
End

$AMM_MAXSTO
Call AM_MAXSTO(zc)
If !mkstat & GOBJET
 zoncou = "MAXSTO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MAXSTO(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_MAXSTO(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "MAXSTO" : GZNUM = 1985 : Endif
Gosub _AFF
End

$ON_REOMINQTY
Onevent BEFORE_AREA Gosub AV_REOMINQTY From W1ITF2
Onevent BEFORE_INPUT Call AS_REOMINQTY(zc) From W1ITF2
Onevent CONTROL Call C_REOMINQTY(zc) From W1ITF2
Onevent AFTER_CHANGE Gosub AMM_REOMINQTY From W1ITF2
Return

$AV_REOMINQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:ITF0]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_REOMINQTY(zc) From SUBITF
Chgfmt [M]REOMINQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_REOMINQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_REOMINQTY(VALEUR) From SUBITF
If mkstat=2
 [M]REOMINQTY(INDIC) = VALEUR
 Affzo REOMINQTY(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_REOMINQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_REOMINQTY(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOMINQTY" : GZNUM = 1986 : Endif
Gosub _AFF
End

$AMM_REOMINQTY
Call AM_REOMINQTY(zc)
If !mkstat & GOBJET
 zoncou = "REOMINQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REOMINQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_REOMINQTY(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "REOMINQTY" : GZNUM = 1986 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2ITF2
Return

$TIT_COL
Gosub TIT_COL From W2ITF2
Return


