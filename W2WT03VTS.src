#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT03VTS 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_SERNUM
Onevent CONTROL Call C_SERNUM(zc) From W2WT03VTS
Onevent BEFORE_AREA Gosub AV_SERNUM From W2WT03VTS
Return

$AV_SERNUM
If GWSINVSER<>""
 Chgfmt [M]SERNUM(indice) With GWSINVSER
Else
 Chgfmt [M]SERNUM(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SERNUM(VALEUR) From TRTSTOCHG
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 19216 : Endif
Gosub _AFF
End

$ON_SERNUMF
Onevent BEFORE_AREA Gosub AV_SERNUMF From W2WT03VTS
Return

$AV_SERNUMF
If GWSINVSERF<>""
 Chgfmt [M]SERNUMF(indice) With GWSINVSERF
Else
 Chgfmt [M]SERNUMF(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_WRHDES
Onevent CONTROL Call C_WRHDES(zc) From W2WT03VTS
Onevent AFTER_CHANGE Gosub AMM_WRHDES From W2WT03VTS
Onevent BEFORE_INPUT Call AS_WRHDES(zc) From W2WT03VTS
Return

Subprog AS_WRHDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WRHDES(zc) From W2WT03VTS
Gosub _AFF
End

Subprog C_WRHDES(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M:SCD]FCYDES,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRHDES" : GZNUM = 281 : Endif
Gosub _AFF
End

$AMM_WRHDES
Call AM_WRHDES(zc)
If !mkstat & GOBJET
 zoncou = "WRHDES" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRHDES(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WRHDES(VALEUR) From TRTSTOCHG
If mkstat : GERR = 1 : GZONE = "WRHDES" : GZNUM = 281 : Endif
Gosub _AFF
End

Subprog S_WRHDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M:SCD]FCYDES
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STADES
Onevent CONTROL Call C_STADES(zc) From W2WT03VTS
Onevent AFTER_CHANGE Gosub AMM_STADES From W2WT03VTS
Onevent BEFORE_INPUT Call AS_STADES(zc) From W2WT03VTS
Return

Subprog AS_STADES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STADES(zc) From W2WT03VTS
Gosub _AFF
End

Subprog C_STADES(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_STADES(VALEUR) From TRTSTOCHG
If mkstat : GERR = 1 : GZONE = "STADES" : GZNUM = 19144 : Endif
If !mkstat
 ## Action STKCTRSTA
 Call STKCTRSTA(VALEUR,GSCSAUZSST,1,3,0,mkstat) From STKACT
 If mkstat : GERR = 1 : GZONE = "STADES" : GZNUM = 19144 : Endif
Endif
Gosub _AFF
End

$AMM_STADES
Call AM_STADES(zc)
If !mkstat & GOBJET
 zoncou = "STADES" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STADES(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STADES(VALEUR) From TRTSTOCHG
If mkstat : GERR = 1 : GZONE = "STADES" : GZNUM = 19144 : Endif
Gosub _AFF
End

Subprog S_STADES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = GSCSAUZSST
 PARMSK(2) = "1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOCTYPDES
Onevent CONTROL Call C_LOCTYPDES(zc) From W2WT03VTS
Onevent BEFORE_INPUT Call AS_LOCTYPDES(zc) From W2WT03VTS
Onevent AFTER_CHANGE Gosub AMM_LOCTYPDES From W2WT03VTS
Onevent BEFORE_AREA Gosub AV_LOCTYPDES From W2WT03VTS
Return

$AV_LOCTYPDES
If GWSINVEMP<>""
 Chgfmt [M]LOCTYPDES(indice) With GWSINVEMP
Else
 Chgfmt [M]LOCTYPDES(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(24577,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STKSUGTLO
Call STKSUGTLO([M:SCD]WLOCSEQ(nolign-1),[M:SCD]TRSTYP,[M:SCD]TRSCOD,[M:SCD]FCYDES,[M:SCD]ITMREF,[M:SCD]PCUDES(nolign-1),[M:SCD]QTYPCUDES(nolign-1),[M:SCD]STADES(nolign-1)
&,VALEUR,"",GFILLOCENT,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SCD]WRHDES(nolign-1)))),[M:SCD]LOCDES(nolign-1)) From STKLOC
If mkstat=2
 [M]LOCTYPDES(INDIC) = VALEUR
 Affzo LOCTYPDES(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_LOCTYPDES(zc) From W2WT03VTS
Onkey   2 Titled GBOUTS Call S_LOCTYPDES(zc) From W2WT03VTS
Gosub _AFF
End

Subprog C_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
## Action CTLTEMFMT
Call CTLTEMFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCTYPDES" : GZNUM = 1937 : Endif
If !mkstat
 ## Action STKCTRTLO
 Call STKCTRTLO([M:SCD]WLOCSEQ(nolign-1),[M:SCD]TRSTYP,[M:SCD]TRSCOD,[M:SCD]FCYDES,[M:SCD]ITMREF,[M:SCD]PCUDES(nolign-1),[M:SCD]QTYPCUDES(nolign-1),[M:SCD]STADES(nolign-1)
& ,0,VALEUR,mkstat,"",GFILLOCENT,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SCD]WRHDES(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCTYPDES" : GZNUM = 1937 : Endif
Endif
Gosub _AFF
End

$AMM_LOCTYPDES
Call AM_LOCTYPDES(zc)
If !mkstat & GOBJET
 zoncou = "LOCTYPDES" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
## Action RAZLOC
Call RAZLOC([M:SCD]LOCDES(nolign-1),[M:SCD]WLOCSEQ(nolign-1)) From STKACT
If mkstat : GERR = 1 : GZONE = "LOCTYPDES" : GZNUM = 1937 : Endif
Gosub _AFF
End

Subprog S_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELTLO1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELTLO1"
 PARMSK(1) = num$([M:SCD]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:SCD]TRSTYP)
 PARMSK(3) = [M:SCD]TRSCOD
 PARMSK(4) = [M:SCD]FCYDES
 PARMSK(5) = [M:SCD]ITMREF
 PARMSK(6) = [M:SCD]PCUDES(nolign-1)
 PARMSK(7) = num$([M:SCD]QTYPCUDES(nolign-1))
 PARMSK(8) = [M:SCD]STADES(nolign-1)
 PARMSK(9) = ""
 PARMSK(10) = GFILLOCENT
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELTLO1","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJET"
 Call OBJET_CHAR(VALEUR,"TLO",[M:SCD]FCYDES) From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LOCDES
Onevent CONTROL Call C_LOCDES(zc) From W2WT03VTS
Onevent BEFORE_INPUT Call AS_LOCDES(zc) From W2WT03VTS
Onevent BEFORE_AREA Gosub AV_LOCDES From W2WT03VTS
Return

$AV_LOCDES
If GWSINVEMP<>""
 Chgfmt [M]LOCDES(indice) With GWSINVEMP
Else
 Chgfmt [M]LOCDES(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOCDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3623,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STKMODREMP
Call STKMODREMP([M:SCD]WLOCSEQ(nolign-1),[M:SCD]STOFCY,[M:SCD]ITMREF,[M:SCD]PCU,[M:SCD]QTYPCUDES(nolign-1)*[M:SCD]COEDES/[M:SCD]PCUSTUCOE,[M:SCD]STA,[M:SCD]LOC,""
&,mkstat,string$([L]VALEUR=[M:SCD]LOC,"QU")) From STKLOC
If mkstat=2
 [M]LOCDES(INDIC) = VALEUR
 Affzo LOCDES(INDIC) : mkstat = 2
Endif
If !GWEBSERV
 If !mkstat
  ## Action STKSUGEMP
  Call STKSUGEMP([M:SCD]WLOCSEQ(nolign-1),[M:SCD]TRSTYP,[M:SCD]TRSCOD,[M:SCD]FCYDES,[M:SCD]ITMREF,[M:SCD]PCUDES(nolign-1),[M:SCD]QTYPCUDES(nolign-1),[M:SCD]STADES(nolign-1)
&  ,[M:SCD]LOCTYPDES(nolign-1),VALEUR,"",string$([L]VALEUR=[M:SCD]LOC,"QU"),GFILLOCENT,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SCD]WRHDES(nolign-1))))) From STKLOC
  If mkstat=2
   [M]LOCDES(INDIC) = VALEUR
   Affzo LOCDES(INDIC) : mkstat = 2
  Endif
 Endif
Endif
Onkey 129 Titled GBOUT1 Call B1_LOCDES(zc) From W2WT03VTS
Onkey   2 Titled GBOUTS Call S_LOCDES(zc) From W2WT03VTS
Gosub _AFF
End

Subprog C_LOCDES(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCDES" : GZNUM = 18489 : Endif
If !mkstat
 ## Action STKCTREMP
 Call STKCTREMP([M:SCD]WLOCSEQ(nolign-1),[M:SCD]TRSTYP,[M:SCD]TRSCOD,[M:SCD]FCYDES,[M:SCD]ITMREF,[M:SCD]PCUDES(nolign-1),[M:SCD]QTYPCUDES(nolign-1),[M:SCD]STADES(nolign-1)
& ,[M:SCD]LOCTYPDES(nolign-1),VALEUR,"",1,mkstat,GBIDD1,string$([L]VALEUR=[M:SCD]LOC,"QU"),GFILLOCENT
& ,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SCD]WRHDES(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCDES" : GZNUM = 18489 : Endif
Endif
Gosub _AFF
End

Subprog S_LOCDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIEMPLIB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIEMPLIB"
 PARMSK(1) = num$([M:SCD]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:SCD]TRSTYP)
 PARMSK(3) = [M:SCD]TRSCOD
 PARMSK(4) = [M:SCD]FCYDES
 PARMSK(5) = [M:SCD]ITMREF
 PARMSK(6) = [M:SCD]PCUDES(nolign-1)
 PARMSK(7) = num$([M:SCD]QTYPCUDES(nolign-1))
 PARMSK(8) = [M:SCD]STADES(nolign-1)
 PARMSK(9) = [M:SCD]LOCTYPDES(nolign-1)
 PARMSK(10) = VALEUR
 PARMSK(11) = ""
 PARMSK(12) = string$([L]VALEUR=[M:SCD]LOC,"QU")
 PARMSK(13) = GFILLOCENT
 PARMSK(14) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SCD]WRHDES(nolign-1))))
 Call SAISIE_CHAR(VALEUR,PARMSK,"ISELEMP","STKLOC","XWISELEMP") From GSAISIE
 [M:SCD]WLOCSEQ(nolign-1) = val(PARMSK(1))
 [M:SCD]LOCTYPDES(nolign-1) = PARMSK(9)
 VALEUR = PARMSK(10)
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOCDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_LOCDES" : PROGSUB = "TRTSTOCHG" : PROGSPE = "SPECHG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR(VALEUR,"LOC",[M:SCD]FCYDES) From GOBJET
 ACTION = "BB1_LOCDES" : PROGSUB = "TRTSTOCHG" : PROGSPE = "SPECHG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LBEFMT
Onevent CONTROL Call C_LBEFMT(zc) From W2WT03VTS
Onevent BEFORE_INPUT Call AS_LBEFMT(zc) From W2WT03VTS
Return

Subprog AS_LBEFMT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(11937,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_LBEFMT(zc) From W2WT03VTS
Onkey   2 Titled GBOUTS Call S_LBEFMT(zc) From W2WT03VTS
Onkey 144 Titled GBOUTP Call P_LBEFMT(zc) From W2WT03VTS
Onkey 146 Titled GBOUTA Call SA_LBEFMT(zc) From W2WT03VTS
Gosub _AFF
End

Subprog C_LBEFMT(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ARP","!ALK",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "LBEFMT" : GZNUM = 2209 : Endif
Gosub _AFF
End

Subprog S_LBEFMT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ARP"
PARMSK(2) = "!ALK"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_LBEFMT(VALEUR)
Variable Char    VALEUR()
Call OBJET("ARP",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_LBEFMT(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ARP"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LBEFMT(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ARP",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_QLYCTLFLG
Onevent INIT_AREA Call D_QLYCTLFLG(zc) From W2WT03VTS
Return

Subprog D_QLYCTLFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]QLYCTLFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CCE
Onevent BEFORE_AREA Gosub AV_CCE From W2WT03VTS
Return

$AV_CCE
## Action INICCEFMT
Call INICCEFMT("") From SETGLBDIE
Gosub _AFF
Return

$ON_CCECODS
Onevent INIT_AREA Call D_CCECODS(zc) From W2WT03VTS
Return

Subprog D_CCECODS(VALEUR)
Variable Integer VALEUR
If varinit([M]CCECODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CCS
Onevent BEFORE_AREA Gosub AV_CCS From W2WT03VTS
Return

$AV_CCS
## Action INICCEFMT
Call INICCEFMT("") From SETGLBDIE
Gosub _AFF
Return

$CHG_STY
Return


