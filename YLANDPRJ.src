#<AdxTL>@(#)0.0.0.0 $Revision$ 
#######################################################################################################
# Script            : YLANDPRJ                                                                        #
# Creation date     : 06/03/2019                                                                      #
# Version           : 1.0.0                                                                           #
# Authors (Company) : Jose Ribeiro (Leverage)                                                         #
# Module            : Land Development                                                                #
# ----------------------------------------------------------------------------------------------------#
# Description       : Land Development - Create Projects for Stage, Land Purchase, and General Scheme #
# ----------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-79                                #
# JIRA Issue        : DFCX1-394                                                                       #
# Evolutions        :                                                                                 #
#######################################################################################################
Gosub EXEC
End

$ACTION
Case ACTION
  When "EXEC"      :  Gosub EXEC
  When Default
Endcase
Return


#------------------------------------------------------------------------------------#
#Execute script
#------------------------------------------------------------------------------------#
$EXEC

If func AFNC.ACTIV("YLAND")

  #Opens log file for writing
  Call OUVRE_TRACE("Land development projects creation process") From LECFIC

  #Open Tables in order to Set the instance before AINSERT
  If !clalev([F:YOPP])    : Local File OPPOR [YOPP]       : Endif
  If !clalev([F:YGGN2])   : Local File YGSCGEN [YGGN2]    : Endif
  If !clalev([F:YLDP2])   : Local File YLNDPUR [YLDP2]    : Endif
  If !clalev([F:YSTG2])   : Local File YSTAGE [YSTG2]     : Endif
  If !clalev([F:YFCY])    : Local File FACILITY [F:YFCY]  : Endif
  If !clalev ([F:CCE])    : Local File CACCE [F:CCE]      : Endif
  If !clalev ([F:YFGR])   : Local File FACGROUP [F:YFGR]  : Endif

  #Get records to create Projects for Stages
  Local Char YOBJ(5)
  Local Char REQUEST(255)(10)

  REQUEST(0) =
& "SELECT t0.YESTID_0 [YESTID], t0.YSTADES_0 [YPRJDES], t0.YSTAID_0 [YID], CAST(t0.YSTATYP_0 AS VARCHAR(50)) [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YSTAID_0 [YSRC], t0.YJOBACTFLG_0 [YJOBACT], "
  REQUEST(1) =
& "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YDEVFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YSTAID_0 [YOPPNUM], 'DV' [YTYPE], t1.YESTCPYGRP_0 [ESTCPYGRP] "
  REQUEST(2) = "FROM YSTAGE t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YDEVFCY_0 = t2.FCY_0 "
  REQUEST(3) = "WHERE t0.YDEVPJMNBR_0 = '' AND t0.YJOBACTFLG_0 = 2 --AND t1.YESTSTA_0 = 3 "
  REQUEST(4) = "UNION "
  REQUEST(5) =
& "SELECT t0.YESTID_0 [YESTID], t0.YSTADES_0 [YPRJDES], t0.YSTAID_0 [YID], CAST(t0.YSTATYP_0 AS VARCHAR(50)) [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YSTAID_0 [YSRC], t0.YJOBACTFLG_0 [YJOBACT], "
  REQUEST(6) =
& "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YPJTFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YSTAID_0 [YOPPNUM], 'PM' [YTYPE], t1.YESTCPYGRP_0 [ESTCPYGRP] "
  REQUEST(7) = "FROM YSTAGE t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YPJTFCY_0 = t2.FCY_0 "
  REQUEST(8) = "WHERE t0.YPRJMANNBR_0 = '' AND t0.YJOBACTFLG_0 = 2 --AND t1.YESTSTA_0 = 3 "

  For (Integer YESTID, Char YPRJDES(30), Char YID(9), Char YPRJTYP(15), Char YJOBCOD(15), Char YSRC(9), Integer YJOBACT, Char YACCCOD(10), Char YFCY(5), Char YOPPNUM(30), Char YTYPE(2), Char
& YESTCPYGRP(5)) From "5" Sql REQUEST As [YSQL]
    YOBJ = "YSTA"
    Call ECR_TRACE("Create project for Estate " + num$([YSQL]YESTID) + " and object " + YOBJ + " - " + [YSQL]YSRC,0) From GESECRAN #Write to log file
    Gosub CREATE_PROJECT
  Next

  #Get records to create Projects for General Schemas
  Local Char REQUEST(255)(10)

  REQUEST(0) = "SELECT t0.YESTID_0 [YESTID], t0.YDES_0 [YPRJDES], t0.YGSCID_0 [YID], 'GS' [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YGSCID_0 [YSRC], t0.YJOBACTFLG_0 [YJOBACT], "
  REQUEST(1) =
& "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YDEVFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YGSCID_0 [YOPPNUM], 'DV' [YTYPE], t1.YESTCPYGRP_0 [ESTCPYGRP] "
  REQUEST(2) = "FROM YGSCGEN t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YDEVFCY_0 = t2.FCY_0 "
  REQUEST(3) = "WHERE t0.YDEVPJMNBR_0 = '' AND t0.YJOBACTFLG_0 = 2 --AND t1.YESTSTA_0 = 3 "
  REQUEST(4) = "UNION "
  REQUEST(5) = "SELECT t0.YESTID_0 [YESTID], t0.YDES_0 [YPRJDES], t0.YGSCID_0 [YID], 'GS' [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YGSCID_0 [YSRC], t0.YJOBACTFLG_0 [YJOBACT], "
  REQUEST(6) =
& "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YPJTFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YGSCID_0 [YOPPNUM], 'PM' [YTYPE], t1.YESTCPYGRP_0 [ESTCPYGRP] "
  REQUEST(7) = "FROM YGSCGEN t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YPJTFCY_0 = t2.FCY_0 "
  REQUEST(8) = "WHERE t0.YPRJPJMNBR_0 = '' AND t0.YJOBACTFLG_0 = 2 --AND t1.YESTSTA_0 = 3 "

  For (Integer YESTID, Char YPRJDES(30), Char YID(9), Char YPRJTYP(15), Char YJOBCOD(15), Char YSRC(9), Integer YJOBACT, Char YACCCOD(10), Char YFCY(5), Char YOPPNUM(30), Char YTYPE(2), Char
& YESTCPYGRP(5)) From "5" Sql REQUEST As [YSQL]
    YOBJ = "YGSC"
    Call ECR_TRACE("Create project for Estate " + num$([YSQL]YESTID) + " and object " + YOBJ + " - " + [YSQL]YSRC,0) From GESECRAN #Write to log file
    Gosub CREATE_PROJECT
  Next

  #Get records to create Projects for Land Developments
  Local Char REQUEST(255)(10)

  REQUEST(0) = "SELECT t0.YESTID_0 [YESTID], t0.YDES_0 [YPRJDES], t0.YLNDPURID_0 [YID], 'LP' [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YLNDPURID_0 [YSRC], t0.YJOBACTFLG_0 [YJOBACT], "
  REQUEST(1) =
& "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t0.YLNDOWN_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YLNDPURID_0 [YOPPNUM], 'LO' [YTYPE], t1.YESTCPYGRP_0 [ESTCPYGRP] "
  REQUEST(2) = "FROM YLNDPUR t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t0.YLNDOWN_0 = t2.FCY_0 "
  REQUEST(3) = "WHERE t0.YLNDPJMNBR_0 = '' AND t0.YJOBACTFLG_0 = 2 --AND t1.YESTSTA_0 = 3 "

  For (Integer YESTID, Char YPRJDES(30), Char YID(9), Char YPRJTYP(15), Char YJOBCOD(15), Char YSRC(9),  Integer YJOBACT, Char YACCCOD(10), Char YFCY(5), Char YOPPNUM(30), Char YTYPE(2), Char
& YESTCPYGRP(5)) From "5" Sql REQUEST As [YSQL]
    YOBJ = "YLDP"
    Call ECR_TRACE("Create project for Estate " + num$([YSQL]YESTID) + " and object " + YOBJ + " - " + [YSQL]YSRC,0) From GESECRAN #Write to log file
    Gosub CREATE_PROJECT
  Next

  #Close tables
  If clalev([F:YOPP])     : Close Local File [F:YOPP]     : Endif
  If clalev([F:YGGN2])    : Close Local File [F:YGGN2]    : Endif
  If clalev([F:YLDP2])    : Close Local File [F:YLDP2]    : Endif
  If clalev([F:YSTG2])    : Close Local File [F:YSTG2]    : Endif
  If clalev([F:YFCY])     : Close Local File [F:YFCY]     : Endif
  If clalev([F:CCE])      : Close Local File [F:CCE]      : Endif
  If clalev([F:YFGR])     : Close Local File [F:YFGR]     : Endif

  #Close Log file
  Call FERME_TRACE() From LECFIC

  #Display Log file
  Call LEC_TRACE() From LECFIC

Endif

Return


#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(YOPP_INSTANCE)

  Variable Instance YOPP_INSTANCE Using C_OPPOR

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(YOPP_INSTANCE, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    If SMESSAGE = ""
      GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YOPP_INSTANCE)
      Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
    Else
      GMESSAGE = SMESSAGE
      Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
    Endif
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    If SMESSAGE = ""
      GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YOPP_INSTANCE)
      Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
    Else
      GMESSAGE = SMESSAGE
      Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
    Endif
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK

End


#------------------------------------------------------------------------------------#
#Create PJM Projects
#------------------------------------------------------------------------------------#
$CREATE_PROJECT

  Local Integer MY_STATUS
  Local Char YOPPNUM(30), YCUR(5), YPRJDES(250), YID(9), YPRJTYP(15), YJOBCOD(15), YSRC(15), YACCCOD(10), YESTCPYGRP(5), YLANDOWN(5)

  YPRJDES = [F:YSQL]YPRJDES
  YID     = [F:YSQL]YID
  YPRJTYP = [F:YSQL]YPRJTYP
  YJOBCOD = [F:YSQL]YJOBCOD
  YSRC    = [F:YSQL]YSRC
  YACCCOD = [F:YSQL]YACCCOD
  YOPPNUM = [F:YSQL]YOPPNUM
  YJOBACT = [F:YSQL]YJOBACT
  YESTCPYGRP = [F:YSQL]YESTCPYGRP
  YLANDOWN = [F:YSQL]YFCY

  Gosub VERIF_RULES

  If GERR=1
    Return
  Endif

  If GDEVISE <> ""  : YCUR = GDEVISE  : Else  : YCUR = "AUD"  : Endif

  If YOPPNUM <> ""

    Look [F:YOPP]OPP0 = YOPPNUM

    If fstat #Doesn't exist, create project

      Read [F:YFCY]FCY0 = [F:YSQL]YFCY

      If fstat
        GMESSAGE = "Failed to read Site"
        Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
        Return
      Endif

      Global Instance YPJM Using C_OPPOR
      If YPJM <> null Then FreeGroup YPJM Endif
      YPJM = NewInstance C_OPPOR AllocGroup null

      MY_STATUS = fmet YPJM.AINIT

      If ([L]MY_STATUS >= [V]CST_AERROR)
        Call RECOVERS_ERROR_IN_CLASSIC(YPJM)
        If YPJM <> null Then FreeGroup YPJM Endif : Kill YPJM : Return
      Endif

      YPJM.TCHTOREAD = "PJM"
      YPJM.TCHIMPORT = 2
      YPJM.TCHMODULE = 1
      YPJM.SALFCY = [F:YFCY]FCY
      YPJM.OPPNUM = YOPPNUM
      YPJM.CUR = YCUR
      YPJM.CHGTYP = 1
      YPJM.OPPCLO = 1
      YPJM.CPY = [F:YFCY]LEGCPY
      YPJM.TCHISPJM = 2
      YPJM.OPPTYP = YPRJTYP
      YPJM.YJOBCOD = YJOBCOD
      YPJM.YGUID = num$(getUuid)
      YPJM.YSRC = YOBJ
      YPJM.YSRCNUM = YSRC
      YPJM.YACCESS = YACCCOD

      YPJM.PIMPL.OPPNUM = YPJM.OPPNUM
      YPJM.PIMPL.PIMNUM = YPJM.OPPNUM
      YPJM.PIMPL.PIMDESAXX = YPRJDES
      YPJM.PIMPL.PIMDESAX1 = YPRJDES
      YPJM.PIMPL.PIMTYP = 2
      YPJM.PIMPL.PIMSTA = 1
      YPJM.PIMPL.FCY = [F:YFCY]FCY
      YPJM.PIMPL.CPY = [F:YFCY]LEGCPY
      YPJM.PIMPL.OPPSTATE = 1

      Local Integer LIN
      LIN = fmet YPJM.ADDLINE("PJM", [V]CST_ALASTPOS)

      If LIN<>[V]CST_ANOTDEFINED

        YPJM.PJM(LIN).OPPNUM = YPJM.OPPNUM
        YPJM.PJM(LIN).OPEDEFFCY = [F:YFCY]FCY
        YPJM.PJM(LIN).TASBUDAUT = 1
        YPJM.PJM(LIN).CUR = YCUR
        YPJM.PJM(LIN).CUROPP = YCUR
        YPJM.PJM(LIN).SALFCY = [F:YFCY]FCY
        YPJM.PJM(LIN).OPPIMPT = 1
        YPJM.PJM(LIN).OPPMOD = 1

        #Project Dimensions
        Local Integer NI
        For NI = 1 To maxtab(YPJM.PJM(LIN).CDIE)
          If YPJM.PJM(LIN).CDIE(NI) <> null Then
            If YPJM.PJM(LIN).CDIE(NI).DIE = func AFNC.PARAM ("YDEVDTY","")
              YPJM.PJM(LIN).CDIE(NI).CCE = YJOBCOD
            Endif
          Endif
        Next NI

      Endif

      MY_STATUS = fmet YPJM.AINSERT()

      If [L]MY_STATUS = [V]CST_AOK

        If YPJM <> null Then FreeGroup YPJM Endif : Kill YPJM : Return

        YPJM = NewInstance C_OPPOR AllocGroup null

        YPJM.TCHTOREAD = "PJM"
        [L]MY_STATUS = fmet YPJM.AREAD(YOPPNUM)
        If [L]MY_STATUS >= [V]CST_AERROR Then
          GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YPJM)
          Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
          GOK=0
          Return
        Endif

        #Update new Project status from NEW to LAUNCHED
        Local Instance TECOPPACT Using C_TECOPPACT

        TECOPPACT = NewInstance C_TECOPPACT AllocGroup null
        TECOPPACT.EVTDAT = date$

        [L]MY_STATUS = fmet YPJM.PJM_PROJECT_LAUNCH(YOPPNUM, TECOPPACT)
        If [L]MY_STATUS >= [V]CST_AERROR Then
          GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YPJM)
          Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
        Endif

        If TECOPPACT <> null Then
          FreeGroup TECOPPACT
        Endif
        Kill TECOPPACT

        If YOBJ = "YSTA"

          Read [F:YSTG2]YSTG0 = YID

          If fstat=0
            If [YSQL]YTYPE = "DV"
              [F:YSTG2]YDEVNBRFLG = 2       #   PJM (DEV) activation flag
              [F:YSTG2]YDEVPJMNBR = YOPPNUM
            Elsif [YSQL]YTYPE = "PM"
              [F:YSTG2]YPRJMANFLG = 2       #   PJM (PM) activation flag
              [F:YSTG2]YPRJMANNBR = YOPPNUM
            Endif
            Rewrite [F:YSTG2]
          Endif

        Elsif YOBJ = "YGSC"

          Read [F:YGGN2]YGGN0 = YID

          If fstat=0
            If [YSQL]YTYPE = "DV"
              [F:YGGN2]YDEVFLG = 2       #   PJM (DEV) activation flag
              [F:YGGN2]YDEVPJMNBR = YOPPNUM
            Elsif [YSQL]YTYPE = "PM"
              [F:YGGN2]YPRJFLG = 2       #   PJM (PM) activation flag
              [F:YGGN2]YPRJPJMNBR = YOPPNUM
            Endif
            Rewrite [F:YGGN2]
          Endif

        Elsif YOBJ = "YLDP"

          Read [F:YLDP2]YLDP0 = YID

          If fstat=0
            If [YSQL]YTYPE = "LO"
              [F:YLDP2]YPJMFLG = 2       #   PJM (PM) activation flag
              [F:YLDP2]YLNDPJMNBR = YOPPNUM
            Endif
            Rewrite [F:YLDP2]
          Endif

        Endif

      Else
        Call RECOVERS_ERROR_IN_CLASSIC(YPJM)
      Endif

      If YPJM <> null Then FreeGroup YPJM Endif : Kill YPJM : Return

    Else
      #Project code already exist and system just linked that to entity
      GMESSAGE = YOPPNUM - mess(18,6255,1)
      Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
    Endif   #Project exist

  Else
    GMESSAGE = mess(17,6255,1)       # There is an issue on Project code generation
    Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
  Endif     # YOPPNUM <> ""

Return


$VERIF_RULES

  Local Char YDIE(30)
  YDIE = func AFNC.PARAM ("YDEVDTY","")   # Read dimension type from general parameter

  If YDIE <> ""

    If YJOBCOD = ""

      #Check if dimension exists
      Read [F:CCE]CCE0 = YDIE;YID

      If fstat = 5

        Raz [F:CCE]

        [F:CCE]DIE = YDIE
        [F:CCE]CCE = YID
        [F:CCE]DES = left$(YPRJDES,30)
        [F:CCE]FCY = YESTCPYGRP
        [F:CCE]FRW = 0
        [F:CCE]BUDTRK = 0
        [F:CCE]IPT = 2
        [F:CCE]ENAFLG = YJOBACT

        Trbegin [F:CCE]

        Write [F:CCE]

        If fstat = 0

          Commit

          Call MAJTEXTRA(YPRJDES,"CACCE","DESTRA",YDIE,YID) From ATEXTRA
          Call MAJTEXTRA(left$(YPRJDES,12),"CACCE","SHOTRA",YDIE,YID) From ATEXTRA

          YJOBCOD = YID

          If YOBJ = "YSTA"

            Read [F:YSTG2]YSTG0 = YID

            If fstat=0
              [F:YSTG2]YJOBCOD = YID
              Rewrite [F:YSTG2]
            Endif

          Elsif YOBJ = "YGSC"

            Read [F:YGGN2]YGGN0 = YID

            If fstat=0
              [F:YGGN2]YJOBCOD = YID
              Rewrite [F:YGGN2]
            Endif

          Elsif YOBJ = "YLDP"

            Read [F:YLDP2]YLDP0 = YID

            If fstat=0
              [F:YLDP2]YJOBCOD = YID
              Rewrite [F:YLDP2]
            Endif

          Endif

        Else
          Rollback
          GMESSAGE = mess(11,6255,1)
          GOK = 0
          GERR = 1
        Endif

      Endif

    Else

      #Check if dimension exists
      Read [F:CCE]CCE0 = YDIE;YJOBCOD

      If fstat=0

        If [F:CCE]ENAFLG <> YJOBACT
          Trbegin [F:CCE]
          [F:CCE]ENAFLG = YJOBACT
          Rewrite [F:CCE]
          If !fstat
            Commit
          Else
            Rollback
            If GMESSAGE = AVOID.ACHAR Then
              GMESSAGE = mess(7,6255,1)       # Activate flag of Job code Dimesnion was different System could not update that
              Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
              GERR = 2
            Endif
          Endif
        Endif

        If [F:CCE]DES <> left$(YPRJDES,30)
          Trbegin [F:CCE]
          [F:CCE]DES = left$(YPRJDES,30)
          Rewrite [F:CCE]

          If !fstat

            Call MAJTEXTRA(YPRJDES,"CACCE","DESTRA",YDIE,YID) From ATEXTRA
            Call MAJTEXTRA(left$(YPRJDES,12),"CACCE","SHOTRA",YDIE,YID) From ATEXTRA

            Commit
          Else
            Rollback
            If GMESSAGE = AVOID.ACHAR Then
              GMESSAGE = mess(9,6255,1)       # Description of Job code Dimesnion was different and system updated dimension.
              Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
              GERR = 2
            Endif
          Endif
        Endif

      Else
        If GMESSAGE = AVOID.ACHAR Then
          GMESSAGE = mess(10,6255,1)       # Job code does not exists on Dimenstion list.
          Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
          GERR = 1
        Endif
      Endif

    Endif

  Else
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = mess(2,6255,1)       # Dimension type has not configured on General parameter.
      Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
      GERR = 1
    Endif
  Endif

  # Add Land owner into Estate and group company
  If YOBJ = "YLDP"

    Look [F:YFGR]FGR0 = YESTCPYGRP;YLANDOWN
    If fstat and YESTCPYGRP <> "" and YLANDOWN <> ""   # Record does not exist and Group company and Site is exist
      Trbegin [F:YFGR]
        [F:YFGR]CPY = YESTCPYGRP
        [F:YFGR]FCY = YLANDOWN
      Write [F:YFGR]
      If !fstat
        Commit
      Else
        Rollback
        If GMESSAGE = AVOID.ACHAR Then
          GMESSAGE = mess(19,6255,1)       # System could not link Land owner to Estate group company. Please maintain that manually
          Call ECR_TRACE(GMESSAGE,0) From GESECRAN #Write to log file
          GERR = 2
        Endif
      Endif

    Endif

  Endif

Return




