#<AdxTL>@(#)0.0.0.0 $Revision$
#######################################################################################################
# Script            : YLANDPRJ                                                                        #
# Creation date     : 06/03/2019                                                                      #
# Version           : 1.0.0                                                                           #
# Authors (Company) : Jose Ribeiro (Leverage)                                                         #
# Module            : Land Development                                                                #
# ----------------------------------------------------------------------------------------------------#
# Description       : Land Development - Create Projects for Stage, Land Purchase, and General Scheme #
# ----------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-79                                #
# JIRA Issue        : DFCX1-394                                                                       #
# Evolutions        :                                                                                 #
#######################################################################################################
Gosub EXEC
End


$ACTION
Case ACTION
  When "EXEC"      :  Gosub EXEC
  When Default
Endcase
Return


#------------------------------------------------------------------------------------#
#Execute script
#------------------------------------------------------------------------------------#
$EXEC

If func AFNC.ACTIV("YLAND")

  #Open Tables in order to Set the instance before AINSERT
  If !clalev([F:YOPP])    : Local File OPPOR [YOPP]       : Endif
  If !clalev([F:YOPPPJM]) : Local File OPPORPJM [YOPPPJM] : Endif
  If !clalev([F:YGGN2])   : Local File YGSCGEN [YGGN2]    : Endif
  If !clalev([F:YLDP2])   : Local File YLNDPUR [YLDP2]    : Endif
  If !clalev([F:YSTG2])   : Local File YSTAGE [YSTG2]     : Endif
  If !clalev([F:YFCY])    : Local File FACILITY [F:YFCY]  : Endif

  #Get records to create Projects for Stages
  Local Char YOBJ(5)
  Local Char REQUEST(255)(10)

  REQUEST(0) = "SELECT t0.YESTID_0 [YESTID], t0.YSTADES_0 [YPRJDES], t0.YSTAID_0 [YID], t0.YSTATYP_0 [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YSTAID_0 [YSRC], "
  REQUEST(1) = "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YDEVFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YSTAID_0 [YOPPNUM], 'DV' [YTYPE] "
  REQUEST(2) = "FROM YSTAGE t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YDEVFCY_0 = t2.FCY_0 "
  REQUEST(3) = "WHERE t0.YDEVPJMNBR_0 = '' "
  REQUEST(4) = "UNION "
  REQUEST(5) = "SELECT t0.YESTID_0 [YESTID], t0.YSTADES_0 [YPRJDES], t0.YSTAID_0 [YID], t0.YSTATYP_0 [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YSTAID_0 [YSRC], "
  REQUEST(6) = "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YPJTFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YSTAID_0 [YOPPNUM], 'PM' [YTYPE] "
  REQUEST(7) = "FROM YSTAGE t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YPJTFCY_0 = t2.FCY_0 "
  REQUEST(8) = "WHERE t0.YPRJMANNBR_0 = '' "

  For (Integer YESTID, Char YPRJDES(30), Char YID(9), Char YPRJTYP(15), Char YJOBCOD(15), Char YSRC(9), Char YACCCOD(10), Char YFCY(5), Char YOPPNUM(30), Char YTYPE(2)) From "5" Sql REQUEST As [YSQL]
    YOBJ = "YSTA"
    #Gosub CREATE_PROJECT
  Next

  #Get records to create Projects for General Schemas
  Local Char REQUEST(255)(10)

  REQUEST(0) = "SELECT t0.YESTID_0 [YESTID], t0.YDES_0 [YPRJDES], t0.YGSCID_0 [YID], 'GS' [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YGSCID_0 [YSRC], "
  REQUEST(1) = "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YDEVFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YGSCID_0 [YOPPNUM], 'DV' [YTYPE] "
  REQUEST(2) = "FROM YGSCGEN t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YDEVFCY_0 = t2.FCY_0 "
  REQUEST(3) = "WHERE t0.YDEVPJMNBR_0 = '' "
  REQUEST(4) = "UNION "
  REQUEST(5) = "SELECT t0.YESTID_0 [YESTID], t0.YDES_0 [YPRJDES], t0.YGSCID_0 [YID], 'GS' [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YGSCID_0 [YSRC], "
  REQUEST(6) = "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t1.YPJTFCY_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YGSCID_0 [YOPPNUM], 'PM' [YTYPE] "
  REQUEST(7) = "FROM YGSCGEN t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t1.YPJTFCY_0 = t2.FCY_0 "
  REQUEST(8) = "WHERE t0.YPRJPJMNBR_0 = '' "

  For (Integer YESTID, Char YPRJDES(30), Char YID(9), Char YPRJTYP(15), Char YJOBCOD(15), Char YSRC(9), Char YACCCOD(10), Char YFCY(5), Char YOPPNUM(30), Char YTYPE(2)) From "5" Sql REQUEST As [YSQL]
    YOBJ = "YGSC"
    #Gosub CREATE_PROJECT
  Next

  #Get records to create Projects for Land Developments
  Local Char REQUEST(255)(10)

  REQUEST(0) = "SELECT t0.YESTID_0 [YESTID], t0.YDES_0 [YPRJDES], t0.YLNDPURID_0 [YID], 'LP' [YPRJTYP], t0.YJOBCOD_0 [YJOBCOD], t0.YLNDPURID_0 [YSRC], "
  REQUEST(1) = "CASE WHEN t0.YACCESS_0 = '' THEN t1.YACCESS_0 ELSE t0.YACCESS_0 END [YACCCOD], t0.YLNDOWN_0 [YFCY], t2.LEGCPY_0 + '-' + t0.YLNDPURID_0 [YOPPNUM], 'LO' [YTYPE] "
  REQUEST(2) = "FROM YLNDPUR t0 JOIN YESTA t1 ON t0.YESTID_0 = t1.YESTID_0 JOIN FACILITY t2 ON t0.YLNDOWN_0 = t2.FCY_0 "
  REQUEST(3) = "WHERE t0.YLNDPJMNBR_0 = '' "

  For (Integer YESTID, Char YPRJDES(30), Char YID(9), Char YPRJTYP(15), Char YJOBCOD(15), Char YSRC(9), Char YACCCOD(10), Char YFCY(5), Char YOPPNUM(30), Char YTYPE(2)) From "5" Sql REQUEST As [YSQL]
    YOBJ = "YLDP"
    #Gosub CREATE_PROJECT
  Next

  #Close tables
  If clalev([F:YOPP])     : Close Local File [F:YOPP]     : Endif
  If clalev([F:YOPPPJM])  : Close Local File [F:YOPPPJM]  : Endif
  If clalev([F:YGGN2])    : Close Local File [F:YGGN2]    : Endif
  If clalev([F:YLDP2])    : Close Local File [F:YLDP2]    : Endif
  If clalev([F:YSTG2])    : Close Local File [F:YSTG2]    : Endif
  If clalev([F:YFCY])     : Close Local File [F:YFCY]     : Endif

Endif

Return


#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(YOPP_INSTANCE)

  Variable Instance YOPP_INSTANCE Using C_OPPOR

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(YOPP_INSTANCE, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK

End


#------------------------------------------------------------------------------------#
#Create PJM Projects
#------------------------------------------------------------------------------------#
$CREATE_PROJECT

  Local Integer MY_STATUS
  Local Char YOPPNUM(30), YCUR(5), YPRJDES(250), YID(9), YPRJTYP(15), YJOBCOD(15), YSRC(15), YACCCOD(10)

  YPRJDES = [F:YSQL]YPRJDES
  YID     = [F:YSQL]YID
  YPRJTYP = [F:YSQL]YPRJTYP
  YJOBCOD = [F:YSQL]YJOBCOD
  YSRC    = [F:YSQL]YSRC
  YACCCOD = [F:YSQL]YACCCOD
  YOPPNUM = [F:YSQL]YOPPNUM

  If GDEVISE <> ""  : YCUR = GDEVISE  : Else  : YCUR = "AUD"  : Endif

  If YOPPNUM <> ""

    Look [F:YOPP]OPP0 = YOPPNUM

    If fstat #Doesn't exist, create project

      Global Instance YPJM Using C_OPPOR
      If YPJM <> null Then FreeGroup YPJM Endif
      YPJM = NewInstance C_OPPOR AllocGroup null

      MY_STATUS = fmet YPJM.AINIT

      If ([L]MY_STATUS >= [V]CST_AERROR)

        Call RECOVERS_ERROR_IN_CLASSIC(YPJM)

        If GMESSAGE = AVOID.ACHAR Then
          GMESSAGE = "Project initlization failed"
          Return
        Endif

      Endif

      Read [F:YFCY]FCY0 = [F:YSQL]YFCY

      YPJM.TCHTOREAD = "PJM"
      YPJM.TCHIMPORT = 2
      YPJM.TCHMODULE = 1
      YPJM.CPY = [F:YFCY]LEGCPY
      YPJM.SALFCY = [F:YFCY]FCY
      YPJM.OPPNUM = YOPPNUM
      YPJM.TCHISPJM = 2
      YPJM.CUR = YCUR
      YPJM.OPPTYP = YPRJTYP
      YPJM.CHGTYP = 1
      YPJM.OPPCLO = 1
      YPJM.PIMPL.PIMDESAXX = YPRJDES
      YPJM.PIMPL.PIMDESAX1 = YPRJDES
      YPJM.PIMPL.OPPSTATE = 1
      YPJM.PIMPL.PIMTYP = 2
      YPJM.PIMPL.PIMSTA = 1
      YPJM.YJOBCOD = YJOBCOD
      YPJM.YGUID = num$(getUuid)
      YPJM.YSRC = YOBJ
      YPJM.YSRCNUM = YSRC

#        YPJM.PJM.OPPNUM = YOPPNUM
#        YPJM.PJM.OPPSTATE = 2
#        YPJM.PJM.CUROPP = YCUR
#        YPJM.PJM.OPEDEFFCY = [F:YFCY]FCY
#        YPJM.PJM.TASBUDAUT = 1
#        YPJM.PJM.OPPIMPT = 1
#        YPJM.PJM.OPPMOD = 1

#        YPJM.OPPORPJM.OPPNUM = YOPPNUM
#        YPJM.OPPORPJM.OPPSTATE = 2
#        YPJM.OPPORPJM.CUROPP = YCUR
#        YPJM.OPPORPJM.OPEDEFFCY = [F:YFCY]FCY
#        YPJM.OPPORPJM.TASBUDAUT = 1
#        YPJM.OPPORPJM.OPPIMPT = 1
#        YPJM.OPPORPJM.OPPMOD = 1

#        MY_STATUS = fmet YPJM.ADDLINE("PJM", [V]CST_ALASTPOS)
#
#        If [L]MY_STATUS = [V]CST_AOK Then
#          YPJM.PJM(1).OPPNUM = YOPPNUM
#          YPJM.PJM(1).OPPSTATE = 2
#
#          YPJM.PJM.PPNUM = YOPPNUM
#          YPJM.PJM.OPPSTATE = 2
#          YPJM.PJM.CUROPP = YCUR
#          YPJM.PJM.OPEDEFFCY = [F:YFCY]FCY
#          YPJM.PJM.TASBUDAUT = 1
#          YPJM.PJM.OPPIMPT = 1
#          YPJM.PJM.OPPMOD = 1
#        Else
#          Infbox ("Issue on PJM Addline")
#        Endif

      MY_STATUS = fmet YPJM.AINSERT()
      If [L]MY_STATUS = [V]CST_AOK
        # This section need to update and import by class
        Trbegin [YOPPPJM]
          [F:YOPPPJM]OPPNUM = YOPPNUM
          [F:YOPPPJM]OPPSTATE = 2
          [F:YOPPPJM]CUROPP = YCUR
          [F:YOPPPJM]OPEDEFFCY = [F:YFCY]FCY
          [F:YOPPPJM]TASBUDAUT = 1
          [F:YOPPPJM]OPPIMPT = 1
          [F:YOPPPJM]OPPMOD = 1
          [F:YOPPPJM]DIE(0) = [F:YFCY]DIE(0)
          [F:YOPPPJM]DIE(1) = [F:YFCY]DIE(1)
          [F:YOPPPJM]DIE(2) = [F:YFCY]DIE(2)
          [F:YOPPPJM]DIE(3) = [F:YFCY]DIE(3)
          [F:YOPPPJM]DIE(4) = [F:YFCY]DIE(4)
          [F:YOPPPJM]DIE(5) = [F:YFCY]DIE(5)
          [F:YOPPPJM]DIE(6) = [F:YFCY]DIE(6)
          [F:YOPPPJM]DIE(7) = [F:YFCY]DIE(7)
          [F:YOPPPJM]DIE(8) = [F:YFCY]DIE(8)
          [F:YOPPPJM]DIE(9) = [F:YFCY]DIE(9)
          [F:YOPPPJM]DIE(10) = [F:YFCY]DIE(10)
          [F:YOPPPJM]DIE(11) = [F:YFCY]DIE(11)
          [F:YOPPPJM]DIE(12) = [F:YFCY]DIE(12)
          [F:YOPPPJM]DIE(13) = [F:YFCY]DIE(13)
          [F:YOPPPJM]DIE(14) = [F:YFCY]DIE(14)
          [F:YOPPPJM]DIE(15) = [F:YFCY]DIE(15)
          [F:YOPPPJM]DIE(16) = [F:YFCY]DIE(16)
          [F:YOPPPJM]DIE(17) = [F:YFCY]DIE(17)
          [F:YOPPPJM]DIE(18) = [F:YFCY]DIE(18)
          [F:YOPPPJM]DIE(19) = [F:YFCY]DIE(19)
          For I = 0 To 19
            If evalue("[F:YFCY]DIE("+num$(I)+")='"+func AFNC.PARAM ("YDEVDTY","")+"'")
              Assign ("[F:YOPPPJM]CCE("+num$(I)+")") With YJOBCOD
            Endif
          Next I
        Write [F:YOPPPJM]

        If !fstat
          Commit
        Else
          Rollback
          GMESSAGE = mess(16,6255,1)       # Issue on Project creation
        Endif
      Else
        GMESSAGE = mess(16,6255,1)       # Issue on Project creation
      Endif

      If MY_STATUS = [V]CST_AERROR Then
      # Call RECOVERS_ERROR_IN_CLASSIC(GZINSYHOU)
      # GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJMCOP)
      #GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJMCOP)
        Infbox "AERROR"-num$(MY_STATUS)
      Endif

      FreeGroup YPJM
    Else
      #Project code already exist and system just linked that to entity
      GMESSAGE = YOPPNUM - mess(18,6255,1)
    Endif   #Project exist

    #   Update Project code on Screen
    Look [F:YOPP]OPP0 = YOPPNUM

    If !fstat
      Trbegin [YOPP]
      If    YOBJ = "YSTA"

        Read [F:YSTG2]YSTG0 = YID

        If    [YSQL]YTYPE = "DV"

          [F:YSTG2]YDEVNBRFLG = 2       #   PJM (DEV) activation flag
          [F:YSTG2]YDEVPJMNBR = YOPPNUM

        Elsif [YSQL]YTYPE = "PM"

          [F:YSTG2]YPRJMANFLG = 2       #   PJM (PM) activation flag
          [F:YSTG2]YPRJMANNBR = YOPPNUM

        Endif

        Rewrite [F:YSTG2]

      Elsif YOBJ = "YGSC"

        Read [F:YGGN2]YGGN0 = YID

        If [YSQL]YTYPE = "DV"

          [F:YGGN2]YDEVFLG = 2       #   PJM (DEV) activation flag
          [F:YGGN2]YDEVPJMNBR = YOPPNUM

        Elsif [YSQL]YTYPE = "PM"

          [F:YGGN2]YPRJFLG = 2       #   PJM (PM) activation flag
          [F:YGGN2]YPRJPJMNBR = YOPPNUM

        Endif

        Rewrite [F:YGGN2]

      Elsif YOBJ = "YLDP"

        Read [F:YLDP2]YLDP0 = YID

        If [YSQL]YTYPE = "LO"
          [F:YLDP2]YPJMFLG = 2       #   PJM (PM) activation flag
          [F:YLDP2]YLNDPJMNBR = YOPPNUM
        Endif

        Rewrite [F:YLDP2]

      Endif

      If !fstat
        Commit
      Else
        Rollback
      Endif
    Endif           #   Check project created properly

  Else
    GMESSAGE = mess(17,6255,1)       # There is an issue on Project code generation
  Endif     # YOPPNUM <> ""

Return

