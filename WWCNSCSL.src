#<AdxTL>@(#)%I%
# Supervisor
# Inquiry CSL

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [05/03/2019]
A_HEURE = "13:33:50"
A_USER  = "MAJID"
A_STAMP = "20190305133350"
Return

$DEFAUT
Default File [ITM]
Return

$OUVFIC
Local File ITMMASTER [ITM]
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(3161,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSCSLSTD"
PROGSPE    = "CNSCSLSPE"
CBOITE     = "DCNSCSL"
BOITE      = "FCNSCSL"
NOMMSK(0)  = "CONSCSL1"
ABMSK(0)   = "CSL1"
NOMMSK(1)  = "CONSCSL2"
ABMSK(1)   = "CSL2"
CMEMO      = "csv"
CNOMMSK    = "CRITCSL"
CABMSK     = "CCSL"
NOMFIC     = "ITMMASTER"
ABFIC      = "ITM"
CODMSKDEF  = "STD"
MAGNETO    = 2
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = "ITM0"
NBCMP = 1
CLECMP(0) = "ITMREF"
CLEMSK(0) = "ITMREF"
Return

$OUVRE
If clalev([F:ITM])=0 : Local File ITMMASTER    [ITM] : Endif
If clalev([F:CPY])=0 : Local File COMPANY      [CPY] : Endif
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:ITM])=0 : Local File ITMMASTER    [ITM] : Endif
If clalev([F:SQH])=0 : Local File SQUOTE       [SQH] : Endif
If clalev([F:SQD])=0 : Local File SQUOTED      [SQD] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CCSL]
 When  0 : Local Mask =NOMMSK(0) [CSL1]
 When  1 : Local Mask =NOMMSK(1) [CSL2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CCSL]
 When  0 : Grizo [CSL1]
 When  1 : Grizo [CSL2]
Endcase
Return

$GRISE_CLE
Case MA
 When -1 : If dim([M:CCSL]ITMREF)>0 : Grizo [CCSL]ITMREF : Endif
 When  0 : If dim([M:CSL1]ITMREF)>0 : Grizo [CSL1]ITMREF : Endif
Endcase
Return

$GRISE_CRIT
If dim([M:CCSL]CPY)>0
 Grizo [CCSL]CPY
Endif
If dim([M:CCSL]SALFCY)>0
 Grizo [CCSL]SALFCY
Endif
If dim([M:CCSL]BPCORD)>0
 Grizo [CCSL]BPCORD
Endif
If dim([M:CCSL]SQHTYP)>0
 Grizo [CCSL]SQHTYP
Endif
If dim([M:CCSL]ITMREF)>0
 Grizo [CCSL]ITMREF
Endif
If dim([M:CCSL]PJTDEB)>0
 Grizo [CCSL]PJTDEB
Endif
If dim([M:CCSL]PJTFIN)>0
 Grizo [CCSL]PJTFIN
Endif
If dim([M:CCSL]QUODATDEB)>0
 Grizo [CCSL]QUODATDEB
Endif
If dim([M:CCSL]QUODATFIN)>0
 Grizo [CCSL]QUODATFIN
Endif
If dim([M:CCSL]QUOSTAO)>0
 Grizo [CCSL]QUOSTAO
Endif
If dim([M:CCSL]QUOSTAN)>0
 Grizo [CCSL]QUOSTAN
Endif
If dim([M:CCSL]VLYSTAO)>0
 Grizo [CCSL]VLYSTAO
Endif
If dim([M:CCSL]VLYSTAN)>0
 Grizo [CCSL]VLYSTAN
Endif
If dim([M:CCSL]APPFLGO)>0
 Grizo [CCSL]APPFLGO
Endif
If dim([M:CCSL]APPFLGN)>0
 Grizo [CCSL]APPFLGN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CCSL])>0 : Close Local Mask [CCSL] : Endif
 When  0 : If clalev([M:CSL1])>0 : Close Local Mask [CSL1] : Endif
 When  1 : If clalev([M:CSL2])>0 : Close Local Mask [CSL2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CCSL]
 When  0 : Default Mask [CSL1]
 When  1 : Default Mask [CSL2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CCSL]
 When  0 : Raz [M:CSL1]
 When  1 : Raz [M:CSL2]
Endcase
Return

$CRITENT
If dim([M:CCSL]CPY)>0 & dim([M:CSL1]CPY)>0
 [M:CCSL]CPY = [M:CSL1]CPY
Endif
If dim([M:CCSL]SALFCY)>0 & dim([M:CSL1]SALFCY)>0
 [M:CCSL]SALFCY = [M:CSL1]SALFCY
Endif
If dim([M:CCSL]BPCORD)>0 & dim([M:CSL1]BPCORD)>0
 [M:CCSL]BPCORD = [M:CSL1]BPCORD
Endif
If dim([M:CCSL]SQHTYP)>0 & dim([M:CSL1]SQHTYP)>0
 [M:CCSL]SQHTYP = [M:CSL1]SQHTYP
Endif
If dim([M:CCSL]ITMREF)>0 & dim([M:CSL1]ITMREF)>0
 [M:CCSL]ITMREF = [M:CSL1]ITMREF
Endif
If dim([M:CCSL]PJTDEB)>0 & dim([M:CSL1]PJTDEB)>0
 [M:CCSL]PJTDEB = [M:CSL1]PJTDEB
Endif
If dim([M:CCSL]PJTFIN)>0 & dim([M:CSL1]PJTFIN)>0
 [M:CCSL]PJTFIN = [M:CSL1]PJTFIN
Endif
If dim([M:CCSL]QUODATDEB)>0 & dim([M:CSL1]QUODATDEB)>0
 [M:CCSL]QUODATDEB = [M:CSL1]QUODATDEB
Endif
If dim([M:CCSL]QUODATFIN)>0 & dim([M:CSL1]QUODATFIN)>0
 [M:CCSL]QUODATFIN = [M:CSL1]QUODATFIN
Endif
If dim([M:CCSL]QUOSTAO)>0 & dim([M:CSL1]QUOSTAO)>0
 [M:CCSL]QUOSTAO = [M:CSL1]QUOSTAO
Endif
If dim([M:CCSL]QUOSTAN)>0 & dim([M:CSL1]QUOSTAN)>0
 [M:CCSL]QUOSTAN = [M:CSL1]QUOSTAN
Endif
If dim([M:CCSL]VLYSTAO)>0 & dim([M:CSL1]VLYSTAO)>0
 [M:CCSL]VLYSTAO = [M:CSL1]VLYSTAO
Endif
If dim([M:CCSL]VLYSTAN)>0 & dim([M:CSL1]VLYSTAN)>0
 [M:CCSL]VLYSTAN = [M:CSL1]VLYSTAN
Endif
If dim([M:CCSL]APPFLGO)>0 & dim([M:CSL1]APPFLGO)>0
 [M:CCSL]APPFLGO = [M:CSL1]APPFLGO
Endif
If dim([M:CCSL]APPFLGN)>0 & dim([M:CSL1]APPFLGN)>0
 [M:CCSL]APPFLGN = [M:CSL1]APPFLGN
Endif
Return

$ENTCRIT
If dim([M:CCSL]CPY)>0 & dim([M:CSL1]CPY)>0
[M:CSL1]CPY = [M:CCSL]CPY
Endif
If dim([M:CCSL]SALFCY)>0 & dim([M:CSL1]SALFCY)>0
[M:CSL1]SALFCY = [M:CCSL]SALFCY
Endif
If dim([M:CCSL]BPCORD)>0 & dim([M:CSL1]BPCORD)>0
[M:CSL1]BPCORD = [M:CCSL]BPCORD
Endif
If dim([M:CCSL]SQHTYP)>0 & dim([M:CSL1]SQHTYP)>0
[M:CSL1]SQHTYP = [M:CCSL]SQHTYP
Endif
If dim([M:CCSL]ITMREF)>0 & dim([M:CSL1]ITMREF)>0
[M:CSL1]ITMREF = [M:CCSL]ITMREF
Endif
If dim([M:CCSL]PJTDEB)>0 & dim([M:CSL1]PJTDEB)>0
[M:CSL1]PJTDEB = [M:CCSL]PJTDEB
Endif
If dim([M:CCSL]PJTFIN)>0 & dim([M:CSL1]PJTFIN)>0
[M:CSL1]PJTFIN = [M:CCSL]PJTFIN
Endif
If dim([M:CCSL]QUODATDEB)>0 & dim([M:CSL1]QUODATDEB)>0
[M:CSL1]QUODATDEB = [M:CCSL]QUODATDEB
Endif
If dim([M:CCSL]QUODATFIN)>0 & dim([M:CSL1]QUODATFIN)>0
[M:CSL1]QUODATFIN = [M:CCSL]QUODATFIN
Endif
If dim([M:CCSL]QUOSTAO)>0 & dim([M:CSL1]QUOSTAO)>0
[M:CSL1]QUOSTAO = [M:CCSL]QUOSTAO
Endif
If dim([M:CCSL]QUOSTAN)>0 & dim([M:CSL1]QUOSTAN)>0
[M:CSL1]QUOSTAN = [M:CCSL]QUOSTAN
Endif
If dim([M:CCSL]VLYSTAO)>0 & dim([M:CSL1]VLYSTAO)>0
[M:CSL1]VLYSTAO = [M:CCSL]VLYSTAO
Endif
If dim([M:CCSL]VLYSTAN)>0 & dim([M:CSL1]VLYSTAN)>0
[M:CSL1]VLYSTAN = [M:CCSL]VLYSTAN
Endif
If dim([M:CCSL]APPFLGO)>0 & dim([M:CSL1]APPFLGO)>0
[M:CSL1]APPFLGO = [M:CCSL]APPFLGO
Endif
If dim([M:CCSL]APPFLGN)>0 & dim([M:CSL1]APPFLGN)>0
[M:CSL1]APPFLGN = [M:CCSL]APPFLGN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "TRI" : CRITAFF2(1) = ""
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSCSL2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "CSL"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M]SQHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("SQH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "CSL"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M]SOHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("SOH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "CSL"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("SQH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M]SQHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M]SQDLIN(nolign-1)),"~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M]SQHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSCSL2"
 When "B2"
  Onerrgo RIEN
  Assign "[M]SOHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSCSL2"
 When "B3"
  Onerrgo RIEN
  Assign "[M]SQHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M]SQDLIN(nolign-1)" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Onerrgo
  Call B3_NBLIG From ="W1CONSCSL2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


