#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule SDELIVERY

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".SDELIVERYD" : If clalev([F:SDD])=0 : Local File =OUVTAB [SDD] : Endif
OUVTAB = GDOSSIER+".SDELIVERY" : If clalev([F:SDH])=0 : Local File =OUVTAB [SDH] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [SDD]"
Link [SDD] With
& [SDH]SDH0 = [F:SDD]SDHNUM,
& [CPY]CPY0 = [F:SDH]CPY
& As [LNK_]
& Where [F :SDH]CFMFLG=2
& Order By Key CLE = [SDD]SDHNUM;[SDD]SDDLIN
FILTRE = ""
Return

$FERME
If clalev([F:SDD]) : Close local File [SDD] : Endif
If clalev([F:SDH]) : Close local File [SDH] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "SDHNUM"
DTYP(1) =  7
DCLE(2) = "SDDLIN"
DTYP(2) =  3
Return

$CHARGE_CLE
If dim([F:AAA_]SDHNUM)>0
 [F:AAA_]SDHNUM = [F:SDD]SDHNUM
Endif
If dim([F:AAA_]SDDLIN)>0
 [F:AAA_]SDDLIN = [F:SDD]SDDLIN
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]SDHNUM=[F:SDD]SDHNUM"
Append PFLT, " & [F:AAA_]SDDLIN=[F:SDD]SDDLIN"

End

$MAJFLD
### SDHNUM
[L]FLD="SDHNUM"
[L]FORMULE='[F:SDD]SDHNUM'
If dim([F:AAA_]SDHNUM)>0
 [F:AAA_]SDHNUM = [F:SDD]SDHNUM
Endif

### SDDLIN
[L]FLD="SDDLIN"
[L]FORMULE='[F:SDD]SDDLIN'
If dim([F:AAA_]SDDLIN)>0
 [F:AAA_]SDDLIN = [F:SDD]SDDLIN
Endif

### SDHCAT
[L]FLD="SDHCAT"
[L]FORMULE='[F:SDH]SDHCAT'
If dim([F:AAA_]SDHCAT)>0
 [F:AAA_]SDHCAT = [F:SDH]SDHCAT
Endif

### LND
[L]FLD="LND"
[L]FORMULE='[F:SDH]LND'
If dim([F:AAA_]LND)>0
 [F:AAA_]LND = [F:SDH]LND
Endif

### SHIDAT
[L]FLD="SHIDAT"
[L]FORMULE='[F:SDH]SHIDAT'
If dim([F:AAA_]SHIDAT)>0
 [F:AAA_]SHIDAT = [F:SDH]SHIDAT
Endif

### DAYLTI
[L]FLD="DAYLTI"
[L]FORMULE='[F:SDH]DAYLTI'
If dim([F:AAA_]DAYLTI)>0
 [F:AAA_]DAYLTI = [F:SDH]DAYLTI
Endif

### LNDRTNDAT
[L]FLD="LNDRTNDAT"
[L]FORMULE='[F:SDH]LNDRTNDAT'
If dim([F:AAA_]LNDRTNDAT)>0
 [F:AAA_]LNDRTNDAT = [F:SDH]LNDRTNDAT
Endif

### INVFLG
[L]FLD="INVFLG"
[L]FORMULE='[F:SDH]INVFLG'
If dim([F:AAA_]INVFLG)>0
 [F:AAA_]INVFLG = [F:SDH]INVFLG
Endif

### MDL
[L]FLD="MDL"
[L]FORMULE='[F:SDH]MDL'
If dim([F:AAA_]MDL)>0
 [F:AAA_]MDL = [F:SDH]MDL
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:SDH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:SDH]EECICT
Endif

### EECSCH
[L]FLD="EECSCH"
[L]FORMULE='[F:SDH]EECSCH'
If dim([F:AAA_]EECSCH)>0
 [F:AAA_]EECSCH = [F:SDH]EECSCH
Endif

### EECSCH_LEG
[L]FLD="EECSCH_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_EECSCH([F:AAA_]EECSCH,[F:CPY]LEG)'
If dim([F:AAA_]EECSCH_LEG)>0
 [F:AAA_]EECSCH_LEG = func TRTX3BITC.GETLEG_EECSCH([F:AAA_]EECSCH,[F:CPY]LEG)
Endif

### EECNAT
[L]FLD="EECNAT"
[L]FORMULE='[F:SDH]EECNAT'
If dim([F:AAA_]EECNAT)>0
 [F:AAA_]EECNAT = [F:SDH]EECNAT
Endif

### EECNAT_LEG
[L]FLD="EECNAT_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_EECNAT([F:AAA_]EECNAT,[F:CPY]LEG)'
If dim([F:AAA_]EECNAT_LEG)>0
 [F:AAA_]EECNAT_LEG = func TRTX3BITC.GETLEG_EECNAT([F:AAA_]EECNAT,[F:CPY]LEG)
Endif

### BPTNUM
[L]FLD="BPTNUM"
[L]FORMULE='[F:SDH]BPTNUM'
If dim([F:AAA_]BPTNUM)>0
 [F:AAA_]BPTNUM = [F:SDH]BPTNUM
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:SDH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:SDH]FFWNUM
Endif

### PCK
[L]FLD="PCK"
[L]FORMULE='[F:SDD]PCK'
If dim([F:AAA_]PCK)>0
 [F:AAA_]PCK = [F:SDD]PCK
Endif

### PCKCAP
[L]FLD="PCKCAP"
[L]FORMULE='[F:SDD]PCKCAP'
If dim([F:AAA_]PCKCAP)>0
 [F:AAA_]PCKCAP = [F:SDD]PCKCAP
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:SDH]VACBPR'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:SDH]VACBPR
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### VAT
[L]FLD="VAT"
[L]FORMULE='[F:SDD]VAT(0)'
If dim([F:AAA_]VAT)>0
 [F:AAA_]VAT = [F:SDD]VAT(0)
Endif

### VAT_LEG
[L]FLD="VAT_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VAT([F:AAA_]VAT,[F:CPY]LEG)'
If dim([F:AAA_]VAT_LEG)>0
 [F:AAA_]VAT_LEG = func TRTX3BITC.GETLEG_VAT([F:AAA_]VAT,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:SDH]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:SDH]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:SDH]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:SDH]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### ITMDES1
[L]FLD="ITMDES1"
[L]FORMULE='[F:SDD]ITMDES1'
If dim([F:AAA_]ITMDES1)>0
 [F:AAA_]ITMDES1 = [F:SDD]ITMDES1
Endif

### LINTYP
[L]FLD="LINTYP"
[L]FORMULE='[F:SDD]LINTYP'
If dim([F:AAA_]LINTYP)>0
 [F:AAA_]LINTYP = [F:SDD]LINTYP
Endif

### FOCFLG
[L]FLD="FOCFLG"
[L]FORMULE='[F:SDD]FOCFLG'
If dim([F:AAA_]FOCFLG)>0
 [F:AAA_]FOCFLG = [F:SDD]FOCFLG
Endif

### GROPRI
[L]FLD="GROPRI"
[L]FORMULE='[F:SDD]GROPRI'
If dim([F:AAA_]GROPRI)>0
 [F:AAA_]GROPRI = [F:SDD]GROPRI
Endif

### NETPRI
[L]FLD="NETPRI"
[L]FORMULE='[F:SDD]NETPRI'
If dim([F:AAA_]NETPRI)>0
 [F:AAA_]NETPRI = [F:SDD]NETPRI
Endif

### CPRPRI
[L]FLD="CPRPRI"
[L]FORMULE='[F:SDD]CPRPRI'
If dim([F:AAA_]CPRPRI)>0
 [F:AAA_]CPRPRI = [F:SDD]CPRPRI
Endif

### PFM
[L]FLD="PFM"
[L]FORMULE='[F:SDD]PFM'
If dim([F:AAA_]PFM)>0
 [F:AAA_]PFM = [F:SDD]PFM
Endif

### SAU
[L]FLD="SAU"
[L]FORMULE='[F:SDD]SAU'
If dim([F:AAA_]SAU)>0
 [F:AAA_]SAU = [F:SDD]SAU
Endif

### SAUSTUCOE
[L]FLD="SAUSTUCOE"
[L]FORMULE='[F:SDD]SAUSTUCOE'
If dim([F:AAA_]SAUSTUCOE)>0
 [F:AAA_]SAUSTUCOE = [F:SDD]SAUSTUCOE
Endif

### WEU
[L]FLD="WEU"
[L]FORMULE='[F:SDD]WEU'
If dim([F:AAA_]WEU)>0
 [F:AAA_]WEU = [F:SDD]WEU
Endif

### UNTWEI
[L]FLD="UNTWEI"
[L]FORMULE='[F:SDD]UNTWEI'
If dim([F:AAA_]UNTWEI)>0
 [F:AAA_]UNTWEI = [F:SDD]UNTWEI
Endif

### REPRAT1
[L]FLD="REPRAT1"
[L]FORMULE='[F:SDD]REPRAT1'
If dim([F:AAA_]REPRAT1)>0
 [F:AAA_]REPRAT1 = [F:SDD]REPRAT1
Endif

### REPRAT2
[L]FLD="REPRAT2"
[L]FORMULE='[F:SDD]REPRAT2'
If dim([F:AAA_]REPRAT2)>0
 [F:AAA_]REPRAT2 = [F:SDD]REPRAT2
Endif

### BPDNAM
[L]FLD="BPDNAM"
[L]FORMULE='[F:SDH]BPDNAM'
If dim([F:AAA_]BPDNAM)>0
 [F:AAA_]BPDNAM = [F:SDH]BPDNAM
Endif

### CNDNAM
[L]FLD="CNDNAM"
[L]FORMULE='[F:SDH]CNDNAM'
If dim([F:AAA_]CNDNAM)>0
 [F:AAA_]CNDNAM = [F:SDH]CNDNAM
Endif

### BPDPOSCOD
[L]FLD="BPDPOSCOD"
[L]FORMULE='vireblc([F:SDH]BPDPOSCOD,1)'
If dim([F:AAA_]BPDPOSCOD)>0
 [F:AAA_]BPDPOSCOD = vireblc([F:SDH]BPDPOSCOD,1)
Endif

### BPDCTY
[L]FLD="BPDCTY"
[L]FORMULE='[F:SDH]BPDCTY'
If dim([F:AAA_]BPDCTY)>0
 [F:AAA_]BPDCTY = [F:SDH]BPDCTY
Endif

### BPDCRY
[L]FLD="BPDCRY"
[L]FORMULE='[F:SDH]BPDCRY'
If dim([F:AAA_]BPDCRY)>0
 [F:AAA_]BPDCRY = [F:SDH]BPDCRY
Endif

### BPINAM
[L]FLD="BPINAM"
[L]FORMULE='[F:SDH]BPINAM'
If dim([F:AAA_]BPINAM)>0
 [F:AAA_]BPINAM = [F:SDH]BPINAM
Endif

### CNINAM
[L]FLD="CNINAM"
[L]FORMULE='[F:SDH]CNINAM'
If dim([F:AAA_]CNINAM)>0
 [F:AAA_]CNINAM = [F:SDH]CNINAM
Endif

### BPIPOSCOD
[L]FLD="BPIPOSCOD"
[L]FORMULE='vireblc([F:SDH]BPIPOSCOD,1)'
If dim([F:AAA_]BPIPOSCOD)>0
 [F:AAA_]BPIPOSCOD = vireblc([F:SDH]BPIPOSCOD,1)
Endif

### BPICTY
[L]FLD="BPICTY"
[L]FORMULE='[F:SDH]BPICTY'
If dim([F:AAA_]BPICTY)>0
 [F:AAA_]BPICTY = [F:SDH]BPICTY
Endif

### BPICRY
[L]FLD="BPICRY"
[L]FORMULE='[F:SDH]BPICRY'
If dim([F:AAA_]BPICRY)>0
 [F:AAA_]BPICRY = [F:SDH]BPICRY
Endif

### SOHNUM
[L]FLD="SOHNUM"
[L]FORMULE='string$([F:SDD]VCRTYPORI=2,[F:SDD]VCRNUMORI)'
If dim([F:AAA_]SOHNUM)>0
 [F:AAA_]SOHNUM = string$([F:SDD]VCRTYPORI=2,[F:SDD]VCRNUMORI)
Endif

### SOPLIN
[L]FLD="SOPLIN"
[L]FORMULE='val(string$([F:SDD]VCRTYPORI=2,num$([F:SDD]VCRLINORI)))'
If dim([F:AAA_]SOPLIN)>0
 [F:AAA_]SOPLIN = val(string$([F:SDD]VCRTYPORI=2,num$([F:SDD]VCRLINORI)))
Endif

### SOQSEQ
[L]FLD="SOQSEQ"
[L]FORMULE='val(string$([F:SDD]VCRTYPORI=2,num$([F:SDD]VCRSEQORI)))'
If dim([F:AAA_]SOQSEQ)>0
 [F:AAA_]SOQSEQ = val(string$([F:SDD]VCRTYPORI=2,num$([F:SDD]VCRSEQORI)))
Endif

### MFGNUM
[L]FLD="MFGNUM"
[L]FORMULE='string$([F:SDD]VCRTYPORI=10,[F:SDD]VCRNUMORI)'
If dim([F:AAA_]MFGNUM)>0
 [F:AAA_]MFGNUM = string$([F:SDD]VCRTYPORI=10,[F:SDD]VCRNUMORI)
Endif

### MFGLIN
[L]FLD="MFGLIN"
[L]FORMULE='val(string$([F:SDD]VCRTYPORI=10,num$([F:SDD]VCRLINORI)))'
If dim([F:AAA_]MFGLIN)>0
 [F:AAA_]MFGLIN = val(string$([F:SDD]VCRTYPORI=10,num$([F:SDD]VCRLINORI)))
Endif

### SCO
[L]FLD="SCO"
[L]FORMULE='[F:SDH]SCO'
If dim([F:AAA_]SCO)>0
 [F:AAA_]SCO = [F:SDH]SCO
Endif

### SDHTYP
[L]FLD="SDHTYP"
[L]FORMULE='[F:SDH]SDHTYP'
If dim([F:AAA_]SDHTYP)>0
 [F:AAA_]SDHTYP = [F:SDH]SDHTYP
Endif

### SDHTYP_LEG
[L]FLD="SDHTYP_LEG"
[L]FORMULE='func TRTX3BIVEN.GETLEG_SDHTYP([F:AAA_]SDHTYP,[F:CPY]LEG)'
If dim([F:AAA_]SDHTYP_LEG)>0
 [F:AAA_]SDHTYP_LEG = func TRTX3BIVEN.GETLEG_SDHTYP([F:AAA_]SDHTYP,[F:CPY]LEG)
Endif


Return

