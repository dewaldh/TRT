#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales contract-commission type
# Supervisor
## CRUD-CLASSE ## YCMT
# 2018-11-05 04:32:31 857


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSCCOMTYP [YCMT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YCMT") From ASYRCOM : Endif
Local Instance YCMT Using C_YCMT

If !SILENCE : Call TRACE("3 --> New Instance C_YCMT") From ASYRCOM : Endif
YCMT = NewInstance C_YCMT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YCMT_]YCMT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YCMT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YCMT.AREAD([YCMT_]YSLCID,[YCMT_]YCOMMID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YCMT.YSLCID ="-num$(YCMT.YSLCID)) From ASYRCOM
 Call TRACE("YCMT.YCOMMID ="-num$(YCMT.YCOMMID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YCMT.AKEYS)
  Call TRACE("-"-num$(I)-":"-YCMT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YCMT_]
FreeGroup YCMT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YCMT,ACLE,ASTATUS,_ETAG)
Variable Instance YCMT Using C_YCMT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YSLCID(25)
Local Shortint _YCOMMID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSLCID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YCOMMID = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File YSCCOMTYP [YCMT]
Default File [F:YCMT]
Read [F:YCMT]YCMT0 = [L]_YSLCID;[L]_YCOMMID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YCMT]UPDTICK)>0
 [L]_ETAG = num$([F:YCMT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YCMT,ACLE,ASTATUS)
Variable Instance YCMT Using C_YCMT
Value Char ACLE
Variable Integer ASTATUS
Local Char _YSLCID(25)
Local Shortint _YCOMMID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSLCID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YCOMMID = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YCMT.AREAD([L]_YSLCID,[L]_YCOMMID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YCMT,_YSLCID,_YCOMMID,ASTATUS)
Variable Instance YCMT Using C_YCMT
Value Char _YSLCID
Value Shortint _YCOMMID
Variable Integer ASTATUS

If YCMT = null : End : Endif

Gosub AVARIABLES From WMC00YCMT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YCMT.APARENT=null
 [L]A_I = YCMT.freeSnapshot
 YCMT.snapshotEnabled = 0
 YCMT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YCMT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YCMT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YCMT.APARENT=null
 YCMT.snapshotEnabled = 1
 YCMT.setAccessorEnabled = 1
Endif
LogicClose File [YCMT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YCMT._ACTION_PARAM("AREAD_BEFORE",[L]_YSLCID,[L]_YCOMMID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YCMT]
Read [F:YCMT]YCMT0 = [L]_YSLCID;[L]_YCOMMID
If fstat
[L]A_ERROR = [L]_YSLCID+"~"+num$([L]_YCOMMID)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YCMT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YCMT]AUUID)>0 & [F:YCMT]AUUID=NullUuid
 [F:YCMT]AUUID = getUuid
Endif
SetInstance YCMT With [F:YCMT]
YCMT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YCMT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



