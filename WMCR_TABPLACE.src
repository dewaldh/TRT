#<AdxTL>@(#)0.0.0.0 $Revision$Class Places  
# Supervisor
## CRUD-CLASSE ## TABPLACE
# 2018-08-27 12:52:21 627


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABPLACE [TPC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABPLACE") From ASYRCOM : Endif
Local Instance TABPLACE Using C_TABPLACE

If !SILENCE : Call TRACE("3 --> New Instance C_TABPLACE") From ASYRCOM : Endif
TABPLACE = NewInstance C_TABPLACE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TPC_]TPC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABPLACE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.AREAD([TPC_]TPC))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABPLACE.TPC ="-num$(TABPLACE.TPC)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABPLACE.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABPLACE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TPC_]
FreeGroup TABPLACE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABPLACE,ACLE,ASTATUS,_ETAG)
Variable Instance TABPLACE Using C_TABPLACE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _TPC(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TPC = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABPLACE [TPC]
Default File [F:TPC]
Read [F:TPC]TPC0 = [L]_TPC
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TPC]UPDTICK)>0
 [L]_ETAG = num$([F:TPC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABPLACE,ACLE,ASTATUS)
Variable Instance TABPLACE Using C_TABPLACE
Value Char ACLE
Variable Integer ASTATUS
Local Char _TPC(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TPC = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.AREAD([L]_TPC))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABPLACE,_TPC,ASTATUS)
Variable Instance TABPLACE Using C_TABPLACE
Value Char _TPC
Variable Integer ASTATUS

If TABPLACE = null : End : Endif

Gosub AVARIABLES From WMC00TABPLACE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABPLACE.APARENT=null
 [L]A_I = TABPLACE.freeSnapshot
 TABPLACE.snapshotEnabled = 0
 TABPLACE.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABPLACE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABPLACE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABPLACE.APARENT=null
 TABPLACE.snapshotEnabled = 1
 TABPLACE.setAccessorEnabled = 1
Endif
LogicClose File [TPC] ,[BPA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABPLACE._ACTION_PARAM("AREAD_BEFORE",[L]_TPC))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TPC]
Read [F:TPC]TPC0 = [L]_TPC
If fstat
[L]A_ERROR = [L]_TPC
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABPLACE,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TPC]AUUID)>0 & [F:TPC]AUUID=NullUuid
 [F:TPC]AUUID = getUuid
Endif
SetInstance TABPLACE With [F:TPC]
TABPLACE.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BPA]
 [L]A_N2=0
 For [F:BPA]BPA0 Where BPATYP=8 & BPANUM=[F:TPC]TPC
  [L]A_N2 +=1
  TABPLACE.BPA(A_N2) = NewInstance  C_BPADDRESS(TABPLACE.ACTX,NullUuid,[L]A_N2,TABPLACE,"BPA") AllocGroup TABPLACE
  [L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.BPA(A_N2).ADDINSTANCE_BOUND)
  Callmet TABPLACE.BPA(A_N2).AREAD([F:BPA]BPATYP,[F:BPA]BPANUM,[F:BPA]BPAADD)
  TABPLACE.BPA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.BPA(A_N2).ASETATTRIBUTE("BPATYP","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.BPA(A_N2).ASETATTRIBUTE("BPANUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.BPA(A_N2).ASETATTRIBUTE("BPAADD","$isDisabled","true"))
 Next BPA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet TABPLACE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABPLACE" & ZONE="DESAXX" & IDENT1=TABPLACE.TPC & IDENT2=""
 Call ASETTEXTRA(TABPLACE.AXX,TABPLACE.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABPLACE.AXX(maxtab(TABPLACE.AXX)).FLG = 0
Next AXX
If !len(fmet TABPLACE.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TABPLACE.AXX,TABPLACE.AllocGrp(),"DESAXX",
& fmet TABPLACE.AGETTEXTRALAN("DESAXX",TABPLACE.ACTX.AFOLD.ALANGDEF),
& TABPLACE.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABPLACE" & ZONE="DESSHO" & IDENT1=TABPLACE.TPC & IDENT2=""
 Call ASETTEXTRA(TABPLACE.AXX,TABPLACE.AllocGrp(),"DESSHO",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABPLACE.AXX(maxtab(TABPLACE.AXX)).FLG = 0
Next AXX
If !len(fmet TABPLACE.AGETTEXTRA("DESSHO"))
 Call ASETTEXTRA(TABPLACE.AXX,TABPLACE.AllocGrp(),"DESSHO",
& fmet TABPLACE.AGETTEXTRALAN("DESSHO",TABPLACE.ACTX.AFOLD.ALANGDEF),
& TABPLACE.ACTX.LAN) From ASYRSUB
Endif

Return



