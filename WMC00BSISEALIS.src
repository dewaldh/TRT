#<AdxTL>@(#)0.0.0.0 $Revision$Class Search term list
# Supervisor
## CRUD-CLASSE ## BSISEALIS
# 2018-08-27 12:27:32 588

Gosub TEST From WMCR_BSISEALIS : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CPY,BAN,FILFMT)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# BSISEALIS : BSISEALIS
# BSISEALISD : BSISEALIS BSISEALISD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet BSISEALIS._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = BSISEALIS.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(BSISEALIS.ACTX.AFOLDER,nomap,"")>0
 Local File BSISEALIS [BSILIS]
 Local File BSISEALISD [BSILISD]
Else
 Local File =BSISEALIS.ACTX.AFOLDER+".BSISEALIS" [BSILIS]
 Local File =BSISEALIS.ACTX.AFOLDER+".BSISEALISD" [BSILISD]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [BSILIS] With
& [BSILISD]BSILISD0 = [F:BSILIS]CPY;[F:BSILIS]BAN;[F:BSILIS]FILFMT
& As [LNK_]
Return

############################################################################################
### BSISEALIS(WBSILIS)
############################################################################################
Funprog  _MAJSQL_BSISEALIS(WBSILIS)
Variable Instance WBSILIS Using C_BSISEALIS
Local Integer ASTATUS,A_I,A_J
Default File [F:BSILIS]
If WBSILIS.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSILIS) From ASYRSUB
 SetInstance [F:BSILIS] With WBSILIS
 Write [F:BSILIS]
 If fstat
  Call FSTA("BSILIS",WBSILIS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSILIS.updTick = [F:BSILIS]updTick
Elsif WBSILIS.ASTALIN=[V]CST_ALL or WBSILIS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSILIS) From ASYRSUB
 SetInstance [F:BSILIS] With WBSILIS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSILIS,"BSISEALIS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSILIS]BSILIS0 = [F:BSILIS]CPY;[F:BSILIS]BAN;[F:BSILIS]FILFMT
 If fstat
  Call FSTA("BSILIS",WBSILIS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSILIS.updTick = [F:BSILIS]updTick
Elsif WBSILIS.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSILIS] With WBSILIS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSILIS,"BSISEALIS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSILIS]BSILIS0 = [F:BSILIS]CPY;[F:BSILIS]BAN;[F:BSILIS]FILFMT
 If fstat
  Call FSTA("BSILIS",WBSILIS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BSISEALISD(WBSILISD)
############################################################################################
Funprog  _MAJSQL_BSISEALISD(WBSILISD)
Variable Instance WBSILISD Using C_BSISEALISD
Local Integer ASTATUS,A_I,A_J
Default File [F:BSILISD]
If WBSILISD.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSILISD) From ASYRSUB
 SetInstance [F:BSILISD] With WBSILISD
 Write [F:BSILISD]
 If fstat
  Call FSTA("BSILISD",WBSILISD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSILISD.updTick = [F:BSILISD]updTick
Elsif WBSILISD.ASTALIN=[V]CST_ALL or WBSILISD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSILISD) From ASYRSUB
 SetInstance [F:BSILISD] With WBSILISD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSILISD,"BSISEALISD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSILISD]BSILISD0 = [F:BSILISD]CPY;[F:BSILISD]BAN;[F:BSILISD]FILFMT;[F:BSILISD]LIN
 If fstat
  Call FSTA("BSILISD",WBSILISD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSILISD.updTick = [F:BSILISD]updTick
Elsif WBSILISD.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSILISD] With WBSILISD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSILISD,"BSISEALISD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSILISD]BSILISD0 = [F:BSILISD]CPY;[F:BSILISD]BAN;[F:BSILISD]FILFMT;[F:BSILISD]LIN
 If fstat
  Call FSTA("BSILISD",WBSILISD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



