#<AdxTL>@(#)0.0.0.0 $Revision$Class Packages
# Supervisor
## CRUD-CLASSE ## TABPACKAGE
# 2018-08-27 13:37:59 198


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABPACKAGE [TPA_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABPACKAGE") From ASYRCOM : Endif
Local Instance TABPACKAGE Using R_TABPACKAGE

If !SILENCE : Call TRACE("3 --> New Instance R_TABPACKAGE") From ASYRCOM : Endif
TABPACKAGE = NewInstance R_TABPACKAGE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TPA_]TPA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABPACKAGE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABPACKAGE.AREAD([TPA_]PCK))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABPACKAGE.TPA.PCK ="-num$(TABPACKAGE.TPA.PCK)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABPACKAGE.TPA.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABPACKAGE.TPA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TPA_]
FreeGroup TABPACKAGE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABPACKAGE,ACLE,ASTATUS,_ETAG)
Variable Instance TABPACKAGE Using R_TABPACKAGE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PCK(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PCK = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABPACKAGE [TPA]
Default File [F:TPA]
Read [F:TPA]TPA0 = [L]_PCK
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TPA]UPDTICK)>0
 [L]_ETAG = num$([F:TPA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABPACKAGE,ACLE,ASTATUS)
Variable Instance TABPACKAGE Using R_TABPACKAGE
Value Char ACLE
Variable Integer ASTATUS
Local Char _PCK(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PCK = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABPACKAGE.AREAD([L]_PCK))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABPACKAGE,_PCK,ASTATUS)
Variable Instance TABPACKAGE Using R_TABPACKAGE
Value Char _PCK
Variable Integer ASTATUS

If TABPACKAGE = null : End : Endif

Gosub AVARIABLES From WMR00TABPACKAGE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABPACKAGE.APARENT=null
 [L]A_I = TABPACKAGE.freeSnapshot
 TABPACKAGE.snapshotEnabled = 0
 TABPACKAGE.setAccessorEnabled = 0
Endif

If fmet TABPACKAGE.ACTX.AGETAFCRIGHT(TABPACKAGE,"GESTPA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TPA]
Read [F:TPA]TPA0 = [L]_PCK
If fstat
[L]A_ERROR = [L]_PCK
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABPACKAGE,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABPACKAGE.ACTX.AGETAFCRIGHTR(TABPACKAGE,"GESTPA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABPACKAGE.ACTX.ASTACRITROLE(TABPACKAGE,[L]_PCK
& ,"TPA","TPA",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABPACKAGE.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABPACKAGE.TPA.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABPACKAGE.TPA.AREAD([L]_PCK))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABPACKAGE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABPACKAGE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABPACKAGE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABPACKAGE.APARENT=null
 TABPACKAGE.snapshotEnabled = 1
 TABPACKAGE.setAccessorEnabled = 1
Endif
LogicClose File [TPA]
End



