#<AdxTL>@(#)0.0.0.0 $Revision$Class Document types
# Supervisor
## CRUD-CLASSE ## GTYPACCENT
# 2018-08-27 13:17:17 488


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GTYPACCENT [GTE_]

If !SILENCE : Call TRACE("2 --> Local Instance R_GTYPACCENT") From ASYRCOM : Endif
Local Instance GTYPACCENT Using R_GTYPACCENT

If !SILENCE : Call TRACE("3 --> New Instance R_GTYPACCENT") From ASYRCOM : Endif
GTYPACCENT = NewInstance R_GTYPACCENT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [GTE_]GTE0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of GTYPACCENT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet GTYPACCENT.AREAD([GTE_]TYP,[GTE_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("GTYPACCENT.GTE.TYP ="-num$(GTYPACCENT.GTE.TYP)) From ASYRCOM
 Call TRACE("GTYPACCENT.GTE.LEG ="-num$(GTYPACCENT.GTE.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(GTYPACCENT.GTE.AKEYS)
  Call TRACE("-"-num$(I)-":"-GTYPACCENT.GTE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [GTE_]
FreeGroup GTYPACCENT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(GTYPACCENT,ACLE,ASTATUS,_ETAG)
Variable Instance GTYPACCENT Using R_GTYPACCENT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _TYP(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TYP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File GTYPACCENT [GTE]
Default File [F:GTE]
Read [F:GTE]GTE0 = [L]_TYP;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:GTE]UPDTICK)>0
 [L]_ETAG = num$([F:GTE]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(GTYPACCENT,ACLE,ASTATUS)
Variable Instance GTYPACCENT Using R_GTYPACCENT
Value Char ACLE
Variable Integer ASTATUS
Local Char _TYP(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TYP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet GTYPACCENT.AREAD([L]_TYP,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(GTYPACCENT,_TYP,_LEG,ASTATUS)
Variable Instance GTYPACCENT Using R_GTYPACCENT
Value Char _TYP
Value Char _LEG
Variable Integer ASTATUS

If GTYPACCENT = null : End : Endif

Gosub AVARIABLES From WMR00GTYPACCENT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If GTYPACCENT.APARENT=null
 [L]A_I = GTYPACCENT.freeSnapshot
 GTYPACCENT.snapshotEnabled = 0
 GTYPACCENT.setAccessorEnabled = 0
Endif

If fmet GTYPACCENT.ACTX.AGETAFCRIGHT(GTYPACCENT,"GESGTE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:GTE]
Read [F:GTE]GTE0 = [L]_TYP;[L]_LEG
If fstat
[L]A_ERROR = [L]_TYP+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(GTYPACCENT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:GTE]ACS
If fmet GTYPACCENT.ACTX.AGETAFCRIGHTR(GTYPACCENT,"GESGTE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet GTYPACCENT.ACTX.AGETACSRIGHTC(GTYPACCENT,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet GTYPACCENT.ACTX.ASTACRITROLE(GTYPACCENT,[L]_TYP+"~"+[L]_LEG
& ,"GTE","GTE",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet GTYPACCENT.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  GTYPACCENT.GTE.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet GTYPACCENT.GTE.AREAD([L]_TYP,[L]_LEG))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet GTYPACCENT.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & GTYPACCENT.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet GTYPACCENT._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If GTYPACCENT.APARENT=null
   GTYPACCENT.snapshotEnabled = 1
   GTYPACCENT.setAccessorEnabled = 1
  Endif
  LogicClose File [GTE]
  End
  


