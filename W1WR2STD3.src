#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management WR2STD3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [16/04/2018]
A_HEURE = "14:37:58"
A_USER  = "ADMIN"
A_STAMP = "20180416143758"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBMAT"
  If [M]NBMAT=0
   If [M:MTK3]FMTDIE(1)<>""
    Chgfmt CCE1 With [M:MTK3]FMTDIE(1)
   Else
    Chgfmt CCE1 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(2)<>""
    Chgfmt CCE2 With [M:MTK3]FMTDIE(2)
   Else
    Chgfmt CCE2 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(3)<>""
    Chgfmt CCE3 With [M:MTK3]FMTDIE(3)
   Else
    Chgfmt CCE3 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(4)<>""
    Chgfmt CCE4 With [M:MTK3]FMTDIE(4)
   Else
    Chgfmt CCE4 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(5)<>""
    Chgfmt CCE5 With [M:MTK3]FMTDIE(5)
   Else
    Chgfmt CCE5 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(6)<>""
    Chgfmt CCE6 With [M:MTK3]FMTDIE(6)
   Else
    Chgfmt CCE6 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(7)<>""
    Chgfmt CCE7 With [M:MTK3]FMTDIE(7)
   Else
    Chgfmt CCE7 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(8)<>""
    Chgfmt CCE8 With [M:MTK3]FMTDIE(8)
   Else
    Chgfmt CCE8 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(9)<>""
    Chgfmt CCE9 With [M:MTK3]FMTDIE(9)
   Else
    Chgfmt CCE9 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(10)<>""
    Chgfmt CCE10 With [M:MTK3]FMTDIE(10)
   Else
    Chgfmt CCE10 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(11)<>""
    Chgfmt CCE11 With [M:MTK3]FMTDIE(11)
   Else
    Chgfmt CCE11 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(12)<>""
    Chgfmt CCE12 With [M:MTK3]FMTDIE(12)
   Else
    Chgfmt CCE12 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(13)<>""
    Chgfmt CCE13 With [M:MTK3]FMTDIE(13)
   Else
    Chgfmt CCE13 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(14)<>""
    Chgfmt CCE14 With [M:MTK3]FMTDIE(14)
   Else
    Chgfmt CCE14 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(15)<>""
    Chgfmt CCE15 With [M:MTK3]FMTDIE(15)
   Else
    Chgfmt CCE15 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(16)<>""
    Chgfmt CCE16 With [M:MTK3]FMTDIE(16)
   Else
    Chgfmt CCE16 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(17)<>""
    Chgfmt CCE17 With [M:MTK3]FMTDIE(17)
   Else
    Chgfmt CCE17 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(18)<>""
    Chgfmt CCE18 With [M:MTK3]FMTDIE(18)
   Else
    Chgfmt CCE18 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(19)<>""
    Chgfmt CCE19 With [M:MTK3]FMTDIE(19)
   Else
    Chgfmt CCE19 With "-K:1X"
   Endif
   If [M:MTK3]FMTDIE(20)<>""
    Chgfmt CCE20 With [M:MTK3]FMTDIE(20)
   Else
    Chgfmt CCE20 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WR2STD3 [MTK3]
Gosub HORODAT
Local Inpbox "WR2STD3" From GFONCTION At A_STAMP With A_WINDPREV Mask [MTK3] As [SIM_]
Grizo [MTK3]5
Grizo [MTK3]10
Grizo [MTK3]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MTK3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=80 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=80 : Y1(1)=4 : Y2(1)=5
X1(2)=1 : X2(2)=80 : Y1(2)=6 : Y2(2)=22
Return

$ON_WOPE1
Onevent AFTER_CHANGE Gosub AMM_WOPE1 From W1WR2STD3
Onevent CONTROL Call C_WOPE1(zc) From W1WR2STD3
Return

Subprog C_WOPE1(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_WOPE1
Call AM_WOPE1(zc)
If !mkstat & GOBJET
 zoncou = "WOPE1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WOPE1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WOPE1(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "WOPE1" : GZNUM = 10838 : Endif
Gosub _AFF
End

$ON_WOPE2
Onevent AFTER_CHANGE Gosub AMM_WOPE2 From W1WR2STD3
Onevent INIT_AREA Call D_WOPE2(zc) From W1WR2STD3
Onevent CONTROL Call C_WOPE2(zc) From W1WR2STD3
Return

Subprog D_WOPE2(VALEUR)
Variable Decimal VALEUR
If varinit([M]WOPE2,indice)=0
 VALEUR = 9999
Endif
Gosub _AFF
End

Subprog C_WOPE2(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_WOPE2
Call AM_WOPE2(zc)
If !mkstat & GOBJET
 zoncou = "WOPE2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WOPE2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WOPE2(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "WOPE2" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_STOCOD
Onevent AFTER_CHANGE Gosub AMM_STOCOD From W1WR2STD3
Onevent INIT_AREA Call D_STOCOD(zc) From W1WR2STD3
Onevent BEFORE_INPUT Call AS_STOCOD(zc) From W1WR2STD3
Return

Subprog D_STOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOCOD,indice)=0
 VALEUR = [F:MTS]STOCODDEF
Endif
Gosub _AFF
End

Subprog AS_STOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_STOCOD
Call AM_STOCOD(zc)
If !mkstat & GOBJET
 zoncou = "STOCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STOCOD(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "STOCOD" : GZNUM = 10843 : Endif
Gosub _AFF
End

$ON_FILTMAT
Onevent BEFORE_AREA Gosub AV_FILTMAT From W1WR2STD3
Onevent AFTER_AREA Call AP_FILTMAT(zc) From W1WR2STD3
Onevent INIT_AREA Call D_FILTMAT(zc) From W1WR2STD3
Onevent BEFORE_INPUT Call AS_FILTMAT(zc) From W1WR2STD3
Return

$AV_FILTMAT
## Action STD
Call AV_FILTMAT(zc) From SUBMTK3
Gosub _AFF
Return

Subprog D_FILTMAT(VALEUR)
Variable Integer VALEUR
If varinit([M]FILTMAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FILTMAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_FILTMAT(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_FILTMAT(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "FILTMAT" : GZNUM = 10104 : Endif
Gosub _AFF
End

$ON_QTESUIVMAT
Onevent BEFORE_AREA Gosub AV_QTESUIVMAT From W1WR2STD3
Onevent BEFORE_INPUT Call AS_QTESUIVMAT(zc) From W1WR2STD3
Onevent AFTER_CHANGE Gosub AMM_QTESUIVMAT From W1WR2STD3
Onevent CONTROL Call C_QTESUIVMAT(zc) From W1WR2STD3
Return

$AV_QTESUIVMAT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find(UOM,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTESUIVMAT(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTESUIVMAT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:MTK3]FILTMAT <> 3)
 Affzo QTESUIVMAT : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTESUIVMAT(VALEUR) From SUBMTK3
 If mkstat=2
  [M]QTESUIVMAT(INDIC) = VALEUR
  Affzo QTESUIVMAT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_QTESUIVMAT(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_QTESUIVMAT
Call AM_QTESUIVMAT(zc)
If !mkstat & GOBJET
 zoncou = "QTESUIVMAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTESUIVMAT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTESUIVMAT(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "QTESUIVMAT" : GZNUM = 10835 : Endif
Gosub _AFF
End

$ON_UOM
Onevent BEFORE_AREA Gosub AV_UOM From W1WR2STD3
Return

$AV_UOM
## Action STD
Call AV_UOM(zc) From SUBMTK3
Gosub _AFF
Return

$ON_ZUOM
Onevent BEFORE_AREA Gosub AV_ZUOM From W1WR2STD3
Return

$AV_ZUOM
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]UOM(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_LOCSTO
Onevent CONTROL Call C_LOCSTO(zc) From W1WR2STD3
Onevent AFTER_CHANGE Gosub AMM_LOCSTO From W1WR2STD3
Onevent BEFORE_INPUT Call AS_LOCSTO(zc) From W1WR2STD3
Return

Subprog AS_LOCSTO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOCSTO(zc) From W1WR2STD3
Gosub _AFF
End

Subprog C_LOCSTO(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCSTO" : GZNUM = 10844 : Endif
If !mkstat
 ## Action STD
 Call C_LOCSTO(VALEUR) From SUBMTK3
 If mkstat : GERR = 1 : GZONE = "LOCSTO" : GZNUM = 10844 : Endif
Endif
Gosub _AFF
End

$AMM_LOCSTO
Call AM_LOCSTO(zc)
If !mkstat & GOBJET
 zoncou = "LOCSTO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOCSTO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOCSTO(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "LOCSTO" : GZNUM = 10844 : Endif
Gosub _AFF
End

Subprog S_LOCSTO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELEMP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELEMP"
 PARMSK(1) = [M:MTK0]MFGFCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELEMP","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUM
Return

$ON_NBMAT
Onevent CONTROL Call C_NBMAT From W1WR2STD3
Onevent BEFORE_LINE Call AVANT_NBMAT From W1WR2STD3
Onevent AFTER_LINE Call APRES_NBMAT From W1WR2STD3
Onevent BEFORE_INPUT Call AS_NBMAT From W1WR2STD3
Onevent BEFORE_AREA Call AV_NBMAT From W1WR2STD3
Return

Subprog IB_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBMAT From SUBMTK3
Endif
Gosub _AFF
End

Subprog AV_NBMAT
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBMAT" : Gosub TIT_COL From W4WR2STD3
Endif
Gosub _AFF
End

Subprog AS_NBMAT
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(22452,GBOUT1) From OBJDIV
Call TEXTE(17036,GBOUT2) From OBJDIV
Call TEXTE(10079,GBOUT3) From OBJDIV
Call TEXTE(735,GBOUT4) From OBJDIV
Call TEXTE(17084,GBOUT6) From OBJDIV
Call TEXTE(454,GBOUT7) From OBJDIV
Call TEXTE(12817,GBOUT8) From OBJDIV
Call TEXTE(16462,GBOUT9) From OBJDIV
Call TEXTE(23594,GBOUT10) From OBJDIV
Call TEXTE(3966,GBOUT12) From OBJDIV
Call IB_NBMAT
Onkey 129 Titled GBOUT1 Call B1_NBMAT From W1WR2STD3
Onkey 130 Titled GBOUT2 Call B2_NBMAT From W1WR2STD3
Onkey 131 Titled GBOUT3 Call B3_NBMAT From W1WR2STD3
Onkey 132 Titled GBOUT4 Call B4_NBMAT From W1WR2STD3
Onkey 134 Titled GBOUT6 Call B6_NBMAT From W1WR2STD3
Onkey 135 Titled GBOUT7 Call B7_NBMAT From W1WR2STD3
Onkey 136 Titled GBOUT8 Call B8_NBMAT From W1WR2STD3
Onkey 137 Titled GBOUT9 Call B9_NBMAT From W1WR2STD3
Onkey 138 Titled GBOUT10 Call B10_NBMAT From W1WR2STD3
Onkey 140 Titled GBOUT12 Call B12_NBMAT From W1WR2STD3
Gosub _AFF
End

Subprog C_NBMAT
Local Decimal BASPAG
## Action STD
Call C_NBMAT From SUBMTK3
If mkstat : GERR = 1 : GZONE = "NBMAT" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action MFMTRKSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MFMTRKSTA"
 PARMSK(1) = num$(nolign-1)
 PARMSK(2) = "MTK3"
 Call SAISIE_NUM(BASPAG,PARMSK,"IMFMQTY","MFGWINLIB","XWIMFMQTY") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action MFMFICHMTK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MFMFICHMTK"
 PARMSK(1) = [M:MTK3]MFGNUMMA(nolign-1)
 PARMSK(2) = num$([M:MTK3]MFGLIN(nolign-1))
 PARMSK(3) = num$([M:MTK3]BOMSEQ(nolign-1))
 PARMSK(4) = [M:MTK3]MATITMREF(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"IMFMW","MFGWINLIB","XWIMFMW") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC7A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC7A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB3_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MTK3]MFGNUMMA(nolign-1)
 Call OBJET_CHAR(OBJCLE,"MFG","") From GOBJET
 ACTION = "BB3_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B4_NBMAT From SUBMTK3
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBMAT
Local Decimal BASPAG
## Action STD
Call AVANT_NBMAT From SUBMTK3
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBMAT
Local Decimal BASPAG
## Action SAISTOSOR
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAISTOSOR"
Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
ACTION = "AAPRES_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
PARMSK(1) = "MTK3"
PARMSK(2) = num$(nolign-1)
PARMSK(3) = num$([M:MTK3]NBMAT)
PARMSK(4) = [M:MTK3]MATITMREF(nolign-1)
PARMSK(5) = [M:MTK0]MFGFCY
PARMSK(6) = "12"
Call TRAITE_NUM(BASPAG,PARMSK,"ISTOSOR","TRTSTOSOR","",1,"XYTRTSTOSOR") From GTRAITE
ACTION = "BAPRES_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
GACTION = SAVACT
If mkstat : End : Endif
Gosub _AFF
End

Subprog B6_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISTOSOR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTOSOR"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB6_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "MTK3"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = num$([M:MTK3]NBMAT)
 PARMSK(4) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(5) = [M:MTK0]MFGFCY
 PARMSK(6) = "12"
 Call TRAITE_NUM(BASPAG,PARMSK,"ISTOSOR","TRTSTOSOR","",1,"XYTRTSTOSOR") From GTRAITE
 ACTION = "BB6_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B7_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action ACLOB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ACLOB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB7_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MTK3]MKMTEX(nolign-1)
 PARMSK(2) = "MKM"
 PARMSK(3) = "TRTX3TEX"
 PARMSK(4) = "MTK3"
 PARMSK(5) = num$(nolign)
 PARMSK(6) = "1"
 Call TRAITE_NUM(BASPAG,PARMSK,"","ACLOB","ACLOB",3,"XYACLOB") From GTRAITE
 [M:MTK3]MKMTEX(nolign-1) = PARMSK(1)
 ACTION = "BB7_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B8_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSSFC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSFC"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB8_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "1"
 PARMSK(2) = [M:MTK0]MFGFCY
 PARMSK(3) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(4) = "[M:MTK3]FLT"
 Call CONSULT_NUM(BASPAG,"SFC",PARMSK) From GCONSULT
 ACTION = "BB8_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B9_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISTOSORM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTOSORM"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB9_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "MTK3"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(4) = [M:MTK0]MFGFCY
 PARMSK(5) = "12"
 Call SAISIE_NUM(BASPAG,PARMSK,"ISTOSORM","TRTSTOSOM","XYTRTSTOSOM") From GSAISIE
 ACTION = "BB9_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B10_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSSMV
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSMV"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB10_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "1"
 PARMSK(2) = [M:MTK0]MFGFCY
 PARMSK(3) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = "12"
 PARMSK(7) = [M:MTK0]MFGTRKNUM
 PARMSK(8) = "[M:MTK3]FLT"
 PARMSK(9) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:MTK3]WRH)),[M:MTK3]WRH(nolign-1))))
 Call CONSULT_NUM(BASPAG,"SMV",PARMSK) From GCONSULT
 ACTION = "BB10_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B12_NBMAT
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB12_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = WCLE2
 Call OBJET_CHAR(OBJCLE,"BOD",WCLE1) From GOBJET
 ACTION = "BB12_NBMAT" : PROGSUB = "SUBMTK3" : PROGSPE = "SPEMTK3" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_NO
Onevent BEFORE_AREA Gosub AV_NO From W1WR2STD3
Return

$AV_NO
zc = nolign
Gosub _AFF
Return

$ON_MATTYP
Onevent INIT_AREA Call D_MATTYP(zc) From W1WR2STD3
Return

Subprog D_MATTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]MATTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1WR2STD3
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATITMREF
Onevent CONTROL Call C_MATITMREF(zc) From W1WR2STD3
Onevent BEFORE_AREA Gosub AV_MATITMREF From W1WR2STD3
Onevent AFTER_CHANGE Gosub AMM_MATITMREF From W1WR2STD3
Onevent BEFORE_INPUT Call AS_MATITMREF(zc) From W1WR2STD3
Return

Subprog IB_MATITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

$AV_MATITMREF
## Action STD
Call AV_MATITMREF(zc) From SUBMTK3
Gosub _AFF
Return

Subprog AS_MATITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_MATITMREF(VALEUR)
If !([M:MTK3]WINDIC(nolign-1) <> 1)
 Affzo MATITMREF : mkstat = 2
Endif
If !mkstat
 Onkey 170 Titled GBOUT13 Call B13_MATITMREF(zc) From W1WR2STD3
 Onkey   2 Titled GBOUTS Call S_MATITMREF(zc) From W1WR2STD3
 Onkey 144 Titled GBOUTP Call P_MATITMREF(zc) From W1WR2STD3
 Onkey 146 Titled GBOUTA Call SA_MATITMREF(zc) From W1WR2STD3
Endif
Gosub _AFF
End

Subprog C_MATITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "MATITMREF" : GZNUM = 4600 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "MATITMREF" : GZNUM = 4600 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "MATITMREF" : GZNUM = 4600 : Endif
  If !mkstat
   ## Action STD
   Call C_MATITMREF(VALEUR) From SUBMTK3
   If mkstat : GERR = 1 : GZONE = "MATITMREF" : GZNUM = 4600 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_MATITMREF
Call AM_MATITMREF(zc)
If !mkstat & GOBJET
 zoncou = "MATITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MATITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_MATITMREF(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "MATITMREF" : GZNUM = 4600 : Endif
Gosub _AFF
End

Subprog S_MATITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M:MTK0]MFGFCY
 PARMSK(2) = "123"
 PARMSK(3) = "1"
 PARMSK(4) = "234"
 PARMSK(5) = ""
 PARMSK(6) = [M:MTK0]MFGTRKDAT
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B13_MATITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_MATITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_MATITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ECCVALMAJ
Onevent BEFORE_INPUT Call AS_ECCVALMAJ(zc) From W1WR2STD3
Onevent CONTROL Call C_ECCVALMAJ(zc) From W1WR2STD3
Onevent AFTER_CHANGE Gosub AMM_ECCVALMAJ From W1WR2STD3
Return

Subprog AS_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_ECCVALMAJ(VALEUR) From SUBMTK3
If mkstat=2
 [M]ECCVALMAJ(INDIC) = VALEUR
 Affzo ECCVALMAJ(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ECCVALMAJ(zc) From W1WR2STD3
Gosub _AFF
End

Subprog C_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ECCVALMAJ(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

$AMM_ECCVALMAJ
Call AM_ECCVALMAJ(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMAJ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMAJ(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELMAJS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELMAJS"
 PARMSK(1) = [M:MTK0]MFGFCY
 PARMSK(2) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(3) = "2"
 PARMSK(4) = [M:MTK0]TRSCODS
 PARMSK(5) = "MTK3"
 PARMSK(6) = num$(nolign-1)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELMAJS","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ECCVALMIN
Onevent BEFORE_INPUT Call AS_ECCVALMIN(zc) From W1WR2STD3
Onevent CONTROL Call C_ECCVALMIN(zc) From W1WR2STD3
Onevent AFTER_CHANGE Gosub AMM_ECCVALMIN From W1WR2STD3
Return

Subprog AS_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(44284,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
If !GWEBSERV
 ## Action STKASMIN
 Call STKASMIN([M:MTK3]ECCVALMAJ(nolign-1)) From STKACT
 If mkstat=2
  [M]ECCVALMIN(INDIC) = VALEUR
  Affzo ECCVALMIN(INDIC) : mkstat = 2
 Endif
Endif
If !mkstat
 ## Action STD
 Call AS_ECCVALMIN(VALEUR) From SUBMTK3
 If mkstat=2
  [M]ECCVALMIN(INDIC) = VALEUR
  Affzo ECCVALMIN(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_ECCVALMIN(zc) From W1WR2STD3
 Onkey   2 Titled GBOUTS Call S_ECCVALMIN(zc) From W1WR2STD3
Endif
Gosub _AFF
End

Subprog C_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STKCTRECC
Call STKCTRECC([M:MTK3]MATITMREF(nolign-1),[M:MTK3]ECCVALMAJ(nolign-1),VALEUR,"",4) From STKACT
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
If !mkstat
 ## Action STD
 Call C_ECCVALMIN(VALEUR) From SUBMTK3
 If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Endif
Gosub _AFF
End

$AMM_ECCVALMIN
Call AM_ECCVALMIN(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMIN(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

Subprog S_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELMIN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELMIN"
 PARMSK(1) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(2) = [M:MTK3]ECCVALMAJ(nolign-1)
 PARMSK(3) = "MTK3"
 PARMSK(4) = num$(nolign-1)
 PARMSK(5) = "4"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELMIN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ECCVAL"
 PARMSK(1) = [M:MTK3]MATITMREF(nolign-1)
 PARMSK(2) = "4"
 PARMSK(3) = [M:MTK3]ECCVALMAJ(nolign-1)
 Call SAISIE_CHAR(VALEUR,PARMSK,"FECCVAL","ECCVAL","SPEECCVAL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_OPENUM
Onevent CONTROL Call C_OPENUM(zc) From W1WR2STD3
Onevent AFTER_AREA Call AP_OPENUM(zc) From W1WR2STD3
Onevent BEFORE_INPUT Call AS_OPENUM(zc) From W1WR2STD3
Return

Subprog AS_OPENUM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
If !([M:MTK3]WINDIC(nolign-1) <> 1)
 Affzo OPENUM : mkstat = 2
Endif
If !mkstat
 Onkey   2 Titled GBOUTS Call S_OPENUM(zc) From W1WR2STD3
Endif
Gosub _AFF
End

Subprog C_OPENUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_OPENUM(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "OPENUM" : GZNUM = 2295 : Endif
Gosub _AFF
End

Subprog AP_OPENUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_OPENUM(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "OPENUM" : GZNUM = 2295 : Endif
Gosub _AFF
End

Subprog S_OPENUM(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELOPE1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOPE1"
 PARMSK(1) = [M:MTK0]MFGNUM
 PARMSK(2) = [M:MTK0]MFGFCY
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = "1"
 PARMSK(6) = date$
 Call S_LIS_NUM(VALEUR,PARMSK,"SELOPE1","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_RETQTY
Onevent BEFORE_AREA Gosub AV_RETQTY From W1WR2STD3
Return

$AV_RETQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MTK3]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]RETQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_USEQTY
Onevent BEFORE_AREA Gosub AV_USEQTY From W1WR2STD3
Onevent BEFORE_INPUT Call AS_USEQTY(zc) From W1WR2STD3
Onevent CONTROL Call C_USEQTY(zc) From W1WR2STD3
Onevent AFTER_CHANGE Gosub AMM_USEQTY From W1WR2STD3
Return

$AV_USEQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MTK3]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]USEQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_USEQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo USEQTY : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_USEQTY(VALEUR) From SUBMTK3
 If mkstat=2
  [M]USEQTY(INDIC) = VALEUR
  Affzo USEQTY(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_USEQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_USEQTY(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "USEQTY" : GZNUM = 18088 : Endif
Gosub _AFF
End

$AMM_USEQTY
Call AM_USEQTY(zc)
If !mkstat & GOBJET
 zoncou = "USEQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_USEQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_USEQTY(VALEUR) From SUBMTK3
If mkstat : GERR = 1 : GZONE = "USEQTY" : GZNUM = 18088 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W4WR2STD3
Return

$TIT_COL
Gosub TIT_COL From W4WR2STD3
Return


