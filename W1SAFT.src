#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SAFT 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:11:04"
A_USER  = "ADMIN"
A_STAMP = "20180828001104"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SAFT [SAFT]
Gosub HORODAT
Local Inpbox "SAFT" From GFONCTION At A_STAMP With A_WINDPREV Mask [SAFT] As [SIM_]
Grizo [SAFT]5
Grizo [SAFT]10
Grizo [SAFT]15
Grizo [SAFT]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SAFT]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=23 : X2(0)=89 : Y1(0)=5 : Y2(0)=9
X1(1)=23 : X2(1)=89 : Y1(1)=10 : Y2(1)=14
X1(2)=23 : X2(2)=89 : Y1(2)=15 : Y2(2)=20
X1(3)=23 : X2(3)=89 : Y1(3)=21 : Y2(3)=23
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1SAFT
Onevent AFTER_CHANGE Gosub AMM_CPY From W1SAFT
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3529,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CPY(zc) From W1SAFT
Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1SAFT
Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1SAFT
Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1SAFT
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action ACONTCPY
 Call CONTSOC(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CPY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  If !mkstat
   ## Action STD
   Call C_CPY(VALEUR) From FUNSAFTEXT
   If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPY
Call AM_CPY(zc)
If !mkstat & GOBJET
 zoncou = "CPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCPY)")>indice
 [M]CPY(indice) = VALEUR
 Affzo ZCPY(indice)
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPY(VALEUR)
Variable Char    VALEUR()
Call OBJET("CPY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1SAFT
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_STRDAT
Onevent CONTROL Call C_STRDAT(zc) From W1SAFT
Onevent BEFORE_AREA Gosub AV_STRDAT From W1SAFT
Return

$AV_STRDAT
Chgfmt [M]STRDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog C_STRDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STRDAT" : GZNUM = 1488 : Endif
Gosub _AFF
End

$ON_ENDDAT
Onevent CONTROL Call C_ENDDAT(zc) From W1SAFT
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1SAFT
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog C_ENDDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ENDDAT" : GZNUM = 1806 : Endif
If !mkstat
 ## Action CTLDATV
 Call CTLDATV(VALEUR,[M]STRDAT) From CONTDIV
 If mkstat : GERR = 1 : GZONE = "ENDDAT" : GZNUM = 1806 : Endif
Endif
Gosub _AFF
End

$ON_SAFTTYP
Onevent BEFORE_INPUT Call AS_SAFTTYP(zc) From W1SAFT
Onevent AFTER_AREA Call AP_SAFTTYP(zc) From W1SAFT
Onevent INIT_AREA Call D_SAFTTYP(zc) From W1SAFT
Onevent CONTROL Call C_SAFTTYP(zc) From W1SAFT
Return

Subprog D_SAFTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]SAFTTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SAFTTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2272) From COMBOS
## Action STD
Call AS_SAFTTYP(VALEUR) From FUNSAFTEXT
If mkstat=2
 [M]SAFTTYP(INDIC) = VALEUR
 Affzo SAFTTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2272,1))))
Endif
If !mkstat
 Discombo 0 From SAFTTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SAFTTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SAFTTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "SAFTTYP" : GZNUM = 680 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_SAFTTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_SAFTTYP(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "SAFTTYP" : GZNUM = 680 : Endif
Gosub _AFF
End

$ON_VERSION
Onevent INIT_AREA Call D_VERSION(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_VERSION(zc) From W1SAFT
Onevent CONTROL Call C_VERSION(zc) From W1SAFT
Return

Subprog D_VERSION(VALEUR)
Variable Integer VALEUR
If varinit([M]VERSION,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_VERSION(VALEUR) From FUNSAFTEXT
Endif
Gosub _AFF
End

Subprog AS_VERSION(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2082) From COMBOS
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2082,1))))
Endif
If !mkstat
 Discombo 0 From VERSION(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From VERSION(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_VERSION(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_BPSNUM
Onevent CONTROL Call C_BPSNUM(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_BPSNUM(zc) From W1SAFT
Onevent AFTER_CHANGE Gosub AMM_BPSNUM From W1SAFT
Return

Subprog AS_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1515,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPSNUM(zc) From W1SAFT
Onkey   2 Titled GBOUTS Call S_BPSNUM(zc) From W1SAFT
Onkey 144 Titled GBOUTP Call P_BPSNUM(zc) From W1SAFT
Onkey 146 Titled GBOUTA Call SA_BPSNUM(zc) From W1SAFT
Gosub _AFF
End

Subprog C_BPSNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BPSCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BPSCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"BPSCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("BPS","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BPSNUM" : GZNUM = 3680 : Endif
Endif
Gosub _AFF
End

$AMM_BPSNUM
Call AM_BPSNUM(zc)
If !mkstat & GOBJET
 zoncou = "BPSNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPSNUM(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZBPSNUM)")>indice
 [M]BPSNUM(indice) = VALEUR
 Affzo ZBPSNUM(indice)
Endif
Gosub _AFF
End

Subprog S_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "BPS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BPSNUM(VALEUR)
Variable Char    VALEUR()
Call OBJET("BPS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BPS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BPSNUM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BPS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBPSNUM
Onevent BEFORE_AREA Gosub AV_ZBPSNUM From W1SAFT
Return

$AV_ZBPSNUM
If clalev([F:BPS])=0 : Local File BPSUPPLIER [BPS] : Endif
Call LECTURE("BPS",num$([M]BPSNUM(indice)),"") From CONTOBJ
zc = [F:BPS]BPSNAM
Gosub _AFF
Return

$ON_STRFCY
Onevent CONTROL Call C_STRFCY(zc) From W1SAFT
Onevent AFTER_CHANGE Gosub AMM_STRFCY From W1SAFT
Onevent BEFORE_INPUT Call AS_STRFCY(zc) From W1SAFT
Return

Subprog AS_STRFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_STRFCY(zc) From W1SAFT
Onkey   2 Titled GBOUTS Call S_STRFCY(zc) From W1SAFT
Onkey 144 Titled GBOUTP Call P_STRFCY(zc) From W1SAFT
Onkey 146 Titled GBOUTA Call SA_STRFCY(zc) From W1SAFT
Gosub _AFF
End

Subprog C_STRFCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "STRFCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "STRFCY" : GZNUM = 1344 : Endif
Endif
Gosub _AFF
End

$AMM_STRFCY
Call AM_STRFCY(zc)
If !mkstat & GOBJET
 zoncou = "STRFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STRFCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STRFCY(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "STRFCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSTRFCY)")>indice
 [M]STRFCY(indice) = VALEUR
 Affzo ZSTRFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STRFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STRFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_STRFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STRFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTRFCY
Onevent BEFORE_AREA Gosub AV_ZSTRFCY From W1SAFT
Return

$AV_ZSTRFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STRFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ENDFCY
Onevent CONTROL Call C_ENDFCY(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_ENDFCY(zc) From W1SAFT
Onevent AFTER_CHANGE Gosub AMM_ENDFCY From W1SAFT
Return

Subprog AS_ENDFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDFCY(zc) From W1SAFT
Onkey   2 Titled GBOUTS Call S_ENDFCY(zc) From W1SAFT
Onkey 144 Titled GBOUTP Call P_ENDFCY(zc) From W1SAFT
Onkey 146 Titled GBOUTA Call SA_ENDFCY(zc) From W1SAFT
Gosub _AFF
End

Subprog C_ENDFCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "ENDFCY" : GZNUM = 0 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "ENDFCY" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_ENDFCY
Call AM_ENDFCY(zc)
If !mkstat & GOBJET
 zoncou = "ENDFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDFCY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZENDFCY)")>indice
 [M]ENDFCY(indice) = VALEUR
 Affzo ZENDFCY(indice)
Endif
Gosub _AFF
End

Subprog S_ENDFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_ENDFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_ENDFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ENDFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZENDFCY
Onevent BEFORE_AREA Gosub AV_ZENDFCY From W1SAFT
Return

$AV_ZENDFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]ENDFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_EVRDOCTYP
Onevent AFTER_CHANGE Gosub AMM_EVRDOCTYP From W1SAFT
Onevent INIT_AREA Call D_EVRDOCTYP(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_EVRDOCTYP(zc) From W1SAFT
Return

Subprog D_EVRDOCTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]EVRDOCTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_EVRDOCTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_EVRDOCTYP
Call AM_EVRDOCTYP(zc)
If !mkstat & GOBJET
 zoncou = "EVRDOCTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EVRDOCTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_EVRDOCTYP(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "EVRDOCTYP" : GZNUM = 6054 : Endif
Gosub _AFF
End

$ON_DOCTYP
Onevent BEFORE_INPUT Call AS_DOCTYP(zc) From W1SAFT
Onevent INIT_AREA Call D_DOCTYP(zc) From W1SAFT
Onevent CONTROL Call C_DOCTYP(zc) From W1SAFT
Return

Subprog D_DOCTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DOCTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DOCTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2047) From COMBOS
## Action STD
Call AS_DOCTYP(VALEUR) From FUNSAFTEXT
If mkstat=2
 [M]DOCTYP(INDIC) = VALEUR
 Affzo DOCTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2047,1))))
Endif
If !mkstat
 Discombo 0 From DOCTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DOCTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DOCTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_DOCNUMSTR
Onevent BEFORE_INPUT Call AS_DOCNUMSTR(zc) From W1SAFT
Onevent AFTER_CHANGE Gosub AMM_DOCNUMSTR From W1SAFT
Return

Subprog AS_DOCNUMSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DOCNUMSTR(VALEUR) From FUNSAFTEXT
If mkstat=2
 [M]DOCNUMSTR(INDIC) = VALEUR
 Affzo DOCNUMSTR(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_DOCNUMSTR
Call AM_DOCNUMSTR(zc)
If !mkstat & GOBJET
 zoncou = "DOCNUMSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DOCNUMSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_DOCNUMSTR(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "DOCNUMSTR" : GZNUM = 5169 : Endif
Gosub _AFF
End

$ON_DOCNUMEND
Onevent BEFORE_INPUT Call AS_DOCNUMEND(zc) From W1SAFT
Return

Subprog AS_DOCNUMEND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DOCNUMEND(VALEUR) From FUNSAFTEXT
If mkstat=2
 [M]DOCNUMEND(INDIC) = VALEUR
 Affzo DOCNUMEND(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_INI
Onevent INIT_AREA Call D_INI(zc) From W1SAFT
Return

Subprog D_INI(VALEUR)
Variable Decimal VALEUR
If varinit([M]INI,indice)=0
 ## Action STD
 Call D_INI(VALEUR) From FUNSAFTEXT
Endif
Gosub _AFF
End

$ON_TYPEXP
Onevent CONTROL Call C_TYPEXP(zc) From W1SAFT
Onevent AFTER_CHANGE Gosub AMM_TYPEXP From W1SAFT
Onevent INIT_AREA Call D_TYPEXP(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_TYPEXP(zc) From W1SAFT
Return

Subprog D_TYPEXP(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPEXP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPEXP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_TYPEXP(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
Gosub _AFF
End

$AMM_TYPEXP
Call AM_TYPEXP(zc)
If !mkstat & GOBJET
 zoncou = "TYPEXP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TYPEXP(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
Gosub _AFF
End

$ON_VOLFIL
Onevent CONTROL Call C_VOLFIL(zc) From W1SAFT
Onevent BEFORE_INPUT Call AS_VOLFIL(zc) From W1SAFT
Return

Subprog AS_VOLFIL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VOLFIL(zc) From W1SAFT
Gosub _AFF
End

Subprog C_VOLFIL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VOLFIL(VALEUR) From FUNSAFTEXT
If mkstat : GERR = 1 : GZONE = "VOLFIL" : GZNUM = 15179 : Endif
Gosub _AFF
End

Subprog S_VOLFIL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFICREP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFICREP"
 PARMSK(1) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"DFICREP","SELFICREP","XWDFICREP") From GSAISIE
 GACTION = SAVACT
Endif
Gosub _AFF
End

$CHG_STY
Return


