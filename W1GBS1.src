#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management GBS1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:02:15"
A_USER  = "ADMIN"
A_STAMP = "20180828000215"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBRFLD"
  If [M]NBRFLD=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask GBS1 [GBS1]
Gosub HORODAT
Local Inpbox "GBS1" From GFONCTION At A_STAMP With A_WINDPREV Mask [GBS1] As [SIM_]
Grizo [GBS1]10
Grizo [GBS1]15
Grizo [GBS1]20
Grizo [GBS1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [GBS1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=46 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=46 : Y1(1)=4 : Y2(1)=20
X1(2)=47 : X2(2)=80 : Y1(2)=1 : Y2(2)=20
X1(3)=1 : X2(3)=80 : Y1(3)=21 : Y2(3)=25
Return

$ON_ACS
Onevent BEFORE_INPUT Call AS_ACS(zc) From W1GBS1
Onevent CONTROL Call C_ACS(zc) From W1GBS1
Onevent AFTER_CHANGE Gosub AMM_ACS From W1GBS1
Return

Subprog AS_ACS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(189,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ACS(zc) From W1GBS1
Onkey   2 Titled GBOUTS Call S_ACS(zc) From W1GBS1
Onkey 144 Titled GBOUTP Call P_ACS(zc) From W1GBS1
Onkey 146 Titled GBOUTA Call SA_ACS(zc) From W1GBS1
Gosub _AFF
End

Subprog C_ACS(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ACS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "ACS" : GZNUM = 71 : Endif
Gosub _AFF
End

$AMM_ACS
Call AM_ACS(zc)
If !mkstat & GOBJET
 zoncou = "ACS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ACS(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZACS)")>indice
 [M]ACS(indice) = VALEUR
 Affzo ZACS(indice)
Endif
Gosub _AFF
End

Subprog S_ACS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELACC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELACC"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELACC","SUBACS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ACS(VALEUR)
Variable Char    VALEUR()
Call OBJET("ACS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_ACS(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ACS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ACS(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ACS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZACS
Onevent BEFORE_AREA Gosub AV_ZACS From W1GBS1
Return

$AV_ZACS
Call LECTEXTRA(zc,"ACCCOD","DESACC",num$([M]ACS(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_NBRLIG
Onevent BEFORE_INPUT Call AS_NBRLIG(zc) From W1GBS1
Onevent CONTROL Call C_NBRLIG(zc) From W1GBS1
Return

Subprog AS_NBRLIG(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NBRLIG(VALEUR) From SUBGBS
If mkstat=2
 [M]NBRLIG(INDIC) = VALEUR
 Affzo NBRLIG(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_NBRLIG(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "NBRLIG" : GZNUM = 769 : Endif
Gosub _AFF
End

$ON_NBRCOL
Onevent CONTROL Call C_NBRCOL(zc) From W1GBS1
Return

Subprog C_NBRCOL(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_NBRINT
Onevent CONTROL Call C_NBRINT(zc) From W1GBS1
Return

Subprog C_NBRINT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "NBRINT" : GZNUM = 53169 : Endif
If !mkstat
 ## Action STD
 Call C_NBRINT(VALEUR) From SUBGBS
 If mkstat : GERR = 1 : GZONE = "NBRINT" : GZNUM = 53169 : Endif
Endif
Gosub _AFF
End

$ON_CURFLG
Onevent INIT_AREA Call D_CURFLG(zc) From W1GBS1
Onevent BEFORE_INPUT Call AS_CURFLG(zc) From W1GBS1
Return

Subprog D_CURFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CURFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CURFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CMT
Onevent INIT_AREA Call D_CMT(zc) From W1GBS1
Onevent BEFORE_INPUT Call AS_CMT(zc) From W1GBS1
Return

Subprog D_CMT(VALEUR)
Variable Integer VALEUR
If varinit([M]CMT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CMT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NUMLIG
Onevent BEFORE_AREA Gosub AV_NUMLIG From W1GBS1
Return

$AV_NUMLIG
zc = nolign
Gosub _AFF
Return

$ON_DAC
Onevent CONTROL Call C_DAC(zc) From W1GBS1
Return

Subprog C_DAC(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DAC(VALEUR) From SUBGBS
If mkstat : GERR = 1 : GZONE = "DAC" : GZNUM = 5626 : Endif
Gosub _AFF
End

$ON_TOTFLG
Onevent CONTROL Call C_TOTFLG(zc) From W1GBS1
Onevent INIT_AREA Call D_TOTFLG(zc) From W1GBS1
Onevent BEFORE_INPUT Call AS_TOTFLG(zc) From W1GBS1
Return

Subprog D_TOTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TOTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TOTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TOTFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_TOTFLG(VALEUR) From SUBGBS
If mkstat : GERR = 1 : GZONE = "TOTFLG" : GZNUM = 53398 : Endif
Gosub _AFF
End

$ON_REPGRA
Onevent CONTROL Call C_REPGRA(zc) From W1GBS1
Onevent INIT_AREA Call D_REPGRA(zc) From W1GBS1
Onevent BEFORE_INPUT Call AS_REPGRA(zc) From W1GBS1
Return

Subprog D_REPGRA(VALEUR)
Variable Integer VALEUR
If varinit([M]REPGRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REPGRA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2930) From COMBOS
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2930,1))))
Endif
If !mkstat
 Discombo 0 From REPGRA(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From REPGRA(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_REPGRA(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_REPGRA(VALEUR) From SUBGBS
If mkstat : GERR = 1 : GZONE = "REPGRA" : GZNUM = 27009 : Endif
Gosub _AFF
End

$ON_AFFGRA
Onevent INIT_AREA Call D_AFFGRA(zc) From W1GBS1
Return

Subprog D_AFFGRA(VALEUR)
Variable Integer VALEUR
If varinit([M]AFFGRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_POSGRA
Onevent INIT_AREA Call D_POSGRA(zc) From W1GBS1
Return

Subprog D_POSGRA(VALEUR)
Variable Integer VALEUR
If varinit([M]POSGRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FSHGRA
Onevent INIT_AREA Call D_FSHGRA(zc) From W1GBS1
Return

Subprog D_FSHGRA(VALEUR)
Variable Integer VALEUR
If varinit([M]FSHGRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPGRA
Onevent INIT_AREA Call D_TYPGRA(zc) From W1GBS1
Return

Subprog D_TYPGRA(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPGRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFGRA
Onevent INIT_AREA Call D_DEFGRA(zc) From W1GBS1
Onevent BEFORE_INPUT Call AS_DEFGRA(zc) From W1GBS1
Onevent CONTROL Call C_DEFGRA(zc) From W1GBS1
Return

Subprog D_DEFGRA(VALEUR)
Variable Integer VALEUR
If varinit([M]DEFGRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEFGRA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2933) From COMBOS
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2933,1))))
Endif
If !mkstat
 Discombo 0 From DEFGRA(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DEFGRA(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DEFGRA(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$CHG_STY
Return


