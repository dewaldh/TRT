#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan-Stock
# Supervisor
## CRUD-CLASSE ## CCMPLAITMDET
# 2018-08-27 13:12:40 494


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPITMDET [CCMITMD_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMPLAITMDET") From ASYRCOM : Endif
Local Instance CCMPLAITMDET Using R_CCMPLAITMDET

If !SILENCE : Call TRACE("3 --> New Instance R_CCMPLAITMDET") From ASYRCOM : Endif
CCMPLAITMDET = NewInstance R_CCMPLAITMDET AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMITMD_]CCMITD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPITMDET") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAITMDET.AREAD([CCMITMD_]CRID,[CCMITMD_]LINENO))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMPLAITMDET.CCMITMD.CRID ="-num$(CCMPLAITMDET.CCMITMD.CRID)) From ASYRCOM
 Call TRACE("CCMPLAITMDET.CCMITMD.LINENO ="-num$(CCMPLAITMDET.CCMITMD.LINENO)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMPLAITMDET.CCMITMD.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMPLAITMDET.CCMITMD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMITMD_]
FreeGroup CCMPLAITMDET
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMPLAITMDET,ACLE,ASTATUS,_ETAG)
Variable Instance CCMPLAITMDET Using R_CCMPLAITMDET
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File CCMIMPITMDET [CCMITMD]
Default File [F:CCMITMD]
Read [F:CCMITMD]CCMITD0 = [L]_CRID;[L]_LINENO
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMITMD]UPDTICK)>0
 [L]_ETAG = num$([F:CCMITMD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMPLAITMDET,ACLE,ASTATUS)
Variable Instance CCMPLAITMDET Using R_CCMPLAITMDET
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAITMDET.AREAD([L]_CRID,[L]_LINENO))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMPLAITMDET,_CRID,_LINENO,ASTATUS)
Variable Instance CCMPLAITMDET Using R_CCMPLAITMDET
Value Char _CRID
Value Shortint _LINENO
Variable Integer ASTATUS

If CCMPLAITMDET = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLAITMDET
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMPLAITMDET.APARENT=null
 [L]A_I = CCMPLAITMDET.freeSnapshot
 CCMPLAITMDET.snapshotEnabled = 0
 CCMPLAITMDET.setAccessorEnabled = 0
Endif

If fmet CCMPLAITMDET.ACTX.AGETAFCRIGHT(CCMPLAITMDET,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMITMD]
Read [F:CCMITMD]CCMITD0 = [L]_CRID;[L]_LINENO
If fstat
[L]A_ERROR = [L]_CRID+"~"+num$([L]_LINENO)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMPLAITMDET,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMPLAITMDET.ACTX.AGETAFCRIGHTR(CCMPLAITMDET,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMPLAITMDET.ACTX.ASTACRITROLE(CCMPLAITMDET,[L]_CRID+"~"+num$([L]_LINENO)
& ,"CCM","CCMITMD",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAITMDET.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMPLAITMDET.CCMITMD.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAITMDET.CCMITMD.AREAD([L]_CRID,[L]_LINENO))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAITMDET.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMPLAITMDET.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAITMDET._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMPLAITMDET.APARENT=null
 CCMPLAITMDET.snapshotEnabled = 1
 CCMPLAITMDET.setAccessorEnabled = 1
Endif
LogicClose File [CCMITMD]
End



