#<AdxTL>@(#)0.0.0.0 $Revision$Class List of queries
# Supervisor
## ACLA-CLASSE ## ASYRREQ
# 2018-08-27 12:22:47 009

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : ONE One single query ( Field Local menu number 1)
####################################################################

$SET_ONE
If [L]_AOLDVAL<>this.ONE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ONE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ONE
 Gosub PROPAGATE_ONE
Endif
Return

$INIT_ONE
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "ONE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ONE=0 and fmet this.AGETATTRIBUTE("ONE","$isMandatory")="true"
 this.ONE = 1
Endif
Return
 
$CONTROL_ONE
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "ONE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ONE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ONE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ONE
[L]CURPRO = "ONE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ONE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ONE
[L]CURPRO = "ONE"
If this.ONE<0 or this.ONE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ONE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ONE
[L]CURPRO = "ONE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ONE
[L]CURPRO = "ONE"
Return

$PROPAGATE_ONE
this.isReadonly = 0
[L]CURPRO = "ONE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ONE
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "ONE"
$_LNKPRO_ONE
Return


####################################################################
# 32 : CNTERR Proceed if error ( Field Local menu number 1)
####################################################################

$SET_CNTERR
If [L]_AOLDVAL<>this.CNTERR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CNTERR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CNTERR
 Gosub PROPAGATE_CNTERR
Endif
Return

$INIT_CNTERR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CNTERR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CNTERR=0 and fmet this.AGETATTRIBUTE("CNTERR","$isMandatory")="true"
 this.CNTERR = 1
Endif
Return
 
$CONTROL_CNTERR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CNTERR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CNTERR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CNTERR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CNTERR
[L]CURPRO = "CNTERR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CNTERR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CNTERR
[L]CURPRO = "CNTERR"
If this.CNTERR<0 or this.CNTERR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CNTERR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CNTERR
[L]CURPRO = "CNTERR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CNTERR
[L]CURPRO = "CNTERR"
Return

$PROPAGATE_CNTERR
this.isReadonly = 0
[L]CURPRO = "CNTERR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CNTERR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CNTERR"
$_LNKPRO_CNTERR
Return


####################################################################
# 33 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 34 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 35 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 36 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 37 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 38 : LAN Language ( Field LAN 3)
####################################################################

$SET_LAN
If [L]_AOLDVAL<>this.LAN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LAN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LAN
 Gosub PROPAGATE_LAN
Endif
Return

$INIT_LAN
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "LAN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LAN
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "LAN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LAN
[L]CURPRO = "LAN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LAN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LAN
[L]CURPRO = "LAN"
If vireblc(this.LAN,2)<>vireblc(format$("KTD:3B",this.LAN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LAN
[L]CURPRO = "LAN"
If vireblc(this.LAN,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPLAN.ACTRLREF(this,"LAN",this.LAN,this.LAN,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.LAN<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LAN
[L]CURPRO = "LAN"
Return

$PROPAGATE_LAN
this.isReadonly = 0
[L]CURPRO = "LAN"
Gosub _LNKPRO_LAN
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LAN
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "LAN"
$_LNKPRO_LAN
If vireblc(this.LAN,2)<>""
 # Link TABLAN
 Local File TABLAN [WTLA]
 Read [F:WTLA]TLA0 = this.LAN
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABLAN" & ZONE="INTSHO" & IDENT1=[F:WTLA]LAN & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LAN","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABLAN" & ZONE="INTDES" & IDENT1=[F:WTLA]LAN & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LAN","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTLA]
Endif
Return


####################################################################
# 39 : LANISO ISO code ( Field A 10)
####################################################################

$SET_LANISO
If [L]_AOLDVAL<>this.LANISO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LANISO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LANISO
 Gosub PROPAGATE_LANISO
Endif
Return

$INIT_LANISO
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "LANISO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LANISO
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "LANISO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LANISO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LANISO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LANISO
[L]CURPRO = "LANISO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LANISO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LANISO
[L]CURPRO = "LANISO"
Return

$_AOTHERS_LANISO
[L]CURPRO = "LANISO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LANISO
[L]CURPRO = "LANISO"
Return

$PROPAGATE_LANISO
this.isReadonly = 0
[L]CURPRO = "LANISO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LANISO
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "LANISO"
$_LNKPRO_LANISO
Return


####################################################################
# 40 : SERVER Server ( Field AMC 80)
####################################################################

$SET_SERVER
If [L]_AOLDVAL<>this.SERVER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SERVER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SERVER
 Gosub PROPAGATE_SERVER
Endif
Return

$INIT_SERVER
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "SERVER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SERVER
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "SERVER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SERVER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SERVER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SERVER
[L]CURPRO = "SERVER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SERVER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SERVER
[L]CURPRO = "SERVER"
If vireblc(this.SERVER,2)<>vireblc(format$("K:80X",this.SERVER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SERVER
[L]CURPRO = "SERVER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SERVER
[L]CURPRO = "SERVER"
Return

$PROPAGATE_SERVER
this.isReadonly = 0
[L]CURPRO = "SERVER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SERVER
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "SERVER"
$_LNKPRO_SERVER
Return


####################################################################
# 41 : PORT Port ( Field L 8)
####################################################################

$SET_PORT
If [L]_AOLDVAL<>this.PORT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PORT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PORT
 Gosub PROPAGATE_PORT
Endif
Return

$INIT_PORT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "PORT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PORT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "PORT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PORT                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PORT                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PORT
[L]CURPRO = "PORT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PORT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PORT
[L]CURPRO = "PORT"
Return

$_AOTHERS_PORT
[L]CURPRO = "PORT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PORT
[L]CURPRO = "PORT"
Return

$PROPAGATE_PORT
this.isReadonly = 0
[L]CURPRO = "PORT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PORT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "PORT"
$_LNKPRO_PORT
Return


####################################################################
# 42 : RECURRENT Recurring ( Field Local menu number 1)
####################################################################

$SET_RECURRENT
If [L]_AOLDVAL<>this.RECURRENT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RECURRENT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RECURRENT
 Gosub PROPAGATE_RECURRENT
Endif
Return

$INIT_RECURRENT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "RECURRENT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.RECURRENT=0 and fmet this.AGETATTRIBUTE("RECURRENT","$isMandatory")="true"
 this.RECURRENT = 1
Endif
Return
 
$CONTROL_RECURRENT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "RECURRENT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RECURRENT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RECURRENT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RECURRENT
[L]CURPRO = "RECURRENT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RECURRENT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RECURRENT
[L]CURPRO = "RECURRENT"
If this.RECURRENT<0 or this.RECURRENT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.RECURRENT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_RECURRENT
[L]CURPRO = "RECURRENT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RECURRENT
[L]CURPRO = "RECURRENT"
Return

$PROPAGATE_RECURRENT
this.isReadonly = 0
[L]CURPRO = "RECURRENT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RECURRENT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "RECURRENT"
$_LNKPRO_RECURRENT
Return


####################################################################
# 43 : MAISRV Main server ( Field Local menu number 1)
####################################################################

$SET_MAISRV
If [L]_AOLDVAL<>this.MAISRV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MAISRV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MAISRV
 Gosub PROPAGATE_MAISRV
Endif
Return

$INIT_MAISRV
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "MAISRV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MAISRV=0 and fmet this.AGETATTRIBUTE("MAISRV","$isMandatory")="true"
 this.MAISRV = 1
Endif
Return
 
$CONTROL_MAISRV
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "MAISRV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MAISRV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MAISRV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MAISRV
[L]CURPRO = "MAISRV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MAISRV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MAISRV
[L]CURPRO = "MAISRV"
If this.MAISRV<0 or this.MAISRV>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MAISRV)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MAISRV
[L]CURPRO = "MAISRV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MAISRV
[L]CURPRO = "MAISRV"
Return

$PROPAGATE_MAISRV
this.isReadonly = 0
[L]CURPRO = "MAISRV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MAISRV
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "MAISRV"
$_LNKPRO_MAISRV
Return


####################################################################
# 44 : TRARQT Log ( Field ARQTFIC 1)
####################################################################

$GET_TRARQT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "TRARQT"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_CLB("TRARQT",
& num$(this.NUMREQ)
& ,[L]_CNT,this.TRARQT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_TRARQT
If fmet this.AGETATTRIBUTE("TRARQT","$isLoaded")<>"true" or [L]_AOLDVAL<>this.TRARQT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRARQT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("TRARQT","$isLoaded")<>"true" or [L]_AOLDVAL<>this.TRARQT
 Gosub PROPAGATE_TRARQT
Endif
Return

$INIT_TRARQT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "TRARQT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRARQT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "TRARQT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRARQT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRARQT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRARQT
[L]CURPRO = "TRARQT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.TRARQT)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRARQT
[L]CURPRO = "TRARQT"
Return

$_AOTHERS_TRARQT
[L]CURPRO = "TRARQT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRARQT
[L]CURPRO = "TRARQT"
Return

$PROPAGATE_TRARQT
this.isReadonly = 0
[L]CURPRO = "TRARQT"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRARQT
Gosub DECLARE_VAR From WMC0ASYRREQ
[L]CURPRO = "TRARQT"
$_LNKPRO_TRARQT
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = func ASYRREQ_CSTD.GET_CLOBEXIST(this,"TRARQT",[L]_EXI,num$(this.NUMREQ))
[L]ASTATUS = fmet this.ASETATTRIBUTE("TRARQT","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Local Char _CNT(100)
[L]ASTATUS = func ASYRREQ_CSTD.GET_CLOBCNT(this,"TRARQT",[L]_CNT,num$(this.NUMREQ))
[L]ASTATUS = fmet this.ASETATTRIBUTE("TRARQT","$contentType",[L]_CNT)
Return




