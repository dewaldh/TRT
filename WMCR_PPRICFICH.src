#<AdxTL>@(#)0.0.0.0 $Revision$Class Supplier prices (records)
# Supervisor
## CRUD-CLASSE ## PPRICFICH
# 2018-08-27 12:42:07 774


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PPRICFICH [PPF_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PPRICFICH") From ASYRCOM : Endif
Local Instance PPRICFICH Using C_PPRICFICH

If !SILENCE : Call TRACE("3 --> New Instance C_PPRICFICH") From ASYRCOM : Endif
PPRICFICH = NewInstance C_PPRICFICH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PPF_]PPF0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PPRICFICH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PPRICFICH.AREAD([PPF_]PLI,[PPF_]PLICRD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PPRICFICH.PLI ="-num$(PPRICFICH.PLI)) From ASYRCOM
 Call TRACE("PPRICFICH.PLICRD ="-num$(PPRICFICH.PLICRD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PPRICFICH.AKEYS)
  Call TRACE("-"-num$(I)-":"-PPRICFICH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PPF_]
FreeGroup PPRICFICH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PPRICFICH,ACLE,ASTATUS,_ETAG)
Variable Instance PPRICFICH Using C_PPRICFICH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PLI(6)
Local Char _PLICRD(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PLI = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PLICRD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File PPRICFICH [PPF]
Default File [F:PPF]
Read [F:PPF]PPF0 = [L]_PLI;[L]_PLICRD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PPF]UPDTICK)>0
 [L]_ETAG = num$([F:PPF]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PPRICFICH,ACLE,ASTATUS)
Variable Instance PPRICFICH Using C_PPRICFICH
Value Char ACLE
Variable Integer ASTATUS
Local Char _PLI(6)
Local Char _PLICRD(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PLI = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PLICRD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PPRICFICH.AREAD([L]_PLI,[L]_PLICRD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PPRICFICH,_PLI,_PLICRD,ASTATUS)
Variable Instance PPRICFICH Using C_PPRICFICH
Value Char _PLI
Value Char _PLICRD
Variable Integer ASTATUS

If PPRICFICH = null : End : Endif

Gosub AVARIABLES From WMC00PPRICFICH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PPRICFICH.APARENT=null
 [L]A_I = PPRICFICH.freeSnapshot
 PPRICFICH.snapshotEnabled = 0
 PPRICFICH.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PPRICFICH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PPRICFICH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PPRICFICH.APARENT=null
 PPRICFICH.snapshotEnabled = 1
 PPRICFICH.setAccessorEnabled = 1
Endif
LogicClose File [PPF]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PPRICFICH._ACTION_PARAM("AREAD_BEFORE",[L]_PLI,[L]_PLICRD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PPF]
Read [F:PPF]PPF0 = [L]_PLI;[L]_PLICRD
If fstat
[L]A_ERROR = [L]_PLI+"~"+[L]_PLICRD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PPRICFICH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PPF]AUUID)>0 & [F:PPF]AUUID=NullUuid
 [F:PPF]AUUID = getUuid
Endif
SetInstance PPRICFICH With [F:PPF]
PPRICFICH.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PPRICFICH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PPRICCONF" & ZONE="DESAXX" & IDENT1=PPRICFICH.PLI & IDENT2=""
 Call ASETTEXTRA(PPRICFICH.AXX,PPRICFICH.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PPRICFICH.AXX(maxtab(PPRICFICH.AXX)).FLG = 0
Next AXX
If !len(fmet PPRICFICH.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(PPRICFICH.AXX,PPRICFICH.AllocGrp(),"DESAXX",
& fmet PPRICFICH.AGETTEXTRALAN("DESAXX",PPRICFICH.ACTX.AFOLD.ALANGDEF),
& PPRICFICH.ACTX.LAN) From ASYRSUB
Endif

Return



