#<AdxTL>@(#)0.0.0.0 $Revision$Class Project users
# Supervisor
## CRUD-CLASSE ## PJMAUS
# 2018-08-27 12:39:44 644


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMAUS [PAUS_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMAUS") From ASYRCOM : Endif
Local Instance PJMAUS Using C_PJMAUS

If !SILENCE : Call TRACE("3 --> New Instance C_PJMAUS") From ASYRCOM : Endif
PJMAUS = NewInstance C_PJMAUS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PAUS_]PAUS First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMAUS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMAUS.AREAD([PAUS_]PAUS))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMAUS.PAUS ="-num$(PJMAUS.PAUS)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMAUS.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMAUS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PAUS_]
FreeGroup PJMAUS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMAUS,ACLE,ASTATUS,_ETAG)
Variable Instance PJMAUS Using C_PJMAUS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PAUS(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PAUS = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PJMAUS [PAUS]
Default File [F:PAUS]
Read [F:PAUS]PAUS = [L]_PAUS
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PAUS]UPDTICK)>0
 [L]_ETAG = num$([F:PAUS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMAUS,ACLE,ASTATUS)
Variable Instance PJMAUS Using C_PJMAUS
Value Char ACLE
Variable Integer ASTATUS
Local Char _PAUS(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PAUS = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMAUS.AREAD([L]_PAUS))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMAUS,_PAUS,ASTATUS)
Variable Instance PJMAUS Using C_PJMAUS
Value Char _PAUS
Variable Integer ASTATUS

If PJMAUS = null : End : Endif

Gosub AVARIABLES From WMC00PJMAUS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMAUS.APARENT=null
 [L]A_I = PJMAUS.freeSnapshot
 PJMAUS.snapshotEnabled = 0
 PJMAUS.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMAUS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMAUS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMAUS.APARENT=null
 PJMAUS.snapshotEnabled = 1
 PJMAUS.setAccessorEnabled = 1
Endif
LogicClose File [PAUS]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMAUS._ACTION_PARAM("AREAD_BEFORE",[L]_PAUS))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PAUS]
Read [F:PAUS]PAUS = [L]_PAUS
If fstat
[L]A_ERROR = [L]_PAUS
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMAUS,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PAUS]AUUID)>0 & [F:PAUS]AUUID=NullUuid
 [F:PAUS]AUUID = getUuid
Endif
SetInstance PJMAUS With [F:PAUS]
PJMAUS.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMAUS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



