#<AdxTL>@(#)0.0.0.0 $Revision$ 
###################################################################################################
# Script            : YAUTBIL                                                                     #
# Creation date     : 27/06/2018                                                                  #
# Version           : 1.0.0                                                                       #
# Authors (Company) : JLR (Leverage)                                                              #
# Module            : Supervisor                                                                  #
# ------------------------------------------------------------------------------------------------#
# Description       : Housing Jobs - Automatic Billing                                            #
#-------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DDP-21                              #
# Specification     : https://confluence.leveragetech.com.au/display/X3DFCDEV1/Housing            #
# JIRA Issue        : DFCX1-70                                                                    #
###################################################################################################
Gosub EXEC
End

$ACTION
Case ACTION
  When "EXEC"            : Gosub EXEC
  When Default
Endcase

Return


######################################################################################
$EXEC

  #Check Housing and Housing Billing Activity Codes are active
  If not(func AFNC.ACTIV("YHOU") = 1 and func AFNC.ACTIV("YHOUB") = 1)
    Call ECR_TRACE(mess(33,6251,1), 0) From GESECRAN
    End
  Endif

  #Open masks and tables
  Gosub OPEN_TABLES

  #Get Housing Jobs where Auto Invoice = 2 and Job (Dimension) is Active and Issued Price > 0
  Local Char REQUEST(255)(10)

  REQUEST(0) = "SELECT YJBNR_0, YCUSNO_0, YCPY_0, YISSPRCINC_0, YJBCOD_0 FROM ("
  REQUEST(1) = "SELECT t0.YJBNR_0, t0.YCUSNO_0, t0.YCPY_0, t0.YJBCOD_0, t2.YISSPRCINC_0, "
  REQUEST(2) = "(SELECT COUNT(*) FROM YHOUJSTA it WHERE it.YJBNR_0 = t0.YJBNR_0 AND it.YACTCMPDAT_0 <> '1753/01/01' AND it.YINVNUM_0 = '' AND YINVSTAGE_0 = YSTANBR_0) [UNBILLEDSTAGES] "
  REQUEST(3) = "FROM YHOUJDET t0 "
  REQUEST(4) = "JOIN CACCE t1 ON t0.YJBNR_0 = t1.CCE_0 AND t1.DIE_0 = 'HJB' "
  REQUEST(5) = "JOIN YHOUJFIN t2 ON t0.YJBNR_0 = t2.YJBNR_0 "
  REQUEST(6) = "WHERE t0.YAUTINV_0 = 2 AND t1.ENAFLG_0 = 2 AND t2.YISSPRCINC_0 > 0 "
  REQUEST(7) = ") DRV "
  REQUEST(8) = "WHERE UNBILLEDSTAGES > 0 "
  REQUEST(9) = "ORDER BY YJBNR_0 "

  Local Char FNAME (250)

  #Write the file
  FNAME = filpath("","","")+"\EDI\IMPORT\YAUTBILBIC_"+format$("D:YYYYMMDD[_]hhmm", date$)+".txt"

  Openo FNAME, 0 Using [WF]
  adxifs = ";"
  adxirs = chr$(13)+chr$(10)

  Local Integer DOCS : DOCS = 0
  For (Char JOBNUMBER(15), Char CUSTNO(15), Char COMPANY(5), Decimal CONTRAMT, Char JOBCODE) From "5" Sql REQUEST As [YJOBS]

    #Check if Housing Job record is in use
    Local Char REQUEST2(255)(10)
    REQUEST2(0) = "SELECT LCKSYM_0 "
    REQUEST2(1) = "FROM APLLCK "
    REQUEST2(2) = "WHERE LCKSYM_0 = 'YHJD~" + [YJOBS]JOBNUMBER + "' AND LCKDAT_0 >= '" + format$("D:YYYY[-]MM[-]DD", date$) + "'"

    Local Integer RECORD_LOCKED : RECORD_LOCKED = 1 #No

    For (Char LOCKSYM(250)) From "5" Sql REQUEST2 As [YLOCK]
      RECORD_LOCKED = 2 #Yes
      Call ECR_TRACE("Job " + [F:YJOBS]JOBNUMBER + " in use. Cannot process Billing", 0) From GESECRAN
      Break
    Next #[YLOCK]

    If RECORD_LOCKED = 1 #No

      #Check if Housing Job has Project (Job Type)
      If [YJOBS]JOBCODE = ""
        Call ECR_TRACE("Job " + [F:YJOBS]JOBNUMBER + " has no Job Type (Project). Cannot process Billing", 0) From GESECRAN
        Break
      Endif

      #Get Invoice at Stages
      Local Char REQUEST1(255)(10)

      REQUEST1(0) = "SELECT t0.YINVSTAGE_0 "
      REQUEST1(1) = "FROM YHOUJSTA t0 "
      REQUEST1(2) = "WHERE YJBNR_0 = '" + [YJOBS]JOBNUMBER + "' AND YACTCMPDAT_0 <> '1753/01/01' AND YINVNUM_0 = '' AND YINVSTAGE_0 = YSTANBR_0 "
      REQUEST1(3) = "GROUP BY YINVSTAGE_0 "
      REQUEST1(4) = "ORDER BY YINVSTAGE_0 "

      For (Integer INVATSTAGE) From "5" Sql REQUEST1 As [YSTAGES]

        Filter [F:YHJS] #Clear Filter
        Filter [F:YHJS] Where [F:YHJS]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJS]YACTCMPDAT <> [00/00/0000] and [F:YHJS]YINVSTAGE = [YSTAGES]INVATSTAGE and [F:YHJS]YINVNUM = '' Order By [F:YHJS]YSTANBR
        For [F:YHJS]

          #Check for Unapproved Variations for the Stage
          Local Integer UNAPPROVED_VARIATIONS : UNAPPROVED_VARIATIONS = 0

          Filter [F:YHJV] #Clear Filter
          Filter [F:YHJV] Where [F:YHJV]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJV]YSTAGEDUE = [F:YHJS]YSTANBR
          For [F:YHJV]

            If [F:YHJV]YSTA = 1
              UNAPPROVED_VARIATIONS = 1
              Call ECR_TRACE(func AFNC.MES2(mess(1,6251,1), [F:YJOBS]JOBNUMBER, num$([F:YHJS]YSTANBR)), 0) From GESECRAN
              Break #[F:YHJV]
            Endif

          Next #[F:YHJV]

          If UNAPPROVED_VARIATIONS = 0
            #Gosub CREATE_DOC_WS
            Gosub CREATE_DOC_FI
          Endif

        Next #[F:YHJS]

      Next #[F:YSTAGES]

    Endif

  Next #[F:YJOBS]

  #Clear Filters
  Filter [F:YHJS]
  Filter [F:YHJV]

  Openo Using [WF]

  # Call the Import Template for BIC Customer Invoice
  Call IMPORTSIL("YAUTBILBIC", FNAME) From GIMPOBJ

  #Remove files
  Local Integer STAT
  Call SYSTEME (adxmac(1), 'ae_rm ' + FNAME,"", STAT) From ORDSYS
  Call SYSTEME (adxmac(1), 'ae_rm ' + FNAME + ".err","", STAT) From ORDSYS

  #Call ECR_TRACE(func AFNC.MES1(mess(2,6251,1), num$(DOCS)), 0) From GESECRAN

  #Close masks and tables
  Gosub CLOSE_TABLES

Return


###########################################################################################
$OPEN_TABLES

  If !clalev ([F:YHJS])   : Local File YHOUJSTA   [F:YHJS]  : Endif
  If !clalev ([F:YHJV])   : Local File YHOUJVAR   [F:YHJV]  : Endif
  If !clalev ([F:YSIN])   : Local File SINVOICE   [F:YSIN]  : Endif
  If !clalev ([F:YTAX])   : Local File TABRATVAT  [F:YTAX]  : Endif
  If !clalev ([F:YCPY])   : Local File COMPANY    [F:YCPY]  : Endif
  If !clalev ([F:YFCY])   : Local File FACILITY   [F:YFCY]  : Endif
  If !clalev ([F:YPRM])   : Local File ADOVAL     [F:YPRM]  : Endif
  If !clalev ([F:YPJM])   : Local File OPPORPJM   [F:YPJM]  : Endif

Return


###########################################################################################
$CLOSE_TABLES

  If clalev([F:YHJS])     : Close Local File [F:YHJS]     : Endif
  If clalev([F:YHJV])     : Close Local File [F:YHJV]     : Endif
  If clalev([F:YSIN])     : Close Local File [F:YSIN]     : Endif
  If clalev([F:YTAX])     : Close Local File [F:YTAX]     : Endif
  If clalev([F:YCPY])     : Close Local File [F:YCPY]     : Endif
  If clalev([F:YFCY])     : Close Local File [F:YFCY]     : Endif
  If clalev([F:YPRM])     : Close Local File [F:YPRM]     : Endif
  If clalev([F:YPJM])     : Close Local File [F:YPJM]     : Endif

Return


###########################################################################################
$CREATE_DOC_WS

  Local Char INVTYPE(4),CRNTYPE(4), VATTYPE(4), GLACC(15), INVDES(30)
  Local Decimal DOCAMT : DOCAMT = 0
  Local Decimal LINEAMT : LINEAMT = 0
  Local Integer NUMLINES : NUMLINES = 1

  VATTYPE = "SGST"
  INVTYPE = "HINV"
  CRNTYPE = "HCRN"
  GLACC   = ""
  INVDES  = ""

  Read [F:YPRM]ADW0 = "";"";"YHBILLGL"

  If fstat = 0
    GLACC   = [F:YPRM]VALEUR
  Endif

  Read [F:YPRM]ADW0 = "";"";"YHINVDES"

  If fstat = 0
    INVDES   = [F:YPRM]VALEUR
  Endif

  If GLACC <> ""

    # Declare webservice variables
    Gosub DEFVAR From WJYWSBIC

    WW_ACTION = "CREATE"

    # Load all values for document creation
    Read [F:YCPY]CPY0 = [F:YJOBS]COMPANY

    If [F:YCPY]MAIFCY <> ""
      FCY_A = [F:YCPY]MAIFCY
    Else
      FCY_A = [F:YJOBS]COMPANY + "-1"
    Endif

    #Get VAT rate
    Local Decimal VATRATE : VATRATE = 0

    Filter [F:YTAX] Where [F:YTAX]VAT = VATTYPE Order By [F:YTAX]CPY Desc;[F:YTAX]LEG Desc;[F:YTAX]STRDAT Desc
    For [F:YTAX]
      If [F:YTAX]CPY = [F:YCPY]CPY and [F:YTAX]LEG = [F:YCPY]LEG and date$ >= [F:YTAX]STRDAT
        VATRATE = [F:YTAX]VATRAT
        Break
      Elsif [F:YTAX]CPY = "" and [F:YTAX]LEG = [F:YCPY]LEG and date$ >= [F:YTAX]STRDAT
        VATRATE = [F:YTAX]VATRAT
        Break
      Elsif [F:YTAX]CPY = "" and [F:YTAX]LEG = "" and date$ >= [F:YTAX]STRDAT
        VATRATE = [F:YTAX]VATRAT
        Break
      Endif
    Next
    Filter [F:YTAX] #Clear Filter

    #Dimensions

    #Read Project to populate CCE1
    Read [F:YPJM]OPPPJM0 = [F:YJOBS]JOBCODE

    Local Char CCE1(5) : CCE1 = ""
    Local Char CCE2(5) : CCE2 = ""
    Local Char CCE3(5) : CCE3 = ""
    Local Char CCE4(5) : CCE4 = ""
    Local Char CCE5(5) : CCE5 = ""

    If fstat = 0
      CCE1 = [F:YPJM]CCE(0) #Business Group
      CCE3 = [F:YPJM]CCE(2) #Job Number
      CCE4 = [F:YPJM]CCE(3) #Cost Centre
    Endif

    CCE1_2(NUMLINES-1) = CCE1
    CCE2_2(NUMLINES-1) = CCE2
    CCE3_2(NUMLINES-1) = CCE3
    CCE4_2(NUMLINES-1) = CCE4
    CCE5_2(NUMLINES-1) = CCE5

    #Check if its the Final stage
    Local Char REQUEST2(255)
    REQUEST2 = "SELECT MAX(YSTANBR_0) [FINALSTG], SUM(YAMTCLM_0) [TOTCML] FROM YHOUJSTA t0 WHERE YJBNR_0 = '" + [YJOBS]JOBNUMBER + "' "

    Local Integer ISFINAL : ISFINAL = 1 #NO
    Local Decimal TOTAL_CLAIMED : TOTAL_CLAIMED = 0
    For (Integer FINALSTG, Decimal TOTCLAIM) From "5" Sql REQUEST2 As [YFINSTG]
      If [YFINSTG]FINALSTG = [F:YHJS]YSTANBR
        ISFINAL = 2 #YES
        TOTAL_CLAIMED = [YFINSTG]TOTCLAIM
      Endif
    Next

    #Stage line
    ACC1_2(NUMLINES-1) = GLACC

    If ISFINAL = 1
      AMTATILIN_2(NUMLINES-1) = [F:YHJS]YAMTINCGST
      AMTNOTLIN_2(NUMLINES-1) = arr([F:YHJS]YAMTINCGST / (1+(VATRATE / 100)),0.01)
      DOCAMT = [F:YHJS]YAMTINCGST
    Else
      AMTATILIN_2(NUMLINES-1) = [YJOBS]CONTRAMT - TOTAL_CLAIMED
      AMTNOTLIN_2(NUMLINES-1) = arr(([YJOBS]CONTRAMT - TOTAL_CLAIMED) / (1+(VATRATE / 100)),0.01)
      DOCAMT = [YJOBS]CONTRAMT - TOTAL_CLAIMED
    Endif

    VAT_2(NUMLINES-1) = VATTYPE
    DES_2(NUMLINES-1) = "Stage " + num$([F:YHJS]YSTANBR)

    #Get Approved variation totals for stage
    Filter [F:YHJV] #Clear Filter
    Filter [F:YHJV] Where [F:YHJV]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJV]YSTAGEDUE = [F:YHJS]YSTANBR and [F:YHJV]YSTA = 2 and [F:YHJV]YVINVNUM = ""
    For [F:YHJV]

      Local Integer VARINVEXISTS : VARINVEXISTS = 1

      #Check if there is an INV number and it exists
      If [F:YHJV]YVINVNUM <> ""

        Read [F:YSIN]SIH0 = [F:YHJV]YVINVNUM

        If fstat = 5

          #Reset Variation Invoice details if no Document found, possibly caused by an orphaned document. Can happen if user Deletes Invoice in Housing Jobs, but doesn't Click Save!!
          Raz [F:YHJV]YVAMTCLM
          Raz [F:YHJV]YVDATCLM
          Raz [F:YHJV]YVINVNUM

          Rewrite [F:YHJV]

          If fstat = 0
            VARINVEXISTS = 0
          Else
            Call ECR_TRACE("Automatic Billing - " + func AFNC.MES2(mess(34,6251,1), num$([F:YHJV]YVARNUM), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
          Endif
        Endif
      Else
        VARINVEXISTS = 0
      Endif

      If VARINVEXISTS = 0

        DOCAMT += [F:YHJV]YAMTINC
        LINEAMT = [F:YHJV]YAMTINC
        NUMLINES += 1
        ACC1_2(NUMLINES-1) = GLACC
        AMTNOTLIN_2(NUMLINES-1) = arr(LINEAMT / (1+(VATRATE / 100)),0.01)
        AMTATILIN_2(NUMLINES-1) = LINEAMT
        VAT_2(NUMLINES-1) = VATTYPE
        DES_2(NUMLINES-1) = "Variation " + [F:YHJV]YVARNUM

        #Dimensions
        CCE1_2(NUMLINES-1) = CCE1
        CCE2_2(NUMLINES-1) = CCE2
        CCE3_2(NUMLINES-1) = CCE3
        CCE4_2(NUMLINES-1) = CCE4
        CCE5_2(NUMLINES-1) = CCE5

      Endif

    Next #[F:YHJV]

    NBLIG_2 = NUMLINES

    If DOCAMT >= 0
      SIVTYP_A = INVTYPE
    Else
      SIVTYP_A = CRNTYPE

      #Invert amounts if negative (Credit note)
      DOCAMT = DOCAMT * -1

      For K=1 To NUMLINES
        AMTNOTLIN_2(K-1) = AMTNOTLIN_2(K-1) * -1
        AMTATILIN_2(K-1) = AMTATILIN_2(K-1) * -1
      Next K

    Endif

    ACCDAT_A = date$
    BPR_A = [F:YJOBS]CUSTNO
    BPRSAC_A = "DR"

    #Won't update following three fields if marked as DISPLAY in screen BIC0
    YJBNR_A = [F:YJOBS]JOBNUMBER
    YSTANBR_A = [F:YHJS]YSTANBR
    #YSTASUPP_A = 2 #Supress statement printing

    AMTNOT_B = arr(DOCAMT / (1+(VATRATE / 100)),0.01)
    AMTATI_B = DOCAMT

    STRDUDDAT_B = date$
    STA_B = 1
    DES_B(0) = left$(INVDES,30)

    #Don't create a Document if Stage = $0.00 and there are no variations
    If DOCAMT = 0 and NUMLINES = 1

      #Update Stage Record
      [F:YHJS]YAMTCLM = [F:YHJS]YAMTINCGST
      [F:YHJS]YDATCLM = date$
      [F:YHJS]YINVNUM = "NO INVOICE"

      Rewrite [F:YHJS]

      If [S]fstat <> 0
        Call ECR_TRACE(func AFNC.MES2(mess(4,6251,1), num$([F:YHJS]YSTANBR), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
      Endif

      #Update Variation Records
      Filter [F:YHJV] #Clear Filter
      Filter [F:YHJV] Where [F:YHJV]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJV]YSTAGEDUE = [F:YHJS]YSTANBR and [F:YHJV]YSTA = 2 and [F:YHJV]YVINVNUM = ""
      For [F:YHJV]

        [F:YHJV]YVAMTCLM = [F:YHJV]YAMTINC
        [F:YHJV]YVDATCLM = date$
        [F:YHJV]YVINVNUM = "NO INVOICE"

        Rewrite [F:YHJV]

        If [S]fstat <> 0
          Call ECR_TRACE(func AFNC.MES2(mess(34,6251,1), num$([F:YHJV]YVARNUM), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
        Endif

      Next

    Else

    #Force a header / details mismatch so it creates the INVOICE
      If DOCAMT = 0
        DOCAMT = 1
      Endif

      Gosub WEBSERV From WJYWSBIC
      Sleep 1

      # Read record
      Read[F:YSIN]SIH0 = NUM_A

      If [S]fstat = 0

        DOCS+=1
        Call ECR_TRACE(func AFNC.MES3(mess(3,6251,1), [F:YSIN]NUM, [F:YJOBS]JOBNUMBER, num$([F:YHJS]YSTANBR)), 0) From GESECRAN

        #Update Stage Record
        If ISFINAL=1
          [F:YHJS]YAMTCLM = [F:YHJS]YAMTINCGST
        Else
          [F:YHJS]YAMTCLM = [YJOBS]CONTRAMT - TOTAL_CLAIMED
        Endif
        #[F:YHJS]YAMTCLM = [F:YSIN]AMTATI
        [F:YHJS]YDATCLM = [F:YSIN]ACCDAT
        [F:YHJS]YINVNUM = [F:YSIN]NUM

        Rewrite [F:YHJS]

        If [S]fstat <> 0
          Call ECR_TRACE(func AFNC.MES2(mess(4,6251,1), num$([F:YHJS]YSTANBR), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
        Endif

        #Update Variation Records
        Filter [F:YHJV] #Clear Filter
        Filter [F:YHJV] Where [F:YHJV]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJV]YSTAGEDUE = [F:YHJS]YSTANBR and [F:YHJV]YSTA = 2 and [F:YHJV]YVINVNUM = ""
        For [F:YHJV]

          [F:YHJV]YVAMTCLM = [F:YHJV]YAMTINC
          [F:YHJV]YVDATCLM = [F:YSIN]ACCDAT
          [F:YHJV]YVINVNUM = [F:YSIN]NUM

          Rewrite [F:YHJV]

          If [S]fstat <> 0
            Call ECR_TRACE(func AFNC.MES2(mess(34,6251,1), num$([F:YHJV]YVARNUM), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
          Endif

        Next
      Else
        Call ECR_TRACE(func AFNC.MES2(mess(5,6251,1), [F:YJOBS]JOBNUMBER, num$([F:YHJS]YSTANBR)) + " - " +
& WW_MESS(1) + " " + WW_MESS(2) + " " + WW_MESS(3) + " " + WW_MESS(4) + " " + WW_MESS(5), 0) From GESECRAN

        WW_OK = -1
        WW_GRAVE = 0
        WW_MESS(1) = ""
        WW_MESS(2) = ""
        WW_MESS(3) = ""
        WW_MESS(4) = ""
        WW_MESS(5) = ""

      Endif

    Endif

  Else
    Call ECR_TRACE(func AFNC.MES1(mess(32,6251,1), "YHBILLGL"), 0) From GESECRAN
  Endif

Return

###########################################################################################
$CREATE_DOC_FI

  Local Char INVTYPE(4), CRNTYPE(4), VATTYPE(4), GLACC(15), INVDES(30), FCY(5)
  Local Decimal DOCAMT : DOCAMT = 0
  Local Decimal LINEAMT : LINEAMT = 0
  Local Integer NUMLINES : NUMLINES = 1

  VATTYPE = "SGST"
  INVTYPE = "HINV"
  CRNTYPE = "HCRN"
  GLACC   = ""
  INVDES  = ""

  Read [F:YPRM]ADW0 = "";"";"YHBILLGL"

  If fstat = 0
    GLACC   = [F:YPRM]VALEUR
  Endif

  Read [F:YPRM]ADW0 = "";"";"YHINVDES"

  If fstat = 0
    INVDES   = [F:YPRM]VALEUR
  Endif

  If GLACC <> ""

    # Load all values for document creation
    Read [F:YCPY]CPY0 = [F:YJOBS]COMPANY

    If [F:YCPY]MAIFCY <> ""
      FCY = [F:YCPY]MAIFCY
    Else
      FCY = [F:YJOBS]COMPANY + "-1"
    Endif

    #Get VAT rate
    Local Decimal VATRATE : VATRATE = 0

    Filter [F:YTAX] Where [F:YTAX]VAT = VATTYPE Order By [F:YTAX]CPY Desc;[F:YTAX]LEG Desc;[F:YTAX]STRDAT Desc
    For [F:YTAX]
      If [F:YTAX]CPY = [F:YCPY]CPY and [F:YTAX]LEG = [F:YCPY]LEG and date$ >= [F:YTAX]STRDAT
        VATRATE = [F:YTAX]VATRAT
        Break
      Elsif [F:YTAX]CPY = "" and [F:YTAX]LEG = [F:YCPY]LEG and date$ >= [F:YTAX]STRDAT
        VATRATE = [F:YTAX]VATRAT
        Break
      Elsif [F:YTAX]CPY = "" and [F:YTAX]LEG = "" and date$ >= [F:YTAX]STRDAT
        VATRATE = [F:YTAX]VATRAT
        Break
      Endif
    Next
    Filter [F:YTAX] #Clear Filter

    #Dimensions

    #Read Project to populate CCE1
    Read [F:YPJM]OPPPJM0 = [F:YJOBS]JOBCODE

    Local Char DIE1(5), DIE2(5), DIE3(5), DIE4(5), DIE5(5)
    Local Char CCE1(5), CCE2(5), CCE3(5), CCE4(5), CCE5(5)

    If fstat = 0
      DIE1 = [F:YPJM]DIE(0) #Business Group
      DIE2 = [F:YPJM]DIE(1) #
      DIE3 = [F:YPJM]DIE(2) #Job Number
      DIE4 = [F:YPJM]DIE(3) #Cost Centre
      DIE5 = [F:YPJM]DIE(4) #

      CCE1 = [F:YPJM]CCE(0) #Business Group
      CCE2 = [F:YPJM]CCE(1) #
      CCE3 = [F:YPJM]CCE(2) #Job Number
      CCE4 = [F:YPJM]CCE(3) #Cost Centre
      CCE5 = [F:YPJM]CCE(4) #
    Endif

    #Check if its the Final stage
    Local Char REQUEST2(255)
    REQUEST2 = "SELECT MAX(YSTANBR_0) [FINALSTG], SUM(YAMTCLM_0) [TOTCML] FROM YHOUJSTA t0 WHERE YJBNR_0 = '" + [YJOBS]JOBNUMBER + "' "

    Local Integer ISFINAL : ISFINAL = 1 #NO
    Local Decimal TOTAL_CLAIMED : TOTAL_CLAIMED = 0
    For (Integer FINALSTG, Decimal TOTCLAIM) From "5" Sql REQUEST2 As [YFINSTG]
      If [YFINSTG]FINALSTG = [F:YHJS]YSTANBR
        ISFINAL = 2 #YES
        TOTAL_CLAIMED = [YFINSTG]TOTCLAIM
      Endif
    Next

    #Stage line
    Local Decimal AMTATILIN_2(0..299), AMTNOTLIN_2(0..299)
    Local Char LINEDES(50)(0..299)

    If ISFINAL = 1
      AMTATILIN_2(NUMLINES-1) = [F:YHJS]YAMTINCGST
      AMTNOTLIN_2(NUMLINES-1) = arr([F:YHJS]YAMTINCGST / (1+(VATRATE / 100)),0.01)
      DOCAMT = [F:YHJS]YAMTINCGST
    Else
      AMTATILIN_2(NUMLINES-1) = [YJOBS]CONTRAMT - TOTAL_CLAIMED
      AMTNOTLIN_2(NUMLINES-1) = arr(([YJOBS]CONTRAMT - TOTAL_CLAIMED) / (1+(VATRATE / 100)),0.01)
      DOCAMT = [YJOBS]CONTRAMT - TOTAL_CLAIMED
    Endif

    LINEDES(NUMLINES-1) = "Stage " + num$([F:YHJS]YSTANBR)

    #Get Approved variation totals for stage
    Filter [F:YHJV] #Clear Filter
    Filter [F:YHJV] Where [F:YHJV]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJV]YSTAGEDUE = [F:YHJS]YSTANBR and [F:YHJV]YSTA = 2 and [F:YHJV]YVINVNUM = ""
    For [F:YHJV]

      Local Integer VARINVEXISTS : VARINVEXISTS = 1

      #Check if there is an INV number and it exists
      If [F:YHJV]YVINVNUM <> ""

        Read [F:YSIN]SIH0 = [F:YHJV]YVINVNUM

        If fstat = 5

          #Reset Variation Invoice details if no Document found, possibly caused by an orphaned document. Can happen if user Deletes Invoice in Housing Jobs, but doesn't Click Save!!
          Raz [F:YHJV]YVAMTCLM
          Raz [F:YHJV]YVDATCLM
          Raz [F:YHJV]YVINVNUM

          Rewrite [F:YHJV]

          If fstat = 0
            VARINVEXISTS = 0
          Else
            Call ECR_TRACE("Automatic Billing - " + func AFNC.MES2(mess(34,6251,1), num$([F:YHJV]YVARNUM), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
          Endif
        Endif
      Else
        VARINVEXISTS = 0
      Endif

      If VARINVEXISTS = 0

        DOCAMT += [F:YHJV]YAMTINC
        LINEAMT = [F:YHJV]YAMTINC
        NUMLINES += 1

        AMTATILIN_2(NUMLINES-1) = LINEAMT
        AMTNOTLIN_2(NUMLINES-1) = arr(LINEAMT / (1+(VATRATE / 100)),0.01)
        LINEDES(NUMLINES-1) = "Variation " + [F:YHJV]YVARNUM

      Endif

    Next #[F:YHJV]

    Local Char SIVTYP_A(30)

    If DOCAMT >= 0
      SIVTYP_A = INVTYPE
    Else
      SIVTYP_A = CRNTYPE

      #Invert amounts if negative (Credit note)
      DOCAMT = DOCAMT * -1

      For K=1 To NUMLINES
        AMTNOTLIN_2(K-1) = AMTNOTLIN_2(K-1) * -1
        AMTATILIN_2(K-1) = AMTATILIN_2(K-1) * -1
      Next K

    Endif

    #Don't create a Document if Stage = $0.00 and there are no variations
    If DOCAMT = 0 and NUMLINES = 1

      #Update Stage Record
      [F:YHJS]YAMTCLM = [F:YHJS]YAMTINCGST
      [F:YHJS]YDATCLM = date$
      [F:YHJS]YINVNUM = "NO INVOICE"

      Rewrite [F:YHJS]

      If [S]fstat <> 0
        Call ECR_TRACE(func AFNC.MES2(mess(4,6251,1), num$([F:YHJS]YSTANBR), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
      Endif

      #Update Variation Records
      Filter [F:YHJV] #Clear Filter
      Filter [F:YHJV] Where [F:YHJV]YJBNR = [F:YJOBS]JOBNUMBER and [F:YHJV]YSTAGEDUE = [F:YHJS]YSTANBR and [F:YHJV]YSTA = 2 and [F:YHJV]YVINVNUM = ""
      For [F:YHJV]

        [F:YHJV]YVAMTCLM = [F:YHJV]YAMTINC
        [F:YHJV]YVDATCLM = date$
        [F:YHJV]YVINVNUM = "NO INVOICE"

        Rewrite [F:YHJV]

        If [S]fstat <> 0
          Call ECR_TRACE(func AFNC.MES2(mess(34,6251,1), num$([F:YHJV]YVARNUM), [F:YJOBS]JOBNUMBER), 0) From GESECRAN
        Endif

      Next

    Else

      #Force a header / details mismatch so it creates the INVOICE
      If DOCAMT = 0
        DOCAMT = 1
      Endif

      # Header SINVOICE
      # T;SIVTYP;BPR;CPY;FCY;ACCDAT;STRUDDAT;AMTNOT;AMTATI;STA;BPRSAC;DES;YJBNR;YSTANBR;VAC
      Wrseq '"T"', '"' + SIVTYP_A + '"','"' + [F:YJOBS]CUSTNO + '"', '"AUD"','"'+ [F:YJOBS]COMPANY+'"', '"'+FCY+'"','"'+ format$("D:MMDDYYYY", date$)+'"','"'+ format$("D:MMDDYYYY", date$)+'"',
& '"'+num$(arr(DOCAMT / (1+(VATRATE / 100)),0.01))+'"', '"'+num$(DOCAMT)+'"', '"1"', '"DR"', '"'+left$(INVDES,30)+'"',
& '"'+[F:YJOBS]JOBNUMBER+'"','"'+ num$([F:YHJS]YSTANBR)+'"','"'+ VATTYPE+'"' Using [WF]

      For D=1 To NUMLINES

        # Line BPCINVLIG
        # D;ACC(0);AMTNOTLIN;AMTATILIN;VAT;DES
        Wrseq '"D"','"'+GLACC+'"', '"'+num$(AMTNOTLIN_2(D-1))+'"','"'+ num$(AMTATILIN_2(D-1))+'"','"'+ VATTYPE+'"', '"'+LINEDES(D-1)+'"' Using [WF]

        # Line BPCINVLIGA
        # A;AMT;DIE(0);DIE(1);DIE(2);DIE(3);DIE(4);CCE(0);CCE(1);CCE(2);CCE(3);CCE(4)
        Wrseq '"A"','"'+ num$(AMTNOTLIN_2(D-1))+'"', '"'+DIE1+'"','"'+DIE2+'"','"'+DIE3+'"','"'+DIE4+'"','"'+DIE5+'"','"'+CCE1+'"','"'+CCE2+'"','"'+CCE3+'"','"'+CCE4+'"','"'+CCE5+'"' Using [WF]

        # Line GACCDUDATE
        Wrseq '"E"' Using [WF]

      Next D

    Endif

  Else
    Call ECR_TRACE(func AFNC.MES1(mess(32,6251,1), "YHBILLGL"), 0) From GESECRAN
  Endif

Return

