#<AdxTL>@(#)0.0.0.0 $Revision$Class Sites
# Supervisor
## CRUD-CLASSE ## FACILITY
# 2018-08-27 12:31:24 019


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File FACILITY [FCY_]

If !SILENCE : Call TRACE("2 --> Local Instance C_FACILITY") From ASYRCOM : Endif
Local Instance FACILITY Using C_FACILITY

If !SILENCE : Call TRACE("3 --> New Instance C_FACILITY") From ASYRCOM : Endif
FACILITY = NewInstance C_FACILITY AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [FCY_]FCY0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of FACILITY") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.AREAD([FCY_]FCY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("FACILITY.FCY ="-num$(FACILITY.FCY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(FACILITY.AKEYS)
  Call TRACE("-"-num$(I)-":"-FACILITY.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [FCY_]
FreeGroup FACILITY
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(FACILITY,ACLE,ASTATUS,_ETAG)
Variable Instance FACILITY Using C_FACILITY
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _FCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FCY = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File FACILITY [FCY]
Default File [F:FCY]
Read [F:FCY]FCY0 = [L]_FCY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:FCY]UPDTICK)>0
 [L]_ETAG = num$([F:FCY]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(FACILITY,ACLE,ASTATUS)
Variable Instance FACILITY Using C_FACILITY
Value Char ACLE
Variable Integer ASTATUS
Local Char _FCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FCY = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.AREAD([L]_FCY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(FACILITY,_FCY,ASTATUS)
Variable Instance FACILITY Using C_FACILITY
Value Char _FCY
Variable Integer ASTATUS

If FACILITY = null : End : Endif

Gosub AVARIABLES From WMC00FACILITY
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If FACILITY.APARENT=null
 [L]A_I = FACILITY.freeSnapshot
 FACILITY.snapshotEnabled = 0
 FACILITY.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & FACILITY.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet FACILITY._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If FACILITY.APARENT=null
 FACILITY.snapshotEnabled = 1
 FACILITY.setAccessorEnabled = 1
Endif
LogicClose File [FCY] ,[BPA] ,[BID]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet FACILITY._ACTION_PARAM("AREAD_BEFORE",[L]_FCY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:FCY]
Read [F:FCY]FCY0 = [L]_FCY
If fstat
[L]A_ERROR = [L]_FCY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(FACILITY,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:FCY]FCY
[L]A_STRACC = ""
If dim([F:FCY]AUUID)>0 & [F:FCY]AUUID=NullUuid
 [F:FCY]AUUID = getUuid
Endif
SetInstance FACILITY With [F:FCY]
FACILITY.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BPA]
 [L]A_N2=0
 For [F:BPA]BPA0 Where BPATYP=3 & BPANUM=[F:FCY]FCY
  [L]A_N2 +=1
  FACILITY.BPA(A_N2) = NewInstance  C_BPADDRESS(FACILITY.ACTX,NullUuid,[L]A_N2,FACILITY,"BPA") AllocGroup FACILITY
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BPA(A_N2).ADDINSTANCE_BOUND)
  If dim([F:BPA]AUUID)>0 & [F:BPA]AUUID=NullUuid
   [F:BPA]AUUID = getUuid
  Endif
  SetInstance FACILITY.BPA(A_N2) With [F:BPA]
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 5
   [L]A_NEWCOL += 1
   FACILITY.BPA(A_N2).COLTEL(A_NEWCOL) = NewInstance  C_BPADDRESS_COLTEL(FACILITY.ACTX,NullUuid,[L]A_I,FACILITY.BPA(A_N2),"COLTEL") AllocGroup FACILITY
   [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BPA(A_N2).COLTEL(A_NEWCOL).ACTION("AREAD_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Next
  [L]A_NEWCOL = 0
  For [L]A_I=1 To 5
   [L]A_NEWCOL += 1
   FACILITY.BPA(A_N2).COLWEB(A_NEWCOL) = NewInstance  C_BPADDRESS_COLWEB(FACILITY.ACTX,NullUuid,[L]A_I,FACILITY.BPA(A_N2),"COLWEB") AllocGroup FACILITY
   [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BPA(A_N2).COLWEB(A_NEWCOL).ACTION("AREAD_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Next
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BPA(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  FACILITY.BPA(A_N2).ASTALIN = [V]CST_ALL
 Next BPA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BID]
 [L]A_N2=0
 For [F:BID]BID0 Where BPATYP=3 & BPANUM=[F:FCY]FCY
  [L]A_N2 +=1
  FACILITY.BID(A_N2) = NewInstance  C_BID(FACILITY.ACTX,NullUuid,[L]A_N2,FACILITY,"BID") AllocGroup FACILITY
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BID(A_N2).ADDINSTANCE_BOUND)
  Callmet FACILITY.BID(A_N2).AREAD([F:BID]BPATYP,[F:BID]BPANUM,[F:BID]BIDNUM,[F:BID]BPAADD)
  FACILITY.BID(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BID(A_N2).ASETATTRIBUTE("BPATYP","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BID(A_N2).ASETATTRIBUTE("BPANUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BID(A_N2).ASETATTRIBUTE("BIDNUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITY.BID(A_N2).ASETATTRIBUTE("BPAADD","$isDisabled","true"))
 Next BID
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet FACILITY.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



