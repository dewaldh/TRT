#<AdxTL>@(#)0.0.0.0 $Revision$Class Ship-to customer
# Supervisor
## CRUD-CLASSE ## BPDLVCUSTM
# 2018-08-27 13:06:30 602


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPDLVCUST [BPD_]

If !SILENCE : Call TRACE("2 --> Local Instance R_BPDLVCUSTM") From ASYRCOM : Endif
Local Instance BPDLVCUSTM Using R_BPDLVCUSTM

If !SILENCE : Call TRACE("3 --> New Instance R_BPDLVCUSTM") From ASYRCOM : Endif
BPDLVCUSTM = NewInstance R_BPDLVCUSTM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPD_]BPD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPDLVCUST") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUSTM.AREAD([BPD_]BPCNUM,[BPD_]BPAADD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPDLVCUSTM.BPD.BPCNUM ="-num$(BPDLVCUSTM.BPD.BPCNUM)) From ASYRCOM
 Call TRACE("BPDLVCUSTM.BPD.BPAADD ="-num$(BPDLVCUSTM.BPD.BPAADD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPDLVCUSTM.BPD.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPDLVCUSTM.BPD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPD_]
FreeGroup BPDLVCUSTM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPDLVCUSTM,ACLE,ASTATUS,_ETAG)
Variable Instance BPDLVCUSTM Using R_BPDLVCUSTM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPCNUM(15)
Local Char _BPAADD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPAADD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File BPDLVCUST [BPD]
Default File [F:BPD]
Read [F:BPD]BPD0 = [L]_BPCNUM;[L]_BPAADD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPD]UPDTICK)>0
 [L]_ETAG = num$([F:BPD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPDLVCUSTM,ACLE,ASTATUS)
Variable Instance BPDLVCUSTM Using R_BPDLVCUSTM
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPCNUM(15)
Local Char _BPAADD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPAADD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUSTM.AREAD([L]_BPCNUM,[L]_BPAADD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPDLVCUSTM,_BPCNUM,_BPAADD,ASTATUS)
Variable Instance BPDLVCUSTM Using R_BPDLVCUSTM
Value Char _BPCNUM
Value Char _BPAADD
Variable Integer ASTATUS

If BPDLVCUSTM = null : End : Endif

Gosub AVARIABLES From WMR00BPDLVCUSTM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPDLVCUSTM.APARENT=null
 [L]A_I = BPDLVCUSTM.freeSnapshot
 BPDLVCUSTM.snapshotEnabled = 0
 BPDLVCUSTM.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUSTM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

BPDLVCUSTM.BPD.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUSTM.BPD.AREAD([L]_BPCNUM,[L]_BPAADD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUSTM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPDLVCUSTM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUSTM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPDLVCUSTM.APARENT=null
 BPDLVCUSTM.snapshotEnabled = 1
 BPDLVCUSTM.setAccessorEnabled = 1
Endif
LogicClose File [BPD]
End



