#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHAUTILIS AUTILIS
# 2018-08-27 12:23:55 850

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","AUTILIS","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File AUTILIS [AUS]
If filinfo(filpath("FIL","BPADDRESS","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File BPADDRESS [BPA]
If filinfo(filpath("FIL","BID","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File BID [BID]
Local File AUTILIS [AUS_]
Local File ATEXTRA [AXX_1]
Local Char KEY_AUS(120)(1..3)
Local Char KEY_BPA(120)(1..3)
Local Char KEY_BID(120)(1..3)
#Empty keys :
KEY_AUS(3) = ""
KEY_BPA(3) = "0++"
KEY_BID(3) = "0+++"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [AUS]
LogicClose File [BPA]
LogicClose File [BID]
LogicClose File [AUS_]
LogicClose File [AXX_1]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [AUS] With
& [BPA]BPA0=4;[F:AUS]USR;[F:AUS]BPAADD,
& [BID]BID0=4;[F:AUS]USR;[F:AUS]BPAADD,
& [F:AXX_1]AXX0 = "AUTILIS";"INTUSR";GACTX.LAN;[F:AUS]USR;""
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [AUS] With
& [BPA]BPA0=4;[F:AUS]USR;[F:AUS]BPAADD,
& [BID]BID0=4;[F:AUS]USR;[F:AUS]BPAADD,
& [F:AXX_1]AXX0 = "AUTILIS";"INTUSR";GACTX.LAN;[F:AUS]USR;""
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Local Integer CI2
Local Integer CJ2
Local Char    SEPINS2(2) : SEPINS2=""
Local Char IS2(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_AUS(2) = [F:AUS]USR
KEY_BPA(2) = num$([F:BPA]BPATYP)+"+"+[F:BPA]BPANUM+"+"+[F:BPA]BPAADD
KEY_BID(2) = num$([F:BID]BPATYP)+"+"+[F:BID]BPANUM+"+"+[F:BID]BIDNUM+"+"+[F:BID]BPAADD

If (KEY_AUS(2) <> KEY_AUS(3)) & (KEY_AUS(1) <> KEY_AUS(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_AUTILIS(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:AUS]
FINS = 1
Call ASETTEXTRA(INS.AXX,INS.ALLOCGRP(),"INTUSR",[F:AXX_1]TEXTE,GACTX.LAN) From ASYRSUB
 KEY_AUS(1) = KEY_AUS(2)
Endif : # KEY_AUS(1) <> KEY_AUS(2)

CJ1=maxtab(INS.BPA)+1
If (KEY_BPA(2) <> KEY_BPA(3)) & (KEY_BPA(1) <> KEY_BPA(2))
 #Create a new instance
 INS.BPA(CJ1) = NewInstance C_BPADDRESS(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.BPA(CJ1).setaccessorEnabled = 0
 SetInstance INS.BPA(CJ1) With [F:BPA]
 Local Integer TELTYP_MAX:TELTYP_MAX0
 CJ2=1
 For CI2 = 0 To dim([F:BPA]TELTYP)-1
  Break ([F:BPA]TELNUM(CI2)="")
  TELTYP_MAX+=1
  #Create a new instance
  INS.BPA(CJ1).COLTEL(CJ2) = NewInstance C_BPADDRESS_COLTEL(GACTX,UIDINS,NUMLIN,INS.BPA(CJ1),"") AllocGroup INS
  INS.BPA(CJ1).COLTEL(CJ2).setaccessorEnabled = 0
  INS.BPA(CJ1).COLTEL(CJ2).TELNUM=[F:BPA]TELNUM(CI2)
  CJ2+=1
 Next CI2
 Local Integer WEBTYP_MAX:WEBTYP_MAX0
 CJ2=1
 For CI2 = 0 To dim([F:BPA]WEBTYP)-1
  Break ([F:BPA]WEBADR(CI2)="")
  WEBTYP_MAX+=1
  #Create a new instance
  INS.BPA(CJ1).COLWEB(CJ2) = NewInstance C_BPADDRESS_COLWEB(GACTX,UIDINS,NUMLIN,INS.BPA(CJ1),"") AllocGroup INS
  INS.BPA(CJ1).COLWEB(CJ2).setaccessorEnabled = 0
  INS.BPA(CJ1).COLWEB(CJ2).WEBADR=[F:BPA]WEBADR(CI2)
  CJ2+=1
 Next CI2
 KEY_BPA(1) = KEY_BPA(2)
Endif : # KEY_BPA(1) <> KEY_BPA(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"FAX":'             +'"'+escJson(INS.FAX)+'"'
Append ASND.DATA ,',"NOMUSR":'         +'"'+escJson(INS.NOMUSR)+'"'
Append ASND.DATA ,',"INTUSR":'         
Append ASND.DATA ,'"'
Append ASND.DATA ,escJson(func ASYRSUB.AGETTEXTRA(INS.AXX,"INTUSR",GACTX.LAN))
Append ASND.DATA ,'"'
Append ASND.DATA ,',"TELEP":'          +'"'+escJson(INS.TELEP)+'"'
Append ASND.DATA ,',"TIMCONN":'        +'"'+escJson(INS.TIMCONN)+'"'
Append ASND.DATA ,',"USR":'            +'"'+escJson(INS.USR)+'"'
Append ASND.DATA ,',"CODMET":'         +'"'+escJson(INS.CODMET)+'"'
Append ASND.DATA ,',"PRFFCT":'         +'"'+escJson(INS.PRFFCT)+'"'
Append ASND.DATA ,',"ADDEML":'         +'"'+escJson(INS.ADDEML)+'"'
Append ASND.DATA ,',"LOGIN":'          +'"'+escJson(INS.LOGIN)+'"'
Append ASND.DATA ,',"USRBI":'          +'"'+escJson(INS.USRBI)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,',"REPNUM":'         +'"'+escJson(INS.REPNUM)+'"'
Append ASND.DATA ,',"CODRIBDFT":'      +'"'+escJson(INS.CODRIBDFT)+'"'
Append ASND.DATA ,',"$access":'        +'"'+escJson(INS.ACSUSR)+'"'
Append ASND.DATA ,',"NEWPAS":'         +'"'+escJson(INS.NEWPAS)+'"'
Append ASND.DATA ,',"BPAADD":'         +'"'+escJson(INS.BPAADD)+'"'
Append ASND.DATA ,',"BIDNUM":'         +'"'+escJson(INS.BIDNUM)+'"'
Append ASND.DATA ,',"USRPRT":'         +'"'+escJson(INS.USRPRT)+'"'
Append ASND.DATA ,',"TIT":'            +'"'+escJson(INS.TIT)+'"'
Append ASND.DATA ,',"ADDNAM":'         +'"'+escJson(INS.ADDNAM)+'"'
Append ASND.DATA ,',"PRFXTD":'         +'"'+escJson(INS.PRFXTD)+'"'
Append ASND.DATA ,',"ARCPRF":'         +'"'+escJson(INS.ARCPRF)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"BPA":['
For CI1=1 To maxtab(INS.BPA)
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPANUM":'          +'"'+escJson(INS.BPA(CJ1).BPANUM)+'"'
 Append ASND.DATA ,',"BPAADD":'         +'"'+escJson(INS.BPA(CJ1).BPAADD)+'"'
 Append ASND.DATA ,',"BPADES":'         +'"'+escJson(INS.BPA(CJ1).BPADES)+'"'
 Append ASND.DATA ,',"BPABID":'         +'"'+escJson(INS.BPA(CJ1).BPABID)+'"'
 Append ASND.DATA ,',"BPAADDLIG1":'     +'"'+escJson(INS.BPA(CJ1).BPAADDLIG1)+'"'
 Append ASND.DATA ,',"BPAADDLIG2":'     +'"'+escJson(INS.BPA(CJ1).BPAADDLIG2)+'"'
 Append ASND.DATA ,',"POSCOD":'         +'"'+escJson(INS.BPA(CJ1).POSCOD)+'"'
 Append ASND.DATA ,',"CTY":'            +'"'+escJson(INS.BPA(CJ1).CTY)+'"'
 Append ASND.DATA ,',"SAT":'            +'"'+escJson(INS.BPA(CJ1).SAT)+'"'
 Append ASND.DATA ,',"CRY":'            +'"'+escJson(INS.BPA(CJ1).CRY)+'"'
 Append ASND.DATA ,',"CRYNAM":'         +'"'+escJson(INS.BPA(CJ1).CRYNAM)+'"'
 Append ASND.DATA ,',"FAX":'            +'"'+escJson(INS.BPA(CJ1).FAX)+'"'
 Append ASND.DATA ,',"MOB":'            +'"'+escJson(INS.BPA(CJ1).MOB)+'"'
 Append ASND.DATA ,',"EXTNUM":'         +'"'+escJson(INS.BPA(CJ1).EXTNUM)+'"'
 Append ASND.DATA ,',"FCYWEB":'         +'"'+escJson(INS.BPA(CJ1).FCYWEB)+'"'
 Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.BPA(CJ1).CREUSR)+'"'
 Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.BPA(CJ1).UPDUSR)+'"'
 IS2=""
 CJ2=1
 Append ASND.DATA ,',"COLTEL":['
 For CI2=1 To TELTYP_MAX
  Append ASND.DATA ,IS2+'{'
  Append ASND.DATA ,'"TELNUM":'          +'"'+escJson(INS.BPA(CJ1).COLTEL(CJ2).TELNUM)+'"'
  Append ASND.DATA ,'}'
  IS2=","
  CJ2+=1
 Next CI2
 Append ASND.DATA , "]"
 IS2=""
 CJ2=1
 Append ASND.DATA ,',"COLWEB":['
 For CI2=1 To WEBTYP_MAX
  Append ASND.DATA ,IS2+'{'
  Append ASND.DATA ,'"WEBADR":'          +'"'+escJson(INS.BPA(CJ1).COLWEB(CJ2).WEBADR)+'"'
  Append ASND.DATA ,'}'
  IS2=","
  CJ2+=1
 Next CI2
 Append ASND.DATA , "]"
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_AUS(1),KEY_BPA(1),KEY_BID(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:AUS]USR"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
  Gosub METHODS From BPADDRESS_CSTD
  Gosub METHODS From BPADDRESSTC_CSTD
  Gosub METHODS From BPADDRESS_CSTD
  Gosub METHODS From BPADDRESSTC_CSTD
 Gosub METHODS From BPADDRESS_CSTD
 Gosub METHODS From BPADDRESSTC_CSTD
Gosub METHODS From AUTILIS_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="AUTILIS" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"AUTILIS")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"AUTILIS")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,485)+'"'
Append WCLOB,',"$url":"{$baseUrl}/AUTILIS'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,485)+' {$key}"'
Append WCLOB,',"$key":"{USR}"'
Append WCLOB,',"$url":"{$baseUrl}/AUTILIS('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'AUTILIS.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"FAX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,22961)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"NOMUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,18622)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"INTUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,18622)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"TELEP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,22962)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"TIMCONN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,15265)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"USR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5296)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CODMET":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,33079)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":4'
Append WCLOB,"}"
Append WCLOB,',"PRFFCT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1461)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ADDEML":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,12737)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"LOGIN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,10489)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"USRBI":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,30724)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"REPNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14878)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CODRIBDFT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,18596)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"$access":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,72)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"NEWPAS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1398)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"BPAADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7547)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BIDNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1494)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"USRPRT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,20785)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TIT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27029)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"ADDNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,38096)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"PRFXTD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,40969)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ARCPRF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1469)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPA":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":1'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPANUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3657)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1499)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPADES":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"BPABID":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5083)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"BPAADDLIG1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,50490)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":50'
Append WCLOB,"}"
Append WCLOB,',"BPAADDLIG2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,50491)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":50'
Append WCLOB,"}"
Append WCLOB,',"POSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"CTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,251)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"SAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,51590)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"CRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,263)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CRYNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1579)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"FAX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,919)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"MOB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,9564)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"EXTNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14865)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"FCYWEB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,38620)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"COLTEL":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":5'
Append WCLOB,',"$maxItems":5'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"TELNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,289)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"COLWEB":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":5'
Append WCLOB,',"$maxItems":5'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"WEBADR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1580)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/AUTILIS('+"'"+'{$key}'+"'"+')?representation=AUTILIS.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHAUTILISB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHAUTILISB
End RES


