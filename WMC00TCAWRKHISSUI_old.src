#<AdxTL>@(#)0.0.0.0 $Revision$Class Workflow tracking archive
# Sage X3 supervisor
## CRUD-CLASSE ## TCAWRKHISSUI
# 2018-06-20 07:06:13 119

Gosub TEST From WMCR_TCAWRKHISSUI : End

############################################################################################
## R : Subprog AREAD(INSTANCE,DEST,CHRONO)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TCAWRKHISSUI : AWRKHISSUI
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TCAWRKHISSUI._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TCAWRKHISSUI.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TCAWRKHISSUI.ACTX.AFOLDER,nomap,"")>0
 Local File AWRKHISSUI [AWS]
 Local File AWRKHISSUI [AAA_]
Else
 Local File =TCAWRKHISSUI.ACTX.AFOLDER+".AWRKHISSUI" [AWS]
 Local File =TCAWRKHISSUI.ACTX.AFOLDER+".AWRKHISSUI" [AAA_]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TCAWRKHISSUI.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [AWS] With
& [AAA_]AWS2 = DEST+CHRONO
& As [LNK_]
Return

############################################################################################
### AWRKHISSUI(WAWS)
############################################################################################
Funprog  _MAJSQL_AWRKHISSUI(WAWS)
Variable Instance WAWS Using C_TCAWRKHISSUI
Local Integer ASTATUS,A_I,A_J
Default File [F:AWS]
If WAWS.ASTALIN=[V]CST_ANEW
 Call INICRE(WAWS) From ASYRSUB
 SetInstance [F:AWS] With WAWS
 Write [F:AWS]
 If fstat
  Call FSTA("AWS",WAWS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAWS.updTick = [F:AWS]updTick
Elsif WAWS.ASTALIN=[V]CST_ALL or WAWS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAWS) From ASYRSUB
 SetInstance [F:AWS] With WAWS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAWS,"AWRKHISSUI")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AWS]AWS2 = [F:AWS]DEST;[F:AWS]CHRONO
 If fstat
  Call FSTA("AWS",WAWS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAWS.updTick = [F:AWS]updTick
Elsif WAWS.ASTALIN=[V]CST_ADEL
 SetInstance [F:AWS] With WAWS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAWS,"AWRKHISSUI")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AWS]AWS2 = [F:AWS]DEST;[F:AWS]CHRONO
 If fstat
  Call FSTA("AWS",WAWS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



