#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Sales quotes
# Sage X3 supervisor
## CRUD-CLASSE ## CCMIMPSQD
# 2018-06-20 06:41:09 149


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPSQD [CCMISQD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_CCMIMPSQD") From ASYRCOM : Endif
Local Instance CCMIMPSQD Using C_CCMIMPSQD

If !SILENCE : Call TRACE("3 --> New Instance C_CCMIMPSQD") From ASYRCOM : Endif
CCMIMPSQD = NewInstance C_CCMIMPSQD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMISQD_]CCMSQD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPSQD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.AREAD([CCMISQD_]CRID,[CCMISQD_]LINENO))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMIMPSQD.CRID ="-num$(CCMIMPSQD.CRID)) From ASYRCOM
 Call TRACE("CCMIMPSQD.LINENO ="-num$(CCMIMPSQD.LINENO)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMIMPSQD.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMIMPSQD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMISQD_]
FreeGroup CCMIMPSQD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMIMPSQD,ACLE,ASTATUS,_ETAG)
Variable Instance CCMIMPSQD Using C_CCMIMPSQD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File CCMIMPSQD [CCMISQD]
Default File [F:CCMISQD]
Read [F:CCMISQD]CCMSQD0 = [L]_CRID;[L]_LINENO
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMISQD]UPDTICK)>0
 [L]_ETAG = num$([F:CCMISQD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMIMPSQD,ACLE,ASTATUS)
Variable Instance CCMIMPSQD Using C_CCMIMPSQD
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.AREAD([L]_CRID,[L]_LINENO))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMIMPSQD,_CRID,_LINENO,ASTATUS)
Variable Instance CCMIMPSQD Using C_CCMIMPSQD
Value Char _CRID
Value Shortint _LINENO
Variable Integer ASTATUS

If CCMIMPSQD = null : End : Endif

Gosub AVARIABLES From WMC00CCMIMPSQD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMIMPSQD.APARENT=null
 [L]A_I = CCMIMPSQD.freeSnapshot
 CCMIMPSQD.snapshotEnabled = 0
 CCMIMPSQD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMIMPSQD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMIMPSQD.APARENT=null
 CCMIMPSQD.snapshotEnabled = 1
 CCMIMPSQD.setAccessorEnabled = 1
Endif
LogicClose File [CCMISQD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD._ACTION_PARAM("AREAD_BEFORE",[L]_CRID,[L]_LINENO))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:CCMISQD]
Read [F:CCMISQD]CCMSQD0 = [L]_CRID;[L]_LINENO
If fstat
[L]A_ERROR = [L]_CRID+"~"+num$([L]_LINENO)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMIMPSQD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:CCMISQD]AUUID)>0 & [F:CCMISQD]AUUID=NullUuid
 [F:CCMISQD]AUUID = getUuid
Endif
SetInstance CCMIMPSQD With [F:CCMISQD]
CCMIMPSQD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



