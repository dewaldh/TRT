#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan-Work orders
# Supervisor
## CRUD-CLASSE ## CCMPLAMFGH
# 2018-08-27 13:12:47 677


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPMFGH [CCMMFGH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMPLAMFGH") From ASYRCOM : Endif
Local Instance CCMPLAMFGH Using R_CCMPLAMFGH

If !SILENCE : Call TRACE("3 --> New Instance R_CCMPLAMFGH") From ASYRCOM : Endif
CCMPLAMFGH = NewInstance R_CCMPLAMFGH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMMFGH_]CCMMFGH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPMFGH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAMFGH.AREAD([CCMMFGH_]CRID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMPLAMFGH.CCMMFGH.CRID ="-num$(CCMPLAMFGH.CCMMFGH.CRID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMPLAMFGH.CCMMFGH.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMPLAMFGH.CCMMFGH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMMFGH_]
FreeGroup CCMPLAMFGH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMPLAMFGH,ACLE,ASTATUS,_ETAG)
Variable Instance CCMPLAMFGH Using R_CCMPLAMFGH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File CCMIMPMFGH [CCMMFGH]
Default File [F:CCMMFGH]
Read [F:CCMMFGH]CCMMFGH0 = [L]_CRID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMMFGH]UPDTICK)>0
 [L]_ETAG = num$([F:CCMMFGH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMPLAMFGH,ACLE,ASTATUS)
Variable Instance CCMPLAMFGH Using R_CCMPLAMFGH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAMFGH.AREAD([L]_CRID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMPLAMFGH,_CRID,ASTATUS)
Variable Instance CCMPLAMFGH Using R_CCMPLAMFGH
Value Char _CRID
Variable Integer ASTATUS

If CCMPLAMFGH = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLAMFGH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMPLAMFGH.APARENT=null
 [L]A_I = CCMPLAMFGH.freeSnapshot
 CCMPLAMFGH.snapshotEnabled = 0
 CCMPLAMFGH.setAccessorEnabled = 0
Endif

If fmet CCMPLAMFGH.ACTX.AGETAFCRIGHT(CCMPLAMFGH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMMFGH]
Read [F:CCMMFGH]CCMMFGH0 = [L]_CRID
If fstat
[L]A_ERROR = [L]_CRID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMPLAMFGH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMPLAMFGH.ACTX.AGETAFCRIGHTR(CCMPLAMFGH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMPLAMFGH.ACTX.ASTACRITROLE(CCMPLAMFGH,[L]_CRID
& ,"CCM","CCMMFGH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAMFGH.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMPLAMFGH.CCMMFGH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAMFGH.CCMMFGH.AREAD([L]_CRID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAMFGH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMPLAMFGH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAMFGH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMPLAMFGH.APARENT=null
 CCMPLAMFGH.snapshotEnabled = 1
 CCMPLAMFGH.setAccessorEnabled = 1
Endif
LogicClose File [CCMMFGH]
End



