#<AdxTL>@(#)0.0.0.0 $Revision$Class Ledger
# Supervisor
## ACLA-CLASSE ## GLED
# 2018-08-27 12:33:16 601


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : LED Ledger ( Field LED 3)
####################################################################

$SET_LED
If [L]_AOLDVAL<>this.LED
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LED
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LED
 Gosub PROPAGATE_LED
Endif
Return

$INIT_LED
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "LED"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LED
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "LED"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LED                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LED                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LED
[L]CURPRO = "LED"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LED,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LED
[L]CURPRO = "LED"
If vireblc(this.LED,2)<>vireblc(format$("K:3c",this.LED),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LED
[L]CURPRO = "LED"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LED
[L]CURPRO = "LED"
Return

$PROPAGATE_LED
this.isReadonly = 0
[L]CURPRO = "LED"
Gosub _LNKPRO_LED
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LED
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "LED"
$_LNKPRO_LED
If vireblc(this.LED,2)<>""
 # Link GLED
 Local File GLED [WLED]
 Read [F:WLED]LED0 = this.LED
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GLED" & ZONE="SHOTRA" & IDENT1=[F:WLED]LED & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LED","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GLED" & ZONE="DESTRA" & IDENT1=[F:WLED]LED & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LED","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WLED]
Endif
Return

$_ALOADATTRIBUTE_LED
[L]ASTATUS = fmet this.ASETATTRIBUTE("LED","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field DES 30)
####################################################################

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(this.DES,2)<>vireblc(format$("K:30X",this.DES),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : DESSHO Short description ( Field SHO 10)
####################################################################

$SET_DESSHO
If [L]_AOLDVAL<>this.DESSHO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESSHO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESSHO
 Gosub PROPAGATE_DESSHO
Endif
Return

$INIT_DESSHO
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESSHO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESSHO
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESSHO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESSHO
[L]CURPRO = "DESSHO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESSHO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESSHO
[L]CURPRO = "DESSHO"
If vireblc(this.DESSHO,2)<>vireblc(format$("K:10X",this.DESSHO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESSHO
[L]CURPRO = "DESSHO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESSHO
[L]CURPRO = "DESSHO"
Return

$PROPAGATE_DESSHO
this.isReadonly = 0
[L]CURPRO = "DESSHO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESSHO
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESSHO"
$_LNKPRO_DESSHO
Return


####################################################################
# 4 : DESTRA Description ( Field AX3)
####################################################################

$GET_DESTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESTRA"
this.DESTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESTRA
If [L]_AOLDVAL<>this.DESTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESTRA
 Gosub PROPAGATE_DESTRA
Endif
Return

$INIT_DESTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESTRA
[L]CURPRO = "DESTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESTRA
[L]CURPRO = "DESTRA"
If vireblc(fmet this.AGETTEXTRA("DESTRA"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESTRA
[L]CURPRO = "DESTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESTRA
[L]CURPRO = "DESTRA"
Return

$PROPAGATE_DESTRA
this.isReadonly = 0
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DESTRA"
$_LNKPRO_DESTRA
Return


####################################################################
# 5 : SHOTRA Short description ( Field AX1)
####################################################################

$GET_SHOTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "SHOTRA"
this.SHOTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SHOTRA
If [L]_AOLDVAL<>this.SHOTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHOTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHOTRA
 Gosub PROPAGATE_SHOTRA
Endif
Return

$INIT_SHOTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "SHOTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHOTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHOTRA
[L]CURPRO = "SHOTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHOTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHOTRA
[L]CURPRO = "SHOTRA"
If vireblc(fmet this.AGETTEXTRA("SHOTRA"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("SHOTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SHOTRA
[L]CURPRO = "SHOTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHOTRA
[L]CURPRO = "SHOTRA"
Return

$PROPAGATE_SHOTRA
this.isReadonly = 0
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.SHOTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHOTRA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "SHOTRA"
$_LNKPRO_SHOTRA
Return


####################################################################
# 6 : GEN General ( Field Local menu number 1)
####################################################################

$SET_GEN
If [L]_AOLDVAL<>this.GEN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GEN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GEN
 Gosub PROPAGATE_GEN
Endif
Return

$INIT_GEN
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "GEN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GEN=0 and fmet this.AGETATTRIBUTE("GEN","$isMandatory")="true"
 this.GEN = 1
Endif
Return
 
$CONTROL_GEN
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "GEN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GEN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GEN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GEN
[L]CURPRO = "GEN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GEN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GEN
[L]CURPRO = "GEN"
If this.GEN<0 or this.GEN>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.GEN)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_GEN
[L]CURPRO = "GEN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GEN
[L]CURPRO = "GEN"
Return

$PROPAGATE_GEN
this.isReadonly = 0
[L]CURPRO = "GEN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GEN
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "GEN"
$_LNKPRO_GEN
Return


####################################################################
# 7 : ANA Analytical ( Field Local menu number 1)
####################################################################

$SET_ANA
If [L]_AOLDVAL<>this.ANA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ANA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ANA
 Gosub PROPAGATE_ANA
Endif
Return

$INIT_ANA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ANA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ANA=0 and fmet this.AGETATTRIBUTE("ANA","$isMandatory")="true"
 this.ANA = 1
Endif
Return
 
$CONTROL_ANA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ANA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ANA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ANA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ANA
[L]CURPRO = "ANA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ANA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ANA
[L]CURPRO = "ANA"
If this.ANA<0 or this.ANA>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ANA)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ANA
[L]CURPRO = "ANA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ANA
[L]CURPRO = "ANA"
Return

$PROPAGATE_ANA
this.isReadonly = 0
[L]CURPRO = "ANA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ANA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ANA"
$_LNKPRO_ANA
Return


####################################################################
# 8 : BUD Budget ( Field Local menu number 1)
####################################################################

$SET_BUD
If [L]_AOLDVAL<>this.BUD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BUD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BUD
 Gosub PROPAGATE_BUD
Endif
Return

$INIT_BUD
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "BUD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BUD=0 and fmet this.AGETATTRIBUTE("BUD","$isMandatory")="true"
 this.BUD = 1
Endif
Return
 
$CONTROL_BUD
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "BUD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BUD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BUD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BUD
[L]CURPRO = "BUD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BUD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BUD
[L]CURPRO = "BUD"
If this.BUD<0 or this.BUD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BUD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BUD
[L]CURPRO = "BUD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BUD
[L]CURPRO = "BUD"
Return

$PROPAGATE_BUD
this.isReadonly = 0
[L]CURPRO = "BUD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BUD
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "BUD"
$_LNKPRO_BUD
Return


####################################################################
# 9 : CMM Commitment ( Field Local menu number 1)
####################################################################

$SET_CMM
If [L]_AOLDVAL<>this.CMM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CMM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CMM
 Gosub PROPAGATE_CMM
Endif
Return

$INIT_CMM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CMM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CMM=0 and fmet this.AGETATTRIBUTE("CMM","$isMandatory")="true"
 this.CMM = 1
Endif
Return
 
$CONTROL_CMM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CMM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CMM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CMM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CMM
[L]CURPRO = "CMM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CMM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CMM
[L]CURPRO = "CMM"
If this.CMM<0 or this.CMM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CMM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CMM
[L]CURPRO = "CMM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CMM
[L]CURPRO = "CMM"
Return

$PROPAGATE_CMM
this.isReadonly = 0
[L]CURPRO = "CMM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CMM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CMM"
$_LNKPRO_CMM
Return


####################################################################
# 10 : BAL Balance ( Field Local menu number 1)
####################################################################

$SET_BAL
If [L]_AOLDVAL<>this.BAL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BAL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BAL
 Gosub PROPAGATE_BAL
Endif
Return

$INIT_BAL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "BAL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BAL=0 and fmet this.AGETATTRIBUTE("BAL","$isMandatory")="true"
 this.BAL = 1
Endif
Return
 
$CONTROL_BAL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "BAL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BAL                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BAL                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BAL
[L]CURPRO = "BAL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BAL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BAL
[L]CURPRO = "BAL"
If this.BAL<0 or this.BAL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BAL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BAL
[L]CURPRO = "BAL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BAL
[L]CURPRO = "BAL"
Return

$PROPAGATE_BAL
this.isReadonly = 0
[L]CURPRO = "BAL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BAL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "BAL"
$_LNKPRO_BAL
Return


####################################################################
# 11 : FCYBAL Balance by site ( Field Local menu number 1)
####################################################################

$SET_FCYBAL
If [L]_AOLDVAL<>this.FCYBAL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FCYBAL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FCYBAL
 Gosub PROPAGATE_FCYBAL
Endif
Return

$INIT_FCYBAL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "FCYBAL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FCYBAL=0 and fmet this.AGETATTRIBUTE("FCYBAL","$isMandatory")="true"
 this.FCYBAL = 1
Endif
Return
 
$CONTROL_FCYBAL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "FCYBAL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FCYBAL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FCYBAL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FCYBAL
[L]CURPRO = "FCYBAL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FCYBAL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FCYBAL
[L]CURPRO = "FCYBAL"
If this.FCYBAL<0 or this.FCYBAL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FCYBAL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FCYBAL
[L]CURPRO = "FCYBAL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FCYBAL
[L]CURPRO = "FCYBAL"
Return

$PROPAGATE_FCYBAL
this.isReadonly = 0
[L]CURPRO = "FCYBAL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FCYBAL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "FCYBAL"
$_LNKPRO_FCYBAL
Return


####################################################################
# 12 : MTCFLG Matchable ( Field Local menu number 1)
####################################################################

$SET_MTCFLG
If [L]_AOLDVAL<>this.MTCFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MTCFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MTCFLG
 Gosub PROPAGATE_MTCFLG
Endif
Return

$INIT_MTCFLG
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "MTCFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MTCFLG=0 and fmet this.AGETATTRIBUTE("MTCFLG","$isMandatory")="true"
 this.MTCFLG = 1
Endif
Return
 
$CONTROL_MTCFLG
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "MTCFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MTCFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MTCFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MTCFLG
[L]CURPRO = "MTCFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MTCFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MTCFLG
[L]CURPRO = "MTCFLG"
If this.MTCFLG<0 or this.MTCFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MTCFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MTCFLG
[L]CURPRO = "MTCFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MTCFLG
[L]CURPRO = "MTCFLG"
Return

$PROPAGATE_MTCFLG
this.isReadonly = 0
[L]CURPRO = "MTCFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MTCFLG
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "MTCFLG"
$_LNKPRO_MTCFLG
Return


####################################################################
# 13 : CSL Consolidation ( Field Local menu number 1)
####################################################################

$SET_CSL
If [L]_AOLDVAL<>this.CSL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CSL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CSL
 Gosub PROPAGATE_CSL
Endif
Return

$INIT_CSL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CSL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CSL=0 and fmet this.AGETATTRIBUTE("CSL","$isMandatory")="true"
 this.CSL = 1
Endif
Return
 
$CONTROL_CSL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CSL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CSL                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CSL                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CSL
[L]CURPRO = "CSL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CSL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CSL
[L]CURPRO = "CSL"
If this.CSL<0 or this.CSL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CSL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CSL
[L]CURPRO = "CSL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CSL
[L]CURPRO = "CSL"
Return

$PROPAGATE_CSL
this.isReadonly = 0
[L]CURPRO = "CSL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CSL
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CSL"
$_LNKPRO_CSL
Return


####################################################################
# 14 : COA Chart code ( Field COA 3)
####################################################################

$SET_COA
If [L]_AOLDVAL<>this.COA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COA
 Gosub PROPAGATE_COA
Endif
Return

$INIT_COA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "COA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "COA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COA
[L]CURPRO = "COA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>vireblc(format$("K:3c",this.COA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCOA.ACTRLREF(this,"COA",this.COA,this.COA,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.COA<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COA
[L]CURPRO = "COA"
Return

$PROPAGATE_COA
this.isReadonly = 0
[L]CURPRO = "COA"
Gosub _LNKPRO_COA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "COA"
$_LNKPRO_COA
If vireblc(this.COA,2)<>""
 # Link GCOA
 Local File GCOA [WCOA]
 Read [F:WCOA]COA0 = this.COA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="SHOTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="DESTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCOA]
Endif
Return


####################################################################
# 15 : DIENBR No. of dim. types ( Field C 1)
####################################################################

$SET_DIENBR
If [L]_AOLDVAL<>this.DIENBR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIENBR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIENBR
 Gosub PROPAGATE_DIENBR
Endif
Return

$INIT_DIENBR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIENBR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIENBR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIENBR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIENBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIENBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIENBR
[L]CURPRO = "DIENBR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIENBR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIENBR
[L]CURPRO = "DIENBR"
Return

$_AOTHERS_DIENBR
[L]CURPRO = "DIENBR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIENBR
[L]CURPRO = "DIENBR"
Return

$PROPAGATE_DIENBR
this.isReadonly = 0
[L]CURPRO = "DIENBR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIENBR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIENBR"
$_LNKPRO_DIENBR
Return


####################################################################
# 17 : DIEDACOBY Mandat. dim entry ( Field Local menu number 1)
####################################################################

$SET_DIEDACOBY
If [L]_AOLDVAL<>this.DIEDACOBY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIEDACOBY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIEDACOBY
 Gosub PROPAGATE_DIEDACOBY
Endif
Return

$INIT_DIEDACOBY
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIEDACOBY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DIEDACOBY=0 and fmet this.AGETATTRIBUTE("DIEDACOBY","$isMandatory")="true"
 this.DIEDACOBY = 1
Endif
Return
 
$CONTROL_DIEDACOBY
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIEDACOBY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIEDACOBY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIEDACOBY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIEDACOBY
[L]CURPRO = "DIEDACOBY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIEDACOBY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIEDACOBY
[L]CURPRO = "DIEDACOBY"
If this.DIEDACOBY<0 or this.DIEDACOBY>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DIEDACOBY)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DIEDACOBY
[L]CURPRO = "DIEDACOBY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIEDACOBY
[L]CURPRO = "DIEDACOBY"
Return

$PROPAGATE_DIEDACOBY
this.isReadonly = 0
[L]CURPRO = "DIEDACOBY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIEDACOBY
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIEDACOBY"
$_LNKPRO_DIEDACOBY
Return


####################################################################
# 18 : DIEIPT Allocation ( Field Local menu number 1)
####################################################################

$SET_DIEIPT
If [L]_AOLDVAL<>this.DIEIPT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIEIPT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIEIPT
 Gosub PROPAGATE_DIEIPT
Endif
Return

$INIT_DIEIPT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIEIPT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DIEIPT=0 and fmet this.AGETATTRIBUTE("DIEIPT","$isMandatory")="true"
 this.DIEIPT = 1
Endif
Return
 
$CONTROL_DIEIPT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIEIPT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIEIPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIEIPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIEIPT
[L]CURPRO = "DIEIPT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIEIPT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIEIPT
[L]CURPRO = "DIEIPT"
If this.DIEIPT<0 or this.DIEIPT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DIEIPT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DIEIPT
[L]CURPRO = "DIEIPT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIEIPT
[L]CURPRO = "DIEIPT"
Return

$PROPAGATE_DIEIPT
this.isReadonly = 0
[L]CURPRO = "DIEIPT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIEIPT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "DIEIPT"
$_LNKPRO_DIEIPT
Return


####################################################################
# 19 : GENTYP Generation type ( Field Local menu number 807)
####################################################################

$SET_GENTYP
If [L]_AOLDVAL<>this.GENTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GENTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GENTYP
 Gosub PROPAGATE_GENTYP
Endif
Return

$INIT_GENTYP
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "GENTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GENTYP=0 and fmet this.AGETATTRIBUTE("GENTYP","$isMandatory")="true"
 this.GENTYP = 1
Endif
Return
 
$CONTROL_GENTYP
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "GENTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GENTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GENTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GENTYP
[L]CURPRO = "GENTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GENTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GENTYP
[L]CURPRO = "GENTYP"
If this.GENTYP<0 or this.GENTYP>len(mess(0,807,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"807 ->"-num$(this.GENTYP)-mess(99,123,1)):  Return : # Local menu "807 -> Invalid option
Endif
Return

$_AOTHERS_GENTYP
[L]CURPRO = "GENTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GENTYP
[L]CURPRO = "GENTYP"
Return

$PROPAGATE_GENTYP
this.isReadonly = 0
[L]CURPRO = "GENTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GENTYP
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "GENTYP"
$_LNKPRO_GENTYP
Return


####################################################################
# 20 : ACCVCR One document per account (Italy) ( Field Local menu number 1)
####################################################################

$SET_ACCVCR
If [L]_AOLDVAL<>this.ACCVCR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCVCR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCVCR
 Gosub PROPAGATE_ACCVCR
Endif
Return

$INIT_ACCVCR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ACCVCR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ACCVCR=0 and fmet this.AGETATTRIBUTE("ACCVCR","$isMandatory")="true"
 this.ACCVCR = 1
Endif
Return
 
$CONTROL_ACCVCR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ACCVCR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCVCR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCVCR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCVCR
[L]CURPRO = "ACCVCR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACCVCR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCVCR
[L]CURPRO = "ACCVCR"
If this.ACCVCR<0 or this.ACCVCR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ACCVCR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ACCVCR
[L]CURPRO = "ACCVCR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCVCR
[L]CURPRO = "ACCVCR"
Return

$PROPAGATE_ACCVCR
this.isReadonly = 0
[L]CURPRO = "ACCVCR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCVCR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ACCVCR"
$_LNKPRO_ACCVCR
Return


####################################################################
# 21 : EQLRANANA Carry forward balance ( Field Local menu number 1)
####################################################################

$SET_EQLRANANA
If [L]_AOLDVAL<>this.EQLRANANA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EQLRANANA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EQLRANANA
 Gosub PROPAGATE_EQLRANANA
Endif
Return

$INIT_EQLRANANA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "EQLRANANA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.EQLRANANA=0 and fmet this.AGETATTRIBUTE("EQLRANANA","$isMandatory")="true"
 this.EQLRANANA = 1
Endif
Return
 
$CONTROL_EQLRANANA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "EQLRANANA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EQLRANANA             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EQLRANANA             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EQLRANANA
[L]CURPRO = "EQLRANANA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EQLRANANA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EQLRANANA
[L]CURPRO = "EQLRANANA"
If this.EQLRANANA<0 or this.EQLRANANA>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.EQLRANANA)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_EQLRANANA
[L]CURPRO = "EQLRANANA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EQLRANANA
[L]CURPRO = "EQLRANANA"
Return

$PROPAGATE_EQLRANANA
this.isReadonly = 0
[L]CURPRO = "EQLRANANA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EQLRANANA
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "EQLRANANA"
$_LNKPRO_EQLRANANA
Return


####################################################################
# 22 : ENDVCR Closing document ( Field Local menu number 1)
####################################################################

$SET_ENDVCR
If [L]_AOLDVAL<>this.ENDVCR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ENDVCR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ENDVCR
 Gosub PROPAGATE_ENDVCR
Endif
Return

$INIT_ENDVCR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ENDVCR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ENDVCR=0 and fmet this.AGETATTRIBUTE("ENDVCR","$isMandatory")="true"
 this.ENDVCR = 1
Endif
Return
 
$CONTROL_ENDVCR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ENDVCR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ENDVCR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ENDVCR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ENDVCR
[L]CURPRO = "ENDVCR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ENDVCR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ENDVCR
[L]CURPRO = "ENDVCR"
If this.ENDVCR<0 or this.ENDVCR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ENDVCR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ENDVCR
[L]CURPRO = "ENDVCR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ENDVCR
[L]CURPRO = "ENDVCR"
Return

$PROPAGATE_ENDVCR
this.isReadonly = 0
[L]CURPRO = "ENDVCR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ENDVCR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "ENDVCR"
$_LNKPRO_ENDVCR
Return


####################################################################
# 23 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 24 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 25 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 26 : UPDUSR Change user ( Field A 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
Return


####################################################################
# 27 : CREUSR Creation user ( Field A 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
Return


####################################################################
# 28 : UPDTIM Time ( Field L 8)
####################################################################

$SET_UPDTIM
If [L]_AOLDVAL<>this.UPDTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDTIM
 Gosub PROPAGATE_UPDTIM
Endif
Return

$INIT_UPDTIM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDTIM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDTIM
[L]CURPRO = "UPDTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDTIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$_AOTHERS_UPDTIM
[L]CURPRO = "UPDTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$PROPAGATE_UPDTIM
this.isReadonly = 0
[L]CURPRO = "UPDTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDTIM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "UPDTIM"
$_LNKPRO_UPDTIM
Return


####################################################################
# 29 : CRETIM Time ( Field L 8)
####################################################################

$SET_CRETIM
If [L]_AOLDVAL<>this.CRETIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRETIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRETIM
 Gosub PROPAGATE_CRETIM
Endif
Return

$INIT_CRETIM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CRETIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CRETIM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CRETIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRETIM
[L]CURPRO = "CRETIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRETIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRETIM
[L]CURPRO = "CRETIM"
Return

$_AOTHERS_CRETIM
[L]CURPRO = "CRETIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRETIM
[L]CURPRO = "CRETIM"
Return

$PROPAGATE_CRETIM
this.isReadonly = 0
[L]CURPRO = "CRETIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRETIM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "CRETIM"
$_LNKPRO_CRETIM
Return


####################################################################
# 30 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0GLED
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return




