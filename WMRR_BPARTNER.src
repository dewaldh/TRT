#<AdxTL>@(#)0.0.0.0 $Revision$Class BPs
# Supervisor
## CRUD-CLASSE ## BPARTNER
# 2018-08-27 13:05:05 360


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPARTNER [BPR_]

If !SILENCE : Call TRACE("2 --> Local Instance R_BPARTNER") From ASYRCOM : Endif
Local Instance BPARTNER Using R_BPARTNER

If !SILENCE : Call TRACE("3 --> New Instance R_BPARTNER") From ASYRCOM : Endif
BPARTNER = NewInstance R_BPARTNER AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPR_]BPR0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPARTNER") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPARTNER.AREAD([BPR_]BPRNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPARTNER.BPR.BPRNUM ="-num$(BPARTNER.BPR.BPRNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPARTNER.BPR.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPARTNER.BPR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPR_]
FreeGroup BPARTNER
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPARTNER,ACLE,ASTATUS,_ETAG)
Variable Instance BPARTNER Using R_BPARTNER
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPRNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPRNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BPARTNER [BPR]
Default File [F:BPR]
Read [F:BPR]BPR0 = [L]_BPRNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPR]UPDTICK)>0
 [L]_ETAG = num$([F:BPR]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPARTNER,ACLE,ASTATUS)
Variable Instance BPARTNER Using R_BPARTNER
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPRNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPRNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPARTNER.AREAD([L]_BPRNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPARTNER,_BPRNUM,ASTATUS)
Variable Instance BPARTNER Using R_BPARTNER
Value Char _BPRNUM
Variable Integer ASTATUS

If BPARTNER = null : End : Endif

Gosub AVARIABLES From WMR00BPARTNER
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPARTNER.APARENT=null
 [L]A_I = BPARTNER.freeSnapshot
 BPARTNER.snapshotEnabled = 0
 BPARTNER.setAccessorEnabled = 0
Endif

If fmet BPARTNER.ACTX.AGETAFCRIGHT(BPARTNER,"GESBPR",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:BPR]
Read [F:BPR]BPR0 = [L]_BPRNUM
If fstat
[L]A_ERROR = [L]_BPRNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BPARTNER,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet BPARTNER.ACTX.AGETAFCRIGHTR(BPARTNER,"GESBPR",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet BPARTNER.ACTX.ASTACRITROLE(BPARTNER,[L]_BPRNUM
& ,"BPR","BPR",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPARTNER.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

BPARTNER.BPR.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet BPARTNER.BPR.AREAD([L]_BPRNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPARTNER.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPARTNER.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPARTNER._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPARTNER.APARENT=null
 BPARTNER.snapshotEnabled = 1
 BPARTNER.setAccessorEnabled = 1
Endif
LogicClose File [BPR] ,[BPA] ,[CNT] ,[BPEX] ,[BID]
End



