#<AdxTL>@(#)0.0.0.0 $Revision$Class Data types
# Supervisor
## CRUD-CLASSE ## ATYPE
# 2018-08-27 13:03:34 114


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(ATYPE,ASTATUS)
Variable Instance ATYPE Using R_ATYPE
Variable Integer ASTATUS

If ATYPE = null : End : Endif

Gosub AVARIABLES From WMR00ATYPE
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet ATYPE.ACTX.AGETAFCRIGHT(ATYPE,"GESATY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet ATYPE.ACTX.AGETAFCRIGHTC(ATYPE,"GESATY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_ATYPE
Else
 Gosub AINSERT_ATYPE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = ATYPE.freeSnapshot
ATYPE.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
ATYPE.ASTALIN = [V]CST_ANEW
ATYPE.ATY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPE._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPE._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPE._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If ATYPE.ATY.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATYPE.ATY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ATY.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ATYPE.ATY.ACOLACT)
 If ATYPE.ATY.ACOLACT([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ATY.ACOLACT([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATYPE.ATY.ACOLRUL) : # ATYPERUL -- 2
 If ATYPE.ATY.ACOLRUL(A_N2) <> null
& and !find(ATYPE.ATY.ACOLRUL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
 For A_N3=1 To maxtab(ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR) : # ATYPERPAR -- 3
  If ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
& and !find(ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(ATYPE.ATY.ACOLRUL) : # ATYPERUL -- 2
 If ATYPE.ATY.ACOLRUL(A_N2) <> null
& and !find(ATYPE.ATY.ACOLRUL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
 For A_N3=1 To maxtab(ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR) : # ATYPERPAR -- 3
  If ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
& and !find(ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(ATYPE.ATY.ACOLACT)
 If ATYPE.ATY.ACOLACT([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ATY.ACOLACT([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ATY.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_ATYPE
Trbegin [F:ATY]
 Gosub AINSERT_ATYPE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(ATYPE.ATY.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATYPE.ATY.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(ATYPE.ATY.ACOLACT)
 If ATYPE.ATY.ACOLACT([L]A_I)<>null
  If ATYPE.ATY.ACOLACT([L]A_I).ASTALIN=[V]CST_ADEL or ATYPE.ATY.ACOLACT([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATYPE.ATY.ACOLACT([L]A_I)
   ATYPE.ATY.ACOLACT([L]A_I) = null
  Elsif ATYPE.ATY.ACOLACT([L]A_I).ASTALIN <> [V]CST_ALL
   ATYPE.ATY.ACOLACT([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATYPE.ATY.ACOLRUL)
 If ATYPE.ATY.ACOLRUL(A_N2) <> null
  Local Integer ASTATUS2
  For A_N3=1 To maxtab(ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR)
   If ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3) <> null
    [L]ASTATUS2 = fmet ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3)._AINSERT_AFTER
    If ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN=[V]CST_ADEL or ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3).ASTALIN=[V]CST_ANEWDEL
     FreeInstance ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3)
     ATYPE.ATY.ACOLRUL(A_N2).ACOLRPAR(A_N3) = null
    Endif
    [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
   Endif
  Next A_N3
  [L]ASTATUS2 = fmet ATYPE.ATY.ACOLRUL(A_N2)._AINSERT_AFTER
  If ATYPE.ATY.ACOLRUL(A_N2).ASTALIN=[V]CST_ADEL or ATYPE.ATY.ACOLRUL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATYPE.ATY.ACOLRUL(A_N2)
   ATYPE.ATY.ACOLRUL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_ATYPE
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ATY._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If ATYPE.snapshotEnabled=1
 [L]A_RETIK = ATYPE.revertUpdTick
Endif
[L]ASTATUS = max(fmet ATYPE.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



