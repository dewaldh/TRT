#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan
# Supervisor
## CRUD-CLASSE ## CCMPLANH
# 2018-08-27 13:12:53 454


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(CCMPLANH,ASTATUS)
Variable Instance CCMPLANH Using R_CCMPLANH
Variable Integer ASTATUS

If CCMPLANH = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLANH
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet CCMPLANH.ACTX.AGETAFCRIGHT(CCMPLANH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet CCMPLANH.ACTX.AGETAFCRIGHTC(CCMPLANH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_CCMPLANH
Else
 Gosub AINSERT_CCMPLANH
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = CCMPLANH.freeSnapshot
CCMPLANH.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
CCMPLANH.ASTALIN = [V]CST_ANEW
CCMPLANH.CCMPH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMPLANH._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMPLANH._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMPLANH._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If CCMPLANH.CCMPH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMPLANH.CCMPH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.CCMPH.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMPLANH.CCMPH.CCMPLAND) : # CCMPLAND -- 2
 If CCMPLANH.CCMPH.CCMPLAND(A_N2) <> null
& and !find(CCMPLANH.CCMPH.CCMPLAND(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.CCMPH.CCMPLAND(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMPLANH.CCMPH.CCMPSTATUS) : # CCMPSTATUS -- 3
 If CCMPLANH.CCMPH.CCMPSTATUS(A_N2) <> null
& and !find(CCMPLANH.CCMPH.CCMPSTATUS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(CCMPLANH.CCMPH.CCMPLAND) : # CCMPLAND -- 2
 If CCMPLANH.CCMPH.CCMPLAND(A_N2) <> null
& and !find(CCMPLANH.CCMPH.CCMPLAND(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.CCMPH.CCMPLAND(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMPLANH.CCMPH.CCMPSTATUS) : # CCMPSTATUS -- 3
 If CCMPLANH.CCMPH.CCMPSTATUS(A_N2) <> null
& and !find(CCMPLANH.CCMPH.CCMPSTATUS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.CCMPH.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_CCMPLANH
Trbegin [F:CCMPH]
 Gosub AINSERT_CCMPLANH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(CCMPLANH.CCMPH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMPLANH.CCMPH.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMPLANH.CCMPH.CCMPLAND)
 If CCMPLANH.CCMPH.CCMPLAND(A_N2) <> null
  If CCMPLANH.CCMPH.CCMPLAND(A_N2).ASTALIN=[V]CST_ADEL or CCMPLANH.CCMPH.CCMPLAND(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMPLANH.CCMPH.CCMPLAND(A_N2)
   CCMPLANH.CCMPH.CCMPLAND(A_N2) = null
  Elsif CCMPLANH.CCMPH.CCMPLAND(A_N2).ASTALIN <> [V]CST_ALL
   CCMPLANH.CCMPH.CCMPLAND(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMPLANH.CCMPH.CCMPSTATUS)
 If CCMPLANH.CCMPH.CCMPSTATUS(A_N2) <> null
  If CCMPLANH.CCMPH.CCMPSTATUS(A_N2).ASTALIN=[V]CST_ADEL or CCMPLANH.CCMPH.CCMPSTATUS(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMPLANH.CCMPH.CCMPSTATUS(A_N2)
   CCMPLANH.CCMPH.CCMPSTATUS(A_N2) = null
  Elsif CCMPLANH.CCMPH.CCMPSTATUS(A_N2).ASTALIN <> [V]CST_ALL
   CCMPLANH.CCMPH.CCMPSTATUS(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_CCMPLANH
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.CCMPH._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If CCMPLANH.snapshotEnabled=1
 [L]A_RETIK = CCMPLANH.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMPLANH.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



