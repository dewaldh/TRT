#<AdxTL>@(#)0.0.0.0 $Revision$Class Financial overview queries
# Supervisor
## CRUD-CLASSE ## PJMBUDTRQ
# 2018-08-27 12:39:54 696


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMBUDTRQ [PJQ_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMBUDTRQ") From ASYRCOM : Endif
Local Instance PJMBUDTRQ Using C_PJMBUDTRQ

If !SILENCE : Call TRACE("3 --> New Instance C_PJMBUDTRQ") From ASYRCOM : Endif
PJMBUDTRQ = NewInstance C_PJMBUDTRQ AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PJQ_]PTQ0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMBUDTRQ") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUDTRQ.AREAD([PJQ_]PBTGRP,[PJQ_]PBTCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMBUDTRQ.PBTGRP ="-num$(PJMBUDTRQ.PBTGRP)) From ASYRCOM
 Call TRACE("PJMBUDTRQ.PBTCOD ="-num$(PJMBUDTRQ.PBTCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMBUDTRQ.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMBUDTRQ.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PJQ_]
FreeGroup PJMBUDTRQ
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMBUDTRQ,ACLE,ASTATUS,_ETAG)
Variable Instance PJMBUDTRQ Using C_PJMBUDTRQ
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PBTGRP(20)
Local Char _PBTCOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PBTGRP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBTCOD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File PJMBUDTRQ [PJQ]
Default File [F:PJQ]
Read [F:PJQ]PTQ0 = [L]_PBTGRP;[L]_PBTCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PJQ]UPDTICK)>0
 [L]_ETAG = num$([F:PJQ]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMBUDTRQ,ACLE,ASTATUS)
Variable Instance PJMBUDTRQ Using C_PJMBUDTRQ
Value Char ACLE
Variable Integer ASTATUS
Local Char _PBTGRP(20)
Local Char _PBTCOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PBTGRP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBTCOD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDTRQ.AREAD([L]_PBTGRP,[L]_PBTCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMBUDTRQ,_PBTGRP,_PBTCOD,ASTATUS)
Variable Instance PJMBUDTRQ Using C_PJMBUDTRQ
Value Char _PBTGRP
Value Char _PBTCOD
Variable Integer ASTATUS

If PJMBUDTRQ = null : End : Endif

Gosub AVARIABLES From WMC00PJMBUDTRQ
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMBUDTRQ.APARENT=null
 [L]A_I = PJMBUDTRQ.freeSnapshot
 PJMBUDTRQ.snapshotEnabled = 0
 PJMBUDTRQ.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMBUDTRQ.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUDTRQ._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMBUDTRQ.APARENT=null
 PJMBUDTRQ.snapshotEnabled = 1
 PJMBUDTRQ.setAccessorEnabled = 1
Endif
LogicClose File [PJQ]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDTRQ._ACTION_PARAM("AREAD_BEFORE",[L]_PBTGRP,[L]_PBTCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PJQ]
Read [F:PJQ]PTQ0 = [L]_PBTGRP;[L]_PBTCOD
If fstat
[L]A_ERROR = [L]_PBTGRP+"~"+[L]_PBTCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMBUDTRQ,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PJQ]AUUID)>0 & [F:PJQ]AUUID=NullUuid
 [F:PJQ]AUUID = getUuid
Endif
SetInstance PJMBUDTRQ With [F:PJQ]
PJMBUDTRQ.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDTRQ.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PJMBUDTRQ" & ZONE="CODDES" & IDENT1=PJMBUDTRQ.PBTGRP & IDENT2=PJMBUDTRQ.PBTCOD
 Call ASETTEXTRA(PJMBUDTRQ.AXX,PJMBUDTRQ.AllocGrp(),"CODDES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMBUDTRQ.AXX(maxtab(PJMBUDTRQ.AXX)).FLG = 0
Next AXX
If !len(fmet PJMBUDTRQ.AGETTEXTRA("CODDES"))
 Call ASETTEXTRA(PJMBUDTRQ.AXX,PJMBUDTRQ.AllocGrp(),"CODDES",
& fmet PJMBUDTRQ.AGETTEXTRALAN("CODDES",PJMBUDTRQ.ACTX.AFOLD.ALANGDEF),
& PJMBUDTRQ.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="PJMBUDTRQ" & ZONE="LABEL" & IDENT1=PJMBUDTRQ.PBTGRP & IDENT2=PJMBUDTRQ.PBTCOD
 Call ASETTEXTRA(PJMBUDTRQ.AXX,PJMBUDTRQ.AllocGrp(),"LABEL",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMBUDTRQ.AXX(maxtab(PJMBUDTRQ.AXX)).FLG = 0
Next AXX
If !len(fmet PJMBUDTRQ.AGETTEXTRA("LABEL"))
 Call ASETTEXTRA(PJMBUDTRQ.AXX,PJMBUDTRQ.AllocGrp(),"LABEL",
& fmet PJMBUDTRQ.AGETTEXTRALAN("LABEL",PJMBUDTRQ.ACTX.AFOLD.ALANGDEF),
& PJMBUDTRQ.ACTX.LAN) From ASYRSUB
Endif

Return



