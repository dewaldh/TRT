#<AdxTL>@(#)0.0.0.0 $Revision$Class Search term list
# Supervisor
## CRUD-CLASSE ## BSISEALIS
# 2018-08-27 13:08:27 214


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(BSISEALIS,ASTATUS)
Variable Instance BSISEALIS Using R_BSISEALIS
Variable Integer ASTATUS

If BSISEALIS = null : End : Endif

Gosub AVARIABLES From WMR00BSISEALIS
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_BSISEALIS
Else
 Gosub ADELETE_BSISEALIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
BSISEALIS.ASTALIN = [V]CST_ADEL
BSISEALIS.BSILIS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(BSISEALIS.BSILIS,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If BSISEALIS.BSILIS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISEALIS.BSILIS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
& and BSISEALIS.BSILIS.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSISEALIS.BSILIS.LINES(A_N2).ASTALIN<>[V]CST_ANEW
   BSISEALIS.BSILIS.LINES(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.LINES(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
& and BSISEALIS.BSILIS.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.LINES(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_BSISEALIS
Trbegin [F:BSILIS]
 Gosub ADELETE_BSISEALIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_BSISEALIS
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If BSISEALIS.snapshotEnabled=1
 [L]A_RETIK = BSISEALIS.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSISEALIS.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



