#<AdxTL>@(#)0.0.0.0 $Revision$Class Camt element mapping
# Supervisor
## CRUD-CLASSE ## BSIELTMAP
# 2018-08-27 13:07:32 159


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(BSIELTMAP,ASTATUS)
Variable Instance BSIELTMAP Using R_BSIELTMAP
Variable Integer ASTATUS

If BSIELTMAP = null : End : Endif

Gosub AVARIABLES From WMR00BSIELTMAP
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_BSIELTMAP
Else
 Gosub ADELETE_BSIELTMAP
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
BSIELTMAP.ASTALIN = [V]CST_ADEL
BSIELTMAP.BSIELT.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(BSIELTMAP.BSIELT,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If BSIELTMAP.BSIELT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIELTMAP.BSIELT.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES) : # BSIELTMAPD -- 2
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
& and BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN<>[V]CST_ANEW
   BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.LINES(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES) : # BSIELTMAPD -- 2
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
& and BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.LINES(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_BSIELTMAP
Trbegin [F:BSIELT]
 Gosub ADELETE_BSIELTMAP
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_BSIELTMAP
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If BSIELTMAP.snapshotEnabled=1
 [L]A_RETIK = BSIELTMAP.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIELTMAP.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



