#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management STOSORM 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:29"
A_USER  = "ADMIN"
A_STAMP = "20180828001529"
Return

$TITRES
Chgtzn [M:SOM]VCRNUM With mess(GVCRTYP,701,1)
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If GWSINVLOT<>""
    Chgfmt LOT With GWSINVLOT
   Else
    Chgfmt LOT With "-K:1X"
   Endif
   If GWSINVSLO<>""
    Chgfmt SLO With GWSINVSLO
   Else
    Chgfmt SLO With "-K:1X"
   Endif
   If GWSINVECCMAJ<>""
    Chgfmt ECCVALMAJ With GWSINVECCMAJ
   Else
    Chgfmt ECCVALMAJ With "-K:1X"
   Endif
   If GWSINVECCMIN<>""
    Chgfmt ECCVALMIN With GWSINVECCMIN
   Else
    Chgfmt ECCVALMIN With "-K:1X"
   Endif
   If GWSINVSER<>""
    Chgfmt SERNUM With GWSINVSER
   Else
    Chgfmt SERNUM With "-K:1X"
   Endif
   If GWSINVSERF<>""
    Chgfmt SERNUMF With GWSINVSERF
   Else
    Chgfmt SERNUMF With "-K:1X"
   Endif
   If GWSINVEMP<>""
    Chgfmt LOC With GWSINVEMP
   Else
    Chgfmt LOC With "-K:1X"
   Endif
   If GSINVACT<>""
    Chgfmt QTYSTUACT With GSINVACT
   Else
    Chgfmt QTYSTUACT With "-K:1X"
   Endif
   If GWSINVSHL<>""
    Chgfmt SHLDAT With GWSINVSHL
   Else
    Chgfmt SHLDAT With "-K:1X"
   Endif
   If GWSINVPOT<>""
    Chgfmt POT With GWSINVPOT
   Else
    Chgfmt POT With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask STOSORM [SOM]
Gosub HORODAT
Local Inpbox "STOSORM" From GFONCTION At A_STAMP With A_WINDPREV Mask [SOM] As [SIM_]
Grizo [SOM]5
Grizo [SOM]10
Grizo [SOM]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SOM]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=98 : Y1(0)=1 : Y2(0)=4
X1(1)=1 : X2(1)=98 : Y1(1)=5 : Y2(1)=9
X1(2)=1 : X2(2)=98 : Y1(2)=10 : Y2(2)=28
Return

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1STOSORM
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1STOSORM
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_TRSTYP
Onevent INIT_AREA Call D_TRSTYP(zc) From W1STOSORM
Return

Subprog D_TRSTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSCOD
Onevent INIT_AREA Call D_TRSCOD(zc) From W1STOSORM
Return

Subprog D_TRSCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSCOD,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"","") From SUBADI
Endif
Gosub _AFF
End

$ON_VCRNUM
Return

$ON_PCU
Return

$ON_ZPCU
Onevent BEFORE_AREA Gosub AV_ZPCU From W1STOSORM
Return

$AV_ZPCU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]PCU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_VCRTYP
Onevent INIT_AREA Call D_VCRTYP(zc) From W1STOSORM
Return

Subprog D_VCRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRFFCY
Return

$ON_BETCPY
Onevent INIT_AREA Call D_BETCPY(zc) From W1STOSORM
Return

Subprog D_BETCPY(VALEUR)
Variable Integer VALEUR
If varinit([M]BETCPY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AAASTA
Onevent INIT_AREA Call D_AAASTA(zc) From W1STOSORM
Return

Subprog D_AAASTA(VALEUR)
Variable Integer VALEUR
If varinit([M]AAASTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QQQSTA
Onevent INIT_AREA Call D_QQQSTA(zc) From W1STOSORM
Return

Subprog D_QQQSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]QQQSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RRRSTA
Onevent INIT_AREA Call D_RRRSTA(zc) From W1STOSORM
Return

Subprog D_RRRSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]RRRSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FLGSHLLOT
Onevent INIT_AREA Call D_FLGSHLLOT(zc) From W1STOSORM
Return

Subprog D_FLGSHLLOT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGSHLLOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PECINTLOC
Onevent INIT_AREA Call D_PECINTLOC(zc) From W1STOSORM
Return

Subprog D_PECINTLOC(VALEUR)
Variable Integer VALEUR
If varinit([M]PECINTLOC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PECPLFLOC
Onevent INIT_AREA Call D_PECPLFLOC(zc) From W1STOSORM
Return

Subprog D_PECPLFLOC(VALEUR)
Variable Integer VALEUR
If varinit([M]PECPLFLOC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PECSCOLOC
Onevent INIT_AREA Call D_PECSCOLOC(zc) From W1STOSORM
Return

Subprog D_PECSCOLOC(VALEUR)
Variable Integer VALEUR
If varinit([M]PECSCOLOC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PECQLYCTL
Onevent INIT_AREA Call D_PECQLYCTL(zc) From W1STOSORM
Return

Subprog D_PECQLYCTL(VALEUR)
Variable Integer VALEUR
If varinit([M]PECQLYCTL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STODISFLG
Onevent INIT_AREA Call D_STODISFLG(zc) From W1STOSORM
Return

Subprog D_STODISFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]STODISFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XPCUFIL
Return

$ON_CCE
Onevent BEFORE_AREA Gosub AV_CCE From W1STOSORM
Return

$AV_CCE
## Action INICCEFMT
Call INICCEFMT("") From SETGLBDIE
Gosub _AFF
Return

$ON_OWNFLG
Onevent INIT_AREA Call D_OWNFLG(zc) From W1STOSORM
Return

Subprog D_OWNFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]OWNFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FLGDLULOT
Onevent INIT_AREA Call D_FLGDLULOT(zc) From W1STOSORM
Return

Subprog D_FLGDLULOT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGDLULOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NOTOWNFLG
Onevent INIT_AREA Call D_NOTOWNFLG(zc) From W1STOSORM
Return

Subprog D_NOTOWNFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]NOTOWNFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PECTRU
Onevent INIT_AREA Call D_PECTRU(zc) From W1STOSORM
Return

Subprog D_PECTRU(VALEUR)
Variable Integer VALEUR
If varinit([M]PECTRU,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

$ON_PECECC
Onevent INIT_AREA Call D_PECECC(zc) From W1STOSORM
Return

Subprog D_PECECC(VALEUR)
Variable Integer VALEUR
If varinit([M]PECECC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

$ON_PRINATH
Onevent INIT_AREA Call D_PRINATH(zc) From W1STOSORM
Return

Subprog D_PRINATH(VALEUR)
Variable Integer VALEUR
If varinit([M]PRINATH,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PRIORDH
Onevent BEFORE_AREA Gosub AV_PRIORDH From W1STOSORM
Return

$AV_PRIORDH
## Action PARDEV
Gosub _AFF
Return

$ON_PRIVALH
Onevent BEFORE_AREA Gosub AV_PRIVALH From W1STOSORM
Return

$AV_PRIVALH
## Action PARDEV
Gosub _AFF
Return

$ON_ENTCOD
Return

$ON_TRSFAM
Onevent INIT_AREA Call D_TRSFAM(zc) From W1STOSORM
Return

Subprog D_TRSFAM(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSFAM,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"","") From SUBADI
Endif
Gosub _AFF
End

$ON_PJT
Return

$ON_VCRTYPORI
Onevent INIT_AREA Call D_VCRTYPORI(zc) From W1STOSORM
Return

Subprog D_VCRTYPORI(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMORI
Return

$ON_BPRNUM
Return

$ON_XWRH
Return

$ON_WRHOBY
Onevent INIT_AREA Call D_WRHOBY(zc) From W1STOSORM
Return

Subprog D_WRHOBY(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHOBY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INIQTYACT
Onevent BEFORE_AREA Gosub AV_INIQTYACT From W1STOSORM
Return

$AV_INIQTYACT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]INIQTYACT(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STU
Return

$ON_INIQTY
Onevent BEFORE_AREA Gosub AV_INIQTY From W1STOSORM
Return

$AV_INIQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]INIQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$ON_SORQTYACT
Onevent BEFORE_AREA Gosub AV_SORQTYACT From W1STOSORM
Onevent AFTER_CHANGE Gosub AMM_SORQTYACT From W1STOSORM
Return

$AV_SORQTYACT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]SORQTYACT(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$AMM_SORQTYACT
Call AM_SORQTYACT(zc)
If !mkstat & GOBJET
 zoncou = "SORQTYACT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SORQTYACT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SORQTYACT(VALEUR) From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "SORQTYACT" : GZNUM = 19666 : Endif
Gosub _AFF
End

$ON_SORQTY
Onevent BEFORE_AREA Gosub AV_SORQTY From W1STOSORM
Return

$AV_SORQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_PECQTYACT
Onevent BEFORE_AREA Gosub AV_PECQTYACT From W1STOSORM
Return

$AV_PECQTYACT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PECQTYACT(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PECQTY
Onevent BEFORE_AREA Gosub AV_PECQTY From W1STOSORM
Return

$AV_PECQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PECQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$ON_PECQTYORI
Onevent BEFORE_AREA Gosub AV_PECQTYORI From W1STOSORM
Return

$AV_PECQTYORI
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_XLOC
Return

$ON_STOLOC
Return

$ON_BPCLOC
Return

$ON_SHTQTY
Onevent BEFORE_AREA Gosub AV_SHTQTY From W1STOSORM
Return

$AV_SHTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_SHTQTY(zc) From TRTSTOSOM
Chgfmt [M]SHTQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STOMGTCOD
Onevent INIT_AREA Call D_STOMGTCOD(zc) From W1STOSORM
Return

Subprog D_STOMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NEGSTO
Onevent INIT_AREA Call D_NEGSTO(zc) From W1STOSORM
Return

Subprog D_NEGSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]NEGSTO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTMGT
Onevent INIT_AREA Call D_LOTMGT(zc) From W1STOSORM
Return

Subprog D_LOTMGT(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTMGT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERMGTCOD
Onevent INIT_AREA Call D_SERMGTCOD(zc) From W1STOSORM
Return

Subprog D_SERMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1STOSORM
Onevent BEFORE_LINE Call AVANT_NBLIG From W1STOSORM
Onevent AFTER_LINE Call APRES_NBLIG From W1STOSORM
Onevent BEFORE_INPUT Call AS_NBLIG From W1STOSORM
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From TRTSTOSOM
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(20050,GBOUT1) From OBJDIV
Call TEXTE(23566,GBOUT2) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1STOSORM
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1STOSORM
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B1_NBLIG From TRTSTOSOM
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
## Action SAISTOSERS
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAISTOSERS"
PARMSK(1) = "SOM"
PARMSK(2) = num$(nolign-1)
Call SAISIE_NUM(BASPAG,PARMSK,"ISTOSERS","TRTSTOSERS","XYTRTSTOSERS") From GSAISIE
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From TRTSTOSOM
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action STD
Call APRES_NBLIG From TRTSTOSOM
If mkstat : End : Endif
Gosub _AFF
End

$ON_LOT
Onevent BEFORE_AREA Gosub AV_LOT From W1STOSORM
Onevent CONTROL Call C_LOT(zc) From W1STOSORM
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1STOSORM
Return

$AV_LOT
## Action STD
Call AV_LOT(zc) From TRTSTOSOM
If GWSINVLOT<>""
 Chgfmt [M]LOT(indice) With GWSINVLOT
Else
 Chgfmt [M]LOT(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOT(zc) From W1STOSORM
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LOT(VALEUR) From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOT"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M]STOFCY
 PARMSK(3) = "SOR"
 PARMSK(4) = num$(nolign-1)
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELLOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SLO
Onevent BEFORE_AREA Gosub AV_SLO From W1STOSORM
Onevent CONTROL Call C_SLO(zc) From W1STOSORM
Return

$AV_SLO
## Action STD
Call AV_SLO(zc) From TRTSTOSOM
If GWSINVSLO<>""
 Chgfmt [M]SLO(indice) With GWSINVSLO
Else
 Chgfmt [M]SLO(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SLO(VALEUR) From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 18960 : Endif
Gosub _AFF
End

$ON_ECCVALMAJ
Onevent BEFORE_AREA Gosub AV_ECCVALMAJ From W1STOSORM
Onevent CONTROL Call C_ECCVALMAJ(zc) From W1STOSORM
Onevent BEFORE_INPUT Call AS_ECCVALMAJ(zc) From W1STOSORM
Return

$AV_ECCVALMAJ
## Action STD
Call AV_ECCVALMAJ(zc) From TRTSTOSOM
If GWSINVECCMAJ<>""
 Chgfmt [M]ECCVALMAJ(indice) With GWSINVECCMAJ
Else
 Chgfmt [M]ECCVALMAJ(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ECCVALMAJ(zc) From W1STOSORM
Gosub _AFF
End

Subprog C_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ECCVALMAJ(VALEUR) From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELMAJS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELMAJS"
 PARMSK(1) = [M:SOM]STOFCY
 PARMSK(2) = [M:SOM]ITMREF
 PARMSK(3) = num$([M:SOM]TRSTYP)
 PARMSK(4) = [M:SOM]TRSCOD
 PARMSK(5) = "SOM"
 PARMSK(6) = num$(nolign-1)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELMAJS","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ECCVALMIN
Onevent BEFORE_AREA Gosub AV_ECCVALMIN From W1STOSORM
Return

$AV_ECCVALMIN
If GWSINVECCMIN<>""
 Chgfmt [M]ECCVALMIN(indice) With GWSINVECCMIN
Else
 Chgfmt [M]ECCVALMIN(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SERNUM
Onevent BEFORE_AREA Gosub AV_SERNUM From W1STOSORM
Onevent CONTROL Call C_SERNUM(zc) From W1STOSORM
Return

$AV_SERNUM
## Action STD
Call AV_SERNUM(zc) From TRTSTOSOM
If GWSINVSER<>""
 Chgfmt [M]SERNUM(indice) With GWSINVSER
Else
 Chgfmt [M]SERNUM(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SERNUM(VALEUR) From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 3206 : Endif
Gosub _AFF
End

$ON_SERNUMF
Onevent BEFORE_AREA Gosub AV_SERNUMF From W1STOSORM
Return

$AV_SERNUMF
## Action STD
Call AV_SERNUMF(zc) From TRTSTOSOM
If GWSINVSERF<>""
 Chgfmt [M]SERNUMF(indice) With GWSINVSERF
Else
 Chgfmt [M]SERNUMF(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_WRH
Onevent BEFORE_AREA Gosub AV_WRH From W1STOSORM
Return

$AV_WRH
## Action STD
Call AV_WRH(zc) From TRTSTOSOM
Gosub _AFF
Return

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1STOSORM
Onevent BEFORE_AREA Gosub AV_LOC From W1STOSORM
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1STOSORM
Return

$AV_LOC
## Action STD
Call AV_LOC(zc) From TRTSTOSOM
If GWSINVEMP<>""
 Chgfmt [M]LOC(indice) With GWSINVEMP
Else
 Chgfmt [M]LOC(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1STOSORM
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
If !mkstat
 ## Action STKCTREMPS
 Call STKCTREMPS(VALEUR,[M]STOFCY,GLOCCAT,"",string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SOM]WRH)),[M:SOM]WRH(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELEMP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELEMP"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = GLOCCAT
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SOM]WRH)),[M:SOM]WRH(nolign-1))))
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELEMP","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STA
Onevent BEFORE_AREA Gosub AV_STA From W1STOSORM
Onevent CONTROL Call C_STA(zc) From W1STOSORM
Onevent BEFORE_INPUT Call AS_STA(zc) From W1STOSORM
Return

$AV_STA
## Action STD
Call AV_STA(zc) From TRTSTOSOM
Gosub _AFF
Return

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STA(zc) From W1STOSORM
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,0,2,0,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1287 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = [F:SRU]AUZSST
 PARMSK(2) = "0"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_AVAQTYSTU
Onevent BEFORE_AREA Gosub AV_AVAQTYSTU From W1STOSORM
Return

$AV_AVAQTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]AVAQTYSTU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W1STOSORM
Onevent CONTROL Call C_QTYSTU(zc) From W1STOSORM
Onevent AFTER_CHANGE Gosub AMM_QTYSTU From W1STOSORM
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_QTYSTU(zc) From TRTSTOSOM
Chgfmt [M]QTYSTU(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog C_QTYSTU(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "QTYSTU" : GZNUM = 6898 : Endif
If !mkstat
 ## Action STD
 Call C_QTYSTU(VALEUR) From TRTSTOSOM
 If mkstat : GERR = 1 : GZONE = "QTYSTU" : GZNUM = 6898 : Endif
Endif
Gosub _AFF
End

$AMM_QTYSTU
Call AM_QTYSTU(zc)
If !mkstat & GOBJET
 zoncou = "QTYSTU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYSTU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYSTU(VALEUR) From TRTSTOSOM
If mkstat : GERR = 1 : GZONE = "QTYSTU" : GZNUM = 6898 : Endif
Gosub _AFF
End

$ON_QTYSTUORI
Onevent BEFORE_AREA Gosub AV_QTYSTUORI From W1STOSORM
Return

$AV_QTYSTUORI
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2STOSORM
Return

$TIT_COL
Gosub TIT_COL From W2STOSORM
Return


