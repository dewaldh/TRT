#<AdxTL>@(#)0.0.0.0 $Revision$Class Index of searchable classes
# Supervisor
## CRUD-CLASSE ## ACLAIDXSRH
# 2018-08-27 13:00:36 148


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ACLASSE [ACLA_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ACLAIDXSRH") From ASYRCOM : Endif
Local Instance ACLAIDXSRH Using R_ACLAIDXSRH

If !SILENCE : Call TRACE("3 --> New Instance R_ACLAIDXSRH") From ASYRCOM : Endif
ACLAIDXSRH = NewInstance R_ACLAIDXSRH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ACLA_]ACLA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ACLAIDX") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ACLAIDXSRH.AREAD([ACLA_]CODCLA))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ACLAIDXSRH.CLA.CODCLA ="-num$(ACLAIDXSRH.CLA.CODCLA)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ACLAIDXSRH.CLA.AKEYS)
  Call TRACE("-"-num$(I)-":"-ACLAIDXSRH.CLA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ACLA_]
FreeGroup ACLAIDXSRH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ACLAIDXSRH,ACLE,ASTATUS,_ETAG)
Variable Instance ACLAIDXSRH Using R_ACLAIDXSRH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODCLA(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODCLA = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File ACLASSE [ACLA]
Default File [F:ACLA]
Read [F:ACLA]ACLA0 = [L]_CODCLA
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ACLA]UPDTICK)>0
 [L]_ETAG = num$([F:ACLA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ACLAIDXSRH,ACLE,ASTATUS)
Variable Instance ACLAIDXSRH Using R_ACLAIDXSRH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODCLA(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODCLA = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ACLAIDXSRH.AREAD([L]_CODCLA))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ACLAIDXSRH,_CODCLA,ASTATUS)
Variable Instance ACLAIDXSRH Using R_ACLAIDXSRH
Value Char _CODCLA
Variable Integer ASTATUS

If ACLAIDXSRH = null : End : Endif

Gosub AVARIABLES From WMR00ACLAIDXSRH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ACLAIDXSRH.APARENT=null
 [L]A_I = ACLAIDXSRH.freeSnapshot
 ACLAIDXSRH.snapshotEnabled = 0
 ACLAIDXSRH.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ACLAIDXSRH.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ACLAIDXSRH.CLA.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ACLAIDXSRH.CLA.AREAD([L]_CODCLA))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ACLAIDXSRH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ACLAIDXSRH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ACLAIDXSRH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ACLAIDXSRH.APARENT=null
 ACLAIDXSRH.snapshotEnabled = 1
 ACLAIDXSRH.setAccessorEnabled = 1
Endif
LogicClose File [ACLA]
End



