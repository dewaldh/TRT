#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales contract
# Supervisor
## CRUD-CLASSE ## YSALCTR
# 2019-05-06 09:07:36 883


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSALCTR [YSLC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_YSALCTR") From ASYRCOM : Endif
Local Instance YSALCTR Using R_YSALCTR

If !SILENCE : Call TRACE("3 --> New Instance R_YSALCTR") From ASYRCOM : Endif
YSALCTR = NewInstance R_YSALCTR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YSLC_]YSLC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSALCTR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSALCTR.AREAD([YSLC_]YSLCID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSALCTR.YSLC.YSLCID ="-num$(YSALCTR.YSLC.YSLCID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSALCTR.YSLC.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSALCTR.YSLC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YSLC_]
FreeGroup YSALCTR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSALCTR,ACLE,ASTATUS,_ETAG)
Variable Instance YSALCTR Using R_YSALCTR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YSLCID(25)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSLCID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YSALCTR [YSLC]
Default File [F:YSLC]
Read [F:YSLC]YSLC0 = [L]_YSLCID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YSLC]UPDTICK)>0
 [L]_ETAG = num$([F:YSLC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSALCTR,ACLE,ASTATUS)
Variable Instance YSALCTR Using R_YSALCTR
Value Char ACLE
Variable Integer ASTATUS
Local Char _YSLCID(25)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSLCID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSALCTR.AREAD([L]_YSLCID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSALCTR,_YSLCID,ASTATUS)
Variable Instance YSALCTR Using R_YSALCTR
Value Char _YSLCID
Variable Integer ASTATUS

If YSALCTR = null : End : Endif

Gosub AVARIABLES From WMR00YSALCTR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSALCTR.APARENT=null
 [L]A_I = YSALCTR.freeSnapshot
 YSALCTR.snapshotEnabled = 0
 YSALCTR.setAccessorEnabled = 0
Endif

If fmet YSALCTR.ACTX.AGETAFCRIGHT(YSALCTR,"GESYSLC",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:YSLC]
Read [F:YSLC]YSLC0 = [L]_YSLCID
If fstat
[L]A_ERROR = [L]_YSLCID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSALCTR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:YSLC]YACCESS
If fmet YSALCTR.ACTX.AGETAFCRIGHTR(YSALCTR,"GESYSLC",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet YSALCTR.ACTX.AGETACSRIGHTC(YSALCTR,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet YSALCTR.ACTX.ASTACRITROLE(YSALCTR,[L]_YSLCID
& ,"YSLC","YSLC",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet YSALCTR.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  YSALCTR.YSLC.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet YSALCTR.YSLC.AREAD([L]_YSLCID))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet YSALCTR.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & YSALCTR.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet YSALCTR._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If YSALCTR.APARENT=null
   YSALCTR.snapshotEnabled = 1
   YSALCTR.setAccessorEnabled = 1
  Endif
  LogicClose File [YSLC] ,[YSCU] ,[YCMT] ,[YCMA] ,[YSCV] ,[YSCRC] ,[YSREB] ,[YSREC] ,[YSWF] ,[YWFC] ,[YRMA] ,[YADJ] ,[YBBH]
  End
  


