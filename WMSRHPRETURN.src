#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHPRETURN PRETURN
# 2018-08-27 12:43:04 379

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","PRETURN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PRETURN [PNH]
If filinfo(filpath("FIL","PRETURND","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PRETURND [PND]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CAL]
If filinfo(filpath("FIL","STOJOU","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File STOJOU [STJ]
If filinfo(filpath("FIL","PRECEIPTD","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PRECEIPTD [PTD]
Local File PRETURN [PNH_]
Local Char KEY_PNH(120)(1..3)
Local Char KEY_PND(120)(1..3)
Local Char KEY_CAL(120)(1..3)
Local Char KEY_STJ(120)(1..3)
Local Char KEY_PTD(120)(1..3)
#Empty keys :
KEY_PNH(3) = ""
KEY_PND(3) = "+0"
KEY_CAL(3) = "+0++0+0++0"
KEY_STJ(3) = "+0++0"
KEY_PTD(3) = "+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [PNH]
LogicClose File [PND]
LogicClose File [CAL]
LogicClose File [STJ]
LogicClose File [PTD]
LogicClose File [PNH_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [PNH] With
& [PND]PND0~=[PNH]PNHNUM,
& [CAL]CAL0='PND';0;[F:PND]PNHNUM;[F:PND]PNDLIN;0;'';1,
& [STJ]STJ1=[PND]PNHFCY;8;[PND]PNHNUM;[PND]PNDLIN,
& [PTD]PTD0=[PND]PTHNUM;[PND]PTDLIN
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [PNH] With
& [PND]PND0~=[PNH]PNHNUM,
& [CAL]CAL0='PND';0;[F:PND]PNHNUM;[F:PND]PNDLIN;0;'';1,
& [STJ]STJ1=[PND]PNHFCY;8;[PND]PNHNUM;[PND]PNDLIN,
& [PTD]PTD0=[PND]PTHNUM;[PND]PTDLIN
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_PNH(2) = [F:PNH]PNHNUM
KEY_PND(2) = [F:PND]PNHNUM+"+"+num$([F:PND]PNDLIN)
KEY_CAL(2) = [F:CAL]ABRFIC+"+"+num$([F:CAL]VCRTYP)+"+"+[F:CAL]VCRNUM+"+"+num$([F:CAL]VCRLIN)+"+"+num$([F:CAL]VCRSEQ)+"+"+[F:CAL]CPLCLE+"+"+num$([F:CAL]ANALIG)
KEY_STJ(2) = [F:STJ]STOFCY+"+"+num$([F:STJ]VCRTYP)+"+"+[F:STJ]VCRNUM+"+"+num$([F:STJ]VCRLIN)
KEY_PTD(2) = [F:PTD]PTHNUM+"+"+num$([F:PTD]PTDLIN)

If (KEY_PNH(2) <> KEY_PNH(3)) & (KEY_PNH(1) <> KEY_PNH(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_PRETURN(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:PNH]
FINS = 1
Local Integer DIE_MAX:DIE_MAX0
CJ1=1
For CI1 = 0 To dim([F:PNH]DIE)-1
 Break ([F:PNH]DIE(CI1)="" & [F:PNH]CCE(CI1)="")
 DIE_MAX+=1
 #Create a new instance
 INS.COLDIMS(CJ1) = NewInstance C_PRETURN_COLDIMS(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.COLDIMS(CJ1).setaccessorEnabled = 0
 INS.COLDIMS(CJ1).DIE=[F:PNH]DIE(CI1)
 INS.COLDIMS(CJ1).CCE=[F:PNH]CCE(CI1)
 CJ1+=1
Next CI1
 KEY_PNH(1) = KEY_PNH(2)
Endif : # KEY_PNH(1) <> KEY_PNH(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"PNHNUM":'          +'"'+escJson(INS.PNHNUM)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"PNHFCY":'         +'"'+escJson(INS.PNHFCY)+'"'
Append ASND.DATA ,',"BUY":'            +'"'+escJson(INS.BUY)+'"'
Append ASND.DATA ,',"BPSNUM":'         +'"'+escJson(INS.BPSNUM)+'"'
Append ASND.DATA ,',"BPAADD":'         +'"'+escJson(INS.BPAADD)+'"'
Append ASND.DATA ,',"CTY":'            +'"'+escJson(INS.CTY)+'"'
Append ASND.DATA ,',"POSCOD":'         +'"'+escJson(INS.POSCOD)+'"'
Append ASND.DATA ,',"SAT":'            +'"'+escJson(INS.SAT)+'"'
Append ASND.DATA ,',"CRY":'            +'"'+escJson(INS.CRY)+'"'
Append ASND.DATA ,',"CRYNAM":'         +'"'+escJson(INS.CRYNAM)+'"'
Append ASND.DATA ,',"BPSINV":'         +'"'+escJson(INS.BPSINV)+'"'
Append ASND.DATA ,',"BPAINV":'         +'"'+escJson(INS.BPAINV)+'"'
Append ASND.DATA ,',"BPRPAY":'         +'"'+escJson(INS.BPRPAY)+'"'
Append ASND.DATA ,',"BPAPAY":'         +'"'+escJson(INS.BPAPAY)+'"'
Append ASND.DATA ,',"AUZNUM":'         +'"'+escJson(INS.AUZNUM)+'"'
Append ASND.DATA ,',"VACBPR":'         +'"'+escJson(INS.VACBPR)+'"'
Append ASND.DATA ,',"REM":'            +'"'+escJson(INS.REM)+'"'
Append ASND.DATA ,',"BPTNUM":'         +'"'+escJson(INS.BPTNUM)+'"'
Append ASND.DATA ,',"FFWNUM":'         +'"'+escJson(INS.FFWNUM)+'"'
Append ASND.DATA ,',"FFWADD":'         +'"'+escJson(INS.FFWADD)+'"'
Append ASND.DATA ,',"MDL":'            +'"'+escJson(INS.MDL)+'"'
Append ASND.DATA ,',"EECNAT":'         +'"'+escJson(INS.EECNAT)+'"'
Append ASND.DATA ,',"EECSCH":'         +'"'+escJson(INS.EECSCH)+'"'
Append ASND.DATA ,',"EECICT":'         +'"'+escJson(INS.EECICT)+'"'
Append ASND.DATA ,',"ICTCTY":'         +'"'+escJson(INS.ICTCTY)+'"'
Append ASND.DATA ,',"EECNUM":'         +'"'+escJson(INS.EECNUM)+'"'
Append ASND.DATA ,',"WEU":'            +'"'+escJson(INS.WEU)+'"'
Append ASND.DATA ,',"VOU":'            +'"'+escJson(INS.VOU)+'"'
Append ASND.DATA ,',"TEX1":'           +'"'+escJson(INS.TEX1)+'"'
Append ASND.DATA ,',"TEX2":'           +'"'+escJson(INS.TEX2)+'"'
Append ASND.DATA ,',"TRSCOD":'         +'"'+escJson(INS.TRSCOD)+'"'
Append ASND.DATA ,',"ENTCOD":'         +'"'+escJson(INS.ENTCOD)+'"'
Append ASND.DATA ,',"WRHE":'           +'"'+escJson(INS.WRHE)+'"'
Append ASND.DATA ,',"BPRLNK":'         +'"'+escJson(INS.BPRLNK)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"COLDIMS":['
For CI1=1 To DIE_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"DIE":'             +'"'+escJson(INS.COLDIMS(CJ1).DIE)+'"'
 Append ASND.DATA ,',"CCE":'            +'"'+escJson(INS.COLDIMS(CJ1).CCE)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_PNH(1),KEY_PND(1),KEY_CAL(1),KEY_STJ(1),KEY_PTD(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:PNH]PNHNUM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From PRETURN_CSTD
Gosub METHODS From PRETURN_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="PRETURN" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PRETURN")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PRETURN")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,2786)+'"'
Append WCLOB,',"$url":"{$baseUrl}/PRETURN'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{PNHFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2786)+' {$key}"'
Append WCLOB,',"$key":"{PNHNUM}"'
Append WCLOB,',"$url":"{$baseUrl}/PRETURN('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'PRETURN.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"PNHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2789)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PNHFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2788)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BUY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1752)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPSNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3680)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1499)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,251)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"POSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"SAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,9606)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"CRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,263)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CRYNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1579)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"BPSINV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8340)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAINV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4450)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPRPAY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5365)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAPAY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26610)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"AUZNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7776)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"VACBPR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3673)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"REM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1775)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"BPTNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1434)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"FFWNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3718)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"FFWADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26527)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"MDL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1722)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"EECNAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2520)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"EECSCH":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1869)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"EECICT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2523)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ICTCTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26526)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"EECNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1584)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"WEU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2084)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"VOU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2082)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"TEX1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"TEX2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"TRSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,18946)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"ENTCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,20173)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"WRHE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,281)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPRLNK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,48561)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"COLDIMS":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":20'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"DIE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,29327)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CCE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1688)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/PRETURN('+"'"+'{$key}'+"'"+')?representation=PRETURN.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHPRETURNB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHPRETURNB
End RES


