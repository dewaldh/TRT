#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PADPSO

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".PREQUISO" : If clalev([F:PSO])=0 : Local File =OUVTAB [PSO] : Endif
OUVTAB = GDOSSIER+".PREQUIS" : If clalev([F:PSH])=0 : Local File =OUVTAB [PSH] : Endif
OUVTAB = GDOSSIER+".PREQUISD" : If clalev([F:PSD])=0 : Local File =OUVTAB [PSD] : Endif
OUVTAB = "Link [PSO]"
Link [PSO] With
& [PSH]PSH0 ~= [F:PSO]PSHNUM,
& [PSD]PSD0 ~= [F:PSO]PSHNUM;[F:PSO]PSDLIN
& As [LNK_]
& Order By Key CLE = [PSO]PSHNUM;[PSO]PSDLIN;[PSO]POHNUM;[PSO]POPLIN;[PSO]POQSEQ
FILTRE = ""
Return

$FERME
If clalev([F:PSO]) : Close local File [PSO] : Endif
If clalev([F:PSH]) : Close local File [PSH] : Endif
If clalev([F:PSD]) : Close local File [PSD] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..6)
Local Integer DTYP(1..6)
Local Integer NBDCLE
NBDCLE = 6
DCLE(1) = "PSHNUM"
DTYP(1) =  7
DCLE(2) = "DOCTYPLIN"
DTYP(2) =  7
DCLE(3) = "PSDLIN"
DTYP(3) =  3
DCLE(4) = "POHNUM"
DTYP(4) =  7
DCLE(5) = "POPLIN"
DTYP(5) =  3
DCLE(6) = "POQSEQ"
DTYP(6) =  3
Return

$CHARGE_CLE
If dim([F:AAA_]PSHNUM)>0
 [F:AAA_]PSHNUM = [F:PSO]PSHNUM
Endif
If dim([F:AAA_]DOCTYPLIN)>0
 [F:AAA_]DOCTYPLIN = func TRTDIMBIPAD.CREATEPADPSDPSO(1)
Endif
If dim([F:AAA_]PSDLIN)>0
 [F:AAA_]PSDLIN = [F:PSO]PSDLIN
Endif
If dim([F:AAA_]POHNUM)>0
 [F:AAA_]POHNUM = [F:PSO]POHNUM
Endif
If dim([F:AAA_]POPLIN)>0
 [F:AAA_]POPLIN = [F:PSO]POPLIN
Endif
If dim([F:AAA_]POQSEQ)>0
 [F:AAA_]POQSEQ = [F:PSO]POQSEQ
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]PSHNUM=[F:PSO]PSHNUM"
Append PFLT, " & [F:AAA_]PSDLIN=[F:PSO]PSDLIN"
Append PFLT, " & [F:AAA_]POHNUM=[F:PSO]POHNUM"
Append PFLT, " & [F:AAA_]POPLIN=[F:PSO]POPLIN"
Append PFLT, " & [F:AAA_]POQSEQ=[F:PSO]POQSEQ"

End

$MAJFLD
### PSHNUM
[L]FLD="PSHNUM"
[L]FORMULE='[F:PSO]PSHNUM'
If dim([F:AAA_]PSHNUM)>0
 [F:AAA_]PSHNUM = [F:PSO]PSHNUM
Endif

### PSDLIN
[L]FLD="PSDLIN"
[L]FORMULE='[F:PSO]PSDLIN'
If dim([F:AAA_]PSDLIN)>0
 [F:AAA_]PSDLIN = [F:PSO]PSDLIN
Endif

### DOCTYPLIN
[L]FLD="DOCTYPLIN"
[L]FORMULE='func TRTDIMBIPAD.CREATEPADPSDPSO(1)'
If dim([F:AAA_]DOCTYPLIN)>0
 [F:AAA_]DOCTYPLIN = func TRTDIMBIPAD.CREATEPADPSDPSO(1)
Endif

### PSHPOH
[L]FLD="PSHPOH"
[L]FORMULE='[F:PSO]POHNUM+num$([F:PSO]POPLIN)+num$([F:PSO]POQSEQ)'
If dim([F:AAA_]PSHPOH)>0
 [F:AAA_]PSHPOH = [F:PSO]POHNUM+num$([F:PSO]POPLIN)+num$([F:PSO]POQSEQ)
Endif

### POHNUM
[L]FLD="POHNUM"
[L]FORMULE='[F:PSO]POHNUM'
If dim([F:AAA_]POHNUM)>0
 [F:AAA_]POHNUM = [F:PSO]POHNUM
Endif

### POPLIN
[L]FLD="POPLIN"
[L]FORMULE='[F:PSO]POPLIN'
If dim([F:AAA_]POPLIN)>0
 [F:AAA_]POPLIN = [F:PSO]POPLIN
Endif

### POQSEQ
[L]FLD="POQSEQ"
[L]FORMULE='[F:PSO]POQSEQ'
If dim([F:AAA_]POQSEQ)>0
 [F:AAA_]POQSEQ = [F:PSO]POQSEQ
Endif


Return

