#<AdxTL>@(#)0.0.0.0 $Revision$Class Subcontract orders
# Supervisor
## ACLA-CLASSE ## SCOHEAD
# 2018-08-27 13:27:56 749


####################################################################
# Actions
####################################################################

$ACTION
Local    Char     CURSTR(30) , CODTRT(30)(1..16)
Local    Integer  TYPTRT(1..16) , NBRTRT , INDTRT
[L]CURSTR = "SCOHEAD"

Gosub ACTION From ASYRSUB
Return

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "SCOHEAD_RSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "WMRS_SCOHEAD"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMR0SCOHEAD
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
If this.SCO<>null
 [L]ASTATUS = fmet this.SCO._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMR0SCOHEAD
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
If this.SCO<>null
 [L]ASTATUS = fmet this.SCO._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# EXEC OPERATION
####################################################################
Subprog EXE_OPERATION(WCLA,_OPERATION,ACLBRETURN,ACLE,ATBPAR,TBVAL)
Variable Instance WCLA Using OBJECT
Value    Char _OPERATION
Variable Clbfile ACLBRETURN
Value    Char ACLE
Variable Char ATBPAR()(1..)
Variable Char TBVAL()(1..)
Local Integer ASTATUS
Case [L]_OPERATION
 When Default
Endcase 
End

####################################################################
# EXEC METHOD
####################################################################
Subprog EXE_METHOD(WCLA,_METHOD,NAME_INSTANCE,ATBPAR,TBVAL)
Variable Instance WCLA Using OBJECT
Value    Char  NAME_INSTANCE
Value    Char _METHOD
Variable Char ATBPAR()(1..)
Variable Char TBVAL()(1..)
Local Integer ASTATUS
Case [L]_METHOD
 When Default
Endcase 
End

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.SCO = NewInstance C_SCOHEAD(this.ACTX,NullUuid,0,this,"SCO") AllocGroup this
this.SCO.ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SCO.ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SCO.SCI(1) = NewInstance C_SCOITM(this.ACTX,NullUuid,1,this.SCO,"SCI") AllocGroup this
this.SCO.SCI(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SCO.SCI(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SCO.SCI.SCICAL(1) = NewInstance C_CPTANALIN(this.ACTX,NullUuid,1,this.SCO.SCI,"SCICAL") AllocGroup this
this.SCO.SCI.SCICAL(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SCO.SCI.SCICAL(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SCO.SCI.SCS(1) = NewInstance C_SCOSRV(this.ACTX,NullUuid,1,this.SCO.SCI,"SCS") AllocGroup this
this.SCO.SCI.SCS(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SCO.SCI.SCS(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.SCO.SCI.SCS.SCSCAL(1) = NewInstance C_CPTANALIN(this.ACTX,NullUuid,1,this.SCO.SCI.SCS,"SCSCAL") AllocGroup this
this.SCO.SCI.SCS.SCSCAL(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.SCO.SCI.SCS.SCSCAL(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



