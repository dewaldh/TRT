#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ORATRA0 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:06:28"
A_USER  = "ADMIN"
A_STAMP = "20180828000628"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ORATRA0 [ORA0]
Gosub HORODAT
Local Inpbox "ORATRA0" From GFONCTION At A_STAMP With A_WINDPREV Mask [ORA0] As [SIM_]
Grizo [ORA0]5
Grizo [ORA0]10
Grizo [ORA0]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ORA0]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=22 : X2(0)=91 : Y1(0)=5 : Y2(0)=10
X1(1)=22 : X2(1)=91 : Y1(1)=11 : Y2(1)=20
X1(2)=22 : X2(2)=91 : Y1(2)=21 : Y2(2)=23
Return

$ON_AGGREG
Onevent INIT_AREA Call D_AGGREG(zc) From W1ORATRA0
Onevent BEFORE_INPUT Call AS_AGGREG(zc) From W1ORATRA0
Return

Subprog D_AGGREG(VALEUR)
Variable Integer VALEUR
If varinit([M]AGGREG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AGGREG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WAITS
Onevent INIT_AREA Call D_WAITS(zc) From W1ORATRA0
Onevent BEFORE_INPUT Call AS_WAITS(zc) From W1ORATRA0
Return

Subprog D_WAITS(VALEUR)
Variable Integer VALEUR
If varinit([M]WAITS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WAITS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SYS
Onevent INIT_AREA Call D_SYS(zc) From W1ORATRA0
Onevent BEFORE_INPUT Call AS_SYS(zc) From W1ORATRA0
Return

Subprog D_SYS(VALEUR)
Variable Integer VALEUR
If varinit([M]SYS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SYS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRI
Onevent INIT_AREA Call D_TRI(zc) From W1ORATRA0
Onevent BEFORE_INPUT Call AS_TRI(zc) From W1ORATRA0
Return

Subprog D_TRI(VALEUR)
Variable Integer VALEUR
If varinit([M]TRI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AVANCE
Onevent BEFORE_INPUT Call AS_AVANCE(zc) From W1ORATRA0
Onevent INIT_AREA Call D_AVANCE(zc) From W1ORATRA0
Return

Subprog D_AVANCE(VALEUR)
Variable Char    VALEUR()
If varinit([M]AVANCE,indice)=0
 VALEUR = "48"
Endif
Gosub _AFF
End

Subprog AS_AVANCE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(28956,GBOUTI) From OBJDIV
Onkey 178 Titled GBOUTI Call CL_AVANCE(zc) From W1ORATRA0
Gosub _AFF
End

Subprog CL_AVANCE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ORATRA1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ORATRA1"
 Call TRAITE_CHAR(VALEUR,PARMSK,"","ORATRA","ORATRA1",3,"SPEORATRA") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PRES
Onevent AFTER_AREA Call AP_PRES(zc) From W1ORATRA0
Onevent INIT_AREA Call D_PRES(zc) From W1ORATRA0
Onevent BEFORE_INPUT Call AS_PRES(zc) From W1ORATRA0
Return

Subprog D_PRES(VALEUR)
Variable Integer VALEUR
If varinit([M]PRES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PRES(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_PRES(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_PRES(VALEUR) From ORATRA
If mkstat : GERR = 1 : GZONE = "PRES" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_NBPRES
Onevent BEFORE_AREA Gosub AV_NBPRES From W1ORATRA0
Onevent CONTROL Call C_NBPRES(zc) From W1ORATRA0
Return

$AV_NBPRES
## Action STD
Call AV_NBPRES(zc) From ORATRA
Gosub _AFF
Return

Subprog C_NBPRES(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$CHG_STY
Return


