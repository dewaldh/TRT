#<AdxTL>@(#)0.0.0.0 $Revision$Class Project budget
# Sage X3 supervisor
## CRUD-CLASSE ## PJMBUD
# 2018-06-20 06:51:50 370


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMBUD [PJBU_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMBUD") From ASYRCOM : Endif
Local Instance PJMBUD Using C_PJMBUD

If !SILENCE : Call TRACE("3 --> New Instance C_PJMBUD") From ASYRCOM : Endif
PJMBUD = NewInstance C_PJMBUD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PJBU_]PJBU0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMBUD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.AREAD([PJBU_]OPPNUM,[PJBU_]PBUCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMBUD.OPPNUM ="-num$(PJMBUD.OPPNUM)) From ASYRCOM
 Call TRACE("PJMBUD.PBUCOD ="-num$(PJMBUD.PBUCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMBUD.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMBUD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PJBU_]
FreeGroup PJMBUD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMBUD,ACLE,ASTATUS,_ETAG)
Variable Instance PJMBUD Using C_PJMBUD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBUCOD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File PJMBUD [PJBU]
Default File [F:PJBU]
Read [F:PJBU]PJBU0 = [L]_OPPNUM;[L]_PBUCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PJBU]UPDTICK)>0
 [L]_ETAG = num$([F:PJBU]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMBUD,ACLE,ASTATUS)
Variable Instance PJMBUD Using C_PJMBUD
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBUCOD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.AREAD([L]_OPPNUM,[L]_PBUCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMBUD,_OPPNUM,_PBUCOD,ASTATUS)
Variable Instance PJMBUD Using C_PJMBUD
Value Char _OPPNUM
Value Char _PBUCOD
Variable Integer ASTATUS

If PJMBUD = null : End : Endif

Gosub AVARIABLES From WMC00PJMBUD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMBUD.APARENT=null
 [L]A_I = PJMBUD.freeSnapshot
 PJMBUD.snapshotEnabled = 0
 PJMBUD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMBUD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMBUD.APARENT=null
 PJMBUD.snapshotEnabled = 1
 PJMBUD.setAccessorEnabled = 1
Endif
LogicClose File [PJBU] ,[PJBU0] ,[PIML] ,[SPLD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUD._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_PBUCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PJBU]
Read [F:PJBU]PJBU0 = [L]_OPPNUM;[L]_PBUCOD
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_PBUCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMBUD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PJBU]AUUID)>0 & [F:PJBU]AUUID=NullUuid
 [F:PJBU]AUUID = getUuid
Endif
If dim([F:PJBU]PBUDESTEX)>0: Raz [F:PJBU]PBUDESTEX: Endif
If dim([F:PJBU]PBUCOMTEX)>0: Raz [F:PJBU]PBUCOMTEX: Endif
SetInstance PJMBUD With [F:PJBU]
PJMBUD.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:PJBU0]
 [L]A_N2=0
 For [F:PJBU0]PJLB0 Where OPPNUM=[F:PJBU]OPPNUM & PBUCOD=[F:PJBU]PBUCOD
  [L]A_N2 +=1
  PJMBUD.BUDLIG(A_N2) = NewInstance  C_PJMBUDLIG(PJMBUD.ACTX,NullUuid,[L]A_N2,PJMBUD,"BUDLIG") AllocGroup PJMBUD
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.BUDLIG(A_N2).ADDINSTANCE_BOUND)
  Callmet PJMBUD.BUDLIG(A_N2).AREAD([F:PJBU0]OPPNUM,[F:PJBU0]PBUCOD,[F:PJBU0]PLBSEQ)
  PJMBUD.BUDLIG(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.BUDLIG(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.BUDLIG(A_N2).ASETATTRIBUTE("PBUCOD","$namProParent","PBUCOD"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.BUDLIG(A_N2).ASETATTRIBUTE("PLBSEQ","$isDisabled","true"))
 Next PJBU0
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:PIML]
 [L]A_N2=1
 Read [F:PIML]PIM0 = [F:PJBU]KEYCONCAT
 If !fstat
  Callmet PJMBUD.PIMPL(A_N2).AREAD([F:PIML]PIMNUM)
  PJMBUD.PIMPL(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.PIMPL(A_N2).ASETATTRIBUTE("PIMNUM","$namProParent","KEYCONCAT"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.PIMPL(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"PIMPL")+" : "+num$([F:PJBU]KEYCONCAT)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"PIMPL"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SPLD]
 Filter [F:SPLD] Where [F:SPLD]TASCOD = ""
 [L]A_N2=0
 For [F:SPLD]PSPLD0 Where OPPNUM=[F:PJBU]OPPNUM & PBUCOD=[F:PJBU]PBUCOD
  [L]A_N2 +=1
  PJMBUD.SPLD(A_N2) = NewInstance  C_PJMSALITMD(PJMBUD.ACTX,NullUuid,[L]A_N2,PJMBUD,"SPLD") AllocGroup PJMBUD
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.SPLD(A_N2).ADDINSTANCE_BOUND)
  Callmet PJMBUD.SPLD(A_N2).AREAD([F:SPLD]OPPNUM,[F:SPLD]PBUCOD,[F:SPLD]TASCOD,[F:SPLD]SEQNUM)
  PJMBUD.SPLD(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.SPLD(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.SPLD(A_N2).ASETATTRIBUTE("PBUCOD","$namProParent","PBUCOD"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.SPLD(A_N2).ASETATTRIBUTE("TASCOD","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.SPLD(A_N2).ASETATTRIBUTE("SEQNUM","$isDisabled","true"))
 Next SPLD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Filter [F:SPLD]
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet PJMBUD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



