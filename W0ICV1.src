#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ICV1 

Subprog SAIMSK(IMPFIC,ACTION,IMPTRT)
Value Char IMPFIC
Value Char ACTION
Value Char IMPTRT

Gosub DEFVAR

####################################
## Bloc liste 1
####################################
IMPTBL = 0

## Zone CNS
mkstat = 0
zoncou = "CNS"
indice = 0
IMPENT = [M]CNS
If varinit([M]CNS,indice)=0
 IMPENT = 1
Endif
If varmode([M]CNS,indice)=0
 [M]CNS(indice) = IMPENT
 If !mkstat
  IMPMOD = 0 : IMPZON = "CNS" : Gosub ACTION From =IMPTRT
  IMPENT = [M]CNS(indice)
 Endif
 If IMPENT=0
  mkstat = 1 : GMESSAGE = mess(10,123,1)
 Endif
 If mkstat : GERR = 1 : GZONE = "CNS" : GZNUM = 48898 : Endif
 Gosub AFF From GSAISIE
 If mkstat : End : Endif
 If !mkstat
  SAVACT = GACTION : GACTION = "STD"
  Call AP_CNS(IMPENT) From SUBICV
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "CNS" : GZNUM = 48898 : Endif
  Gosub AFF From GSAISIE
  If mkstat : End : Endif
 Endif
Endif
[M]CNS = IMPENT

## Zone CNSVAL
mkstat = 0
zoncou = "CNSVAL"
indice = 0
If varmode([M]CNSVAL,indice)=0
 If !mkstat
  IMPMOD = 0 : IMPZON = "CNSVAL" : Gosub ACTION From =IMPTRT
 Endif
Endif

## Zone SEQ
mkstat = 0
zoncou = "SEQ"
indice = 0
IMPENT = [M]SEQ
If varinit([M]SEQ,indice)=0
 IMPENT = 1
Endif
[M]SEQ = IMPENT

## Zone SEQTYP
mkstat = 0
zoncou = "SEQTYP"
indice = 0
IMPENT = [M]SEQTYP
WNUM = IMPENT
If varinit([M]SEQTYP,indice)=0
 IMPENT = 1
Endif
If varmode([M]SEQTYP,indice)=0
 [M]SEQTYP(indice) = IMPENT
 If !mkstat
  IMPMOD = 0 : IMPZON = "SEQTYP" : Gosub ACTION From =IMPTRT
  IMPENT = [M]SEQTYP(indice)
 Endif
 If IMPENT=0
  mkstat = 1 : GMESSAGE = mess(10,123,1)
 Endif
 If mkstat : GERR = 1 : GZONE = "SEQTYP" : GZNUM = 48902 : Endif
 Gosub AFF From GSAISIE
 If mkstat : End : Endif
 If !mkstat
  SAVACT = GACTION : GACTION = "STD"
  Call AP_SEQTYP(IMPENT) From SUBICV
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "SEQTYP" : GZNUM = 48902 : Endif
  Gosub AFF From GSAISIE
  If mkstat : End : Endif
  If !mkstat
   If WNUM<>IMPENT or IMPMOD
    SAVACT = GACTION : GACTION = "STD"
    Call AM_SEQTYP(IMPENT) From SUBICV
    GACTION = SAVACT
    If mkstat : GERR = 1 : GZONE = "SEQTYP" : GZNUM = 48902 : Endif
    Gosub AFF From GSAISIE
    If mkstat : End : Endif
   Endif
  Endif
 Endif
Endif
[M]SEQTYP = IMPENT

## Zone SEQLNG
mkstat = 0
zoncou = "SEQLNG"
indice = 0
If varmode([M]SEQLNG,indice)=0
 If !mkstat
  IMPMOD = 0 : IMPZON = "SEQLNG" : Gosub ACTION From =IMPTRT
 Endif
 If [M]SEQLNG=0
  mkstat = 1 : GMESSAGE = mess(10,123,1)
 Endif
 If mkstat : GERR = 1 : GZONE = "SEQLNG" : GZNUM = 48905 : Endif
 Gosub AFF From GSAISIE
 If mkstat : End : Endif
 If !mkstat
  SAVACT = GACTION : GACTION = "STD"
  Call C_SEQLNG([M]SEQLNG) From SUBICV
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "SEQLNG" : GZNUM = 48905 : Endif
  Gosub AFF From GSAISIE
  If mkstat : End : Endif
 Endif
Endif

## Zone SEQBEG
mkstat = 0
zoncou = "SEQBEG"
indice = 0
If varmode([M]SEQBEG,indice)=0
 If !mkstat
  IMPMOD = 0 : IMPZON = "SEQBEG" : Gosub ACTION From =IMPTRT
 Endif
 SAVACT = GACTION : GACTION = "STD"
 Call C_SEQBEG([M]SEQBEG) From SUBICV
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "SEQBEG" : GZNUM = 48909 : Endif
 Gosub AFF From GSAISIE
 If mkstat : End : Endif
Endif

## Zone SEQEND
mkstat = 0
zoncou = "SEQEND"
indice = 0
If varmode([M]SEQEND,indice)=0
 If !mkstat
  IMPMOD = 0 : IMPZON = "SEQEND" : Gosub ACTION From =IMPTRT
 Endif
 SAVACT = GACTION : GACTION = "STD"
 Call C_SEQEND([M]SEQEND) From SUBICV
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "SEQEND" : GZNUM = 48907 : Endif
 Gosub AFF From GSAISIE
 If mkstat : End : Endif
Endif

####################################
## Bloc liste 2
####################################
IMPTBL = 0

mkstat = 0

End

$DEFVAR
Local Integer I , J , K , XOK , NOL , IMPENT , IMPMOD , IMPTBL , NBLIG
Local Char    IMPMSK(GLONAMK) , IMPZON(GLONAVA) , NOMZONE(40)
Local Char    PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
Local Char    PARAM(250)(1..20) , SAVACT(20)
Local Char    WCHAR(255)
Local Decimal WNUM
Local Date    WDATE
Local Clbfile WCLOB(9)

IMPMSK = "ICV1"
Return

