#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT51INT1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:29:13"
A_USER  = "ADMIN"
A_STAMP = "20180828002913"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT51INT1 [MGB]
Gosub HORODAT
Local Inpbox "WT51INT1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MGB] As [SIM_]
Grizo [MGB]5
Grizo [MGB]10
Grizo [MGB]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MGB]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=28 : Y1(0)=1 : Y2(0)=3
X1(1)=29 : X2(1)=129 : Y1(1)=1 : Y2(1)=3
X1(3)=1 : X2(3)=129 : Y1(3)=4 : Y2(3)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1WT51INT1
Onevent AFTER_CHANGE Gosub AMM_FCY From W1WT51INT1
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1WT51INT1
Return

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1WT51INT1
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1WT51INT1
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1WT51INT1
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1WT51INT1
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action CTLFCYAUZ
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "CTLFCYAUZ"
  Call S_AFF_CHAR(VALEUR,PARMSK,"CTLFCYAUZ","CONTX3","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From FUNGBENCH
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1WT51INT1
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_PLANNER
Onevent CONTROL Call C_PLANNER(zc) From W1WT51INT1
Onevent BEFORE_INPUT Call AS_PLANNER(zc) From W1WT51INT1
Onevent AFTER_CHANGE Gosub AMM_PLANNER From W1WT51INT1
Return

Subprog AS_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(485,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLANNER(zc) From W1WT51INT1
Onkey   2 Titled GBOUTS Call S_PLANNER(zc) From W1WT51INT1
Onkey 144 Titled GBOUTP Call P_PLANNER(zc) From W1WT51INT1
Onkey 146 Titled GBOUTA Call SA_PLANNER(zc) From W1WT51INT1
Gosub _AFF
End

Subprog C_PLANNER(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("AUS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PLANNER" : GZNUM = 3976 : Endif
Gosub _AFF
End

$AMM_PLANNER
Call AM_PLANNER(zc)
If !mkstat & GOBJET
 zoncou = "PLANNER" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLANNER(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZPLANNER)")>indice
 [M]PLANNER(indice) = VALEUR
 Affzo ZPLANNER(indice)
Endif
Gosub _AFF
End

Subprog S_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AUS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PLANNER(VALEUR)
Variable Char    VALEUR()
Call OBJET("AUS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AUS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AUS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPLANNER
Onevent BEFORE_AREA Gosub AV_ZPLANNER From W1WT51INT1
Return

$AV_ZPLANNER
Call LECTEXTRA(zc,"AUTILIS","INTUSR",num$([M]PLANNER(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_REACT
Onevent INIT_AREA Call D_REACT(zc) From W1WT51INT1
Return

Subprog D_REACT(VALEUR)
Variable Integer VALEUR
If varinit([M]REACT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PARVCRNUM
Return

$ON_PARWIPSTA
Onevent INIT_AREA Call D_PARWIPSTA(zc) From W1WT51INT1
Return

Subprog D_PARWIPSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]PARWIPSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PARWIPTYP
Onevent INIT_AREA Call D_PARWIPTYP(zc) From W1WT51INT1
Return

Subprog D_PARWIPTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PARWIPTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMREFSTR
Onevent CONTROL Call C_ITMREFSTR(zc) From W1WT51INT1
Onevent AFTER_CHANGE Gosub AMM_ITMREFSTR From W1WT51INT1
Onevent BEFORE_INPUT Call AS_ITMREFSTR(zc) From W1WT51INT1
Return

Subprog IB_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREFSTR(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_ITMREFSTR(zc) From W1WT51INT1
Onkey   2 Titled GBOUTS Call S_ITMREFSTR(zc) From W1WT51INT1
Onkey 144 Titled GBOUTP Call P_ITMREFSTR(zc) From W1WT51INT1
Onkey 146 Titled GBOUTA Call SA_ITMREFSTR(zc) From W1WT51INT1
Gosub _AFF
End

Subprog C_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREFSTR(VALEUR) From FUNGBENCH
   If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREFSTR
Call AM_ITMREFSTR(zc)
If !mkstat & GOBJET
 zoncou = "ITMREFSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREFSTR(VALEUR) From FUNGBENCH
If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZITMREFSTR)")>indice
 [M]ITMREFSTR(indice) = VALEUR
 Affzo ZITMREFSTR(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M:MGB]FCY
 PARMSK(2) = [M:MGB]ITMCAT
 PARMSK(3) = "1"
 PARMSK(4) = "1234"
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = [M:MGB]ITMFILTER
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B13_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREFSTR
Onevent BEFORE_AREA Gosub AV_ZITMREFSTR From W1WT51INT1
Return

$AV_ZITMREFSTR
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREFSTR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ITMREFEND
Onevent CONTROL Call C_ITMREFEND(zc) From W1WT51INT1
Onevent BEFORE_INPUT Call AS_ITMREFEND(zc) From W1WT51INT1
Onevent AFTER_CHANGE Gosub AMM_ITMREFEND From W1WT51INT1
Return

Subprog IB_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREFEND(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_ITMREFEND(zc) From W1WT51INT1
Onkey   2 Titled GBOUTS Call S_ITMREFEND(zc) From W1WT51INT1
Onkey 144 Titled GBOUTP Call P_ITMREFEND(zc) From W1WT51INT1
Onkey 146 Titled GBOUTA Call SA_ITMREFEND(zc) From W1WT51INT1
Gosub _AFF
End

Subprog C_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
  If !mkstat
   ## Action CTLALPV
   Call CTLALPV(VALEUR,[M]ITMREFSTR) From CONTDIV
   If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
   If !mkstat
    ## Action STD
    Call C_ITMREFEND(VALEUR) From FUNGBENCH
    If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREFEND
Call AM_ITMREFEND(zc)
If !mkstat & GOBJET
 zoncou = "ITMREFEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZITMREFEND)")>indice
 [M]ITMREFEND(indice) = VALEUR
 Affzo ZITMREFEND(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M:MGB]FCY
 PARMSK(2) = [M:MGB]ITMCAT
 PARMSK(3) = "1"
 PARMSK(4) = "1234"
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = [M:MGB]ITMFILTER
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B13_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREFEND
Onevent BEFORE_AREA Gosub AV_ZITMREFEND From W1WT51INT1
Return

$AV_ZITMREFEND
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREFEND(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ENDDATSTR
Onevent BEFORE_AREA Gosub AV_ENDDATSTR From W1WT51INT1
Onevent AFTER_CHANGE Gosub AMM_ENDDATSTR From W1WT51INT1
Onevent BEFORE_INPUT Call AS_ENDDATSTR(zc) From W1WT51INT1
Return

$AV_ENDDATSTR
## Action ADATRELI
Call INIDAT(zc,[M]ENDDATSTRF) From ADATREL
Chgfmt [M]ENDDATSTR(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDATSTR(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDDATSTR(zc) From W1WT51INT1
Gosub _AFF
End

$AMM_ENDDATSTR
Call AM_ENDDATSTR(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATSTR(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]ENDDATSTRF) From ADATREL
If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 51188 : Endif
If !mkstat
 ## Action STD
 Call AM_ENDDATSTR(VALEUR) From FUNGBENCH
 If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 51188 : Endif
Endif
Gosub _AFF
End

Subprog B1_ENDDATSTR(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]ENDDATSTRF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]ENDDATSTRF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ENDDATEND
Onevent BEFORE_AREA Gosub AV_ENDDATEND From W1WT51INT1
Onevent AFTER_CHANGE Gosub AMM_ENDDATEND From W1WT51INT1
Onevent CONTROL Call C_ENDDATEND(zc) From W1WT51INT1
Onevent BEFORE_INPUT Call AS_ENDDATEND(zc) From W1WT51INT1
Return

$AV_ENDDATEND
## Action ADATRELI
Call INIDAT(zc,[M]ENDDATENDF) From ADATREL
Chgfmt [M]ENDDATEND(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDATEND(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDDATEND(zc) From W1WT51INT1
Gosub _AFF
End

Subprog C_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDATEND(VALEUR) From FUNGBENCH
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 51189 : Endif
Gosub _AFF
End

$AMM_ENDDATEND
Call AM_ENDDATEND(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]ENDDATENDF) From ADATREL
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 51189 : Endif
Gosub _AFF
End

Subprog B1_ENDDATEND(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]ENDDATENDF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]ENDDATENDF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_BPRNUMSTR
Return

$ON_BPRNUMEND
Return

$ON_PJTSTR
Return

$ON_PJTEND
Return

$ON_VCRNUMSTR
Return

$ON_VCRNUMEND
Return

$ON_VCRORISTR
Return

$ON_VCRORIEND
Return

$ON_STRDATSTR
Onevent BEFORE_AREA Gosub AV_STRDATSTR From W1WT51INT1
Return

$AV_STRDATSTR
## Action ADATRELI
Call INIDAT(zc,[M]STRDATSTRF) From ADATREL
Gosub _AFF
Return

$ON_STRDATEND
Onevent BEFORE_AREA Gosub AV_STRDATEND From W1WT51INT1
Return

$AV_STRDATEND
## Action ADATRELI
Call INIDAT(zc,[M]STRDATENDF) From ADATREL
Gosub _AFF
Return

$ON_TCLCODSTR
Return

$ON_TCLCODEND
Return

$ON_TSICODSTR
Onevent INIT_AREA Call D_TSICODSTR(zc) From W1WT51INT1
Return

Subprog D_TSICODSTR(VALEUR)
Variable Char    VALEUR()
If varinit([M]TSICODSTR,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"","") From SUBADI
Endif
Gosub _AFF
End

$ON_TSICODEND
Onevent INIT_AREA Call D_TSICODEND(zc) From W1WT51INT1
Return

Subprog D_TSICODEND(VALEUR)
Variable Char    VALEUR()
If varinit([M]TSICODEND,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"","") From SUBADI
Endif
Gosub _AFF
End

$ON_FORMULE
Return

$ON_MEMO
Return

$ON_SRTCOD
Onevent INIT_AREA Call D_SRTCOD(zc) From W1WT51INT1
Return

Subprog D_SRTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SRTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MRPFLG
Onevent INIT_AREA Call D_MRPFLG(zc) From W1WT51INT1
Return

Subprog D_MRPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MRPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CCMFLG
Onevent INIT_AREA Call D_CCMFLG(zc) From W1WT51INT1
Return

Subprog D_CCMFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CCMFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG
Onevent AFTER_AREA Call AP_NBLIG From W1WT51INT1
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT51INT1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From FUNGBENCH
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(12964,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(454,GBOUT5) From OBJDIV
Call TEXTE(454,GBOUT6) From OBJDIV
Call TEXTE(454,GBOUT7) From OBJDIV
Call TEXTE(454,GBOUT8) From OBJDIV
Call TEXTE(454,GBOUT9) From OBJDIV
Call TEXTE(17031,GBOUT10) From OBJDIV
Call TEXTE(22510,GBOUT11) From OBJDIV
Call TEXTE(7974,GBOUT12) From OBJDIV
Call TEXTE(7974,GBOUT13) From OBJDIV
Call TEXTE(18050,GBOUT14) From OBJDIV
Call TEXTE(2378,GBOUT15) From OBJDIV
Call TEXTE(7977,GBOUT16) From OBJDIV
Call TEXTE(17087,GBOUT17) From OBJDIV
Call TEXTE(16848,GBOUT18) From OBJDIV
Call TEXTE(16408,GBOUT19) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT51INT1
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WT51INT1
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WT51INT1
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1WT51INT1
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1WT51INT1
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1WT51INT1
Onkey 135 Titled GBOUT7 Call B7_NBLIG From W1WT51INT1
Onkey 136 Titled GBOUT8 Call B8_NBLIG From W1WT51INT1
Onkey 137 Titled GBOUT9 Call B9_NBLIG From W1WT51INT1
Onkey 138 Titled GBOUT10 Call B10_NBLIG From W1WT51INT1
Onkey 139 Titled GBOUT11 Call B11_NBLIG From W1WT51INT1
Onkey 140 Titled GBOUT12 Call B12_NBLIG From W1WT51INT1
Onkey 170 Titled GBOUT13 Call B13_NBLIG From W1WT51INT1
Onkey 171 Titled GBOUT14 Call B14_NBLIG From W1WT51INT1
Onkey 172 Titled GBOUT15 Call B15_NBLIG From W1WT51INT1
Onkey 173 Titled GBOUT16 Call B16_NBLIG From W1WT51INT1
Onkey 174 Titled GBOUT17 Call B17_NBLIG From W1WT51INT1
Onkey 175 Titled GBOUT18 Call B18_NBLIG From W1WT51INT1
Onkey 176 Titled GBOUT19 Call B19_NBLIG From W1WT51INT1
Gosub _AFF
End

Subprog AP_NBLIG
Local Decimal BASPAG
## Action STD
Call AP_NBLIG From FUNGBENCH
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMODPOX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMODPOX"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = num$([M:MGB]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGB]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGB]WIPNUM(nolign-1)
 PARMSK(5) = [M:MGB]ITMREF(nolign-1)
 PARMSK(6) = num$([M:MGB]APPHAB)
 PARMSK(7) = num$([M:MGB]INTHAB)
 PARMSK(8) = [M:MGB]PLANNER
 PARMSK(9) = num$([M:MGB]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMODPOF","BENCHLIBP","XYZBENCHLIBP") From GSAISIE
 [M:MGB]REACT = val(PARMSK(9))
 ACTION = "BB1_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMODWOX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMODWOX"
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = num$([M:MGB]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGB]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGB]WIPNUM(nolign-1)
 PARMSK(5) = [M:MGB]ITMREF(nolign-1)
 PARMSK(6) = num$([M:MGB]PLNHAB)
 PARMSK(7) = num$([M:MGB]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMODWOX","BENCHLIB","XYZBENCHLIB") From GSAISIE
 [M:MGB]REACT = val(PARMSK(7))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMODEOX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMODEOX"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB3_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = num$([M:MGB]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGB]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGB]WIPNUM(nolign-1)
 PARMSK(5) = [M:MGB]ITMREF(nolign-1)
 PARMSK(6) = num$([M:MGB]SCOHAB)
 PARMSK(7) = num$([M:MGB]INTHAB)
 PARMSK(8) = [M:MGB]PLANNER
 PARMSK(9) = num$([M:MGB]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMODEOX","BENCHLIBS","ZBENCHLIBS") From GSAISIE
 [M:MGB]REACT = val(PARMSK(9))
 ACTION = "BB3_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FMFGD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FMFGD"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB4_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]PLANNER
 PARMSK(3) = [M:MGB]ENDDATEND
 PARMSK(4) = [M:MGB]ITMREF(nolign-1)
 PARMSK(5) = [M:MGB]TRS
 PARMSK(6) = "G"
 PARMSK(7) = "5"
 PARMSK(8) = num$([M:MGB]REACT)
 PARMSK(9) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMAJ(nolign-1)")
 PARMSK(10) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMFGD","FUNDBENCH","FMFGD",5,"XYZFUNDBENCH") From GTRAITE
 [M:MGB]REACT = val(PARMSK(8))
 ACTION = "BB4_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FMFGR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FMFGR"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB5_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]PLANNER
 PARMSK(3) = "5"
 PARMSK(4) = [M:MGB]ITMREF(nolign-1)
 PARMSK(5) = [M:MGB]ITMREF(nolign-1)
 PARMSK(6) = [M:MGB]PJT(nolign-1)
 PARMSK(7) = ""
 PARMSK(8) = [M:MGB]BPRNUM(nolign-1)
 PARMSK(9) = [M:MGB]ENDDATSTR
 PARMSK(10) = [M:MGB]ENDDATEND
 PARMSK(11) = "G"
 PARMSK(12) = num$([M:MGB]REACT)
 PARMSK(13) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMAJ(nolign-1)")
 PARMSK(14) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMFGR","FUNMPICK","FMFGR",5,"XYZFUNMPICK") From GTRAITE
 [M:MGB]REACT = val(PARMSK(12))
 ACTION = "BB5_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB6_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MGB]CODCLE(nolign-1)
 Call OBJET_CHAR(OBJCLE,[M:MGB]CODOBJ(nolign-1),[M:MGB]CODCLE2(nolign-1)) From GOBJET
 ACTION = "BB6_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B7_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSSFC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSFC"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB7_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "1"
 PARMSK(2) = [M:MGB]STOFCY(nolign-1)
 PARMSK(3) = [M:MGB]ITMREF(nolign-1)
 PARMSK(4) = ""
 Call CONSULT_NUM(BASPAG,"SFC",PARMSK) From GCONSULT
 ACTION = "BB7_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B8_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action VISUITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUITF"
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]ITMREF(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"IVISUITF","VISUITF","XWIVISUITF") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B9_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FWIPZOOM1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FWIPZOOM1"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB9_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]VCRNUM(nolign-1)
 PARMSK(2) = [M:MGB]WIPNUM(nolign-1)
 PARMSK(3) = [M:MGB]STOFCY(nolign-1)
 Call S_TAB_NUM(BASPAG,PARMSK,"","BENCHLIB","XYZBENCHLIB") From GACTION
 ACTION = "BB9_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If !GWEBSERV
 ## Action FMFGD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FMFGD"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB9_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]PLANNER
 PARMSK(3) = [M:MGB]ENDDATEND
 PARMSK(4) = [M:MGB]ITMREF(nolign-1)
 PARMSK(5) = [M:MGB]TRS
 PARMSK(6) = "G"
 PARMSK(7) = "5"
 PARMSK(8) = num$([M:MGB]REACT)
 PARMSK(9) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMAJ(nolign-1)")
 PARMSK(10) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMFGD","FUNDBENCH","FMFGD",5,"XYZFUNDBENCH") From GTRAITE
 [M:MGB]REACT = val(PARMSK(8))
 ACTION = "BB9_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B10_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B10_NBLIG From FUNGBENCH
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B11_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B11_NBLIG From FUNGBENCH
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B12_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMFGALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMFGALL"
 PARMSK(1) = [M:MGB]VCRNUM(nolign-1)
 PARMSK(2) = num$([M:MGB]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMFGALL","MFGALL","XYZMFGALL") From GSAISIE
 [M:MGB]REACT = val(PARMSK(2))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B13_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISCOALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISCOALL"
 PARMSK(1) = [M:MGB]VCRNUM(nolign-1)
 PARMSK(2) = num$([M:MGB]VCRLIN(nolign-1))
 PARMSK(3) = num$([M:MGB]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DSCOALL","SCOALL","XYZSCOALL") From GSAISIE
 [M:MGB]REACT = val(PARMSK(3))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B14_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISTOALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTOALL"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB14_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "MFGB"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = [M:MGB]ITMREF(nolign-1)
 PARMSK(4) = [M:MGB]STOFCY(nolign-1)
 PARMSK(5) = num$([M:MGB]VCRTYP(nolign-1))
 Call TRAITE_NUM(BASPAG,PARMSK,"ISTOALL","TRTSTOALL","",1,"XYTRTSTOALL") From GTRAITE
 ACTION = "BB14_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B15_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMFGSCD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMFGSCD"
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]VCRNUM(nolign-1)
 PARMSK(3) = num$([M:MGB]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMFGSCD","MFGSCD","XYZMFGSCD") From GSAISIE
 [M:MGB]REACT = val(PARMSK(3))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B16_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSSDI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSDI"
 PARMSK(1) = "1"
 PARMSK(2) = [M:MGB]STOFCY(nolign-1)
 PARMSK(3) = [M:MGB]ITMREF(nolign-1)
 PARMSK(4) = ""
 Call CONSULT_NUM(BASPAG,"SDI",PARMSK) From GCONSULT
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B17_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FWIPZOOM2
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FWIPZOOM2"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB17_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]WIPNUM(nolign-1)
 PARMSK(2) = num$([M:MGB]WIPTYP(nolign-1))
 PARMSK(3) = [M:MGB]ITMREF(nolign-1)
 Call S_TAB_NUM(BASPAG,PARMSK,"","BENCHLIB","XYZBENCHLIB") From GACTION
 ACTION = "BB17_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If !GWEBSERV
 ## Action FMFGD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FMFGD"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB17_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]PLANNER
 PARMSK(3) = [M:MGB]ENDDATEND
 PARMSK(4) = [M:MGB]ITMREF(nolign-1)
 PARMSK(5) = [M:MGB]TRS
 PARMSK(6) = "G"
 PARMSK(7) = "5"
 PARMSK(8) = num$([M:MGB]REACT)
 PARMSK(9) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMAJ(nolign-1)")
 PARMSK(10) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMFGD","FUNDBENCH","FMFGD",5,"XYZFUNDBENCH") From GTRAITE
 [M:MGB]REACT = val(PARMSK(8))
 ACTION = "BB17_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B18_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FMLKB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FMLKB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB18_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]STOFCY(nolign-1)
 PARMSK(2) = [M:MGB]PLANNER
 PARMSK(3) = [M:MGB]ENDDAT(nolign-1)
 PARMSK(4) = [M:MGB]ITMREF(nolign-1)
 PARMSK(5) = [M:MGB]TRS
 PARMSK(6) = "G"
 PARMSK(7) = "5"
 PARMSK(8) = num$([M:MGB]REACT)
 PARMSK(9) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMAJ(nolign-1)")
 PARMSK(10) = func TRTX3FNC.VALFLD_C("[M:MGB]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMLKB","FUNMLINK","FMLINKB",5,"XYZFUNMLINK") From GTRAITE
 [M:MGB]REACT = val(PARMSK(8))
 ACTION = "BB18_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B19_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FWIPZOOM4
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FWIPZOOM4"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB19_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGB]WIPNUM(nolign-1)
 PARMSK(2) = num$([M:MGB]WIPTYP(nolign-1))
 PARMSK(3) = [M:MGB]ITMREF(nolign-1)
 Call S_TAB_NUM(BASPAG,PARMSK,"","BENCHLIB","XYZBENCHLIB") From GACTION
 ACTION = "BB19_NBLIG" : PROGSUB = "FUNGBENCH" : PROGSPE = "SPEGBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WIPSTA
Onevent INIT_AREA Call D_WIPSTA(zc) From W1WT51INT1
Return

Subprog D_WIPSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]WIPSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WIPTYP
Onevent INIT_AREA Call D_WIPTYP(zc) From W1WT51INT1
Return

Subprog D_WIPTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]WIPTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUM
Return

$ON_STOFCY
Return

$ON_MRPMES
Onevent INIT_AREA Call D_MRPMES(zc) From W1WT51INT1
Return

Subprog D_MRPMES(VALEUR)
Variable Integer VALEUR
If varinit([M]MRPMES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMREF
Return

$ON_STRDAT
Onevent BEFORE_AREA Gosub AV_STRDAT From W1WT51INT1
Return

$AV_STRDAT
Chgfmt [M]STRDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_ECCVALMIN
Return

$ON_ENDDAT
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1WT51INT1
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_RMNEXTQTY
Onevent BEFORE_AREA Gosub AV_RMNEXTQTY From W1WT51INT1
Return

$AV_RMNEXTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]RMNEXTQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STU
Return

$ON_WIPNUM
Return

$ON_MRPDAT
Onevent BEFORE_AREA Gosub AV_MRPDAT From W1WT51INT1
Return

$AV_MRPDAT
Chgfmt [M]MRPDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_MRPQTY
Onevent BEFORE_AREA Gosub AV_MRPQTY From W1WT51INT1
Return

$AV_MRPQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]MRPQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_EXTQTY
Onevent BEFORE_AREA Gosub AV_EXTQTY From W1WT51INT1
Return

$AV_EXTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]EXTQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_ALLQTY
Onevent BEFORE_AREA Gosub AV_ALLQTY From W1WT51INT1
Return

$AV_ALLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]ALLQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_MTOQTY
Onevent BEFORE_AREA Gosub AV_MTOQTY From W1WT51INT1
Return

$AV_MTOQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_SHTQTY
Onevent BEFORE_AREA Gosub AV_SHTQTY From W1WT51INT1
Return

$AV_SHTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]SHTQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_CPLQTY
Onevent BEFORE_AREA Gosub AV_CPLQTY From W1WT51INT1
Return

$AV_CPLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]CPLQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_ORIFCY
Return

$ON_PJT
Return

$ON_BPRNUM
Return

$ON_PURFLG
Onevent INIT_AREA Call D_PURFLG(zc) From W1WT51INT1
Return

Subprog D_PURFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PURFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGFLG
Onevent INIT_AREA Call D_MFGFLG(zc) From W1WT51INT1
Return

Subprog D_MFGFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PIO
Onevent INIT_AREA Call D_PIO(zc) From W1WT51INT1
Return

Subprog D_PIO(VALEUR)
Variable Integer VALEUR
If varinit([M]PIO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCPFLG
Onevent INIT_AREA Call D_SCPFLG(zc) From W1WT51INT1
Return

Subprog D_SCPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCSFLG
Onevent INIT_AREA Call D_SCSFLG(zc) From W1WT51INT1
Return

Subprog D_SCSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PHAFLG
Onevent INIT_AREA Call D_PHAFLG(zc) From W1WT51INT1
Return

Subprog D_PHAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PHAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GENFLG
Onevent INIT_AREA Call D_GENFLG(zc) From W1WT51INT1
Return

Subprog D_GENFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]GENFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FMI
Onevent INIT_AREA Call D_FMI(zc) From W1WT51INT1
Return

Subprog D_FMI(VALEUR)
Variable Integer VALEUR
If varinit([M]FMI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TOOFLG
Onevent INIT_AREA Call D_TOOFLG(zc) From W1WT51INT1
Return

Subprog D_TOOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TOOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DLVFLG
Onevent INIT_AREA Call D_DLVFLG(zc) From W1WT51INT1
Return

Subprog D_DLVFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DLVFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SALFLG
Onevent INIT_AREA Call D_SALFLG(zc) From W1WT51INT1
Return

Subprog D_SALFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SALFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INTFLG
Onevent INIT_AREA Call D_INTFLG(zc) From W1WT51INT1
Return

Subprog D_INTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]INTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SHIQTYSTU
Onevent BEFORE_AREA Gosub AV_SHIQTYSTU From W1WT51INT1
Return

$AV_SHIQTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2WT51INT1
Return

$TIT_COL
Gosub TIT_COL From W2WT51INT1
Return


