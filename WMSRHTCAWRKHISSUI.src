#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHTCAWRKHISSUI TCAWRKHISSUI
# 2018-08-27 12:53:20 743

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","AWRKHISSUI","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File AWRKHISSUI [AWS]
Local File AWRKHISSUI [AWS_]
Local Char KEY_AWS(120)(1..3)
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [AWS]
LogicClose File [AWS_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [AWS] With
& [AWS_]AWS2=[AWS]DEST;[AWS]CHRONO
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [AWS] With
& [AWS_]AWS2=[AWS]DEST;[AWS]CHRONO
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
#Create a new instance
INS = NewInstance C_TCAWRKHISSUI(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE

SetInstance INS With [F:AWS]
FINS = 1
[L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
Gosub ASEARCH_TO_JSON
Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"CHRONO":'          +'"'+escJson(INS.CHRONO)+'"'
Append ASND.DATA ,',"DEST":'           +'"'+escJson(INS.DEST)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"EMETTEUR":'       +'"'+escJson(INS.EMETTEUR)+'"'
Append ASND.DATA ,',"DATENV":'          + func ASYRSRH.DATE_TO_SYR(INS.DATENV)
Append ASND.DATA ,',"USRTOP":'         +'"'+escJson(INS.USRTOP)+'"'
Append ASND.DATA ,',"USRSIG":'         +'"'+escJson(INS.USRSIG)+'"'
Append ASND.DATA ,',"USRORG":'         +'"'+escJson(INS.USRORG)+'"'
Append ASND.DATA ,',"VALCTX1":'        +'"'+escJson(INS.VALCTX1)+'"'
Append ASND.DATA ,',"VALCTX2":'        +'"'+escJson(INS.VALCTX2)+'"'
Append ASND.DATA ,',"VALCTX6":'        +'"'+escJson(INS.VALCTX6)+'"'
Append ASND.DATA ,',"VALCTX7":'        +'"'+escJson(INS.VALCTX7)+'"'
Append ASND.DATA ,',"CLEDEC":'         +'"'+escJson(INS.CLEDEC)+'"'
Append ASND.DATA ,',"USRSIG1":'        +'"'+escJson(INS.USRSIG1)+'"'
Append ASND.DATA ,',"USRSIG2":'        +'"'+escJson(INS.USRSIG2)+'"'
Append ASND.DATA ,',"USRSIG3":'        +'"'+escJson(INS.USRSIG3)+'"'
Append ASND.DATA ,',"USRSIG4":'        +'"'+escJson(INS.USRSIG4)+'"'
Append ASND.DATA ,',"USRSIG5":'        +'"'+escJson(INS.USRSIG5)+'"'
Append ASND.DATA ,',"USRSIG6":'        +'"'+escJson(INS.USRSIG6)+'"'
Append ASND.DATA ,',"USRSIG7":'        +'"'+escJson(INS.USRSIG7)+'"'
Append ASND.DATA ,',"USRSIG8":'        +'"'+escJson(INS.USRSIG8)+'"'
Append ASND.DATA ,',"USRSIG9":'        +'"'+escJson(INS.USRSIG9)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,'}'
Onerrgo
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:AWS]DEST"
ASTDKEY += ";[F:AWS]CHRONO"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From TCAWRKHISSUI_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="TCAWRKHISSUI" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"TCAWRKHISSUI")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"TCAWRKHISSUI")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,27061)+'"'
Append WCLOB,',"$url":"{$baseUrl}/TCAWRKHISSUI'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27061)+' {$key}"'
Append WCLOB,',"$key":"{DEST}~{CHRONO}"'
Append WCLOB,',"$url":"{$baseUrl}/TCAWRKHISSUI('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'TCAWRKHISSUI.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"CHRONO":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1263)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"DEST":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,33142)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"EMETTEUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7854)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"DATENV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7444)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"USRTOP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27531)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27068)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRORG":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27077)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"VALCTX1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27318)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"VALCTX2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27319)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"VALCTX6":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"VALCTX7":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"CLEDEC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,30144)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"USRSIG1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6148)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6150)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG3":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6152)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG4":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6154)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG5":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6156)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG6":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6158)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG7":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6160)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG8":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6162)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USRSIG9":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6164)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,250)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,250)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHTCAWRKHISSUIB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHTCAWRKHISSUIB
End RES


