#<AdxTL>@(#)0.0.0.0 $Revision$Class Inquiry
# Supervisor
## CRUD-CLASSE ## EXPENCNSM
# 2018-08-27 13:14:23 151


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(EXPENCNSM,ASTATUS)
Variable Instance EXPENCNSM Using R_EXPENCNSM
Variable Integer ASTATUS

If EXPENCNSM = null : End : Endif

Gosub AVARIABLES From WMR00EXPENCNSM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet EXPENCNSM.ACTX.AGETAFCRIGHT(EXPENCNSM,"GESEXS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet EXPENCNSM.ACTX.AGETAFCRIGHTU(EXPENCNSM,"GESEXS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_EXPENCNSM
Else
 Gosub AUPDATE_EXPENCNSM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = EXPENCNSM.freeSnapshot
EXPENCNSM.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
EXPENCNSM.ASTALIN = [V]CST_AUPD
EXPENCNSM.EXS.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = EXPENCNSM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = EXPENCNSM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet EXPENCNSM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet EXPENCNSM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet EXPENCNSM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If EXPENCNSM.EXS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
EXPENCNSM.EXS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(EXPENCNSM.EXS.ASTALIN)<>""
 [L]A_ASTALIN = EXPENCNSM.EXS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.CODEXPENS)
 If EXPENCNSM.EXS.CODEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.CODEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.CODEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.DIMCEN)
 If EXPENCNSM.EXS.DIMCEN([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.DIMCEN([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.DIMCEN([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.LNKRATLED)
 If EXPENCNSM.EXS.LNKRATLED([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.LNKRATLED([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.LNKRATLED([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.RATEXPENS)
 If EXPENCNSM.EXS.RATEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.RATEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.RATEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

For [L]A_I=1 To maxtab(EXPENCNSM.EXS.CODEXPENS)
 If EXPENCNSM.EXS.CODEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.CODEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.CODEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.DIMCEN)
 If EXPENCNSM.EXS.DIMCEN([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.DIMCEN([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.DIMCEN([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.LNKRATLED)
 If EXPENCNSM.EXS.LNKRATLED([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.LNKRATLED([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.LNKRATLED([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.RATEXPENS)
 If EXPENCNSM.EXS.RATEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENCNSM.EXS.RATEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.RATEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(EXPENCNSM.EXS.ASTALIN)<>""
 [L]A_ASTALIN = EXPENCNSM.EXS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_EXPENCNSM
Trbegin [F:EXS]
 Gosub AUPDATE_EXPENCNSM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(EXPENCNSM.EXS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 EXPENCNSM.EXS.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.CODEXPENS)
 If EXPENCNSM.EXS.CODEXPENS([L]A_I)<>null
  If EXPENCNSM.EXS.CODEXPENS([L]A_I).ASTALIN=[V]CST_ADEL or EXPENCNSM.EXS.CODEXPENS([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENCNSM.EXS.CODEXPENS([L]A_I)
   EXPENCNSM.EXS.CODEXPENS([L]A_I) = null
  Elsif EXPENCNSM.EXS.CODEXPENS([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENCNSM.EXS.CODEXPENS([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.DIMCEN)
 If EXPENCNSM.EXS.DIMCEN([L]A_I)<>null
  If EXPENCNSM.EXS.DIMCEN([L]A_I).ASTALIN=[V]CST_ADEL or EXPENCNSM.EXS.DIMCEN([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENCNSM.EXS.DIMCEN([L]A_I)
   EXPENCNSM.EXS.DIMCEN([L]A_I) = null
  Elsif EXPENCNSM.EXS.DIMCEN([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENCNSM.EXS.DIMCEN([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.LNKRATLED)
 If EXPENCNSM.EXS.LNKRATLED([L]A_I)<>null
  If EXPENCNSM.EXS.LNKRATLED([L]A_I).ASTALIN=[V]CST_ADEL or EXPENCNSM.EXS.LNKRATLED([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENCNSM.EXS.LNKRATLED([L]A_I)
   EXPENCNSM.EXS.LNKRATLED([L]A_I) = null
  Elsif EXPENCNSM.EXS.LNKRATLED([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENCNSM.EXS.LNKRATLED([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(EXPENCNSM.EXS.RATEXPENS)
 If EXPENCNSM.EXS.RATEXPENS([L]A_I)<>null
  If EXPENCNSM.EXS.RATEXPENS([L]A_I).ASTALIN=[V]CST_ADEL or EXPENCNSM.EXS.RATEXPENS([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENCNSM.EXS.RATEXPENS([L]A_I)
   EXPENCNSM.EXS.RATEXPENS([L]A_I) = null
  Elsif EXPENCNSM.EXS.RATEXPENS([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENCNSM.EXS.RATEXPENS([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Return

#-----------------------------------------------------#
$AUPDATE_EXPENCNSM
[L]A_ASTALIN = EXPENCNSM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.EXS._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = EXPENCNSM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENCNSM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If EXPENCNSM.snapshotEnabled=1
 [L]A_RETIK = EXPENCNSM.revertUpdTick
Endif

[L]ASTATUS = max(fmet EXPENCNSM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



