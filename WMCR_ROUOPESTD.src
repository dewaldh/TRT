#<AdxTL>@(#)0.0.0.0 $Revision$Class Standard operations
# Sage X3 supervisor
## CRUD-CLASSE ## ROUOPESTD
# 2018-03-26 00:40:18 281


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ROUOPESTD [ROT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ROUOPESTD") From ASYRCOM : Endif
Local Instance ROUOPESTD Using C_ROUOPESTD

If !SILENCE : Call TRACE("3 --> New Instance C_ROUOPESTD") From ASYRCOM : Endif
ROUOPESTD = NewInstance C_ROUOPESTD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ROT_]ROT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ROUOPESTD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ROUOPESTD.AREAD([ROT_]STDOPENUM,[ROT_]FCY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ROUOPESTD.STDOPENUM ="-num$(ROUOPESTD.STDOPENUM)) From ASYRCOM
 Call TRACE("ROUOPESTD.FCY ="-num$(ROUOPESTD.FCY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ROUOPESTD.AKEYS)
  Call TRACE("-"-num$(I)-":"-ROUOPESTD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ROT_]
FreeGroup ROUOPESTD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ROUOPESTD,ACLE,ASTATUS,_ETAG)
Variable Instance ROUOPESTD Using C_ROUOPESTD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Shortint _STDOPENUM
Local Char _FCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STDOPENUM = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_FCY = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File ROUOPESTD [ROT]
Default File [F:ROT]
Read [F:ROT]ROT0 = [L]_STDOPENUM;[L]_FCY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ROT]UPDTICK)>0
 [L]_ETAG = num$([F:ROT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ROUOPESTD,ACLE,ASTATUS)
Variable Instance ROUOPESTD Using C_ROUOPESTD
Value Char ACLE
Variable Integer ASTATUS
Local Shortint _STDOPENUM
Local Char _FCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STDOPENUM = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_FCY = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ROUOPESTD.AREAD([L]_STDOPENUM,[L]_FCY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ROUOPESTD,_STDOPENUM,_FCY,ASTATUS)
Variable Instance ROUOPESTD Using C_ROUOPESTD
Value Shortint _STDOPENUM
Value Char _FCY
Variable Integer ASTATUS

If ROUOPESTD = null : End : Endif

Gosub AVARIABLES From WMC00ROUOPESTD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ROUOPESTD.APARENT=null
 [L]A_I = ROUOPESTD.freeSnapshot
 ROUOPESTD.snapshotEnabled = 0
 ROUOPESTD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ROUOPESTD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ROUOPESTD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ROUOPESTD.APARENT=null
 ROUOPESTD.snapshotEnabled = 1
 ROUOPESTD.setAccessorEnabled = 1
Endif
LogicClose File [ROT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ROUOPESTD._ACTION_PARAM("AREAD_BEFORE",[L]_STDOPENUM,[L]_FCY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:ROT]
Read [F:ROT]ROT0 = [L]_STDOPENUM;[L]_FCY
If fstat
[L]A_ERROR = num$([L]_STDOPENUM)+"~"+[L]_FCY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ROUOPESTD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:ROT]FCY
[L]A_STRACC = ""
If dim([F:ROT]AUUID)>0 & [F:ROT]AUUID=NullUuid
 [F:ROT]AUUID = getUuid
Endif
SetInstance ROUOPESTD With [F:ROT]
ROUOPESTD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ROUOPESTD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="ROUOPESTD" & ZONE="STDOPEDESAXX" & IDENT1=num$(ROUOPESTD.STDOPENUM) & IDENT2=ROUOPESTD.FCY
 Call ASETTEXTRA(ROUOPESTD.AXX,ROUOPESTD.AllocGrp(),"STDOPEDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 ROUOPESTD.AXX(maxtab(ROUOPESTD.AXX)).FLG = 0
Next AXX
If !len(fmet ROUOPESTD.AGETTEXTRA("STDOPEDESAXX"))
 Call ASETTEXTRA(ROUOPESTD.AXX,ROUOPESTD.AllocGrp(),"STDOPEDESAXX",
& fmet ROUOPESTD.AGETTEXTRALAN("STDOPEDESAXX",ROUOPESTD.ACTX.AFOLD.ALANGDEF),
& ROUOPESTD.ACTX.LAN) From ASYRSUB
Endif

Return



