#<AdxTL>@(#)0.0.0.0 $Revision$Class Revised standard cost
# Supervisor
## CRUD-CLASSE ## ITMCOSTA
# 2018-08-27 13:17:57 513


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ITMCOST [ITC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ITMCOSTA") From ASYRCOM : Endif
Local Instance ITMCOSTA Using R_ITMCOSTA

If !SILENCE : Call TRACE("3 --> New Instance R_ITMCOSTA") From ASYRCOM : Endif
ITMCOSTA = NewInstance R_ITMCOSTA AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ITC_]ITC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ITMCOSTA") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ITMCOSTA.AREAD([ITC_]STOFCY,[ITC_]ITMREF,[ITC_]CSTTYP,[ITC_]ITCSEQ,[ITC_]UID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ITMCOSTA.ITC.STOFCY ="-num$(ITMCOSTA.ITC.STOFCY)) From ASYRCOM
 Call TRACE("ITMCOSTA.ITC.ITMREF ="-num$(ITMCOSTA.ITC.ITMREF)) From ASYRCOM
 Call TRACE("ITMCOSTA.ITC.CSTTYP ="-num$(ITMCOSTA.ITC.CSTTYP)) From ASYRCOM
 Call TRACE("ITMCOSTA.ITC.ITCSEQ ="-num$(ITMCOSTA.ITC.ITCSEQ)) From ASYRCOM
 Call TRACE("ITMCOSTA.ITC.UID ="-num$(ITMCOSTA.ITC.UID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ITMCOSTA.ITC.AKEYS)
  Call TRACE("-"-num$(I)-":"-ITMCOSTA.ITC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ITC_]
FreeGroup ITMCOSTA
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ITMCOSTA,ACLE,ASTATUS,_ETAG)
Variable Instance ITMCOSTA Using R_ITMCOSTA
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _STOFCY(5)
Local Char _ITMREF(20)
Local Tinyint _CSTTYP
Local Integer _ITCSEQ
Local Integer _UID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_ITMREF = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_CSTTYP = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_ITCSEQ = val([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_UID = val([L]CLE(5)) : Endif
Raz [L]_ETAG
Local File ITMCOST [ITC]
Default File [F:ITC]
Read [F:ITC]ITC0 = [L]_STOFCY;[L]_ITMREF;[L]_CSTTYP;[L]_ITCSEQ;[L]_UID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ITC]UPDTICK)>0
 [L]_ETAG = num$([F:ITC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ITMCOSTA,ACLE,ASTATUS)
Variable Instance ITMCOSTA Using R_ITMCOSTA
Value Char ACLE
Variable Integer ASTATUS
Local Char _STOFCY(5)
Local Char _ITMREF(20)
Local Tinyint _CSTTYP
Local Integer _ITCSEQ
Local Integer _UID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_ITMREF = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_CSTTYP = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_ITCSEQ = val([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_UID = val([L]CLE(5)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ITMCOSTA.AREAD([L]_STOFCY,[L]_ITMREF,[L]_CSTTYP,[L]_ITCSEQ,[L]_UID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ITMCOSTA,_STOFCY,_ITMREF,_CSTTYP,_ITCSEQ,_UID,ASTATUS)
Variable Instance ITMCOSTA Using R_ITMCOSTA
Value Char _STOFCY
Value Char _ITMREF
Value Tinyint _CSTTYP
Value Integer _ITCSEQ
Value Integer _UID
Variable Integer ASTATUS

If ITMCOSTA = null : End : Endif

Gosub AVARIABLES From WMR00ITMCOSTA
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ITMCOSTA.APARENT=null
 [L]A_I = ITMCOSTA.freeSnapshot
 ITMCOSTA.snapshotEnabled = 0
 ITMCOSTA.setAccessorEnabled = 0
Endif

If fmet ITMCOSTA.ACTX.AGETAFCRIGHT(ITMCOSTA,"GESICA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:ITC]
Read [F:ITC]ITC0 = [L]_STOFCY;[L]_ITMREF;[L]_CSTTYP;[L]_ITCSEQ;[L]_UID
If fstat
[L]A_ERROR = [L]_STOFCY+"~"+[L]_ITMREF+"~"+num$([L]_CSTTYP)+"~"+num$([L]_ITCSEQ)+"~"+num$([L]_UID)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ITMCOSTA,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
If ([F:ITC]CSTTYP=2)=0
[L]A_ERROR = [L]_STOFCY+"~"+[L]_ITMREF+"~"+num$([L]_CSTTYP)+"~"+num$([L]_ITCSEQ)+"~"+num$([L]_UID)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ITMCOSTA,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:ITC]STOFCY
[L]A_STRACC = ""
If fmet ITMCOSTA.ACTX.AGETAFCRIGHTR(ITMCOSTA,"GESICA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet ITMCOSTA.ACTX.ASTACRITROLE(ITMCOSTA,[L]_STOFCY+"~"+[L]_ITMREF+"~"+num$([L]_CSTTYP)+"~"+num$([L]_ITCSEQ)
& +"~"+num$([L]_UID)
& ,"ICA","ITC",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ITMCOSTA.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ITMCOSTA.ITC.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ITMCOSTA.ITC.AREAD([L]_STOFCY,[L]_ITMREF,[L]_CSTTYP,[L]_ITCSEQ,[L]_UID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ITMCOSTA.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ITMCOSTA.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ITMCOSTA._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ITMCOSTA.APARENT=null
 ITMCOSTA.snapshotEnabled = 1
 ITMCOSTA.setAccessorEnabled = 1
Endif
LogicClose File [ITC] ,[ITM] ,[ITF]
End



