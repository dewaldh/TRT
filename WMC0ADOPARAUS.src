#<AdxTL>@(#)0.0.0.0 $Revision$Class User parameters
# Supervisor
## ACLA-CLASSE ## ADOPARAUS
# 2018-08-27 12:19:56 121

####################################################################
# Traitments
####################################################################
$_ADDTRT
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0ADOPARAUS
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 15
 If this.COLVAL(AINDCLA)<>null
  [L]ASTATUS = fmet this.COLVAL(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.ADU<>null
 [L]ASTATUS = fmet this.ADU._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0ADOPARAUS
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 15
 If this.COLVAL(AINDCLA)<>null
  [L]ASTATUS = fmet this.COLVAL(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.ADU<>null
 [L]ASTATUS = fmet this.ADU._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0ADOPARAUS
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 15
 If this.COLVAL(AINDCLA)<>null
  [L]ASTATUS = fmet this.COLVAL(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'COLVAL('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.ADU<>null
 [L]ASTATUS = fmet this.ADU._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'ADU')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0ADOPARAUS
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "ADU"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"ADU",this)
 When "COLVAL"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"COLVAL",this)
  If [L]_ALINE<>[V]CST_ANOTDEFINED : this.NBVAL -= 1 : Endif
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "ADU"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"ADU","C_ADOVALAUS",this)
 When "COLVAL"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"COLVAL","C_ADOPARAUS_COLVAL",this)
  If [L]_ALINE<>[V]CST_ANOTDEFINED : this.NBVAL += 1 : Endif
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "ADU"
  [L]_ALINE = 1
 When "COLVAL"
  [L]_ALINE = 15
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "ADU"
  [L]_ALINE = 2
 When "COLVAL"
  [L]_ALINE = 2
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "CHAPITRE"
this.AKEYS(2) = "PARAM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.ADU(1) = NewInstance C_ADOVALAUS(this.ACTX,NullUuid,1,this,"ADU") AllocGroup this
this.ADU(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.ADU(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



