#<AdxTL>@(#)%I%
# Supervisor
# Inquiry BSE

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [31/10/2018]
A_HEURE = "11:54:43"
A_USER  = "MAJID"
A_STAMP = "20181031115443"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(56580,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSBSESTD"
PROGSPE    = "CNSBSESPE"
CBOITE     = "DCNSBSE"
BOITE      = "FCNSBSE"
NOMMSK(0)  = "CONSBSE1"
ABMSK(0)   = "BSE1"
NOMMSK(1)  = "CONSBSE2"
ABMSK(1)   = "BSE2"
CMEMO      = "bse"
CNOMMSK    = "CRITBSE"
CABMSK     = "CBSE"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:CPY])=0 : Local File COMPANY      [CPY] : Endif
If clalev([F:FGR])=0 : Local File FACGROUP     [FGR] : Endif
If clalev([F:FIY])=0 : Local File FISCALYEAR   [FIY] : Endif
If clalev([F:PER])=0 : Local File PERIOD       [PER] : Endif
If clalev([F:BAL])=0 : Local File BALANCE      [BAL] : Endif
If clalev([F:GAC])=0 : Local File GACCOUNT     [GAC] : Endif
If clalev([F:BPR])=0 : Local File BPARTNER     [BPR] : Endif
If clalev([F:TCU])=0 : Local File TABCUR       [TCU] : Endif
If clalev([F:COA])=0 : Local File GCOA         [COA] : Endif
If clalev([F:CLS])=0 : Local File GACCCLS      [CLS] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CBSE]
 When  0 : Local Mask =NOMMSK(0) [BSE1]
 When  1 : Local Mask =NOMMSK(1) [BSE2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CBSE]
 When  0 : Grizo [BSE1]
 When  1 : Grizo [BSE2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CBSE]CPY)>0
 Grizo [CBSE]CPY
Endif
If dim([M:CBSE]FCY)>0
 Grizo [CBSE]FCY
Endif
If dim([M:CBSE]LEDTYP)>0
 Grizo [CBSE]LEDTYP
Endif
If dim([M:CBSE]COA)>0
 Grizo [CBSE]COA
Endif
If dim([M:CBSE]DATDEB)>0
 Grizo [CBSE]DATDEB
Endif
If dim([M:CBSE]DATFIN)>0
 Grizo [CBSE]DATFIN
Endif
If dim([M:CBSE]CUR)>0
 Grizo [CBSE]CUR
Endif
If dim([M:CBSE]GYM)>0
 Grizo [CBSE]GYM
Endif
If dim([M:CBSE]DETAIL)>0
 Grizo [CBSE]DETAIL
Endif
If dim([M:CBSE]LEVEL)>0
 Grizo [CBSE]LEVEL
Endif
If dim([M:CBSE]MULLEV)>0
 Grizo [CBSE]MULLEV
Endif
If dim([M:CBSE]VOIVAL)>0
 Grizo [CBSE]VOIVAL
Endif
If dim([M:CBSE]OUTPYR)>0
 Grizo [CBSE]OUTPYR
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CBSE])>0 : Close Local Mask [CBSE] : Endif
 When  0 : If clalev([M:BSE1])>0 : Close Local Mask [BSE1] : Endif
 When  1 : If clalev([M:BSE2])>0 : Close Local Mask [BSE2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CBSE]
 When  0 : Default Mask [BSE1]
 When  1 : Default Mask [BSE2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CBSE]
 When  0 : Raz [M:BSE1]
 When  1 : Raz [M:BSE2]
Endcase
Return

$CRITENT
If dim([M:CBSE]CPY)>0 & dim([M:BSE1]CPY)>0
 [M:CBSE]CPY = [M:BSE1]CPY
Endif
If dim([M:CBSE]FCY)>0 & dim([M:BSE1]FCY)>0
 [M:CBSE]FCY = [M:BSE1]FCY
Endif
If dim([M:CBSE]LEDTYP)>0 & dim([M:BSE1]LEDTYP)>0
 [M:CBSE]LEDTYP = [M:BSE1]LEDTYP
Endif
If dim([M:CBSE]COA)>0 & dim([M:BSE1]COA)>0
 [M:CBSE]COA = [M:BSE1]COA
Endif
If dim([M:CBSE]DATDEB)>0 & dim([M:BSE1]DATDEB)>0
 [M:CBSE]DATDEB = [M:BSE1]DATDEB
Endif
If dim([M:CBSE]DATFIN)>0 & dim([M:BSE1]DATFIN)>0
 [M:CBSE]DATFIN = [M:BSE1]DATFIN
Endif
If dim([M:CBSE]CUR)>0 & dim([M:BSE1]CUR)>0
 [M:CBSE]CUR = [M:BSE1]CUR
Endif
If dim([M:CBSE]GYM)>0 & dim([M:BSE1]GYM)>0
 [M:CBSE]GYM = [M:BSE1]GYM
Endif
If dim([M:CBSE]DETAIL)>0 & dim([M:BSE1]DETAIL)>0
 [M:CBSE]DETAIL = [M:BSE1]DETAIL
Endif
If dim([M:CBSE]LEVEL)>0 & dim([M:BSE1]LEVEL)>0
 [M:CBSE]LEVEL = [M:BSE1]LEVEL
Endif
If dim([M:CBSE]MULLEV)>0 & dim([M:BSE1]MULLEV)>0
 [M:CBSE]MULLEV = [M:BSE1]MULLEV
Endif
If dim([M:CBSE]VOIVAL)>0 & dim([M:BSE1]VOIVAL)>0
 [M:CBSE]VOIVAL = [M:BSE1]VOIVAL
Endif
If dim([M:CBSE]OUTPYR)>0 & dim([M:BSE1]OUTPYR)>0
 [M:CBSE]OUTPYR = [M:BSE1]OUTPYR
Endif
Return

$ENTCRIT
If dim([M:CBSE]CPY)>0 & dim([M:BSE1]CPY)>0
[M:BSE1]CPY = [M:CBSE]CPY
Endif
If dim([M:CBSE]FCY)>0 & dim([M:BSE1]FCY)>0
[M:BSE1]FCY = [M:CBSE]FCY
Endif
If dim([M:CBSE]LEDTYP)>0 & dim([M:BSE1]LEDTYP)>0
[M:BSE1]LEDTYP = [M:CBSE]LEDTYP
Endif
If dim([M:CBSE]COA)>0 & dim([M:BSE1]COA)>0
[M:BSE1]COA = [M:CBSE]COA
Endif
If dim([M:CBSE]DATDEB)>0 & dim([M:BSE1]DATDEB)>0
[M:BSE1]DATDEB = [M:CBSE]DATDEB
Endif
If dim([M:CBSE]DATFIN)>0 & dim([M:BSE1]DATFIN)>0
[M:BSE1]DATFIN = [M:CBSE]DATFIN
Endif
If dim([M:CBSE]CUR)>0 & dim([M:BSE1]CUR)>0
[M:BSE1]CUR = [M:CBSE]CUR
Endif
If dim([M:CBSE]GYM)>0 & dim([M:BSE1]GYM)>0
[M:BSE1]GYM = [M:CBSE]GYM
Endif
If dim([M:CBSE]DETAIL)>0 & dim([M:BSE1]DETAIL)>0
[M:BSE1]DETAIL = [M:CBSE]DETAIL
Endif
If dim([M:CBSE]LEVEL)>0 & dim([M:BSE1]LEVEL)>0
[M:BSE1]LEVEL = [M:CBSE]LEVEL
Endif
If dim([M:CBSE]MULLEV)>0 & dim([M:BSE1]MULLEV)>0
[M:BSE1]MULLEV = [M:CBSE]MULLEV
Endif
If dim([M:CBSE]VOIVAL)>0 & dim([M:BSE1]VOIVAL)>0
[M:BSE1]VOIVAL = [M:CBSE]VOIVAL
Endif
If dim([M:CBSE]OUTPYR)>0 & dim([M:BSE1]OUTPYR)>0
[M:BSE1]OUTPYR = [M:CBSE]OUTPYR
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "CUR" : CRITAFF2(1) = "CUR"
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSBSE2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "BSE"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:BSE1]CPY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BSE1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:BSE1]LEDTYP),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(string$([M:BSE1]SAC="",[M:BSE2]COMPTE(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(string$([M:BSE1]SAC<>"",[M:BSE2]COMPTE(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(string$([M:BSE1]SAC<>"",[M:BSE1]SAC),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BSE1]DATDEB,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BSE1]DATFIN,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BSE1]CUR,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "BSE"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:BSE1]CPY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:BSE1]FCY" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:BSE1]LEDTYP" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Assign "[M:BSE1]DATDEB" With ctrans(func AFNC.PART(INFO,9),"¨","~")
  Assign "[M:BSE1]DATFIN" With ctrans(func AFNC.PART(INFO,10),"¨","~")
  Assign "[M:BSE1]CUR" With ctrans(func AFNC.PART(INFO,11),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSBSE2"
 When "B2"
  Onerrgo RIEN
  Onerrgo
  Call B2_NBLIG From ="W1CONSBSE2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


