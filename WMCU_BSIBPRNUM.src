#<AdxTL>@(#)0.0.0.0 $Revision$Class BP number definition
# Supervisor
## CRUD-CLASSE ## BSIBPRNUM
# 2018-08-27 12:26:31 495


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(BSIBPRNUM,ASTATUS)
Variable Instance BSIBPRNUM Using C_BSIBPRNUM
Variable Integer ASTATUS

If BSIBPRNUM = null : End : Endif

Gosub _AVARIABLES From WMC00BSIBPRNUM

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_BSIBPRNUM

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSIBPRNUM,ASTATUS)
Variable Instance BSIBPRNUM Using C_BSIBPRNUM
Variable Integer ASTATUS

If BSIBPRNUM = null : End : Endif

Gosub AVARIABLES From WMC00BSIBPRNUM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
BSIBPRNUM.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSIBPRNUM
Else
 Gosub AUPDATE_BSIBPRNUM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSIBPRNUM.freeSnapshot
BSIBPRNUM.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIBPRNUM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIBPRNUM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIBPRNUM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSIBPRNUM.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIBPRNUM.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSIBPRNUM.ASTALIN)<>""
 [L]A_ASTALIN = BSIBPRNUM.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(BSIBPRNUM.LINES) : # BSIBPRNUMD -- 2
 If BSIBPRNUM.LINES(A_N2) <> null
& and BSIBPRNUM.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSIBPRNUM.LINES(A_N2).ASTALIN<>[V]CST_ANEW & BSIBPRNUM.ASTALIN=[V]CST_ADEL
   BSIBPRNUM.LINES(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If BSIBPRNUM.LINES(A_N2).ASTALIN=[V]CST_ANEW & find(BSIBPRNUM.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   BSIBPRNUM.LINES(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(BSIBPRNUM.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSIBPRNUM.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(BSIBPRNUM.LINES) : # BSIBPRNUMD -- 2
 If BSIBPRNUM.LINES(A_N2) <> null
& and BSIBPRNUM.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(BSIBPRNUM.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSIBPRNUM.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(BSIBPRNUM.ASTALIN)<>""
 [L]A_ASTALIN = BSIBPRNUM.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSIBPRNUM
Trbegin [F:BSIBPN]
 Gosub AUPDATE_BSIBPRNUM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_BSIBPRNUM
Read [F:BSIBPN]BSIBPN0 = BSIBPRNUM.CPY;BSIBPRNUM.FCY;BSIBPRNUM.FILFMT
If !fstat
 #-----------------------#
 If [L]A_LEVEL>=2
  For [BSIBPND]BSIBPN0 Where CPY=[F:BSIBPN]CPY & FCY=[F:BSIBPN]FCY & FILFMT=[F:BSIBPN]FILFMT
   Delete [F:BSIBPND] Curr
   If fstat
    Call FSTA("BSIBPND",BSIBPRNUM,[L]ASTATUS) From ASYRSUB : Break 
   Endif
  Next BSIBPND
  If [L]ASTATUS=[V]CST_AERROR :Return : Endif
 Endif
 #-----------------------#
Endif
[L]A_ASTALIN = BSIBPRNUM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00BSIBPRNUM._MAJSQL_BSIBPRNUM(BSIBPRNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(BSIBPRNUM.LINES)
  If BSIBPRNUM.LINES(A_N2) <> null and
& (BSIBPRNUM.LINES(A_N2).ASTALIN=[L]A_TYPMAJ or
& BSIBPRNUM.LINES(A_N2).ASTALIN=[V]CST_ALL) and ([L]A_TYPMAJ<>[V]CST_ADEL)
   If [L]A_TYPMAJ=[V]CST_AUPD
    BSIBPRNUM.LINES(A_N2).ASTALIN=[V]CST_ANEW
   Else
    If BSIBPRNUM.LINES(A_N2).ASTALIN=[L]A_TYPMAJ
     If [V]CST_ASTALIN(BSIBPRNUM.LINES(A_N2).ASTALIN)<>""
      [L]A_ASTALIN = BSIBPRNUM.LINES(A_N2).ASTALIN
      [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
      If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
     Endif
     [L]ASTATUS = func WMC00BSIBPRNUM._MAJSQL_BSIBPRNUMD(BSIBPRNUM.LINES(A_N2))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
     If [V]CST_ASTALIN(BSIBPRNUM.LINES(A_N2).ASTALIN)<>""
      [L]A_ASTALIN = BSIBPRNUM.LINES(A_N2).ASTALIN
      [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
      If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
     Endif
    Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSIBPRNUM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If BSIBPRNUM.snapshotEnabled=1
 [L]A_RETIK = BSIBPRNUM.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIBPRNUM.LINES)
 If BSIBPRNUM.LINES(A_N2) <> null
  If BSIBPRNUM.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   BSIBPRNUM.LINES(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet BSIBPRNUM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSIBPRNUM.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIBPRNUM.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIBPRNUM.LINES)
 If BSIBPRNUM.LINES(A_N2) <> null
  If BSIBPRNUM.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSIBPRNUM.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSIBPRNUM.LINES(A_N2)
   BSIBPRNUM.LINES(A_N2) = null
  Elsif BSIBPRNUM.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSIBPRNUM.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



