#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################################
# Script            : SPEYSELPCC                                                                                     #
# Creation date     : 06/05/2018                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : JHM (Leverage)                                                                                 #
# Module            : PCC dimension selection in lines                                                               #
# -------------------------------------------------------------------------------------------------------------------#
# Epics code        :                                                                                                #
# Description       : PCC customizations                                                                             #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
######################################################################################################################

#------------------------------------------------------------------------------------#
#Action
#------------------------------------------------------------------------------------#
$ACTION
Case ACTION
  When Default
Endcase

Case GACTION

  When 'YSELDIM','YSELACC' :
    Case ACTION
      When "SEL_LISTE"    : Gosub SEL_LISTE
    Endcase
  When 'YSELDIM1' :
  Infbox "e"
    Case ACTION
      When "SEL_LISTE"    : Gosub SEL_LISTE1
    Endcase

Endcase

Return


#------------------------------------------------------------------------------------#
#Action identifiers for list selection
#------------------------------------------------------------------------------------#
$SEL_LISTE

Case num$(PARAM(2))
  When "1"
    Case LISTE
      When "SELDIM"     : Gosub S_SELPCC
      When "SELACC"     : Gosub S_SELACC
    Endcase
  When "2"
     Case LISTE
      When "SELDIM"     : Gosub S_SELPCC
      When "SELACC"     : Gosub S_SELLED
    Endcase

Endcase
Return

$SEL_LISTE1
  Infbox PARAM(1),PARAM(2),PARAM(3)
#When "SELDIM1"     : Gosub S_SELCCE
Return


$SEL_TABLE

#Gosub SELCCE_TABLE

Return

######################################################################################
#Funprog VERIF_DIM_PCC(YFUNCTION,YDIMENSION)
#Value Char YFUNCTION
#Value Char YDIMENSION
#Local Integer YVALID
#Local Char REQUEST(255)(3)
#
#Case YFUNCTION
#  When 'GESPOH', 'GESGAS', 'GESPIH', 'GESBIS'
#    #REQUEST(0) = func BUILD_REQ(YFUNCTION)
#    REQUEST(1) = ""
#    REQUEST(2) = ""
#  When 'GESSMO', 'GESSMR'
#    REQUEST(0) = "SELECT DISTINCT CCE.CCE_0,CCE.DES_0,CCE.DIE_0 "
#    REQUEST(0) += "FROM CACCE CCE "
#    REQUEST(0) += "INNER JOIN FACILITY FCY ON CCE.CCE_0 LIKE SUBSTR(FCY.CCE_0,1,INSTR(FCY.CCE_0,'-',1) + INSTR(SUBSTR(FCY.CCE_0,INSTR(FCY.CCE_0,'-',1)+1,5),'-',1) - 1) || '%' "
#
#    REQUEST(1) = "INNER JOIN YPCCACC YPCA ON YPCA.YCCE_0 = CCE.CCE_0 AND YPCA.YDIE_0 = CCE.DIE_0 "
#    REQUEST(1) += "INNER JOIN GACCCODE CAC ON YPCA.YACC_0 = CAC.ACC_10 "
#    REQUEST(1) += "INNER JOIN ITMCATEG ITG ON CAC.ACCCOD_0 = ITG.ACCCOD_0 "
#
#    REQUEST(2) = "INNER JOIN ITMMASTER ITM ON ITM.TCLCOD_0=ITG.TCLCOD_0 "
#    REQUEST(2) += "WHERE CCE.DIE_0='PCC' AND CCE.ENAFLG_0=2 "
#
#    Case YFUNCTION
#      When 'GESSMO'   # Miscellaneous issue
#        REQUEST(2) += "AND ((ITG.YREGVAL_0=2 AND FCY.FCY_0='" + [M:SMO0]STOFCY + "' AND ITM.ITMREF_0='" + [M:SMO1]ITMREF(nolign - 1) + "') OR ITG.YREGVAL_0<>2) "
#      When 'GESSMR'   # Miscellaneous receipt
#        REQUEST(2) += "AND ((ITG.YREGVAL_0=2 AND FCY.FCY_0='" + [M:SMR0]STOFCY + "' AND ITM.ITMREF_0='" + [M:SMR1]ITMREF(nolign - 1) + "') OR ITG.YREGVAL_0<>2) "
#    Endcase
#    REQUEST(2) += "AND CCE.CCE_0='" + YDIMENSION + "' ORDER BY 1"
#Endcase
#
#YVALID = 0
#
#For (Char YCCE, Char YDES(50), Char YDIE) From "3" Sql REQUEST As [YLNK]
#  If [F:YLNK]YCCE = YDIMENSION
#    YVALID = 1
#    Break
#  Endif
#Next
#End YVALID


#------------------------------------------------------------------------------------#
#Apply the filter for the selection list
#------------------------------------------------------------------------------------#
$S_SELPCC
Local Integer I
Local Char TEXTE(255)(1..500,1..3)
Local Char TEX(10)(500)
Local Char REQUEST(255)(3)

GPE = 1

I=0
TIT(1)="Dimension"
TIT(2)="Title"
TIT(3)="Dimension type"
CRITERE = "1=1"

Case PARAM(1)
  When 'GESGAS', 'GESBIS', 'GESBIC'
    REQUEST(0) = func BUILD_REQ(PARAM(1),PARAM(2))
    REQUEST(1) = ""
    REQUEST(2) = ""
  When Default
Endcase

#When 'GESSMO', 'GESSMR'
#    REQUEST(0) = "SELECT DISTINCT CCE.CCE_0,CCE.DES_0,CCE.DIE_0 "
#    REQUEST(0) += "FROM CACCE CCE "
#    REQUEST(0) += "INNER JOIN FACILITY FCY ON CCE.CCE_0 LIKE SUBSTR(FCY.CCE_0,1,INSTR(FCY.CCE_0,'-',1) + INSTR(SUBSTR(FCY.CCE_0,INSTR(FCY.CCE_0,'-',1)+1,5),'-',1) - 1) || '%' "
#
#    REQUEST(1) = "INNER JOIN YPCCACC YPCA ON YPCA.YCCE_0 = CCE.CCE_0 AND YPCA.YDIE_0 = CCE.DIE_0 "
#    REQUEST(1) += "INNER JOIN GACCCODE CAC ON YPCA.YACC_0 = CAC.ACC_10 "
#    REQUEST(1) += "INNER JOIN ITMCATEG ITG ON CAC.ACCCOD_0 = ITG.ACCCOD_0 "
#
#    REQUEST(2) = "INNER JOIN ITMMASTER ITM ON ITM.TCLCOD_0 = ITG.TCLCOD_0 "
#    REQUEST(2) += "WHERE CCE.DIE_0 = 'PCC' AND CCE.ENAFLG_0 = 2 "
#
#    Case PARAM(1)
#      When 'GESSMO'   # Miscellaneous issue
#        REQUEST(2) += "AND ((ITG.YREGVAL_0 = 2 AND FCY.FCY_0='" + [M:SMO0]STOFCY + "' AND ITM.ITMREF_0='" + [M:SMO1]ITMREF(nolign - 1) + "') OR ITG.YREGVAL_0<>2) "
#      When 'GESSMR'   # Miscellaneous receipt
#        REQUEST(2) += "AND ((ITG.YREGVAL_0 = 2 AND FCY.FCY_0='" + [M:SMR0]STOFCY + "' AND ITM.ITMREF_0='" + [M:SMR1]ITMREF(nolign - 1) + "') OR ITG.YREGVAL_0<>2) "
#    Endcase
#    REQUEST(2) += "ORDER BY 1"


For (Char YCCE, Char YDES(50), Char YDIE) From "5" Sql REQUEST As [YLNK]
  I += 1

  TEX(I)     = [F:YLNK]YCCE
  TEXTE(I,1) = [F:YLNK]YCCE
  TEXTE(I,2) = [F:YLNK]YDES
  TEXTE(I,3) = [F:YLNK]YDIE
Next
NBTEX=I

If I = 0
  Call ERRTIT( mess(6,6201,1),"Accounts") From GESECRAN
Endif

Return


#------------------------------------------------------------------------------------#
#Apply filters for the selection
#------------------------------------------------------------------------------------#
Funprog BUILD_REQ(YFUNCTION,YDIMTYPE)
Value Char YFUNCTION
Value Char YDIMTYPE
Local Integer YVALID
Local Char REQUEST(255)

REQUEST = "SELECT DISTINCT YCCE_0,YDES_0,YDIE_0 FROM YPCCACCV "

# Specific conditions based on the caller function
Case YFUNCTION   # FONCTION
    When 'GESBIC'   # Supplier BP invoice
    REQUEST += "WHERE YACC_0='" + [M:BIC3]ACC1(nolign - 1) + "' AND YDIE_0='" + YDIMTYPE + "' " # AND YFCY_0='" + [M:BIS3]FCYLIN(nolign - 1) + "' "
    When 'GESBIS'   # Supplier BP invoice
    REQUEST += "WHERE YACC_0='" + [M:BIS3]ACC1(nolign - 1) + "' AND YDIE_0='" + YDIMTYPE + "' " # AND YFCY_0='" + [M:BIS3]FCYLIN(nolign - 1) + "' "
    When 'GESGAS'   # Supplier BP invoice
    REQUEST += "WHERE YACC_0='" + [M:HAE2]ACC1(nolign - 1) + "' AND YDIE_0='" + YDIMTYPE + "' " # AND YFCY_0='" + [M:BIS3]FCYLIN(nolign - 1) + "' "
Endcase

REQUEST += "ORDER BY 1"

End REQUEST


#------------------------------------------------------------------------------------#
#
#------------------------------------------------------------------------------------#
#$SELCCE_TABLE
#Local Integer PCC_END, I
#PCC_END = 30000
#Local Char PCC_LIST(10)(PCC_END)
#
#If clalev([M:HAE2]) = 0
#  Return
#Endif
#
#GPE = 1
#
##- Open the required tables
##REQUEST = func BUILD_REQ('GESGAS')
#I = 0
#
#For (Char YCCE, Char YDES(50), Char YDIE) From "5" Sql REQUEST As [YLNK]
#  PCC_LIST(I) = [F:YLNK]YCCE
#  I += 1
#Next
#
#If !clalev ([F:YCCE])      : Local File CACCE [YCCE]     : Endif
#
#Filter [F:YCCE] Where find([F:YCCE]CCE,PCC_LIST(0..I))>0
#
#Default File [F:YCCE]
#
##-Nb of column to display
#NBCOL=3
#
##- Title of the selection window
#TIT(0)="Selection Dimension"
#
##- Title of columns
#TIT(1)="Dimension"
#TIT(2)="Title"
#TIT(3)="Dimension type"
#
##- Name of fields for each column
#COL(1)="CCE"
#COL(2)="DES"
#COL(3)="DIE"
#
##- Supervisor handles the number of pages
#DEFPAG=1
#
##- Indicates which column contains the value that is going to be assigned to the calling field
#START="CCE"
#
#Return

#------------------------------------------------------------------------------------#
#Apply filters for account selection
#------------------------------------------------------------------------------------#
$S_SELACC
Local Integer I
Local Char TEXTE(255)(1..2000,1..3)
Local Char TEX(10)(2000)
Local Char REQUEST(255)(3)

#debug message variable
Local Char YMSG(250)(5)

GPE = 1

I=0
TIT(1)="Account"
TIT(2)="Description"
TIT(3)="Chart Code"
CRITERE = "1=1"


#REQUEST(0) = "SELECT DISTINCT ACC.ACC_0,ACC.DES_0,ACC.COA_0 "
#REQUEST(0) += "FROM GACCOUNT ACC "
#REQUEST(1) = "WHERE COA_0 IN (" + func YDFCGENERAL.GETCOA(PARAM(1)) + ")"

REQUEST(0) = "SELECT DISTINCT ACC.ACC_0,ACC.DES_0,ACC.COA_0 "
REQUEST(0) += "FROM GACCOUNT ACC "
REQUEST(1) = "WHERE COA_0 = '" + [M:YPCCACC]YCOA(nolign-1) + "'"


#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  Raz YMSG
  YMSG(0) = "Function: S_SELACC"
  YMSG(1) = "Request: " + REQUEST(0)
  YMSG(2) = "Request1: " + REQUEST(1)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

For (Char YACC, Char YDES(50), Char YCOA) From "5" Sql REQUEST As [YLNK]
  I += 1

  TEX(I)     = [F:YLNK]YACC
  TEXTE(I,1) = [F:YLNK]YACC
  TEXTE(I,2) = [F:YLNK]YDES
  TEXTE(I,3) = [F:YLNK]YCOA

  If I = 2000
    Call ERRTIT( mess(12,6201,1),"Record limit reached (2000)") From GESECRAN
    Break
  Endif

Next
NBTEX=I

If I = 0
  Call ERRTIT( mess(6,6201,1),"Accounts") From GESECRAN
Endif

Return


#------------------------------------------------------------------------------------#
#Apply filters for account selection
#------------------------------------------------------------------------------------#
$S_SELLED
Local Integer I
Local Char TEXTE(255)(1..2000,1..3)
Local Char TEX(10)(2000)
Local Char REQUEST(255)(3)
Local Char YDIM


#debug message variable
Local Char YMSG(250)(5)

GPE = 1

YDIM = PARAM(1)

I=0
TIT(1)="Ledger"
TIT(2)="Description"
TIT(3)="Chart Code"
CRITERE = "1=1"


REQUEST(0) = "SELECT LED_0, DES_0, COA_0 "
REQUEST(0) += "From GLED "
REQUEST(1) += "WHERE DIE_0 = '" + YDIM + "' or DIE_1 = '" + YDIM + "' or DIE_2 = '" + YDIM + "' or DIE_3 = '" + YDIM + "' or DIE_4 = '"
REQUEST(2) += YDIM + "' or DIE_5 = '" + YDIM + "' or DIE_6 = '" + YDIM + "' or DIE_7 = '" + YDIM + "' or DIE_8 = '" + YDIM + "'"


#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  YMSG(0) = "Current Function: GETLED, Dimension: " + YDIM
  YMSG(1) = "Request: " + REQUEST(0)
  YMSG(2) = "Request: " + REQUEST(1)
  YMSG(3) = "Request: " + REQUEST(2)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

I = 0

#get all of the chart of accounts linked to the dimension.
For (Char YLED, Char YDES, Char YCOA) From "5" Sql REQUEST As [YLNK]

  I += 1
  TEX(I)     = [F:YLNK]YLED
  TEXTE(I,1) = [F:YLNK]YLED
  TEXTE(I,2) = [F:YLNK]YDES
  TEXTE(I,3) = [F:YLNK]YCOA



Next

NBTEX=I

#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  Raz YMSG
  YMSG(0) = "Function: S_SELACC"
  YMSG(1) = "Request: " + REQUEST(0)
  YMSG(2) = "Request1: " + REQUEST(1)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif



If I = 0
  Call ERRTIT( mess(6,6201,1),"Accounts") From GESECRAN
Endif

Return


#------------------------------------------------------------------------------------#
#
#------------------------------------------------------------------------------------#
$SELCCE_TABLE
Local Integer PCC_END, I
PCC_END = 30000
Local Char COA_LIST(10)(PCC_END)


#- Open the required tables
#REQUEST = func BUILD_REQ('GESGAS')
I = 0

#For (Char YCCE, Char YDES(50), Char YDIE) From "5" Sql REQUEST As [YLNK]
#  PCC_LIST(I) = [F:YLNK]YCCE
#  I += 1
#Next
#
#If !clalev ([F:YCCE])      : Local File CACCE [YCCE]     : Endif
#
#Filter [F:YCCE] Where find([F:YCCE]CCE,PCC_LIST(0..I))>0
#
#Default File [F:YCCE]
COA_LIST = func YDFCGENERAL.GETCOA1(PARAM(1))

#Infbox COA_LIST(0),COA_LIST(1),COA_LIST(2)

If !clalev ([F:YYACC])      : Local File GACCOUNT [YYACC]     : Endif
#

Filter [F:YYACC] Where COA = "A10" #COA_LIST(0)#Where find([F:YGACC]COA,COA_LIST(0..10))>0
#
Default File [F:YYACC]




#-Nb of column to display
NBCOL=3

#- Title of the selection window
TIT(0)="Account Selection"

#- Title of columns
TIT(1)="Account"
TIT(2)="Description"
TIT(3)="Chart Code"
CRITERE = "1=1"

#- Name of fields for each column
COL(1)="ACC"
COL(2)="DES"
COL(3)="COA"

#- Supervisor handles the number of pages
DEFPAG=1

#- Indicates which column contains the value that is going to be assigned to the calling field
START="COA"

Return


S_SELCCE


Return

