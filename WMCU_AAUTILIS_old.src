#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Sage X3 supervisor
## CRUD-CLASSE ## AAUTILIS
# 2018-06-20 06:29:51 598


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(AAUTILIS,ASTATUS)
Variable Instance AAUTILIS Using C_AAUTILIS
Variable Integer ASTATUS

If AAUTILIS = null : End : Endif

Gosub _AVARIABLES From WMC00AAUTILIS

[L]A_STRSITE = ""
[L]A_STRACC = AAUTILIS.ACSUSR
Gosub AUPDATE_AAUTILIS

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(AAUTILIS,ASTATUS)
Variable Instance AAUTILIS Using C_AAUTILIS
Variable Integer ASTATUS

If AAUTILIS = null : End : Endif

Gosub AVARIABLES From WMC00AAUTILIS
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = AAUTILIS.ACSUSR
AAUTILIS.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_AAUTILIS
Else
 Gosub AUPDATE_AAUTILIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = AAUTILIS.freeSnapshot
AAUTILIS.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet AAUTILIS._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet AAUTILIS._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet AAUTILIS._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If AAUTILIS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AAUTILIS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(AAUTILIS.ASTALIN)<>""
 [L]A_ASTALIN = AAUTILIS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet AAUTILIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If AAUTILIS.BPA(A_N2) <> null
& and AAUTILIS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AAUTILIS.BID) : # BID -- 3
 If AAUTILIS.BID(A_N2) <> null
& and AAUTILIS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
A_N2=1
If AAUTILIS.BPA(A_N2) <> null
& and AAUTILIS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AAUTILIS.BID) : # BID -- 3
 If AAUTILIS.BID(A_N2) <> null
& and AAUTILIS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(AAUTILIS.ASTALIN)<>""
 [L]A_ASTALIN = AAUTILIS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet AAUTILIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_AAUTILIS
Trbegin [F:AUS]
 Gosub AUPDATE_AAUTILIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_AAUTILIS
[L]A_ASTALIN = AAUTILIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet AAUTILIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( AAUTILIS.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( AAUTILIS.ASTALIN,[V]CST_AUPD) & 
& fmet AAUTILIS.AGETATTRIBUTE("AUSPIC","$isLoaded")="true")
[L]ASTATUS = func WMC00AAUTILIS._MAJSQL_AAUTILIS_AUSPIC(AAUTILIS,AAUTILIS.AUSPIC)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00AAUTILIS._MAJSQL_AUTILIS(AAUTILIS))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 A_N2=1
 If AAUTILIS.BPA(A_N2) <> null and 
& AAUTILIS.BPA(A_N2).ASTALIN=[V]CST_ALL
 AAUTILIS.BPA(A_N2).ASTALIN = [V]CST_AUPD
 Endif
 #-----------------------#
 #-----------------------#
 For A_N2=1 To maxtab(AAUTILIS.BID)
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = AAUTILIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet AAUTILIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If AAUTILIS.snapshotEnabled=1
 [L]A_RETIK = AAUTILIS.revertUpdTick
Endif
Local Integer ASTATUS2
A_N2=1
If AAUTILIS.BPA(A_N2) <> null
 If AAUTILIS.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
  AAUTILIS.BPA(A_N2).ASTALIN = [V]CST_ANEW
  For [L]A_I=1 To maxtab(AAUTILIS.BPA(A_N2).COLTEL)
   If AAUTILIS.BPA(A_N2).COLTEL([L]A_I)<>null
    If AAUTILIS.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
     AAUTILIS.BPA(A_N2).COLTEL([L]A_I).ASTALIN = [V]CST_ANEW
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
  For [L]A_I=1 To maxtab(AAUTILIS.BPA(A_N2).COLWEB)
   If AAUTILIS.BPA(A_N2).COLWEB([L]A_I)<>null
    If AAUTILIS.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
     AAUTILIS.BPA(A_N2).COLWEB([L]A_I).ASTALIN = [V]CST_ANEW
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(AAUTILIS.BID)
 If AAUTILIS.BID(A_N2) <> null
  [L]ASTATUS2 = fmet AAUTILIS.BID(A_N2)._AUPDATE_ABORT
  If AAUTILIS.BID(A_N2).ASTALIN=[V]CST_ADEL or AAUTILIS.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AAUTILIS.BID(A_N2)
   AAUTILIS.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet AAUTILIS.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(AAUTILIS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 AAUTILIS.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
A_N2=1
If AAUTILIS.BPA(A_N2) <> null
 If AAUTILIS.BPA(A_N2).ASTALIN=[V]CST_ADEL or AAUTILIS.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance AAUTILIS.BPA(A_N2)
  AAUTILIS.BPA(A_N2) = null
 Elsif AAUTILIS.BPA(A_N2).ASTALIN <> [V]CST_ALL
  AAUTILIS.BPA(A_N2).ASTALIN = [V]CST_ALL
  For [L]A_I=1 To maxtab(AAUTILIS.BPA(A_N2).COLTEL)
   If AAUTILIS.BPA(A_N2).COLTEL([L]A_I)<>null
    If AAUTILIS.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ADEL or AAUTILIS.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
     FreeInstance AAUTILIS.BPA(A_N2).COLTEL([L]A_I)
     AAUTILIS.BPA(A_N2).COLTEL([L]A_I) = null
    Elsif AAUTILIS.BPA(A_N2).COLTEL([L]A_I).ASTALIN <> [V]CST_ALL
     AAUTILIS.BPA(A_N2).COLTEL([L]A_I).ASTALIN = [V]CST_ALL
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
  For [L]A_I=1 To maxtab(AAUTILIS.BPA(A_N2).COLWEB)
   If AAUTILIS.BPA(A_N2).COLWEB([L]A_I)<>null
    If AAUTILIS.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ADEL or AAUTILIS.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
     FreeInstance AAUTILIS.BPA(A_N2).COLWEB([L]A_I)
     AAUTILIS.BPA(A_N2).COLWEB([L]A_I) = null
    Elsif AAUTILIS.BPA(A_N2).COLWEB([L]A_I).ASTALIN <> [V]CST_ALL
     AAUTILIS.BPA(A_N2).COLWEB([L]A_I).ASTALIN = [V]CST_ALL
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(AAUTILIS.BID)
 If AAUTILIS.BID(A_N2) <> null
  [L]ASTATUS2 = fmet AAUTILIS.BID(A_N2)._AUPDATE_AFTER
  If AAUTILIS.BID(A_N2).ASTALIN=[V]CST_ADEL or AAUTILIS.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AAUTILIS.BID(A_N2)
   AAUTILIS.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



