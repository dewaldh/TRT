#<AdxTL>@(#)0.0.0.0 $Revision$Class GST reporting periods
# Supervisor
## CRUD-CLASSE ## GSTPER
# 2019-03-21 00:08:53 873


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(GSTPER,ASTATUS)
Variable Instance GSTPER Using C_GSTPER
Variable Integer ASTATUS

If GSTPER = null : End : Endif

Gosub _AVARIABLES From WMC00GSTPER

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_GSTPER

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(GSTPER,ASTATUS)
Variable Instance GSTPER Using C_GSTPER
Variable Integer ASTATUS

If GSTPER = null : End : Endif

Gosub AVARIABLES From WMC00GSTPER
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_GSTPER
Else
 Gosub ADELETE_GSTPER
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(GSTPER,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If GSTPER.ASTALIN = [V]CST_ANEWDEL : Return : Endif
GSTPER.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet GSTPER.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(GSTPER.LINES) : # GSTPERD -- 2
 If GSTPER.LINES(A_N2) <> null
& and GSTPER.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If GSTPER.LINES(A_N2).ASTALIN<>[V]CST_ANEW
   GSTPER.LINES(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet GSTPER.LINES(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(GSTPER.LINES) : # GSTPERD -- 2
 If GSTPER.LINES(A_N2) <> null
& and GSTPER.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet GSTPER.LINES(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet GSTPER.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_GSTPER
Trbegin [F:GSTPH]
 Gosub ADELETE_GSTPER
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_GSTPER
[L]ASTATUS = max([L]ASTATUS,fmet GSTPER.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(GSTPER.LINES)
 If GSTPER.LINES(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet GSTPER.LINES(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(GSTPER,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00GSTPER._MAJSQL_GSTPER(GSTPER))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet GSTPER.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If GSTPER.snapshotEnabled=1
 [L]A_RETIK = GSTPER.revertUpdTick
Endif
[L]ASTATUS = max(fmet GSTPER.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



