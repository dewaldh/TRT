#<AdxTL>@(#)0.0.0.0 $Revision$Class Trade profile
# Supervisor
## CRUD-CLASSE ## ASYRMET
# 2018-08-27 13:02:50 921


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AMETUTI [AME_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ASYRMET") From ASYRCOM : Endif
Local Instance ASYRMET Using R_ASYRMET

If !SILENCE : Call TRACE("3 --> New Instance R_ASYRMET") From ASYRCOM : Endif
ASYRMET = NewInstance R_ASYRMET AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AME_]AME0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ASYRMET") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ASYRMET.AREAD([AME_]CODMET))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ASYRMET.AME.CODMET ="-num$(ASYRMET.AME.CODMET)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ASYRMET.AME.AKEYS)
  Call TRACE("-"-num$(I)-":"-ASYRMET.AME.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AME_]
FreeGroup ASYRMET
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ASYRMET,ACLE,ASTATUS,_ETAG)
Variable Instance ASYRMET Using R_ASYRMET
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODMET(4)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODMET = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AMETUTI [AME]
Default File [F:AME]
Read [F:AME]AME0 = [L]_CODMET
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AME]UPDTICK)>0
 [L]_ETAG = num$([F:AME]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ASYRMET,ACLE,ASTATUS)
Variable Instance ASYRMET Using R_ASYRMET
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODMET(4)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODMET = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ASYRMET.AREAD([L]_CODMET))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ASYRMET,_CODMET,ASTATUS)
Variable Instance ASYRMET Using R_ASYRMET
Value Char _CODMET
Variable Integer ASTATUS

If ASYRMET = null : End : Endif

Gosub AVARIABLES From WMR00ASYRMET
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ASYRMET.APARENT=null
 [L]A_I = ASYRMET.freeSnapshot
 ASYRMET.snapshotEnabled = 0
 ASYRMET.setAccessorEnabled = 0
Endif

If fmet ASYRMET.ACTX.AGETAFCRIGHT(ASYRMET,"GESAME",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:AME]
Read [F:AME]AME0 = [L]_CODMET
If fstat
[L]A_ERROR = [L]_CODMET
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ASYRMET,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet ASYRMET.ACTX.AGETAFCRIGHTR(ASYRMET,"GESAME",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet ASYRMET.ACTX.ASTACRITROLE(ASYRMET,[L]_CODMET
& ,"AME","AME",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ASYRMET.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ASYRMET.AME.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ASYRMET.AME.AREAD([L]_CODMET))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ASYRMET.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ASYRMET.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ASYRMET._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ASYRMET.APARENT=null
 ASYRMET.snapshotEnabled = 1
 ASYRMET.setAccessorEnabled = 1
Endif
LogicClose File [AME]
End



