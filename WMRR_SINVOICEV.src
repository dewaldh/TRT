#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales invoice
# Supervisor
## CRUD-CLASSE ## SINVOICEV
# 2018-08-27 13:29:11 959


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SINVOICEV [SIV_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SINVOICEV") From ASYRCOM : Endif
Local Instance SINVOICEV Using R_SINVOICEV

If !SILENCE : Call TRACE("3 --> New Instance R_SINVOICEV") From ASYRCOM : Endif
SINVOICEV = NewInstance R_SINVOICEV AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SIV_]SIV0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SINVOICEV") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SINVOICEV.AREAD([SIV_]NUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SINVOICEV.SIV.NUM ="-num$(SINVOICEV.SIV.NUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SINVOICEV.SIV.AKEYS)
  Call TRACE("-"-num$(I)-":"-SINVOICEV.SIV.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SIV_]
FreeGroup SINVOICEV
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SINVOICEV,ACLE,ASTATUS,_ETAG)
Variable Instance SINVOICEV Using R_SINVOICEV
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _NUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_NUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SINVOICEV [SIV]
Default File [F:SIV]
Read [F:SIV]SIV0 = [L]_NUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SIV]UPDTICK)>0
 [L]_ETAG = num$([F:SIV]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SINVOICEV,ACLE,ASTATUS)
Variable Instance SINVOICEV Using R_SINVOICEV
Value Char ACLE
Variable Integer ASTATUS
Local Char _NUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_NUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SINVOICEV.AREAD([L]_NUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SINVOICEV,_NUM,ASTATUS)
Variable Instance SINVOICEV Using R_SINVOICEV
Value Char _NUM
Variable Integer ASTATUS

If SINVOICEV = null : End : Endif

Gosub AVARIABLES From WMR00SINVOICEV
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SINVOICEV.APARENT=null
 [L]A_I = SINVOICEV.freeSnapshot
 SINVOICEV.snapshotEnabled = 0
 SINVOICEV.setAccessorEnabled = 0
Endif

If fmet SINVOICEV.ACTX.AGETAFCRIGHT(SINVOICEV,"GESSIH",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SIV]
Read [F:SIV]SIV0 = [L]_NUM
If fstat
[L]A_ERROR = [L]_NUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SINVOICEV,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:SIV]SALFCY
[L]A_STRACC = ""
If fmet SINVOICEV.ACTX.AGETAFCRIGHTR(SINVOICEV,"GESSIH",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SINVOICEV.ACTX.ASTACRITROLE(SINVOICEV,[L]_NUM
& ,"SIH","SIV",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SINVOICEV.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SINVOICEV.SIV.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SINVOICEV.SIV.AREAD([L]_NUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SINVOICEV.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SINVOICEV.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SINVOICEV._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SINVOICEV.APARENT=null
 SINVOICEV.snapshotEnabled = 1
 SINVOICEV.setAccessorEnabled = 1
Endif
LogicClose File [SIV] ,[SIH] ,[SID] ,[CALSID] ,[SVV] ,[SVF] ,[CALSVF]
End



