#<AdxTL>@(#)0.0.0.0 $Revision$Class Customer invoices
# Supervisor
## ACLA-CLASSE ## SINVOICE_C_RATCOL
# 2018-08-27 12:46:27 924


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : LED Ledger ( Field LED 3)
####################################################################

$SET_LED
If [L]_AOLDVAL<>this.LED
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LED
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LED
 Gosub PROPAGATE_LED
Endif
Return

$INIT_LED
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "LED"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LED
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "LED"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LED                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LED                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LED
[L]CURPRO = "LED"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LED,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LED
[L]CURPRO = "LED"
If vireblc(this.LED,2)<>vireblc(format$("K:3c",this.LED),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LED
[L]CURPRO = "LED"
If vireblc(this.LED,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPLED.ACTRLREF(this,"LED",this.LED,this.LED,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.LED<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LED
[L]CURPRO = "LED"
Return

$PROPAGATE_LED
this.isReadonly = 0
[L]CURPRO = "LED"
Gosub _LNKPRO_LED
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LED
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "LED"
$_LNKPRO_LED
If vireblc(this.LED,2)<>""
 # Link GLED
 Local File GLED [WLED]
 Read [F:WLED]LED0 = this.LED
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GLED" & ZONE="SHOTRA" & IDENT1=[F:WLED]LED & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LED","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GLED" & ZONE="DESTRA" & IDENT1=[F:WLED]LED & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LED","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WLED]
Endif
Return


####################################################################
# 2 : CURLED Ledger currency ( Field CUR 3)
####################################################################

$SET_CURLED
If [L]_AOLDVAL<>this.CURLED
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CURLED
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CURLED
 Gosub PROPAGATE_CURLED
Endif
Return

$INIT_CURLED
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "CURLED"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CURLED
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "CURLED"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CURLED                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CURLED                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CURLED
[L]CURPRO = "CURLED"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CURLED,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CURLED
[L]CURPRO = "CURLED"
If vireblc(this.CURLED,2)<>vireblc(format$("K:3c",this.CURLED),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CURLED
[L]CURPRO = "CURLED"
If vireblc(this.CURLED,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CURLED",this.CURLED,this.CURLED,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CURLED<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CURLED
[L]CURPRO = "CURLED"
Return

$PROPAGATE_CURLED
this.isReadonly = 0
[L]CURPRO = "CURLED"
Gosub _LNKPRO_CURLED
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CURLED
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "CURLED"
$_LNKPRO_CURLED
If vireblc(this.CURLED,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CURLED
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CURLED","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 3 : RATMLT Multiplying rate ( Field RCU 0)
####################################################################

$SET_RATMLT
If [L]_AOLDVAL<>this.RATMLT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RATMLT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RATMLT
 Gosub PROPAGATE_RATMLT
Endif
Return

$INIT_RATMLT
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "RATMLT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RATMLT
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "RATMLT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RATMLT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RATMLT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RATMLT
[L]CURPRO = "RATMLT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RATMLT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RATMLT
[L]CURPRO = "RATMLT"
Return

$_AOTHERS_RATMLT
[L]CURPRO = "RATMLT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RATMLT
[L]CURPRO = "RATMLT"
Return

$PROPAGATE_RATMLT
this.isReadonly = 0
[L]CURPRO = "RATMLT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RATMLT
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "RATMLT"
$_LNKPRO_RATMLT
Return


####################################################################
# 4 : RATDIV Dividing rate ( Field RCU 0)
####################################################################

$SET_RATDIV
If [L]_AOLDVAL<>this.RATDIV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RATDIV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RATDIV
 Gosub PROPAGATE_RATDIV
Endif
Return

$INIT_RATDIV
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "RATDIV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RATDIV
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "RATDIV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RATDIV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RATDIV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RATDIV
[L]CURPRO = "RATDIV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RATDIV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RATDIV
[L]CURPRO = "RATDIV"
Return

$_AOTHERS_RATDIV
[L]CURPRO = "RATDIV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RATDIV
[L]CURPRO = "RATDIV"
Return

$PROPAGATE_RATDIV
this.isReadonly = 0
[L]CURPRO = "RATDIV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RATDIV
Gosub DECLARE_VAR From WMC0SINVOICE_C_RATCOL
[L]CURPRO = "RATDIV"
$_LNKPRO_RATDIV
Return




