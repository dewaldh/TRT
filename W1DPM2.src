#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management DPM2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:00:10"
A_USER  = "ADMIN"
A_STAMP = "20180828000010"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG2"
  If [M]NBLIG2=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask DPM2 [DPM2]
Gosub HORODAT
Local Inpbox "DPM2" From GFONCTION At A_STAMP With A_WINDPREV Mask [DPM2] As [SIM_]
Grizo [DPM2]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DPM2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=88 : Y1(0)=1 : Y2(0)=17
Return

$ON_NBLIG2
Onevent CONTROL Call C_NBLIG2 From W1DPM2
Onevent BEFORE_LINE Call AVANT_NBLIG2 From W1DPM2
Return

Subprog C_NBLIG2
Local Decimal BASPAG
## Action STD
Call C_NBLIG2 From SUBDPM
If mkstat : GERR = 1 : GZONE = "NBLIG2" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG2
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG2 From SUBDPM
If mkstat : End : Endif
Gosub _AFF
End

$ON_OPTTYP
Onevent BEFORE_INPUT Call AS_OPTTYP(zc) From W1DPM2
Onevent AFTER_AREA Call AP_OPTTYP(zc) From W1DPM2
Onevent AFTER_CHANGE Gosub AMM_OPTTYP From W1DPM2
Onevent INIT_AREA Call D_OPTTYP(zc) From W1DPM2
Onevent CONTROL Call C_OPTTYP(zc) From W1DPM2
Return

Subprog D_OPTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]OPTTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OPTTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3114) From COMBOS
## Action STD
Call AS_OPTTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]OPTTYP(INDIC) = VALEUR
 Affzo OPTTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3114,1))))
Endif
If !mkstat
 Discombo 0 From OPTTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From OPTTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_OPTTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "OPTTYP" : GZNUM = 34302 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_OPTTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_OPTTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "OPTTYP" : GZNUM = 34302 : Endif
Gosub _AFF
End

$AMM_OPTTYP
Call AM_OPTTYP(zc)
If !mkstat & GOBJET
 zoncou = "OPTTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_OPTTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_OPTTYP(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "OPTTYP" : GZNUM = 34302 : Endif
Gosub _AFF
End

$ON_OPTCOD
Onevent BEFORE_INPUT Call AS_OPTCOD(zc) From W1DPM2
Onevent AFTER_AREA Call AP_OPTCOD(zc) From W1DPM2
Onevent INIT_AREA Call D_OPTCOD(zc) From W1DPM2
Onevent CONTROL Call C_OPTCOD(zc) From W1DPM2
Return

Subprog D_OPTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]OPTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OPTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3116) From COMBOS
## Action STD
Call AS_OPTCOD(VALEUR) From SUBDPM
If mkstat=2
 [M]OPTCOD(INDIC) = VALEUR
 Affzo OPTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3116,1))))
Endif
If !mkstat
 Discombo 0 From OPTCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From OPTCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_OPTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_OPTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_OPTCOD(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "OPTCOD" : GZNUM = 140 : Endif
Gosub _AFF
End

$ON_OPTRAT
Onevent BEFORE_INPUT Call AS_OPTRAT(zc) From W1DPM2
Onevent CONTROL Call C_OPTRAT(zc) From W1DPM2
Return

Subprog AS_OPTRAT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_OPTRAT(VALEUR) From SUBDPM
If mkstat=2
 [M]OPTRAT(INDIC) = VALEUR
 Affzo OPTRAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_OPTRAT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_OPTRAT(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "OPTRAT" : GZNUM = 34303 : Endif
Gosub _AFF
End

$ON_STRVLYDAT
Onevent BEFORE_INPUT Call AS_STRVLYDAT(zc) From W1DPM2
Onevent AFTER_CHANGE Gosub AMM_STRVLYDAT From W1DPM2
Onevent BEFORE_AREA Gosub AV_STRVLYDAT From W1DPM2
Return

$AV_STRVLYDAT
Chgfmt [M]STRVLYDAT(indice) With "DZ:"+GFMDAT4
Gosub _AFF
Return

Subprog AS_STRVLYDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_STRVLYDAT(VALEUR) From SUBDPM
If mkstat=2
 [M]STRVLYDAT(INDIC) = VALEUR
 Affzo STRVLYDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_STRVLYDAT
Call AM_STRVLYDAT(zc)
If !mkstat & GOBJET
 zoncou = "STRVLYDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STRVLYDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_STRVLYDAT(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "STRVLYDAT" : GZNUM = 34561 : Endif
Gosub _AFF
End

$ON_ENDVLYDAT
Onevent CONTROL Call C_ENDVLYDAT(zc) From W1DPM2
Onevent BEFORE_AREA Gosub AV_ENDVLYDAT From W1DPM2
Return

$AV_ENDVLYDAT
Chgfmt [M]ENDVLYDAT(indice) With "DZ:"+GFMDAT4
Gosub _AFF
Return

Subprog C_ENDVLYDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDVLYDAT(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "ENDVLYDAT" : GZNUM = 34562 : Endif
Gosub _AFF
End

$ON_REFDATTYP
Onevent BEFORE_INPUT Call AS_REFDATTYP(zc) From W1DPM2
Onevent INIT_AREA Call D_REFDATTYP(zc) From W1DPM2
Onevent CONTROL Call C_REFDATTYP(zc) From W1DPM2
Return

Subprog D_REFDATTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]REFDATTYP,indice)=0
 VALEUR = 4
Endif
Gosub _AFF
End

Subprog AS_REFDATTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3115) From COMBOS
## Action STD
Call AS_REFDATTYP(VALEUR) From SUBDPM
If mkstat=2
 [M]REFDATTYP(INDIC) = VALEUR
 Affzo REFDATTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3115,1))))
Endif
If !mkstat
 Discombo 0 From REFDATTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From REFDATTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_REFDATTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "REFDATTYP" : GZNUM = 34306 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_DPRPLN
Onevent BEFORE_INPUT Call AS_DPRPLN(zc) From W1DPM2
Onevent AFTER_AREA Call AP_DPRPLN(zc) From W1DPM2
Onevent INIT_AREA Call D_DPRPLN(zc) From W1DPM2
Onevent CONTROL Call C_DPRPLN(zc) From W1DPM2
Return

Subprog D_DPRPLN(VALEUR)
Variable Integer VALEUR
If varinit([M]DPRPLN,indice)=0
 VALEUR = 16
Endif
Gosub _AFF
End

Subprog AS_DPRPLN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3101) From COMBOS
## Action STD
Call AS_DPRPLN(VALEUR) From SUBDPM
If mkstat=2
 [M]DPRPLN(INDIC) = VALEUR
 Affzo DPRPLN(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3101,1))))
Endif
If !mkstat
 Discombo 0 From DPRPLN(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DPRPLN(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DPRPLN(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_DPRPLN(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_DPRPLN(VALEUR) From SUBDPM
If mkstat : GERR = 1 : GZONE = "DPRPLN" : GZNUM = 33972 : Endif
Gosub _AFF
End

$CHG_STY
Return


