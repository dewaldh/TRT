#<AdxTL>@(#)0.0.0.0 $Revision$Class Products - sales
# Supervisor
## CRUD-CLASSE ## ITMSALES
# 2018-08-27 12:35:46 320


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ITMSALES [ITS_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ITMSALES") From ASYRCOM : Endif
Local Instance ITMSALES Using C_ITMSALES

If !SILENCE : Call TRACE("3 --> New Instance C_ITMSALES") From ASYRCOM : Endif
ITMSALES = NewInstance C_ITMSALES AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ITS_]ITS0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ITMSALES") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ITMSALES.AREAD([ITS_]ITMREF))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ITMSALES.ITMREF ="-num$(ITMSALES.ITMREF)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ITMSALES.AKEYS)
  Call TRACE("-"-num$(I)-":"-ITMSALES.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ITS_]
FreeGroup ITMSALES
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ITMSALES,ACLE,ASTATUS,_ETAG)
Variable Instance ITMSALES Using C_ITMSALES
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _ITMREF(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File ITMSALES [ITS]
Default File [F:ITS]
Read [F:ITS]ITS0 = [L]_ITMREF
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ITS]UPDTICK)>0
 [L]_ETAG = num$([F:ITS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ITMSALES,ACLE,ASTATUS)
Variable Instance ITMSALES Using C_ITMSALES
Value Char ACLE
Variable Integer ASTATUS
Local Char _ITMREF(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ITMSALES.AREAD([L]_ITMREF))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ITMSALES,_ITMREF,ASTATUS)
Variable Instance ITMSALES Using C_ITMSALES
Value Char _ITMREF
Variable Integer ASTATUS

If ITMSALES = null : End : Endif

Gosub AVARIABLES From WMC00ITMSALES
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ITMSALES.APARENT=null
 [L]A_I = ITMSALES.freeSnapshot
 ITMSALES.snapshotEnabled = 0
 ITMSALES.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ITMSALES.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ITMSALES._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ITMSALES.APARENT=null
 ITMSALES.snapshotEnabled = 1
 ITMSALES.setAccessorEnabled = 1
Endif
LogicClose File [ITS]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ITMSALES._ACTION_PARAM("AREAD_BEFORE",[L]_ITMREF))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:ITS]
Read [F:ITS]ITS0 = [L]_ITMREF
If fstat
[L]A_ERROR = [L]_ITMREF
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ITMSALES,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:ITS]AUUID)>0 & [F:ITS]AUUID=NullUuid
 [F:ITS]AUUID = getUuid
Endif
If dim([F:ITS]CLAITSTEX1)>0: Raz [F:ITS]CLAITSTEX1: Endif
If dim([F:ITS]CLAITPTEX1)>0: Raz [F:ITS]CLAITPTEX1: Endif
SetInstance ITMSALES With [F:ITS]
ITMSALES.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ITMSALES.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="ITMSALES" & ZONE="DES1AXX" & IDENT1=ITMSALES.ITMREF & IDENT2=""
 Call ASETTEXTRA(ITMSALES.AXX,ITMSALES.AllocGrp(),"DES1AXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 ITMSALES.AXX(maxtab(ITMSALES.AXX)).FLG = 0
Next AXX
If !len(fmet ITMSALES.AGETTEXTRA("DES1AXX"))
 Call ASETTEXTRA(ITMSALES.AXX,ITMSALES.AllocGrp(),"DES1AXX",
& fmet ITMSALES.AGETTEXTRALAN("DES1AXX",ITMSALES.ACTX.AFOLD.ALANGDEF),
& ITMSALES.ACTX.LAN) From ASYRSUB
Endif

Return



