#<AdxTL>@(#)0.0.0.0 $Revision$Class Search term list
# Supervisor
## CRUD-CLASSE ## BSISEALIS
# 2018-08-27 13:08:27 111


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BSISEALIS,ASTATUS)
Variable Instance BSISEALIS Using R_BSISEALIS
Variable Integer ASTATUS

If BSISEALIS = null : End : Endif

Gosub AVARIABLES From WMR00BSISEALIS
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BSISEALIS
Else
 Gosub AINSERT_BSISEALIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = BSISEALIS.freeSnapshot
BSISEALIS.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
BSISEALIS.ASTALIN = [V]CST_ANEW
BSISEALIS.BSILIS.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BSISEALIS.BSILIS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISEALIS.BSILIS.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
& and !find(BSISEALIS.BSILIS.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.LINES(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
& and !find(BSISEALIS.BSILIS.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.LINES(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BSISEALIS
Trbegin [F:BSILIS]
 Gosub AINSERT_BSISEALIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BSISEALIS.BSILIS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSISEALIS.BSILIS.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES)
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
  If BSISEALIS.BSILIS.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSISEALIS.BSILIS.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSISEALIS.BSILIS.LINES(A_N2)
   BSISEALIS.BSILIS.LINES(A_N2) = null
  Elsif BSISEALIS.BSILIS.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSISEALIS.BSILIS.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_BSISEALIS
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If BSISEALIS.snapshotEnabled=1
 [L]A_RETIK = BSISEALIS.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSISEALIS.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



