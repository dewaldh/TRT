#<AdxTL>@(#)0.0.0.0 $Revision$Class Transcribe import/export
# Supervisor
## CRUD-CLASSE ## AOBJEXTR
# 2018-08-27 13:02:11 442


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(AOBJEXTR,ASTATUS)
Variable Instance AOBJEXTR Using R_AOBJEXTR
Variable Integer ASTATUS

If AOBJEXTR = null : End : Endif

Gosub AVARIABLES From WMR00AOBJEXTR
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet AOBJEXTR.ACTX.AGETAFCRIGHT(AOBJEXTR,"GESAOR",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet AOBJEXTR.ACTX.AGETAFCRIGHTD(AOBJEXTR,"GESAOR",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_AOBJEXTR
Else
 Gosub ADELETE_AOBJEXTR
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
AOBJEXTR.ASTALIN = [V]CST_ADEL
AOBJEXTR.AOR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If AOBJEXTR.AOR.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AOBJEXTR.AOR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.AOR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.AOR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_AOBJEXTR
Gosub ADELETE_AOBJEXTR
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_AOBJEXTR
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.AOR._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXTR.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If AOBJEXTR.snapshotEnabled=1
 [L]A_RETIK = AOBJEXTR.revertUpdTick
Endif
[L]ASTATUS = max(fmet AOBJEXTR.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



