#<AdxTL>@(#)0.0.0.0 $Revision$Class Product category
# Supervisor
## ACLA-CLASSE ## ITMCATEG
# 2018-08-27 12:34:17 758

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : STULBEFMT Label format ( Field ARP 15)
####################################################################

$SET_STULBEFMT
If [L]_AOLDVAL<>this.STULBEFMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STULBEFMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STULBEFMT
 Gosub PROPAGATE_STULBEFMT
Endif
Return

$INIT_STULBEFMT
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STULBEFMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_STULBEFMT
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STULBEFMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STULBEFMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STULBEFMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STULBEFMT
[L]CURPRO = "STULBEFMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.STULBEFMT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STULBEFMT
[L]CURPRO = "STULBEFMT"
If vireblc(this.STULBEFMT,2)<>vireblc(format$("K:15c",this.STULBEFMT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_STULBEFMT
[L]CURPRO = "STULBEFMT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STULBEFMT
[L]CURPRO = "STULBEFMT"
Return

$PROPAGATE_STULBEFMT
this.isReadonly = 0
[L]CURPRO = "STULBEFMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STULBEFMT
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STULBEFMT"
$_LNKPRO_STULBEFMT
Return


####################################################################
# 32 : STOMGTCOD Stock management ( Field Local menu number 215)
####################################################################

$SET_STOMGTCOD
If [L]_AOLDVAL<>this.STOMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STOMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STOMGTCOD
 Gosub PROPAGATE_STOMGTCOD
Endif
Return

$INIT_STOMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STOMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.STOMGTCOD=0 and fmet this.AGETATTRIBUTE("STOMGTCOD","$isMandatory")="true"
 this.STOMGTCOD = 1
Endif
Return
 
$CONTROL_STOMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STOMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STOMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STOMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STOMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
If this.STOMGTCOD<0 or this.STOMGTCOD>len(mess(0,215,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"215 ->"-num$(this.STOMGTCOD)-mess(99,123,1)):  Return : # Local menu "215 -> Invalid option
Endif
Return

$_AOTHERS_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
Return

$PROPAGATE_STOMGTCOD
this.isReadonly = 0
[L]CURPRO = "STOMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STOMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STOMGTCOD"
$_LNKPRO_STOMGTCOD
Return


####################################################################
# 33 : STDFLG Management mode ( Field Local menu number 297)
####################################################################

$SET_STDFLG
If [L]_AOLDVAL<>this.STDFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STDFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STDFLG
 Gosub PROPAGATE_STDFLG
Endif
Return

$INIT_STDFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STDFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.STDFLG=0 and fmet this.AGETATTRIBUTE("STDFLG","$isMandatory")="true"
 this.STDFLG = 1
Endif
Return
 
$CONTROL_STDFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STDFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STDFLG
[L]CURPRO = "STDFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STDFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STDFLG
[L]CURPRO = "STDFLG"
If this.STDFLG<0 or this.STDFLG>len(mess(0,297,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"297 ->"-num$(this.STDFLG)-mess(99,123,1)):  Return : # Local menu "297 -> Invalid option
Endif
Return

$_AOTHERS_STDFLG
[L]CURPRO = "STDFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STDFLG
[L]CURPRO = "STDFLG"
Return

$PROPAGATE_STDFLG
this.isReadonly = 0
[L]CURPRO = "STDFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STDFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "STDFLG"
$_LNKPRO_STDFLG
Return


####################################################################
# 34 : NEGSTO Stock < 0 authorized ( Field Local menu number 1)
####################################################################

$SET_NEGSTO
If [L]_AOLDVAL<>this.NEGSTO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NEGSTO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NEGSTO
 Gosub PROPAGATE_NEGSTO
Endif
Return

$INIT_NEGSTO
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "NEGSTO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.NEGSTO=0 and fmet this.AGETATTRIBUTE("NEGSTO","$isMandatory")="true"
 this.NEGSTO = 1
Endif
Return
 
$CONTROL_NEGSTO
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "NEGSTO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NEGSTO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NEGSTO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NEGSTO
[L]CURPRO = "NEGSTO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NEGSTO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NEGSTO
[L]CURPRO = "NEGSTO"
If this.NEGSTO<0 or this.NEGSTO>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.NEGSTO)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_NEGSTO
[L]CURPRO = "NEGSTO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NEGSTO
[L]CURPRO = "NEGSTO"
Return

$PROPAGATE_NEGSTO
this.isReadonly = 0
[L]CURPRO = "NEGSTO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NEGSTO
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "NEGSTO"
$_LNKPRO_NEGSTO
Return


####################################################################
# 35 : LOTMGTCOD Lot management ( Field Local menu number 2711)
####################################################################

$SET_LOTMGTCOD
If [L]_AOLDVAL<>this.LOTMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOTMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOTMGTCOD
 Gosub PROPAGATE_LOTMGTCOD
Endif
Return

$INIT_LOTMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOTMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LOTMGTCOD=0 and fmet this.AGETATTRIBUTE("LOTMGTCOD","$isMandatory")="true"
 this.LOTMGTCOD = 1
Endif
Return
 
$CONTROL_LOTMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOTMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOTMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOTMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOTMGTCOD
[L]CURPRO = "LOTMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LOTMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOTMGTCOD
[L]CURPRO = "LOTMGTCOD"
If this.LOTMGTCOD<0 or this.LOTMGTCOD>len(mess(0,2711,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2711 ->"-num$(this.LOTMGTCOD)-mess(99,123,1)):  Return : # Local menu "2711 -> Invalid option
Endif
Return

$_AOTHERS_LOTMGTCOD
[L]CURPRO = "LOTMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOTMGTCOD
[L]CURPRO = "LOTMGTCOD"
Return

$PROPAGATE_LOTMGTCOD
this.isReadonly = 0
[L]CURPRO = "LOTMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOTMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOTMGTCOD"
$_LNKPRO_LOTMGTCOD
Return


####################################################################
# 36 : LOTCOU Lot sequence number ( Field ANM 5)
####################################################################

$SET_LOTCOU
If [L]_AOLDVAL<>this.LOTCOU
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOTCOU
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOTCOU
 Gosub PROPAGATE_LOTCOU
Endif
Return

$INIT_LOTCOU
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOTCOU"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LOTCOU
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOTCOU"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOTCOU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOTCOU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOTCOU
[L]CURPRO = "LOTCOU"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LOTCOU,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOTCOU
[L]CURPRO = "LOTCOU"
If vireblc(this.LOTCOU,2)<>vireblc(format$("K:5B",this.LOTCOU),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LOTCOU
[L]CURPRO = "LOTCOU"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOTCOU
[L]CURPRO = "LOTCOU"
Return

$PROPAGATE_LOTCOU
this.isReadonly = 0
[L]CURPRO = "LOTCOU"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOTCOU
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOTCOU"
$_LNKPRO_LOTCOU
Return


####################################################################
# 37 : SERMGTCOD Serial no. management ( Field Local menu number 210)
####################################################################

$SET_SERMGTCOD
If [L]_AOLDVAL<>this.SERMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SERMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SERMGTCOD
 Gosub PROPAGATE_SERMGTCOD
Endif
Return

$INIT_SERMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "SERMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SERMGTCOD=0 and fmet this.AGETATTRIBUTE("SERMGTCOD","$isMandatory")="true"
 this.SERMGTCOD = 1
Endif
Return
 
$CONTROL_SERMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "SERMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SERMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SERMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SERMGTCOD
[L]CURPRO = "SERMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SERMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SERMGTCOD
[L]CURPRO = "SERMGTCOD"
If this.SERMGTCOD<0 or this.SERMGTCOD>len(mess(0,210,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"210 ->"-num$(this.SERMGTCOD)-mess(99,123,1)):  Return : # Local menu "210 -> Invalid option
Endif
Return

$_AOTHERS_SERMGTCOD
[L]CURPRO = "SERMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SERMGTCOD
[L]CURPRO = "SERMGTCOD"
Return

$PROPAGATE_SERMGTCOD
this.isReadonly = 0
[L]CURPRO = "SERMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SERMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "SERMGTCOD"
$_LNKPRO_SERMGTCOD
Return


####################################################################
# 38 : SERCOU Serial sequence ( Field ANM 5)
####################################################################

$SET_SERCOU
If [L]_AOLDVAL<>this.SERCOU
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SERCOU
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SERCOU
 Gosub PROPAGATE_SERCOU
Endif
Return

$INIT_SERCOU
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "SERCOU"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SERCOU
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "SERCOU"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SERCOU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SERCOU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SERCOU
[L]CURPRO = "SERCOU"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SERCOU,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SERCOU
[L]CURPRO = "SERCOU"
If vireblc(this.SERCOU,2)<>vireblc(format$("K:5B",this.SERCOU),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SERCOU
[L]CURPRO = "SERCOU"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SERCOU
[L]CURPRO = "SERCOU"
Return

$PROPAGATE_SERCOU
this.isReadonly = 0
[L]CURPRO = "SERCOU"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SERCOU
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "SERCOU"
$_LNKPRO_SERCOU
Return


####################################################################
# 39 : TRKCOD Traceability ( Field Local menu number 754)
####################################################################

$SET_TRKCOD
If [L]_AOLDVAL<>this.TRKCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKCOD
 Gosub PROPAGATE_TRKCOD
Endif
Return

$INIT_TRKCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "TRKCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TRKCOD=0 and fmet this.AGETATTRIBUTE("TRKCOD","$isMandatory")="true"
 this.TRKCOD = 1
Endif
Return
 
$CONTROL_TRKCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "TRKCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKCOD
[L]CURPRO = "TRKCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKCOD
[L]CURPRO = "TRKCOD"
If this.TRKCOD<0 or this.TRKCOD>len(mess(0,754,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"754 ->"-num$(this.TRKCOD)-mess(99,123,1)):  Return : # Local menu "754 -> Invalid option
Endif
Return

$_AOTHERS_TRKCOD
[L]CURPRO = "TRKCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKCOD
[L]CURPRO = "TRKCOD"
Return

$PROPAGATE_TRKCOD
this.isReadonly = 0
[L]CURPRO = "TRKCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "TRKCOD"
$_LNKPRO_TRKCOD
Return


####################################################################
# 40 : VLTCOD Valuation method ( Field TCM 3)
####################################################################

$SET_VLTCOD
If [L]_AOLDVAL<>this.VLTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VLTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VLTCOD
 Gosub PROPAGATE_VLTCOD
Endif
Return

$INIT_VLTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "VLTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VLTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "VLTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VLTCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VLTCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VLTCOD
[L]CURPRO = "VLTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VLTCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VLTCOD
[L]CURPRO = "VLTCOD"
If vireblc(this.VLTCOD,2)<>vireblc(format$("K:3c",this.VLTCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VLTCOD
[L]CURPRO = "VLTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VLTCOD
[L]CURPRO = "VLTCOD"
Return

$PROPAGATE_VLTCOD
this.isReadonly = 0
[L]CURPRO = "VLTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VLTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "VLTCOD"
$_LNKPRO_VLTCOD
Return


####################################################################
# 41 : EXYMGTCOD Expiration management ( Field Local menu number 211)
####################################################################

$SET_EXYMGTCOD
If [L]_AOLDVAL<>this.EXYMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXYMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXYMGTCOD
 Gosub PROPAGATE_EXYMGTCOD
Endif
Return

$INIT_EXYMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "EXYMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.EXYMGTCOD=0 and fmet this.AGETATTRIBUTE("EXYMGTCOD","$isMandatory")="true"
 this.EXYMGTCOD = 1
Endif
Return
 
$CONTROL_EXYMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "EXYMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXYMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXYMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXYMGTCOD
[L]CURPRO = "EXYMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXYMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXYMGTCOD
[L]CURPRO = "EXYMGTCOD"
If this.EXYMGTCOD<0 or this.EXYMGTCOD>len(mess(0,211,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"211 ->"-num$(this.EXYMGTCOD)-mess(99,123,1)):  Return : # Local menu "211 -> Invalid option
Endif
Return

$_AOTHERS_EXYMGTCOD
[L]CURPRO = "EXYMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXYMGTCOD
[L]CURPRO = "EXYMGTCOD"
Return

$PROPAGATE_EXYMGTCOD
this.isReadonly = 0
[L]CURPRO = "EXYMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXYMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "EXYMGTCOD"
$_LNKPRO_EXYMGTCOD
Return


####################################################################
# 42 : EXYSTA Expiration status ( Field A 1)
####################################################################

$SET_EXYSTA
If [L]_AOLDVAL<>this.EXYSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXYSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXYSTA
 Gosub PROPAGATE_EXYSTA
Endif
Return

$INIT_EXYSTA
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "EXYSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXYSTA
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "EXYSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXYSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXYSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXYSTA
[L]CURPRO = "EXYSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.EXYSTA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXYSTA
[L]CURPRO = "EXYSTA"
Return

$_AOTHERS_EXYSTA
[L]CURPRO = "EXYSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXYSTA
[L]CURPRO = "EXYSTA"
Return

$PROPAGATE_EXYSTA
this.isReadonly = 0
[L]CURPRO = "EXYSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXYSTA
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "EXYSTA"
$_LNKPRO_EXYSTA
Return


####################################################################
# 43 : BRDCOD Cost group links ( Field Local menu number 325)
####################################################################

$SET_BRDCOD
If [L]_AOLDVAL<>this.BRDCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BRDCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BRDCOD
 Gosub PROPAGATE_BRDCOD
Endif
Return

$INIT_BRDCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "BRDCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BRDCOD=0 and fmet this.AGETATTRIBUTE("BRDCOD","$isMandatory")="true"
 this.BRDCOD = 1
Endif
Return
 
$CONTROL_BRDCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "BRDCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BRDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BRDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BRDCOD
[L]CURPRO = "BRDCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BRDCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BRDCOD
[L]CURPRO = "BRDCOD"
If this.BRDCOD<0 or this.BRDCOD>len(mess(0,325,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"325 ->"-num$(this.BRDCOD)-mess(99,123,1)):  Return : # Local menu "325 -> Invalid option
Endif
Return

$_AOTHERS_BRDCOD
[L]CURPRO = "BRDCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BRDCOD
[L]CURPRO = "BRDCOD"
Return

$PROPAGATE_BRDCOD
this.isReadonly = 0
[L]CURPRO = "BRDCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BRDCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "BRDCOD"
$_LNKPRO_BRDCOD
Return


####################################################################
# 44 : PLAACS Access code ( Field A 10)
####################################################################

$SET_PLAACS
If [L]_AOLDVAL<>this.PLAACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLAACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLAACS
 Gosub PROPAGATE_PLAACS
Endif
Return

$INIT_PLAACS
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PLAACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLAACS
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PLAACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLAACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLAACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLAACS
[L]CURPRO = "PLAACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLAACS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLAACS
[L]CURPRO = "PLAACS"
Return

$_AOTHERS_PLAACS
[L]CURPRO = "PLAACS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLAACS
[L]CURPRO = "PLAACS"
Return

$PROPAGATE_PLAACS
this.isReadonly = 0
[L]CURPRO = "PLAACS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLAACS
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PLAACS"
$_LNKPRO_PLAACS
Return


####################################################################
# 46 : FRTHORUOM Planning horizon time unit ( Field Local menu number 291)
####################################################################

$SET_FRTHORUOM
If [L]_AOLDVAL<>this.FRTHORUOM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FRTHORUOM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FRTHORUOM
 Gosub PROPAGATE_FRTHORUOM
Endif
Return

$INIT_FRTHORUOM
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FRTHORUOM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FRTHORUOM=0 and fmet this.AGETATTRIBUTE("FRTHORUOM","$isMandatory")="true"
 this.FRTHORUOM = 1
Endif
Return
 
$CONTROL_FRTHORUOM
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FRTHORUOM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FRTHORUOM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FRTHORUOM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FRTHORUOM
[L]CURPRO = "FRTHORUOM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FRTHORUOM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FRTHORUOM
[L]CURPRO = "FRTHORUOM"
If this.FRTHORUOM<0 or this.FRTHORUOM>len(mess(0,291,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"291 ->"-num$(this.FRTHORUOM)-mess(99,123,1)):  Return : # Local menu "291 -> Invalid option
Endif
Return

$_AOTHERS_FRTHORUOM
[L]CURPRO = "FRTHORUOM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FRTHORUOM
[L]CURPRO = "FRTHORUOM"
Return

$PROPAGATE_FRTHORUOM
this.isReadonly = 0
[L]CURPRO = "FRTHORUOM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FRTHORUOM
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FRTHORUOM"
$_LNKPRO_FRTHORUOM
Return


####################################################################
# 47 : FRTHOR Planning horizon ( Field C 4)
####################################################################

$SET_FRTHOR
If [L]_AOLDVAL<>this.FRTHOR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FRTHOR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FRTHOR
 Gosub PROPAGATE_FRTHOR
Endif
Return

$INIT_FRTHOR
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FRTHOR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FRTHOR
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FRTHOR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FRTHOR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FRTHOR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FRTHOR
[L]CURPRO = "FRTHOR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FRTHOR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FRTHOR
[L]CURPRO = "FRTHOR"
Return

$_AOTHERS_FRTHOR
[L]CURPRO = "FRTHOR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FRTHOR
[L]CURPRO = "FRTHOR"
Return

$PROPAGATE_FRTHOR
this.isReadonly = 0
[L]CURPRO = "FRTHOR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FRTHOR
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FRTHOR"
$_LNKPRO_FRTHOR
Return


####################################################################
# 48 : FIMHOR Firm horizon ( Field C 4)
####################################################################

$SET_FIMHOR
If [L]_AOLDVAL<>this.FIMHOR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FIMHOR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FIMHOR
 Gosub PROPAGATE_FIMHOR
Endif
Return

$INIT_FIMHOR
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FIMHOR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FIMHOR
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FIMHOR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FIMHOR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FIMHOR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FIMHOR
[L]CURPRO = "FIMHOR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FIMHOR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FIMHOR
[L]CURPRO = "FIMHOR"
Return

$_AOTHERS_FIMHOR
[L]CURPRO = "FIMHOR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FIMHOR
[L]CURPRO = "FIMHOR"
Return

$PROPAGATE_FIMHOR
this.isReadonly = 0
[L]CURPRO = "FIMHOR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FIMHOR
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FIMHOR"
$_LNKPRO_FIMHOR
Return


####################################################################
# 49 : FIMHORUOM Firm horizon time un ( Field Local menu number 291)
####################################################################

$SET_FIMHORUOM
If [L]_AOLDVAL<>this.FIMHORUOM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FIMHORUOM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FIMHORUOM
 Gosub PROPAGATE_FIMHORUOM
Endif
Return

$INIT_FIMHORUOM
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FIMHORUOM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FIMHORUOM=0 and fmet this.AGETATTRIBUTE("FIMHORUOM","$isMandatory")="true"
 this.FIMHORUOM = 1
Endif
Return
 
$CONTROL_FIMHORUOM
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FIMHORUOM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FIMHORUOM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FIMHORUOM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FIMHORUOM
[L]CURPRO = "FIMHORUOM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FIMHORUOM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FIMHORUOM
[L]CURPRO = "FIMHORUOM"
If this.FIMHORUOM<0 or this.FIMHORUOM>len(mess(0,291,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"291 ->"-num$(this.FIMHORUOM)-mess(99,123,1)):  Return : # Local menu "291 -> Invalid option
Endif
Return

$_AOTHERS_FIMHORUOM
[L]CURPRO = "FIMHORUOM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FIMHORUOM
[L]CURPRO = "FIMHORUOM"
Return

$PROPAGATE_FIMHORUOM
this.isReadonly = 0
[L]CURPRO = "FIMHORUOM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FIMHORUOM
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "FIMHORUOM"
$_LNKPRO_FIMHORUOM
Return


####################################################################
# 50 : OFS Reorder LT ( Field LTI 0)
####################################################################

$SET_OFS
If [L]_AOLDVAL<>this.OFS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OFS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OFS
 Gosub PROPAGATE_OFS
Endif
Return

$INIT_OFS
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "OFS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OFS
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "OFS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OFS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OFS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OFS
[L]CURPRO = "OFS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OFS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OFS
[L]CURPRO = "OFS"
Return

$_AOTHERS_OFS
[L]CURPRO = "OFS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OFS
[L]CURPRO = "OFS"
Return

$PROPAGATE_OFS
this.isReadonly = 0
[L]CURPRO = "OFS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OFS
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "OFS"
$_LNKPRO_OFS
Return


####################################################################
# 51 : BUY Buyer ( Field AUS 5)
####################################################################

$SET_BUY
If [L]_AOLDVAL<>this.BUY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BUY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BUY
 Gosub PROPAGATE_BUY
Endif
Return

$INIT_BUY
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "BUY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BUY
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "BUY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BUY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BUY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BUY
[L]CURPRO = "BUY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BUY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BUY
[L]CURPRO = "BUY"
If vireblc(this.BUY,2)<>vireblc(format$("K:5B",this.BUY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BUY
[L]CURPRO = "BUY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BUY
[L]CURPRO = "BUY"
Return

$PROPAGATE_BUY
this.isReadonly = 0
[L]CURPRO = "BUY"
Gosub _LNKPRO_BUY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BUY
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "BUY"
$_LNKPRO_BUY
If vireblc(this.BUY,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.BUY
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BUY","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BUY","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 52 : PLANNER Planner ( Field AUS 5)
####################################################################

$SET_PLANNER
If [L]_AOLDVAL<>this.PLANNER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLANNER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLANNER
 Gosub PROPAGATE_PLANNER
Endif
Return

$INIT_PLANNER
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PLANNER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLANNER
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PLANNER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLANNER
[L]CURPRO = "PLANNER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLANNER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLANNER
[L]CURPRO = "PLANNER"
If vireblc(this.PLANNER,2)<>vireblc(format$("K:5B",this.PLANNER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PLANNER
[L]CURPRO = "PLANNER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLANNER
[L]CURPRO = "PLANNER"
Return

$PROPAGATE_PLANNER
this.isReadonly = 0
[L]CURPRO = "PLANNER"
Gosub _LNKPRO_PLANNER
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLANNER
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PLANNER"
$_LNKPRO_PLANNER
If vireblc(this.PLANNER,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.PLANNER
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 53 : MINRMNPRC Delivery tolerance % ( Field RAT 0)
####################################################################

$SET_MINRMNPRC
If [L]_AOLDVAL<>this.MINRMNPRC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MINRMNPRC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MINRMNPRC
 Gosub PROPAGATE_MINRMNPRC
Endif
Return

$INIT_MINRMNPRC
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "MINRMNPRC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MINRMNPRC
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "MINRMNPRC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MINRMNPRC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MINRMNPRC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MINRMNPRC
[L]CURPRO = "MINRMNPRC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MINRMNPRC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MINRMNPRC
[L]CURPRO = "MINRMNPRC"
Return

$_AOTHERS_MINRMNPRC
[L]CURPRO = "MINRMNPRC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MINRMNPRC
[L]CURPRO = "MINRMNPRC"
Return

$PROPAGATE_MINRMNPRC
this.isReadonly = 0
[L]CURPRO = "MINRMNPRC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MINRMNPRC
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "MINRMNPRC"
$_LNKPRO_MINRMNPRC
Return


####################################################################
# 54 : RCPFLG Receipt code ( Field Local menu number 1)
####################################################################

$SET_RCPFLG
If [L]_AOLDVAL<>this.RCPFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RCPFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RCPFLG
 Gosub PROPAGATE_RCPFLG
Endif
Return

$INIT_RCPFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "RCPFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.RCPFLG=0 and fmet this.AGETATTRIBUTE("RCPFLG","$isMandatory")="true"
 this.RCPFLG = 1
Endif
Return
 
$CONTROL_RCPFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "RCPFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RCPFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RCPFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RCPFLG
[L]CURPRO = "RCPFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RCPFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RCPFLG
[L]CURPRO = "RCPFLG"
If this.RCPFLG<0 or this.RCPFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.RCPFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_RCPFLG
[L]CURPRO = "RCPFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RCPFLG
[L]CURPRO = "RCPFLG"
Return

$PROPAGATE_RCPFLG
this.isReadonly = 0
[L]CURPRO = "RCPFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RCPFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "RCPFLG"
$_LNKPRO_RCPFLG
Return


####################################################################
# 55 : PRQFLG Mandatory PO request ( Field Local menu number 1)
####################################################################

$SET_PRQFLG
If [L]_AOLDVAL<>this.PRQFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRQFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRQFLG
 Gosub PROPAGATE_PRQFLG
Endif
Return

$INIT_PRQFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PRQFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PRQFLG=0 and fmet this.AGETATTRIBUTE("PRQFLG","$isMandatory")="true"
 this.PRQFLG = 1
Endif
Return
 
$CONTROL_PRQFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PRQFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRQFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRQFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRQFLG
[L]CURPRO = "PRQFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PRQFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRQFLG
[L]CURPRO = "PRQFLG"
If this.PRQFLG<0 or this.PRQFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.PRQFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_PRQFLG
[L]CURPRO = "PRQFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRQFLG
[L]CURPRO = "PRQFLG"
Return

$PROPAGATE_PRQFLG
this.isReadonly = 0
[L]CURPRO = "PRQFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRQFLG
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "PRQFLG"
$_LNKPRO_PRQFLG
Return


####################################################################
# 56 : CFGLIN Product line ( Field TLP 5)
####################################################################

$SET_CFGLIN
If [L]_AOLDVAL<>this.CFGLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CFGLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CFGLIN
 Gosub PROPAGATE_CFGLIN
Endif
Return

$INIT_CFGLIN
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "CFGLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CFGLIN
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "CFGLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CFGLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CFGLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CFGLIN
[L]CURPRO = "CFGLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CFGLIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CFGLIN
[L]CURPRO = "CFGLIN"
If vireblc(this.CFGLIN,2)<>vireblc(format$("KTD:5c",this.CFGLIN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CFGLIN
[L]CURPRO = "CFGLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CFGLIN
[L]CURPRO = "CFGLIN"
Return

$PROPAGATE_CFGLIN
this.isReadonly = 0
[L]CURPRO = "CFGLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CFGLIN
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "CFGLIN"
$_LNKPRO_CFGLIN
Return


####################################################################
# 57 : LOCMGTCOD Location management ( Field Local menu number 1)
####################################################################

$SET_LOCMGTCOD
If [L]_AOLDVAL<>this.LOCMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOCMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOCMGTCOD
 Gosub PROPAGATE_LOCMGTCOD
Endif
Return

$INIT_LOCMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOCMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LOCMGTCOD=0 and fmet this.AGETATTRIBUTE("LOCMGTCOD","$isMandatory")="true"
 this.LOCMGTCOD = 1
Endif
Return
 
$CONTROL_LOCMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOCMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOCMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOCMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOCMGTCOD
[L]CURPRO = "LOCMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LOCMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOCMGTCOD
[L]CURPRO = "LOCMGTCOD"
If this.LOCMGTCOD<0 or this.LOCMGTCOD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.LOCMGTCOD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_LOCMGTCOD
[L]CURPRO = "LOCMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOCMGTCOD
[L]CURPRO = "LOCMGTCOD"
Return

$PROPAGATE_LOCMGTCOD
this.isReadonly = 0
[L]CURPRO = "LOCMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOCMGTCOD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "LOCMGTCOD"
$_LNKPRO_LOCMGTCOD
Return


####################################################################
# 59 : ALLRULORD Order alloc rule ( Field TRU 6)
####################################################################

$SET_ALLRULORD
If [L]_AOLDVAL<>this.ALLRULORD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLRULORD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLRULORD
 Gosub PROPAGATE_ALLRULORD
Endif
Return

$INIT_ALLRULORD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "ALLRULORD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ALLRULORD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "ALLRULORD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLRULORD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLRULORD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLRULORD
[L]CURPRO = "ALLRULORD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ALLRULORD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLRULORD
[L]CURPRO = "ALLRULORD"
If vireblc(this.ALLRULORD,2)<>vireblc(format$("K:6C",this.ALLRULORD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ALLRULORD
[L]CURPRO = "ALLRULORD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLRULORD
[L]CURPRO = "ALLRULORD"
Return

$PROPAGATE_ALLRULORD
this.isReadonly = 0
[L]CURPRO = "ALLRULORD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLRULORD
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "ALLRULORD"
$_LNKPRO_ALLRULORD
Return


####################################################################
# 60 : ALLRULMAT WO alloc rule ( Field TRU 6)
####################################################################

$SET_ALLRULMAT
If [L]_AOLDVAL<>this.ALLRULMAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLRULMAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLRULMAT
 Gosub PROPAGATE_ALLRULMAT
Endif
Return

$INIT_ALLRULMAT
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "ALLRULMAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ALLRULMAT
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "ALLRULMAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLRULMAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLRULMAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLRULMAT
[L]CURPRO = "ALLRULMAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ALLRULMAT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLRULMAT
[L]CURPRO = "ALLRULMAT"
If vireblc(this.ALLRULMAT,2)<>vireblc(format$("K:6C",this.ALLRULMAT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ALLRULMAT
[L]CURPRO = "ALLRULMAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLRULMAT
[L]CURPRO = "ALLRULMAT"
Return

$PROPAGATE_ALLRULMAT
this.isReadonly = 0
[L]CURPRO = "ALLRULMAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLRULMAT
Gosub DECLARE_VAR From WMC0ITMCATEG
[L]CURPRO = "ALLRULMAT"
$_LNKPRO_ALLRULMAT
Return




