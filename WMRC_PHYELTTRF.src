#<AdxTL>@(#)0.0.0.0 $Revision$Class Physical asset transfer
# Supervisor
## CRUD-CLASSE ## PHYELTTRF
# 2018-08-27 13:22:35 897


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(PHYELTTRF,ASTATUS)
Variable Instance PHYELTTRF Using R_PHYELTTRF
Variable Integer ASTATUS

If PHYELTTRF = null : End : Endif

Gosub AVARIABLES From WMR00PHYELTTRF
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet PHYELTTRF.ACTX.AGETAFCRIGHT(PHYELTTRF,"GESPHY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet PHYELTTRF.ACTX.AGETAFCRIGHTC(PHYELTTRF,"GESPHY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_PHYELTTRF
Else
 Gosub AINSERT_PHYELTTRF
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = PHYELTTRF.freeSnapshot
PHYELTTRF.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
PHYELTTRF.ASTALIN = [V]CST_ANEW
PHYELTTRF.PHYTRF.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PHYELTTRF._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PHYELTTRF._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PHYELTTRF._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If PHYELTTRF.PHYTRF.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PHYELTTRF.PHYTRF.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.PHYTRF.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PHYELTTRF.PHYTRF.PHYMVT) : # PHYMVT -- 2
 If PHYELTTRF.PHYTRF.PHYMVT(A_N2) <> null
& and !find(PHYELTTRF.PHYTRF.PHYMVT(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.PHYTRF.PHYMVT(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(PHYELTTRF.PHYTRF.PHYMVT) : # PHYMVT -- 2
 If PHYELTTRF.PHYTRF.PHYMVT(A_N2) <> null
& and !find(PHYELTTRF.PHYTRF.PHYMVT(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.PHYTRF.PHYMVT(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.PHYTRF.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_PHYELTTRF
Trbegin [F:PHY]
 Gosub AINSERT_PHYELTTRF
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(PHYELTTRF.PHYTRF.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PHYELTTRF.PHYTRF.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PHYELTTRF.PHYTRF.PHYMVT)
 If PHYELTTRF.PHYTRF.PHYMVT(A_N2) <> null
  [L]ASTATUS2 = fmet PHYELTTRF.PHYTRF.PHYMVT(A_N2)._AINSERT_AFTER
  If PHYELTTRF.PHYTRF.PHYMVT(A_N2).ASTALIN=[V]CST_ADEL or PHYELTTRF.PHYTRF.PHYMVT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PHYELTTRF.PHYTRF.PHYMVT(A_N2)
   PHYELTTRF.PHYTRF.PHYMVT(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_PHYELTTRF
[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.PHYTRF._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PHYELTTRF.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If PHYELTTRF.snapshotEnabled=1
 [L]A_RETIK = PHYELTTRF.revertUpdTick
Endif
[L]ASTATUS = max(fmet PHYELTTRF.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



