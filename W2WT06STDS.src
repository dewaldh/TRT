#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT06STDS 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_ZERSTOFLG2
Onevent BEFORE_AREA Gosub AV_ZERSTOFLG2 From W2WT06STDS
Onevent BEFORE_INPUT Call AS_ZERSTOFLG2(zc) From W2WT06STDS
Onevent CONTROL Call C_ZERSTOFLG2(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_ZERSTOFLG2 From W2WT06STDS
Onevent INIT_AREA Call D_ZERSTOFLG2(zc) From W2WT06STDS
Return

$AV_ZERSTOFLG2
## Action STD
Call AV_ZERSTOFLG2(zc) From TRTSNLINV
If GWSINVZER<>""
 Chgfmt [M]ZERSTOFLG2(indice) With GWSINVZER
Else
 Chgfmt [M]ZERSTOFLG2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_ZERSTOFLG2(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERSTOFLG2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ZERSTOFLG2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("ZERSTOFLG2",nolign-1) From STKINV
If mkstat=2
 [M]ZERSTOFLG2(INDIC) = VALEUR
 Affzo ZERSTOFLG2(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_ZERSTOFLG2(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]ZERSTOFLG2(INDIC) = VALEUR
  Affzo ZERSTOFLG2(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

Subprog C_ZERSTOFLG2(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ZERSTOFLG2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "ZERSTOFLG2" : GZNUM = 54234 : Endif
Gosub _AFF
End

$AMM_ZERSTOFLG2
Call AM_ZERSTOFLG2(zc)
If !mkstat & GOBJET
 zoncou = "ZERSTOFLG2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ZERSTOFLG2(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ZERSTOFLG2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "ZERSTOFLG2" : GZNUM = 54234 : Endif
Gosub _AFF
End

$ON_QTYPCUNEW
Onevent BEFORE_AREA Gosub AV_QTYPCUNEW From W2WT06STDS
Onevent BEFORE_INPUT Call AS_QTYPCUNEW(zc) From W2WT06STDS
Onevent AFTER_AREA Call AP_QTYPCUNEW(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_QTYPCUNEW From W2WT06STDS
Return

$AV_QTYPCUNEW
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCUNEW(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTYPCUNEW(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("QTYPCUNEW",nolign-1) From STKINV
If mkstat=2
 [M]QTYPCUNEW(INDIC) = VALEUR
 Affzo QTYPCUNEW(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTYPCUNEW(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]QTYPCUNEW(INDIC) = VALEUR
  Affzo QTYPCUNEW(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog AP_QTYPCUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_QTYPCUNEW(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW" : GZNUM = 9839 : Endif
Gosub _AFF
End

$AMM_QTYPCUNEW
Call AM_QTYPCUNEW(zc)
If !mkstat & GOBJET
 zoncou = "QTYPCUNEW" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYPCUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYPCUNEW(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW" : GZNUM = 9839 : Endif
Gosub _AFF
End

$ON_PCUSTUNEW
Onevent BEFORE_INPUT Call AS_PCUSTUNEW(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_PCUSTUNEW From W2WT06STDS
Return

Subprog AS_PCUSTUNEW(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("PCUSTUNEW",nolign-1) From STKINV
If mkstat=2
 [M]PCUSTUNEW(INDIC) = VALEUR
 Affzo PCUSTUNEW(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_PCUSTUNEW(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]PCUSTUNEW(INDIC) = VALEUR
  Affzo PCUSTUNEW(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

$AMM_PCUSTUNEW
Call AM_PCUSTUNEW(zc)
If !mkstat & GOBJET
 zoncou = "PCUSTUNEW" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCUSTUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PCUSTUNEW(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "PCUSTUNEW" : GZNUM = 27329 : Endif
Gosub _AFF
End

$ON_QTYSTUNEW
Onevent BEFORE_AREA Gosub AV_QTYSTUNEW From W2WT06STDS
Onevent BEFORE_INPUT Call AS_QTYSTUNEW(zc) From W2WT06STDS
Onevent CONTROL Call C_QTYSTUNEW(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_QTYSTUNEW From W2WT06STDS
Return

$AV_QTYSTUNEW
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTUNEW(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTYSTUNEW(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("QTYSTUNEW",nolign-1) From STKINV
If mkstat=2
 [M]QTYSTUNEW(INDIC) = VALEUR
 Affzo QTYSTUNEW(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTYSTUNEW(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]QTYSTUNEW(INDIC) = VALEUR
  Affzo QTYSTUNEW(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_QTYSTUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYSTUNEW(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYSTUNEW" : GZNUM = 8162 : Endif
Gosub _AFF
End

$AMM_QTYSTUNEW
Call AM_QTYSTUNEW(zc)
If !mkstat & GOBJET
 zoncou = "QTYSTUNEW" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYSTUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYSTUNEW(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYSTUNEW" : GZNUM = 8162 : Endif
Gosub _AFF
End

$ON_ZERSTOFLG
Onevent BEFORE_AREA Gosub AV_ZERSTOFLG From W2WT06STDS
Onevent BEFORE_INPUT Call AS_ZERSTOFLG(zc) From W2WT06STDS
Onevent CONTROL Call C_ZERSTOFLG(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_ZERSTOFLG From W2WT06STDS
Onevent INIT_AREA Call D_ZERSTOFLG(zc) From W2WT06STDS
Return

$AV_ZERSTOFLG
## Action STD
Call AV_ZERSTOFLG(zc) From TRTSNLINV
Gosub _AFF
Return

Subprog D_ZERSTOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERSTOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ZERSTOFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL
Call PASSAISNL("ZERSTOFLG",nolign-1) From STKINV
If mkstat=2
 [M]ZERSTOFLG(INDIC) = VALEUR
 Affzo ZERSTOFLG(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_ZERSTOFLG(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]ZERSTOFLG(INDIC) = VALEUR
  Affzo ZERSTOFLG(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

Subprog C_ZERSTOFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ZERSTOFLG(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "ZERSTOFLG" : GZNUM = 9708 : Endif
Gosub _AFF
End

$AMM_ZERSTOFLG
Call AM_ZERSTOFLG(zc)
If !mkstat & GOBJET
 zoncou = "ZERSTOFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ZERSTOFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ZERSTOFLG(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "ZERSTOFLG" : GZNUM = 9708 : Endif
Gosub _AFF
End

$ON_CUMALLQTY
Onevent BEFORE_AREA Gosub AV_CUMALLQTY From W2WT06STDS
Return

$AV_CUMALLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]CUMALLQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_SERNUM
Onevent BEFORE_INPUT Call AS_SERNUM(zc) From W2WT06STDS
Onevent CONTROL Call C_SERNUM(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_SERNUM From W2WT06STDS
Onevent BEFORE_AREA Gosub AV_SERNUM From W2WT06STDS
Return

$AV_SERNUM
If GWSINVSER<>""
 Chgfmt [M]SERNUM(indice) With GWSINVSER
Else
 Chgfmt [M]SERNUM(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_SERNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("SERNUM",nolign-1) From STKINV
If mkstat=2
 [M]SERNUM(INDIC) = VALEUR
 Affzo SERNUM(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_SERNUM(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]SERNUM(INDIC) = VALEUR
  Affzo SERNUM(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SERNUM(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 3206 : Endif
Gosub _AFF
End

$AMM_SERNUM
Call AM_SERNUM(zc)
If !mkstat & GOBJET
 zoncou = "SERNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SERNUM(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 3206 : Endif
Gosub _AFF
End

$ON_PRIORD
Onevent BEFORE_AREA Gosub AV_PRIORD From W2WT06STDS
Onevent BEFORE_INPUT Call AS_PRIORD(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_PRIORD From W2WT06STDS
Return

$AV_PRIORD
## Action PARDEV
Gosub _AFF
Return

Subprog AS_PRIORD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PRIORD(VALEUR) From TRTSNLINV
If mkstat=2
 [M]PRIORD(INDIC) = VALEUR
 Affzo PRIORD(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_PRIORD
Call AM_PRIORD(zc)
If !mkstat & GOBJET
 zoncou = "PRIORD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PRIORD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PRIORD(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "PRIORD" : GZNUM = 19816 : Endif
Gosub _AFF
End

$ON_QTYSTUDEV
Onevent BEFORE_AREA Gosub AV_QTYSTUDEV From W2WT06STDS
Return

$AV_QTYSTUDEV
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
## Action STD
Call AV_QTYSTUDEV(zc) From TRTSNLINV
Chgfmt [M]QTYSTUDEV(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PRCDEV
Onevent BEFORE_AREA Gosub AV_PRCDEV From W2WT06STDS
Return

$AV_PRCDEV
## Action STD
Call AV_PRCDEV(zc) From TRTSNLINV
Gosub _AFF
Return

$ON_CUNCST
Onevent BEFORE_AREA Gosub AV_CUNCST From W2WT06STDS
Return

$AV_CUNCST
## Action PARDEV
Gosub _AFF
Return

$ON_CUNAMT
Onevent BEFORE_AREA Gosub AV_CUNAMT From W2WT06STDS
Return

$AV_CUNAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(GLOCALDEV,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]CUNAMT(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUNAMTNEW
Onevent BEFORE_AREA Gosub AV_CUNAMTNEW From W2WT06STDS
Return

$AV_CUNAMTNEW
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(GLOCALDEV,GDEVISE(1..GNBDEV)),1))
## Action STD
Call AV_CUNAMTNEW(zc) From TRTSNLINV
Chgfmt [M]CUNAMTNEW(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUNLOKFLG
Onevent INIT_AREA Call D_CUNLOKFLG(zc) From W2WT06STDS
Return

Subprog D_CUNLOKFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CUNLOKFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEPRAT
Onevent BEFORE_INPUT Call AS_DEPRAT(zc) From W2WT06STDS
Return

Subprog AS_DEPRAT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("DEPRAT",nolign-1) From STKINV
If mkstat=2
 [M]DEPRAT(INDIC) = VALEUR
 Affzo DEPRAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DEPAMT
Onevent BEFORE_AREA Gosub AV_DEPAMT From W2WT06STDS
Onevent BEFORE_INPUT Call AS_DEPAMT(zc) From W2WT06STDS
Return

$AV_DEPAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(GLOCALDEV,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]DEPAMT(indice) With "Nz3:"+GDEVFMT
Gosub _AFF
Return

Subprog AS_DEPAMT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("DEPAMT",nolign-1) From STKINV
If mkstat=2
 [M]DEPAMT(INDIC) = VALEUR
 Affzo DEPAMT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_PALNUM
Onevent BEFORE_INPUT Call AS_PALNUM(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_PALNUM From W2WT06STDS
Return

Subprog AS_PALNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("PALNUM",nolign-1) From STKINV
If mkstat=2
 [M]PALNUM(INDIC) = VALEUR
 Affzo PALNUM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_PALNUM
Call AM_PALNUM(zc)
If !mkstat & GOBJET
 zoncou = "PALNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PALNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PALNUM(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "PALNUM" : GZNUM = 12284 : Endif
Gosub _AFF
End

$ON_CTRNUM
Onevent BEFORE_INPUT Call AS_CTRNUM(zc) From W2WT06STDS
Onevent CONTROL Call C_CTRNUM(zc) From W2WT06STDS
Onevent AFTER_CHANGE Gosub AMM_CTRNUM From W2WT06STDS
Return

Subprog AS_CTRNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("CTRNUM",nolign-1) From STKINV
If mkstat=2
 [M]CTRNUM(INDIC) = VALEUR
 Affzo CTRNUM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_CTRNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CTRNUM(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "CTRNUM" : GZNUM = 12286 : Endif
Gosub _AFF
End

$AMM_CTRNUM
Call AM_CTRNUM(zc)
If !mkstat & GOBJET
 zoncou = "CTRNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CTRNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CTRNUM(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "CTRNUM" : GZNUM = 12286 : Endif
Gosub _AFF
End

$ON_STOFLD1
Onevent BEFORE_INPUT Call AS_STOFLD1(zc) From W2WT06STDS
Return

Subprog AS_STOFLD1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("STOFLD1",nolign-1) From STKINV
If mkstat=2
 [M]STOFLD1(INDIC) = VALEUR
 Affzo STOFLD1(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_STOFLD2
Onevent BEFORE_INPUT Call AS_STOFLD2(zc) From W2WT06STDS
Return

Subprog AS_STOFLD2(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("STOFLD2",nolign-1) From STKINV
If mkstat=2
 [M]STOFLD2(INDIC) = VALEUR
 Affzo STOFLD2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_OWNER
Return

$ON_QLYCTLDEM
Return

$ON_LINFLG
Onevent INIT_AREA Call D_LINFLG(zc) From W2WT06STDS
Return

Subprog D_LINFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]LINFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MODFLG
Onevent INIT_AREA Call D_MODFLG(zc) From W2WT06STDS
Return

Subprog D_MODFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MODFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STLFLG
Onevent INIT_AREA Call D_STLFLG(zc) From W2WT06STDS
Return

Subprog D_STLFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]STLFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMREF_IMP
Return

$ON_ABCCLS_IMP
Onevent INIT_AREA Call D_ABCCLS_IMP(zc) From W2WT06STDS
Return

Subprog D_ABCCLS_IMP(VALEUR)
Variable Integer VALEUR
If varinit([M]ABCCLS_IMP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTMGT_IMP
Onevent INIT_AREA Call D_LOTMGT_IMP(zc) From W2WT06STDS
Return

Subprog D_LOTMGT_IMP(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTMGT_IMP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SHLLTIUOM
Onevent INIT_AREA Call D_SHLLTIUOM(zc) From W2WT06STDS
Return

Subprog D_SHLLTIUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]SHLLTIUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SHLUOM
Onevent INIT_AREA Call D_SHLUOM(zc) From W2WT06STDS
Return

Subprog D_SHLUOM(VALEUR)
Variable Integer VALEUR
If varinit([M]SHLUOM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


