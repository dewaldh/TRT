#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PVALPOQ 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:10:02"
A_USER  = "ADMIN"
A_STAMP = "20180828001002"
Return

$TITRES
Chgtzn [M:PVQ1]DISCRGAMT1 With [M:PVQ1]LIB1
Chgtzn [M:PVQ1]DISCRGAMT2 With [M:PVQ1]LIB2
Chgtzn [M:PVQ1]DISCRGAMT3 With [M:PVQ1]LIB3
Chgtzn [M:PVQ1]DISCRGAMT4 With [M:PVQ1]LIB4
Chgtzn [M:PVQ1]DISCRGAMT5 With [M:PVQ1]LIB5
Chgtzn [M:PVQ1]DISCRGAMT6 With [M:PVQ1]LIB6
Chgtzn [M:PVQ1]DISCRGAMT7 With [M:PVQ1]LIB7
Chgtzn [M:PVQ1]DISCRGAMT8 With [M:PVQ1]LIB8
Chgtzn [M:PVQ1]DISCRGAMT9 With [M:PVQ1]LIB9
Return

$CHG_FMT
Case zoncou
 When "NBREM"
  If [M]NBREM=0
   If [M]FMTREM(nolign-1)<>""
    Chgfmt DISCRGVAL With [M]FMTREM(nolign-1)
   Else
    Chgfmt DISCRGVAL With "-K:1X"
   Endif
  Endif
 When "NBTAX"
  If [M]NBTAX=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PVALPOQ [PVQ1]
Gosub HORODAT
Local Inpbox "PVALPOQ" From GFONCTION At A_STAMP With A_WINDPREV Mask [PVQ1] As [SIM_]
Grizo [PVQ1]5
Grizo [PVQ1]10
Grizo [PVQ1]20
Grizo [PVQ1]25
Grizo [PVQ1]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PVQ1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=17 : X2(0)=96 : Y1(0)=1 : Y2(0)=4
X1(1)=17 : X2(1)=96 : Y1(1)=5 : Y2(1)=12
X1(2)=17 : X2(2)=96 : Y1(2)=13 : Y2(2)=16
X1(3)=17 : X2(3)=96 : Y1(3)=17 : Y2(3)=20
X1(4)=17 : X2(4)=96 : Y1(4)=21 : Y2(4)=27
Return

$ON_ITMREF
Return

$ON_QTYUOM
Onevent BEFORE_AREA Gosub AV_QTYUOM From W1PVALPOQ
Return

$AV_QTYUOM
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]UOM,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYUOM(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_UOM
Return

$ON_NETPRI
Onevent BEFORE_AREA Gosub AV_NETPRI From W1PVALPOQ
Return

$AV_NETPRI
If !GWEBSERV
 ## Action PARDEV
Endif
Gosub _AFF
Return

$ON_CUR
Return

$ON_LINAMT
Onevent BEFORE_AREA Gosub AV_LINAMT From W1PVALPOQ
Return

$AV_LINAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]LINAMT(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUR2
Return

$ON_LINATIAMT
Onevent BEFORE_AREA Gosub AV_LINATIAMT From W1PVALPOQ
Return

$AV_LINATIAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]LINATIAMT(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUR3
Return

$ON_DISCRGLIB
Onevent INIT_AREA Call D_DISCRGLIB(zc) From W1PVALPOQ
Return

Subprog D_DISCRGLIB(VALEUR)
Variable Char    VALEUR()
If varinit([M]DISCRGLIB,indice)=0
 VALEUR = GCOLREM(nolign-1)
Endif
Gosub _AFF
End

$ON_DISCRGVAL
Onevent BEFORE_AREA Gosub AV_DISCRGVAL From W1PVALPOQ
Return

$AV_DISCRGVAL
If [M]FMTREM(nolign-1)<>""
 Chgfmt [M]DISCRGVAL(indice) With [M]FMTREM(nolign-1)
Else
 Chgfmt [M]DISCRGVAL(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGTYP
Return

$ON_DISCRGDES
Onevent BEFORE_AREA Gosub AV_DISCRGDES From W1PVALPOQ
Return

$AV_DISCRGDES
## Action PLECREN
Call LECREN(zc,evalue("DISCRGREN"+num$(nolign)),6) From TRTPRICE
Gosub _AFF
Return

$ON_DISCRGAMT1
Onevent BEFORE_AREA Gosub AV_DISCRGAMT1 From W1PVALPOQ
Return

$AV_DISCRGAMT1
If func SUBPVQ.FMT(1)<>""
 Chgfmt [M]DISCRGAMT1(indice) With func SUBPVQ.FMT(1)
Else
 Chgfmt [M]DISCRGAMT1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT2
Onevent BEFORE_AREA Gosub AV_DISCRGAMT2 From W1PVALPOQ
Return

$AV_DISCRGAMT2
If func SUBPVQ.FMT(2)<>""
 Chgfmt [M]DISCRGAMT2(indice) With func SUBPVQ.FMT(2)
Else
 Chgfmt [M]DISCRGAMT2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT3
Onevent BEFORE_AREA Gosub AV_DISCRGAMT3 From W1PVALPOQ
Return

$AV_DISCRGAMT3
If func SUBPVQ.FMT(3)<>""
 Chgfmt [M]DISCRGAMT3(indice) With func SUBPVQ.FMT(3)
Else
 Chgfmt [M]DISCRGAMT3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT4
Onevent BEFORE_AREA Gosub AV_DISCRGAMT4 From W1PVALPOQ
Return

$AV_DISCRGAMT4
If func SUBPVQ.FMT(4)<>""
 Chgfmt [M]DISCRGAMT4(indice) With func SUBPVQ.FMT(4)
Else
 Chgfmt [M]DISCRGAMT4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT5
Onevent BEFORE_AREA Gosub AV_DISCRGAMT5 From W1PVALPOQ
Return

$AV_DISCRGAMT5
If func SUBPVQ.FMT(5)<>""
 Chgfmt [M]DISCRGAMT5(indice) With func SUBPVQ.FMT(5)
Else
 Chgfmt [M]DISCRGAMT5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT6
Onevent BEFORE_AREA Gosub AV_DISCRGAMT6 From W1PVALPOQ
Return

$AV_DISCRGAMT6
If func SUBPVQ.FMT(6)<>""
 Chgfmt [M]DISCRGAMT6(indice) With func SUBPVQ.FMT(6)
Else
 Chgfmt [M]DISCRGAMT6(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT7
Onevent BEFORE_AREA Gosub AV_DISCRGAMT7 From W1PVALPOQ
Return

$AV_DISCRGAMT7
If func SUBPVQ.FMT(7)<>""
 Chgfmt [M]DISCRGAMT7(indice) With func SUBPVQ.FMT(7)
Else
 Chgfmt [M]DISCRGAMT7(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT8
Onevent BEFORE_AREA Gosub AV_DISCRGAMT8 From W1PVALPOQ
Return

$AV_DISCRGAMT8
If func SUBPVQ.FMT(8)<>""
 Chgfmt [M]DISCRGAMT8(indice) With func SUBPVQ.FMT(8)
Else
 Chgfmt [M]DISCRGAMT8(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISCRGAMT9
Onevent BEFORE_AREA Gosub AV_DISCRGAMT9 From W1PVALPOQ
Return

$AV_DISCRGAMT9
If func SUBPVQ.FMT(9)<>""
 Chgfmt [M]DISCRGAMT9(indice) With func SUBPVQ.FMT(9)
Else
 Chgfmt [M]DISCRGAMT9(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_BASTAXLIN1
Onevent BEFORE_AREA Gosub AV_BASTAXLIN1 From W1PVALPOQ
Return

$AV_BASTAXLIN1
If func SUBPVQ.FMT(0)<>""
 Chgfmt [M]BASTAXLIN1(indice) With func SUBPVQ.FMT(0)
Else
 Chgfmt [M]BASTAXLIN1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_DISBASLIN1
Onevent BEFORE_AREA Gosub AV_DISBASLIN1 From W1PVALPOQ
Return

$AV_DISBASLIN1
If func SUBPVQ.FMT(0)<>""
 Chgfmt [M]DISBASLIN1(indice) With func SUBPVQ.FMT(0)
Else
 Chgfmt [M]DISBASLIN1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_CLCAMT1
Onevent BEFORE_AREA Gosub AV_CLCAMT1 From W1PVALPOQ
Return

$AV_CLCAMT1
If func SUBPVQ.FMT(0)<>""
 Chgfmt [M]CLCAMT1(indice) With func SUBPVQ.FMT(0)
Else
 Chgfmt [M]CLCAMT1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_CLCAMT2
Onevent BEFORE_AREA Gosub AV_CLCAMT2 From W1PVALPOQ
Return

$AV_CLCAMT2
If func SUBPVQ.FMT(0)<>""
 Chgfmt [M]CLCAMT2(indice) With func SUBPVQ.FMT(0)
Else
 Chgfmt [M]CLCAMT2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_CLCAMT3
Onevent BEFORE_AREA Gosub AV_CLCAMT3 From W1PVALPOQ
Return

$AV_CLCAMT3
If func SUBPVQ.FMT(0)<>""
 Chgfmt [M]CLCAMT3(indice) With func SUBPVQ.FMT(0)
Else
 Chgfmt [M]CLCAMT3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_CLCAMT4
Onevent BEFORE_AREA Gosub AV_CLCAMT4 From W1PVALPOQ
Return

$AV_CLCAMT4
If func SUBPVQ.FMT(0)<>""
 Chgfmt [M]CLCAMT4(indice) With func SUBPVQ.FMT(0)
Else
 Chgfmt [M]CLCAMT4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2PVALPOQ
Return

$TIT_COL
Gosub TIT_COL From W2PVALPOQ
Return


