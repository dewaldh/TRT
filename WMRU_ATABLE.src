#<AdxTL>@(#)0.0.0.0 $Revision$Class Data dictionary
# Supervisor
## CRUD-CLASSE ## ATABLE
# 2018-08-27 13:03:15 084


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(ATABLE,ASTATUS)
Variable Instance ATABLE Using R_ATABLE
Variable Integer ASTATUS

If ATABLE = null : End : Endif

Gosub AVARIABLES From WMR00ATABLE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet ATABLE.ACTX.AGETAFCRIGHT(ATABLE,"GESATB",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet ATABLE.ACTX.AGETAFCRIGHTU(ATABLE,"GESATB",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_ATABLE
Else
 Gosub AUPDATE_ATABLE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = ATABLE.freeSnapshot
ATABLE.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
ATABLE.ASTALIN = [V]CST_AUPD
ATABLE.ATB.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = ATABLE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATABLE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATABLE._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATABLE._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATABLE._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If ATABLE.ATB.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATABLE.ATB.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(ATABLE.ATB.ASTALIN)<>""
 [L]A_ASTALIN = ATABLE.ATB.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATZ) : # ATABZON -- 2
 If ATABLE.ATB.ATZ(A_N2) <> null
& and ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEW & ATABLE.ATB.ASTALIN=[V]CST_ADEL
   ATABLE.ATB.ATZ(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If ATABLE.ATB.ATZ(A_N2).ASTALIN=[V]CST_ANEW & find(ATABLE.ATB.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   ATABLE.ATB.ATZ(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(ATABLE.ATB.ATZ(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = ATABLE.ATB.ATZ(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 For A_N3=1 To maxtab(ATABLE.ATB.ATZ(A_N2).AMP) : # AMSKPAR -- 5
  If ATABLE.ATB.ATZ(A_N2).AMP(A_N3) <> null
& and ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN<>[V]CST_ANEWDEL
   If ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN<>[V]CST_ANEW & ATABLE.ATB.ATZ(A_N2).ASTALIN=[V]CST_ADEL
    ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN = [V]CST_ADEL
   Endif
   If ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN=[V]CST_ANEW & find(ATABLE.ATB.ATZ(A_N2).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
    ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN = [V]CST_ANEWDEL
   Endif
   If [V]CST_ASTALIN(ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN)<>""
    [L]A_ASTALIN = ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN
    [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
For A_N2=1 to maxtab(ATABLE.ATB.ATZ)
 If ATABLE.ATB.ATZ(A_N2)<>null
  If ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ADEL & ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEWDEL
   [L]A_OK1 = 1 : Break
  Endif
 Endif
Next
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATABLE.ATB,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"ATABZON:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATI) : # ATABIND -- 3
 If ATABLE.ATB.ATI(A_N2) <> null
& and ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEW & ATABLE.ATB.ASTALIN=[V]CST_ADEL
   ATABLE.ATB.ATI(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If ATABLE.ATB.ATI(A_N2).ASTALIN=[V]CST_ANEW & find(ATABLE.ATB.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   ATABLE.ATB.ATI(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(ATABLE.ATB.ATI(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = ATABLE.ATB.ATI(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATI(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
For A_N2=1 to maxtab(ATABLE.ATB.ATI)
 If ATABLE.ATB.ATI(A_N2)<>null
  If ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ADEL & ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEWDEL
   [L]A_OK1 = 1 : Break
  Endif
 Endif
Next
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATABLE.ATB,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"ATABIND:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATA) : # ATABAUD -- 4
 If ATABLE.ATB.ATA(A_N2) <> null
& and ATABLE.ATB.ATA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABLE.ATB.ATA(A_N2).ASTALIN<>[V]CST_ANEW & ATABLE.ATB.ASTALIN=[V]CST_ADEL
   ATABLE.ATB.ATA(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If ATABLE.ATB.ATA(A_N2).ASTALIN=[V]CST_ANEW & find(ATABLE.ATB.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   ATABLE.ATB.ATA(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(ATABLE.ATB.ATA(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = ATABLE.ATB.ATA(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATA(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(ATABLE.ATB.ATZ) : # ATABZON -- 2
 If ATABLE.ATB.ATZ(A_N2) <> null
& and ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(ATABLE.ATB.ATZ(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = ATABLE.ATB.ATZ(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 For A_N3=1 To maxtab(ATABLE.ATB.ATZ(A_N2).AMP) : # AMSKPAR -- 5
  If ATABLE.ATB.ATZ(A_N2).AMP(A_N3) <> null
& and ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN<>[V]CST_ANEWDEL
   If [V]CST_ASTALIN(ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN)<>""
    [L]A_ASTALIN = ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN
    [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
For A_N2=1 to maxtab(ATABLE.ATB.ATZ)
 If ATABLE.ATB.ATZ(A_N2)<>null
  If ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ADEL & ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEWDEL
   [L]A_OK1 = 1 : Break
  Endif
 Endif
Next
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATABLE.ATB,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"ATABZON:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATI) : # ATABIND -- 3
 If ATABLE.ATB.ATI(A_N2) <> null
& and ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(ATABLE.ATB.ATI(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = ATABLE.ATB.ATI(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATI(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
For A_N2=1 to maxtab(ATABLE.ATB.ATI)
 If ATABLE.ATB.ATI(A_N2)<>null
  If ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ADEL & ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEWDEL
   [L]A_OK1 = 1 : Break
  Endif
 Endif
Next
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATABLE.ATB,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"ATABIND:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATA) : # ATABAUD -- 4
 If ATABLE.ATB.ATA(A_N2) <> null
& and ATABLE.ATB.ATA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(ATABLE.ATB.ATA(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = ATABLE.ATB.ATA(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATA(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(ATABLE.ATB.ASTALIN)<>""
 [L]A_ASTALIN = ATABLE.ATB.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_ATABLE
Trbegin [F:ATB]
 Gosub AUPDATE_ATABLE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(ATABLE.ATB.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATABLE.ATB.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABLE.ATB.ATZ)
 If ATABLE.ATB.ATZ(A_N2) <> null
  Local Integer ASTATUS2
  For A_N3=1 To maxtab(ATABLE.ATB.ATZ(A_N2).AMP)
   If ATABLE.ATB.ATZ(A_N2).AMP(A_N3) <> null
    If ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN=[V]CST_ADEL or ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN=[V]CST_ANEWDEL
     FreeInstance ATABLE.ATB.ATZ(A_N2).AMP(A_N3)
     ATABLE.ATB.ATZ(A_N2).AMP(A_N3) = null
    Elsif ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN <> [V]CST_ALL
     ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN = [V]CST_ALL
    Endif
    [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
   Endif
  Next A_N3
  If ATABLE.ATB.ATZ(A_N2).ASTALIN=[V]CST_ADEL or ATABLE.ATB.ATZ(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABLE.ATB.ATZ(A_N2)
   ATABLE.ATB.ATZ(A_N2) = null
  Elsif ATABLE.ATB.ATZ(A_N2).ASTALIN <> [V]CST_ALL
   ATABLE.ATB.ATZ(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABLE.ATB.ATI)
 If ATABLE.ATB.ATI(A_N2) <> null
  If ATABLE.ATB.ATI(A_N2).ASTALIN=[V]CST_ADEL or ATABLE.ATB.ATI(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABLE.ATB.ATI(A_N2)
   ATABLE.ATB.ATI(A_N2) = null
  Elsif ATABLE.ATB.ATI(A_N2).ASTALIN <> [V]CST_ALL
   ATABLE.ATB.ATI(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABLE.ATB.ATA)
 If ATABLE.ATB.ATA(A_N2) <> null
  If ATABLE.ATB.ATA(A_N2).ASTALIN=[V]CST_ADEL or ATABLE.ATB.ATA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABLE.ATB.ATA(A_N2)
   ATABLE.ATB.ATA(A_N2) = null
  Elsif ATABLE.ATB.ATA(A_N2).ASTALIN <> [V]CST_ALL
   ATABLE.ATB.ATA(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_ATABLE
[L]A_ASTALIN = ATABLE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATABLE.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If ATABLE.snapshotEnabled=1
 [L]A_RETIK = ATABLE.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABLE.ATB.ATZ)
 If ATABLE.ATB.ATZ(A_N2) <> null
  Local Integer ASTATUS2
  For A_N3=1 To maxtab(ATABLE.ATB.ATZ(A_N2).AMP)
   If ATABLE.ATB.ATZ(A_N2).AMP(A_N3) <> null
    If ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN=[V]CST_ANEWDEL
     ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN = [V]CST_ANEW
    Endif
    [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
   Endif
  Next A_N3
  If ATABLE.ATB.ATZ(A_N2).ASTALIN=[V]CST_ANEWDEL
   ATABLE.ATB.ATZ(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABLE.ATB.ATI)
 If ATABLE.ATB.ATI(A_N2) <> null
  If ATABLE.ATB.ATI(A_N2).ASTALIN=[V]CST_ANEWDEL
   ATABLE.ATB.ATI(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABLE.ATB.ATA)
 If ATABLE.ATB.ATA(A_N2) <> null
  If ATABLE.ATB.ATA(A_N2).ASTALIN=[V]CST_ANEWDEL
   ATABLE.ATB.ATA(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet ATABLE.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



