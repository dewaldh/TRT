#<AdxTL>@(#)0.0.0.0 $Revision$Class Work orders - products
# Sage X3 supervisor
## ACLA-CLASSE ## MFGITM
# 2018-03-26 00:32:58 232

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : VCRTYPORI Source document type ( Field Local menu number 701)
####################################################################

$SET_VCRTYPORI
If [L]_AOLDVAL<>this.VCRTYPORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRTYPORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRTYPORI
 Gosub PROPAGATE_VCRTYPORI
Endif
Return

$INIT_VCRTYPORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRTYPORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VCRTYPORI=0 and fmet this.AGETATTRIBUTE("VCRTYPORI","$isMandatory")="true"
 this.VCRTYPORI = 1
Endif
Return
 
$CONTROL_VCRTYPORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRTYPORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRTYPORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRTYPORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRTYPORI
[L]CURPRO = "VCRTYPORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRTYPORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRTYPORI
[L]CURPRO = "VCRTYPORI"
If this.VCRTYPORI<0 or this.VCRTYPORI>len(mess(0,701,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"701 ->"-num$(this.VCRTYPORI)-mess(99,123,1)):  Return : # Local menu "701 -> Invalid option
Endif
Return

$_AOTHERS_VCRTYPORI
[L]CURPRO = "VCRTYPORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRTYPORI
[L]CURPRO = "VCRTYPORI"
Return

$PROPAGATE_VCRTYPORI
this.isReadonly = 0
[L]CURPRO = "VCRTYPORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRTYPORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRTYPORI"
$_LNKPRO_VCRTYPORI
Return


####################################################################
# 32 : VCRNUMORI Source document no. ( Field VCR 20)
####################################################################

$SET_VCRNUMORI
If [L]_AOLDVAL<>this.VCRNUMORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRNUMORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRNUMORI
 Gosub PROPAGATE_VCRNUMORI
Endif
Return

$INIT_VCRNUMORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRNUMORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRNUMORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRNUMORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRNUMORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRNUMORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VCRNUMORI,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
If vireblc(this.VCRNUMORI,2)<>vireblc(format$("K:20X",this.VCRNUMORI),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRNUMORI
[L]CURPRO = "VCRNUMORI"
Return

$PROPAGATE_VCRNUMORI
this.isReadonly = 0
[L]CURPRO = "VCRNUMORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRNUMORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRNUMORI"
$_LNKPRO_VCRNUMORI
Return


####################################################################
# 33 : VCRLINORI Source document line no. ( Field L 8)
####################################################################

$SET_VCRLINORI
If [L]_AOLDVAL<>this.VCRLINORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRLINORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRLINORI
 Gosub PROPAGATE_VCRLINORI
Endif
Return

$INIT_VCRLINORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRLINORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRLINORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRLINORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRLINORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRLINORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRLINORI
[L]CURPRO = "VCRLINORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRLINORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRLINORI
[L]CURPRO = "VCRLINORI"
Return

$_AOTHERS_VCRLINORI
[L]CURPRO = "VCRLINORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRLINORI
[L]CURPRO = "VCRLINORI"
Return

$PROPAGATE_VCRLINORI
this.isReadonly = 0
[L]CURPRO = "VCRLINORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRLINORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRLINORI"
$_LNKPRO_VCRLINORI
Return


####################################################################
# 34 : VCRSEQORI Source document sequence no. ( Field L 8)
####################################################################

$SET_VCRSEQORI
If [L]_AOLDVAL<>this.VCRSEQORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRSEQORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRSEQORI
 Gosub PROPAGATE_VCRSEQORI
Endif
Return

$INIT_VCRSEQORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRSEQORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRSEQORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRSEQORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRSEQORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRSEQORI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRSEQORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
Return

$_AOTHERS_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRSEQORI
[L]CURPRO = "VCRSEQORI"
Return

$PROPAGATE_VCRSEQORI
this.isReadonly = 0
[L]CURPRO = "VCRSEQORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRSEQORI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "VCRSEQORI"
$_LNKPRO_VCRSEQORI
Return


####################################################################
# 35 : FMI Product source ( Field Local menu number 445)
####################################################################

$SET_FMI
If [L]_AOLDVAL<>this.FMI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FMI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FMI
 Gosub PROPAGATE_FMI
Endif
Return

$INIT_FMI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "FMI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FMI=0 and fmet this.AGETATTRIBUTE("FMI","$isMandatory")="true"
 this.FMI = 1
Endif
Return
 
$CONTROL_FMI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "FMI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FMI                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FMI                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FMI
[L]CURPRO = "FMI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FMI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FMI
[L]CURPRO = "FMI"
If this.FMI<0 or this.FMI>len(mess(0,445,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"445 ->"-num$(this.FMI)-mess(99,123,1)):  Return : # Local menu "445 -> Invalid option
Endif
Return

$_AOTHERS_FMI
[L]CURPRO = "FMI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FMI
[L]CURPRO = "FMI"
Return

$PROPAGATE_FMI
this.isReadonly = 0
[L]CURPRO = "FMI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FMI
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "FMI"
$_LNKPRO_FMI
Return


####################################################################
# 36 : ITMSTA Line status ( Field Local menu number 363)
####################################################################

$SET_ITMSTA
If [L]_AOLDVAL<>this.ITMSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ITMSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ITMSTA
 Gosub PROPAGATE_ITMSTA
Endif
Return

$INIT_ITMSTA
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ITMSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ITMSTA=0 and fmet this.AGETATTRIBUTE("ITMSTA","$isMandatory")="true"
 this.ITMSTA = 1
Endif
Return
 
$CONTROL_ITMSTA
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ITMSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ITMSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ITMSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ITMSTA
[L]CURPRO = "ITMSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ITMSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ITMSTA
[L]CURPRO = "ITMSTA"
If this.ITMSTA<0 or this.ITMSTA>len(mess(0,363,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"363 ->"-num$(this.ITMSTA)-mess(99,123,1)):  Return : # Local menu "363 -> Invalid option
Endif
Return

$_AOTHERS_ITMSTA
[L]CURPRO = "ITMSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ITMSTA
[L]CURPRO = "ITMSTA"
Return

$PROPAGATE_ITMSTA
this.isReadonly = 0
[L]CURPRO = "ITMSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ITMSTA
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ITMSTA"
$_LNKPRO_ITMSTA
Return


####################################################################
# 37 : MFITRKFLG Tracking flag ( Field Local menu number 339)
####################################################################

$SET_MFITRKFLG
If [L]_AOLDVAL<>this.MFITRKFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFITRKFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFITRKFLG
 Gosub PROPAGATE_MFITRKFLG
Endif
Return

$INIT_MFITRKFLG
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "MFITRKFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFITRKFLG=0 and fmet this.AGETATTRIBUTE("MFITRKFLG","$isMandatory")="true"
 this.MFITRKFLG = 1
Endif
Return
 
$CONTROL_MFITRKFLG
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "MFITRKFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFITRKFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFITRKFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFITRKFLG
[L]CURPRO = "MFITRKFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFITRKFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFITRKFLG
[L]CURPRO = "MFITRKFLG"
If this.MFITRKFLG<0 or this.MFITRKFLG>len(mess(0,339,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"339 ->"-num$(this.MFITRKFLG)-mess(99,123,1)):  Return : # Local menu "339 -> Invalid option
Endif
Return

$_AOTHERS_MFITRKFLG
[L]CURPRO = "MFITRKFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFITRKFLG
[L]CURPRO = "MFITRKFLG"
Return

$PROPAGATE_MFITRKFLG
this.isReadonly = 0
[L]CURPRO = "MFITRKFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFITRKFLG
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "MFITRKFLG"
$_LNKPRO_MFITRKFLG
Return


####################################################################
# 38 : TRKFIRST First tracking date ( Field D)
####################################################################

$SET_TRKFIRST
If [L]_AOLDVAL<>this.TRKFIRST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKFIRST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKFIRST
 Gosub PROPAGATE_TRKFIRST
Endif
Return

$INIT_TRKFIRST
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKFIRST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKFIRST
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKFIRST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKFIRST              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKFIRST              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKFIRST
[L]CURPRO = "TRKFIRST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKFIRST=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKFIRST
[L]CURPRO = "TRKFIRST"
Return

$_AOTHERS_TRKFIRST
[L]CURPRO = "TRKFIRST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKFIRST
[L]CURPRO = "TRKFIRST"
Return

$PROPAGATE_TRKFIRST
this.isReadonly = 0
[L]CURPRO = "TRKFIRST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKFIRST
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKFIRST"
$_LNKPRO_TRKFIRST
Return


####################################################################
# 39 : TRKLAST Last tracking date ( Field D)
####################################################################

$SET_TRKLAST
If [L]_AOLDVAL<>this.TRKLAST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKLAST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKLAST
 Gosub PROPAGATE_TRKLAST
Endif
Return

$INIT_TRKLAST
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKLAST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKLAST
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKLAST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKLAST               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKLAST               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKLAST
[L]CURPRO = "TRKLAST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKLAST=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKLAST
[L]CURPRO = "TRKLAST"
Return

$_AOTHERS_TRKLAST
[L]CURPRO = "TRKLAST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKLAST
[L]CURPRO = "TRKLAST"
Return

$PROPAGATE_TRKLAST
this.isReadonly = 0
[L]CURPRO = "TRKLAST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKLAST
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKLAST"
$_LNKPRO_TRKLAST
Return


####################################################################
# 40 : TRKFIRSTC Tracking start date ( Field D)
####################################################################

$SET_TRKFIRSTC
If [L]_AOLDVAL<>this.TRKFIRSTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKFIRSTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKFIRSTC
 Gosub PROPAGATE_TRKFIRSTC
Endif
Return

$INIT_TRKFIRSTC
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKFIRSTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKFIRSTC
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKFIRSTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKFIRSTC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKFIRSTC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKFIRSTC=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
Return

$_AOTHERS_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
Return

$PROPAGATE_TRKFIRSTC
this.isReadonly = 0
[L]CURPRO = "TRKFIRSTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKFIRSTC
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKFIRSTC"
$_LNKPRO_TRKFIRSTC
Return


####################################################################
# 41 : TRKLASTC Tracking end date ( Field D)
####################################################################

$SET_TRKLASTC
If [L]_AOLDVAL<>this.TRKLASTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKLASTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKLASTC
 Gosub PROPAGATE_TRKLASTC
Endif
Return

$INIT_TRKLASTC
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKLASTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKLASTC
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKLASTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKLASTC              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKLASTC              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKLASTC
[L]CURPRO = "TRKLASTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKLASTC=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKLASTC
[L]CURPRO = "TRKLASTC"
Return

$_AOTHERS_TRKLASTC
[L]CURPRO = "TRKLASTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKLASTC
[L]CURPRO = "TRKLASTC"
Return

$PROPAGATE_TRKLASTC
this.isReadonly = 0
[L]CURPRO = "TRKLASTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKLASTC
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "TRKLASTC"
$_LNKPRO_TRKLASTC
Return


####################################################################
# 42 : PLANNER Planner ( Field AUS 5)
####################################################################

$SET_PLANNER
If [L]_AOLDVAL<>this.PLANNER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLANNER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLANNER
 Gosub PROPAGATE_PLANNER
Endif
Return

$INIT_PLANNER
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "PLANNER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLANNER
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "PLANNER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLANNER
[L]CURPRO = "PLANNER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLANNER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLANNER
[L]CURPRO = "PLANNER"
If vireblc(this.PLANNER,2)<>vireblc(format$("K:5B",this.PLANNER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PLANNER
[L]CURPRO = "PLANNER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLANNER
[L]CURPRO = "PLANNER"
Return

$PROPAGATE_PLANNER
this.isReadonly = 0
[L]CURPRO = "PLANNER"
Gosub _LNKPRO_PLANNER
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLANNER
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "PLANNER"
$_LNKPRO_PLANNER
If vireblc(this.PLANNER,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.PLANNER
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 43 : MFGPIO Priority ( Field Local menu number 365)
####################################################################

$SET_MFGPIO
If [L]_AOLDVAL<>this.MFGPIO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFGPIO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFGPIO
 Gosub PROPAGATE_MFGPIO
Endif
Return

$INIT_MFGPIO
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "MFGPIO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFGPIO=0 and fmet this.AGETATTRIBUTE("MFGPIO","$isMandatory")="true"
 this.MFGPIO = 1
Endif
Return
 
$CONTROL_MFGPIO
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "MFGPIO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFGPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFGPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFGPIO
[L]CURPRO = "MFGPIO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFGPIO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFGPIO
[L]CURPRO = "MFGPIO"
If this.MFGPIO<0 or this.MFGPIO>len(mess(0,365,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"365 ->"-num$(this.MFGPIO)-mess(99,123,1)):  Return : # Local menu "365 -> Invalid option
Endif
Return

$_AOTHERS_MFGPIO
[L]CURPRO = "MFGPIO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFGPIO
[L]CURPRO = "MFGPIO"
Return

$PROPAGATE_MFGPIO
this.isReadonly = 0
[L]CURPRO = "MFGPIO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFGPIO
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "MFGPIO"
$_LNKPRO_MFGPIO
Return


####################################################################
# 44 : BASQTY Base quantity ( Field QTY 0)
####################################################################

$SET_BASQTY
If [L]_AOLDVAL<>this.BASQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BASQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BASQTY
 Gosub PROPAGATE_BASQTY
Endif
Return

$INIT_BASQTY
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BASQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BASQTY
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BASQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BASQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BASQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BASQTY
[L]CURPRO = "BASQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BASQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BASQTY
[L]CURPRO = "BASQTY"
Return

$_AOTHERS_BASQTY
[L]CURPRO = "BASQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BASQTY
[L]CURPRO = "BASQTY"
Return

$PROPAGATE_BASQTY
this.isReadonly = 0
[L]CURPRO = "BASQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BASQTY
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BASQTY"
$_LNKPRO_BASQTY
Return


####################################################################
# 45 : LIKQTYCOD Link quantity code ( Field Local menu number 226)
####################################################################

$SET_LIKQTYCOD
If [L]_AOLDVAL<>this.LIKQTYCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIKQTYCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIKQTYCOD
 Gosub PROPAGATE_LIKQTYCOD
Endif
Return

$INIT_LIKQTYCOD
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "LIKQTYCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LIKQTYCOD=0 and fmet this.AGETATTRIBUTE("LIKQTYCOD","$isMandatory")="true"
 this.LIKQTYCOD = 1
Endif
Return
 
$CONTROL_LIKQTYCOD
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "LIKQTYCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIKQTYCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIKQTYCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIKQTYCOD
[L]CURPRO = "LIKQTYCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIKQTYCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIKQTYCOD
[L]CURPRO = "LIKQTYCOD"
If this.LIKQTYCOD<0 or this.LIKQTYCOD>len(mess(0,226,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"226 ->"-num$(this.LIKQTYCOD)-mess(99,123,1)):  Return : # Local menu "226 -> Invalid option
Endif
Return

$_AOTHERS_LIKQTYCOD
[L]CURPRO = "LIKQTYCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIKQTYCOD
[L]CURPRO = "LIKQTYCOD"
Return

$PROPAGATE_LIKQTYCOD
this.isReadonly = 0
[L]CURPRO = "LIKQTYCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIKQTYCOD
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "LIKQTYCOD"
$_LNKPRO_LIKQTYCOD
Return


####################################################################
# 46 : LIKQTY Link quantity ( Field QTY 0)
####################################################################

$SET_LIKQTY
If [L]_AOLDVAL<>this.LIKQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIKQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIKQTY
 Gosub PROPAGATE_LIKQTY
Endif
Return

$INIT_LIKQTY
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "LIKQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIKQTY
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "LIKQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIKQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIKQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIKQTY
[L]CURPRO = "LIKQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIKQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIKQTY
[L]CURPRO = "LIKQTY"
Return

$_AOTHERS_LIKQTY
[L]CURPRO = "LIKQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIKQTY
[L]CURPRO = "LIKQTY"
Return

$PROPAGATE_LIKQTY
this.isReadonly = 0
[L]CURPRO = "LIKQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIKQTY
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "LIKQTY"
$_LNKPRO_LIKQTY
Return


####################################################################
# 47 : QTYRND Quantity rounding ( Field Local menu number 293)
####################################################################

$SET_QTYRND
If [L]_AOLDVAL<>this.QTYRND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_QTYRND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.QTYRND
 Gosub PROPAGATE_QTYRND
Endif
Return

$INIT_QTYRND
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "QTYRND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.QTYRND=0 and fmet this.AGETATTRIBUTE("QTYRND","$isMandatory")="true"
 this.QTYRND = 1
Endif
Return
 
$CONTROL_QTYRND
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "QTYRND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_QTYRND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_QTYRND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_QTYRND
[L]CURPRO = "QTYRND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.QTYRND=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_QTYRND
[L]CURPRO = "QTYRND"
If this.QTYRND<0 or this.QTYRND>len(mess(0,293,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"293 ->"-num$(this.QTYRND)-mess(99,123,1)):  Return : # Local menu "293 -> Invalid option
Endif
Return

$_AOTHERS_QTYRND
[L]CURPRO = "QTYRND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_QTYRND
[L]CURPRO = "QTYRND"
Return

$PROPAGATE_QTYRND
this.isReadonly = 0
[L]CURPRO = "QTYRND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_QTYRND
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "QTYRND"
$_LNKPRO_QTYRND
Return


####################################################################
# 48 : CSTFLG Valuation ( Field Local menu number 1)
####################################################################

$SET_CSTFLG
If [L]_AOLDVAL<>this.CSTFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CSTFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CSTFLG
 Gosub PROPAGATE_CSTFLG
Endif
Return

$INIT_CSTFLG
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CSTFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CSTFLG=0 and fmet this.AGETATTRIBUTE("CSTFLG","$isMandatory")="true"
 this.CSTFLG = 1
Endif
Return
 
$CONTROL_CSTFLG
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CSTFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CSTFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CSTFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CSTFLG
[L]CURPRO = "CSTFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CSTFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CSTFLG
[L]CURPRO = "CSTFLG"
If this.CSTFLG<0 or this.CSTFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CSTFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CSTFLG
[L]CURPRO = "CSTFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CSTFLG
[L]CURPRO = "CSTFLG"
Return

$PROPAGATE_CSTFLG
this.isReadonly = 0
[L]CURPRO = "CSTFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CSTFLG
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CSTFLG"
$_LNKPRO_CSTFLG
Return


####################################################################
# 49 : BOMOPE Operation number ( Field OPE 0)
####################################################################

$SET_BOMOPE
If [L]_AOLDVAL<>this.BOMOPE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMOPE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMOPE
 Gosub PROPAGATE_BOMOPE
Endif
Return

$INIT_BOMOPE
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BOMOPE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOMOPE
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BOMOPE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMOPE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMOPE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMOPE
[L]CURPRO = "BOMOPE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOMOPE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMOPE
[L]CURPRO = "BOMOPE"
Return

$_AOTHERS_BOMOPE
[L]CURPRO = "BOMOPE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMOPE
[L]CURPRO = "BOMOPE"
Return

$PROPAGATE_BOMOPE
this.isReadonly = 0
[L]CURPRO = "BOMOPE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMOPE
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BOMOPE"
$_LNKPRO_BOMOPE
Return


####################################################################
# 50 : BOMOFS Operation lead-time ( Field C 4)
####################################################################

$SET_BOMOFS
If [L]_AOLDVAL<>this.BOMOFS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMOFS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMOFS
 Gosub PROPAGATE_BOMOFS
Endif
Return

$INIT_BOMOFS
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BOMOFS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOMOFS
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BOMOFS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMOFS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMOFS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMOFS
[L]CURPRO = "BOMOFS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOMOFS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMOFS
[L]CURPRO = "BOMOFS"
Return

$_AOTHERS_BOMOFS
[L]CURPRO = "BOMOFS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMOFS
[L]CURPRO = "BOMOFS"
Return

$PROPAGATE_BOMOFS
this.isReadonly = 0
[L]CURPRO = "BOMOFS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMOFS
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "BOMOFS"
$_LNKPRO_BOMOFS
Return


####################################################################
# 51 : CLODAT Closing date ( Field D)
####################################################################

$SET_CLODAT
If [L]_AOLDVAL<>this.CLODAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CLODAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CLODAT
 Gosub PROPAGATE_CLODAT
Endif
Return

$INIT_CLODAT
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CLODAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CLODAT
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CLODAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CLODAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CLODAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CLODAT
[L]CURPRO = "CLODAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CLODAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CLODAT
[L]CURPRO = "CLODAT"
Return

$_AOTHERS_CLODAT
[L]CURPRO = "CLODAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CLODAT
[L]CURPRO = "CLODAT"
Return

$PROPAGATE_CLODAT
this.isReadonly = 0
[L]CURPRO = "CLODAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CLODAT
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CLODAT"
$_LNKPRO_CLODAT
Return


####################################################################
# 53 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 54 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 55 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 56 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 57 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 58 : ECCVALMAJ Major version ( Field ICVVAL 10)
####################################################################

$SET_ECCVALMAJ
If [L]_AOLDVAL<>this.ECCVALMAJ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ECCVALMAJ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ECCVALMAJ
 Gosub PROPAGATE_ECCVALMAJ
Endif
Return

$INIT_ECCVALMAJ
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ECCVALMAJ
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ECCVALMAJ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ECCVALMAJ             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ECCVALMAJ             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ECCVALMAJ,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
Return

$_AOTHERS_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
Return

$PROPAGATE_ECCVALMAJ
this.isReadonly = 0
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ECCVALMAJ
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ECCVALMAJ"
$_LNKPRO_ECCVALMAJ
Return


####################################################################
# 59 : ECCVALMIN Minor version ( Field ICVVAL 10)
####################################################################

$SET_ECCVALMIN
If [L]_AOLDVAL<>this.ECCVALMIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ECCVALMIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ECCVALMIN
 Gosub PROPAGATE_ECCVALMIN
Endif
Return

$INIT_ECCVALMIN
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ECCVALMIN
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ECCVALMIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ECCVALMIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ECCVALMIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ECCVALMIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
Return

$_AOTHERS_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
Return

$PROPAGATE_ECCVALMIN
this.isReadonly = 0
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ECCVALMIN
Gosub DECLARE_VAR From WMC0MFGITM
[L]CURPRO = "ECCVALMIN"
$_LNKPRO_ECCVALMIN
Return




