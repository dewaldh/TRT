#<AdxTL>@(#)0.0.0.0 $Revision$Class Actual subcontract price
# Supervisor
## ACLA-CLASSE ## SCOCOST
# 2018-08-27 12:44:00 366

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : LABCPNCST Component labor cost ( Field MD8 0)
####################################################################

$SET_LABCPNCST
If [L]_AOLDVAL<>this.LABCPNCST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LABCPNCST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LABCPNCST
 Gosub PROPAGATE_LABCPNCST
Endif
Return

$INIT_LABCPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "LABCPNCST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LABCPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "LABCPNCST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LABCPNCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LABCPNCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LABCPNCST
[L]CURPRO = "LABCPNCST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LABCPNCST=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LABCPNCST
[L]CURPRO = "LABCPNCST"
Return

$_AOTHERS_LABCPNCST
[L]CURPRO = "LABCPNCST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LABCPNCST
[L]CURPRO = "LABCPNCST"
Return

$PROPAGATE_LABCPNCST
this.isReadonly = 0
[L]CURPRO = "LABCPNCST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LABCPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "LABCPNCST"
$_LNKPRO_LABCPNCST
Return


####################################################################
# 32 : OVECPNCST Component overhead cost ( Field MD8 0)
####################################################################

$SET_OVECPNCST
If [L]_AOLDVAL<>this.OVECPNCST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OVECPNCST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OVECPNCST
 Gosub PROPAGATE_OVECPNCST
Endif
Return

$INIT_OVECPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVECPNCST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OVECPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVECPNCST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OVECPNCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OVECPNCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OVECPNCST
[L]CURPRO = "OVECPNCST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OVECPNCST=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OVECPNCST
[L]CURPRO = "OVECPNCST"
Return

$_AOTHERS_OVECPNCST
[L]CURPRO = "OVECPNCST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OVECPNCST
[L]CURPRO = "OVECPNCST"
Return

$PROPAGATE_OVECPNCST
this.isReadonly = 0
[L]CURPRO = "OVECPNCST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OVECPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVECPNCST"
$_LNKPRO_OVECPNCST
Return


####################################################################
# 33 : SCOCPNCST Component sub-contract cost ( Field MD8 0)
####################################################################

$SET_SCOCPNCST
If [L]_AOLDVAL<>this.SCOCPNCST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCOCPNCST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCOCPNCST
 Gosub PROPAGATE_SCOCPNCST
Endif
Return

$INIT_SCOCPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SCOCPNCST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SCOCPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SCOCPNCST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCOCPNCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCOCPNCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCOCPNCST
[L]CURPRO = "SCOCPNCST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SCOCPNCST=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCOCPNCST
[L]CURPRO = "SCOCPNCST"
Return

$_AOTHERS_SCOCPNCST
[L]CURPRO = "SCOCPNCST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCOCPNCST
[L]CURPRO = "SCOCPNCST"
Return

$PROPAGATE_SCOCPNCST
this.isReadonly = 0
[L]CURPRO = "SCOCPNCST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCOCPNCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SCOCPNCST"
$_LNKPRO_SCOCPNCST
Return


####################################################################
# 34 : INVDTACPN Invoicing element ( Field MD8 0)
####################################################################

$SET_INVDTACPN
If [L]_AOLDVAL<>this.INVDTACPN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTACPN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTACPN
 Gosub PROPAGATE_INVDTACPN
Endif
Return

$INIT_INVDTACPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "INVDTACPN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTACPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "INVDTACPN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTACPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTACPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTACPN
[L]CURPRO = "INVDTACPN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDTACPN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTACPN
[L]CURPRO = "INVDTACPN"
Return

$_AOTHERS_INVDTACPN
[L]CURPRO = "INVDTACPN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTACPN
[L]CURPRO = "INVDTACPN"
Return

$PROPAGATE_INVDTACPN
this.isReadonly = 0
[L]CURPRO = "INVDTACPN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTACPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "INVDTACPN"
$_LNKPRO_INVDTACPN
Return


####################################################################
# 35 : OVEMATCPN Cost level OH mat ( Field MD8 0)
####################################################################

$SET_OVEMATCPN
If [L]_AOLDVAL<>this.OVEMATCPN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OVEMATCPN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OVEMATCPN
 Gosub PROPAGATE_OVEMATCPN
Endif
Return

$INIT_OVEMATCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVEMATCPN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OVEMATCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVEMATCPN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OVEMATCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OVEMATCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OVEMATCPN
[L]CURPRO = "OVEMATCPN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OVEMATCPN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OVEMATCPN
[L]CURPRO = "OVEMATCPN"
Return

$_AOTHERS_OVEMATCPN
[L]CURPRO = "OVEMATCPN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OVEMATCPN
[L]CURPRO = "OVEMATCPN"
Return

$PROPAGATE_OVEMATCPN
this.isReadonly = 0
[L]CURPRO = "OVEMATCPN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OVEMATCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVEMATCPN"
$_LNKPRO_OVEMATCPN
Return


####################################################################
# 36 : OVEMACCPN Cost level OH mch ( Field MD8 0)
####################################################################

$SET_OVEMACCPN
If [L]_AOLDVAL<>this.OVEMACCPN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OVEMACCPN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OVEMACCPN
 Gosub PROPAGATE_OVEMACCPN
Endif
Return

$INIT_OVEMACCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVEMACCPN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OVEMACCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVEMACCPN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OVEMACCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OVEMACCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OVEMACCPN
[L]CURPRO = "OVEMACCPN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OVEMACCPN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OVEMACCPN
[L]CURPRO = "OVEMACCPN"
Return

$_AOTHERS_OVEMACCPN
[L]CURPRO = "OVEMACCPN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OVEMACCPN
[L]CURPRO = "OVEMACCPN"
Return

$PROPAGATE_OVEMACCPN
this.isReadonly = 0
[L]CURPRO = "OVEMACCPN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OVEMACCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVEMACCPN"
$_LNKPRO_OVEMACCPN
Return


####################################################################
# 37 : OVELABCPN Cost level OH lab ( Field MD8 0)
####################################################################

$SET_OVELABCPN
If [L]_AOLDVAL<>this.OVELABCPN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OVELABCPN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OVELABCPN
 Gosub PROPAGATE_OVELABCPN
Endif
Return

$INIT_OVELABCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVELABCPN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OVELABCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVELABCPN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OVELABCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OVELABCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OVELABCPN
[L]CURPRO = "OVELABCPN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OVELABCPN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OVELABCPN
[L]CURPRO = "OVELABCPN"
Return

$_AOTHERS_OVELABCPN
[L]CURPRO = "OVELABCPN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OVELABCPN
[L]CURPRO = "OVELABCPN"
Return

$PROPAGATE_OVELABCPN
this.isReadonly = 0
[L]CURPRO = "OVELABCPN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OVELABCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVELABCPN"
$_LNKPRO_OVELABCPN
Return


####################################################################
# 38 : OVESCOCPN Cost level OH sub-con ( Field MD8 0)
####################################################################

$SET_OVESCOCPN
If [L]_AOLDVAL<>this.OVESCOCPN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OVESCOCPN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OVESCOCPN
 Gosub PROPAGATE_OVESCOCPN
Endif
Return

$INIT_OVESCOCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVESCOCPN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OVESCOCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVESCOCPN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OVESCOCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OVESCOCPN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OVESCOCPN
[L]CURPRO = "OVESCOCPN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OVESCOCPN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OVESCOCPN
[L]CURPRO = "OVESCOCPN"
Return

$_AOTHERS_OVESCOCPN
[L]CURPRO = "OVESCOCPN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OVESCOCPN
[L]CURPRO = "OVESCOCPN"
Return

$PROPAGATE_OVESCOCPN
this.isReadonly = 0
[L]CURPRO = "OVESCOCPN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OVESCOCPN
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "OVESCOCPN"
$_LNKPRO_OVESCOCPN
Return


####################################################################
# 39 : CPLRIO Ratio ( Field DCB 5)
####################################################################

$SET_CPLRIO
If [L]_AOLDVAL<>this.CPLRIO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPLRIO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPLRIO
 Gosub PROPAGATE_CPLRIO
Endif
Return

$INIT_CPLRIO
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CPLRIO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPLRIO
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CPLRIO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPLRIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPLRIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPLRIO
[L]CURPRO = "CPLRIO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CPLRIO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPLRIO
[L]CURPRO = "CPLRIO"
Return

$_AOTHERS_CPLRIO
[L]CURPRO = "CPLRIO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPLRIO
[L]CURPRO = "CPLRIO"
Return

$PROPAGATE_CPLRIO
this.isReadonly = 0
[L]CURPRO = "CPLRIO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPLRIO
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CPLRIO"
$_LNKPRO_CPLRIO
Return


####################################################################
# 40 : ROUALT Routing code ( Field TRO 0)
####################################################################

$SET_ROUALT
If [L]_AOLDVAL<>this.ROUALT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ROUALT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ROUALT
 Gosub PROPAGATE_ROUALT
Endif
Return

$INIT_ROUALT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "ROUALT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ROUALT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "ROUALT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ROUALT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ROUALT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ROUALT
[L]CURPRO = "ROUALT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ROUALT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ROUALT
[L]CURPRO = "ROUALT"
Return

$_AOTHERS_ROUALT
[L]CURPRO = "ROUALT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ROUALT
[L]CURPRO = "ROUALT"
Return

$PROPAGATE_ROUALT
this.isReadonly = 0
[L]CURPRO = "ROUALT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ROUALT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "ROUALT"
$_LNKPRO_ROUALT
Return


####################################################################
# 41 : BOMALT BOM code ( Field TBO 0)
####################################################################

$SET_BOMALT
If [L]_AOLDVAL<>this.BOMALT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMALT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMALT
 Gosub PROPAGATE_BOMALT
Endif
Return

$INIT_BOMALT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "BOMALT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOMALT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "BOMALT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMALT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMALT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMALT
[L]CURPRO = "BOMALT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOMALT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMALT
[L]CURPRO = "BOMALT"
Return

$_AOTHERS_BOMALT
[L]CURPRO = "BOMALT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMALT
[L]CURPRO = "BOMALT"
If this.BOMALT<>0
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTBO.ACTRLREF(this,"BOMALT",this.BOMALT,this.BOMALTTYP,this.BOMALT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BOMALT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_BOMALT
this.isReadonly = 0
[L]CURPRO = "BOMALT"
Gosub _LNKPRO_BOMALT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMALT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "BOMALT"
$_LNKPRO_BOMALT
If this.BOMALT<>0
 # Link TABBOMALT
 Local File TABBOMALT [WTBO]
 Read [F:WTBO]TBO0 = this.BOMALTTYP;this.BOMALT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABBOMALT" & ZONE="TBOSHOAXX" & IDENT1=num$([F:WTBO]BOMALTTYP) & IDENT2=num$([F:WTBO]BOMALT) & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BOMALT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABBOMALT" & ZONE="TBODESAXX" & IDENT1=num$([F:WTBO]BOMALTTYP) & IDENT2=num$([F:WTBO]BOMALT) & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BOMALT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTBO]
Endif
Return

$_ALOADATTRIBUTE_BOMALT
[L]ASTATUS = fmet this.ASETATTRIBUTE("BOMALT","$isMandatory","true")
Return


####################################################################
# 42 : BOMALTTYP BOM code type ( Field Local menu number 224)
####################################################################

$SET_BOMALTTYP
If [L]_AOLDVAL<>this.BOMALTTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMALTTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMALTTYP
 Gosub PROPAGATE_BOMALTTYP
Endif
Return

$INIT_BOMALTTYP
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "BOMALTTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BOMALTTYP=0 and fmet this.AGETATTRIBUTE("BOMALTTYP","$isMandatory")="true"
 this.BOMALTTYP = 1
Endif
Return
 
$CONTROL_BOMALTTYP
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "BOMALTTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMALTTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMALTTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOMALTTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
If this.BOMALTTYP<0 or this.BOMALTTYP>len(mess(0,224,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"224 ->"-num$(this.BOMALTTYP)-mess(99,123,1)):  Return : # Local menu "224 -> Invalid option
Endif
Return

$_AOTHERS_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
Return

$PROPAGATE_BOMALTTYP
this.isReadonly = 0
[L]CURPRO = "BOMALTTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMALTTYP
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "BOMALTTYP"
$_LNKPRO_BOMALTTYP
Return


####################################################################
# 43 : SLTMATCST Material cost selection ( Field Local menu number 329)
####################################################################

$SET_SLTMATCST
If [L]_AOLDVAL<>this.SLTMATCST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SLTMATCST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SLTMATCST
 Gosub PROPAGATE_SLTMATCST
Endif
Return

$INIT_SLTMATCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTMATCST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SLTMATCST=0 and fmet this.AGETATTRIBUTE("SLTMATCST","$isMandatory")="true"
 this.SLTMATCST = 1
Endif
Return
 
$CONTROL_SLTMATCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTMATCST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SLTMATCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SLTMATCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SLTMATCST
[L]CURPRO = "SLTMATCST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SLTMATCST=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SLTMATCST
[L]CURPRO = "SLTMATCST"
If this.SLTMATCST<0 or this.SLTMATCST>len(mess(0,329,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"329 ->"-num$(this.SLTMATCST)-mess(99,123,1)):  Return : # Local menu "329 -> Invalid option
Endif
Return

$_AOTHERS_SLTMATCST
[L]CURPRO = "SLTMATCST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SLTMATCST
[L]CURPRO = "SLTMATCST"
Return

$PROPAGATE_SLTMATCST
this.isReadonly = 0
[L]CURPRO = "SLTMATCST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SLTMATCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTMATCST"
$_LNKPRO_SLTMATCST
Return


####################################################################
# 44 : SLTSEMCST Semifinished cost selection ( Field Local menu number 329)
####################################################################

$SET_SLTSEMCST
If [L]_AOLDVAL<>this.SLTSEMCST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SLTSEMCST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SLTSEMCST
 Gosub PROPAGATE_SLTSEMCST
Endif
Return

$INIT_SLTSEMCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTSEMCST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SLTSEMCST=0 and fmet this.AGETATTRIBUTE("SLTSEMCST","$isMandatory")="true"
 this.SLTSEMCST = 1
Endif
Return
 
$CONTROL_SLTSEMCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTSEMCST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SLTSEMCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SLTSEMCST             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SLTSEMCST
[L]CURPRO = "SLTSEMCST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SLTSEMCST=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SLTSEMCST
[L]CURPRO = "SLTSEMCST"
If this.SLTSEMCST<0 or this.SLTSEMCST>len(mess(0,329,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"329 ->"-num$(this.SLTSEMCST)-mess(99,123,1)):  Return : # Local menu "329 -> Invalid option
Endif
Return

$_AOTHERS_SLTSEMCST
[L]CURPRO = "SLTSEMCST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SLTSEMCST
[L]CURPRO = "SLTSEMCST"
Return

$PROPAGATE_SLTSEMCST
this.isReadonly = 0
[L]CURPRO = "SLTSEMCST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SLTSEMCST
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTSEMCST"
$_LNKPRO_SLTSEMCST
Return


####################################################################
# 45 : MFCSEMBRD SF/PC breakdown ( Field Local menu number 1)
####################################################################

$SET_MFCSEMBRD
If [L]_AOLDVAL<>this.MFCSEMBRD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFCSEMBRD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFCSEMBRD
 Gosub PROPAGATE_MFCSEMBRD
Endif
Return

$INIT_MFCSEMBRD
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "MFCSEMBRD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFCSEMBRD=0 and fmet this.AGETATTRIBUTE("MFCSEMBRD","$isMandatory")="true"
 this.MFCSEMBRD = 1
Endif
Return
 
$CONTROL_MFCSEMBRD
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "MFCSEMBRD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFCSEMBRD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFCSEMBRD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFCSEMBRD
[L]CURPRO = "MFCSEMBRD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFCSEMBRD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFCSEMBRD
[L]CURPRO = "MFCSEMBRD"
If this.MFCSEMBRD<0 or this.MFCSEMBRD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MFCSEMBRD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MFCSEMBRD
[L]CURPRO = "MFCSEMBRD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFCSEMBRD
[L]CURPRO = "MFCSEMBRD"
Return

$PROPAGATE_MFCSEMBRD
this.isReadonly = 0
[L]CURPRO = "MFCSEMBRD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFCSEMBRD
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "MFCSEMBRD"
$_LNKPRO_MFCSEMBRD
Return


####################################################################
# 46 : VLTCCERAT Dimension rate selection ( Field Local menu number 324)
####################################################################

$SET_VLTCCERAT
If [L]_AOLDVAL<>this.VLTCCERAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VLTCCERAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VLTCCERAT
 Gosub PROPAGATE_VLTCCERAT
Endif
Return

$INIT_VLTCCERAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "VLTCCERAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VLTCCERAT=0 and fmet this.AGETATTRIBUTE("VLTCCERAT","$isMandatory")="true"
 this.VLTCCERAT = 1
Endif
Return
 
$CONTROL_VLTCCERAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "VLTCCERAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VLTCCERAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VLTCCERAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VLTCCERAT
[L]CURPRO = "VLTCCERAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VLTCCERAT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VLTCCERAT
[L]CURPRO = "VLTCCERAT"
If this.VLTCCERAT<0 or this.VLTCCERAT>len(mess(0,324,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"324 ->"-num$(this.VLTCCERAT)-mess(99,123,1)):  Return : # Local menu "324 -> Invalid option
Endif
Return

$_AOTHERS_VLTCCERAT
[L]CURPRO = "VLTCCERAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VLTCCERAT
[L]CURPRO = "VLTCCERAT"
Return

$PROPAGATE_VLTCCERAT
this.isReadonly = 0
[L]CURPRO = "VLTCCERAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VLTCCERAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "VLTCCERAT"
$_LNKPRO_VLTCCERAT
Return


####################################################################
# 47 : SLTOVECOL Overhead column ( Field Local menu number 320)
####################################################################

$SET_SLTOVECOL
If [L]_AOLDVAL<>this.SLTOVECOL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SLTOVECOL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SLTOVECOL
 Gosub PROPAGATE_SLTOVECOL
Endif
Return

$INIT_SLTOVECOL
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTOVECOL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SLTOVECOL=0 and fmet this.AGETATTRIBUTE("SLTOVECOL","$isMandatory")="true"
 this.SLTOVECOL = 1
Endif
Return
 
$CONTROL_SLTOVECOL
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTOVECOL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SLTOVECOL             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SLTOVECOL             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SLTOVECOL
[L]CURPRO = "SLTOVECOL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SLTOVECOL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SLTOVECOL
[L]CURPRO = "SLTOVECOL"
If this.SLTOVECOL<0 or this.SLTOVECOL>len(mess(0,320,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"320 ->"-num$(this.SLTOVECOL)-mess(99,123,1)):  Return : # Local menu "320 -> Invalid option
Endif
Return

$_AOTHERS_SLTOVECOL
[L]CURPRO = "SLTOVECOL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SLTOVECOL
[L]CURPRO = "SLTOVECOL"
Return

$PROPAGATE_SLTOVECOL
this.isReadonly = 0
[L]CURPRO = "SLTOVECOL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SLTOVECOL
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "SLTOVECOL"
$_LNKPRO_SLTOVECOL
Return


####################################################################
# 48 : WIPCLE WIP balance ( Field MS1 0)
####################################################################

$SET_WIPCLE
If [L]_AOLDVAL<>this.WIPCLE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_WIPCLE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.WIPCLE
 Gosub PROPAGATE_WIPCLE
Endif
Return

$INIT_WIPCLE
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "WIPCLE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_WIPCLE
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "WIPCLE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_WIPCLE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_WIPCLE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_WIPCLE
[L]CURPRO = "WIPCLE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.WIPCLE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_WIPCLE
[L]CURPRO = "WIPCLE"
Return

$_AOTHERS_WIPCLE
[L]CURPRO = "WIPCLE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_WIPCLE
[L]CURPRO = "WIPCLE"
Return

$PROPAGATE_WIPCLE
this.isReadonly = 0
[L]CURPRO = "WIPCLE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_WIPCLE
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "WIPCLE"
$_LNKPRO_WIPCLE
Return


####################################################################
# 49 : ANAFLG Analytical accounting update ( Field Local menu number 1)
####################################################################

$SET_ANAFLG
If [L]_AOLDVAL<>this.ANAFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ANAFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ANAFLG
 Gosub PROPAGATE_ANAFLG
Endif
Return

$INIT_ANAFLG
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "ANAFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ANAFLG=0 and fmet this.AGETATTRIBUTE("ANAFLG","$isMandatory")="true"
 this.ANAFLG = 1
Endif
Return
 
$CONTROL_ANAFLG
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "ANAFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ANAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ANAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ANAFLG
[L]CURPRO = "ANAFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ANAFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ANAFLG
[L]CURPRO = "ANAFLG"
If this.ANAFLG<0 or this.ANAFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ANAFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ANAFLG
[L]CURPRO = "ANAFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ANAFLG
[L]CURPRO = "ANAFLG"
Return

$PROPAGATE_ANAFLG
this.isReadonly = 0
[L]CURPRO = "ANAFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ANAFLG
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "ANAFLG"
$_LNKPRO_ANAFLG
Return


####################################################################
# 50 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return


####################################################################
# 51 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 52 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 53 : PRNUID Identifier ( Field L 8)
####################################################################

$SET_PRNUID
If [L]_AOLDVAL<>this.PRNUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRNUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRNUID
 Gosub PROPAGATE_PRNUID
Endif
Return

$INIT_PRNUID
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "PRNUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRNUID
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "PRNUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRNUID                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRNUID                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRNUID
[L]CURPRO = "PRNUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PRNUID=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRNUID
[L]CURPRO = "PRNUID"
Return

$_AOTHERS_PRNUID
[L]CURPRO = "PRNUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRNUID
[L]CURPRO = "PRNUID"
Return

$PROPAGATE_PRNUID
this.isReadonly = 0
[L]CURPRO = "PRNUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRNUID
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "PRNUID"
$_LNKPRO_PRNUID
Return


####################################################################
# 54 : MATLEV0 Material cost level ( Field MD8 0)
####################################################################

$SET_MATLEV0
If [L]_AOLDVAL<>this.MATLEV0
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MATLEV0
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MATLEV0
 Gosub PROPAGATE_MATLEV0
Endif
Return

$INIT_MATLEV0
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "MATLEV0"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MATLEV0
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "MATLEV0"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MATLEV0               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MATLEV0               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MATLEV0
[L]CURPRO = "MATLEV0"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MATLEV0=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MATLEV0
[L]CURPRO = "MATLEV0"
Return

$_AOTHERS_MATLEV0
[L]CURPRO = "MATLEV0"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MATLEV0
[L]CURPRO = "MATLEV0"
Return

$PROPAGATE_MATLEV0
this.isReadonly = 0
[L]CURPRO = "MATLEV0"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MATLEV0
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "MATLEV0"
$_LNKPRO_MATLEV0
Return


####################################################################
# 55 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 56 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 57 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 58 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 59 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0SCOCOST
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




