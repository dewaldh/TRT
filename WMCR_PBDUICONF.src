#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment balance field settings
# Supervisor
## CRUD-CLASSE ## PBDUICONF
# 2018-08-27 12:37:48 140


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PBDUICONF [PBDUIC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PBDUICONF") From ASYRCOM : Endif
Local Instance PBDUICONF Using C_PBDUICONF

If !SILENCE : Call TRACE("3 --> New Instance C_PBDUICONF") From ASYRCOM : Endif
PBDUICONF = NewInstance C_PBDUICONF AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PBDUIC_]PBDUIC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PBDUICONF") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF.AREAD([PBDUIC_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PBDUICONF.LEG ="-num$(PBDUICONF.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PBDUICONF.AKEYS)
  Call TRACE("-"-num$(I)-":"-PBDUICONF.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PBDUIC_]
FreeGroup PBDUICONF
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PBDUICONF,ACLE,ASTATUS,_ETAG)
Variable Instance PBDUICONF Using C_PBDUICONF
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_LEG = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PBDUICONF [PBDUIC]
Default File [F:PBDUIC]
Read [F:PBDUIC]PBDUIC0 = [L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PBDUIC]UPDTICK)>0
 [L]_ETAG = num$([F:PBDUIC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PBDUICONF,ACLE,ASTATUS)
Variable Instance PBDUICONF Using C_PBDUICONF
Value Char ACLE
Variable Integer ASTATUS
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_LEG = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF.AREAD([L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PBDUICONF,_LEG,ASTATUS)
Variable Instance PBDUICONF Using C_PBDUICONF
Value Char _LEG
Variable Integer ASTATUS

If PBDUICONF = null : End : Endif

Gosub AVARIABLES From WMC00PBDUICONF
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PBDUICONF.APARENT=null
 [L]A_I = PBDUICONF.freeSnapshot
 PBDUICONF.snapshotEnabled = 0
 PBDUICONF.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PBDUICONF.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PBDUICONF.APARENT=null
 PBDUICONF.snapshotEnabled = 1
 PBDUICONF.setAccessorEnabled = 1
Endif
LogicClose File [PBDUIC] ,[PBDUID]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF._ACTION_PARAM("AREAD_BEFORE",[L]_LEG))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PBDUIC]
Read [F:PBDUIC]PBDUIC0 = [L]_LEG
If fstat
[L]A_ERROR = [L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PBDUICONF,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PBDUIC]AUUID)>0 & [F:PBDUIC]AUUID=NullUuid
 [F:PBDUIC]AUUID = getUuid
Endif
SetInstance PBDUICONF With [F:PBDUIC]
PBDUICONF.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:PBDUID]
 [L]A_N2=0
 For [F:PBDUID]PBDUID0 Where LEG=[F:PBDUIC]LEG
  [L]A_N2 +=1
  PBDUICONF.LINES(A_N2) = NewInstance  C_PBDUICONFD(PBDUICONF.ACTX,NullUuid,[L]A_N2,PBDUICONF,"LINES") AllocGroup PBDUICONF
  [L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF.LINES(A_N2).ADDINSTANCE_BOUND)
  If dim([F:PBDUID]AUUID)>0 & [F:PBDUID]AUUID=NullUuid
   [F:PBDUID]AUUID = getUuid
  Endif
  SetInstance PBDUICONF.LINES(A_N2) With [F:PBDUID]
  [L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF.LINES(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  PBDUICONF.LINES(A_N2).ASTALIN = [V]CST_ALL
  For [AXX] Where CODFIC="PBDUICONFD" & ZONE="DES" & IDENT1=PBDUICONF.LINES(A_N2).LEG & IDENT2=num$(PBDUICONF.LINES(A_N2).LIN)
   Call ASETTEXTRA(PBDUICONF.LINES(A_N2).AXX,PBDUICONF.LINES(A_N2).AllocGrp(),"DES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
   PBDUICONF.LINES(A_N2).AXX(maxtab(PBDUICONF.LINES(A_N2).AXX)).FLG = 0
  Next AXX
  If !len(fmet PBDUICONF.LINES(A_N2).AGETTEXTRA("DES"))
   Call ASETTEXTRA(PBDUICONF.LINES(A_N2).AXX,PBDUICONF.LINES(A_N2).AllocGrp(),"DES",
& fmet PBDUICONF.LINES(A_N2).AGETTEXTRALAN("DES",PBDUICONF.LINES(A_N2).ACTX.AFOLD.ALANGDEF),
& PBDUICONF.LINES(A_N2).ACTX.LAN) From ASYRSUB
  Endif
  [L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF.LINES(A_N2).ASETATTRIBUTE("LEG","$namProParent","LEG"))
 Next PBDUID
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet PBDUICONF.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



