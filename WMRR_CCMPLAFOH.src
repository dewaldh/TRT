#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan-Forecasts
# Supervisor
## CRUD-CLASSE ## CCMPLAFOH
# 2018-08-27 13:12:32 917


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPFOH [CCMIFOH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMPLAFOH") From ASYRCOM : Endif
Local Instance CCMPLAFOH Using R_CCMPLAFOH

If !SILENCE : Call TRACE("3 --> New Instance R_CCMPLAFOH") From ASYRCOM : Endif
CCMPLAFOH = NewInstance R_CCMPLAFOH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMIFOH_]CCMIFOH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPFOH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAFOH.AREAD([CCMIFOH_]CRID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMPLAFOH.CCMIFOH.CRID ="-num$(CCMPLAFOH.CCMIFOH.CRID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMPLAFOH.CCMIFOH.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMPLAFOH.CCMIFOH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMIFOH_]
FreeGroup CCMPLAFOH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMPLAFOH,ACLE,ASTATUS,_ETAG)
Variable Instance CCMPLAFOH Using R_CCMPLAFOH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File CCMIMPFOH [CCMIFOH]
Default File [F:CCMIFOH]
Read [F:CCMIFOH]CCMIFOH0 = [L]_CRID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMIFOH]UPDTICK)>0
 [L]_ETAG = num$([F:CCMIFOH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMPLAFOH,ACLE,ASTATUS)
Variable Instance CCMPLAFOH Using R_CCMPLAFOH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAFOH.AREAD([L]_CRID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMPLAFOH,_CRID,ASTATUS)
Variable Instance CCMPLAFOH Using R_CCMPLAFOH
Value Char _CRID
Variable Integer ASTATUS

If CCMPLAFOH = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLAFOH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMPLAFOH.APARENT=null
 [L]A_I = CCMPLAFOH.freeSnapshot
 CCMPLAFOH.snapshotEnabled = 0
 CCMPLAFOH.setAccessorEnabled = 0
Endif

If fmet CCMPLAFOH.ACTX.AGETAFCRIGHT(CCMPLAFOH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMIFOH]
Read [F:CCMIFOH]CCMIFOH0 = [L]_CRID
If fstat
[L]A_ERROR = [L]_CRID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMPLAFOH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMPLAFOH.ACTX.AGETAFCRIGHTR(CCMPLAFOH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMPLAFOH.ACTX.ASTACRITROLE(CCMPLAFOH,[L]_CRID
& ,"CCM","CCMIFOH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAFOH.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMPLAFOH.CCMIFOH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAFOH.CCMIFOH.AREAD([L]_CRID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAFOH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMPLAFOH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAFOH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMPLAFOH.APARENT=null
 CCMPLAFOH.snapshotEnabled = 1
 CCMPLAFOH.setAccessorEnabled = 1
Endif
LogicClose File [CCMIFOH]
End



