#<AdxTL>@(#)0.0.0.0 $Revision$Class User parameters
# Supervisor
## ACLA-CLASSE ## ADOPARAUS
# 2018-08-27 12:19:56 488


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CHAPITRE Chapter ( Field Miscellaneous table number)
####################################################################

$SET_CHAPITRE
If [L]_AOLDVAL<>this.CHAPITRE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CHAPITRE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CHAPITRE
 Gosub PROPAGATE_CHAPITRE
Endif
Return

$INIT_CHAPITRE
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CHAPITRE"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"CHAPITRE",this.CHAPITRE,901)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CHAPITRE
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CHAPITRE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CHAPITRE              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CHAPITRE              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CHAPITRE
[L]CURPRO = "CHAPITRE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CHAPITRE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CHAPITRE
[L]CURPRO = "CHAPITRE"
If vireblc(this.CHAPITRE,2)<>vireblc(format$("K:20B",this.CHAPITRE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CHAPITRE
[L]CURPRO = "CHAPITRE"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"CHAPITRE",this.CHAPITRE,901,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CHAPITRE
[L]CURPRO = "CHAPITRE"
Return

$PROPAGATE_CHAPITRE
this.isReadonly = 0
[L]CURPRO = "CHAPITRE"
Gosub _LNKPRO_CHAPITRE
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CHAPITRE
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CHAPITRE"
$_LNKPRO_CHAPITRE
If vireblc(this.CHAPITRE,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 901;this.CHAPITRE
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CHAPITRE","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CHAPITRE","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return

$_ALOADATTRIBUTE_CHAPITRE
[L]ASTATUS = fmet this.ASETATTRIBUTE("CHAPITRE","$isMandatory","true")
Return


####################################################################
# 2 : PARAM Description ( Field ADP 10)
####################################################################

$SET_PARAM
If [L]_AOLDVAL<>this.PARAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARAM
 Gosub PROPAGATE_PARAM
Endif
Return

$INIT_PARAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "PARAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "PARAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARAM                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARAM                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARAM
[L]CURPRO = "PARAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARAM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARAM
[L]CURPRO = "PARAM"
If vireblc(this.PARAM,2)<>vireblc(format$("K:10B",this.PARAM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PARAM
[L]CURPRO = "PARAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARAM
[L]CURPRO = "PARAM"
Return

$PROPAGATE_PARAM
this.isReadonly = 0
[L]CURPRO = "PARAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "PARAM"
$_LNKPRO_PARAM
Return

$_ALOADATTRIBUTE_PARAM
[L]ASTATUS = fmet this.ASETATTRIBUTE("PARAM","$isMandatory","true")
Return


####################################################################
# 3 : GRPPAR Group ( Field Miscellaneous table number)
####################################################################

$SET_GRPPAR
If [L]_AOLDVAL<>this.GRPPAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GRPPAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GRPPAR
 Gosub PROPAGATE_GRPPAR
Endif
Return

$INIT_GRPPAR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "GRPPAR"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"GRPPAR",this.GRPPAR,903)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_GRPPAR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "GRPPAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GRPPAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GRPPAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GRPPAR
[L]CURPRO = "GRPPAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.GRPPAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GRPPAR
[L]CURPRO = "GRPPAR"
If vireblc(this.GRPPAR,2)<>vireblc(format$("K:20B",this.GRPPAR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_GRPPAR
[L]CURPRO = "GRPPAR"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"GRPPAR",this.GRPPAR,903,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GRPPAR
[L]CURPRO = "GRPPAR"
Return

$PROPAGATE_GRPPAR
this.isReadonly = 0
[L]CURPRO = "GRPPAR"
Gosub _LNKPRO_GRPPAR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GRPPAR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "GRPPAR"
$_LNKPRO_GRPPAR
If vireblc(this.GRPPAR,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 903;this.GRPPAR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("GRPPAR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("GRPPAR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return

$_ALOADATTRIBUTE_GRPPAR
[L]ASTATUS = fmet this.ASETATTRIBUTE("GRPPAR","$isMandatory","true")
Return


####################################################################
# 4 : NAM Description ( Field ATX)
####################################################################

$GET_NAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NAM"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_NAM
If [L]_AOLDVAL<>this.NAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NAM
 Gosub PROPAGATE_NAM
Endif
Return

$INIT_NAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NAM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NAM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NAM
[L]CURPRO = "NAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NAM
[L]CURPRO = "NAM"
Return

$_AOTHERS_NAM
[L]CURPRO = "NAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NAM
[L]CURPRO = "NAM"
Return

$PROPAGATE_NAM
this.isReadonly = 0
[L]CURPRO = "NAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NAM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NAM"
$_LNKPRO_NAM
Return


####################################################################
# 5 : CODACT Activity code ( Field ACV 5)
####################################################################

$SET_CODACT
If [L]_AOLDVAL<>this.CODACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODACT
 Gosub PROPAGATE_CODACT
Endif
Return

$INIT_CODACT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CODACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODACT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CODACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODACT
[L]CURPRO = "CODACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODACT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>vireblc(format$("KTD:5B",this.CODACT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACV.ACTRLREF(this,"CODACT",this.CODACT,this.CODACT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODACT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODACT
[L]CURPRO = "CODACT"
Return

$PROPAGATE_CODACT
this.isReadonly = 0
[L]CURPRO = "CODACT"
Gosub _LNKPRO_CODACT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODACT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CODACT"
$_LNKPRO_CODACT
If vireblc(this.CODACT,2)<>""
 # Link ACTIV
 Local File ACTIV [WACV]
 Read [F:WACV]CODACT = this.CODACT
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WACV]LIBACT & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODACT","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WACV]
Endif
Return


####################################################################
# 6 : TYPVAL Value type ( Field Local menu number 11)
####################################################################

$SET_TYPVAL
If [L]_AOLDVAL<>this.TYPVAL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPVAL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPVAL
 Gosub PROPAGATE_TYPVAL
Endif
Return

$INIT_TYPVAL
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "TYPVAL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPVAL=0 and fmet this.AGETATTRIBUTE("TYPVAL","$isMandatory")="true"
 this.TYPVAL = 1
Endif
Return
 
$CONTROL_TYPVAL
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "TYPVAL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPVAL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPVAL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPVAL
[L]CURPRO = "TYPVAL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPVAL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPVAL
[L]CURPRO = "TYPVAL"
If this.TYPVAL<0 or this.TYPVAL>len(mess(0,11,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"11 ->"-num$(this.TYPVAL)-mess(99,123,1)):  Return : # Local menu "11 -> Invalid option
Endif
Return

$_AOTHERS_TYPVAL
[L]CURPRO = "TYPVAL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPVAL
[L]CURPRO = "TYPVAL"
Return

$PROPAGATE_TYPVAL
this.isReadonly = 0
[L]CURPRO = "TYPVAL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPVAL
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "TYPVAL"
$_LNKPRO_TYPVAL
Return


####################################################################
# 7 : MODIF Changeable ( Field Local menu number 1)
####################################################################

$SET_MODIF
If [L]_AOLDVAL<>this.MODIF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODIF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODIF
 Gosub PROPAGATE_MODIF
Endif
Return

$INIT_MODIF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "MODIF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MODIF=0 and fmet this.AGETATTRIBUTE("MODIF","$isMandatory")="true"
 this.MODIF = 1
Endif
Return
 
$CONTROL_MODIF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "MODIF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODIF                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODIF                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODIF
[L]CURPRO = "MODIF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODIF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODIF
[L]CURPRO = "MODIF"
If this.MODIF<0 or this.MODIF>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MODIF)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MODIF
[L]CURPRO = "MODIF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODIF
[L]CURPRO = "MODIF"
Return

$PROPAGATE_MODIF
this.isReadonly = 0
[L]CURPRO = "MODIF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODIF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "MODIF"
$_LNKPRO_MODIF
Return


####################################################################
# 8 : NOLIB Local menu no. ( Field MNL 0)
####################################################################

$SET_NOLIB
If [L]_AOLDVAL<>this.NOLIB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NOLIB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NOLIB
 Gosub PROPAGATE_NOLIB
Endif
Return

$INIT_NOLIB
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NOLIB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NOLIB
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NOLIB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NOLIB                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NOLIB                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NOLIB
[L]CURPRO = "NOLIB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NOLIB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NOLIB
[L]CURPRO = "NOLIB"
Return

$_AOTHERS_NOLIB
[L]CURPRO = "NOLIB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NOLIB
[L]CURPRO = "NOLIB"
Return

$PROPAGATE_NOLIB
this.isReadonly = 0
[L]CURPRO = "NOLIB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NOLIB
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NOLIB"
$_LNKPRO_NOLIB
Return


####################################################################
# 9 : NIVDEF Definition level ( Field Local menu number 987)
####################################################################

$SET_NIVDEF
If [L]_AOLDVAL<>this.NIVDEF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NIVDEF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NIVDEF
 Gosub PROPAGATE_NIVDEF
Endif
Return

$INIT_NIVDEF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NIVDEF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.NIVDEF=0 and fmet this.AGETATTRIBUTE("NIVDEF","$isMandatory")="true"
 this.NIVDEF = 1
Endif
Return
 
$CONTROL_NIVDEF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NIVDEF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NIVDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NIVDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NIVDEF
[L]CURPRO = "NIVDEF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NIVDEF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NIVDEF
[L]CURPRO = "NIVDEF"
If this.NIVDEF<0 or this.NIVDEF>len(mess(0,987,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"987 ->"-num$(this.NIVDEF)-mess(99,123,1)):  Return : # Local menu "987 -> Invalid option
Endif
Return

$_AOTHERS_NIVDEF
[L]CURPRO = "NIVDEF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NIVDEF
[L]CURPRO = "NIVDEF"
Return

$PROPAGATE_NIVDEF
this.isReadonly = 0
[L]CURPRO = "NIVDEF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NIVDEF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NIVDEF"
$_LNKPRO_NIVDEF
Return


####################################################################
# 11 : NBVAL Number of values ( Field C 2)
####################################################################

$SET_NBVAL
If [L]_AOLDVAL<>this.NBVAL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBVAL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBVAL
 Gosub PROPAGATE_NBVAL
Endif
Return

$INIT_NBVAL
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NBVAL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBVAL
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NBVAL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBVAL                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBVAL                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBVAL
[L]CURPRO = "NBVAL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBVAL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBVAL
[L]CURPRO = "NBVAL"
Return

$_AOTHERS_NBVAL
[L]CURPRO = "NBVAL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBVAL
[L]CURPRO = "NBVAL"
Return

$PROPAGATE_NBVAL
this.isReadonly = 0
[L]CURPRO = "NBVAL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBVAL
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "NBVAL"
$_LNKPRO_NBVAL
Return


####################################################################
# 12 : VALFLG Off value ( Field Local menu number 1)
####################################################################

$SET_VALFLG
If [L]_AOLDVAL<>this.VALFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALFLG
 Gosub PROPAGATE_VALFLG
Endif
Return

$INIT_VALFLG
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "VALFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VALFLG=0 and fmet this.AGETATTRIBUTE("VALFLG","$isMandatory")="true"
 this.VALFLG = 1
Endif
Return
 
$CONTROL_VALFLG
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "VALFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALFLG
[L]CURPRO = "VALFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VALFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALFLG
[L]CURPRO = "VALFLG"
If this.VALFLG<0 or this.VALFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.VALFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_VALFLG
[L]CURPRO = "VALFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALFLG
[L]CURPRO = "VALFLG"
Return

$PROPAGATE_VALFLG
this.isReadonly = 0
[L]CURPRO = "VALFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALFLG
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "VALFLG"
$_LNKPRO_VALFLG
Return


####################################################################
# 13 : OBJET Object ( Field AOB 8)
####################################################################

$SET_OBJET
If [L]_AOLDVAL<>this.OBJET
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OBJET
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OBJET
 Gosub PROPAGATE_OBJET
Endif
Return

$INIT_OBJET
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "OBJET"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OBJET
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "OBJET"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OBJET                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OBJET                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OBJET
[L]CURPRO = "OBJET"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.OBJET,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OBJET
[L]CURPRO = "OBJET"
If vireblc(this.OBJET,2)<>vireblc(format$("KTD:8B",this.OBJET),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_OBJET
[L]CURPRO = "OBJET"
If vireblc(this.OBJET,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAOB.ACTRLREF(this,"OBJET",this.OBJET,this.OBJET,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.OBJET<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OBJET
[L]CURPRO = "OBJET"
Return

$PROPAGATE_OBJET
this.isReadonly = 0
[L]CURPRO = "OBJET"
Gosub _LNKPRO_OBJET
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OBJET
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "OBJET"
$_LNKPRO_OBJET
If vireblc(this.OBJET,2)<>""
 # Link AOBJET
 Local File AOBJET [WAOB]
 Read [F:WAOB]ABREV = this.OBJET
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WAOB]LIBSHO & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("OBJET","$title",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WAOB]LIBEL & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("OBJET","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WAOB]
Endif
Return


####################################################################
# 14 : SUPP Description ( Field A 10)
####################################################################

$SET_SUPP
If [L]_AOLDVAL<>this.SUPP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SUPP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SUPP
 Gosub PROPAGATE_SUPP
Endif
Return

$INIT_SUPP
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "SUPP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SUPP
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "SUPP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SUPP                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SUPP                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SUPP
[L]CURPRO = "SUPP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SUPP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SUPP
[L]CURPRO = "SUPP"
Return

$_AOTHERS_SUPP
[L]CURPRO = "SUPP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SUPP
[L]CURPRO = "SUPP"
Return

$PROPAGATE_SUPP
this.isReadonly = 0
[L]CURPRO = "SUPP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SUPP
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "SUPP"
$_LNKPRO_SUPP
Return


####################################################################
# 15 : TRAIT Processing ( Field ADC 30)
####################################################################

$SET_TRAIT
If [L]_AOLDVAL<>this.TRAIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRAIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRAIT
 Gosub PROPAGATE_TRAIT
Endif
Return

$INIT_TRAIT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "TRAIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRAIT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "TRAIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRAIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRAIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRAIT
[L]CURPRO = "TRAIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TRAIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRAIT
[L]CURPRO = "TRAIT"
If vireblc(this.TRAIT,2)<>vireblc(format$("KTD:30X",this.TRAIT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TRAIT
[L]CURPRO = "TRAIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRAIT
[L]CURPRO = "TRAIT"
Return

$PROPAGATE_TRAIT
this.isReadonly = 0
[L]CURPRO = "TRAIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRAIT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "TRAIT"
$_LNKPRO_TRAIT
Return


####################################################################
# 16 : SELOPT Selection options ( Field A 20)
####################################################################

$SET_SELOPT
If [L]_AOLDVAL<>this.SELOPT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SELOPT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SELOPT
 Gosub PROPAGATE_SELOPT
Endif
Return

$INIT_SELOPT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "SELOPT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SELOPT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "SELOPT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SELOPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SELOPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SELOPT
[L]CURPRO = "SELOPT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SELOPT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SELOPT
[L]CURPRO = "SELOPT"
Return

$_AOTHERS_SELOPT
[L]CURPRO = "SELOPT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SELOPT
[L]CURPRO = "SELOPT"
Return

$PROPAGATE_SELOPT
this.isReadonly = 0
[L]CURPRO = "SELOPT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SELOPT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "SELOPT"
$_LNKPRO_SELOPT
Return


####################################################################
# 17 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 18 : UPDUSR Change user ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 19 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 20 : CREUSR Creation user ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 21 : AUSMODIF Modify by user ( Field Local menu number 1)
####################################################################

$SET_AUSMODIF
If [L]_AOLDVAL<>this.AUSMODIF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUSMODIF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUSMODIF
 Gosub PROPAGATE_AUSMODIF
Endif
Return

$INIT_AUSMODIF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "AUSMODIF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUSMODIF=0 and fmet this.AGETATTRIBUTE("AUSMODIF","$isMandatory")="true"
 this.AUSMODIF = 1
Endif
Return
 
$CONTROL_AUSMODIF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "AUSMODIF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUSMODIF              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUSMODIF              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUSMODIF
[L]CURPRO = "AUSMODIF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUSMODIF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUSMODIF
[L]CURPRO = "AUSMODIF"
If this.AUSMODIF<0 or this.AUSMODIF>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUSMODIF)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUSMODIF
[L]CURPRO = "AUSMODIF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUSMODIF
[L]CURPRO = "AUSMODIF"
Return

$PROPAGATE_AUSMODIF
this.isReadonly = 0
[L]CURPRO = "AUSMODIF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUSMODIF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "AUSMODIF"
$_LNKPRO_AUSMODIF
Return


####################################################################
# 22 : RANG Sequence ( Field L 8)
####################################################################

$SET_RANG
If [L]_AOLDVAL<>this.RANG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RANG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RANG
 Gosub PROPAGATE_RANG
Endif
Return

$INIT_RANG
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "RANG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RANG
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "RANG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RANG                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RANG                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RANG
[L]CURPRO = "RANG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RANG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RANG
[L]CURPRO = "RANG"
Return

$_AOTHERS_RANG
[L]CURPRO = "RANG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RANG
[L]CURPRO = "RANG"
Return

$PROPAGATE_RANG
this.isReadonly = 0
[L]CURPRO = "RANG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RANG
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "RANG"
$_LNKPRO_RANG
Return


####################################################################
# 23 : ACS Access code ( Field ACS 10)
####################################################################

$SET_ACS
If [L]_AOLDVAL<>this.ACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACS
 Gosub PROPAGATE_ACS
Endif
Return

$INIT_ACS
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "ACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACS
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "ACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACS
[L]CURPRO = "ACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>vireblc(format$("KTD:10B",this.ACS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACS.ACTRLREF(this,"ACS",this.ACS,this.ACS,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACS
[L]CURPRO = "ACS"
Return

$PROPAGATE_ACS
this.isReadonly = 0
[L]CURPRO = "ACS"
Gosub _LNKPRO_ACS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACS
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "ACS"
$_LNKPRO_ACS
If vireblc(this.ACS,2)<>""
 # Link ACCCOD
 Local File ACCCOD [WACS]
 Read [F:WACS]ACS0 = this.ACS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ACCCOD" & ZONE="DESACC" & IDENT1=[F:WACS]CODACC & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WACS]
Endif
Return


####################################################################
# 24 : VALDEF Folder value ( Field Local menu number 1)
####################################################################

$SET_VALDEF
If [L]_AOLDVAL<>this.VALDEF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALDEF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALDEF
 Gosub PROPAGATE_VALDEF
Endif
Return

$INIT_VALDEF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "VALDEF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VALDEF=0 and fmet this.AGETATTRIBUTE("VALDEF","$isMandatory")="true"
 this.VALDEF = 1
Endif
Return
 
$CONTROL_VALDEF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "VALDEF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALDEF
[L]CURPRO = "VALDEF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VALDEF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALDEF
[L]CURPRO = "VALDEF"
If this.VALDEF<0 or this.VALDEF>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.VALDEF)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_VALDEF
[L]CURPRO = "VALDEF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALDEF
[L]CURPRO = "VALDEF"
Return

$PROPAGATE_VALDEF
this.isReadonly = 0
[L]CURPRO = "VALDEF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALDEF
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "VALDEF"
$_LNKPRO_VALDEF
Return


####################################################################
# 25 : CNDMOD Condition ( Field AFR 250)
####################################################################

$SET_CNDMOD
If [L]_AOLDVAL<>this.CNDMOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CNDMOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CNDMOD
 Gosub PROPAGATE_CNDMOD
Endif
Return

$INIT_CNDMOD
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CNDMOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CNDMOD
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CNDMOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CNDMOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CNDMOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CNDMOD
[L]CURPRO = "CNDMOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CNDMOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CNDMOD
[L]CURPRO = "CNDMOD"
Return

$_AOTHERS_CNDMOD
[L]CURPRO = "CNDMOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CNDMOD
[L]CURPRO = "CNDMOD"
Return

$PROPAGATE_CNDMOD
this.isReadonly = 0
[L]CURPRO = "CNDMOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CNDMOD
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CNDMOD"
$_LNKPRO_CNDMOD
Return


####################################################################
# 26 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 27 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 28 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ADOPARAUS
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return




