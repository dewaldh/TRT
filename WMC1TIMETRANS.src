#<AdxTL>@(#)0.0.0.0 $Revision$Class Change to daylight saving time
# Supervisor
## ACLA-CLASSE ## TIMETRANS
# 2018-08-27 12:54:15 708


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : COD Code ( Field TTR 30)
####################################################################

$SET_COD
If [L]_AOLDVAL<>this.COD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COD
 Gosub PROPAGATE_COD
Endif
Return

$INIT_COD
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "COD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COD
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "COD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COD
[L]CURPRO = "COD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COD
[L]CURPRO = "COD"
If vireblc(this.COD,2)<>vireblc(format$("K:30X",this.COD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COD
[L]CURPRO = "COD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COD
[L]CURPRO = "COD"
Return

$PROPAGATE_COD
this.isReadonly = 0
[L]CURPRO = "COD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COD
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "COD"
$_LNKPRO_COD
Return

$_ALOADATTRIBUTE_COD
[L]ASTATUS = fmet this.ASETATTRIBUTE("COD","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field AX3)
####################################################################

$GET_DES
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DES"
this.DES = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(fmet this.AGETTEXTRA("DES"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DES")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DES)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : FXDFLG Fixed date ( Field Local menu number 1)
####################################################################

$SET_FXDFLG
If [L]_AOLDVAL<>this.FXDFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FXDFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FXDFLG
 Gosub PROPAGATE_FXDFLG
Endif
Return

$INIT_FXDFLG
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "FXDFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FXDFLG=0 and fmet this.AGETATTRIBUTE("FXDFLG","$isMandatory")="true"
 this.FXDFLG = 1
Endif
Return
 
$CONTROL_FXDFLG
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "FXDFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FXDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FXDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FXDFLG
[L]CURPRO = "FXDFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FXDFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FXDFLG
[L]CURPRO = "FXDFLG"
If this.FXDFLG<0 or this.FXDFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FXDFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FXDFLG
[L]CURPRO = "FXDFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FXDFLG
[L]CURPRO = "FXDFLG"
Return

$PROPAGATE_FXDFLG
this.isReadonly = 0
[L]CURPRO = "FXDFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FXDFLG
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "FXDFLG"
$_LNKPRO_FXDFLG
Return


####################################################################
# 4 : DDAY Day ( Field C 2)
####################################################################

$SET_DDAY
If [L]_AOLDVAL<>this.DDAY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DDAY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DDAY
 Gosub PROPAGATE_DDAY
Endif
Return

$INIT_DDAY
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DDAY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DDAY
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DDAY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DDAY                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DDAY                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DDAY
[L]CURPRO = "DDAY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DDAY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DDAY
[L]CURPRO = "DDAY"
Return

$_AOTHERS_DDAY
[L]CURPRO = "DDAY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DDAY
[L]CURPRO = "DDAY"
Return

$PROPAGATE_DDAY
this.isReadonly = 0
[L]CURPRO = "DDAY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DDAY
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DDAY"
$_LNKPRO_DDAY
Return


####################################################################
# 5 : DAYWEE Day of the week ( Field Local menu number 9833)
####################################################################

$SET_DAYWEE
If [L]_AOLDVAL<>this.DAYWEE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DAYWEE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DAYWEE
 Gosub PROPAGATE_DAYWEE
Endif
Return

$INIT_DAYWEE
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DAYWEE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DAYWEE=0 and fmet this.AGETATTRIBUTE("DAYWEE","$isMandatory")="true"
 this.DAYWEE = 1
Endif
Return
 
$CONTROL_DAYWEE
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DAYWEE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DAYWEE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DAYWEE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DAYWEE
[L]CURPRO = "DAYWEE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DAYWEE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DAYWEE
[L]CURPRO = "DAYWEE"
If this.DAYWEE<0 or this.DAYWEE>len(mess(0,9833,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"9833 ->"-num$(this.DAYWEE)-mess(99,123,1)):  Return : # Local menu "9833 -> Invalid option
Endif
Return

$_AOTHERS_DAYWEE
[L]CURPRO = "DAYWEE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DAYWEE
[L]CURPRO = "DAYWEE"
Return

$PROPAGATE_DAYWEE
this.isReadonly = 0
[L]CURPRO = "DAYWEE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DAYWEE
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "DAYWEE"
$_LNKPRO_DAYWEE
Return


####################################################################
# 6 : MON Month ( Field Local menu number 9001)
####################################################################

$SET_MON
If [L]_AOLDVAL<>this.MON
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MON
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MON
 Gosub PROPAGATE_MON
Endif
Return

$INIT_MON
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "MON"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MON=0 and fmet this.AGETATTRIBUTE("MON","$isMandatory")="true"
 this.MON = 1
Endif
Return
 
$CONTROL_MON
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "MON"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MON                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MON                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MON
[L]CURPRO = "MON"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MON=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MON
[L]CURPRO = "MON"
If this.MON<0 or this.MON>len(mess(0,9001,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"9001 ->"-num$(this.MON)-mess(99,123,1)):  Return : # Local menu "9001 -> Invalid option
Endif
Return

$_AOTHERS_MON
[L]CURPRO = "MON"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MON
[L]CURPRO = "MON"
Return

$PROPAGATE_MON
this.isReadonly = 0
[L]CURPRO = "MON"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MON
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "MON"
$_LNKPRO_MON
Return


####################################################################
# 7 : TIMDAY Time ( Field TIH 0)
####################################################################

$SET_TIMDAY
If [L]_AOLDVAL<>this.TIMDAY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TIMDAY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TIMDAY
 Gosub PROPAGATE_TIMDAY
Endif
Return

$INIT_TIMDAY
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "TIMDAY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TIMDAY
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "TIMDAY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TIMDAY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TIMDAY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TIMDAY
[L]CURPRO = "TIMDAY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TIMDAY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TIMDAY
[L]CURPRO = "TIMDAY"
Return

$_AOTHERS_TIMDAY
[L]CURPRO = "TIMDAY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TIMDAY
[L]CURPRO = "TIMDAY"
Return

$PROPAGATE_TIMDAY
this.isReadonly = 0
[L]CURPRO = "TIMDAY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TIMDAY
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "TIMDAY"
$_LNKPRO_TIMDAY
Return


####################################################################
# 8 : WEE Week ( Field C 1)
####################################################################

$SET_WEE
If [L]_AOLDVAL<>this.WEE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_WEE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.WEE
 Gosub PROPAGATE_WEE
Endif
Return

$INIT_WEE
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "WEE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_WEE
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "WEE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_WEE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_WEE                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_WEE
[L]CURPRO = "WEE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.WEE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_WEE
[L]CURPRO = "WEE"
Return

$_AOTHERS_WEE
[L]CURPRO = "WEE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_WEE
[L]CURPRO = "WEE"
Return

$PROPAGATE_WEE
this.isReadonly = 0
[L]CURPRO = "WEE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_WEE
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "WEE"
$_LNKPRO_WEE
Return


####################################################################
# 9 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 10 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 11 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 12 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 13 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0TIMETRANS
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




