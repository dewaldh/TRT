#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHEXPENSES EXPENSES
# 2018-08-27 12:31:13 658

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","EXPENSES","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File EXPENSES [EXS]
Local File EXPENSES [EXS_]
Local Char KEY_EXS(120)(1..3)
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [EXS]
LogicClose File [EXS_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [EXS] With
& [EXS_]EXS0=[EXS]CLB;[EXS]DATEXS;[EXS]NBREXS
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [EXS] With
& [EXS_]EXS0=[EXS]CLB;[EXS]DATEXS;[EXS]NBREXS
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
#Create a new instance
INS = NewInstance C_EXPENSES(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

CJ1=1
For CI1 = 0 To dim([F:EXS]ACC)-1
#Create a new instance
INS.CODEXPENS(CJ1) = NewInstance C_EXPENSES_CODEXPENS(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.CODEXPENS(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE

SetInstance INS With [F:EXS]
FINS = 1
Local Integer ACC_MAX:ACC_MAX0
CJ1=1
For CI1 = 0 To dim([F:EXS]ACC)-1
 Break ([F:EXS]ACC(CI1)="")
 ACC_MAX+=1
 INS.CODEXPENS(CJ1).ACC=[F:EXS]ACC(CI1)
 CJ1+=1
Next CI1
[L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
Gosub ASEARCH_TO_JSON
Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"CLB":'             +'"'+escJson(INS.CLB)+'"'
Append ASND.DATA ,',"DATEXS":'          + func ASYRSRH.DATE_TO_SYR(INS.DATEXS)
Append ASND.DATA ,',"NBREXS":'          + num$(INS.NBREXS)
Append ASND.DATA ,',"CODEXP":'         +'"'+escJson(INS.CODEXP)+'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"AMTPAY":'          + num$(INS.AMTPAY)
Append ASND.DATA ,',"VISA":'           +'"'+escJson(INS.VISA)+'"'

if(INS.STA) = 2
 Append ASND.DATA , ',"STA":'            +"true"
else
 Append ASND.DATA , ',"STA":'            +"false"
endif
IS1=""
CJ1=1
Append ASND.DATA ,',"CODEXPENS":['
For CI1=1 To ACC_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"ACC":'             +'"'+escJson(INS.CODEXPENS(CJ1).ACC)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:EXS]CLB"
ASTDKEY += ";[F:EXS]DATEXS"
ASTDKEY += ";[F:EXS]NBREXS"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From EXPENSES_CSTD
Gosub METHODS From EXPENSES_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="EXPENSES" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"EXPENSES")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"EXPENSES")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,51577)+'"'
Append WCLOB,',"$url":"{$baseUrl}/EXPENSES'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{FCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,51577)+' {$key}"'
Append WCLOB,',"$key":"{CLB}~{DATEXS}~{NBREXS}"'
Append WCLOB,',"$url":"{$baseUrl}/EXPENSES('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'EXPENSES.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"CLB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,16058)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"DATEXS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,212)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"NBREXS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,41)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-integer"'
Append WCLOB,"}"
Append WCLOB,',"CODEXP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,41193)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"AMTPAY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5265)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-decimal"'
Append WCLOB,',"$maxLength":6.2'
Append WCLOB,"}"
Append WCLOB,',"VISA":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,23232)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"STA":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1179)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-choice"'
Append WCLOB,',"$value":{'
Append WCLOB,'"$type":"application/x-integer"'
Append WCLOB,',"$enum":['
Append WCLOB,'{'
Append WCLOB,'"$value":1'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"2806.1")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":2'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"2806.2")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":3'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"2806.3")+'"'
Append WCLOB,"}"
Append WCLOB,"]"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"CODEXPENS":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":10'
Append WCLOB,',"$maxItems":10'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"ACC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3956)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/EXPENSES('+"'"+'{$key}'+"'"+')?representation=EXPENSES.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHEXPENSESB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHEXPENSESB
End RES


