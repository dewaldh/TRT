#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoice number definition
# Supervisor
## CRUD-CLASSE ## BSIINVDIO
# 2018-08-27 12:27:13 120

Gosub TEST From WMCR_BSIINVDIO : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CPY,FCY,FILFMT)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# BSIINVDIO : BSIINVDIO
# BSIINVDIOD : BSIINVDIO BSIINVDIOD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet BSIINVDIO._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = BSIINVDIO.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(BSIINVDIO.ACTX.AFOLDER,nomap,"")>0
 Local File BSIINVDIO [BSIIND]
 Local File BSIINVDIOD [BSIINDD]
 Local File ATEXTRA [AXX]
Else
 Local File =BSIINVDIO.ACTX.AFOLDER+".BSIINVDIO" [BSIIND]
 Local File =BSIINVDIO.ACTX.AFOLDER+".BSIINVDIOD" [BSIINDD]
 Local File =BSIINVDIO.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [BSIIND] With
& [BSIINDD]BSIIND0 = [F:BSIIND]CPY;[F:BSIIND]FCY;[F:BSIIND]FILFMT
& As [LNK_]
Return

############################################################################################
### BSIINVDIO(WBSIIND)
############################################################################################
Funprog  _MAJSQL_BSIINVDIO(WBSIIND)
Variable Instance WBSIIND Using C_BSIINVDIO
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIIND]
If WBSIIND.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIIND) From ASYRSUB
 SetInstance [F:BSIIND] With WBSIIND
 For J=1 To maxtab(WBSIIND.AXX)
  If WBSIIND.AXX(J)<>null & WBSIIND.AXX(J).PRO= "DESAXX" & WBSIIND.AXX(J).FLG>0
   Call MAJTEXTRALAN(WBSIIND,WBSIIND.AXX(J).TEX,"BSIINVDIO","DESAXX",WBSIIND.AXX(J).LAN,WBSIIND.CPYFCY,WBSIIND.FILFMT,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BSIIND]
 If fstat
  Call FSTA("BSIIND",WBSIIND,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIND.updTick = [F:BSIIND]updTick
Elsif WBSIIND.ASTALIN=[V]CST_ALL or WBSIIND.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIIND) From ASYRSUB
 SetInstance [F:BSIIND] With WBSIIND
 For J=1 To maxtab(WBSIIND.AXX)
  If WBSIIND.AXX(J)<>null & WBSIIND.AXX(J).PRO= "DESAXX" & WBSIIND.AXX(J).FLG>0
   Call MAJTEXTRALAN(WBSIIND,WBSIIND.AXX(J).TEX,"BSIINVDIO","DESAXX",WBSIIND.AXX(J).LAN,WBSIIND.CPYFCY,WBSIIND.FILFMT,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIND,"BSIINVDIO")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIIND]BSIIND0 = [F:BSIIND]CPY;[F:BSIIND]FCY;[F:BSIIND]FILFMT
 If fstat
  Call FSTA("BSIIND",WBSIIND,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIND.updTick = [F:BSIIND]updTick
Elsif WBSIIND.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIIND] With WBSIIND
 For J=1 To maxtab(WBSIIND.AXX)
  If WBSIIND.AXX(J)<>null & WBSIIND.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WBSIIND,WBSIIND.AXX(J).TEX,"BSIINVDIO","DESAXX",WBSIIND.AXX(J).LAN,WBSIIND.CPYFCY,WBSIIND.FILFMT,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIND,"BSIINVDIO")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIIND]BSIIND0 = [F:BSIIND]CPY;[F:BSIIND]FCY;[F:BSIIND]FILFMT
 If fstat
  Call FSTA("BSIIND",WBSIIND,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BSIINVDIOD(WBSIINDD)
############################################################################################
Funprog  _MAJSQL_BSIINVDIOD(WBSIINDD)
Variable Instance WBSIINDD Using C_BSIINVDIOD
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIINDD]
If WBSIINDD.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIINDD) From ASYRSUB
 SetInstance [F:BSIINDD] With WBSIINDD
 Write [F:BSIINDD]
 If fstat
  Call FSTA("BSIINDD",WBSIINDD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIINDD.updTick = [F:BSIINDD]updTick
Elsif WBSIINDD.ASTALIN=[V]CST_ALL or WBSIINDD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIINDD) From ASYRSUB
 SetInstance [F:BSIINDD] With WBSIINDD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIINDD,"BSIINVDIOD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIINDD]BSIIND0 = [F:BSIINDD]CPY;[F:BSIINDD]FCY;[F:BSIINDD]FILFMT;[F:BSIINDD]LIN
 If fstat
  Call FSTA("BSIINDD",WBSIINDD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIINDD.updTick = [F:BSIINDD]updTick
Elsif WBSIINDD.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIINDD] With WBSIINDD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIINDD,"BSIINVDIOD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIINDD]BSIIND0 = [F:BSIINDD]CPY;[F:BSIINDD]FCY;[F:BSIINDD]FILFMT;[F:BSIINDD]LIN
 If fstat
  Call FSTA("BSIINDD",WBSIINDD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



