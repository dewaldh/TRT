#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import settings
# Supervisor
## ACLA-CLASSE ## BSIIMPPAR
# 2019-05-09 01:47:36 096

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : VARPRC Maximum amount variance ( Field A 1)
####################################################################
 
$SET_VARPRC
If [L]_AOLDVAL<>this.VARPRC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VARPRC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VARPRC
 Gosub PROPAGATE_VARPRC
Endif
Return

$INIT_VARPRC
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "VARPRC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VARPRC
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "VARPRC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VARPRC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VARPRC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VARPRC
[L]CURPRO = "VARPRC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VARPRC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VARPRC
[L]CURPRO = "VARPRC"
Return

$_AOTHERS_VARPRC
[L]CURPRO = "VARPRC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VARPRC
[L]CURPRO = "VARPRC"
Return

$PROPAGATE_VARPRC
this.isReadonly = 0
[L]CURPRO = "VARPRC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VARPRC
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "VARPRC"
$_LNKPRO_VARPRC
Return


####################################################################
# 2 : VARPRC2 Maximum currency variance ( Field A 1)
####################################################################
 
$SET_VARPRC2
If [L]_AOLDVAL<>this.VARPRC2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VARPRC2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VARPRC2
 Gosub PROPAGATE_VARPRC2
Endif
Return

$INIT_VARPRC2
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "VARPRC2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VARPRC2
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "VARPRC2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VARPRC2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VARPRC2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VARPRC2
[L]CURPRO = "VARPRC2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VARPRC2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VARPRC2
[L]CURPRO = "VARPRC2"
Return

$_AOTHERS_VARPRC2
[L]CURPRO = "VARPRC2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VARPRC2
[L]CURPRO = "VARPRC2"
Return

$PROPAGATE_VARPRC2
this.isReadonly = 0
[L]CURPRO = "VARPRC2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VARPRC2
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "VARPRC2"
$_LNKPRO_VARPRC2
Return


####################################################################
# 3 : CPYCUR Company currency ( Field CUR 3)
####################################################################
 
$SET_CPYCUR
If [L]_AOLDVAL<>this.CPYCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPYCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPYCUR
 Gosub PROPAGATE_CPYCUR
Endif
Return

$INIT_CPYCUR
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "CPYCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPYCUR
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "CPYCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPYCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPYCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPYCUR
[L]CURPRO = "CPYCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CPYCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPYCUR
[L]CURPRO = "CPYCUR"
If vireblc(this.CPYCUR,2)<>vireblc(format$("K:3c",this.CPYCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CPYCUR
[L]CURPRO = "CPYCUR"
If vireblc(this.CPYCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CPYCUR",this.CPYCUR,this.CPYCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CPYCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPYCUR
[L]CURPRO = "CPYCUR"
Return

$PROPAGATE_CPYCUR
this.isReadonly = 0
[L]CURPRO = "CPYCUR"
Gosub _LNKPRO_CPYCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPYCUR
Gosub DECLARE_VAR From WMR0BSIIMPPAR
[L]CURPRO = "CPYCUR"
$_LNKPRO_CPYCUR
If vireblc(this.CPYCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CPYCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CPYCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return




