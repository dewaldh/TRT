#<AdxTL>@(#)0.0.0.0 $Revision$Class Delivery methods
# Supervisor
## CRUD-CLASSE ## TABMODELIV
# 2018-08-27 12:52:02 702


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABMODELIV [TMD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABMODELIV") From ASYRCOM : Endif
Local Instance TABMODELIV Using C_TABMODELIV

If !SILENCE : Call TRACE("3 --> New Instance C_TABMODELIV") From ASYRCOM : Endif
TABMODELIV = NewInstance C_TABMODELIV AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TMD_]TMD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABMODELIV") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABMODELIV.AREAD([TMD_]MDL))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABMODELIV.MDL ="-num$(TABMODELIV.MDL)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABMODELIV.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABMODELIV.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TMD_]
FreeGroup TABMODELIV
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABMODELIV,ACLE,ASTATUS,_ETAG)
Variable Instance TABMODELIV Using C_TABMODELIV
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _MDL(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_MDL = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABMODELIV [TMD]
Default File [F:TMD]
Read [F:TMD]TMD0 = [L]_MDL
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TMD]UPDTICK)>0
 [L]_ETAG = num$([F:TMD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABMODELIV,ACLE,ASTATUS)
Variable Instance TABMODELIV Using C_TABMODELIV
Value Char ACLE
Variable Integer ASTATUS
Local Char _MDL(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_MDL = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABMODELIV.AREAD([L]_MDL))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABMODELIV,_MDL,ASTATUS)
Variable Instance TABMODELIV Using C_TABMODELIV
Value Char _MDL
Variable Integer ASTATUS

If TABMODELIV = null : End : Endif

Gosub AVARIABLES From WMC00TABMODELIV
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABMODELIV.APARENT=null
 [L]A_I = TABMODELIV.freeSnapshot
 TABMODELIV.snapshotEnabled = 0
 TABMODELIV.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABMODELIV.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABMODELIV._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABMODELIV.APARENT=null
 TABMODELIV.snapshotEnabled = 1
 TABMODELIV.setAccessorEnabled = 1
Endif
LogicClose File [TMD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABMODELIV._ACTION_PARAM("AREAD_BEFORE",[L]_MDL))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TMD]
Read [F:TMD]TMD0 = [L]_MDL
If fstat
[L]A_ERROR = [L]_MDL
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABMODELIV,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TMD]AUUID)>0 & [F:TMD]AUUID=NullUuid
 [F:TMD]AUUID = getUuid
Endif
SetInstance TABMODELIV With [F:TMD]
TABMODELIV.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet TABMODELIV.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABMODELIV" & ZONE="DESAXX" & IDENT1=TABMODELIV.MDL & IDENT2=""
 Call ASETTEXTRA(TABMODELIV.AXX,TABMODELIV.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABMODELIV.AXX(maxtab(TABMODELIV.AXX)).FLG = 0
Next AXX
If !len(fmet TABMODELIV.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TABMODELIV.AXX,TABMODELIV.AllocGrp(),"DESAXX",
& fmet TABMODELIV.AGETTEXTRALAN("DESAXX",TABMODELIV.ACTX.AFOLD.ALANGDEF),
& TABMODELIV.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABMODELIV" & ZONE="SHOAXX" & IDENT1=TABMODELIV.MDL & IDENT2=""
 Call ASETTEXTRA(TABMODELIV.AXX,TABMODELIV.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABMODELIV.AXX(maxtab(TABMODELIV.AXX)).FLG = 0
Next AXX
If !len(fmet TABMODELIV.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(TABMODELIV.AXX,TABMODELIV.AllocGrp(),"SHOAXX",
& fmet TABMODELIV.AGETTEXTRALAN("SHOAXX",TABMODELIV.ACTX.AFOLD.ALANGDEF),
& TABMODELIV.ACTX.LAN) From ASYRSUB
Endif

Return



