#<AdxTL>@(#)0.0.0.0 $Revision$Class Language table  
# Supervisor
## CRUD-CLASSE ## TABLAN
# 2018-08-27 12:51:50 188

Gosub TEST From WMCR_TABLAN : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,LAN)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TABLAN : TABLAN
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TABLAN._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TABLAN.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TABLAN.ACTX.AFOLDER,nomap,"")>0
 Local File TABLAN [TLA]
 Local File TABLAN [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =TABLAN.ACTX.AFOLDER+".TABLAN" [TLA]
 Local File =TABLAN.ACTX.AFOLDER+".TABLAN" [AAA_]
 Local File =TABLAN.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [TLA] With
& [AAA_]TLA0 = LAN
& As [LNK_]
Return

############################################################################################
### TABLAN(WTLA)
############################################################################################
Funprog  _MAJSQL_TABLAN(WTLA)
Variable Instance WTLA Using C_TABLAN
Local Integer ASTATUS,A_I,A_J
Default File [F:TLA]
If WTLA.ASTALIN=[V]CST_ANEW
 Call INICRE(WTLA) From ASYRSUB
 SetInstance [F:TLA] With WTLA
 For J=1 To maxtab(WTLA.AXX)
  If WTLA.AXX(J)<>null & WTLA.AXX(J).PRO= "INTSHO" & WTLA.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTLA,WTLA.AXX(J).TEX,"TABLAN","INTSHO",WTLA.AXX(J).LAN,WTLA.LAN,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTLA.AXX)
  If WTLA.AXX(J)<>null & WTLA.AXX(J).PRO= "INTDES" & WTLA.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTLA,WTLA.AXX(J).TEX,"TABLAN","INTDES",WTLA.AXX(J).LAN,WTLA.LAN,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TLA]
 If fstat
  Call FSTA("TLA",WTLA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTLA.updTick = [F:TLA]updTick
Elsif WTLA.ASTALIN=[V]CST_ALL or WTLA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTLA) From ASYRSUB
 SetInstance [F:TLA] With WTLA
 For J=1 To maxtab(WTLA.AXX)
  If WTLA.AXX(J)<>null & WTLA.AXX(J).PRO= "INTSHO" & WTLA.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTLA,WTLA.AXX(J).TEX,"TABLAN","INTSHO",WTLA.AXX(J).LAN,WTLA.LAN,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTLA.AXX)
  If WTLA.AXX(J)<>null & WTLA.AXX(J).PRO= "INTDES" & WTLA.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTLA,WTLA.AXX(J).TEX,"TABLAN","INTDES",WTLA.AXX(J).LAN,WTLA.LAN,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTLA,"TABLAN")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TLA]TLA0 = [F:TLA]LAN
 If fstat
  Call FSTA("TLA",WTLA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTLA.updTick = [F:TLA]updTick
Elsif WTLA.ASTALIN=[V]CST_ADEL
 SetInstance [F:TLA] With WTLA
 For J=1 To maxtab(WTLA.AXX)
  If WTLA.AXX(J)<>null & WTLA.AXX(J).PRO= "INTSHO"
   Call SUPTEXTRA(WTLA,WTLA.AXX(J).TEX,"TABLAN","INTSHO",WTLA.AXX(J).LAN,WTLA.LAN,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTLA.AXX)
  If WTLA.AXX(J)<>null & WTLA.AXX(J).PRO= "INTDES"
   Call SUPTEXTRA(WTLA,WTLA.AXX(J).TEX,"TABLAN","INTDES",WTLA.AXX(J).LAN,WTLA.LAN,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTLA,"TABLAN")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TLA]TLA0 = [F:TLA]LAN
 If fstat
  Call FSTA("TLA",WTLA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



