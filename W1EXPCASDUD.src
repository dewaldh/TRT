#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management EXPCASDUD 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:00:37"
A_USER  = "ADMIN"
A_STAMP = "20180828000037"
Return

$TITRES
Chgtzn [M:CAD]TREG With [M]LIBTREG
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask EXPCASDUD [CAD]
Gosub HORODAT
Local Inpbox "EXPCASDUD" From GFONCTION At A_STAMP With A_WINDPREV Mask [CAD] As [SIM_]
Grizo [CAD]5
Grizo [CAD]10
Grizo [CAD]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [CAD]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=17 : X2(0)=96 : Y1(0)=12 : Y2(0)=13
X1(1)=17 : X2(1)=86 : Y1(1)=14 : Y2(1)=15
X1(2)=17 : X2(2)=86 : Y1(2)=16 : Y2(2)=17
Return

$ON_GRPCPY
Onevent CONTROL Call C_GRPCPY(zc) From W1EXPCASDUD
Onevent BEFORE_INPUT Call AS_GRPCPY(zc) From W1EXPCASDUD
Onevent AFTER_CHANGE Gosub AMM_GRPCPY From W1EXPCASDUD
Onevent INIT_AREA Call D_GRPCPY(zc) From W1EXPCASDUD
Return

Subprog D_GRPCPY(VALEUR)
Variable Char    VALEUR()
If varinit([M]GRPCPY,indice)=0
 VALEUR = GDEFSOC
Endif
Gosub _AFF
End

Subprog AS_GRPCPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8582,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_GRPCPY(zc) From W1EXPCASDUD
Onkey   2 Titled GBOUTS Call S_GRPCPY(zc) From W1EXPCASDUD
Onkey 144 Titled GBOUTP Call P_GRPCPY(zc) From W1EXPCASDUD
Onkey 146 Titled GBOUTA Call SA_GRPCPY(zc) From W1EXPCASDUD
Gosub _AFF
End

Subprog C_GRPCPY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "GRPCPY" : GZNUM = 616 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("AGF","C",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "GRPCPY" : GZNUM = 616 : Endif
 If !mkstat
  ## Action CONTALLCPY
  Call CONTALLCPY(VALEUR) From CPTSUB
  If mkstat : GERR = 1 : GZONE = "GRPCPY" : GZNUM = 616 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_GRPCPY
Call AM_GRPCPY(zc)
If !mkstat & GOBJET
 zoncou = "GRPCPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GRPCPY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZGRPCPY)")>indice
 [M]GRPCPY(indice) = VALEUR
 Affzo ZGRPCPY(indice)
Endif
Gosub _AFF
End

Subprog S_GRPCPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AGF"
PARMSK(2) = "C"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_GRPCPY(VALEUR)
Variable Char    VALEUR()
Call OBJET("AGF",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_GRPCPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AGF"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_GRPCPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AGF",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZGRPCPY
Onevent BEFORE_AREA Gosub AV_ZGRPCPY From W1EXPCASDUD
Return

$AV_ZGRPCPY
If clalev([F:AGF])=0 : Local File AGRPFCY [AGF] : Endif
Call LECTURE("AGF",num$([M]GRPCPY(indice)),"") From CONTOBJ
zc = [F:AGF]DES
Gosub _AFF
Return

$ON_TREG
Onevent CONTROL Call C_TREG(zc) From W1EXPCASDUD
Return

Subprog C_TREG(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TREG" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_TREG(VALEUR) From EXPCASDUD
 If mkstat : GERR = 1 : GZONE = "TREG" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$ON_TYPEXP
Onevent CONTROL Call C_TYPEXP(zc) From W1EXPCASDUD
Onevent AFTER_CHANGE Gosub AMM_TYPEXP From W1EXPCASDUD
Onevent INIT_AREA Call D_TYPEXP(zc) From W1EXPCASDUD
Onevent BEFORE_INPUT Call AS_TYPEXP(zc) From W1EXPCASDUD
Return

Subprog D_TYPEXP(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPEXP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TYPEXP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_TYPEXP(VALEUR) From EXPCASDUD
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_TYPEXP
Call AM_TYPEXP(zc)
If !mkstat & GOBJET
 zoncou = "TYPEXP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TYPEXP(VALEUR) From EXPCASDUD
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_VOLFIL
Onevent CONTROL Call C_VOLFIL(zc) From W1EXPCASDUD
Onevent BEFORE_INPUT Call AS_VOLFIL(zc) From W1EXPCASDUD
Return

Subprog AS_VOLFIL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VOLFIL(zc) From W1EXPCASDUD
Gosub _AFF
End

Subprog C_VOLFIL(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "VOLFIL" : GZNUM = 799 : Endif
If !mkstat
 ## Action STD
 Call C_VOLFIL(VALEUR) From EXPCASDUD
 If mkstat : GERR = 1 : GZONE = "VOLFIL" : GZNUM = 799 : Endif
Endif
Gosub _AFF
End

Subprog S_VOLFIL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFICREP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFICREP"
 PARMSK(1) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"DFICREP","SELFICREP","XWDFICREP") From GSAISIE
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_FIC
Return

$ON_TRC
Onevent INIT_AREA Call D_TRC(zc) From W1EXPCASDUD
Onevent BEFORE_INPUT Call AS_TRC(zc) From W1EXPCASDUD
Return

Subprog D_TRC(VALEUR)
Variable Integer VALEUR
If varinit([M]TRC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TRC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


