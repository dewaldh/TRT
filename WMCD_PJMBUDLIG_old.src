#<AdxTL>@(#)0.0.0.0 $Revision$Class Budget line
# Sage X3 supervisor
## CRUD-CLASSE ## PJMBUDLIG
# 2018-07-31 00:26:08 893


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMBUDLIG,ASTATUS)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Variable Integer ASTATUS

If PJMBUDLIG = null : End : Endif

Gosub _AVARIABLES From WMC00PJMBUDLIG

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMBUDLIG

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMBUDLIG,ASTATUS)
Variable Instance PJMBUDLIG Using C_PJMBUDLIG
Variable Integer ASTATUS

If PJMBUDLIG = null : End : Endif

Gosub AVARIABLES From WMC00PJMBUDLIG
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMBUDLIG
Else
 Gosub ADELETE_PJMBUDLIG
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMBUDLIG,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMBUDLIG.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMBUDLIG.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMBUDLIG
Trbegin [F:PJLB]
 Gosub ADELETE_PJMBUDLIG
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMBUDLIG
[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMBUDLIG,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMBUDLIG.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMBUDLIG.ASTALIN,[V]CST_AUPD) & 
& fmet PJMBUDLIG.AGETATTRIBUTE("PLBDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMBUDLIG._MAJSQL_PJMBUDLIG_PLBDESTEX(PJMBUDLIG,PJMBUDLIG.PLBDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMBUDLIG.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMBUDLIG.ASTALIN,[V]CST_AUPD) & 
& fmet PJMBUDLIG.AGETATTRIBUTE("PLBCOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMBUDLIG._MAJSQL_PJMBUDLIG_PLBCOMTEX(PJMBUDLIG,PJMBUDLIG.PLBCOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMBUDLIG._MAJSQL_PJMBUDLIG(PJMBUDLIG))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMBUDLIG.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMBUDLIG.snapshotEnabled=1
 [L]A_RETIK = PJMBUDLIG.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMBUDLIG.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



