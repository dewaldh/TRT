#<AdxTL>@(#)0.0.0.0 $Revision$Class Miscellaneous table 
# Supervisor
## CRUD-CLASSE ## ATABDIV
# 2018-08-27 13:03:07 354


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ATABDIV [ADI_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ATABDIV") From ASYRCOM : Endif
Local Instance ATABDIV Using R_ATABDIV

If !SILENCE : Call TRACE("3 --> New Instance R_ATABDIV") From ASYRCOM : Endif
ATABDIV = NewInstance R_ATABDIV AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ADI_]CODE First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ATABDIV") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ATABDIV.AREAD([ADI_]NUMTAB,[ADI_]CODE))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ATABDIV.ADI.NUMTAB ="-num$(ATABDIV.ADI.NUMTAB)) From ASYRCOM
 Call TRACE("ATABDIV.ADI.CODE ="-num$(ATABDIV.ADI.CODE)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ATABDIV.ADI.AKEYS)
  Call TRACE("-"-num$(I)-":"-ATABDIV.ADI.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ADI_]
FreeGroup ATABDIV
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ATABDIV,ACLE,ASTATUS,_ETAG)
Variable Instance ATABDIV Using R_ATABDIV
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Shortint _NUMTAB
Local Char _CODE(12)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_NUMTAB = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CODE = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File ATABDIV [ADI]
Default File [F:ADI]
Read [F:ADI]CODE = [L]_NUMTAB;[L]_CODE
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ADI]UPDTICK)>0
 [L]_ETAG = num$([F:ADI]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ATABDIV,ACLE,ASTATUS)
Variable Instance ATABDIV Using R_ATABDIV
Value Char ACLE
Variable Integer ASTATUS
Local Shortint _NUMTAB
Local Char _CODE(12)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_NUMTAB = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CODE = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIV.AREAD([L]_NUMTAB,[L]_CODE))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ATABDIV,_NUMTAB,_CODE,ASTATUS)
Variable Instance ATABDIV Using R_ATABDIV
Value Shortint _NUMTAB
Value Char _CODE
Variable Integer ASTATUS

If ATABDIV = null : End : Endif

Gosub AVARIABLES From WMR00ATABDIV
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ATABDIV.APARENT=null
 [L]A_I = ATABDIV.freeSnapshot
 ATABDIV.snapshotEnabled = 0
 ATABDIV.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABDIV.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ATABDIV.ADI.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ATABDIV.ADI.AREAD([L]_NUMTAB,[L]_CODE))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABDIV.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ATABDIV.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ATABDIV._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ATABDIV.APARENT=null
 ATABDIV.snapshotEnabled = 1
 ATABDIV.setAccessorEnabled = 1
Endif
LogicClose File [ADI]
End



