#<AdxTL>@(#)0.0.0.0 $Revision$Class Stage
# Supervisor
## ACLA-CLASSE ## YSTA
# 2019-01-31 03:22:40 517

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMCM_YSTA"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "YSTA_CSPE"
this.AINF.TYP(2) = 3
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0YSTA
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To maxtab(this.YSLD)
 If this.YSLD(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSLT)
 If this.YSLT(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLT(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSLL)
 If this.YSLL(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLL(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YRMA)
 If this.YRMA(AINDCLA)<>null
  [L]ASTATUS = fmet this.YRMA(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSRG)
 If this.YSRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSRG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0YSTA
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To maxtab(this.YSLD)
 If this.YSLD(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSLT)
 If this.YSLT(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLT(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSLL)
 If this.YSLL(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLL(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YRMA)
 If this.YRMA(AINDCLA)<>null
  [L]ASTATUS = fmet this.YRMA(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSRG)
 If this.YSRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSRG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0YSTA
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To maxtab(this.YSLD)
 If this.YSLD(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'YSLD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSLT)
 If this.YSLT(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLT(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'YSLT('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSLL)
 If this.YSLL(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSLL(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'YSLL('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YRMA)
 If this.YRMA(AINDCLA)<>null
  [L]ASTATUS = fmet this.YRMA(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'YRMA('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.YSRG)
 If this.YSRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.YSRG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'YSRG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0YSTA
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "YRMA"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"YRMA",this)
 When "YSLD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"YSLD",this)
 When "YSLL"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"YSLL",this)
 When "YSLT"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"YSLT",this)
 When "YSRG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"YSRG",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "YRMA"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"YRMA","C_YRMA",this)
 When "YSLD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"YSLD","C_YSLD",this)
 When "YSLL"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"YSLL","C_YSLL",this)
 When "YSLT"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"YSLT","C_YSLT",this)
 When "YSRG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"YSRG","C_YSRG",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "YRMA"
  [L]_ALINE = 0
 When "YSLD"
  [L]_ALINE = 0
 When "YSLL"
  [L]_ALINE = 0
 When "YSLT"
  [L]_ALINE = 0
 When "YSRG"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "YRMA"
  [L]_ALINE = 1
 When "YSLD"
  [L]_ALINE = 1
 When "YSLL"
  [L]_ALINE = 1
 When "YSLT"
  [L]_ALINE = 1
 When "YSRG"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "YSTAID"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



