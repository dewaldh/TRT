#<AdxTL>@(#)0.0.0.0 $Revision$Class Signed order hist
# Supervisor
## CRUD-CLASSE ## SOHSIGHIS
# 2018-08-27 13:31:18 917


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(SOHSIGHIS,ASTATUS)
Variable Instance SOHSIGHIS Using R_SOHSIGHIS
Variable Integer ASTATUS

If SOHSIGHIS = null : End : Endif

Gosub AVARIABLES From WMR00SOHSIGHIS
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet SOHSIGHIS.ACTX.AGETAFCRIGHT(SOHSIGHIS,"GESSOH",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet SOHSIGHIS.ACTX.AGETAFCRIGHTU(SOHSIGHIS,"GESSOH",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_SOHSIGHIS
Else
 Gosub AUPDATE_SOHSIGHIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = SOHSIGHIS.freeSnapshot
SOHSIGHIS.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
SOHSIGHIS.ASTALIN = [V]CST_AUPD
SOHSIGHIS.AWS.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = SOHSIGHIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = SOHSIGHIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet SOHSIGHIS._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet SOHSIGHIS._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet SOHSIGHIS._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If SOHSIGHIS.AWS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
SOHSIGHIS.AWS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(SOHSIGHIS.AWS.ASTALIN)<>""
 [L]A_ASTALIN = SOHSIGHIS.AWS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.AWS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(SOHSIGHIS.AWS.ASTALIN)<>""
 [L]A_ASTALIN = SOHSIGHIS.AWS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.AWS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_SOHSIGHIS
Trbegin [F:AWS]
 Gosub AUPDATE_SOHSIGHIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(SOHSIGHIS.AWS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 SOHSIGHIS.AWS.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_SOHSIGHIS
[L]A_ASTALIN = SOHSIGHIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.AWS._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = SOHSIGHIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SOHSIGHIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If SOHSIGHIS.snapshotEnabled=1
 [L]A_RETIK = SOHSIGHIS.revertUpdTick
Endif

[L]ASTATUS = max(fmet SOHSIGHIS.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



