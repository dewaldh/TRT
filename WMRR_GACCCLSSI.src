#<AdxTL>@(#)0.0.0.0 $Revision$Class Account type
# Supervisor
## CRUD-CLASSE ## GACCCLSSI
# 2018-08-27 13:16:14 929


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GACCCLS [CLS_]

If !SILENCE : Call TRACE("2 --> Local Instance R_GACCCLSSI") From ASYRCOM : Endif
Local Instance GACCCLSSI Using R_GACCCLSSI

If !SILENCE : Call TRACE("3 --> New Instance R_GACCCLSSI") From ASYRCOM : Endif
GACCCLSSI = NewInstance R_GACCCLSSI AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CLS_]CLS0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of GACCCLSSI") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet GACCCLSSI.AREAD([CLS_]LEG,[CLS_]CLSCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("GACCCLSSI.CLS.LEG ="-num$(GACCCLSSI.CLS.LEG)) From ASYRCOM
 Call TRACE("GACCCLSSI.CLS.CLSCOD ="-num$(GACCCLSSI.CLS.CLSCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(GACCCLSSI.CLS.AKEYS)
  Call TRACE("-"-num$(I)-":"-GACCCLSSI.CLS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CLS_]
FreeGroup GACCCLSSI
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(GACCCLSSI,ACLE,ASTATUS,_ETAG)
Variable Instance GACCCLSSI Using R_GACCCLSSI
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _LEG(20)
Local Char _CLSCOD(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_LEG = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CLSCOD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File GACCCLS [CLS]
Default File [F:CLS]
Read [F:CLS]CLS0 = [L]_LEG;[L]_CLSCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CLS]UPDTICK)>0
 [L]_ETAG = num$([F:CLS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(GACCCLSSI,ACLE,ASTATUS)
Variable Instance GACCCLSSI Using R_GACCCLSSI
Value Char ACLE
Variable Integer ASTATUS
Local Char _LEG(20)
Local Char _CLSCOD(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_LEG = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CLSCOD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet GACCCLSSI.AREAD([L]_LEG,[L]_CLSCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(GACCCLSSI,_LEG,_CLSCOD,ASTATUS)
Variable Instance GACCCLSSI Using R_GACCCLSSI
Value Char _LEG
Value Char _CLSCOD
Variable Integer ASTATUS

If GACCCLSSI = null : End : Endif

Gosub AVARIABLES From WMR00GACCCLSSI
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If GACCCLSSI.APARENT=null
 [L]A_I = GACCCLSSI.freeSnapshot
 GACCCLSSI.snapshotEnabled = 0
 GACCCLSSI.setAccessorEnabled = 0
Endif

If fmet GACCCLSSI.ACTX.AGETAFCRIGHT(GACCCLSSI,"GESCLS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CLS]
Read [F:CLS]CLS0 = [L]_LEG;[L]_CLSCOD
If fstat
[L]A_ERROR = [L]_LEG+"~"+[L]_CLSCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(GACCCLSSI,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet GACCCLSSI.ACTX.AGETAFCRIGHTR(GACCCLSSI,"GESCLS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet GACCCLSSI.ACTX.ASTACRITROLE(GACCCLSSI,[L]_LEG+"~"+[L]_CLSCOD
& ,"CLS","CLS",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet GACCCLSSI.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

GACCCLSSI.CLS.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet GACCCLSSI.CLS.AREAD([L]_LEG,[L]_CLSCOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet GACCCLSSI.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & GACCCLSSI.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet GACCCLSSI._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If GACCCLSSI.APARENT=null
 GACCCLSSI.snapshotEnabled = 1
 GACCCLSSI.setAccessorEnabled = 1
Endif
LogicClose File [CLS] ,[COA]
End



