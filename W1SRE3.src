#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SRE3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:14:09"
A_USER  = "ADMIN"
A_STAMP = "20180828001409"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBPBL"
  If [M]NBPBL=0
  Endif
 When "NBAUS"
  If [M]NBAUS=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SRE3 [SRE3]
Gosub HORODAT
Local Inpbox "SRE3" From GFONCTION At A_STAMP With A_WINDPREV Mask [SRE3] As [SIM_]
Grizo [SRE3]5
Grizo [SRE3]10
Grizo [SRE3]15
Grizo [SRE3]20
Grizo [SRE3]25
Grizo [SRE3]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SRE3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=43 : Y1(0)=1 : Y2(0)=5
X1(1)=1 : X2(1)=43 : Y1(1)=6 : Y2(1)=18
X1(2)=1 : X2(2)=43 : Y1(2)=19 : Y2(2)=28
X1(3)=44 : X2(3)=112 : Y1(3)=1 : Y2(3)=14
X1(4)=44 : X2(4)=112 : Y1(4)=15 : Y2(4)=24
X1(5)=44 : X2(5)=112 : Y1(5)=25 : Y2(5)=28
Return

$ON_KEYWRDFLG
Onevent AFTER_CHANGE Gosub AMM_KEYWRDFLG From W1SRE3
Onevent INIT_AREA Call D_KEYWRDFLG(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_KEYWRDFLG(zc) From W1SRE3
Return

Subprog D_KEYWRDFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]KEYWRDFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_KEYWRDFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_KEYWRDFLG
Call AM_KEYWRDFLG(zc)
If !mkstat & GOBJET
 zoncou = "KEYWRDFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_KEYWRDFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_KEYWRDFLG(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "KEYWRDFLG" : GZNUM = 16000 : Endif
Gosub _AFF
End

$ON_KEYWRD
Onevent AFTER_CHANGE Gosub AMM_KEYWRD From W1SRE3
Return

$AMM_KEYWRD
Call AM_KEYWRD(zc)
If !mkstat & GOBJET
 zoncou = "KEYWRD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_KEYWRD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_KEYWRD(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "KEYWRD" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_TTRDESFLG
Onevent AFTER_CHANGE Gosub AMM_TTRDESFLG From W1SRE3
Onevent INIT_AREA Call D_TTRDESFLG(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_TTRDESFLG(zc) From W1SRE3
Return

Subprog D_TTRDESFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TTRDESFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TTRDESFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_TTRDESFLG
Call AM_TTRDESFLG(zc)
If !mkstat & GOBJET
 zoncou = "TTRDESFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TTRDESFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TTRDESFLG(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "TTRDESFLG" : GZNUM = 23841 : Endif
Gosub _AFF
End

$ON_SREHD1FLG
Onevent INIT_AREA Call D_SREHD1FLG(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_SREHD1FLG(zc) From W1SRE3
Return

Subprog D_SREHD1FLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SREHD1FLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SREHD1FLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TTRDESSAM
Onevent AFTER_CHANGE Gosub AMM_TTRDESSAM From W1SRE3
Onevent INIT_AREA Call D_TTRDESSAM(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_TTRDESSAM(zc) From W1SRE3
Return

Subprog D_TTRDESSAM(VALEUR)
Variable Integer VALEUR
If varinit([M]TTRDESSAM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TTRDESSAM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_TTRDESSAM
Call AM_TTRDESSAM(zc)
If !mkstat & GOBJET
 zoncou = "TTRDESSAM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TTRDESSAM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TTRDESSAM(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "TTRDESSAM" : GZNUM = 16002 : Endif
Gosub _AFF
End

$ON_SOLFLG
Onevent AFTER_CHANGE Gosub AMM_SOLFLG From W1SRE3
Onevent INIT_AREA Call D_SOLFLG(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_SOLFLG(zc) From W1SRE3
Return

Subprog D_SOLFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SOLFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SOLFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SOLFLG
Call AM_SOLFLG(zc)
If !mkstat & GOBJET
 zoncou = "SOLFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SOLFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SOLFLG(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "SOLFLG" : GZNUM = 23843 : Endif
Gosub _AFF
End

$ON_SOLHD3FLG
Onevent INIT_AREA Call D_SOLHD3FLG(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_SOLHD3FLG(zc) From W1SRE3
Return

Subprog D_SOLHD3FLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SOLHD3FLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SOLHD3FLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SOLSAM
Onevent AFTER_CHANGE Gosub AMM_SOLSAM From W1SRE3
Onevent INIT_AREA Call D_SOLSAM(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_SOLSAM(zc) From W1SRE3
Return

Subprog D_SOLSAM(VALEUR)
Variable Integer VALEUR
If varinit([M]SOLSAM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SOLSAM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SOLSAM
Call AM_SOLSAM(zc)
If !mkstat & GOBJET
 zoncou = "SOLSAM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SOLSAM(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SOLSAM(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "SOLSAM" : GZNUM = 16002 : Endif
Gosub _AFF
End

$ON_PBLGRP
Onevent CONTROL Call C_PBLGRP(zc) From W1SRE3
Onevent AFTER_CHANGE Gosub AMM_PBLGRP From W1SRE3
Onevent BEFORE_INPUT Call AS_PBLGRP(zc) From W1SRE3
Return

Subprog AS_PBLGRP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PBLGRP(zc) From W1SRE3
Gosub _AFF
End

Subprog C_PBLGRP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "PBLGRP" : GZNUM = 22067 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_PBLGRP(VALEUR) From SUBSRE3
 If mkstat : GERR = 1 : GZONE = "PBLGRP" : GZNUM = 22067 : Endif
Endif
Gosub _AFF
End

$AMM_PBLGRP
Call AM_PBLGRP(zc)
If !mkstat & GOBJET
 zoncou = "PBLGRP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PBLGRP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PBLGRP(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "PBLGRP" : GZNUM = 22067 : Endif
Gosub _AFF
End

Subprog S_PBLGRP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIPBL3
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIPBL3"
 PARMSK(1) = num$(nolign - 1)
 PARMSK(2) = "SRE3"
 PARMSK(3) = "0"
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"FPBL3","TRTPBL3","XWFPBL3") From GSAISIE
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_AUS
Onevent CONTROL Call C_AUS(zc) From W1SRE3
Onevent AFTER_CHANGE Gosub AMM_AUS From W1SRE3
Onevent BEFORE_INPUT Call AS_AUS(zc) From W1SRE3
Return

Subprog AS_AUS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6109,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_AUS(zc) From W1SRE3
Gosub _AFF
End

Subprog C_AUS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_AUS(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "AUS" : GZNUM = 5296 : Endif
Gosub _AFF
End

$AMM_AUS
Call AM_AUS(zc)
If !mkstat & GOBJET
 zoncou = "AUS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_AUS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_AUS(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "AUS" : GZNUM = 5296 : Endif
Gosub _AFF
End

Subprog B1_AUS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITN1REP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITN1REP"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELITN1REP","TRTCRMSEL","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CREDATFLG
Onevent AFTER_CHANGE Gosub AMM_CREDATFLG From W1SRE3
Onevent INIT_AREA Call D_CREDATFLG(zc) From W1SRE3
Onevent BEFORE_INPUT Call AS_CREDATFLG(zc) From W1SRE3
Return

Subprog D_CREDATFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CREDATFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CREDATFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_CREDATFLG
Call AM_CREDATFLG(zc)
If !mkstat & GOBJET
 zoncou = "CREDATFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CREDATFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CREDATFLG(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "CREDATFLG" : GZNUM = 16004 : Endif
Gosub _AFF
End

$ON_STRDAT
Onevent CONTROL Call C_STRDAT(zc) From W1SRE3
Onevent BEFORE_AREA Gosub AV_STRDAT From W1SRE3
Return

$AV_STRDAT
Chgfmt [M]STRDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_STRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_STRDAT(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "STRDAT" : GZNUM = 16005 : Endif
Gosub _AFF
End

$ON_ENDDAT
Onevent CONTROL Call C_ENDDAT(zc) From W1SRE3
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1SRE3
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_ENDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDAT(VALEUR) From SUBSRE3
If mkstat : GERR = 1 : GZONE = "ENDDAT" : GZNUM = 16006 : Endif
Gosub _AFF
End

$CHG_STY
Return


