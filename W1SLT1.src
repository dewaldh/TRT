#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SLT1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:12:55"
A_USER  = "ADMIN"
A_STAMP = "20180828001255"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SLT1 [SLT1]
Gosub HORODAT
Local Inpbox "SLT1" From GFONCTION At A_STAMP With A_WINDPREV Mask [SLT1] As [SIM_]
Grizo [SLT1]5
Grizo [SLT1]10
Grizo [SLT1]15
Grizo [SLT1]20
Grizo [SLT1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SLT1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=28 : Y1(1)=4 : Y2(1)=8
X1(2)=29 : X2(2)=74 : Y1(2)=4 : Y2(2)=8
X1(3)=1 : X2(3)=74 : Y1(3)=9 : Y2(3)=12
X1(4)=1 : X2(4)=74 : Y1(4)=13 : Y2(4)=24
Return

$ON_CHANGECOD
Onevent AFTER_CHANGE Gosub AMM_CHANGECOD From W1SLT1
Onevent INIT_AREA Call D_CHANGECOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_CHANGECOD(zc) From W1SLT1
Return

Subprog D_CHANGECOD(VALEUR)
Variable Integer VALEUR
If varinit([M]CHANGECOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CHANGECOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_CHANGECOD
Call AM_CHANGECOD(zc)
If !mkstat & GOBJET
 zoncou = "CHANGECOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CHANGECOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CHANGECOD(VALEUR) From SUBSLT
If mkstat : GERR = 1 : GZONE = "CHANGECOD" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_RENUMCOD
Onevent INIT_AREA Call D_RENUMCOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_RENUMCOD(zc) From W1SLT1
Return

Subprog D_RENUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]RENUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RENUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MIXCOD
Onevent CONTROL Call C_MIXCOD(zc) From W1SLT1
Onevent INIT_AREA Call D_MIXCOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_MIXCOD(zc) From W1SLT1
Return

Subprog D_MIXCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MIXCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MIXCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_MIXCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_MIXCOD(VALEUR) From SUBSLT
If mkstat : GERR = 1 : GZONE = "MIXCOD" : GZNUM = 23965 : Endif
Gosub _AFF
End

$ON_LOTCOD1
Onevent AFTER_CHANGE Gosub AMM_LOTCOD1 From W1SLT1
Onevent INIT_AREA Call D_LOTCOD1(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_LOTCOD1(zc) From W1SLT1
Return

Subprog D_LOTCOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_LOTCOD1
Call AM_LOTCOD1(zc)
If !mkstat & GOBJET
 zoncou = "LOTCOD1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOTCOD1(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LOTCOD1(VALEUR) From SUBSLT
If mkstat : GERR = 1 : GZONE = "LOTCOD1" : GZNUM = 54780 : Endif
Gosub _AFF
End

$ON_ECCCOD
Onevent AFTER_CHANGE Gosub AMM_ECCCOD From W1SLT1
Onevent INIT_AREA Call D_ECCCOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_ECCCOD(zc) From W1SLT1
Return

Subprog D_ECCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ECCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ECCCOD
Call AM_ECCCOD(zc)
If !mkstat & GOBJET
 zoncou = "ECCCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ECCCOD(VALEUR) From SUBSLT
If mkstat : GERR = 1 : GZONE = "ECCCOD" : GZNUM = 54773 : Endif
Gosub _AFF
End

$ON_AUZSTA
Onevent INIT_AREA Call D_AUZSTA(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_AUZSTA(zc) From W1SLT1
Return

Subprog D_AUZSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]AUZSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AUZSTA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AUZSST
Onevent CONTROL Call C_AUZSST(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_AUZSST(zc) From W1SLT1
Return

Subprog AS_AUZSST(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6278,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_AUZSST(zc) From W1SLT1
Gosub _AFF
End

Subprog C_AUZSST(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_AUZSST(VALEUR) From SUBSLT
If mkstat : GERR = 1 : GZONE = "AUZSST" : GZNUM = 18950 : Endif
Gosub _AFF
End

Subprog B1_AUZSST(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIITGSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIITGSTA"
 PARMSK(1) = "1"
 PARMSK(2) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"FITGSTA","TRTCATEG","XWFITGSTA") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PJTCOD
Onevent INIT_AREA Call D_PJTCOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_PJTCOD(zc) From W1SLT1
Return

Subprog D_PJTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PJTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PJTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSFAMCOD
Onevent INIT_AREA Call D_TRSFAMCOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_TRSFAMCOD(zc) From W1SLT1
Return

Subprog D_TRSFAMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSFAMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSFAMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSFAMDEF
Onevent INIT_AREA Call D_TRSFAMDEF(zc) From W1SLT1
Onevent CONTROL Call C_TRSFAMDEF(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_TRSFAMDEF(zc) From W1SLT1
Onevent AFTER_CHANGE Gosub AMM_TRSFAMDEF From W1SLT1
Return

Subprog D_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSFAMDEF,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"9","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TITADI(GBOUT1,"9") From TRTDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_TRSFAMDEF(zc) From W1SLT1
Onkey   2 Titled GBOUTS Call S_TRSFAMDEF(zc) From W1SLT1
Onkey 144 Titled GBOUTP Call P_TRSFAMDEF(zc) From W1SLT1
Onkey 146 Titled GBOUTA Call SA_TRSFAMDEF(zc) From W1SLT1
Gosub _AFF
End

Subprog C_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"9","") From SUBADI
If mkstat : GERR = 1 : GZONE = "TRSFAMDEF" : GZNUM = 88 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"9",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "TRSFAMDEF" : GZNUM = 88 : Endif
Endif
Gosub _AFF
End

$AMM_TRSFAMDEF
Call AM_TRSFAMDEF(zc)
If !mkstat & GOBJET
 zoncou = "TRSFAMDEF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZTRSFAMDEF)")>indice
 [M]TRSFAMDEF(indice) = VALEUR
 Affzo ZTRSFAMDEF(indice)
Endif
Gosub _AFF
End

Subprog S_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "9"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ADI",VALEUR,"9") From GOBJET
Gosub _AFF
End

Subprog SA_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "9"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TRSFAMDEF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "9"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZTRSFAMDEF
Onevent BEFORE_AREA Gosub AV_ZTRSFAMDEF From W1SLT1
Return

$AV_ZTRSFAMDEF
Call LECTEXTRA(zc,"ATABDIV","SHODES","9",num$([M]TRSFAMDEF(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_MVTDESCOD
Onevent INIT_AREA Call D_MVTDESCOD(zc) From W1SLT1
Onevent BEFORE_INPUT Call AS_MVTDESCOD(zc) From W1SLT1
Return

Subprog D_MVTDESCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MVTDESCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MVTDESCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTCOD
Onevent BEFORE_AREA Gosub AV_LOTCOD From W1SLT1
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1SLT1
Onevent INIT_AREA Call D_LOTCOD(zc) From W1SLT1
Onevent CONTROL Call C_LOTCOD(zc) From W1SLT1
Return

$AV_LOTCOD
## Action STD
Call AV_LOTCOD(zc) From SUBSLT
Gosub _AFF
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_LOTCOD(VALEUR) From SUBSLT
If mkstat=2
 [M]LOTCOD(INDIC) = VALEUR
 Affzo LOTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From LOTCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LOTCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LOTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SLOCOD
Onevent BEFORE_INPUT Call AS_SLOCOD(zc) From W1SLT1
Onevent INIT_AREA Call D_SLOCOD(zc) From W1SLT1
Onevent CONTROL Call C_SLOCOD(zc) From W1SLT1
Return

Subprog D_SLOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_SLOCOD(VALEUR) From SUBSLT
If mkstat=2
 [M]SLOCOD(INDIC) = VALEUR
 Affzo SLOCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From SLOCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SLOCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SLOCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$CHG_STY
Return


