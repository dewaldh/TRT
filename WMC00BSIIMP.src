#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank statement import
# Supervisor
## CRUD-CLASSE ## BSIIMP
# 2018-08-27 12:26:57 193

Gosub TEST From WMCR_BSIIMP : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,STMCOD)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# BSIIMP : BSIIMP
# BSIIMPD : BSIIMP BSIIMPD
# BSIIMPDS : BSIIMPD BSIIMPDS
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet BSIIMP._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = BSIIMP.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(BSIIMP.ACTX.AFOLDER,nomap,"")>0
 Local File BSIIMP [BSIIMP]
 Local File BSIIMPD [BSIIMPD]
 Local File BSIIMPDS [BSIIMPS]
Else
 Local File =BSIIMP.ACTX.AFOLDER+".BSIIMP" [BSIIMP]
 Local File =BSIIMP.ACTX.AFOLDER+".BSIIMPD" [BSIIMPD]
 Local File =BSIIMP.ACTX.AFOLDER+".BSIIMPDS" [BSIIMPS]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet BSIIMP.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [BSIIMP] With
& [BSIIMPD]BSIIMPD0 = [F:BSIIMP]STMCOD,
& [BSIIMPS]BSIIMPS0 = [F:BSIIMPD]STMCOD;[F:BSIIMPD]LIN
& As [LNK_]
Return

############################################################################################
### BSIIMP(WBSIIMP)
############################################################################################
Funprog  _MAJSQL_BSIIMP(WBSIIMP)
Variable Instance WBSIIMP Using C_BSIIMP
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIIMP]
If WBSIIMP.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIIMP) From ASYRSUB
 SetInstance [F:BSIIMP] With WBSIIMP
 Write [F:BSIIMP]
 If fstat
  Call FSTA("BSIIMP",WBSIIMP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIMP.updTick = [F:BSIIMP]updTick
Elsif WBSIIMP.ASTALIN=[V]CST_ALL or WBSIIMP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIIMP) From ASYRSUB
 SetInstance [F:BSIIMP] With WBSIIMP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIMP,"BSIIMP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIIMP]BSIIMP0 = [F:BSIIMP]STMCOD
 If fstat
  Call FSTA("BSIIMP",WBSIIMP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIMP.updTick = [F:BSIIMP]updTick
Elsif WBSIIMP.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIIMP] With WBSIIMP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIMP,"BSIIMP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIIMP]BSIIMP0 = [F:BSIIMP]STMCOD
 If fstat
  Call FSTA("BSIIMP",WBSIIMP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BSIIMPD(WBSIIMPD)
############################################################################################
Funprog  _MAJSQL_BSIIMPD(WBSIIMPD)
Variable Instance WBSIIMPD Using C_BSIIMPD
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIIMPD]
If WBSIIMPD.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIIMPD) From ASYRSUB
 SetInstance [F:BSIIMPD] With WBSIIMPD
 Write [F:BSIIMPD]
 If fstat
  Call FSTA("BSIIMPD",WBSIIMPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIMPD.updTick = [F:BSIIMPD]updTick
Elsif WBSIIMPD.ASTALIN=[V]CST_ALL or WBSIIMPD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIIMPD) From ASYRSUB
 SetInstance [F:BSIIMPD] With WBSIIMPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIMPD,"BSIIMPD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIIMPD]BSIIMPD0 = [F:BSIIMPD]STMCOD;[F:BSIIMPD]LIN
 If fstat
  Call FSTA("BSIIMPD",WBSIIMPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIMPD.updTick = [F:BSIIMPD]updTick
Elsif WBSIIMPD.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIIMPD] With WBSIIMPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIMPD,"BSIIMPD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIIMPD]BSIIMPD0 = [F:BSIIMPD]STMCOD;[F:BSIIMPD]LIN
 If fstat
  Call FSTA("BSIIMPD",WBSIIMPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BSIIMPDS(WBSIIMPS)
############################################################################################
Funprog  _MAJSQL_BSIIMPDS(WBSIIMPS)
Variable Instance WBSIIMPS Using C_BSIIMPDS
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIIMPS]
If WBSIIMPS.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIIMPS) From ASYRSUB
 SetInstance [F:BSIIMPS] With WBSIIMPS
 Write [F:BSIIMPS]
 If fstat
  Call FSTA("BSIIMPS",WBSIIMPS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIMPS.updTick = [F:BSIIMPS]updTick
Elsif WBSIIMPS.ASTALIN=[V]CST_ALL or WBSIIMPS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIIMPS) From ASYRSUB
 SetInstance [F:BSIIMPS] With WBSIIMPS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIMPS,"BSIIMPDS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIIMPS]BSIIMPS0 = [F:BSIIMPS]STMCOD;[F:BSIIMPS]TRSLIN;[F:BSIIMPS]DETLIN
 If fstat
  Call FSTA("BSIIMPS",WBSIIMPS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIIMPS.updTick = [F:BSIIMPS]updTick
Elsif WBSIIMPS.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIIMPS] With WBSIIMPS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIIMPS,"BSIIMPDS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIIMPS]BSIIMPS0 = [F:BSIIMPS]STMCOD;[F:BSIIMPS]TRSLIN;[F:BSIIMPS]DETLIN
 If fstat
  Call FSTA("BSIIMPS",WBSIIMPS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



