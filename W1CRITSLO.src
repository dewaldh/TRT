#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CRITSLO 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:58:52"
A_USER  = "ADMIN"
A_STAMP = "20180827235852"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CRITSLO [CSLO]
Gosub HORODAT
Local Inpbox "CRITSLO" From GFONCTION At A_STAMP With A_WINDPREV Mask [CSLO] As [SIM_]
Grizo [CSLO]5
Grizo [CSLO]7
Grizo [CSLO]10
Grizo [CSLO]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [CSLO]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=25 : X2(0)=88 : Y1(0)=7 : Y2(0)=8
X1(1)=25 : X2(1)=57 : Y1(1)=9 : Y2(1)=13
X1(2)=58 : X2(2)=88 : Y1(2)=9 : Y2(2)=13
X1(3)=25 : X2(3)=88 : Y1(3)=14 : Y2(3)=21
Return

$ON_MEMO
Return

$ON_LOCCAT001
Onevent INIT_AREA Call D_LOCCAT001(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_LOCCAT001(zc) From W1CRITSLO
Return

Subprog D_LOCCAT001(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCAT001,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCAT001(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCAT002
Onevent INIT_AREA Call D_LOCCAT002(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_LOCCAT002(zc) From W1CRITSLO
Return

Subprog D_LOCCAT002(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCAT002,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCAT002(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCAT003
Onevent INIT_AREA Call D_LOCCAT003(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_LOCCAT003(zc) From W1CRITSLO
Return

Subprog D_LOCCAT003(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCAT003,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCAT003(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCAT004
Onevent INIT_AREA Call D_LOCCAT004(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_LOCCAT004(zc) From W1CRITSLO
Return

Subprog D_LOCCAT004(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCAT004,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCAT004(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ZERLOT
Onevent AFTER_CHANGE Gosub AMM_ZERLOT From W1CRITSLO
Onevent INIT_AREA Call D_ZERLOT(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_ZERLOT(zc) From W1CRITSLO
Return

Subprog D_ZERLOT(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERLOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ZERLOT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ZERLOT
Call AM_ZERLOT(zc)
If !mkstat & GOBJET
 zoncou = "ZERLOT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ZERLOT(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ZERLOT(VALEUR) From CNSSLOSTD
If mkstat : GERR = 1 : GZONE = "ZERLOT" : GZNUM = 9936 : Endif
Gosub _AFF
End

$ON_NOTZERLOT
Onevent INIT_AREA Call D_NOTZERLOT(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_NOTZERLOT(zc) From W1CRITSLO
Return

Subprog D_NOTZERLOT(VALEUR)
Variable Integer VALEUR
If varinit([M]NOTZERLOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_NOTZERLOT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ECRAN
Onevent CONTROL Call C_ECRAN(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_ECRAN(zc) From W1CRITSLO
Onevent AFTER_CHANGE Gosub AMM_ECRAN From W1CRITSLO
Return

Subprog AS_ECRAN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12426,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ECRAN(zc) From W1CRITSLO
Onkey   2 Titled GBOUTS Call S_ECRAN(zc) From W1CRITSLO
Onkey 144 Titled GBOUTP Call P_ECRAN(zc) From W1CRITSLO
Onkey 146 Titled GBOUTA Call SA_ECRAN(zc) From W1CRITSLO
Gosub _AFF
End

Subprog C_ECRAN(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("GTC","!",VALEUR,"SLO",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "ECRAN" : GZNUM = 46 : Endif
Gosub _AFF
End

$AMM_ECRAN
Call AM_ECRAN(zc)
If !mkstat & GOBJET
 zoncou = "ECRAN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECRAN(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZECRAN)")>indice
 [M]ECRAN(indice) = VALEUR
 Affzo ZECRAN(indice)
Endif
Gosub _AFF
End

Subprog S_ECRAN(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "GTC"
PARMSK(2) = "!"
PARMSK(3) = "SLO"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_ECRAN(VALEUR)
Variable Char    VALEUR()
Call OBJET("GTC",VALEUR,"SLO") From GOBJET
Gosub _AFF
End

Subprog SA_ECRAN(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "GTC"
PARMSK(2) = "SLO"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ECRAN(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "SLO"
Call VISU("GTC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZECRAN
Onevent BEFORE_AREA Gosub AV_ZECRAN From W1CRITSLO
Return

$AV_ZECRAN
Call LECTEXTRA(zc,"GTABACC","INTIT","SLO",num$([M]ECRAN(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_AGRFCYFLG
Onevent INIT_AREA Call D_AGRFCYFLG(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_AGRFCYFLG(zc) From W1CRITSLO
Return

Subprog D_AGRFCYFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]AGRFCYFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AGRFCYFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AGRLEN
Onevent CONTROL Call C_AGRLEN(zc) From W1CRITSLO
Return

Subprog C_AGRLEN(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_AGRLEN(VALEUR) From CNSSLOSTD
If mkstat : GERR = 1 : GZONE = "AGRLEN" : GZNUM = 23316 : Endif
Gosub _AFF
End

$ON_AGRSLOFLG
Onevent INIT_AREA Call D_AGRSLOFLG(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_AGRSLOFLG(zc) From W1CRITSLO
Return

Subprog D_AGRSLOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]AGRSLOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AGRSLOFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FORMULE
Onevent CONTROL Call C_FORMULE(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_FORMULE(zc) From W1CRITSLO
Onevent AFTER_CHANGE Gosub AMM_FORMULE From W1CRITSLO
Return

Subprog AS_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4574,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FORMULE(zc) From W1CRITSLO
Onkey   2 Titled GBOUTS Call S_FORMULE(zc) From W1CRITSLO
Onkey 144 Titled GBOUTP Call P_FORMULE(zc) From W1CRITSLO
Onkey 146 Titled GBOUTA Call SA_FORMULE(zc) From W1CRITSLO
Gosub _AFF
End

Subprog C_FORMULE(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TFO","!",VALEUR,"11",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "FORMULE" : GZNUM = 4574 : Endif
Gosub _AFF
End

$AMM_FORMULE
Call AM_FORMULE(zc)
If !mkstat & GOBJET
 zoncou = "FORMULE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FORMULE(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZFORMULE)")>indice
 [M]FORMULE(indice) = VALEUR
 Affzo ZFORMULE(indice)
Endif
Gosub _AFF
End

Subprog S_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TFO"
PARMSK(2) = "!"
PARMSK(3) = "11"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FORMULE(VALEUR)
Variable Char    VALEUR()
Call OBJET("TFO",VALEUR,"11") From GOBJET
Gosub _AFF
End

Subprog SA_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TFO"
PARMSK(2) = "11"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FORMULE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "11"
Call VISU("TFO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFORMULE
Onevent BEFORE_AREA Gosub AV_ZFORMULE From W1CRITSLO
Return

$AV_ZFORMULE
Call LECTEXTRA(zc,"TABFOR","DES","11",num$([M]FORMULE(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_CUMFLG
Onevent INIT_AREA Call D_CUMFLG(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_CUMFLG(zc) From W1CRITSLO
Return

Subprog D_CUMFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CUMFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CUMFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CRITRI
Onevent AFTER_CHANGE Gosub AMM_CRITRI From W1CRITSLO
Onevent INIT_AREA Call D_CRITRI(zc) From W1CRITSLO
Onevent BEFORE_INPUT Call AS_CRITRI(zc) From W1CRITSLO
Return

Subprog D_CRITRI(VALEUR)
Variable Integer VALEUR
If varinit([M]CRITRI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CRITRI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_CRITRI
Call AM_CRITRI(zc)
If !mkstat & GOBJET
 zoncou = "CRITRI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRITRI(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CRITRI(VALEUR) From CNSSLOSTD
If mkstat : GERR = 1 : GZONE = "CRITRI" : GZNUM = 16282 : Endif
Gosub _AFF
End

$CHG_STY
Return


