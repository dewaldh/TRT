#<AdxTL>@(#)0.0.0.0 $Revision$Class Type of location
# Supervisor
## CRUD-CLASSE ## TABLOCTYP
# 2018-08-27 13:37:44 174


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABLOCTYP [TLO_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABLOCTYP") From ASYRCOM : Endif
Local Instance TABLOCTYP Using R_TABLOCTYP

If !SILENCE : Call TRACE("3 --> New Instance R_TABLOCTYP") From ASYRCOM : Endif
TABLOCTYP = NewInstance R_TABLOCTYP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TLO_]TLO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABLOCTYP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABLOCTYP.AREAD([TLO_]STOFCY,[TLO_]LOCTYP))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABLOCTYP.TLO.STOFCY ="-num$(TABLOCTYP.TLO.STOFCY)) From ASYRCOM
 Call TRACE("TABLOCTYP.TLO.LOCTYP ="-num$(TABLOCTYP.TLO.LOCTYP)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABLOCTYP.TLO.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABLOCTYP.TLO.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TLO_]
FreeGroup TABLOCTYP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABLOCTYP,ACLE,ASTATUS,_ETAG)
Variable Instance TABLOCTYP Using R_TABLOCTYP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _STOFCY(5)
Local Char _LOCTYP(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LOCTYP = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABLOCTYP [TLO]
Default File [F:TLO]
Read [F:TLO]TLO0 = [L]_STOFCY;[L]_LOCTYP
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TLO]UPDTICK)>0
 [L]_ETAG = num$([F:TLO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABLOCTYP,ACLE,ASTATUS)
Variable Instance TABLOCTYP Using R_TABLOCTYP
Value Char ACLE
Variable Integer ASTATUS
Local Char _STOFCY(5)
Local Char _LOCTYP(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LOCTYP = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABLOCTYP.AREAD([L]_STOFCY,[L]_LOCTYP))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABLOCTYP,_STOFCY,_LOCTYP,ASTATUS)
Variable Instance TABLOCTYP Using R_TABLOCTYP
Value Char _STOFCY
Value Char _LOCTYP
Variable Integer ASTATUS

If TABLOCTYP = null : End : Endif

Gosub AVARIABLES From WMR00TABLOCTYP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABLOCTYP.APARENT=null
 [L]A_I = TABLOCTYP.freeSnapshot
 TABLOCTYP.snapshotEnabled = 0
 TABLOCTYP.setAccessorEnabled = 0
Endif

If fmet TABLOCTYP.ACTX.AGETAFCRIGHT(TABLOCTYP,"GESTLO",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TLO]
Read [F:TLO]TLO0 = [L]_STOFCY;[L]_LOCTYP
If fstat
[L]A_ERROR = [L]_STOFCY+"~"+[L]_LOCTYP
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABLOCTYP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:TLO]STOFCY
[L]A_STRACC = ""
If fmet TABLOCTYP.ACTX.AGETAFCRIGHTR(TABLOCTYP,"GESTLO",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABLOCTYP.ACTX.ASTACRITROLE(TABLOCTYP,[L]_STOFCY+"~"+[L]_LOCTYP
& ,"TLO","TLO",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLOCTYP.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABLOCTYP.TLO.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABLOCTYP.TLO.AREAD([L]_STOFCY,[L]_LOCTYP))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLOCTYP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABLOCTYP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABLOCTYP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABLOCTYP.APARENT=null
 TABLOCTYP.snapshotEnabled = 1
 TABLOCTYP.setAccessorEnabled = 1
Endif
LogicClose File [TLO] ,[TUN]
End



