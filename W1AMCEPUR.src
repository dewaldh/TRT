#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management AMCEPUR 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:48:52"
A_USER  = "ADMIN"
A_STAMP = "20180827234852"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask AMCEPUR [DIA]
Gosub HORODAT
Local Inpbox "AMCEPUR" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=14 : X2(0)=98 : Y1(0)=11 : Y2(0)=17
Return

$ON_ALLTYP
Onevent CONTROL Call C_ALLTYP(zc) From W1AMCEPUR
Onevent INIT_AREA Call D_ALLTYP(zc) From W1AMCEPUR
Onevent BEFORE_INPUT Call AS_ALLTYP(zc) From W1AMCEPUR
Return

Subprog D_ALLTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ALLTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ALLTYP(VALEUR) From AMCEPUR
If mkstat : GERR = 1 : GZONE = "ALLTYP" : GZNUM = 10412 : Endif
Gosub _AFF
End

$ON_TYPZON
Onevent INIT_AREA Call D_TYPZON(zc) From W1AMCEPUR
Onevent BEFORE_INPUT Call AS_TYPZON(zc) From W1AMCEPUR
Return

Subprog D_TYPZON(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPZON,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPZON(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ALLCOD
Onevent CONTROL Call C_ALLCOD(zc) From W1AMCEPUR
Onevent INIT_AREA Call D_ALLCOD(zc) From W1AMCEPUR
Onevent BEFORE_INPUT Call AS_ALLCOD(zc) From W1AMCEPUR
Return

Subprog D_ALLCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ALLCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ALLCOD(VALEUR) From AMCEPUR
If mkstat : GERR = 1 : GZONE = "ALLCOD" : GZNUM = 27400 : Endif
Gosub _AFF
End

$ON_CODDEB
Onevent AFTER_CHANGE Gosub AMM_CODDEB From W1AMCEPUR
Onevent BEFORE_INPUT Call AS_CODDEB(zc) From W1AMCEPUR
Return

Subprog AS_CODDEB(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_CODDEB(zc) From W1AMCEPUR
Gosub _AFF
End

$AMM_CODDEB
Call AM_CODDEB(zc)
If !mkstat & GOBJET
 zoncou = "CODDEB" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODDEB(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CODDEB(VALEUR) From AMCEPUR
If mkstat : GERR = 1 : GZONE = "CODDEB" : GZNUM = 30008 : Endif
Gosub _AFF
End

Subprog S_CODDEB(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AMOTCLEL1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AMOTCLEL1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"AMOTCLEL1","SUBAMC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_CODFIN
Onevent BEFORE_INPUT Call AS_CODFIN(zc) From W1AMCEPUR
Return

Subprog AS_CODFIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_CODFIN(VALEUR) From AMCEPUR
If mkstat=2
 [M]CODFIN(INDIC) = VALEUR
 Affzo CODFIN(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_CODFIN(zc) From W1AMCEPUR
Gosub _AFF
End

Subprog S_CODFIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AMOTCLEL1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AMOTCLEL1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"AMOTCLEL1","SUBAMC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SIMU
Onevent INIT_AREA Call D_SIMU(zc) From W1AMCEPUR
Onevent BEFORE_INPUT Call AS_SIMU(zc) From W1AMCEPUR
Return

Subprog D_SIMU(VALEUR)
Variable Integer VALEUR
If varinit([M]SIMU,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SIMU(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


