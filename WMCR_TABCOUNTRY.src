#<AdxTL>@(#)0.0.0.0 $Revision$Class Country table
# Supervisor
## CRUD-CLASSE ## TABCOUNTRY
# 2018-08-27 12:51:04 986


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABCOUNTRY [TCY_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABCOUNTRY") From ASYRCOM : Endif
Local Instance TABCOUNTRY Using C_TABCOUNTRY

If !SILENCE : Call TRACE("3 --> New Instance C_TABCOUNTRY") From ASYRCOM : Endif
TABCOUNTRY = NewInstance C_TABCOUNTRY AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TCY_]TCY0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABCOUNTRY") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRY.AREAD([TCY_]CRY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABCOUNTRY.CRY ="-num$(TABCOUNTRY.CRY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABCOUNTRY.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABCOUNTRY.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TCY_]
FreeGroup TABCOUNTRY
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABCOUNTRY,ACLE,ASTATUS,_ETAG)
Variable Instance TABCOUNTRY Using C_TABCOUNTRY
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRY(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRY = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABCOUNTRY [TCY]
Default File [F:TCY]
Read [F:TCY]TCY0 = [L]_CRY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TCY]UPDTICK)>0
 [L]_ETAG = num$([F:TCY]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABCOUNTRY,ACLE,ASTATUS)
Variable Instance TABCOUNTRY Using C_TABCOUNTRY
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRY(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRY = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRY.AREAD([L]_CRY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABCOUNTRY,_CRY,ASTATUS)
Variable Instance TABCOUNTRY Using C_TABCOUNTRY
Value Char _CRY
Variable Integer ASTATUS

If TABCOUNTRY = null : End : Endif

Gosub AVARIABLES From WMC00TABCOUNTRY
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABCOUNTRY.APARENT=null
 [L]A_I = TABCOUNTRY.freeSnapshot
 TABCOUNTRY.snapshotEnabled = 0
 TABCOUNTRY.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABCOUNTRY.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRY._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABCOUNTRY.APARENT=null
 TABCOUNTRY.snapshotEnabled = 1
 TABCOUNTRY.setAccessorEnabled = 1
Endif
LogicClose File [TCY]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRY._ACTION_PARAM("AREAD_BEFORE",[L]_CRY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TCY]
Read [F:TCY]TCY0 = [L]_CRY
If fstat
[L]A_ERROR = [L]_CRY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABCOUNTRY,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TCY]AUUID)>0 & [F:TCY]AUUID=NullUuid
 [F:TCY]AUUID = getUuid
Endif
SetInstance TABCOUNTRY With [F:TCY]
TABCOUNTRY.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRY.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABCOUNTRY" & ZONE="CRYDES" & IDENT1=TABCOUNTRY.CRY & IDENT2=""
 Call ASETTEXTRA(TABCOUNTRY.AXX,TABCOUNTRY.AllocGrp(),"CRYDES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOUNTRY.AXX(maxtab(TABCOUNTRY.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOUNTRY.AGETTEXTRA("CRYDES"))
 Call ASETTEXTRA(TABCOUNTRY.AXX,TABCOUNTRY.AllocGrp(),"CRYDES",
& fmet TABCOUNTRY.AGETTEXTRALAN("CRYDES",TABCOUNTRY.ACTX.AFOLD.ALANGDEF),
& TABCOUNTRY.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABCOUNTRY" & ZONE="ETATNAM" & IDENT1=TABCOUNTRY.CRY & IDENT2=""
 Call ASETTEXTRA(TABCOUNTRY.AXX,TABCOUNTRY.AllocGrp(),"ETATNAM",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOUNTRY.AXX(maxtab(TABCOUNTRY.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOUNTRY.AGETTEXTRA("ETATNAM"))
 Call ASETTEXTRA(TABCOUNTRY.AXX,TABCOUNTRY.AllocGrp(),"ETATNAM",
& fmet TABCOUNTRY.AGETTEXTRALAN("ETATNAM",TABCOUNTRY.ACTX.AFOLD.ALANGDEF),
& TABCOUNTRY.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABCOUNTRY" & ZONE="ETATNAM2" & IDENT1=TABCOUNTRY.CRY & IDENT2=""
 Call ASETTEXTRA(TABCOUNTRY.AXX,TABCOUNTRY.AllocGrp(),"ETATNAM2",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOUNTRY.AXX(maxtab(TABCOUNTRY.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOUNTRY.AGETTEXTRA("ETATNAM2"))
 Call ASETTEXTRA(TABCOUNTRY.AXX,TABCOUNTRY.AllocGrp(),"ETATNAM2",
& fmet TABCOUNTRY.AGETTEXTRALAN("ETATNAM2",TABCOUNTRY.ACTX.AFOLD.ALANGDEF),
& TABCOUNTRY.ACTX.LAN) From ASYRSUB
Endif

Return



