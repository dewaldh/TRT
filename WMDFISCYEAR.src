#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule FISCYEAR

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".FISCYEAR" : If clalev([F:FIS])=0 : Local File =OUVTAB [FIS] : Endif
OUVTAB = GDOSSIER+".FISCYEAR" : If clalev([F:A_])=0 : Local File =OUVTAB [A_] : Endif
OUVTAB = "Link [FIS]"
Link [FIS] With
& [A_]FIY0=[FIS]CPY;[FIS]CNX;[FIS]DATSTRFIY
& As [LNK_]
& Order By Key CLE = [FIS]CPY;[FIS]CNX;[FIS]DATSTRFIY
FILTRE = ""
Return

$FERME
If clalev([F:FIS]) : Close local File [FIS] : Endif
If clalev([F:A_]) : Close local File [A_] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..3)
Local Integer DTYP(1..3)
Local Integer NBDCLE
NBDCLE = 3
DCLE(1) = "CPY"
DTYP(1) =  7
DCLE(2) = "CNX"
DTYP(2) =  1
DCLE(3) = "DATSTRFIY"
DTYP(3) =  8
Return

$CHARGE_CLE
If dim([F:AAA_]CPY)>0
 [F:AAA_]CPY = [F:FIS]CPY
Endif
If dim([F:AAA_]CNX)>0
 [F:AAA_]CNX = num$([F:FIS]CNX)-"-"-mess([F:FIS]CNX,3100,1)
Endif
If dim([F:AAA_]DATSTRFIY)>0
 [F:AAA_]DATSTRFIY = [F:FIS]DATSTRFIY
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### DATSTRFIY
[L]FLD="DATSTRFIY"
[L]FORMULE='[F:FIS]DATSTRFIY'
If dim([F:AAA_]DATSTRFIY)>0
 [F:AAA_]DATSTRFIY = [F:FIS]DATSTRFIY
Endif

### DATENDFIY
[L]FLD="DATENDFIY"
[L]FORMULE='[F:FIS]DATENDFIY'
If dim([F:AAA_]DATENDFIY)>0
 [F:AAA_]DATENDFIY = [F:FIS]DATENDFIY
Endif

### CPY
[L]FLD="CPY"
[L]FORMULE='[F:FIS]CPY'
If dim([F:AAA_]CPY)>0
 [F:AAA_]CPY = [F:FIS]CPY
Endif

### CNX
[L]FLD="CNX"
[L]FORMULE='num$([F:FIS]CNX)-"-"-mess([F:FIS]CNX,3100,1)'
If dim([F:AAA_]CNX)>0
 [F:AAA_]CNX = num$([F:FIS]CNX)-"-"-mess([F:FIS]CNX,3100,1)
Endif

### EXERCICE
[L]FLD="EXERCICE"
[L]FORMULE='[F:FIS]CPY+num$([F:FIS]CNX)+[F:FIS]DATSTRFIY'
If dim([F:AAA_]EXERCICE)>0
 [F:AAA_]EXERCICE = [F:FIS]CPY+num$([F:FIS]CNX)+[F:FIS]DATSTRFIY
Endif

### STAFIY
[L]FLD="STAFIY"
[L]FORMULE='num$([F:FIS]STAFIY)-"-"-mess([F:FIS]STAFIY,3102,1)'
If dim([F:AAA_]STAFIY)>0
 [F:AAA_]STAFIY = num$([F:FIS]STAFIY)-"-"-mess([F:FIS]STAFIY,3102,1)
Endif

### INDCURPER
[L]FLD="INDCURPER"
[L]FORMULE='[F:FIS]INDCURPER'
If dim([F:AAA_]INDCURPER)>0
 [F:AAA_]INDCURPER = [F:FIS]INDCURPER
Endif

### NBRPER
[L]FLD="NBRPER"
[L]FORMULE='[F:FIS]NBRPER'
If dim([F:AAA_]NBRPER)>0
 [F:AAA_]NBRPER = [F:FIS]NBRPER
Endif

### DFDTYP
[L]FLD="DFDTYP"
[L]FORMULE='num$([F:FIS]DFDTYP)-"-"-mess([F:FIS]DFDTYP,3232,1)'
If dim([F:AAA_]DFDTYP)>0
 [F:AAA_]DFDTYP = num$([F:FIS]DFDTYP)-"-"-mess([F:FIS]DFDTYP,3232,1)
Endif

### DFDCOD
[L]FLD="DFDCOD"
[L]FORMULE='num$([F:FIS]DFDCOD)-"-"-mess([F:FIS]DFDCOD,3239,1)'
If dim([F:AAA_]DFDCOD)>0
 [F:AAA_]DFDCOD = num$([F:FIS]DFDCOD)-"-"-mess([F:FIS]DFDCOD,3239,1)
Endif

### DFDRAT
[L]FLD="DFDRAT"
[L]FORMULE='[F:FIS]DFDRAT'
If dim([F:AAA_]DFDRAT)>0
 [F:AAA_]DFDRAT = [F:FIS]DFDRAT
Endif


Return

