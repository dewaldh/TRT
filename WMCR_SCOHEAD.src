#<AdxTL>@(#)0.0.0.0 $Revision$Class Subcontract orders
# Supervisor
## CRUD-CLASSE ## SCOHEAD
# 2018-08-27 12:44:04 402


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SCOHEAD [SCO_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SCOHEAD") From ASYRCOM : Endif
Local Instance SCOHEAD Using C_SCOHEAD

If !SILENCE : Call TRACE("3 --> New Instance C_SCOHEAD") From ASYRCOM : Endif
SCOHEAD = NewInstance C_SCOHEAD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SCO_]SCO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SCOHEAD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.AREAD([SCO_]SCONUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SCOHEAD.SCONUM ="-num$(SCOHEAD.SCONUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SCOHEAD.AKEYS)
  Call TRACE("-"-num$(I)-":"-SCOHEAD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SCO_]
FreeGroup SCOHEAD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SCOHEAD,ACLE,ASTATUS,_ETAG)
Variable Instance SCOHEAD Using C_SCOHEAD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SCONUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SCONUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SCOHEAD [SCO]
Default File [F:SCO]
Read [F:SCO]SCO0 = [L]_SCONUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SCO]UPDTICK)>0
 [L]_ETAG = num$([F:SCO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SCOHEAD,ACLE,ASTATUS)
Variable Instance SCOHEAD Using C_SCOHEAD
Value Char ACLE
Variable Integer ASTATUS
Local Char _SCONUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SCONUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.AREAD([L]_SCONUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SCOHEAD,_SCONUM,ASTATUS)
Variable Instance SCOHEAD Using C_SCOHEAD
Value Char _SCONUM
Variable Integer ASTATUS

If SCOHEAD = null : End : Endif

Gosub AVARIABLES From WMC00SCOHEAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SCOHEAD.APARENT=null
 [L]A_I = SCOHEAD.freeSnapshot
 SCOHEAD.snapshotEnabled = 0
 SCOHEAD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SCOHEAD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SCOHEAD.APARENT=null
 SCOHEAD.snapshotEnabled = 1
 SCOHEAD.setAccessorEnabled = 1
Endif
LogicClose File [SCO] ,[SCI] ,[SCM] ,[SCS] ,[SCICAL] ,[SCSCAL] ,[SCMCAL]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD._ACTION_PARAM("AREAD_BEFORE",[L]_SCONUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:SCO]
Read [F:SCO]SCO0 = [L]_SCONUM
If fstat
[L]A_ERROR = [L]_SCONUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SCOHEAD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:SCO]POHFCY
[L]A_STRACC = ""
If dim([F:SCO]AUUID)>0 & [F:SCO]AUUID=NullUuid
 [F:SCO]AUUID = getUuid
Endif
If dim([F:SCO]CLASCOTEX)>0: Raz [F:SCO]CLASCOTEX: Endif
SetInstance SCOHEAD With [F:SCO]
SCOHEAD.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SCI]
 [L]A_N2=1
 Read [F:SCI]SCI0 = [SCO]SCONUM;1000
 If !fstat
  If dim([F:SCI]AUUID)>0 & [F:SCI]AUUID=NullUuid
   [F:SCI]AUUID = getUuid
  Endif
  SetInstance SCOHEAD.SCI(A_N2) With [F:SCI]
  [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  SCOHEAD.SCI(A_N2).ASTALIN = [V]CST_ALL
  #-----------------------#
  If [L]A_LEVEL>=3
   Default File [F:SCM]
   [L]A_N3=0
   For [F:SCM]SCM0 Where SCONUM=[SCI]SCONUM & SCILIN=[SCI]SCILIN
    [L]A_N3 +=1
    SCOHEAD.SCI(A_N2).SCM(A_N3) = NewInstance  C_SCOMAT(SCOHEAD.ACTX,NullUuid,[L]A_N3,SCOHEAD.SCI(A_N2),"SCM") AllocGroup SCOHEAD
    [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).ADDINSTANCE_BOUND)
    If dim([F:SCM]AUUID)>0 & [F:SCM]AUUID=NullUuid
     [F:SCM]AUUID = getUuid
    Endif
    SetInstance SCOHEAD.SCI(A_N2).SCM(A_N3) With [F:SCM]
    [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
    SCOHEAD.SCI(A_N2).SCM(A_N3).ASTALIN = [V]CST_ALL
    #-----------------------#
    If [L]A_LEVEL>=4
     Default File [F:SCMCAL]
     [L]A_N4=1
     Read [F:SCMCAL]CAL0 = 'SCM';36;[SCM]SCONUM;[SCM]SCILIN;[SCM]SCMLIN;'';1
     If !fstat
      If dim([F:SCMCAL]AUUID)>0 & [F:SCMCAL]AUUID=NullUuid
       [F:SCMCAL]AUUID = getUuid
      Endif
      SetInstance SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4) With [F:SCMCAL]
      [L]A_NEWCOL = 0
      For [L]A_I=1 To 10
       If ([F:SCMCAL]COA([L]A_I-1)<>"" or [F:SCMCAL]ACC([L]A_I-1)<>"")
        [L]A_NEWCOL += 1
        SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_COA(A_NEWCOL) = NewInstance  C_CPTANALIN_C_COA(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4),"C_COA") AllocGroup SCOHEAD
        SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_COA(A_NEWCOL).COA = [F:SCMCAL]COA([L]A_I-1)
        SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_COA(A_NEWCOL).ACC = [F:SCMCAL]ACC([L]A_I-1)
        [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_COA(A_NEWCOL).ACTION("AREAD_AFTER"))
        If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
       Endif
      Next
      [L]A_NEWCOL = 0
      For [L]A_I=1 To 20
       [L]A_NEWCOL += 1
       SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_DIE(A_NEWCOL) = NewInstance  C_CPTANALIN_C_DIE(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4),"C_DIE") AllocGroup SCOHEAD
       SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_DIE(A_NEWCOL).DIE = [F:SCMCAL]DIE([L]A_I-1)
       SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_DIE(A_NEWCOL).CCE = [F:SCMCAL]CCE([L]A_I-1)
       [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
       If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
      Next
      [L]A_NEWCOL = 0
      For [L]A_I=1 To 10
       If ([F:SCMCAL]LED([L]A_I-1)<>"")
        [L]A_NEWCOL += 1
        SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_LED(A_NEWCOL) = NewInstance  C_CPTANALIN_C_LED(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4),"C_LED") AllocGroup SCOHEAD
        SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_LED(A_NEWCOL).LED = [F:SCMCAL]LED([L]A_I-1)
        [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).C_LED(A_NEWCOL).ACTION("AREAD_AFTER"))
        If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
       Endif
      Next
      [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).ACTION("AREAD_AFTER"))
      If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
      SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).ASTALIN = [V]CST_ALL
     Elsif fstat
      [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCM(A_N3).SCMCAL(A_N4).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"SCI.SCM.SCMCAL")+" : "+num$('SCM')
&      +"~"+num$(36)
&      +"~"+num$([SCM]SCONUM)
&      +"~"+num$([SCM]SCILIN)
&      +"~"+num$([SCM]SCMLIN)
&      +"~"+num$('')
&      +"~"+num$(1)
&      -":"-func ASYRFNC.MES1(mess(93,140,1),"CPTANALIN"),[V]CST_AWARNING))
     Endif
    Endif
    #-----------------------#
   Next SCM
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  Endif
  #-----------------------#
  #-----------------------#
  If [L]A_LEVEL>=3
   Default File [F:SCS]
   [L]A_N3=1
   Read [F:SCS]SCS0 = [SCI]SCONUM;[SCI]SCILIN;5
   If !fstat
    If dim([F:SCS]AUUID)>0 & [F:SCS]AUUID=NullUuid
     [F:SCS]AUUID = getUuid
    Endif
    SetInstance SCOHEAD.SCI(A_N2).SCS(A_N3) With [F:SCS]
    [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
    SCOHEAD.SCI(A_N2).SCS(A_N3).ASTALIN = [V]CST_ALL
    #-----------------------#
    If [L]A_LEVEL>=4
     Default File [F:SCSCAL]
     [L]A_N4=1
     Read [F:SCSCAL]CAL0 = 'SCS';36;[SCS]SCONUM;[SCS]SCILIN;[SCS]SCSLIN;'';1
     If !fstat
      If dim([F:SCSCAL]AUUID)>0 & [F:SCSCAL]AUUID=NullUuid
       [F:SCSCAL]AUUID = getUuid
      Endif
      SetInstance SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4) With [F:SCSCAL]
      [L]A_NEWCOL = 0
      For [L]A_I=1 To 10
       If ([F:SCSCAL]COA([L]A_I-1)<>"" or [F:SCSCAL]ACC([L]A_I-1)<>"")
        [L]A_NEWCOL += 1
        SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_COA(A_NEWCOL) = NewInstance  C_CPTANALIN_C_COA(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4),"C_COA") AllocGroup SCOHEAD
        SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_COA(A_NEWCOL).COA = [F:SCSCAL]COA([L]A_I-1)
        SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_COA(A_NEWCOL).ACC = [F:SCSCAL]ACC([L]A_I-1)
        [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_COA(A_NEWCOL).ACTION("AREAD_AFTER"))
        If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
       Endif
      Next
      [L]A_NEWCOL = 0
      For [L]A_I=1 To 20
       [L]A_NEWCOL += 1
       SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_DIE(A_NEWCOL) = NewInstance  C_CPTANALIN_C_DIE(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4),"C_DIE") AllocGroup SCOHEAD
       SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_DIE(A_NEWCOL).DIE = [F:SCSCAL]DIE([L]A_I-1)
       SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_DIE(A_NEWCOL).CCE = [F:SCSCAL]CCE([L]A_I-1)
       [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
       If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
      Next
      [L]A_NEWCOL = 0
      For [L]A_I=1 To 10
       If ([F:SCSCAL]LED([L]A_I-1)<>"")
        [L]A_NEWCOL += 1
        SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_LED(A_NEWCOL) = NewInstance  C_CPTANALIN_C_LED(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4),"C_LED") AllocGroup SCOHEAD
        SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_LED(A_NEWCOL).LED = [F:SCSCAL]LED([L]A_I-1)
        [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).C_LED(A_NEWCOL).ACTION("AREAD_AFTER"))
        If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
       Endif
      Next
      [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).ACTION("AREAD_AFTER"))
      If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
      SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).ASTALIN = [V]CST_ALL
     Elsif fstat
      [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).SCSCAL(A_N4).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"SCI.SCS.SCSCAL")+" : "+num$('SCS')
&      +"~"+num$(36)
&      +"~"+num$([SCS]SCONUM)
&      +"~"+num$([SCS]SCILIN)
&      +"~"+num$([SCS]SCSLIN)
&      +"~"+num$('')
&      +"~"+num$(1)
&      -":"-func ASYRFNC.MES1(mess(93,140,1),"CPTANALIN"),[V]CST_AWARNING))
     Endif
    Endif
    #-----------------------#
   Elsif fstat
    [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCS(A_N3).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"SCI.SCS")+" : "+num$([SCI]SCONUM)
&    +"~"+num$([SCI]SCILIN)
&    +"~"+num$(5)
&    -":"-func ASYRFNC.MES1(mess(93,140,1),"SCOSRV"),[V]CST_AWARNING))
   Endif
  Endif
  #-----------------------#
  #-----------------------#
  If [L]A_LEVEL>=3
   Default File [F:SCICAL]
   [L]A_N3=1
   Read [F:SCICAL]CAL0 = 'SCI';36;[SCI]SCONUM;[SCI]SCILIN;0;'';1
   If !fstat
    If dim([F:SCICAL]AUUID)>0 & [F:SCICAL]AUUID=NullUuid
     [F:SCICAL]AUUID = getUuid
    Endif
    SetInstance SCOHEAD.SCI(A_N2).SCICAL(A_N3) With [F:SCICAL]
    [L]A_NEWCOL = 0
    For [L]A_I=1 To 10
     If ([F:SCICAL]COA([L]A_I-1)<>"" or [F:SCICAL]ACC([L]A_I-1)<>"")
      [L]A_NEWCOL += 1
      SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_COA(A_NEWCOL) = NewInstance  C_CPTANALIN_C_COA(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCICAL(A_N3),"C_COA") AllocGroup SCOHEAD
      SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_COA(A_NEWCOL).COA = [F:SCICAL]COA([L]A_I-1)
      SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_COA(A_NEWCOL).ACC = [F:SCICAL]ACC([L]A_I-1)
      [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_COA(A_NEWCOL).ACTION("AREAD_AFTER"))
      If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
     Endif
    Next
    [L]A_NEWCOL = 0
    For [L]A_I=1 To 20
     [L]A_NEWCOL += 1
     SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_DIE(A_NEWCOL) = NewInstance  C_CPTANALIN_C_DIE(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCICAL(A_N3),"C_DIE") AllocGroup SCOHEAD
     SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_DIE(A_NEWCOL).DIE = [F:SCICAL]DIE([L]A_I-1)
     SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_DIE(A_NEWCOL).CCE = [F:SCICAL]CCE([L]A_I-1)
     [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
     If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
    Next
    [L]A_NEWCOL = 0
    For [L]A_I=1 To 10
     If ([F:SCICAL]LED([L]A_I-1)<>"")
      [L]A_NEWCOL += 1
      SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_LED(A_NEWCOL) = NewInstance  C_CPTANALIN_C_LED(SCOHEAD.ACTX,NullUuid,[L]A_I,SCOHEAD.SCI(A_N2).SCICAL(A_N3),"C_LED") AllocGroup SCOHEAD
      SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_LED(A_NEWCOL).LED = [F:SCICAL]LED([L]A_I-1)
      [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCICAL(A_N3).C_LED(A_NEWCOL).ACTION("AREAD_AFTER"))
      If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
     Endif
    Next
    [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCICAL(A_N3).ACTION("AREAD_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
    SCOHEAD.SCI(A_N2).SCICAL(A_N3).ASTALIN = [V]CST_ALL
   Elsif fstat
    [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).SCICAL(A_N3).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"SCI.SCICAL")+" : "+num$('SCI')
&    +"~"+num$(36)
&    +"~"+num$([SCI]SCONUM)
&    +"~"+num$([SCI]SCILIN)
&    +"~"+num$(0)
&    +"~"+num$('')
&    +"~"+num$(1)
&    -":"-func ASYRFNC.MES1(mess(93,140,1),"CPTANALIN"),[V]CST_AWARNING))
   Endif
  Endif
  #-----------------------#
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.SCI(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"SCI")+" : "+num$([SCO]SCONUM)
&  +"~"+num$(1000)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"SCOITM"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet SCOHEAD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



