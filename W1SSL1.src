#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SSL1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:14:29"
A_USER  = "ADMIN"
A_STAMP = "20180828001429"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SSL1 [SSL1]
Gosub HORODAT
Local Inpbox "SSL1" From GFONCTION At A_STAMP With A_WINDPREV Mask [SSL1] As [SIM_]
Grizo [SSL1]5
Grizo [SSL1]10
Grizo [SSL1]15
Grizo [SSL1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SSL1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=165 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=64 : Y1(1)=3 : Y2(1)=8
X1(2)=65 : X2(2)=165 : Y1(2)=3 : Y2(2)=8
X1(4)=1 : X2(4)=165 : Y1(4)=9 : Y2(4)=28
Return

$ON_STOFCY
Onevent CONTROL Call C_STOFCY(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_STOFCY(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_STOFCY From W1SSL1
Onevent INIT_AREA Call D_STOFCY(zc) From W1SSL1
Return

Subprog D_STOFCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]STOFCY,indice)=0
 VALEUR = GFCYDEF(7)
Endif
Gosub _AFF
End

Subprog AS_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(6426,GBOUT2) From OBJDIV
Call TEXTE(8902,GBOUT3) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STKASFCY
Call STKASFCY(VALEUR) From STKACT
If mkstat=2
 [M]STOFCY(INDIC) = VALEUR
 Affzo STOFCY(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_STOFCY(zc) From W1SSL1
Onkey 130 Titled GBOUT2 Call B2_STOFCY(zc) From W1SSL1
Onkey 131 Titled GBOUT3 Call B3_STOFCY(zc) From W1SSL1
Onkey   2 Titled GBOUTS Call S_STOFCY(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_STOFCY(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_STOFCY(zc) From W1SSL1
Gosub _AFF
End

Subprog C_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action STKCTRFCY
   Call STKCTRFCY(VALEUR) From STKACT
   If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_STOFCY
Call AM_STOFCY(zc)
If !mkstat & GOBJET
 zoncou = "STOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STOFCY(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSTOFCY)")>indice
 [M]STOFCY(indice) = VALEUR
 Affzo ZSTOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B2_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action CONSSEA
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONSSEA"
PARMSK(1) = "1"
PARMSK(2) = [M:SSL1]STOFCY
PARMSK(3) = VALEUR
PARMSK(4) = [M:SSL1]LOCTYP(nolign-1)
PARMSK(5) = ""
PARMSK(6) = "3"
PARMSK(7) = "0"
PARMSK(8) = string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
PARMSK(9) = VALEUR
Call CONSULT_CHAR(VALEUR,"SEA",PARMSK) From GCONSULT
VALEUR = PARMSK(9)
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action CONSSED
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONSSED"
PARMSK(1) = "1"
PARMSK(2) = [M:SSL1]STOFCY
PARMSK(3) = [M:SSL1]ITMREF(nolign-1)
PARMSK(4) = [M:SSL1]ITMREF(nolign-1)
PARMSK(5) = "0"
PARMSK(6) = string$([M:SSL1]SRGWAIFLG<>2,'[F:TLO]LOCCAT<>2')
PARMSK(7) = VALEUR
Call CONSULT_CHAR(VALEUR,"SED",PARMSK) From GCONSULT
VALEUR = PARMSK(7)
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1SSL1
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_SRGPPSSTR
Onevent CONTROL Call C_SRGPPSSTR(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_SRGPPSSTR From W1SSL1
Onevent BEFORE_INPUT Call AS_SRGPPSSTR(zc) From W1SSL1
Return

Subprog AS_SRGPPSSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_SRGPPSSTR(zc) From W1SSL1
Gosub _AFF
End

Subprog C_SRGPPSSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "SRGPPSSTR" : GZNUM = 19822 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_SRGPPSSTR(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "SRGPPSSTR" : GZNUM = 19822 : Endif
Endif
Gosub _AFF
End

$AMM_SRGPPSSTR
Call AM_SRGPPSSTR(zc)
If !mkstat & GOBJET
 zoncou = "SRGPPSSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SRGPPSSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SRGPPSSTR(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "SRGPPSSTR" : GZNUM = 19822 : Endif
Gosub _AFF
End

Subprog S_SRGPPSSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELPPS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELPPS"
 PARMSK(1) = [M:SSL1]STOFCY
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELPPS","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LSTWIOFLG
Onevent CONTROL Call C_LSTWIOFLG(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_LSTWIOFLG From W1SSL1
Onevent INIT_AREA Call D_LSTWIOFLG(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_LSTWIOFLG(zc) From W1SSL1
Return

Subprog D_LSTWIOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]LSTWIOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LSTWIOFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_LSTWIOFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_LSTWIOFLG(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "LSTWIOFLG" : GZNUM = 53930 : Endif
Gosub _AFF
End

$AMM_LSTWIOFLG
Call AM_LSTWIOFLG(zc)
If !mkstat & GOBJET
 zoncou = "LSTWIOFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LSTWIOFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LSTWIOFLG(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "LSTWIOFLG" : GZNUM = 53930 : Endif
Gosub _AFF
End

$ON_WRHE
Onevent CONTROL Call C_WRHE(zc) From W1SSL1
Onevent INIT_AREA Call D_WRHE(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_WRHE(zc) From W1SSL1
Return

Subprog D_WRHE(VALEUR)
Variable Char    VALEUR()
If varinit([M]WRHE,indice)=0
 ## Action WRHINIT
 Call WRHINIT(VALEUR,[M]STOFCY,5) From STKWRH
Endif
Gosub _AFF
End

Subprog AS_WRHE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WRHE(zc) From W1SSL1
Gosub _AFF
End

Subprog C_WRHE(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]STOFCY,GWRHOBY) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRHE" : GZNUM = 40369 : Endif
If !mkstat
 ## Action STD
 Call C_WRHE(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "WRHE" : GZNUM = 40369 : Endif
Endif
Gosub _AFF
End

Subprog S_WRHE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M]STOFCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SAIFLG
Onevent INIT_AREA Call D_SAIFLG(zc) From W1SSL1
Return

Subprog D_SAIFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SAIFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRTYPSSL
Onevent INIT_AREA Call D_VCRTYPSSL(zc) From W1SSL1
Return

Subprog D_VCRTYPSSL(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPSSL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SRGWAIFLG
Onevent INIT_AREA Call D_SRGWAIFLG(zc) From W1SSL1
Return

Subprog D_SRGWAIFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SRGWAIFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SRGPPSCOD
Onevent INIT_AREA Call D_SRGPPSCOD(zc) From W1SSL1
Return

Subprog D_SRGPPSCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SRGPPSCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRHOBY
Onevent INIT_AREA Call D_WRHOBY(zc) From W1SSL1
Return

Subprog D_WRHOBY(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHOBY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRHGES
Onevent INIT_AREA Call D_WRHGES(zc) From W1SSL1
Return

Subprog D_WRHGES(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHGES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FLGDAT
Onevent INIT_AREA Call D_FLGDAT(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_FLGDAT(zc) From W1SSL1
Return

Subprog D_FLGDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGDAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRTYPC1
Onevent BEFORE_INPUT Call AS_VCRTYPC1(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_VCRTYPC1 From W1SSL1
Onevent INIT_AREA Call D_VCRTYPC1(zc) From W1SSL1
Onevent CONTROL Call C_VCRTYPC1(zc) From W1SSL1
Return

Subprog D_VCRTYPC1(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPC1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRTYPC1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(725) From COMBOS
## Action STD
Call AS_VCRTYPC1(VALEUR) From TRTSSL
If mkstat=2
 [M]VCRTYPC1(INDIC) = VALEUR
 Affzo VCRTYPC1(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,725,1))))
Endif
If !mkstat
 Discombo 0 From VCRTYPC1(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From VCRTYPC1(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_VCRTYPC1(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_VCRTYPC1
Call AM_VCRTYPC1(zc)
If !mkstat & GOBJET
 zoncou = "VCRTYPC1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRTYPC1(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_VCRTYPC1(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "VCRTYPC1" : GZNUM = 4969 : Endif
Gosub _AFF
End

$ON_WRHSTR
Onevent CONTROL Call C_WRHSTR(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_WRHSTR From W1SSL1
Onevent BEFORE_INPUT Call AS_WRHSTR(zc) From W1SSL1
Return

Subprog AS_WRHSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(39594,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_WRHSTR(zc) From W1SSL1
Onkey   2 Titled GBOUTS Call S_WRHSTR(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_WRHSTR(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_WRHSTR(zc) From W1SSL1
Gosub _AFF
End

Subprog C_WRHSTR(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]STOFCY,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRHSTR" : GZNUM = 40827 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("WRH","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "WRHSTR" : GZNUM = 40827 : Endif
Endif
Gosub _AFF
End

$AMM_WRHSTR
Call AM_WRHSTR(zc)
If !mkstat & GOBJET
 zoncou = "WRHSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRHSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WRHSTR(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "WRHSTR" : GZNUM = 40827 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWRHSTR)")>indice
 [M]WRHSTR(indice) = VALEUR
 Affzo ZWRHSTR(indice)
Endif
Gosub _AFF
End

Subprog S_WRHSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M]STOFCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_WRHSTR(VALEUR)
Variable Char    VALEUR()
Call OBJET("WRH",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_WRHSTR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "WRH"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WRHSTR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("WRH",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWRHSTR
Onevent BEFORE_AREA Gosub AV_ZWRHSTR From W1SSL1
Return

$AV_ZWRHSTR
If clalev([F:WRH])=0 : Local File WAREHOUSE [WRH] : Endif
Call LECTURE("WRH",num$([M]WRHSTR(indice)),"") From CONTOBJ
zc = [F:WRH]WRHNAM
Gosub _AFF
Return

$ON_WRHEND
Onevent CONTROL Call C_WRHEND(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_WRHEND(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_WRHEND From W1SSL1
Return

Subprog AS_WRHEND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(39594,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_WRHEND(zc) From W1SSL1
Onkey   2 Titled GBOUTS Call S_WRHEND(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_WRHEND(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_WRHEND(zc) From W1SSL1
Gosub _AFF
End

Subprog C_WRHEND(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]STOFCY,1) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRHEND" : GZNUM = 40828 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("WRH","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "WRHEND" : GZNUM = 40828 : Endif
 If !mkstat
  ## Action STD
  Call C_WRHEND(VALEUR) From TRTSSL
  If mkstat : GERR = 1 : GZONE = "WRHEND" : GZNUM = 40828 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WRHEND
Call AM_WRHEND(zc)
If !mkstat & GOBJET
 zoncou = "WRHEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRHEND(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWRHEND)")>indice
 [M]WRHEND(indice) = VALEUR
 Affzo ZWRHEND(indice)
Endif
Gosub _AFF
End

Subprog S_WRHEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M]STOFCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_WRHEND(VALEUR)
Variable Char    VALEUR()
Call OBJET("WRH",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_WRHEND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "WRH"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WRHEND(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("WRH",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWRHEND
Onevent BEFORE_AREA Gosub AV_ZWRHEND From W1SSL1
Return

$AV_ZWRHEND
If clalev([F:WRH])=0 : Local File WAREHOUSE [WRH] : Endif
Call LECTURE("WRH",num$([M]WRHEND(indice)),"") From CONTOBJ
zc = [F:WRH]WRHNAM
Gosub _AFF
Return

$ON_ITMREFSTR
Onevent CONTROL Call C_ITMREFSTR(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_ITMREFSTR From W1SSL1
Onevent BEFORE_INPUT Call AS_ITMREFSTR(zc) From W1SSL1
Return

Subprog IB_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREFSTR(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_ITMREFSTR(zc) From W1SSL1
Onkey 170 Titled GBOUT13 Call B13_ITMREFSTR(zc) From W1SSL1
Onkey   2 Titled GBOUTS Call S_ITMREFSTR(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_ITMREFSTR(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_ITMREFSTR(zc) From W1SSL1
Gosub _AFF
End

Subprog C_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREFSTR
Call AM_ITMREFSTR(zc)
If !mkstat & GOBJET
 zoncou = "ITMREFSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREFSTR(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "ITMREFSTR" : GZNUM = 12930 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZITMREFSTR)")>indice
 [M]ITMREFSTR(indice) = VALEUR
 Affzo ZITMREFSTR(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREFSTR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREFSTR
Onevent BEFORE_AREA Gosub AV_ZITMREFSTR From W1SSL1
Return

$AV_ZITMREFSTR
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREFSTR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ITMREFEND
Onevent CONTROL Call C_ITMREFEND(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_ITMREFEND(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_ITMREFEND From W1SSL1
Return

Subprog IB_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREFEND(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_ITMREFEND(zc) From W1SSL1
Onkey 170 Titled GBOUT13 Call B13_ITMREFEND(zc) From W1SSL1
Onkey   2 Titled GBOUTS Call S_ITMREFEND(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_ITMREFEND(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_ITMREFEND(zc) From W1SSL1
Gosub _AFF
End

Subprog C_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREFEND(VALEUR) From TRTSSL
   If mkstat : GERR = 1 : GZONE = "ITMREFEND" : GZNUM = 12931 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREFEND
Call AM_ITMREFEND(zc)
If !mkstat & GOBJET
 zoncou = "ITMREFEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZITMREFEND)")>indice
 [M]ITMREFEND(indice) = VALEUR
 Affzo ZITMREFEND(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_ITMREFEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREFEND(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREFEND
Onevent BEFORE_AREA Gosub AV_ZITMREFEND From W1SSL1
Return

$AV_ZITMREFEND
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREFEND(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_LOCSTR
Onevent CONTROL Call C_LOCSTR(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_LOCSTR From W1SSL1
Onevent BEFORE_INPUT Call AS_LOCSTR(zc) From W1SSL1
Return

Subprog AS_LOCSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOCSTR(zc) From W1SSL1
Gosub _AFF
End

Subprog C_LOCSTR(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCSTR" : GZNUM = 5890 : Endif
If !mkstat
 ## Action STKCTRSRG
 Call STKCTRSRG(VALEUR,[M:SSL1]STOFCY,string$(GWRHACT-1,num$(sigma(1,dim([M]WRHSTR),[M]WRHSTR))),0) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCSTR" : GZNUM = 5890 : Endif
Endif
Gosub _AFF
End

$AMM_LOCSTR
Call AM_LOCSTR(zc)
If !mkstat & GOBJET
 zoncou = "LOCSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOCSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOCSTR(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "LOCSTR" : GZNUM = 5890 : Endif
Gosub _AFF
End

Subprog S_LOCSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELQUA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELQUA"
 PARMSK(1) = [M:SSL1]STOFCY
 PARMSK(2) = string$(GWRHACT-1,num$(sigma(1,dim([M]WRHSTR),[M]WRHSTR)))
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELQUA","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LOCEND
Onevent CONTROL Call C_LOCEND(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_LOCEND(zc) From W1SSL1
Return

Subprog AS_LOCEND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOCEND(zc) From W1SSL1
Gosub _AFF
End

Subprog C_LOCEND(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCEND" : GZNUM = 5891 : Endif
If !mkstat
 ## Action STKCTRSRG
 Call STKCTRSRG(VALEUR,[M:SSL1]STOFCY,string$(GWRHACT-1,num$(sigma(1,dim([M]WRHEND),[M]WRHEND))),0) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCEND" : GZNUM = 5891 : Endif
 If !mkstat
  ## Action STD
  Call C_LOCEND(VALEUR) From TRTSSL
  If mkstat : GERR = 1 : GZONE = "LOCEND" : GZNUM = 5891 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOCEND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELQUA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELQUA"
 PARMSK(1) = [M:SSL1]STOFCY
 PARMSK(2) = string$(GWRHACT-1,num$(sigma(1,dim([M]WRHEND),[M]WRHEND)))
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELQUA","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STASTR
Onevent AFTER_CHANGE Gosub AMM_STASTR From W1SSL1
Onevent CONTROL Call C_STASTR(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_STASTR(zc) From W1SSL1
Return

Subprog AS_STASTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STASTR(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_STASTR(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_STASTR(zc) From W1SSL1
Gosub _AFF
End

Subprog C_STASTR(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TST","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "STASTR" : GZNUM = 51441 : Endif
Gosub _AFF
End

$AMM_STASTR
Call AM_STASTR(zc)
If !mkstat & GOBJET
 zoncou = "STASTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STASTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STASTR(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "STASTR" : GZNUM = 51441 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSTASTR)")>indice
 [M]STASTR(indice) = VALEUR
 Affzo ZSTASTR(indice)
Endif
Gosub _AFF
End

Subprog S_STASTR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TST"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_STASTR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TST"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STASTR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TST",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTASTR
Onevent BEFORE_AREA Gosub AV_ZSTASTR From W1SSL1
Return

$AV_ZSTASTR
Call LECTEXTRA(zc,"TABSTASTO","STAAXX",num$([M]STASTR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_STAEND
Onevent CONTROL Call C_STAEND(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_STAEND(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_STAEND From W1SSL1
Return

Subprog AS_STAEND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STAEND(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_STAEND(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_STAEND(zc) From W1SSL1
Gosub _AFF
End

Subprog C_STAEND(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TST","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "STAEND" : GZNUM = 51442 : Endif
If !mkstat
 ## Action STD
 Call C_STAEND(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "STAEND" : GZNUM = 51442 : Endif
Endif
Gosub _AFF
End

$AMM_STAEND
Call AM_STAEND(zc)
If !mkstat & GOBJET
 zoncou = "STAEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STAEND(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZSTAEND)")>indice
 [M]STAEND(indice) = VALEUR
 Affzo ZSTAEND(indice)
Endif
Gosub _AFF
End

Subprog S_STAEND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TST"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_STAEND(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TST"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STAEND(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TST",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTAEND
Onevent BEFORE_AREA Gosub AV_ZSTAEND From W1SSL1
Return

$AV_ZSTAEND
Call LECTEXTRA(zc,"TABSTASTO","STAAXX",num$([M]STAEND(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_STRDAT
Onevent AFTER_CHANGE Gosub AMM_STRDAT From W1SSL1
Onevent BEFORE_AREA Gosub AV_STRDAT From W1SSL1
Return

$AV_STRDAT
Chgfmt [M]STRDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$AMM_STRDAT
Call AM_STRDAT(zc)
If !mkstat & GOBJET
 zoncou = "STRDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_STRDAT(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "STRDAT" : GZNUM = 1805 : Endif
Gosub _AFF
End

$ON_ENDDAT
Onevent CONTROL Call C_ENDDAT(zc) From W1SSL1
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1SSL1
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_ENDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDAT(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "ENDDAT" : GZNUM = 1806 : Endif
Gosub _AFF
End

$ON_VCRNUMSTR1
Onevent CONTROL Call C_VCRNUMSTR1(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_VCRNUMSTR1 From W1SSL1
Onevent BEFORE_INPUT Call AS_VCRNUMSTR1(zc) From W1SSL1
Return

Subprog AS_VCRNUMSTR1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VCRNUMSTR1(zc) From W1SSL1
Gosub _AFF
End

Subprog C_VCRNUMSTR1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCRNUMSTR1" : GZNUM = 51224 : Endif
Endif
Gosub _AFF
End

$AMM_VCRNUMSTR1
Call AM_VCRNUMSTR1(zc)
If !mkstat & GOBJET
 zoncou = "VCRNUMSTR1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRNUMSTR1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VCRNUMSTR1(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "VCRNUMSTR1" : GZNUM = 51224 : Endif
Gosub _AFF
End

Subprog S_VCRNUMSTR1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSRGS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRGS"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = num$([M]VCRTYPC1)
 PARMSK(3) = [M]VCRNUMSTR1
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSRGS","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VCRNUMEND1
Onevent CONTROL Call C_VCRNUMEND1(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_VCRNUMEND1 From W1SSL1
Onevent BEFORE_INPUT Call AS_VCRNUMEND1(zc) From W1SSL1
Return

Subprog AS_VCRNUMEND1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VCRNUMEND1(zc) From W1SSL1
Gosub _AFF
End

Subprog C_VCRNUMEND1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCRNUMEND1" : GZNUM = 51225 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_VCRNUMEND1(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "VCRNUMEND1" : GZNUM = 51225 : Endif
Endif
Gosub _AFF
End

$AMM_VCRNUMEND1
Call AM_VCRNUMEND1(zc)
If !mkstat & GOBJET
 zoncou = "VCRNUMEND1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRNUMEND1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VCRNUMEND1(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "VCRNUMEND1" : GZNUM = 51225 : Endif
Gosub _AFF
End

Subprog S_VCRNUMEND1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSRGS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRGS"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = num$([M]VCRTYPC1)
 PARMSK(3) = [M]VCRNUMEND1
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSRGS","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_FORMULE
Return

$ON_SRTCRIT1
Onevent INIT_AREA Call D_SRTCRIT1(zc) From W1SSL1
Return

Subprog D_SRTCRIT1(VALEUR)
Variable Integer VALEUR
If varinit([M]SRTCRIT1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SRTCRIT2
Onevent INIT_AREA Call D_SRTCRIT2(zc) From W1SSL1
Return

Subprog D_SRTCRIT2(VALEUR)
Variable Integer VALEUR
If varinit([M]SRTCRIT2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRTYPC
Onevent INIT_AREA Call D_VCRTYPC(zc) From W1SSL1
Return

Subprog D_VCRTYPC(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMSTR
Return

$ON_VCRNUMEND
Return

$ON_NBLIG
Onevent BEFORE_LINE Call AVANT_NBLIG From W1SSL1
Onevent AFTER_LINE Call APRES_NBLIG From W1SSL1
Onevent BEFORE_INPUT Call AS_NBLIG From W1SSL1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From TRTSSL
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(454,GBOUT5) From OBJDIV
Call TEXTE(12817,GBOUT6) From OBJDIV
Call IB_NBLIG
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1SSL1
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1SSL1
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1SSL1
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1SSL1
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1SSL1
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B2_NBLIG From TRTSSL
Endif
If !GWEBSERV
 ## Action SAISTOENT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTOENT"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB2_NBLIG" : PROGSUB = "TRTSSL" : PROGSPE = "SPESSL" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "27"
 PARMSK(2) = "SSL1"
 PARMSK(3) = "WQSSL"+GFLAG+"S"
 PARMSK(4) = num$(nolign-1)
 PARMSK(5) = [M:SSL1]STOFCY
 PARMSK(6) = ""
 PARMSK(7) = num$([M:SSL1]TRSTYP(nolign-1))
 PARMSK(8) = [M:SSL1]TRSCOD(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"","TRTSTOENT","",1,"XYTRTSTOENT") From GTRAITE
 ACTION = "BB2_NBLIG" : PROGSUB = "TRTSSL" : PROGSPE = "SPESSL" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B3_NBLIG From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B4_NBLIG From TRTSSL
Endif
If !GWEBSERV
 ## Action SAIENTLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIENTLOT"
 PARMSK(1) = "SSL1"
 PARMSK(2) = "SRT"
 PARMSK(3) = num$(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"ISTOENTLO","SUBENTL","",1,"SPEENT") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From TRTSSL
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action SAISTOENT
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAISTOENT"
Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
ACTION = "AAPRES_NBLIG" : PROGSUB = "TRTSSL" : PROGSPE = "SPESSL" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
PARMSK(1) = "27"
PARMSK(2) = "SSL1"
PARMSK(3) = "WQSSL"+GFLAG+"S"
PARMSK(4) = num$(nolign-1)
PARMSK(5) = [M:SSL1]STOFCY
PARMSK(6) = ""
PARMSK(7) = num$([M:SSL1]TRSTYP(nolign-1))
PARMSK(8) = [M:SSL1]TRSCOD(nolign-1)
Call TRAITE_NUM(BASPAG,PARMSK,"","TRTSTOENT","",1,"XYTRTSTOENT") From GTRAITE
ACTION = "BAPRES_NBLIG" : PROGSUB = "TRTSSL" : PROGSPE = "SPESSL" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
GACTION = SAVACT
If mkstat : End : Endif
## Action SAIENTLOT
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAIENTLOT"
PARMSK(1) = "SSL1"
PARMSK(2) = "SRT"
PARMSK(3) = num$(nolign-1)
Call TRAITE_NUM(BASPAG,PARMSK,"ISTOENTLO","SUBENTL","",1,"SPEENT") From GTRAITE
GACTION = SAVACT
If mkstat : End : Endif
## Action STD
Call APRES_NBLIG From TRTSSL
If mkstat : End : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B5_NBLIG From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
## Action CONSSFC
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONSSFC"
Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
ACTION = "AB6_NBLIG" : PROGSUB = "TRTSSL" : PROGSPE = "SPESSL" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
PARMSK(1) = "0"
PARMSK(2) = [M:SSL1]STOFCY
PARMSK(3) = [M:SSL1]ITMREF(nolign-1)
PARMSK(4) = ""
Call CONSULT_NUM(BASPAG,"SFC",PARMSK) From GCONSULT
ACTION = "BB6_NBLIG" : PROGSUB = "TRTSSL" : PROGSPE = "SPESSL" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
GACTION = SAVACT
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_COCHAGE
Onevent BEFORE_INPUT Call AS_COCHAGE(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_COCHAGE From W1SSL1
Onevent INIT_AREA Call D_COCHAGE(zc) From W1SSL1
Return

Subprog D_COCHAGE(VALEUR)
Variable Integer VALEUR
If varinit([M]COCHAGE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_COCHAGE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_COCHAGE(VALEUR) From TRTSSL
If mkstat=2
 [M]COCHAGE(INDIC) = VALEUR
 Affzo COCHAGE(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_COCHAGE
Call AM_COCHAGE(zc)
If !mkstat & GOBJET
 zoncou = "COCHAGE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_COCHAGE(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_COCHAGE(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "COCHAGE" : GZNUM = 2917 : Endif
Gosub _AFF
End

$ON_SRGPPS
Onevent BEFORE_INPUT Call AS_SRGPPS(zc) From W1SSL1
Onevent AFTER_CHANGE Gosub AMM_SRGPPS From W1SSL1
Return

Subprog IB_SRGPPS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_SRGPPS From TRTSSL
Endif
Gosub _AFF
End

Subprog AS_SRGPPS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call IB_SRGPPS(VALEUR)
## Action STD
Call AS_SRGPPS(VALEUR) From TRTSSL
If mkstat=2
 [M]SRGPPS(INDIC) = VALEUR
 Affzo SRGPPS(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_SRGPPS(zc) From W1SSL1
Onkey 130 Titled GBOUT2 Call B2_SRGPPS(zc) From W1SSL1
Onkey 131 Titled GBOUT3 Call B3_SRGPPS(zc) From W1SSL1
Onkey 132 Titled GBOUT4 Call B4_SRGPPS(zc) From W1SSL1
Gosub _AFF
End

$AMM_SRGPPS
Call AM_SRGPPS(zc)
If !mkstat & GOBJET
 zoncou = "SRGPPS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SRGPPS(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SRGPPS(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "SRGPPS" : GZNUM = 19822 : Endif
Gosub _AFF
End

Subprog B1_SRGPPS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B1_SRGPPS(VALEUR) From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_SRGPPS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B2_SRGPPS(VALEUR) From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_SRGPPS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B3_SRGPPS(VALEUR) From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_SRGPPS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B4_SRGPPS(VALEUR) From TRTSSL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_VCRTYP
Onevent BEFORE_INPUT Call AS_VCRTYP(zc) From W1SSL1
Onevent CONTROL Call C_VCRTYP(zc) From W1SSL1
Onevent INIT_AREA Call D_VCRTYP(zc) From W1SSL1
Return

Subprog D_VCRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(701) From COMBOS
## Action STD
Call AS_VCRTYP(VALEUR) From TRTSSL
If mkstat=2
 [M]VCRTYP(INDIC) = VALEUR
 Affzo VCRTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,701,1))))
Endif
If !mkstat
 Discombo 0 From VCRTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From VCRTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_VCRTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_VCRTYP(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "VCRTYP" : GZNUM = 4969 : Endif
Gosub _AFF
End

$ON_VCRNUM
Onevent CONTROL Call C_VCRNUM(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_VCRNUM(zc) From W1SSL1
Return

Subprog AS_VCRNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VCRNUM(zc) From W1SSL1
Gosub _AFF
End

Subprog C_VCRNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCRNUM" : GZNUM = 3170 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_VCRNUM(VALEUR) From TRTSSL
 If mkstat : GERR = 1 : GZONE = "VCRNUM" : GZNUM = 3170 : Endif
Endif
Gosub _AFF
End

Subprog S_VCRNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSRG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRG"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = "LIG"
 PARMSK(3) = num$([M:SSL1]VCRTYP(nolign-1))
 PARMSK(4) = [M:SSL1]VCRNUM(nolign-1)
 PARMSK(5) = num$(nolign-1)
 PARMSK(6) = "1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSRG","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VCRLIN
Onevent CONTROL Call C_VCRLIN(zc) From W1SSL1
Onevent BEFORE_INPUT Call AS_VCRLIN(zc) From W1SSL1
Return

Subprog AS_VCRLIN(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VCRLIN(zc) From W1SSL1
Gosub _AFF
End

Subprog C_VCRLIN(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_VCRLIN(VALEUR) From TRTSSL
If mkstat : GERR = 1 : GZONE = "VCRLIN" : GZNUM = 5300 : Endif
Gosub _AFF
End

Subprog S_VCRLIN(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STKSELSRG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRG"
 PARMSK(1) = [M:SSL1]STOFCY
 PARMSK(2) = "LIG"
 PARMSK(3) = num$([M:SSL1]VCRTYP(nolign-1))
 PARMSK(4) = [M:SSL1]VCRNUM(nolign-1)
 PARMSK(5) = num$(nolign-1)
 PARMSK(6) = "2"
 Call S_TAB_NUM(VALEUR,PARMSK,"STKSELSRG","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1SSL1
Onevent BEFORE_AREA Gosub AV_ITMREF From W1SSL1
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1SSL1
Return

Subprog IB_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

$AV_ITMREF
## Action STD
Call AV_ITMREF(zc) From TRTSSL
Gosub _AFF
Return

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREF(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_ITMREF(zc) From W1SSL1
Onkey 170 Titled GBOUT13 Call B13_ITMREF(zc) From W1SSL1
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1SSL1
Onkey 144 Titled GBOUTP Call P_ITMREF(zc) From W1SSL1
Onkey 146 Titled GBOUTA Call SA_ITMREF(zc) From W1SSL1
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREF(VALEUR) From TRTSSL
   If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSRG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSRG"
 PARMSK(1) = [M:SSL1]STOFCY
 PARMSK(2) = "LIG"
 PARMSK(3) = num$([M:SSL1]VCRTYP(nolign-1))
 PARMSK(4) = [M:SSL1]VCRNUM(nolign-1)
 PARMSK(5) = num$(nolign-1)
 PARMSK(6) = "3"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSRG","TRTSSL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2SSL1
Return

$TIT_COL
Gosub TIT_COL From W2SSL1
Return


