#<AdxTL>@(#)0.0.0.0 $Revision$Class Customers
# Supervisor
## ACLA-CLASSE ## BPCUSTOMER
# 2018-08-27 12:25:46 158

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "BPCUSTOMER_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Miscellaneous table loading
$INIT_TSCCODADI
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "INIT_TSCCODADI" : [L]ACTION = "INIT_TSCCODADI" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

####################################################################
# Operations of the class
####################################################################
# Fmethod Locks / unlocks
$LOCK_UNLOCK
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "LOCK_UNLOCK" : [L]ACTION = "LOCK_UNLOCK" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0BPCUSTOMER
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_TSCCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TSCCOD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_DIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DIE(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 6
 If this.C_DAYMON(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DAYMON(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.BPR<>null
 [L]ASTATUS = fmet this.BPR._AERROR(_CTX,_SUPP)
Endif
For AINDCLA=1 To maxtab(this.BPD)
 If this.BPD(AINDCLA)<>null
  [L]ASTATUS = fmet this.BPD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.BPAPRI<>null
 [L]ASTATUS = fmet this.BPAPRI._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0BPCUSTOMER
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_TSCCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TSCCOD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_DIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DIE(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 6
 If this.C_DAYMON(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DAYMON(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.BPR<>null
 [L]ASTATUS = fmet this.BPR._ADELERRORS(_APARAM)
Endif
For AINDCLA=1 To maxtab(this.BPD)
 If this.BPD(AINDCLA)<>null
  [L]ASTATUS = fmet this.BPD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.BPAPRI<>null
 [L]ASTATUS = fmet this.BPAPRI._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0BPCUSTOMER
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_REP('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_INVDTAAMT('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_TSCCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TSCCOD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_TSCCOD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_DIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DIE(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DIE('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 6
 If this.C_DAYMON(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DAYMON(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DAYMON('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.BPR<>null
 [L]ASTATUS = fmet this.BPR._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPR')
Endif
For AINDCLA=1 To maxtab(this.BPD)
 If this.BPD(AINDCLA)<>null
  [L]ASTATUS = fmet this.BPD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.BPAPRI<>null
 [L]ASTATUS = fmet this.BPAPRI._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPAPRI')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0BPCUSTOMER
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "CLAORDTEX1"
  If fmet this.AGETATTRIBUTE("CLAORDTEX1","$isLoaded")<>"true"
   Gosub READ_CLB_CLAORDTEX1
  Else
   [L]_CLB = this.CLAORDTEX1
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CLAORDTEX1","$contentType","text/rtf")
   [L]_CNT = "text/rtf"
  Endif
 When "CLAINVTEX1"
  If fmet this.AGETATTRIBUTE("CLAINVTEX1","$isLoaded")<>"true"
   Gosub READ_CLB_CLAINVTEX1
  Else
   [L]_CLB = this.CLAINVTEX1
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CLAINVTEX1","$contentType","text/rtf")
   [L]_CNT = "text/rtf"
  Endif
Endcase
Return

$READ_CLB_CLAORDTEX1
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WTXC]CODE = [L]_KEYVALTAB(1)
Read [WTXC] =
If !fstat
 [L]_CLB = [F:WTXC]TEXTE
Endif
LogicClose File [WTXC]
Return

$READ_EXI_CLAORDTEX1
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WTXC]CODE = this.ORDTEX
Look [WTXC] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WTXC]
Return

$READ_CLB_CLAINVTEX1
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WTXC]CODE = [L]_KEYVALTAB(1)
Read [WTXC] =
If !fstat
 [L]_CLB = [F:WTXC]TEXTE
Endif
LogicClose File [WTXC]
Return

$READ_EXI_CLAINVTEX1
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WTXC]CODE = this.INVTEX
Look [WTXC] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WTXC]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "BPAPRI"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPAPRI",this)
 When "BPD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPD",this)
 When "BPR"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPR",this)
 When "C_DAYMON"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DAYMON",this)
 When "C_DIE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DIE",this)
 When "C_INVDTAAMT"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_INVDTAAMT",this)
 When "C_REP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_REP",this)
 When "C_TSCCOD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_TSCCOD",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "BPAPRI"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPAPRI","C_BPADDRESS",this)
 When "BPD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPD","C_BPDLVCUST",this)
 When "BPR"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPR","C_BPARTNER",this)
 When "C_DAYMON"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DAYMON","C_BPCUSTOMER_C_DAYMON",this)
 When "C_DIE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DIE","C_BPCUSTOMER_C_DIE",this)
 When "C_INVDTAAMT"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_INVDTAAMT","C_BPCUSTOMER_C_INVDTAAMT",this)
 When "C_REP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_REP","C_BPCUSTOMER_C_REP",this)
 When "C_TSCCOD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_TSCCOD","C_BPCUSTOMER_C_TSCCOD",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "BPAPRI"
  [L]_ALINE = 1
 When "BPD"
  [L]_ALINE = 0
 When "BPR"
  [L]_ALINE = 1
 When "C_DAYMON"
  [L]_ALINE = 6
 When "C_DIE"
  [L]_ALINE = 20
 When "C_INVDTAAMT"
  [L]_ALINE = 30
 When "C_REP"
  [L]_ALINE = 2
 When "C_TSCCOD"
  [L]_ALINE = 5
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "BPAPRI"
  [L]_ALINE = 2
 When "BPD"
  [L]_ALINE = 1
 When "BPR"
  [L]_ALINE = 2
 When "C_DAYMON"
  [L]_ALINE = 2
 When "C_DIE"
  [L]_ALINE = 1
 When "C_INVDTAAMT"
  [L]_ALINE = 1
 When "C_REP"
  [L]_ALINE = 1
 When "C_TSCCOD"
  [L]_ALINE = 3
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "BPCNUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.BPAPRI(1) = NewInstance C_BPADDRESS(this.ACTX,NullUuid,1,this,"BPAPRI") AllocGroup this
this.BPAPRI(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.BPAPRI(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.BPR(1) = NewInstance C_BPARTNER(this.ACTX,NullUuid,1,this,"BPR") AllocGroup this
this.BPR(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.BPR(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



