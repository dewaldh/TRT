#<AdxTL>@(#)0.0.0.0 $Revision$Class Expense
# Supervisor
## CRUD-CLASSE ## EXPENSES
# 2018-08-27 12:31:13 541

Gosub TEST From WMCR_EXPENSES : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CLB,DATEXS,NBREXS)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# EXPENSES : EXPENSES
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet EXPENSES._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = EXPENSES.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(EXPENSES.ACTX.AFOLDER,nomap,"")>0
 Local File EXPENSES [EXS]
 Local File EXPENSES [AAA_]
Else
 Local File =EXPENSES.ACTX.AFOLDER+".EXPENSES" [EXS]
 Local File =EXPENSES.ACTX.AFOLDER+".EXPENSES" [AAA_]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet EXPENSES.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [EXS] With
& [AAA_]EXS0 = CLB+DATEXS+NBREXS
& As [LNK_]
Return

############################################################################################
### EXPENSES(WEXS)
############################################################################################
Funprog  _MAJSQL_EXPENSES(WEXS)
Variable Instance WEXS Using C_EXPENSES
Local Integer ASTATUS,A_I,A_J
Default File [F:EXS]
If WEXS.ASTALIN=[V]CST_ANEW
 Call INICRE(WEXS) From ASYRSUB
 SetInstance [F:EXS] With WEXS
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WEXS.CODEXPENS)
   If WEXS.CODEXPENS([L]A_I)<>null & !find(WEXS.CODEXPENS([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.CODEXPENS([L]A_I).AORDER=[L]A_J
    [F:EXS]ACC([L]A_J-1) = WEXS.CODEXPENS([L]A_I).ACC
    [F:EXS]COA([L]A_J-1) = WEXS.CODEXPENS([L]A_I).COA
    [F:EXS]LED([L]A_J-1) = WEXS.CODEXPENS([L]A_I).LED
    [F:EXS]CURLED([L]A_J-1) = WEXS.CODEXPENS([L]A_I).CURLED
    [F:EXS]RATMLT([L]A_J-1) = WEXS.CODEXPENS([L]A_I).RATMLT
    [F:EXS]RATDIV([L]A_J-1) = WEXS.CODEXPENS([L]A_I).RATDIV
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WEXS.DIMCEN)
   If WEXS.DIMCEN([L]A_I)<>null & !find(WEXS.DIMCEN([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.DIMCEN([L]A_I).AORDER=[L]A_J
    [F:EXS]DIE([L]A_J-1) = WEXS.DIMCEN([L]A_I).DIE
    [F:EXS]CCE([L]A_J-1) = WEXS.DIMCEN([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WEXS.LNKRATLED)
   If WEXS.LNKRATLED([L]A_I)<>null & !find(WEXS.LNKRATLED([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.LNKRATLED([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WEXS.RATEXPENS)
   If WEXS.RATEXPENS([L]A_I)<>null & !find(WEXS.RATEXPENS([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.RATEXPENS([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:EXS]
 If fstat
  Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WEXS.updTick = [F:EXS]updTick
Elsif WEXS.ASTALIN=[V]CST_ALL or WEXS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WEXS) From ASYRSUB
 SetInstance [F:EXS] With WEXS
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WEXS.CODEXPENS)
   If WEXS.CODEXPENS([L]A_I)<>null & !find(WEXS.CODEXPENS([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.CODEXPENS([L]A_I).AORDER=[L]A_J
    [F:EXS]ACC([L]A_J-1) = WEXS.CODEXPENS([L]A_I).ACC
    [F:EXS]COA([L]A_J-1) = WEXS.CODEXPENS([L]A_I).COA
    [F:EXS]LED([L]A_J-1) = WEXS.CODEXPENS([L]A_I).LED
    [F:EXS]CURLED([L]A_J-1) = WEXS.CODEXPENS([L]A_I).CURLED
    [F:EXS]RATMLT([L]A_J-1) = WEXS.CODEXPENS([L]A_I).RATMLT
    [F:EXS]RATDIV([L]A_J-1) = WEXS.CODEXPENS([L]A_I).RATDIV
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WEXS.DIMCEN)
   If WEXS.DIMCEN([L]A_I)<>null & !find(WEXS.DIMCEN([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.DIMCEN([L]A_I).AORDER=[L]A_J
    [F:EXS]DIE([L]A_J-1) = WEXS.DIMCEN([L]A_I).DIE
    [F:EXS]CCE([L]A_J-1) = WEXS.DIMCEN([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WEXS.LNKRATLED)
   If WEXS.LNKRATLED([L]A_I)<>null & !find(WEXS.LNKRATLED([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.LNKRATLED([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 10
  For [L]A_I=1 To maxtab(WEXS.RATEXPENS)
   If WEXS.RATEXPENS([L]A_I)<>null & !find(WEXS.RATEXPENS([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WEXS.RATEXPENS([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WEXS,"EXPENSES")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:EXS]EXS0 = [F:EXS]CLB;[F:EXS]DATEXS;[F:EXS]NBREXS
 If fstat
  Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WEXS.updTick = [F:EXS]updTick
Elsif WEXS.ASTALIN=[V]CST_ADEL
 SetInstance [F:EXS] With WEXS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WEXS,"EXPENSES")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:EXS]EXS0 = [F:EXS]CLB;[F:EXS]DATEXS;[F:EXS]NBREXS
 If fstat
  Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_EXPENSES_BEXS(WEXS,BEXS)
Variable Instance WEXS Using C_EXPENSES
Value Blbfile BEXS
Local Blbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File BLOBEXPENSES [F:BEXP]
If WEXS.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]BEXS
 Raz [BEXP]
 Call INICRE(WEXS) From ASYRSUB
 [F:BEXP]ACCNUM = WEXS.ACCNUM
 [F:BEXP]BLOB = [L]BEXS
 [L]WATYP = 'ATYPE9-1'
 [L]WCNT = 'image'
 [F:BEXP]CNTTYP = [L]WATYP
 Write [F:BEXP]
 If fstat
  Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WEXS.ASTALIN=[V]CST_ADEL
 Read [F:BEXP]BEXP0 =WEXS.ACCNUM
 If !fstat
  Delete [F:BEXP]
  If fstat
   Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WEXS.ASTALIN=[V]CST_ALL or WEXS.ASTALIN=[V]CST_AUPD
 If fmet WEXS.AGETATTRIBUTE("BEXS","$isLoaded")="true"
  Read [F:BEXP]BEXP0 =WEXS.ACCNUM
  If !fstat & [L]WEMPTY<>[L]BEXS
   Call INIUPD(WEXS) From ASYRSUB
   [F:BEXP]BLOB = [L]BEXS
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:BEXP]CNTTYP = [L]WATYP
   Rewrite [F:BEXP]
   If fstat
    Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]BEXS
   Delete [F:BEXP]
   If fstat
    Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]BEXS
   Raz [BEXP]
   Call INICRE(WEXS) From ASYRSUB
   [BEXP]ACCNUM = WEXS.ACCNUM
   [F:BEXP]BLOB = [L]BEXS
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:BEXP]CNTTYP = [L]WATYP
   Write [F:BEXP]
   If fstat
    Call FSTA("EXS",WEXS,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:BEXP]
End 0



