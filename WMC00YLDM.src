#<AdxTL>@(#)0.0.0.0 $Revision$Class Land margin
# Supervisor
## CRUD-CLASSE ## YLDM
# 2018-10-23 02:02:28 152

Gosub TEST From WMCR_YLDM : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YLNDPURID,YNBR)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YLDM : YLPLNDMRG
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YLDM._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YLDM.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YLDM.ACTX.AFOLDER,nomap,"")>0
 Local File YLPLNDMRG [YLDS]
 Local File YLPLNDMRG [AAA_]
Else
 Local File =YLDM.ACTX.AFOLDER+".YLPLNDMRG" [YLDS]
 Local File =YLDM.ACTX.AFOLDER+".YLPLNDMRG" [AAA_]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YLDM.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YLDS] With
& [AAA_]YLDS0 = YLNDPURID+YNBR
& As [LNK_]
Return

############################################################################################
### YLPLNDMRG(WYLDS)
############################################################################################
Funprog  _MAJSQL_YLPLNDMRG(WYLDS)
Variable Instance WYLDS Using C_YLDM
Local Integer ASTATUS,A_I,A_J
Default File [F:YLDS]
If WYLDS.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLDS) From ASYRSUB
 SetInstance [F:YLDS] With WYLDS
 Write [F:YLDS]
 If fstat
  Call FSTA("YLDS",WYLDS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDS.updTick = [F:YLDS]updTick
Elsif WYLDS.ASTALIN=[V]CST_ALL or WYLDS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLDS) From ASYRSUB
 SetInstance [F:YLDS] With WYLDS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDS,"YLPLNDMRG")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLDS]YLDS0 = [F:YLDS]YLNDPURID;[F:YLDS]YNBR
 If fstat
  Call FSTA("YLDS",WYLDS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDS.updTick = [F:YLDS]updTick
Elsif WYLDS.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLDS] With WYLDS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDS,"YLPLNDMRG")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLDS]YLDS0 = [F:YLDS]YLNDPURID;[F:YLDS]YNBR
 If fstat
  Call FSTA("YLDS",WYLDS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



