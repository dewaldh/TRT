#<AdxTL>@(#)0.0.0.0 $Revision$Class Parameters
# Supervisor
## CRUD-CLASSE ## ADOPAR
# 2018-08-27 13:01:09 785


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ADOPAR [ADP_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ADOPAR") From ASYRCOM : Endif
Local Instance ADOPAR Using R_ADOPAR

If !SILENCE : Call TRACE("3 --> New Instance R_ADOPAR") From ASYRCOM : Endif
ADOPAR = NewInstance R_ADOPAR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ADP_]ADP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ADOPAR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ADOPAR.AREAD([ADP_]CHAPITRE,[ADP_]PARAM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ADOPAR.ADP.CHAPITRE ="-num$(ADOPAR.ADP.CHAPITRE)) From ASYRCOM
 Call TRACE("ADOPAR.ADP.PARAM ="-num$(ADOPAR.ADP.PARAM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ADOPAR.ADP.AKEYS)
  Call TRACE("-"-num$(I)-":"-ADOPAR.ADP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ADP_]
FreeGroup ADOPAR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ADOPAR,ACLE,ASTATUS,_ETAG)
Variable Instance ADOPAR Using R_ADOPAR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CHAPITRE(20)
Local Char _PARAM(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CHAPITRE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PARAM = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File ADOPAR [ADP]
Default File [F:ADP]
Read [F:ADP]ADP0 = [L]_CHAPITRE;[L]_PARAM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ADP]UPDTICK)>0
 [L]_ETAG = num$([F:ADP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ADOPAR,ACLE,ASTATUS)
Variable Instance ADOPAR Using R_ADOPAR
Value Char ACLE
Variable Integer ASTATUS
Local Char _CHAPITRE(20)
Local Char _PARAM(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CHAPITRE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PARAM = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ADOPAR.AREAD([L]_CHAPITRE,[L]_PARAM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ADOPAR,_CHAPITRE,_PARAM,ASTATUS)
Variable Instance ADOPAR Using R_ADOPAR
Value Char _CHAPITRE
Value Char _PARAM
Variable Integer ASTATUS

If ADOPAR = null : End : Endif

Gosub AVARIABLES From WMR00ADOPAR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ADOPAR.APARENT=null
 [L]A_I = ADOPAR.freeSnapshot
 ADOPAR.snapshotEnabled = 0
 ADOPAR.setAccessorEnabled = 0
Endif

If fmet ADOPAR.ACTX.AGETAFCRIGHT(ADOPAR,"GESADP",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:ADP]
Read [F:ADP]ADP0 = [L]_CHAPITRE;[L]_PARAM
If fstat
[L]A_ERROR = [L]_CHAPITRE+"~"+[L]_PARAM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ADOPAR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:ADP]ACS
If fmet ADOPAR.ACTX.AGETAFCRIGHTR(ADOPAR,"GESADP",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet ADOPAR.ACTX.AGETACSRIGHTC(ADOPAR,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet ADOPAR.ACTX.ASTACRITROLE(ADOPAR,[L]_CHAPITRE+"~"+[L]_PARAM
& ,"ADP","ADP",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet ADOPAR.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  ADOPAR.ADP.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet ADOPAR.ADP.AREAD([L]_CHAPITRE,[L]_PARAM))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet ADOPAR.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & ADOPAR.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet ADOPAR._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If ADOPAR.APARENT=null
   ADOPAR.snapshotEnabled = 1
   ADOPAR.setAccessorEnabled = 1
  Endif
  LogicClose File [ADP]
  End
  


