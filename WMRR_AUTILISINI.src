#<AdxTL>@(#)0.0.0.0 $Revision$Class User initialization
# Supervisor
## CRUD-CLASSE ## AUTILISINI
# 2018-08-27 13:03:51 491


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AUTILIS [AUS_]

If !SILENCE : Call TRACE("2 --> Local Instance R_AUTILISINI") From ASYRCOM : Endif
Local Instance AUTILISINI Using R_AUTILISINI

If !SILENCE : Call TRACE("3 --> New Instance R_AUTILISINI") From ASYRCOM : Endif
AUTILISINI = NewInstance R_AUTILISINI AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AUS_]CODUSR First
If !fstat
 If !SILENCE : Call TRACE("Call program read of AUTILIS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AREAD([AUS_]USR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("AUTILISINI.AUS.USR ="-num$(AUTILISINI.AUS.USR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(AUTILISINI.AUS.AKEYS)
  Call TRACE("-"-num$(I)-":"-AUTILISINI.AUS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AUS_]
FreeGroup AUTILISINI
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(AUTILISINI,ACLE,ASTATUS,_ETAG)
Variable Instance AUTILISINI Using R_AUTILISINI
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AUTILIS [AUS]
Default File [F:AUS]
Read [F:AUS]CODUSR = [L]_USR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AUS]UPDTICK)>0
 [L]_ETAG = num$([F:AUS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(AUTILISINI,ACLE,ASTATUS)
Variable Instance AUTILISINI Using R_AUTILISINI
Value Char ACLE
Variable Integer ASTATUS
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AREAD([L]_USR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(AUTILISINI,_USR,ASTATUS)
Variable Instance AUTILISINI Using R_AUTILISINI
Value Char _USR
Variable Integer ASTATUS

If AUTILISINI = null : End : Endif

Gosub AVARIABLES From WMR00AUTILISINI
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If AUTILISINI.APARENT=null
 [L]A_I = AUTILISINI.freeSnapshot
 AUTILISINI.snapshotEnabled = 0
 AUTILISINI.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

AUTILISINI.AUS.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.AUS.AREAD([L]_USR))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & AUTILISINI.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet AUTILISINI._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If AUTILISINI.APARENT=null
 AUTILISINI.snapshotEnabled = 1
 AUTILISINI.setAccessorEnabled = 1
Endif
LogicClose File [AUS] ,[BPA] ,[BID]
End



