#<AdxTL>@(#)0.0.0.0 $Revision$Class Task
# Sage X3 supervisor
## CRUD-CLASSE ## PJMTSK
# 2018-06-20 06:52:44 806

Gosub TEST From WMCR_PJMTSK : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,OPPNUM,TASCOD)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# PJMTSK : PJMTSK
# PJMTSKITM : PJMTSK PJMTSKITM
# PJMTSKOPE : PJMTSK PJMTSKOPE
# PIMPL : PJMTSK PIMPL
# PJMSALITMD : PJMTSK PJMSALITMD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet PJMTSK._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = PJMTSK.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(PJMTSK.ACTX.AFOLDER,nomap,"")>0
 Local File PJMTSK [PJTA]
 Local File PJMTSKITM [JTT]
 Local File PJMTSKOPE [PTKO]
 Local File PIMPL [PIMPL]
 Local File PJMSALITMD [SPLD]
 Local File ATEXTRA [AXX]
Else
 Local File =PJMTSK.ACTX.AFOLDER+".PJMTSK" [PJTA]
 Local File =PJMTSK.ACTX.AFOLDER+".PJMTSKITM" [JTT]
 Local File =PJMTSK.ACTX.AFOLDER+".PJMTSKOPE" [PTKO]
 Local File =PJMTSK.ACTX.AFOLDER+".PIMPL" [PIMPL]
 Local File =PJMTSK.ACTX.AFOLDER+".PJMSALITMD" [SPLD]
 Local File =PJMTSK.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [PJTA] With
& [JTT]JTT0 = OPPNUM;TASCOD,
& [PTKO]PTKO0 = OPPNUM;TASCOD,
& [PIMPL]PIM0 ~= KEYCONCAT,
& [SPLD]PSPLD1 = OPPNUM;TASCOD
& As [LNK_]
Return

############################################################################################
### PJMTSK(WPJTA)
############################################################################################
Funprog  _MAJSQL_PJMTSK(WPJTA)
Variable Instance WPJTA Using C_PJMTSK
Local Integer ASTATUS,A_I,A_J
Default File [F:PJTA]
If WPJTA.ASTALIN=[V]CST_ANEW
 Call INICRE(WPJTA) From ASYRSUB
 SetInstance [F:PJTA] With WPJTA
 Write [F:PJTA]
 If fstat
  Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPJTA.updTick = [F:PJTA]updTick
Elsif WPJTA.ASTALIN=[V]CST_ALL or WPJTA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPJTA) From ASYRSUB
 SetInstance [F:PJTA] With WPJTA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPJTA,"PJMTSK")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PJTA]PTA0 = [F:PJTA]OPPNUM;[F:PJTA]TASCOD
 If fstat
  Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPJTA.updTick = [F:PJTA]updTick
Elsif WPJTA.ASTALIN=[V]CST_ADEL
 SetInstance [F:PJTA] With WPJTA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPJTA,"PJMTSK")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PJTA]PTA0 = [F:PJTA]OPPNUM;[F:PJTA]TASCOD
 If fstat
  Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### PJMTSKITM(WJTT)
############################################################################################
Funprog  _MAJSQL_PJMTSKITM(WJTT)
Variable Instance WJTT Using C_PJMTSKITM
Local Integer ASTATUS,A_I,A_J
Default File [F:JTT]
If WJTT.ASTALIN=[V]CST_ANEW
 Call INICRE(WJTT) From ASYRSUB
 SetInstance [F:JTT] With WJTT
 For J=1 To maxtab(WJTT.AXX)
  If WJTT.AXX(J)<>null & WJTT.AXX(J).PRO= "ITMDES1" & WJTT.AXX(J).FLG>0
   Call MAJTEXTRALAN(WJTT,WJTT.AXX(J).TEX,"PJMTSKITM","ITMDES1",WJTT.AXX(J).LAN,WJTT.KEYCONCAT,AVOID.ACHAR,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:JTT]
 If fstat
  Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WJTT.updTick = [F:JTT]updTick
Elsif WJTT.ASTALIN=[V]CST_ALL or WJTT.ASTALIN=[V]CST_AUPD
 Call INIUPD(WJTT) From ASYRSUB
 SetInstance [F:JTT] With WJTT
 For J=1 To maxtab(WJTT.AXX)
  If WJTT.AXX(J)<>null & WJTT.AXX(J).PRO= "ITMDES1" & WJTT.AXX(J).FLG>0
   Call MAJTEXTRALAN(WJTT,WJTT.AXX(J).TEX,"PJMTSKITM","ITMDES1",WJTT.AXX(J).LAN,WJTT.KEYCONCAT,AVOID.ACHAR,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WJTT,"PJMTSKITM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:JTT]JTT0 = [F:JTT]OPPNUM;[F:JTT]TASCOD;[F:JTT]ITTSEQ
 If fstat
  Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WJTT.updTick = [F:JTT]updTick
Elsif WJTT.ASTALIN=[V]CST_ADEL
 SetInstance [F:JTT] With WJTT
 For J=1 To maxtab(WJTT.AXX)
  If WJTT.AXX(J)<>null & WJTT.AXX(J).PRO= "ITMDES1"
   Call SUPTEXTRA(WJTT,WJTT.AXX(J).TEX,"PJMTSKITM","ITMDES1",WJTT.AXX(J).LAN,WJTT.KEYCONCAT,AVOID.ACHAR,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WJTT,"PJMTSKITM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:JTT]JTT0 = [F:JTT]OPPNUM;[F:JTT]TASCOD;[F:JTT]ITTSEQ
 If fstat
  Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### PJMTSKOPE(WPTKO)
############################################################################################
Funprog  _MAJSQL_PJMTSKOPE(WPTKO)
Variable Instance WPTKO Using C_PJMTSKOPE
Local Integer ASTATUS,A_I,A_J
Default File [F:PTKO]
If WPTKO.ASTALIN=[V]CST_ANEW
 Call INICRE(WPTKO) From ASYRSUB
 SetInstance [F:PTKO] With WPTKO
 For J=1 To maxtab(WPTKO.AXX)
  If WPTKO.AXX(J)<>null & WPTKO.AXX(J).PRO= "ROODESAXX" & WPTKO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPTKO,WPTKO.AXX(J).TEX,"PJMTSKOPE","ROODESAXX",WPTKO.AXX(J).LAN,WPTKO.KEYCONCAT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:PTKO]
 If fstat
  Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPTKO.updTick = [F:PTKO]updTick
Elsif WPTKO.ASTALIN=[V]CST_ALL or WPTKO.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPTKO) From ASYRSUB
 SetInstance [F:PTKO] With WPTKO
 For J=1 To maxtab(WPTKO.AXX)
  If WPTKO.AXX(J)<>null & WPTKO.AXX(J).PRO= "ROODESAXX" & WPTKO.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPTKO,WPTKO.AXX(J).TEX,"PJMTSKOPE","ROODESAXX",WPTKO.AXX(J).LAN,WPTKO.KEYCONCAT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPTKO,"PJMTSKOPE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PTKO]PTKO0 = [F:PTKO]OPPNUM;[F:PTKO]TASCOD;[F:PTKO]OPENUM;[F:PTKO]OPESPLNUM
 If fstat
  Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPTKO.updTick = [F:PTKO]updTick
Elsif WPTKO.ASTALIN=[V]CST_ADEL
 SetInstance [F:PTKO] With WPTKO
 For J=1 To maxtab(WPTKO.AXX)
  If WPTKO.AXX(J)<>null & WPTKO.AXX(J).PRO= "ROODESAXX"
   Call SUPTEXTRA(WPTKO,WPTKO.AXX(J).TEX,"PJMTSKOPE","ROODESAXX",WPTKO.AXX(J).LAN,WPTKO.KEYCONCAT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPTKO,"PJMTSKOPE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PTKO]PTKO0 = [F:PTKO]OPPNUM;[F:PTKO]TASCOD;[F:PTKO]OPENUM;[F:PTKO]OPESPLNUM
 If fstat
  Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### PIMPL(WPIMPL)
############################################################################################
Funprog  _MAJSQL_PIMPL(WPIMPL)
Variable Instance WPIMPL Using C_PIMPL
Local Integer ASTATUS,A_I,A_J
Default File [F:PIMPL]
If WPIMPL.ASTALIN=[V]CST_ANEW
 Call INICRE(WPIMPL) From ASYRSUB
 SetInstance [F:PIMPL] With WPIMPL
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAXX" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAX1" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:PIMPL]
 If fstat
  Call FSTA("PIMPL",WPIMPL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPIMPL.updTick = [F:PIMPL]updTick
Elsif WPIMPL.ASTALIN=[V]CST_ALL or WPIMPL.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPIMPL) From ASYRSUB
 SetInstance [F:PIMPL] With WPIMPL
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAXX" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAX1" & WPIMPL.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPIMPL,"PIMPL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PIMPL]PIM0 = [F:PIMPL]PIMNUM
 If fstat
  Call FSTA("PIMPL",WPIMPL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPIMPL.updTick = [F:PIMPL]updTick
Elsif WPIMPL.ASTALIN=[V]CST_ADEL
 SetInstance [F:PIMPL] With WPIMPL
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAXX"
   Call SUPTEXTRA(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIMPL.AXX)
  If WPIMPL.AXX(J)<>null & WPIMPL.AXX(J).PRO= "PIMDESAX1"
   Call SUPTEXTRA(WPIMPL,WPIMPL.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIMPL.AXX(J).LAN,WPIMPL.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPIMPL,"PIMPL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PIMPL]PIM0 = [F:PIMPL]PIMNUM
 If fstat
  Call FSTA("PIMPL",WPIMPL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### PJMSALITMD(WSPLD)
############################################################################################
Funprog  _MAJSQL_PJMSALITMD(WSPLD)
Variable Instance WSPLD Using C_PJMSALITMD
Local Integer ASTATUS,A_I,A_J
Default File [F:SPLD]
If WSPLD.ASTALIN=[V]CST_ANEW
 Call INICRE(WSPLD) From ASYRSUB
 SetInstance [F:SPLD] With WSPLD
 Write [F:SPLD]
 If fstat
  Call FSTA("SPLD",WSPLD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSPLD.updTick = [F:SPLD]updTick
Elsif WSPLD.ASTALIN=[V]CST_ALL or WSPLD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSPLD) From ASYRSUB
 SetInstance [F:SPLD] With WSPLD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSPLD,"PJMSALITMD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SPLD]PSPLD1 = [F:SPLD]OPPNUM;[F:SPLD]TASCOD;[F:SPLD]PBUCOD;[F:SPLD]SEQNUM
 If fstat
  Call FSTA("SPLD",WSPLD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSPLD.updTick = [F:SPLD]updTick
Elsif WSPLD.ASTALIN=[V]CST_ADEL
 SetInstance [F:SPLD] With WSPLD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSPLD,"PJMSALITMD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SPLD]PSPLD1 = [F:SPLD]OPPNUM;[F:SPLD]TASCOD;[F:SPLD]PBUCOD;[F:SPLD]SEQNUM
 If fstat
  Call FSTA("SPLD",WSPLD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_PJMTSK_TASDESTEX(WPJTA,TASDESTEX)
Variable Instance WPJTA Using C_PJMTSK
Value Clbfile TASDESTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WPJTA.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]TASDESTEX
 Raz [PJCB]
 Call INICRE(WPJTA) From ASYRSUB
 [F:PJCB]CODBLB = "PJMTSK"
 [F:PJCB]IDENT1 = "TASDESTEX"
 [F:PJCB]IDENT2 = WPJTA.OPPNUM
 [F:PJCB]IDENT3 = WPJTA.TASCOD
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]TASDESTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WPJTA.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="PJMTSK";"TASDESTEX";WPJTA.OPPNUM;WPJTA.TASCOD;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WPJTA.ASTALIN=[V]CST_ALL or WPJTA.ASTALIN=[V]CST_AUPD
 If fmet WPJTA.AGETATTRIBUTE("TASDESTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="PJMTSK";"TASDESTEX";WPJTA.OPPNUM;WPJTA.TASCOD;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]TASDESTEX
   Call INIUPD(WPJTA) From ASYRSUB
   [F:PJCB]CLOB = [L]TASDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]TASDESTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]TASDESTEX
   Raz [PJCB]
   Call INICRE(WPJTA) From ASYRSUB
   [PJCB]CODBLB = "PJMTSK"
   [PJCB]IDENT1 = "TASDESTEX"
   [PJCB]IDENT2 = WPJTA.OPPNUM
   [PJCB]IDENT3 = WPJTA.TASCOD
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]TASDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0

Funprog  _MAJSQL_PJMTSK_TASCOMTEX(WPJTA,TASCOMTEX)
Variable Instance WPJTA Using C_PJMTSK
Value Clbfile TASCOMTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WPJTA.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]TASCOMTEX
 Raz [PJCB]
 Call INICRE(WPJTA) From ASYRSUB
 [F:PJCB]CODBLB = "PJMTSK"
 [F:PJCB]IDENT1 = "TASCOMTEX"
 [F:PJCB]IDENT2 = WPJTA.OPPNUM
 [F:PJCB]IDENT3 = WPJTA.TASCOD
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]TASCOMTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WPJTA.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="PJMTSK";"TASCOMTEX";WPJTA.OPPNUM;WPJTA.TASCOD;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WPJTA.ASTALIN=[V]CST_ALL or WPJTA.ASTALIN=[V]CST_AUPD
 If fmet WPJTA.AGETATTRIBUTE("TASCOMTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="PJMTSK";"TASCOMTEX";WPJTA.OPPNUM;WPJTA.TASCOD;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]TASCOMTEX
   Call INIUPD(WPJTA) From ASYRSUB
   [F:PJCB]CLOB = [L]TASCOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]TASCOMTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]TASCOMTEX
   Raz [PJCB]
   Call INICRE(WPJTA) From ASYRSUB
   [PJCB]CODBLB = "PJMTSK"
   [PJCB]IDENT1 = "TASCOMTEX"
   [PJCB]IDENT2 = WPJTA.OPPNUM
   [PJCB]IDENT3 = WPJTA.TASCOD
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]TASCOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("PJTA",WPJTA,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0

Funprog  _MAJSQL_PJMTSKITM_ITTDESTEX(WJTT,ITTDESTEX)
Variable Instance WJTT Using C_PJMTSKITM
Value Clbfile ITTDESTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WJTT.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]ITTDESTEX
 Raz [PJCB]
 Call INICRE(WJTT) From ASYRSUB
 [F:PJCB]CODBLB = "PJMTSKITM"
 [F:PJCB]IDENT1 = "ITTDESTEX"
 [F:PJCB]IDENT2 = WJTT.KEYCONCAT
 [F:PJCB]IDENT3 = AVOID.ACHAR
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]ITTDESTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WJTT.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="PJMTSKITM";"ITTDESTEX";WJTT.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WJTT.ASTALIN=[V]CST_ALL or WJTT.ASTALIN=[V]CST_AUPD
 If fmet WJTT.AGETATTRIBUTE("ITTDESTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="PJMTSKITM";"ITTDESTEX";WJTT.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]ITTDESTEX
   Call INIUPD(WJTT) From ASYRSUB
   [F:PJCB]CLOB = [L]ITTDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]ITTDESTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]ITTDESTEX
   Raz [PJCB]
   Call INICRE(WJTT) From ASYRSUB
   [PJCB]CODBLB = "PJMTSKITM"
   [PJCB]IDENT1 = "ITTDESTEX"
   [PJCB]IDENT2 = WJTT.KEYCONCAT
   [PJCB]IDENT3 = AVOID.ACHAR
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]ITTDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0

Funprog  _MAJSQL_PJMTSKITM_ITTCOMTEX(WJTT,ITTCOMTEX)
Variable Instance WJTT Using C_PJMTSKITM
Value Clbfile ITTCOMTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WJTT.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]ITTCOMTEX
 Raz [PJCB]
 Call INICRE(WJTT) From ASYRSUB
 [F:PJCB]CODBLB = "PJMTSKITM"
 [F:PJCB]IDENT1 = "ITTCOMTEX"
 [F:PJCB]IDENT2 = WJTT.KEYCONCAT
 [F:PJCB]IDENT3 = AVOID.ACHAR
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]ITTCOMTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WJTT.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="PJMTSKITM";"ITTCOMTEX";WJTT.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WJTT.ASTALIN=[V]CST_ALL or WJTT.ASTALIN=[V]CST_AUPD
 If fmet WJTT.AGETATTRIBUTE("ITTCOMTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="PJMTSKITM";"ITTCOMTEX";WJTT.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]ITTCOMTEX
   Call INIUPD(WJTT) From ASYRSUB
   [F:PJCB]CLOB = [L]ITTCOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]ITTCOMTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]ITTCOMTEX
   Raz [PJCB]
   Call INICRE(WJTT) From ASYRSUB
   [PJCB]CODBLB = "PJMTSKITM"
   [PJCB]IDENT1 = "ITTCOMTEX"
   [PJCB]IDENT2 = WJTT.KEYCONCAT
   [PJCB]IDENT3 = AVOID.ACHAR
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]ITTCOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("JTT",WJTT,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0

Funprog  _MAJSQL_PJMTSKOPE_OPEDESTEX(WPTKO,OPEDESTEX)
Variable Instance WPTKO Using C_PJMTSKOPE
Value Clbfile OPEDESTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WPTKO.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]OPEDESTEX
 Raz [PJCB]
 Call INICRE(WPTKO) From ASYRSUB
 [F:PJCB]CODBLB = "PJMTSKOPE"
 [F:PJCB]IDENT1 = "OPEDESTEX"
 [F:PJCB]IDENT2 = WPTKO.KEYCONCAT
 [F:PJCB]IDENT3 = AVOID.ACHAR
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]OPEDESTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WPTKO.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="PJMTSKOPE";"OPEDESTEX";WPTKO.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WPTKO.ASTALIN=[V]CST_ALL or WPTKO.ASTALIN=[V]CST_AUPD
 If fmet WPTKO.AGETATTRIBUTE("OPEDESTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="PJMTSKOPE";"OPEDESTEX";WPTKO.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]OPEDESTEX
   Call INIUPD(WPTKO) From ASYRSUB
   [F:PJCB]CLOB = [L]OPEDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]OPEDESTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]OPEDESTEX
   Raz [PJCB]
   Call INICRE(WPTKO) From ASYRSUB
   [PJCB]CODBLB = "PJMTSKOPE"
   [PJCB]IDENT1 = "OPEDESTEX"
   [PJCB]IDENT2 = WPTKO.KEYCONCAT
   [PJCB]IDENT3 = AVOID.ACHAR
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]OPEDESTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0

Funprog  _MAJSQL_PJMTSKOPE_OPECOMTEX(WPTKO,OPECOMTEX)
Variable Instance WPTKO Using C_PJMTSKOPE
Value Clbfile OPECOMTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File PJMCLOB [F:PJCB]
If WPTKO.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]OPECOMTEX
 Raz [PJCB]
 Call INICRE(WPTKO) From ASYRSUB
 [F:PJCB]CODBLB = "PJMTSKOPE"
 [F:PJCB]IDENT1 = "OPECOMTEX"
 [F:PJCB]IDENT2 = WPTKO.KEYCONCAT
 [F:PJCB]IDENT3 = AVOID.ACHAR
 [F:PJCB]IDENT4 = AVOID.ACHAR
 [F:PJCB]CLOB = [L]OPECOMTEX
 [L]WATYP = 'ATYPE10-1'
 [L]WCNT = 'text/plain'
 Write [F:PJCB]
 If fstat
  Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WPTKO.ASTALIN=[V]CST_ADEL
 Read [F:PJCB]PJCB0 ="PJMTSKOPE";"OPECOMTEX";WPTKO.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
 If !fstat
  Delete [F:PJCB]
  If fstat
   Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WPTKO.ASTALIN=[V]CST_ALL or WPTKO.ASTALIN=[V]CST_AUPD
 If fmet WPTKO.AGETATTRIBUTE("OPECOMTEX","$isLoaded")="true"
  Read [F:PJCB]PJCB0 ="PJMTSKOPE";"OPECOMTEX";WPTKO.KEYCONCAT;AVOID.ACHAR;AVOID.ACHAR
  If !fstat & [L]WEMPTY<>[L]OPECOMTEX
   Call INIUPD(WPTKO) From ASYRSUB
   [F:PJCB]CLOB = [L]OPECOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Rewrite [F:PJCB]
   If fstat
    Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]OPECOMTEX
   Delete [F:PJCB]
   If fstat
    Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]OPECOMTEX
   Raz [PJCB]
   Call INICRE(WPTKO) From ASYRSUB
   [PJCB]CODBLB = "PJMTSKOPE"
   [PJCB]IDENT1 = "OPECOMTEX"
   [PJCB]IDENT2 = WPTKO.KEYCONCAT
   [PJCB]IDENT3 = AVOID.ACHAR
   [PJCB]IDENT4 = AVOID.ACHAR
   [F:PJCB]CLOB = [L]OPECOMTEX
   [L]WATYP = 'ATYPE10-1'
   [L]WCNT = 'text/plain'
   Write [F:PJCB]
   If fstat
    Call FSTA("PTKO",WPTKO,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:PJCB]
End 0



