#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## ACLA-CLASSE ## SVCRINVCNDD
# 2018-08-27 12:50:29 644

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : IS_PROP_CHG Technical ( Field Local menu number 1)
####################################################################

$SET_IS_PROP_CHG
If [L]_AOLDVAL<>this.IS_PROP_CHG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IS_PROP_CHG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IS_PROP_CHG
 Gosub PROPAGATE_IS_PROP_CHG
Endif
Return

$INIT_IS_PROP_CHG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_PROP_CHG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IS_PROP_CHG=0 and fmet this.AGETATTRIBUTE("IS_PROP_CHG","$isMandatory")="true"
 this.IS_PROP_CHG = 1
Endif
Return
 
$CONTROL_IS_PROP_CHG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_PROP_CHG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IS_PROP_CHG           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IS_PROP_CHG           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IS_PROP_CHG
[L]CURPRO = "IS_PROP_CHG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IS_PROP_CHG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IS_PROP_CHG
[L]CURPRO = "IS_PROP_CHG"
If this.IS_PROP_CHG<0 or this.IS_PROP_CHG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.IS_PROP_CHG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_IS_PROP_CHG
[L]CURPRO = "IS_PROP_CHG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IS_PROP_CHG
[L]CURPRO = "IS_PROP_CHG"
Return

$PROPAGATE_IS_PROP_CHG
this.isReadonly = 0
[L]CURPRO = "IS_PROP_CHG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IS_PROP_CHG
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_PROP_CHG"
$_LNKPRO_IS_PROP_CHG
Return


####################################################################
# 32 : DO_PROPAGATE Block ( Field Local menu number 1)
####################################################################

$SET_DO_PROPAGATE
If [L]_AOLDVAL<>this.DO_PROPAGATE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DO_PROPAGATE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DO_PROPAGATE
 Gosub PROPAGATE_DO_PROPAGATE
Endif
Return

$INIT_DO_PROPAGATE
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DO_PROPAGATE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DO_PROPAGATE=0 and fmet this.AGETATTRIBUTE("DO_PROPAGATE","$isMandatory")="true"
 this.DO_PROPAGATE = 1
Endif
Return
 
$CONTROL_DO_PROPAGATE
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DO_PROPAGATE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DO_PROPAGATE          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DO_PROPAGATE          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DO_PROPAGATE
[L]CURPRO = "DO_PROPAGATE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DO_PROPAGATE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DO_PROPAGATE
[L]CURPRO = "DO_PROPAGATE"
If this.DO_PROPAGATE<0 or this.DO_PROPAGATE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DO_PROPAGATE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DO_PROPAGATE
[L]CURPRO = "DO_PROPAGATE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DO_PROPAGATE
[L]CURPRO = "DO_PROPAGATE"
Return

$PROPAGATE_DO_PROPAGATE
this.isReadonly = 0
[L]CURPRO = "DO_PROPAGATE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DO_PROPAGATE
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "DO_PROPAGATE"
$_LNKPRO_DO_PROPAGATE
Return


####################################################################
# 33 : IS_RES_SPLIT Split ( Field Local menu number 1)
####################################################################

$SET_IS_RES_SPLIT
If [L]_AOLDVAL<>this.IS_RES_SPLIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IS_RES_SPLIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IS_RES_SPLIT
 Gosub PROPAGATE_IS_RES_SPLIT
Endif
Return

$INIT_IS_RES_SPLIT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_RES_SPLIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IS_RES_SPLIT=0 and fmet this.AGETATTRIBUTE("IS_RES_SPLIT","$isMandatory")="true"
 this.IS_RES_SPLIT = 1
Endif
Return
 
$CONTROL_IS_RES_SPLIT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_RES_SPLIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IS_RES_SPLIT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IS_RES_SPLIT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IS_RES_SPLIT
[L]CURPRO = "IS_RES_SPLIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IS_RES_SPLIT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IS_RES_SPLIT
[L]CURPRO = "IS_RES_SPLIT"
If this.IS_RES_SPLIT<0 or this.IS_RES_SPLIT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.IS_RES_SPLIT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_IS_RES_SPLIT
[L]CURPRO = "IS_RES_SPLIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IS_RES_SPLIT
[L]CURPRO = "IS_RES_SPLIT"
Return

$PROPAGATE_IS_RES_SPLIT
this.isReadonly = 0
[L]CURPRO = "IS_RES_SPLIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IS_RES_SPLIT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_RES_SPLIT"
$_LNKPRO_IS_RES_SPLIT
Return


####################################################################
# 34 : LINORI_SPLIT Origin line ( Field L 8)
####################################################################

$SET_LINORI_SPLIT
If [L]_AOLDVAL<>this.LINORI_SPLIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LINORI_SPLIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LINORI_SPLIT
 Gosub PROPAGATE_LINORI_SPLIT
Endif
Return

$INIT_LINORI_SPLIT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LINORI_SPLIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LINORI_SPLIT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LINORI_SPLIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LINORI_SPLIT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LINORI_SPLIT          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LINORI_SPLIT
[L]CURPRO = "LINORI_SPLIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LINORI_SPLIT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LINORI_SPLIT
[L]CURPRO = "LINORI_SPLIT"
Return

$_AOTHERS_LINORI_SPLIT
[L]CURPRO = "LINORI_SPLIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LINORI_SPLIT
[L]CURPRO = "LINORI_SPLIT"
Return

$PROPAGATE_LINORI_SPLIT
this.isReadonly = 0
[L]CURPRO = "LINORI_SPLIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LINORI_SPLIT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LINORI_SPLIT"
$_LNKPRO_LINORI_SPLIT
Return


####################################################################
# 35 : IS_CONS_GRP Pools ( Field Local menu number 1)
####################################################################

$SET_IS_CONS_GRP
If [L]_AOLDVAL<>this.IS_CONS_GRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IS_CONS_GRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IS_CONS_GRP
 Gosub PROPAGATE_IS_CONS_GRP
Endif
Return

$INIT_IS_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_CONS_GRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IS_CONS_GRP=0 and fmet this.AGETATTRIBUTE("IS_CONS_GRP","$isMandatory")="true"
 this.IS_CONS_GRP = 1
Endif
Return
 
$CONTROL_IS_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_CONS_GRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IS_CONS_GRP           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IS_CONS_GRP           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IS_CONS_GRP
[L]CURPRO = "IS_CONS_GRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IS_CONS_GRP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IS_CONS_GRP
[L]CURPRO = "IS_CONS_GRP"
If this.IS_CONS_GRP<0 or this.IS_CONS_GRP>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.IS_CONS_GRP)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_IS_CONS_GRP
[L]CURPRO = "IS_CONS_GRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IS_CONS_GRP
[L]CURPRO = "IS_CONS_GRP"
Return

$PROPAGATE_IS_CONS_GRP
this.isReadonly = 0
[L]CURPRO = "IS_CONS_GRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IS_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_CONS_GRP"
$_LNKPRO_IS_CONS_GRP
Return


####################################################################
# 36 : QTY_CONS_GRP Consumed quantity ( Field QTY 0)
####################################################################

$SET_QTY_CONS_GRP
If [L]_AOLDVAL<>this.QTY_CONS_GRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_QTY_CONS_GRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.QTY_CONS_GRP
 Gosub PROPAGATE_QTY_CONS_GRP
Endif
Return

$INIT_QTY_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "QTY_CONS_GRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_QTY_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "QTY_CONS_GRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_QTY_CONS_GRP          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_QTY_CONS_GRP          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_QTY_CONS_GRP
[L]CURPRO = "QTY_CONS_GRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.QTY_CONS_GRP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_QTY_CONS_GRP
[L]CURPRO = "QTY_CONS_GRP"
Return

$_AOTHERS_QTY_CONS_GRP
[L]CURPRO = "QTY_CONS_GRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_QTY_CONS_GRP
[L]CURPRO = "QTY_CONS_GRP"
Return

$PROPAGATE_QTY_CONS_GRP
this.isReadonly = 0
[L]CURPRO = "QTY_CONS_GRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_QTY_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "QTY_CONS_GRP"
$_LNKPRO_QTY_CONS_GRP
Return


####################################################################
# 37 : AMT_CONS_GRP Amount consumed ( Field MD1 0)
####################################################################

$SET_AMT_CONS_GRP
If [L]_AOLDVAL<>this.AMT_CONS_GRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMT_CONS_GRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMT_CONS_GRP
 Gosub PROPAGATE_AMT_CONS_GRP
Endif
Return

$INIT_AMT_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "AMT_CONS_GRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AMT_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "AMT_CONS_GRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMT_CONS_GRP          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMT_CONS_GRP          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMT_CONS_GRP
[L]CURPRO = "AMT_CONS_GRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMT_CONS_GRP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMT_CONS_GRP
[L]CURPRO = "AMT_CONS_GRP"
Return

$_AOTHERS_AMT_CONS_GRP
[L]CURPRO = "AMT_CONS_GRP"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"AMT_CONS_GRP",this.AMT_CONS_GRP,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMT_CONS_GRP
[L]CURPRO = "AMT_CONS_GRP"
Return

$PROPAGATE_AMT_CONS_GRP
this.isReadonly = 0
[L]CURPRO = "AMT_CONS_GRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMT_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "AMT_CONS_GRP"
$_LNKPRO_AMT_CONS_GRP
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"AMT_CONS_GRP",this.AMT_CONS_GRP,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("AMT_CONS_GRP","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 38 : PRC_CONS_GRP Percentage ( Field DCB 3)
####################################################################

$SET_PRC_CONS_GRP
If [L]_AOLDVAL<>this.PRC_CONS_GRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRC_CONS_GRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRC_CONS_GRP
 Gosub PROPAGATE_PRC_CONS_GRP
Endif
Return

$INIT_PRC_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PRC_CONS_GRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRC_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PRC_CONS_GRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRC_CONS_GRP          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRC_CONS_GRP          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRC_CONS_GRP
[L]CURPRO = "PRC_CONS_GRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PRC_CONS_GRP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRC_CONS_GRP
[L]CURPRO = "PRC_CONS_GRP"
Return

$_AOTHERS_PRC_CONS_GRP
[L]CURPRO = "PRC_CONS_GRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRC_CONS_GRP
[L]CURPRO = "PRC_CONS_GRP"
Return

$PROPAGATE_PRC_CONS_GRP
this.isReadonly = 0
[L]CURPRO = "PRC_CONS_GRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRC_CONS_GRP
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "PRC_CONS_GRP"
$_LNKPRO_PRC_CONS_GRP
Return


####################################################################
# 39 : IS_EXTRABILL Excess ( Field Local menu number 1)
####################################################################

$SET_IS_EXTRABILL
If [L]_AOLDVAL<>this.IS_EXTRABILL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IS_EXTRABILL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IS_EXTRABILL
 Gosub PROPAGATE_IS_EXTRABILL
Endif
Return

$INIT_IS_EXTRABILL
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_EXTRABILL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IS_EXTRABILL=0 and fmet this.AGETATTRIBUTE("IS_EXTRABILL","$isMandatory")="true"
 this.IS_EXTRABILL = 1
Endif
Return
 
$CONTROL_IS_EXTRABILL
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_EXTRABILL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IS_EXTRABILL          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IS_EXTRABILL          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IS_EXTRABILL
[L]CURPRO = "IS_EXTRABILL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IS_EXTRABILL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IS_EXTRABILL
[L]CURPRO = "IS_EXTRABILL"
If this.IS_EXTRABILL<0 or this.IS_EXTRABILL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.IS_EXTRABILL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_IS_EXTRABILL
[L]CURPRO = "IS_EXTRABILL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IS_EXTRABILL
[L]CURPRO = "IS_EXTRABILL"
Return

$PROPAGATE_IS_EXTRABILL
this.isReadonly = 0
[L]CURPRO = "IS_EXTRABILL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IS_EXTRABILL
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "IS_EXTRABILL"
$_LNKPRO_IS_EXTRABILL
Return


####################################################################
# 40 : LIN_EXT_QTY Quantity ( Field QTY 0)
####################################################################

$SET_LIN_EXT_QTY
If [L]_AOLDVAL<>this.LIN_EXT_QTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIN_EXT_QTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIN_EXT_QTY
 Gosub PROPAGATE_LIN_EXT_QTY
Endif
Return

$INIT_LIN_EXT_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_EXT_QTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIN_EXT_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_EXT_QTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIN_EXT_QTY           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIN_EXT_QTY           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIN_EXT_QTY
[L]CURPRO = "LIN_EXT_QTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIN_EXT_QTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIN_EXT_QTY
[L]CURPRO = "LIN_EXT_QTY"
Return

$_AOTHERS_LIN_EXT_QTY
[L]CURPRO = "LIN_EXT_QTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIN_EXT_QTY
[L]CURPRO = "LIN_EXT_QTY"
Return

$PROPAGATE_LIN_EXT_QTY
this.isReadonly = 0
[L]CURPRO = "LIN_EXT_QTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIN_EXT_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_EXT_QTY"
$_LNKPRO_LIN_EXT_QTY
Return


####################################################################
# 41 : LIN_INV_PRI Price ( Field DCB 10)
####################################################################

$SET_LIN_INV_PRI
If [L]_AOLDVAL<>this.LIN_INV_PRI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIN_INV_PRI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIN_INV_PRI
 Gosub PROPAGATE_LIN_INV_PRI
Endif
Return

$INIT_LIN_INV_PRI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_INV_PRI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIN_INV_PRI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_INV_PRI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIN_INV_PRI           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIN_INV_PRI           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIN_INV_PRI
[L]CURPRO = "LIN_INV_PRI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIN_INV_PRI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIN_INV_PRI
[L]CURPRO = "LIN_INV_PRI"
Return

$_AOTHERS_LIN_INV_PRI
[L]CURPRO = "LIN_INV_PRI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIN_INV_PRI
[L]CURPRO = "LIN_INV_PRI"
Return

$PROPAGATE_LIN_INV_PRI
this.isReadonly = 0
[L]CURPRO = "LIN_INV_PRI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIN_INV_PRI
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_INV_PRI"
$_LNKPRO_LIN_INV_PRI
Return


####################################################################
# 42 : LIN_EXT_AMT Amount ( Field MD1 0)
####################################################################

$SET_LIN_EXT_AMT
If [L]_AOLDVAL<>this.LIN_EXT_AMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIN_EXT_AMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIN_EXT_AMT
 Gosub PROPAGATE_LIN_EXT_AMT
Endif
Return

$INIT_LIN_EXT_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_EXT_AMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIN_EXT_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_EXT_AMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIN_EXT_AMT           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIN_EXT_AMT           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIN_EXT_AMT
[L]CURPRO = "LIN_EXT_AMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIN_EXT_AMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIN_EXT_AMT
[L]CURPRO = "LIN_EXT_AMT"
Return

$_AOTHERS_LIN_EXT_AMT
[L]CURPRO = "LIN_EXT_AMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"LIN_EXT_AMT",this.LIN_EXT_AMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIN_EXT_AMT
[L]CURPRO = "LIN_EXT_AMT"
Return

$PROPAGATE_LIN_EXT_AMT
this.isReadonly = 0
[L]CURPRO = "LIN_EXT_AMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIN_EXT_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_EXT_AMT"
$_LNKPRO_LIN_EXT_AMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"LIN_EXT_AMT",this.LIN_EXT_AMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("LIN_EXT_AMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 43 : LIN_CN_QTY Credit quantity ( Field QTY 0)
####################################################################

$SET_LIN_CN_QTY
If [L]_AOLDVAL<>this.LIN_CN_QTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIN_CN_QTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIN_CN_QTY
 Gosub PROPAGATE_LIN_CN_QTY
Endif
Return

$INIT_LIN_CN_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_CN_QTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIN_CN_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_CN_QTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIN_CN_QTY            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIN_CN_QTY            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIN_CN_QTY
[L]CURPRO = "LIN_CN_QTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIN_CN_QTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIN_CN_QTY
[L]CURPRO = "LIN_CN_QTY"
Return

$_AOTHERS_LIN_CN_QTY
[L]CURPRO = "LIN_CN_QTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIN_CN_QTY
[L]CURPRO = "LIN_CN_QTY"
Return

$PROPAGATE_LIN_CN_QTY
this.isReadonly = 0
[L]CURPRO = "LIN_CN_QTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIN_CN_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_CN_QTY"
$_LNKPRO_LIN_CN_QTY
Return


####################################################################
# 44 : LIN_CN_AMT Credit memos invoiced amount ( Field MD1 0)
####################################################################

$SET_LIN_CN_AMT
If [L]_AOLDVAL<>this.LIN_CN_AMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIN_CN_AMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIN_CN_AMT
 Gosub PROPAGATE_LIN_CN_AMT
Endif
Return

$INIT_LIN_CN_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_CN_AMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIN_CN_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_CN_AMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIN_CN_AMT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIN_CN_AMT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIN_CN_AMT
[L]CURPRO = "LIN_CN_AMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIN_CN_AMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIN_CN_AMT
[L]CURPRO = "LIN_CN_AMT"
Return

$_AOTHERS_LIN_CN_AMT
[L]CURPRO = "LIN_CN_AMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"LIN_CN_AMT",this.LIN_CN_AMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIN_CN_AMT
[L]CURPRO = "LIN_CN_AMT"
Return

$PROPAGATE_LIN_CN_AMT
this.isReadonly = 0
[L]CURPRO = "LIN_CN_AMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIN_CN_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "LIN_CN_AMT"
$_LNKPRO_LIN_CN_AMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"LIN_CN_AMT",this.LIN_CN_AMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("LIN_CN_AMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 45 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 46 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 47 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 48 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 49 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0SVCRINVCNDD
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




