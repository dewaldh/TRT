#<AdxTL>@(#)0.0.0.0 $Revision$Class Overhead category
# Supervisor
## CRUD-CLASSE ## OVENAT
# 2018-08-27 13:20:32 881


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File OVENAT [ONA_]

If !SILENCE : Call TRACE("2 --> Local Instance R_OVENAT") From ASYRCOM : Endif
Local Instance OVENAT Using R_OVENAT

If !SILENCE : Call TRACE("3 --> New Instance R_OVENAT") From ASYRCOM : Endif
OVENAT = NewInstance R_OVENAT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ONA_]ONA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of OVENAT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet OVENAT.AREAD([ONA_]OVENAT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("OVENAT.ONA.OVENAT ="-num$(OVENAT.ONA.OVENAT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(OVENAT.ONA.AKEYS)
  Call TRACE("-"-num$(I)-":"-OVENAT.ONA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ONA_]
FreeGroup OVENAT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(OVENAT,ACLE,ASTATUS,_ETAG)
Variable Instance OVENAT Using R_OVENAT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OVENAT(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OVENAT = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File OVENAT [ONA]
Default File [F:ONA]
Read [F:ONA]ONA0 = [L]_OVENAT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ONA]UPDTICK)>0
 [L]_ETAG = num$([F:ONA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(OVENAT,ACLE,ASTATUS)
Variable Instance OVENAT Using R_OVENAT
Value Char ACLE
Variable Integer ASTATUS
Local Char _OVENAT(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OVENAT = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet OVENAT.AREAD([L]_OVENAT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(OVENAT,_OVENAT,ASTATUS)
Variable Instance OVENAT Using R_OVENAT
Value Char _OVENAT
Variable Integer ASTATUS

If OVENAT = null : End : Endif

Gosub AVARIABLES From WMR00OVENAT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If OVENAT.APARENT=null
 [L]A_I = OVENAT.freeSnapshot
 OVENAT.snapshotEnabled = 0
 OVENAT.setAccessorEnabled = 0
Endif

If fmet OVENAT.ACTX.AGETAFCRIGHT(OVENAT,"GESONA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:ONA]
Read [F:ONA]ONA0 = [L]_OVENAT
If fstat
[L]A_ERROR = [L]_OVENAT
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(OVENAT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet OVENAT.ACTX.AGETAFCRIGHTR(OVENAT,"GESONA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet OVENAT.ACTX.ASTACRITROLE(OVENAT,[L]_OVENAT
& ,"ONA","ONA",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet OVENAT.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

OVENAT.ONA.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet OVENAT.ONA.AREAD([L]_OVENAT))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet OVENAT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & OVENAT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet OVENAT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If OVENAT.APARENT=null
 OVENAT.snapshotEnabled = 1
 OVENAT.setAccessorEnabled = 1
Endif
LogicClose File [ONA]
End



