#<AdxTL>@(#)0.0.0.0 $Revision$Class Quality control
# Supervisor
## CRUD-CLASSE ## STOQLYHIS
# 2018-08-27 13:36:08 008


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File STOQLYH [QLH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_STOQLYHIS") From ASYRCOM : Endif
Local Instance STOQLYHIS Using R_STOQLYHIS

If !SILENCE : Call TRACE("3 --> New Instance R_STOQLYHIS") From ASYRCOM : Endif
STOQLYHIS = NewInstance R_STOQLYHIS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [QLH_]QLH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of STOQLYH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet STOQLYHIS.AREAD([QLH_]VCRTYP,[QLH_]VCRNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("STOQLYHIS.QLH.VCRTYP ="-num$(STOQLYHIS.QLH.VCRTYP)) From ASYRCOM
 Call TRACE("STOQLYHIS.QLH.VCRNUM ="-num$(STOQLYHIS.QLH.VCRNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(STOQLYHIS.QLH.AKEYS)
  Call TRACE("-"-num$(I)-":"-STOQLYHIS.QLH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [QLH_]
FreeGroup STOQLYHIS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(STOQLYHIS,ACLE,ASTATUS,_ETAG)
Variable Instance STOQLYHIS Using R_STOQLYHIS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _VCRTYP
Local Char _VCRNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRNUM = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File STOQLYH [QLH]
Default File [F:QLH]
Read [F:QLH]QLH0 = [L]_VCRTYP;[L]_VCRNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:QLH]UPDTICK)>0
 [L]_ETAG = num$([F:QLH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(STOQLYHIS,ACLE,ASTATUS)
Variable Instance STOQLYHIS Using R_STOQLYHIS
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _VCRTYP
Local Char _VCRNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRNUM = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet STOQLYHIS.AREAD([L]_VCRTYP,[L]_VCRNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(STOQLYHIS,_VCRTYP,_VCRNUM,ASTATUS)
Variable Instance STOQLYHIS Using R_STOQLYHIS
Value Tinyint _VCRTYP
Value Char _VCRNUM
Variable Integer ASTATUS

If STOQLYHIS = null : End : Endif

Gosub AVARIABLES From WMR00STOQLYHIS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If STOQLYHIS.APARENT=null
 [L]A_I = STOQLYHIS.freeSnapshot
 STOQLYHIS.snapshotEnabled = 0
 STOQLYHIS.setAccessorEnabled = 0
Endif

If fmet STOQLYHIS.ACTX.AGETAFCRIGHT(STOQLYHIS,"GESSTQ",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:QLH]
Read [F:QLH]QLH0 = [L]_VCRTYP;[L]_VCRNUM
If fstat
[L]A_ERROR = num$([L]_VCRTYP)+"~"+[L]_VCRNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(STOQLYHIS,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:QLH]STOFCY
[L]A_STRACC = ""
If fmet STOQLYHIS.ACTX.AGETAFCRIGHTR(STOQLYHIS,"GESSTQ",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet STOQLYHIS.ACTX.ASTACRITROLE(STOQLYHIS,num$([L]_VCRTYP)+"~"+[L]_VCRNUM
& ,"STQ","QLH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet STOQLYHIS.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

STOQLYHIS.QLH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet STOQLYHIS.QLH.AREAD([L]_VCRTYP,[L]_VCRNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet STOQLYHIS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & STOQLYHIS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet STOQLYHIS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If STOQLYHIS.APARENT=null
 STOQLYHIS.snapshotEnabled = 1
 STOQLYHIS.setAccessorEnabled = 1
Endif
LogicClose File [QLH] ,[QLD] ,[STJ]
End



