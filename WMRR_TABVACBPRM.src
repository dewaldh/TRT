#<AdxTL>@(#)0.0.0.0 $Revision$Class BP tax rule table
# Supervisor
## CRUD-CLASSE ## TABVACBPRM
# 2018-08-27 13:39:21 669


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABVACBPR [TVB_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABVACBPRM") From ASYRCOM : Endif
Local Instance TABVACBPRM Using R_TABVACBPRM

If !SILENCE : Call TRACE("3 --> New Instance R_TABVACBPRM") From ASYRCOM : Endif
TABVACBPRM = NewInstance R_TABVACBPRM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TVB_]TVB0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABVACBPR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABVACBPRM.AREAD([TVB_]VACBPR,[TVB_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABVACBPRM.TVB.VACBPR ="-num$(TABVACBPRM.TVB.VACBPR)) From ASYRCOM
 Call TRACE("TABVACBPRM.TVB.LEG ="-num$(TABVACBPRM.TVB.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABVACBPRM.TVB.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABVACBPRM.TVB.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TVB_]
FreeGroup TABVACBPRM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABVACBPRM,ACLE,ASTATUS,_ETAG)
Variable Instance TABVACBPRM Using R_TABVACBPRM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VACBPR(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VACBPR = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABVACBPR [TVB]
Default File [F:TVB]
Read [F:TVB]TVB0 = [L]_VACBPR;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TVB]UPDTICK)>0
 [L]_ETAG = num$([F:TVB]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABVACBPRM,ACLE,ASTATUS)
Variable Instance TABVACBPRM Using R_TABVACBPRM
Value Char ACLE
Variable Integer ASTATUS
Local Char _VACBPR(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VACBPR = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABVACBPRM.AREAD([L]_VACBPR,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABVACBPRM,_VACBPR,_LEG,ASTATUS)
Variable Instance TABVACBPRM Using R_TABVACBPRM
Value Char _VACBPR
Value Char _LEG
Variable Integer ASTATUS

If TABVACBPRM = null : End : Endif

Gosub AVARIABLES From WMR00TABVACBPRM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABVACBPRM.APARENT=null
 [L]A_I = TABVACBPRM.freeSnapshot
 TABVACBPRM.snapshotEnabled = 0
 TABVACBPRM.setAccessorEnabled = 0
Endif

If fmet TABVACBPRM.ACTX.AGETAFCRIGHT(TABVACBPRM,"GESTVB",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TVB]
Read [F:TVB]TVB0 = [L]_VACBPR;[L]_LEG
If fstat
[L]A_ERROR = [L]_VACBPR+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABVACBPRM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABVACBPRM.ACTX.AGETAFCRIGHTR(TABVACBPRM,"GESTVB",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABVACBPRM.ACTX.ASTACRITROLE(TABVACBPRM,[L]_VACBPR+"~"+[L]_LEG
& ,"TVB","TVB",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABVACBPRM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABVACBPRM.TVB.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABVACBPRM.TVB.AREAD([L]_VACBPR,[L]_LEG))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABVACBPRM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABVACBPRM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABVACBPRM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABVACBPRM.APARENT=null
 TABVACBPRM.snapshotEnabled = 1
 TABVACBPRM.setAccessorEnabled = 1
Endif
LogicClose File [TVB]
End



