#<AdxTL>@(#)0.0.0.0 $Revision$Class Customers
# Supervisor
## CRUD-CLASSE ## BPCUSTOMERM
# 2018-08-27 13:06:19 639


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPCUSTOMER [BPC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_BPCUSTOMERM") From ASYRCOM : Endif
Local Instance BPCUSTOMERM Using R_BPCUSTOMERM

If !SILENCE : Call TRACE("3 --> New Instance R_BPCUSTOMERM") From ASYRCOM : Endif
BPCUSTOMERM = NewInstance R_BPCUSTOMERM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPC_]BPC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPCUSTOMER") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMERM.AREAD([BPC_]BPCNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPCUSTOMERM.BPC.BPCNUM ="-num$(BPCUSTOMERM.BPC.BPCNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPCUSTOMERM.BPC.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPCUSTOMERM.BPC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPC_]
FreeGroup BPCUSTOMERM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPCUSTOMERM,ACLE,ASTATUS,_ETAG)
Variable Instance BPCUSTOMERM Using R_BPCUSTOMERM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPCNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BPCUSTOMER [BPC]
Default File [F:BPC]
Read [F:BPC]BPC0 = [L]_BPCNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPC]UPDTICK)>0
 [L]_ETAG = num$([F:BPC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPCUSTOMERM,ACLE,ASTATUS)
Variable Instance BPCUSTOMERM Using R_BPCUSTOMERM
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPCNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMERM.AREAD([L]_BPCNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPCUSTOMERM,_BPCNUM,ASTATUS)
Variable Instance BPCUSTOMERM Using R_BPCUSTOMERM
Value Char _BPCNUM
Variable Integer ASTATUS

If BPCUSTOMERM = null : End : Endif

Gosub AVARIABLES From WMR00BPCUSTOMERM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPCUSTOMERM.APARENT=null
 [L]A_I = BPCUSTOMERM.freeSnapshot
 BPCUSTOMERM.snapshotEnabled = 0
 BPCUSTOMERM.setAccessorEnabled = 0
Endif

If fmet BPCUSTOMERM.ACTX.AGETAFCRIGHT(BPCUSTOMERM,"GESBPC",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:BPC]
Read [F:BPC]BPC0 = [L]_BPCNUM
If fstat
[L]A_ERROR = [L]_BPCNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BPCUSTOMERM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet BPCUSTOMERM.ACTX.AGETAFCRIGHTR(BPCUSTOMERM,"GESBPC",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet BPCUSTOMERM.ACTX.ASTACRITROLE(BPCUSTOMERM,[L]_BPCNUM
& ,"BPC","BPC",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMERM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

BPCUSTOMERM.BPC.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMERM.BPC.AREAD([L]_BPCNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMERM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPCUSTOMERM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMERM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPCUSTOMERM.APARENT=null
 BPCUSTOMERM.snapshotEnabled = 1
 BPCUSTOMERM.setAccessorEnabled = 1
Endif
LogicClose File [BPC] ,[BPR] ,[BPD]
End



