#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ALLFIL 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:48:44"
A_USER  = "ADMIN"
A_STAMP = "20180827234844"
Return

$TITRES
Chgtzn [M:ALF]VCRNUM With GBIDC1
Chgtzn [M:ALF]LOT With GWSINTLOT
Chgtzn [M:ALF]LOCTYP With GWSINTEMPT
Chgtzn [M:ALF]LOC With GWSINTEMP
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ALLFIL [ALF]
Gosub HORODAT
Local Inpbox "ALLFIL" From GFONCTION At A_STAMP With A_WINDPREV Mask [ALF] As [SIM_]
Grizo [ALF]5
Grizo [ALF]10
Grizo [ALF]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ALF]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=30 : X2(0)=83 : Y1(0)=9 : Y2(0)=12
X1(1)=30 : X2(1)=83 : Y1(1)=13 : Y2(1)=15
X1(2)=30 : X2(2)=83 : Y1(2)=16 : Y2(2)=20
Return

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1ALLFIL
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1ALLFIL
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_VCRNUM
Return

$ON_VCRTYP
Onevent INIT_AREA Call D_VCRTYP(zc) From W1ALLFIL
Return

Subprog D_VCRTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOT
Onevent CONTROL Call C_LOT(zc) From W1ALLFIL
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1ALLFIL
Onevent BEFORE_AREA Gosub AV_LOT From W1ALLFIL
Return

$AV_LOT
If GWSINVLOS<>""
 Chgfmt [M]LOT(indice) With GWSINVLOS
Else
 Chgfmt [M]LOT(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOT(zc) From W1ALLFIL
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LOT(VALEUR) From TRTALLFIL
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOT"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M]STOFCY
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELLOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1ALLFIL
Return

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_STA(VALEUR) From TRTALLFIL
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 7387 : Endif
Gosub _AFF
End

$ON_LOCTYP
Onevent CONTROL Call C_LOCTYP(zc) From W1ALLFIL
Onevent BEFORE_INPUT Call AS_LOCTYP(zc) From W1ALLFIL
Onevent BEFORE_AREA Gosub AV_LOCTYP From W1ALLFIL
Return

Subprog IB_LOCTYP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_LOCTYP From TRTALLFIL
Gosub _AFF
End

$AV_LOCTYP
If GWSINVEMPT<>""
 Chgfmt [M]LOCTYP(indice) With GWSINVEMPT
Else
 Chgfmt [M]LOCTYP(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOCTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call IB_LOCTYP(VALEUR)
## Action STD
Call AS_LOCTYP(VALEUR) From TRTALLFIL
If mkstat=2
 [M]LOCTYP(INDIC) = VALEUR
 Affzo LOCTYP(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_LOCTYP(zc) From W1ALLFIL
Gosub _AFF
End

Subprog C_LOCTYP(VALEUR)
Variable Char    VALEUR()
## Action CTLTEMFMT
Call CTLTEMFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCTYP" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_LOCTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B1_LOCTYP(VALEUR) From TRTALLFIL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1ALLFIL
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1ALLFIL
Onevent BEFORE_AREA Gosub AV_LOC From W1ALLFIL
Return

Subprog IB_LOC(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_LOC From TRTALLFIL
Gosub _AFF
End

$AV_LOC
If GWSINVEMP<>""
 Chgfmt [M]LOC(indice) With GWSINVEMP
Else
 Chgfmt [M]LOC(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(24188,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call IB_LOC(VALEUR)
## Action STD
Call AS_LOC(VALEUR) From TRTALLFIL
If mkstat=2
 [M]LOC(INDIC) = VALEUR
 Affzo LOC(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_LOC(zc) From W1ALLFIL
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1ALLFIL
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"*?#!") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELEMP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELEMP"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = GLOCCAT
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELEMP","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B1_LOC(VALEUR) From TRTALLFIL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$CHG_STY
Return


