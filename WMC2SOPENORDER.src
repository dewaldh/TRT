#<AdxTL>@(#)0.0.0.0 $Revision$Class Open orders
# Supervisor
## ACLA-CLASSE ## SOPENORDER
# 2018-08-27 12:47:23 773

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : DEP_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_DEP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "DEP_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DEP_LEG
If [L]_AOLDVAL<>this.DEP_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEP_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEP_LEG
 Gosub PROPAGATE_DEP_LEG
Endif
Return

$INIT_DEP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "DEP_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"DEP_LEG",this.DEP_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "DEP_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEP_LEG               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEP_LEG               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEP_LEG
[L]CURPRO = "DEP_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEP_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEP_LEG
[L]CURPRO = "DEP_LEG"
If vireblc(this.DEP_LEG,2)<>vireblc(format$("K:20B",this.DEP_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEP_LEG
[L]CURPRO = "DEP_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"DEP_LEG",this.DEP_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEP_LEG
[L]CURPRO = "DEP_LEG"
Return

$PROPAGATE_DEP_LEG
this.isReadonly = 0
[L]CURPRO = "DEP_LEG"
Gosub _LNKPRO_DEP_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "DEP_LEG"
$_LNKPRO_DEP_LEG
If vireblc(this.DEP_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.DEP_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEP_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEP_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 32 : IME Invoicing mode ( Field Local menu number 408)
####################################################################

$SET_IME
If [L]_AOLDVAL<>this.IME
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IME
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IME
 Gosub PROPAGATE_IME
Endif
Return

$INIT_IME
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "IME"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IME=0 and fmet this.AGETATTRIBUTE("IME","$isMandatory")="true"
 this.IME = 1
Endif
Return
 
$CONTROL_IME
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "IME"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IME                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IME                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IME
[L]CURPRO = "IME"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IME=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IME
[L]CURPRO = "IME"
If this.IME<0 or this.IME>len(mess(0,408,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"408 ->"-num$(this.IME)-mess(99,123,1)):  Return : # Local menu "408 -> Invalid option
Endif
Return

$_AOTHERS_IME
[L]CURPRO = "IME"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IME
[L]CURPRO = "IME"
Return

$PROPAGATE_IME
this.isReadonly = 0
[L]CURPRO = "IME"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IME
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "IME"
$_LNKPRO_IME
Return


####################################################################
# 33 : OCNFLG Print acknowledgment ( Field Local menu number 1)
####################################################################

$SET_OCNFLG
If [L]_AOLDVAL<>this.OCNFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OCNFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OCNFLG
 Gosub PROPAGATE_OCNFLG
Endif
Return

$INIT_OCNFLG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "OCNFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.OCNFLG=0 and fmet this.AGETATTRIBUTE("OCNFLG","$isMandatory")="true"
 this.OCNFLG = 1
Endif
Return
 
$CONTROL_OCNFLG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "OCNFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OCNFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OCNFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OCNFLG
[L]CURPRO = "OCNFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OCNFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OCNFLG
[L]CURPRO = "OCNFLG"
If this.OCNFLG<0 or this.OCNFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.OCNFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_OCNFLG
[L]CURPRO = "OCNFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OCNFLG
[L]CURPRO = "OCNFLG"
Return

$PROPAGATE_OCNFLG
this.isReadonly = 0
[L]CURPRO = "OCNFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OCNFLG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "OCNFLG"
$_LNKPRO_OCNFLG
Return


####################################################################
# 34 : OCNPRN Acknowledgment printed ( Field Local menu number 1)
####################################################################

$SET_OCNPRN
If [L]_AOLDVAL<>this.OCNPRN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OCNPRN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OCNPRN
 Gosub PROPAGATE_OCNPRN
Endif
Return

$INIT_OCNPRN
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "OCNPRN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.OCNPRN=0 and fmet this.AGETATTRIBUTE("OCNPRN","$isMandatory")="true"
 this.OCNPRN = 1
Endif
Return
 
$CONTROL_OCNPRN
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "OCNPRN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OCNPRN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OCNPRN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OCNPRN
[L]CURPRO = "OCNPRN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OCNPRN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OCNPRN
[L]CURPRO = "OCNPRN"
If this.OCNPRN<0 or this.OCNPRN>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.OCNPRN)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_OCNPRN
[L]CURPRO = "OCNPRN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OCNPRN
[L]CURPRO = "OCNPRN"
Return

$PROPAGATE_OCNPRN
this.isReadonly = 0
[L]CURPRO = "OCNPRN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OCNPRN
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "OCNPRN"
$_LNKPRO_OCNPRN
Return


####################################################################
# 35 : COPNBR No. copies acknowledgement of receipt ( Field C 1)
####################################################################

$SET_COPNBR
If [L]_AOLDVAL<>this.COPNBR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COPNBR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COPNBR
 Gosub PROPAGATE_COPNBR
Endif
Return

$INIT_COPNBR
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "COPNBR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COPNBR
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "COPNBR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COPNBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COPNBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COPNBR
[L]CURPRO = "COPNBR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.COPNBR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COPNBR
[L]CURPRO = "COPNBR"
Return

$_AOTHERS_COPNBR
[L]CURPRO = "COPNBR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COPNBR
[L]CURPRO = "COPNBR"
Return

$PROPAGATE_COPNBR
this.isReadonly = 0
[L]CURPRO = "COPNBR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COPNBR
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "COPNBR"
$_LNKPRO_COPNBR
Return


####################################################################
# 36 : SOHTEX1 Ord header text ( Field TXC 12)
####################################################################

$SET_SOHTEX1
If [L]_AOLDVAL<>this.SOHTEX1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SOHTEX1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SOHTEX1
 Gosub PROPAGATE_SOHTEX1
Endif
Return

$INIT_SOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SOHTEX1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SOHTEX1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SOHTEX1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SOHTEX1               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SOHTEX1
[L]CURPRO = "SOHTEX1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SOHTEX1,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SOHTEX1
[L]CURPRO = "SOHTEX1"
If vireblc(this.SOHTEX1,2)<>vireblc(format$("K:12X",this.SOHTEX1),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SOHTEX1
[L]CURPRO = "SOHTEX1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SOHTEX1
[L]CURPRO = "SOHTEX1"
Return

$PROPAGATE_SOHTEX1
this.isReadonly = 0
[L]CURPRO = "SOHTEX1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SOHTEX1"
$_LNKPRO_SOHTEX1
Return


####################################################################
# 37 : CLASOHTEX1 Ord header text ( Field ACRTF 1)
####################################################################

$GET_CLASOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX1"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_CLB("CLASOHTEX1",
& this.SOHTEX1
& ,[L]_CNT,this.CLASOHTEX1)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_CLASOHTEX1
If fmet this.AGETATTRIBUTE("CLASOHTEX1","$isLoaded")<>"true" or [L]_AOLDVAL<>this.CLASOHTEX1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CLASOHTEX1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("CLASOHTEX1","$isLoaded")<>"true" or [L]_AOLDVAL<>this.CLASOHTEX1
 Gosub PROPAGATE_CLASOHTEX1
Endif
Return

$INIT_CLASOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CLASOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CLASOHTEX1            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CLASOHTEX1            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CLASOHTEX1
[L]CURPRO = "CLASOHTEX1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.CLASOHTEX1)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CLASOHTEX1
[L]CURPRO = "CLASOHTEX1"
Return

$_AOTHERS_CLASOHTEX1
[L]CURPRO = "CLASOHTEX1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CLASOHTEX1
[L]CURPRO = "CLASOHTEX1"
Return

$PROPAGATE_CLASOHTEX1
this.isReadonly = 0
[L]CURPRO = "CLASOHTEX1"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CLASOHTEX1
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX1"
$_LNKPRO_CLASOHTEX1
Local Tinyint _EXI : [L]_EXI=1
Gosub READ_EXI_CLASOHTEX1 From WMC0SOPENORDER
[L]ASTATUS = fmet this.ASETATTRIBUTE("CLASOHTEX1","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Return


####################################################################
# 38 : SOHTEX2 Ord footer text ( Field TXC 12)
####################################################################

$SET_SOHTEX2
If [L]_AOLDVAL<>this.SOHTEX2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SOHTEX2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SOHTEX2
 Gosub PROPAGATE_SOHTEX2
Endif
Return

$INIT_SOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SOHTEX2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SOHTEX2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SOHTEX2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SOHTEX2               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SOHTEX2
[L]CURPRO = "SOHTEX2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SOHTEX2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SOHTEX2
[L]CURPRO = "SOHTEX2"
If vireblc(this.SOHTEX2,2)<>vireblc(format$("K:12X",this.SOHTEX2),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SOHTEX2
[L]CURPRO = "SOHTEX2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SOHTEX2
[L]CURPRO = "SOHTEX2"
Return

$PROPAGATE_SOHTEX2
this.isReadonly = 0
[L]CURPRO = "SOHTEX2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SOHTEX2"
$_LNKPRO_SOHTEX2
Return


####################################################################
# 39 : CLASOHTEX2 Ord footer text ( Field ACRTF 1)
####################################################################

$GET_CLASOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX2"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_CLB("CLASOHTEX2",
& this.SOHTEX2
& ,[L]_CNT,this.CLASOHTEX2)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_CLASOHTEX2
If fmet this.AGETATTRIBUTE("CLASOHTEX2","$isLoaded")<>"true" or [L]_AOLDVAL<>this.CLASOHTEX2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CLASOHTEX2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("CLASOHTEX2","$isLoaded")<>"true" or [L]_AOLDVAL<>this.CLASOHTEX2
 Gosub PROPAGATE_CLASOHTEX2
Endif
Return

$INIT_CLASOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CLASOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CLASOHTEX2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CLASOHTEX2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CLASOHTEX2
[L]CURPRO = "CLASOHTEX2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.CLASOHTEX2)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CLASOHTEX2
[L]CURPRO = "CLASOHTEX2"
Return

$_AOTHERS_CLASOHTEX2
[L]CURPRO = "CLASOHTEX2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CLASOHTEX2
[L]CURPRO = "CLASOHTEX2"
Return

$PROPAGATE_CLASOHTEX2
this.isReadonly = 0
[L]CURPRO = "CLASOHTEX2"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CLASOHTEX2
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CLASOHTEX2"
$_LNKPRO_CLASOHTEX2
Local Tinyint _EXI : [L]_EXI=1
Gosub READ_EXI_CLASOHTEX2 From WMC0SOPENORDER
[L]ASTATUS = fmet this.ASETATTRIBUTE("CLASOHTEX2","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Return


####################################################################
# 40 : BETFCY Intersite ( Field Local menu number 1)
####################################################################

$SET_BETFCY
If [L]_AOLDVAL<>this.BETFCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BETFCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BETFCY
 Gosub PROPAGATE_BETFCY
Endif
Return

$INIT_BETFCY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "BETFCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BETFCY=0 and fmet this.AGETATTRIBUTE("BETFCY","$isMandatory")="true"
 this.BETFCY = 1
Endif
Return
 
$CONTROL_BETFCY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "BETFCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BETFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BETFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BETFCY
[L]CURPRO = "BETFCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BETFCY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BETFCY
[L]CURPRO = "BETFCY"
If this.BETFCY<0 or this.BETFCY>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BETFCY)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BETFCY
[L]CURPRO = "BETFCY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BETFCY
[L]CURPRO = "BETFCY"
Return

$PROPAGATE_BETFCY
this.isReadonly = 0
[L]CURPRO = "BETFCY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BETFCY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "BETFCY"
$_LNKPRO_BETFCY
Return


####################################################################
# 41 : BETCPY Intercompany ( Field Local menu number 1)
####################################################################

$SET_BETCPY
If [L]_AOLDVAL<>this.BETCPY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BETCPY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BETCPY
 Gosub PROPAGATE_BETCPY
Endif
Return

$INIT_BETCPY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "BETCPY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BETCPY=0 and fmet this.AGETATTRIBUTE("BETCPY","$isMandatory")="true"
 this.BETCPY = 1
Endif
Return
 
$CONTROL_BETCPY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "BETCPY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BETCPY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BETCPY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BETCPY
[L]CURPRO = "BETCPY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BETCPY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BETCPY
[L]CURPRO = "BETCPY"
If this.BETCPY<0 or this.BETCPY>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BETCPY)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BETCPY
[L]CURPRO = "BETCPY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BETCPY
[L]CURPRO = "BETCPY"
Return

$PROPAGATE_BETCPY
this.isReadonly = 0
[L]CURPRO = "BETCPY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BETCPY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "BETCPY"
$_LNKPRO_BETCPY
Return


####################################################################
# 42 : ORIFCY Original site ( Field FCY 5)
####################################################################

$SET_ORIFCY
If [L]_AOLDVAL<>this.ORIFCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ORIFCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ORIFCY
 Gosub PROPAGATE_ORIFCY
Endif
Return

$INIT_ORIFCY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "ORIFCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ORIFCY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "ORIFCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ORIFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ORIFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ORIFCY
[L]CURPRO = "ORIFCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ORIFCY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ORIFCY
[L]CURPRO = "ORIFCY"
If vireblc(this.ORIFCY,2)<>vireblc(format$("K:5c",this.ORIFCY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ORIFCY
[L]CURPRO = "ORIFCY"
If vireblc(this.ORIFCY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFCY.ACTRLREF(this,"ORIFCY",this.ORIFCY,this.ORIFCY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ORIFCY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ORIFCY
[L]CURPRO = "ORIFCY"
Return

$PROPAGATE_ORIFCY
this.isReadonly = 0
[L]CURPRO = "ORIFCY"
Gosub _LNKPRO_ORIFCY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ORIFCY
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "ORIFCY"
$_LNKPRO_ORIFCY
If vireblc(this.ORIFCY,2)<>""
 # Link FACILITY
 Local File FACILITY [WFCY]
 Read [F:WFCY]FCY0 = this.ORIFCY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("ORIFCY","$title",[F:WFCY]FCYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("ORIFCY","$description",[F:WFCY]FCYNAM)
 Endif
 LogicClose File [WFCY]
Endif
Return


####################################################################
# 43 : LASDLVDAT Last delivery date ( Field D)
####################################################################

$SET_LASDLVDAT
If [L]_AOLDVAL<>this.LASDLVDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LASDLVDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LASDLVDAT
 Gosub PROPAGATE_LASDLVDAT
Endif
Return

$INIT_LASDLVDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "LASDLVDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LASDLVDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "LASDLVDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LASDLVDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LASDLVDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LASDLVDAT
[L]CURPRO = "LASDLVDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LASDLVDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LASDLVDAT
[L]CURPRO = "LASDLVDAT"
Return

$_AOTHERS_LASDLVDAT
[L]CURPRO = "LASDLVDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LASDLVDAT
[L]CURPRO = "LASDLVDAT"
Return

$PROPAGATE_LASDLVDAT
this.isReadonly = 0
[L]CURPRO = "LASDLVDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LASDLVDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "LASDLVDAT"
$_LNKPRO_LASDLVDAT
Return


####################################################################
# 44 : LASINVDAT Last invoice date ( Field D)
####################################################################

$SET_LASINVDAT
If [L]_AOLDVAL<>this.LASINVDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LASINVDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LASINVDAT
 Gosub PROPAGATE_LASINVDAT
Endif
Return

$INIT_LASINVDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "LASINVDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LASINVDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "LASINVDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LASINVDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LASINVDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LASINVDAT
[L]CURPRO = "LASINVDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LASINVDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LASINVDAT
[L]CURPRO = "LASINVDAT"
Return

$_AOTHERS_LASINVDAT
[L]CURPRO = "LASINVDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LASINVDAT
[L]CURPRO = "LASINVDAT"
Return

$PROPAGATE_LASINVDAT
this.isReadonly = 0
[L]CURPRO = "LASINVDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LASINVDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "LASINVDAT"
$_LNKPRO_LASINVDAT
Return


####################################################################
# 46 : PRITYP Price - / +tax ( Field Local menu number 243)
####################################################################

$SET_PRITYP
If [L]_AOLDVAL<>this.PRITYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRITYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRITYP
 Gosub PROPAGATE_PRITYP
Endif
Return

$INIT_PRITYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "PRITYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PRITYP=0 and fmet this.AGETATTRIBUTE("PRITYP","$isMandatory")="true"
 this.PRITYP = 1
Endif
Return
 
$CONTROL_PRITYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "PRITYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRITYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRITYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRITYP
[L]CURPRO = "PRITYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PRITYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRITYP
[L]CURPRO = "PRITYP"
If this.PRITYP<0 or this.PRITYP>len(mess(0,243,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"243 ->"-num$(this.PRITYP)-mess(99,123,1)):  Return : # Local menu "243 -> Invalid option
Endif
Return

$_AOTHERS_PRITYP
[L]CURPRO = "PRITYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRITYP
[L]CURPRO = "PRITYP"
Return

$PROPAGATE_PRITYP
this.isReadonly = 0
[L]CURPRO = "PRITYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRITYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "PRITYP"
$_LNKPRO_PRITYP
Return


####################################################################
# 48 : ALLTYP Allocation type ( Field Local menu number 450)
####################################################################

$SET_ALLTYP
If [L]_AOLDVAL<>this.ALLTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLTYP
 Gosub PROPAGATE_ALLTYP
Endif
Return

$INIT_ALLTYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "ALLTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALLTYP=0 and fmet this.AGETATTRIBUTE("ALLTYP","$isMandatory")="true"
 this.ALLTYP = 1
Endif
Return
 
$CONTROL_ALLTYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "ALLTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLTYP
[L]CURPRO = "ALLTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLTYP
[L]CURPRO = "ALLTYP"
If this.ALLTYP<0 or this.ALLTYP>len(mess(0,450,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"450 ->"-num$(this.ALLTYP)-mess(99,123,1)):  Return : # Local menu "450 -> Invalid option
Endif
Return

$_AOTHERS_ALLTYP
[L]CURPRO = "ALLTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLTYP
[L]CURPRO = "ALLTYP"
Return

$PROPAGATE_ALLTYP
this.isReadonly = 0
[L]CURPRO = "ALLTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLTYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "ALLTYP"
$_LNKPRO_ALLTYP
Return


####################################################################
# 49 : CDTSTA Credit status ( Field Local menu number 419)
####################################################################

$SET_CDTSTA
If [L]_AOLDVAL<>this.CDTSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CDTSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CDTSTA
 Gosub PROPAGATE_CDTSTA
Endif
Return

$INIT_CDTSTA
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CDTSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CDTSTA=0 and fmet this.AGETATTRIBUTE("CDTSTA","$isMandatory")="true"
 this.CDTSTA = 1
Endif
Return
 
$CONTROL_CDTSTA
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CDTSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CDTSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CDTSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CDTSTA
[L]CURPRO = "CDTSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CDTSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CDTSTA
[L]CURPRO = "CDTSTA"
If this.CDTSTA<0 or this.CDTSTA>len(mess(0,419,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"419 ->"-num$(this.CDTSTA)-mess(99,123,1)):  Return : # Local menu "419 -> Invalid option
Endif
Return

$_AOTHERS_CDTSTA
[L]CURPRO = "CDTSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CDTSTA
[L]CURPRO = "CDTSTA"
Return

$PROPAGATE_CDTSTA
this.isReadonly = 0
[L]CURPRO = "CDTSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CDTSTA
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "CDTSTA"
$_LNKPRO_CDTSTA
Return


####################################################################
# 50 : APPFLG Signed ( Field Local menu number 280)
####################################################################

$SET_APPFLG
If [L]_AOLDVAL<>this.APPFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_APPFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.APPFLG
 Gosub PROPAGATE_APPFLG
Endif
Return

$INIT_APPFLG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "APPFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.APPFLG=0 and fmet this.AGETATTRIBUTE("APPFLG","$isMandatory")="true"
 this.APPFLG = 1
Endif
Return
 
$CONTROL_APPFLG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "APPFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_APPFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_APPFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_APPFLG
[L]CURPRO = "APPFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.APPFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_APPFLG
[L]CURPRO = "APPFLG"
If this.APPFLG<0 or this.APPFLG>len(mess(0,280,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"280 ->"-num$(this.APPFLG)-mess(99,123,1)):  Return : # Local menu "280 -> Invalid option
Endif
Return

$_AOTHERS_APPFLG
[L]CURPRO = "APPFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_APPFLG
[L]CURPRO = "APPFLG"
Return

$PROPAGATE_APPFLG
this.isReadonly = 0
[L]CURPRO = "APPFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_APPFLG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "APPFLG"
$_LNKPRO_APPFLG
Return


####################################################################
# 51 : REVNUM Revision no. ( Field C 4)
####################################################################

$SET_REVNUM
If [L]_AOLDVAL<>this.REVNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REVNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REVNUM
 Gosub PROPAGATE_REVNUM
Endif
Return

$INIT_REVNUM
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "REVNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REVNUM
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "REVNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REVNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REVNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REVNUM
[L]CURPRO = "REVNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.REVNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REVNUM
[L]CURPRO = "REVNUM"
Return

$_AOTHERS_REVNUM
[L]CURPRO = "REVNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REVNUM
[L]CURPRO = "REVNUM"
Return

$PROPAGATE_REVNUM
this.isReadonly = 0
[L]CURPRO = "REVNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REVNUM
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "REVNUM"
$_LNKPRO_REVNUM
Return


####################################################################
# 52 : SHIADECOD Shipper / receiver code ( Field A 35)
####################################################################

$SET_SHIADECOD
If [L]_AOLDVAL<>this.SHIADECOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHIADECOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHIADECOD
 Gosub PROPAGATE_SHIADECOD
Endif
Return

$INIT_SHIADECOD
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SHIADECOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHIADECOD
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SHIADECOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHIADECOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHIADECOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHIADECOD
[L]CURPRO = "SHIADECOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHIADECOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHIADECOD
[L]CURPRO = "SHIADECOD"
Return

$_AOTHERS_SHIADECOD
[L]CURPRO = "SHIADECOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHIADECOD
[L]CURPRO = "SHIADECOD"
Return

$PROPAGATE_SHIADECOD
this.isReadonly = 0
[L]CURPRO = "SHIADECOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHIADECOD
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SHIADECOD"
$_LNKPRO_SHIADECOD
Return


####################################################################
# 53 : PLISTC Structure code ( Field PRS 10)
####################################################################

$SET_PLISTC
If [L]_AOLDVAL<>this.PLISTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLISTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLISTC
 Gosub PROPAGATE_PLISTC
Endif
Return

$INIT_PLISTC
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "PLISTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLISTC
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "PLISTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLISTC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLISTC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLISTC
[L]CURPRO = "PLISTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLISTC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLISTC
[L]CURPRO = "PLISTC"
If vireblc(this.PLISTC,2)<>vireblc(format$("K:10c",this.PLISTC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PLISTC
[L]CURPRO = "PLISTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLISTC
[L]CURPRO = "PLISTC"
Return

$PROPAGATE_PLISTC
this.isReadonly = 0
[L]CURPRO = "PLISTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLISTC
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "PLISTC"
$_LNKPRO_PLISTC
Return


####################################################################
# 54 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return


####################################################################
# 55 : SDHTYP Delivery type ( Field TSD 5)
####################################################################

$SET_SDHTYP
If [L]_AOLDVAL<>this.SDHTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDHTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDHTYP
 Gosub PROPAGATE_SDHTYP
Endif
Return

$INIT_SDHTYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDHTYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDHTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDHTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDHTYP
[L]CURPRO = "SDHTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDHTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDHTYP
[L]CURPRO = "SDHTYP"
If vireblc(this.SDHTYP,2)<>vireblc(format$("K:5c",this.SDHTYP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDHTYP
[L]CURPRO = "SDHTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDHTYP
[L]CURPRO = "SDHTYP"
If vireblc(this.SDHTYP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTSD.ACTRLREF(this,"SDHTYP",this.SDHTYP,this.SDHTYP,this.SDHTYP_LEG,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SDHTYP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_SDHTYP
this.isReadonly = 0
[L]CURPRO = "SDHTYP"
Gosub _LNKPRO_SDHTYP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDHTYP
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP"
$_LNKPRO_SDHTYP
If vireblc(this.SDHTYP,2)<>""
 # Link TABSDHTYP
 Local File TABSDHTYP [WTSD]
 Read [F:WTSD]TSD0 = this.SDHTYP;this.SDHTYP_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABSDHTYP" & ZONE="SHOAXX" & IDENT1=[F:WTSD]SDHTYP & IDENT2=[F:WTSD]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABSDHTYP" & ZONE="DESAXX" & IDENT1=[F:WTSD]SDHTYP & IDENT2=[F:WTSD]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTSD]
Endif
Return


####################################################################
# 56 : SDHTYP_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SDHTYP_LEG
If [L]_AOLDVAL<>this.SDHTYP_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDHTYP_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDHTYP_LEG
 Gosub PROPAGATE_SDHTYP_LEG
Endif
Return

$INIT_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"SDHTYP_LEG",this.SDHTYP_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDHTYP_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDHTYP_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDHTYP_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
If vireblc(this.SDHTYP_LEG,2)<>vireblc(format$("K:20B",this.SDHTYP_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"SDHTYP_LEG",this.SDHTYP_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
Return

$PROPAGATE_SDHTYP_LEG
this.isReadonly = 0
[L]CURPRO = "SDHTYP_LEG"
Gosub _LNKPRO_SDHTYP_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "SDHTYP_LEG"
$_LNKPRO_SDHTYP_LEG
If vireblc(this.SDHTYP_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.SDHTYP_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 57 : HLDSTA Hold status ( Field Local menu number 491)
####################################################################

$SET_HLDSTA
If [L]_AOLDVAL<>this.HLDSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDSTA
 Gosub PROPAGATE_HLDSTA
Endif
Return

$INIT_HLDSTA
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.HLDSTA=0 and fmet this.AGETATTRIBUTE("HLDSTA","$isMandatory")="true"
 this.HLDSTA = 1
Endif
Return
 
$CONTROL_HLDSTA
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDSTA
[L]CURPRO = "HLDSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HLDSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDSTA
[L]CURPRO = "HLDSTA"
If this.HLDSTA<0 or this.HLDSTA>len(mess(0,491,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"491 ->"-num$(this.HLDSTA)-mess(99,123,1)):  Return : # Local menu "491 -> Invalid option
Endif
Return

$_AOTHERS_HLDSTA
[L]CURPRO = "HLDSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDSTA
[L]CURPRO = "HLDSTA"
Return

$PROPAGATE_HLDSTA
this.isReadonly = 0
[L]CURPRO = "HLDSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDSTA
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDSTA"
$_LNKPRO_HLDSTA
Return


####################################################################
# 58 : HLDCOD Hold code ( Field Miscellaneous table number)
####################################################################

$SET_HLDCOD
If [L]_AOLDVAL<>this.HLDCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDCOD
 Gosub PROPAGATE_HLDCOD
Endif
Return

$INIT_HLDCOD
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDCOD"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"HLDCOD",this.HLDCOD,204)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDCOD
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDCOD
[L]CURPRO = "HLDCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDCOD
[L]CURPRO = "HLDCOD"
If vireblc(this.HLDCOD,2)<>vireblc(format$("K:20B",this.HLDCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDCOD
[L]CURPRO = "HLDCOD"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"HLDCOD",this.HLDCOD,204,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDCOD
[L]CURPRO = "HLDCOD"
Return

$PROPAGATE_HLDCOD
this.isReadonly = 0
[L]CURPRO = "HLDCOD"
Gosub _LNKPRO_HLDCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDCOD
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDCOD"
$_LNKPRO_HLDCOD
If vireblc(this.HLDCOD,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 204;this.HLDCOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDCOD","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 59 : HLDUSR Hold / release user ( Field AUS 5)
####################################################################

$SET_HLDUSR
If [L]_AOLDVAL<>this.HLDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDUSR
 Gosub PROPAGATE_HLDUSR
Endif
Return

$INIT_HLDUSR
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDUSR
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDUSR
[L]CURPRO = "HLDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDUSR
[L]CURPRO = "HLDUSR"
If vireblc(this.HLDUSR,2)<>vireblc(format$("K:5B",this.HLDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDUSR
[L]CURPRO = "HLDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDUSR
[L]CURPRO = "HLDUSR"
Return

$PROPAGATE_HLDUSR
this.isReadonly = 0
[L]CURPRO = "HLDUSR"
Gosub _LNKPRO_HLDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDUSR
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDUSR"
$_LNKPRO_HLDUSR
If vireblc(this.HLDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.HLDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 60 : HLDDAT Hold / release date ( Field D)
####################################################################

$SET_HLDDAT
If [L]_AOLDVAL<>this.HLDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDDAT
 Gosub PROPAGATE_HLDDAT
Endif
Return

$INIT_HLDDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDDAT
[L]CURPRO = "HLDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HLDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDDAT
[L]CURPRO = "HLDDAT"
Return

$_AOTHERS_HLDDAT
[L]CURPRO = "HLDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDDAT
[L]CURPRO = "HLDDAT"
Return

$PROPAGATE_HLDDAT
this.isReadonly = 0
[L]CURPRO = "HLDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDDAT
Gosub DECLARE_VAR From WMC0SOPENORDER
[L]CURPRO = "HLDDAT"
$_LNKPRO_HLDDAT
Return




