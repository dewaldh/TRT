#<AdxTL>@(#)0.0.0.0 $Revision$Class Conversion factor table
# Supervisor
## CRUD-CLASSE ## TABCOEFF
# 2018-08-27 12:50:54 696


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABCOEFF [TCO_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABCOEFF") From ASYRCOM : Endif
Local Instance TABCOEFF Using C_TABCOEFF

If !SILENCE : Call TRACE("3 --> New Instance C_TABCOEFF") From ASYRCOM : Endif
TABCOEFF = NewInstance C_TABCOEFF AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TCO_]TCO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABCOEFF") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOEFF.AREAD([TCO_]UOM1,[TCO_]UOM2))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABCOEFF.UOM1 ="-num$(TABCOEFF.UOM1)) From ASYRCOM
 Call TRACE("TABCOEFF.UOM2 ="-num$(TABCOEFF.UOM2)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABCOEFF.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABCOEFF.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TCO_]
FreeGroup TABCOEFF
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABCOEFF,ACLE,ASTATUS,_ETAG)
Variable Instance TABCOEFF Using C_TABCOEFF
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _UOM1(3)
Local Char _UOM2(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_UOM1 = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_UOM2 = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABCOEFF [TCO]
Default File [F:TCO]
Read [F:TCO]TCO0 = [L]_UOM1;[L]_UOM2
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TCO]UPDTICK)>0
 [L]_ETAG = num$([F:TCO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABCOEFF,ACLE,ASTATUS)
Variable Instance TABCOEFF Using C_TABCOEFF
Value Char ACLE
Variable Integer ASTATUS
Local Char _UOM1(3)
Local Char _UOM2(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_UOM1 = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_UOM2 = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABCOEFF.AREAD([L]_UOM1,[L]_UOM2))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABCOEFF,_UOM1,_UOM2,ASTATUS)
Variable Instance TABCOEFF Using C_TABCOEFF
Value Char _UOM1
Value Char _UOM2
Variable Integer ASTATUS

If TABCOEFF = null : End : Endif

Gosub AVARIABLES From WMC00TABCOEFF
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABCOEFF.APARENT=null
 [L]A_I = TABCOEFF.freeSnapshot
 TABCOEFF.snapshotEnabled = 0
 TABCOEFF.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABCOEFF.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOEFF._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABCOEFF.APARENT=null
 TABCOEFF.snapshotEnabled = 1
 TABCOEFF.setAccessorEnabled = 1
Endif
LogicClose File [TCO]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABCOEFF._ACTION_PARAM("AREAD_BEFORE",[L]_UOM1,[L]_UOM2))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TCO]
Read [F:TCO]TCO0 = [L]_UOM1;[L]_UOM2
If fstat
[L]A_ERROR = [L]_UOM1+"~"+[L]_UOM2
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABCOEFF,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TCO]AUUID)>0 & [F:TCO]AUUID=NullUuid
 [F:TCO]AUUID = getUuid
Endif
SetInstance TABCOEFF With [F:TCO]
TABCOEFF.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet TABCOEFF.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABCOEFF" & ZONE="COEAX1" & IDENT1=TABCOEFF.UOM1 & IDENT2=TABCOEFF.UOM2
 Call ASETTEXTRA(TABCOEFF.AXX,TABCOEFF.AllocGrp(),"COEAX1",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOEFF.AXX(maxtab(TABCOEFF.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOEFF.AGETTEXTRA("COEAX1"))
 Call ASETTEXTRA(TABCOEFF.AXX,TABCOEFF.AllocGrp(),"COEAX1",
& fmet TABCOEFF.AGETTEXTRALAN("COEAX1",TABCOEFF.ACTX.AFOLD.ALANGDEF),
& TABCOEFF.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABCOEFF" & ZONE="COEAX2" & IDENT1=TABCOEFF.UOM1 & IDENT2=TABCOEFF.UOM2
 Call ASETTEXTRA(TABCOEFF.AXX,TABCOEFF.AllocGrp(),"COEAX2",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOEFF.AXX(maxtab(TABCOEFF.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOEFF.AGETTEXTRA("COEAX2"))
 Call ASETTEXTRA(TABCOEFF.AXX,TABCOEFF.AllocGrp(),"COEAX2",
& fmet TABCOEFF.AGETTEXTRALAN("COEAX2",TABCOEFF.ACTX.AFOLD.ALANGDEF),
& TABCOEFF.ACTX.LAN) From ASYRSUB
Endif

Return



