#<AdxTL>@(#)0.0.0.0 $Revision$Class Periods
# Supervisor
## CRUD-CLASSE ## FXDDEPPER
# 2018-08-27 13:15:58 453


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File DEPREC [DEP_]

If !SILENCE : Call TRACE("2 --> Local Instance R_FXDDEPPER") From ASYRCOM : Endif
Local Instance FXDDEPPER Using R_FXDDEPPER

If !SILENCE : Call TRACE("3 --> New Instance R_FXDDEPPER") From ASYRCOM : Endif
FXDDEPPER = NewInstance R_FXDDEPPER AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [DEP_]DEP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of DEPREC") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet FXDDEPPER.AREAD([DEP_]AASREF,[DEP_]DPRPLN,[DEP_]FIYENDDAT,[DEP_]PERENDDAT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("FXDDEPPER.DEP.AASREF ="-num$(FXDDEPPER.DEP.AASREF)) From ASYRCOM
 Call TRACE("FXDDEPPER.DEP.DPRPLN ="-num$(FXDDEPPER.DEP.DPRPLN)) From ASYRCOM
 Call TRACE("FXDDEPPER.DEP.FIYENDDAT ="-num$(FXDDEPPER.DEP.FIYENDDAT)) From ASYRCOM
 Call TRACE("FXDDEPPER.DEP.PERENDDAT ="-num$(FXDDEPPER.DEP.PERENDDAT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(FXDDEPPER.DEP.AKEYS)
  Call TRACE("-"-num$(I)-":"-FXDDEPPER.DEP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [DEP_]
FreeGroup FXDDEPPER
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(FXDDEPPER,ACLE,ASTATUS,_ETAG)
Variable Instance FXDDEPPER Using R_FXDDEPPER
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _AASREF(20)
Local Tinyint _DPRPLN
Local Date _FIYENDDAT
Local Date _PERENDDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_AASREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_DPRPLN = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FIYENDDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PERENDDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File DEPREC [DEP]
Default File [F:DEP]
Read [F:DEP]DEP0 = [L]_AASREF;[L]_DPRPLN;[L]_FIYENDDAT;[L]_PERENDDAT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:DEP]UPDTICK)>0
 [L]_ETAG = num$([F:DEP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(FXDDEPPER,ACLE,ASTATUS)
Variable Instance FXDDEPPER Using R_FXDDEPPER
Value Char ACLE
Variable Integer ASTATUS
Local Char _AASREF(20)
Local Tinyint _DPRPLN
Local Date _FIYENDDAT
Local Date _PERENDDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_AASREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_DPRPLN = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FIYENDDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PERENDDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet FXDDEPPER.AREAD([L]_AASREF,[L]_DPRPLN,[L]_FIYENDDAT,[L]_PERENDDAT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(FXDDEPPER,_AASREF,_DPRPLN,_FIYENDDAT,_PERENDDAT,ASTATUS)
Variable Instance FXDDEPPER Using R_FXDDEPPER
Value Char _AASREF
Value Tinyint _DPRPLN
Value Date _FIYENDDAT
Value Date _PERENDDAT
Variable Integer ASTATUS

If FXDDEPPER = null : End : Endif

Gosub AVARIABLES From WMR00FXDDEPPER
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If FXDDEPPER.APARENT=null
 [L]A_I = FXDDEPPER.freeSnapshot
 FXDDEPPER.snapshotEnabled = 0
 FXDDEPPER.setAccessorEnabled = 0
Endif

If fmet FXDDEPPER.ACTX.AGETAFCRIGHT(FXDDEPPER,"GESFAS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:DEP]
Read [F:DEP]DEP0 = [L]_AASREF;[L]_DPRPLN;[L]_FIYENDDAT;[L]_PERENDDAT
If fstat
[L]A_ERROR = [L]_AASREF+"~"+num$([L]_DPRPLN)+"~"+num$([L]_FIYENDDAT)+"~"+num$([L]_PERENDDAT)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(FXDDEPPER,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet FXDDEPPER.ACTX.AGETAFCRIGHTR(FXDDEPPER,"GESFAS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet FXDDEPPER.ACTX.ASTACRITROLE(FXDDEPPER,[L]_AASREF+"~"+num$([L]_DPRPLN)+"~"+num$([L]_FIYENDDAT)
& +"~"+num$([L]_PERENDDAT)
& ,"FAS","DEP",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet FXDDEPPER.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

FXDDEPPER.DEP.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet FXDDEPPER.DEP.AREAD([L]_AASREF,[L]_DPRPLN,[L]_FIYENDDAT,[L]_PERENDDAT))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FXDDEPPER.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & FXDDEPPER.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet FXDDEPPER._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If FXDDEPPER.APARENT=null
 FXDDEPPER.snapshotEnabled = 1
 FXDDEPPER.setAccessorEnabled = 1
Endif
LogicClose File [DEP]
End



