#<AdxTL>@(#)0.0.0.0 $Revision$Class Search term list
# Supervisor
## CRUD-CLASSE ## BSISEALIS
# 2018-08-27 13:08:27 432


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSISEALIS,ASTATUS)
Variable Instance BSISEALIS Using R_BSISEALIS
Variable Integer ASTATUS

If BSISEALIS = null : End : Endif

Gosub AVARIABLES From WMR00BSISEALIS
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSISEALIS
Else
 Gosub AUPDATE_BSISEALIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSISEALIS.freeSnapshot
BSISEALIS.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
BSISEALIS.ASTALIN = [V]CST_AUPD
BSISEALIS.BSILIS.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = BSISEALIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSISEALIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSISEALIS._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSISEALIS.BSILIS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISEALIS.BSILIS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSISEALIS.BSILIS.ASTALIN)<>""
 [L]A_ASTALIN = BSISEALIS.BSILIS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
& and BSISEALIS.BSILIS.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSISEALIS.BSILIS.LINES(A_N2).ASTALIN<>[V]CST_ANEW & BSISEALIS.BSILIS.ASTALIN=[V]CST_ADEL
   BSISEALIS.BSILIS.LINES(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If BSISEALIS.BSILIS.LINES(A_N2).ASTALIN=[V]CST_ANEW & find(BSISEALIS.BSILIS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   BSISEALIS.BSILIS.LINES(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(BSISEALIS.BSILIS.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSISEALIS.BSILIS.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES) : # BSISEALISD -- 2
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
& and BSISEALIS.BSILIS.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(BSISEALIS.BSILIS.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSISEALIS.BSILIS.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(BSISEALIS.BSILIS.ASTALIN)<>""
 [L]A_ASTALIN = BSISEALIS.BSILIS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSISEALIS
Trbegin [F:BSILIS]
 Gosub AUPDATE_BSISEALIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSISEALIS.BSILIS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSISEALIS.BSILIS.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES)
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
  If BSISEALIS.BSILIS.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSISEALIS.BSILIS.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSISEALIS.BSILIS.LINES(A_N2)
   BSISEALIS.BSILIS.LINES(A_N2) = null
  Elsif BSISEALIS.BSILIS.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSISEALIS.BSILIS.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_BSISEALIS
[L]A_ASTALIN = BSISEALIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.BSILIS._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSISEALIS.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISEALIS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If BSISEALIS.snapshotEnabled=1
 [L]A_RETIK = BSISEALIS.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISEALIS.BSILIS.LINES)
 If BSISEALIS.BSILIS.LINES(A_N2) <> null
  If BSISEALIS.BSILIS.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   BSISEALIS.BSILIS.LINES(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet BSISEALIS.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



