#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management FCS1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:01:28"
A_USER  = "ADMIN"
A_STAMP = "20180828000128"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBAXE"
  If [M]NBAXE=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask FCS1 [FCS1]
Gosub HORODAT
Local Inpbox "FCS1" From GFONCTION At A_STAMP With A_WINDPREV Mask [FCS1] As [SIM_]
Grizo [FCS1]5
Grizo [FCS1]10
Grizo [FCS1]20
Grizo [FCS1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [FCS1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=82 : Y1(0)=1 : Y2(0)=5
X1(1)=1 : X2(1)=35 : Y1(1)=6 : Y2(1)=13
X1(3)=1 : X2(3)=35 : Y1(3)=14 : Y2(3)=28
X1(4)=36 : X2(4)=82 : Y1(4)=6 : Y2(4)=28
Return

$ON_FCSCOD
Onevent CONTROL Call C_FCSCOD(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_FCSCOD(zc) From W1FCS1
Return

Subprog AS_FCSCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(49922,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_FCSCOD(VALEUR) From SUBFCS
If mkstat=2
 [M]FCSCOD(INDIC) = VALEUR
 Affzo FCSCOD(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_FCSCOD(zc) From W1FCS1
Onkey   2 Titled GBOUTS Call S_FCSCOD(zc) From W1FCS1
Gosub _AFF
End

Subprog C_FCSCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "FCSCOD" : GZNUM = 49921 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_FCSCOD(VALEUR) From SUBFCS
 If mkstat : GERR = 1 : GZONE = "FCSCOD" : GZNUM = 49921 : Endif
Endif
Gosub _AFF
End

Subprog S_FCSCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VCRSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VCRSEL"
 PARMSK(1) = "FCS"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"VCRSEL","TRTDIV","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_FCSCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VCRTUN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VCRTUN"
 Call OBJET_CHAR(VALEUR,"FCS","") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_DESAXX
Onevent INIT_AREA Call D_DESAXX(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_DESAXX(zc) From W1FCS1
Return

Subprog IB_DESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_DESAXX(VALEUR)
Variable Char    VALEUR()
If varinit([M]DESAXX,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"FRECST","DESAXX",[M:FCS1]FCSCOD,"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_DESAXX(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_DESAXX(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_DESAXX(zc) From W1FCS1
Gosub _AFF
End

Subprog B1_DESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_DESAXX" : PROGSUB = "SUBFCS" : PROGSPE = "SPEFCS" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "FRECST"
 PARMSK(2) = "DESAXX"
 PARMSK(3) = [M:FCS1]FCSCOD
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_DESAXX" : PROGSUB = "SUBFCS" : PROGSPE = "SPEFCS" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ENAFLG
Onevent CONTROL Call C_ENAFLG(zc) From W1FCS1
Onevent INIT_AREA Call D_ENAFLG(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_ENAFLG(zc) From W1FCS1
Return

Subprog D_ENAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ENAFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ENAFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ENAFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ENAFLG(VALEUR) From SUBFCS
If mkstat : GERR = 1 : GZONE = "ENAFLG" : GZNUM = 188 : Endif
Gosub _AFF
End

$ON_FCSNAT
Onevent INIT_AREA Call D_FCSNAT(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_FCSNAT(zc) From W1FCS1
Onevent CONTROL Call C_FCSNAT(zc) From W1FCS1
Return

Subprog D_FCSNAT(VALEUR)
Variable Integer VALEUR
If varinit([M]FCSNAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FCSNAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_FCSNAT(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FCSNAT" : GZNUM = 48553 : Endif
Gosub _AFF
End

$ON_DIRFLG
Onevent INIT_AREA Call D_DIRFLG(zc) From W1FCS1
Return

Subprog D_DIRFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DIRFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

$ON_INVFLG
Onevent INIT_AREA Call D_INVFLG(zc) From W1FCS1
Return

Subprog D_INVFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]INVFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DOCCHGTYP
Onevent AFTER_CHANGE Gosub AMM_DOCCHGTYP From W1FCS1
Onevent INIT_AREA Call D_DOCCHGTYP(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_DOCCHGTYP(zc) From W1FCS1
Return

Subprog D_DOCCHGTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DOCCHGTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DOCCHGTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_DOCCHGTYP
Call AM_DOCCHGTYP(zc)
If !mkstat & GOBJET
 zoncou = "DOCCHGTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DOCCHGTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DOCCHGTYP(VALEUR) From SUBFCS
If mkstat : GERR = 1 : GZONE = "DOCCHGTYP" : GZNUM = 40371 : Endif
Gosub _AFF
End

$ON_CHGTYP
Onevent INIT_AREA Call D_CHGTYP(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_CHGTYP(zc) From W1FCS1
Return

Subprog D_CHGTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CHGTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CHGTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ACCCOD
Onevent CONTROL Call C_ACCCOD(zc) From W1FCS1
Onevent INIT_AREA Call D_ACCCOD(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_ACCCOD(zc) From W1FCS1
Onevent AFTER_CHANGE Gosub AMM_ACCCOD From W1FCS1
Return

Subprog D_ACCCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]ACCCOD,indice)=0
 ## Action INITACCCOD
 Call INITACCCOD(VALEUR,25) From TRTX3
Endif
Gosub _AFF
End

Subprog AS_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3946,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ACCCOD(zc) From W1FCS1
Onkey   2 Titled GBOUTS Call S_ACCCOD(zc) From W1FCS1
Onkey 144 Titled GBOUTP Call P_ACCCOD(zc) From W1FCS1
Onkey 146 Titled GBOUTA Call SA_ACCCOD(zc) From W1FCS1
Gosub _AFF
End

Subprog C_ACCCOD(VALEUR)
Variable Char    VALEUR()
## Action CONTCAC
Call CONTCAC(VALEUR,"25") From SUBCAC
If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CAC","!",VALEUR,"25",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
Endif
Gosub _AFF
End

$AMM_ACCCOD
Call AM_ACCCOD(zc)
If !mkstat & GOBJET
 zoncou = "ACCCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZACCCOD)")>indice
 [M]ACCCOD(indice) = VALEUR
 Affzo ZACCCOD(indice)
Endif
Gosub _AFF
End

Subprog S_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELCAC
 Call SELCAC(VALEUR,"25") From SUBCAC
Endif
Gosub _AFF
End

Subprog B1_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNCAC
 Call TUNCAC(VALEUR,"25") From SUBCAC
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CAC"
PARMSK(2) = "25"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "25"
Call VISU("CAC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZACCCOD
Onevent BEFORE_AREA Gosub AV_ZACCCOD From W1FCS1
Return

$AV_ZACCCOD
Call LECTEXTRA(zc,"GACCCODE","DESTRA","25",num$([M]ACCCOD(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_DIRCLCMOD
Onevent AFTER_CHANGE Gosub AMM_DIRCLCMOD From W1FCS1
Onevent INIT_AREA Call D_DIRCLCMOD(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_DIRCLCMOD(zc) From W1FCS1
Return

Subprog D_DIRCLCMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]DIRCLCMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DIRCLCMOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_DIRCLCMOD
Call AM_DIRCLCMOD(zc)
If !mkstat & GOBJET
 zoncou = "DIRCLCMOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DIRCLCMOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DIRCLCMOD(VALEUR) From SUBFCS
If mkstat : GERR = 1 : GZONE = "DIRCLCMOD" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_HGHBKT
Onevent INIT_AREA Call D_HGHBKT(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_HGHBKT(zc) From W1FCS1
Return

Subprog D_HGHBKT(VALEUR)
Variable Integer VALEUR
If varinit([M]HGHBKT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_HGHBKT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LIMTYP
Onevent INIT_AREA Call D_LIMTYP(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_LIMTYP(zc) From W1FCS1
Return

Subprog D_LIMTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]LIMTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIMTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NODIRBRD
Onevent INIT_AREA Call D_NODIRBRD(zc) From W1FCS1
Return

Subprog D_NODIRBRD(VALEUR)
Variable Integer VALEUR
If varinit([M]NODIRBRD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STKVLT
Onevent INIT_AREA Call D_STKVLT(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_STKVLT(zc) From W1FCS1
Return

Subprog D_STKVLT(VALEUR)
Variable Integer VALEUR
If varinit([M]STKVLT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_STKVLT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DIE
Return

$ON_ZDIE
Onevent BEFORE_AREA Gosub AV_ZDIE From W1FCS1
Return

$AV_ZDIE
Call LECTEXTRA(zc,"GDIE","SHOTRA",num$([M]DIE(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_CCE
Onevent BEFORE_AREA Gosub AV_CCE From W1FCS1
Onevent CONTROL Call C_CCE(zc) From W1FCS1
Onevent BEFORE_INPUT Call AS_CCE(zc) From W1FCS1
Onevent AFTER_CHANGE Gosub AMM_CCE From W1FCS1
Return

$AV_CCE
## Action INICCEFMT
Call INICCEFMT(num$([M]DIE(nolign-1))) From SETGLBDIE
If GCCEFMT<>""
 Chgfmt [M]CCE(indice) With "K:"+GCCEFMT
Else
 Chgfmt [M]CCE(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_CCE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3531,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CCE(zc) From W1FCS1
Onkey   2 Titled GBOUTS Call S_CCE(zc) From W1FCS1
Onkey 144 Titled GBOUTP Call P_CCE(zc) From W1FCS1
Onkey 146 Titled GBOUTA Call SA_CCE(zc) From W1FCS1
Gosub _AFF
End

Subprog C_CCE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CCECHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CCECHOICE"
 PARMSK(1) = num$([M]DIE(nolign-1))
 Call S_TAB_CHAR(VALEUR,PARMSK,"CCECHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CCE" : GZNUM = 3997 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CCE","!",VALEUR,num$([M]DIE(nolign-1)),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CCE" : GZNUM = 3997 : Endif
 If !mkstat
  ## Action CNTCCE
  Call SECTION(VALEUR,1,"",[0/0/0],[M]DIE(nolign-1)) From SUPCPT
  If mkstat : GERR = 1 : GZONE = "CCE" : GZNUM = 3997 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CCE
Call AM_CCE(zc)
If !mkstat & GOBJET
 zoncou = "CCE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CCE(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCCE)")>indice
 [M]CCE(indice) = VALEUR
 Affzo ZCCE(indice)
Endif
Gosub _AFF
End

Subprog S_CCE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CCE"
PARMSK(2) = "!"
PARMSK(3) = num$([M]DIE(nolign-1))
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CCE(VALEUR)
Variable Char    VALEUR()
Call OBJET("CCE",VALEUR,num$([M]DIE(nolign-1))) From GOBJET
Gosub _AFF
End

Subprog SA_CCE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CCE"
PARMSK(2) = num$([M]DIE(nolign-1))
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CCE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$([M]DIE(nolign-1))
Call VISU("CCE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCCE
Onevent BEFORE_AREA Gosub AV_ZCCE From W1FCS1
Return

$AV_ZCCE
Call LECTEXTRA(zc,"CACCE","DESTRA",num$([M]DIE(nolign-1)),num$([M]CCE(indice))) From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Return


