#<AdxTL>@(#)0.0.0.0 $Revision$Class BP number definition
# Supervisor
## CRUD-CLASSE ## BSIBPRNUM
# 2018-08-27 13:07:24 177


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BSIBPRNUM,ASTATUS)
Variable Instance BSIBPRNUM Using R_BSIBPRNUM
Variable Integer ASTATUS

If BSIBPRNUM = null : End : Endif

Gosub AVARIABLES From WMR00BSIBPRNUM
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BSIBPRNUM
Else
 Gosub AINSERT_BSIBPRNUM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = BSIBPRNUM.freeSnapshot
BSIBPRNUM.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
BSIBPRNUM.ASTALIN = [V]CST_ANEW
BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIBPRNUM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIBPRNUM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIBPRNUM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSIBPRNUM.BSIBPN.LINES) : # BSIBPRNUMD -- 2
 If BSIBPRNUM.BSIBPN.LINES(A_N2) <> null
& and !find(BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.LINES(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(BSIBPRNUM.BSIBPN.LINES) : # BSIBPRNUMD -- 2
 If BSIBPRNUM.BSIBPN.LINES(A_N2) <> null
& and !find(BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.LINES(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BSIBPRNUM
Trbegin [F:BSIBPN]
 Gosub AINSERT_BSIBPRNUM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BSIBPRNUM.BSIBPN.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIBPRNUM.BSIBPN.LINES)
 If BSIBPRNUM.BSIBPN.LINES(A_N2) <> null
  If BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSIBPRNUM.BSIBPN.LINES(A_N2)
   BSIBPRNUM.BSIBPN.LINES(A_N2) = null
  Elsif BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_BSIBPRNUM
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If BSIBPRNUM.snapshotEnabled=1
 [L]A_RETIK = BSIBPRNUM.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIBPRNUM.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



