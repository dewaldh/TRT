#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CRITGRHPI 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:58:31"
A_USER  = "ADMIN"
A_STAMP = "20180827235831"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CRITGRHPI [CGPI]
Gosub HORODAT
Local Inpbox "CRITGRHPI" From GFONCTION At A_STAMP With A_WINDPREV Mask [CGPI] As [SIM_]
Grizo [CGPI]5
Grizo [CGPI]10
Grizo [CGPI]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [CGPI]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=22 : X2(0)=91 : Y1(0)=7 : Y2(0)=12
X1(1)=22 : X2(1)=91 : Y1(1)=13 : Y2(1)=17
X1(2)=22 : X2(2)=91 : Y1(2)=18 : Y2(2)=22
Return

$ON_MEMO
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1CRITGRHPI
Onevent BEFORE_AREA Gosub AV_CPY From W1CRITGRHPI
Onevent AFTER_CHANGE Gosub AMM_CPY From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1CRITGRHPI
Return

$AV_CPY
## Action STD
Call AV_CPY(zc) From CNSCPISTD
Gosub _AFF
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3529,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CPY(zc) From W1CRITGRHPI
Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1CRITGRHPI
Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1CRITGRHPI
Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action ACONTCPY
Call CONTSOC(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CPY","!A",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action STD
  Call C_CPY(VALEUR) From CNSCPISTD
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPY
Call AM_CPY(zc)
If !mkstat & GOBJET
 zoncou = "CPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CPY(VALEUR) From CNSCPISTD
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZCPY)")>indice
 [M]CPY(indice) = VALEUR
 Affzo ZCPY(indice)
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = "!A"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPY(VALEUR)
Variable Char    VALEUR()
Call OBJET("CPY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1CRITGRHPI
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYSHO
Gosub _AFF
Return

$ON_CUR
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1CRITGRHPI
Onevent AFTER_CHANGE Gosub AMM_FCY From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1CRITGRHPI
Return

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1CRITGRHPI
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1CRITGRHPI
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1CRITGRHPI
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action STD
  Call C_FCY(VALEUR) From CNSCPISTD
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From CNSCPISTD
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1CRITGRHPI
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_BPR
Onevent CONTROL Call C_BPR(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_BPR(zc) From W1CRITGRHPI
Onevent AFTER_CHANGE Gosub AMM_BPR From W1CRITGRHPI
Return

Subprog AS_BPR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1515,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPR(zc) From W1CRITGRHPI
Onkey   2 Titled GBOUTS Call S_BPR(zc) From W1CRITGRHPI
Onkey 144 Titled GBOUTP Call P_BPR(zc) From W1CRITGRHPI
Onkey 146 Titled GBOUTA Call SA_BPR(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_BPR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BPSCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BPSCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"BPSCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "BPR" : GZNUM = 19569 : Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("BPS","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BPR" : GZNUM = 19569 : Endif
Endif
Gosub _AFF
End

$AMM_BPR
Call AM_BPR(zc)
If !mkstat & GOBJET
 zoncou = "BPR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPR(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZBPR)")>indice
 [M]BPR(indice) = VALEUR
 Affzo ZBPR(indice)
Endif
Gosub _AFF
End

Subprog S_BPR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "BPS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BPR(VALEUR)
Variable Char    VALEUR()
Call OBJET("BPS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BPR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BPS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BPR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BPS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBPR
Onevent BEFORE_AREA Gosub AV_ZBPR From W1CRITGRHPI
Return

$AV_ZBPR
If clalev([F:BPS])=0 : Local File BPSUPPLIER [BPS] : Endif
Call LECTURE("BPS",num$([M]BPR(indice)),"") From CONTOBJ
zc = [F:BPS]BPSNAM
Gosub _AFF
Return

$ON_NUMDEB
Onevent CONTROL Call C_NUMDEB(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_NUMDEB(zc) From W1CRITGRHPI
Return

Subprog AS_NUMDEB(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_NUMDEB(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_NUMDEB(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "NUMDEB" : GZNUM = 51224 : Endif
Endif
Gosub _AFF
End

Subprog S_NUMDEB(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJ1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJ1"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AS_NUMDEB" : PROGSUB = "CNSCPISTD" : PROGSPE = "CNSCPISPE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "PIH"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 ACTION = "BS_NUMDEB" : PROGSUB = "CNSCPISTD" : PROGSPE = "CNSCPISPE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_NUMFIN
Onevent CONTROL Call C_NUMFIN(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_NUMFIN(zc) From W1CRITGRHPI
Return

Subprog AS_NUMFIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_NUMFIN(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_NUMFIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "NUMFIN" : GZNUM = 51225 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_NUMFIN(VALEUR) From CNSCPISTD
 If mkstat : GERR = 1 : GZONE = "NUMFIN" : GZNUM = 51225 : Endif
Endif
Gosub _AFF
End

Subprog S_NUMFIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJ1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJ1"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AS_NUMFIN" : PROGSUB = "CNSCPISTD" : PROGSPE = "CNSCPISPE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "PIH"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 ACTION = "BS_NUMFIN" : PROGSUB = "CNSCPISTD" : PROGSPE = "CNSCPISPE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_PIHTYP1
Onevent INIT_AREA Call D_PIHTYP1(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_PIHTYP1(zc) From W1CRITGRHPI
Return

Subprog D_PIHTYP1(VALEUR)
Variable Integer VALEUR
If varinit([M]PIHTYP1,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PIHTYP1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PIHTYP3
Onevent INIT_AREA Call D_PIHTYP3(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_PIHTYP3(zc) From W1CRITGRHPI
Return

Subprog D_PIHTYP3(VALEUR)
Variable Integer VALEUR
If varinit([M]PIHTYP3,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PIHTYP3(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STAO
Onevent INIT_AREA Call D_STAO(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_STAO(zc) From W1CRITGRHPI
Return

Subprog D_STAO(VALEUR)
Variable Integer VALEUR
If varinit([M]STAO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_STAO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MODA
Onevent INIT_AREA Call D_MODA(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_MODA(zc) From W1CRITGRHPI
Return

Subprog D_MODA(VALEUR)
Variable Integer VALEUR
If varinit([M]MODA,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MODA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BAPO
Onevent INIT_AREA Call D_BAPO(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_BAPO(zc) From W1CRITGRHPI
Return

Subprog D_BAPO(VALEUR)
Variable Integer VALEUR
If varinit([M]BAPO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_BAPO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PIHTYP2
Onevent INIT_AREA Call D_PIHTYP2(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_PIHTYP2(zc) From W1CRITGRHPI
Return

Subprog D_PIHTYP2(VALEUR)
Variable Integer VALEUR
If varinit([M]PIHTYP2,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PIHTYP2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PIHTYP4
Onevent INIT_AREA Call D_PIHTYP4(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_PIHTYP4(zc) From W1CRITGRHPI
Return

Subprog D_PIHTYP4(VALEUR)
Variable Integer VALEUR
If varinit([M]PIHTYP4,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PIHTYP4(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STAN
Onevent INIT_AREA Call D_STAN(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_STAN(zc) From W1CRITGRHPI
Return

Subprog D_STAN(VALEUR)
Variable Integer VALEUR
If varinit([M]STAN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STAN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MODT
Onevent INIT_AREA Call D_MODT(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_MODT(zc) From W1CRITGRHPI
Return

Subprog D_MODT(VALEUR)
Variable Integer VALEUR
If varinit([M]MODT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BAPN
Onevent INIT_AREA Call D_BAPN(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_BAPN(zc) From W1CRITGRHPI
Return

Subprog D_BAPN(VALEUR)
Variable Integer VALEUR
If varinit([M]BAPN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_BAPN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PERCOD
Onevent BEFORE_INPUT Call AS_PERCOD(zc) From W1CRITGRHPI
Onevent AFTER_CHANGE Gosub AMM_PERCOD From W1CRITGRHPI
Onevent INIT_AREA Call D_PERCOD(zc) From W1CRITGRHPI
Onevent CONTROL Call C_PERCOD(zc) From W1CRITGRHPI
Return

Subprog D_PERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2231) From COMBOS
## Action STD
Call AS_PERCOD(VALEUR) From CNSCPISTD
If mkstat=2
 [M]PERCOD(INDIC) = VALEUR
 Affzo PERCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2231,1))))
Endif
If !mkstat
 Discombo 0 From PERCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PERCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PERCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PERCOD" : GZNUM = 1355 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_PERCOD
Call AM_PERCOD(zc)
If !mkstat & GOBJET
 zoncou = "PERCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PERCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_PERCOD(VALEUR) From CNSCPISTD
If mkstat : GERR = 1 : GZONE = "PERCOD" : GZNUM = 1355 : Endif
Gosub _AFF
End

$ON_BPRDATDEB
Onevent BEFORE_AREA Gosub AV_BPRDATDEB From W1CRITGRHPI
Onevent AFTER_CHANGE Gosub AMM_BPRDATDEB From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_BPRDATDEB(zc) From W1CRITGRHPI
Onevent CONTROL Call C_BPRDATDEB(zc) From W1CRITGRHPI
Return

$AV_BPRDATDEB
## Action ADATRELI
Call INIDAT(zc,[M]BPRDATDEBF) From ADATREL
Chgfmt [M]BPRDATDEB(indice) With "Dz:"+GFMDAT
Gosub _AFF
Return

Subprog AS_BPRDATDEB(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPRDATDEB(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_BPRDATDEB(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BPRDATDEB" : GZNUM = 1805 : Endif
Gosub _AFF
End

$AMM_BPRDATDEB
Call AM_BPRDATDEB(zc)
If !mkstat & GOBJET
 zoncou = "BPRDATDEB" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPRDATDEB(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]BPRDATDEBF) From ADATREL
If mkstat : GERR = 1 : GZONE = "BPRDATDEB" : GZNUM = 1805 : Endif
If !mkstat
 ## Action STD
 Call AM_BPRDATDEB(VALEUR) From CNSCPISTD
 If mkstat : GERR = 1 : GZONE = "BPRDATDEB" : GZNUM = 1805 : Endif
Endif
Gosub _AFF
End

Subprog B1_BPRDATDEB(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]BPRDATDEBF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]BPRDATDEBF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PERNBR
Onevent AFTER_CHANGE Gosub AMM_PERNBR From W1CRITGRHPI
Onevent CONTROL Call C_PERNBR(zc) From W1CRITGRHPI
Return

Subprog C_PERNBR(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PERNBR" : GZNUM = 30755 : Endif
Gosub _AFF
End

$AMM_PERNBR
Call AM_PERNBR(zc)
If !mkstat & GOBJET
 zoncou = "PERNBR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PERNBR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PERNBR(VALEUR) From CNSCPISTD
If mkstat : GERR = 1 : GZONE = "PERNBR" : GZNUM = 30755 : Endif
Gosub _AFF
End

$ON_BPRDATFIN
Onevent BEFORE_AREA Gosub AV_BPRDATFIN From W1CRITGRHPI
Onevent AFTER_CHANGE Gosub AMM_BPRDATFIN From W1CRITGRHPI
Onevent CONTROL Call C_BPRDATFIN(zc) From W1CRITGRHPI
Onevent BEFORE_INPUT Call AS_BPRDATFIN(zc) From W1CRITGRHPI
Return

$AV_BPRDATFIN
## Action ADATRELI
Call INIDAT(zc,[M]BPRDATFINF) From ADATREL
Chgfmt [M]BPRDATFIN(indice) With "Dz:"+GFMDAT
Gosub _AFF
Return

Subprog AS_BPRDATFIN(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPRDATFIN(zc) From W1CRITGRHPI
Gosub _AFF
End

Subprog C_BPRDATFIN(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BPRDATFIN" : GZNUM = 1806 : Endif
If !mkstat
 ## Action DATDEBFIN
 Call DATDEBFIN(VALEUR,[M:CGPI]BPRDATDEB) From EXEFNC
 If mkstat : GERR = 1 : GZONE = "BPRDATFIN" : GZNUM = 1806 : Endif
Endif
Gosub _AFF
End

$AMM_BPRDATFIN
Call AM_BPRDATFIN(zc)
If !mkstat & GOBJET
 zoncou = "BPRDATFIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPRDATFIN(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]BPRDATFINF) From ADATREL
If mkstat : GERR = 1 : GZONE = "BPRDATFIN" : GZNUM = 1806 : Endif
If !mkstat
 ## Action STD
 Call AM_BPRDATFIN(VALEUR) From CNSCPISTD
 If mkstat : GERR = 1 : GZONE = "BPRDATFIN" : GZNUM = 1806 : Endif
Endif
Gosub _AFF
End

Subprog B1_BPRDATFIN(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]BPRDATFINF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]BPRDATFINF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ECRAN
Return

$ON_TRI
Onevent INIT_AREA Call D_TRI(zc) From W1CRITGRHPI
Return

Subprog D_TRI(VALEUR)
Variable Integer VALEUR
If varinit([M]TRI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


