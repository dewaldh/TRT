#<AdxTL>@(#)0.0.0.0 $Revision$Class Land purchase
# Sage X3 supervisor
## CRUD-CLASSE ## YLNDPUR
# 2018-08-24 03:41:32 866


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YLNDPUR [YLDP_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YLNDPUR") From ASYRCOM : Endif
Local Instance YLNDPUR Using C_YLNDPUR

If !SILENCE : Call TRACE("3 --> New Instance C_YLNDPUR") From ASYRCOM : Endif
YLNDPUR = NewInstance C_YLNDPUR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YLDP_]YLDP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YLNDPUR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.AREAD([YLDP_]YLNDPURID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YLNDPUR.YLNDPURID ="-num$(YLNDPUR.YLNDPURID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YLNDPUR.AKEYS)
  Call TRACE("-"-num$(I)-":"-YLNDPUR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YLDP_]
FreeGroup YLNDPUR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YLNDPUR,ACLE,ASTATUS,_ETAG)
Variable Instance YLNDPUR Using C_YLNDPUR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YLNDPURID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YLNDPURID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YLNDPUR [YLDP]
Default File [F:YLDP]
Read [F:YLDP]YLDP0 = [L]_YLNDPURID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YLDP]UPDTICK)>0
 [L]_ETAG = num$([F:YLDP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YLNDPUR,ACLE,ASTATUS)
Variable Instance YLNDPUR Using C_YLNDPUR
Value Char ACLE
Variable Integer ASTATUS
Local Char _YLNDPURID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YLNDPURID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.AREAD([L]_YLNDPURID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YLNDPUR,_YLNDPURID,ASTATUS)
Variable Instance YLNDPUR Using C_YLNDPUR
Value Char _YLNDPURID
Variable Integer ASTATUS

If YLNDPUR = null : End : Endif

Gosub AVARIABLES From WMC00YLNDPUR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YLNDPUR.APARENT=null
 [L]A_I = YLNDPUR.freeSnapshot
 YLNDPUR.snapshotEnabled = 0
 YLNDPUR.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YLNDPUR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YLNDPUR.APARENT=null
 YLNDPUR.snapshotEnabled = 1
 YLNDPUR.setAccessorEnabled = 1
Endif
LogicClose File [YLDP]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR._ACTION_PARAM("AREAD_BEFORE",[L]_YLNDPURID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YLDP]
Read [F:YLDP]YLDP0 = [L]_YLNDPURID
If fstat
[L]A_ERROR = [L]_YLNDPURID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YLNDPUR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YLDP]AUUID)>0 & [F:YLDP]AUUID=NullUuid
 [F:YLDP]AUUID = getUuid
Endif
SetInstance YLNDPUR With [F:YLDP]
YLNDPUR.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



