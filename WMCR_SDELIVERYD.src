#<AdxTL>@(#)0.0.0.0 $Revision$Class Delivery detail
# Supervisor
## CRUD-CLASSE ## SDELIVERYD
# 2018-08-27 12:44:43 720


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SDELIVERYD [SDD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SDELIVERYD") From ASYRCOM : Endif
Local Instance SDELIVERYD Using C_SDELIVERYD

If !SILENCE : Call TRACE("3 --> New Instance C_SDELIVERYD") From ASYRCOM : Endif
SDELIVERYD = NewInstance C_SDELIVERYD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SDD_]SDD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SDELIVERYD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.AREAD([SDD_]SDHNUM,[SDD_]SDDLIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SDELIVERYD.SDHNUM ="-num$(SDELIVERYD.SDHNUM)) From ASYRCOM
 Call TRACE("SDELIVERYD.SDDLIN ="-num$(SDELIVERYD.SDDLIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SDELIVERYD.AKEYS)
  Call TRACE("-"-num$(I)-":"-SDELIVERYD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SDD_]
FreeGroup SDELIVERYD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SDELIVERYD,ACLE,ASTATUS,_ETAG)
Variable Instance SDELIVERYD Using C_SDELIVERYD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SDHNUM(20)
Local Integer _SDDLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SDHNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_SDDLIN = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File SDELIVERYD [SDD]
Default File [F:SDD]
Read [F:SDD]SDD0 = [L]_SDHNUM;[L]_SDDLIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SDD]UPDTICK)>0
 [L]_ETAG = num$([F:SDD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SDELIVERYD,ACLE,ASTATUS)
Variable Instance SDELIVERYD Using C_SDELIVERYD
Value Char ACLE
Variable Integer ASTATUS
Local Char _SDHNUM(20)
Local Integer _SDDLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SDHNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_SDDLIN = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.AREAD([L]_SDHNUM,[L]_SDDLIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SDELIVERYD,_SDHNUM,_SDDLIN,ASTATUS)
Variable Instance SDELIVERYD Using C_SDELIVERYD
Value Char _SDHNUM
Value Integer _SDDLIN
Variable Integer ASTATUS

If SDELIVERYD = null : End : Endif

Gosub AVARIABLES From WMC00SDELIVERYD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SDELIVERYD.APARENT=null
 [L]A_I = SDELIVERYD.freeSnapshot
 SDELIVERYD.snapshotEnabled = 0
 SDELIVERYD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SDELIVERYD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SDELIVERYD.APARENT=null
 SDELIVERYD.snapshotEnabled = 1
 SDELIVERYD.setAccessorEnabled = 1
Endif
LogicClose File [SDD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD._ACTION_PARAM("AREAD_BEFORE",[L]_SDHNUM,[L]_SDDLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD._ACTION_PARAM("AREAD",[L]_SDHNUM,[L]_SDDLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
SDELIVERYD.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 9
 [L]A_NEWCOL += 1
 SDELIVERYD.C_DDTANUM(A_NEWCOL) = NewInstance  C_SDELIVERYD_C_DDTANUM(SDELIVERYD.ACTX,NullUuid,[L]A_I,SDELIVERYD,"C_DDTANUM") AllocGroup SDELIVERYD
 SDELIVERYD.C_DDTANUM(A_NEWCOL).DDTANUM = [F:SDD]DDTANUM([L]A_I-1)
 SDELIVERYD.C_DDTANUM(A_NEWCOL).DDTANOT = [F:SDD]DDTANOT([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.C_DDTANUM(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 5
 [L]A_NEWCOL += 1
 SDELIVERYD.C_TSICOD(A_NEWCOL) = NewInstance  C_SDELIVERYD_C_TSICOD(SDELIVERYD.ACTX,NullUuid,[L]A_I,SDELIVERYD,"C_TSICOD") AllocGroup SDELIVERYD
 SDELIVERYD.C_TSICOD(A_NEWCOL).TSICOD = [F:SDD]TSICOD([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.C_TSICOD(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:SDD]VACITM([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  SDELIVERYD.C_VACITM(A_NEWCOL) = NewInstance  C_SDELIVERYD_C_VACITM(SDELIVERYD.ACTX,NullUuid,[L]A_I,SDELIVERYD,"C_VACITM") AllocGroup SDELIVERYD
  SDELIVERYD.C_VACITM(A_NEWCOL).VACITM = [F:SDD]VACITM([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.C_VACITM(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:SDD]VAT([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  SDELIVERYD.C_VAT(A_NEWCOL) = NewInstance  C_SDELIVERYD_C_VAT(SDELIVERYD.ACTX,NullUuid,[L]A_I,SDELIVERYD,"C_VAT") AllocGroup SDELIVERYD
  SDELIVERYD.C_VAT(A_NEWCOL).VAT = [F:SDD]VAT([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.C_VAT(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet SDELIVERYD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



