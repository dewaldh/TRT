#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PRT1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:09:14"
A_USER  = "ADMIN"
A_STAMP = "20180828000914"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PRT1 [PRT1]
Gosub HORODAT
Local Inpbox "PRT1" From GFONCTION At A_STAMP With A_WINDPREV Mask [PRT1] As [SIM_]
Grizo [PRT1]5
Grizo [PRT1]10
Grizo [PRT1]15
Grizo [PRT1]20
Grizo [PRT1]25
Grizo [PRT1]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PRT1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=42 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=42 : Y1(1)=3 : Y2(1)=8
X1(2)=1 : X2(2)=42 : Y1(2)=9 : Y2(2)=17
X1(3)=43 : X2(3)=91 : Y1(3)=1 : Y2(3)=8
X1(4)=43 : X2(4)=91 : Y1(4)=9 : Y2(4)=17
X1(5)=43 : X2(5)=91 : Y1(5)=18 : Y2(5)=25
Return

$ON_FLGLOCDES
Onevent INIT_AREA Call D_FLGLOCDES(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_FLGLOCDES(zc) From W1PRT1
Return

Subprog D_FLGLOCDES(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGLOCDES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGLOCDES(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORINUMCOD
Onevent INIT_AREA Call D_ORINUMCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_ORINUMCOD(zc) From W1PRT1
Return

Subprog D_ORINUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ORINUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORINUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORINUMSCR
Onevent INIT_AREA Call D_ORINUMSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_ORINUMSCR(zc) From W1PRT1
Return

Subprog D_ORINUMSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ORINUMSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORINUMSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMDES1COD
Onevent INIT_AREA Call D_ITMDES1COD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_ITMDES1COD(zc) From W1PRT1
Return

Subprog D_ITMDES1COD(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDES1COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDES1COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMDES1SCR
Onevent INIT_AREA Call D_ITMDES1SCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_ITMDES1SCR(zc) From W1PRT1
Return

Subprog D_ITMDES1SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDES1SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDES1SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REOLOCCOD
Onevent INIT_AREA Call D_REOLOCCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_REOLOCCOD(zc) From W1PRT1
Return

Subprog D_REOLOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]REOLOCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REOLOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REOLOCSCR
Onevent INIT_AREA Call D_REOLOCSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_REOLOCSCR(zc) From W1PRT1
Return

Subprog D_REOLOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]REOLOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REOLOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LINTYPCOD
Onevent INIT_AREA Call D_LINTYPCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_LINTYPCOD(zc) From W1PRT1
Return

Subprog D_LINTYPCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LINTYPCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LINTYPCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LINTYPSCR
Onevent INIT_AREA Call D_LINTYPSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_LINTYPSCR(zc) From W1PRT1
Return

Subprog D_LINTYPSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LINTYPSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LINTYPSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCKCOD
Onevent INIT_AREA Call D_PCKCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_PCKCOD(zc) From W1PRT1
Return

Subprog D_PCKCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PCKCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PCKCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCKSCR
Onevent INIT_AREA Call D_PCKSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_PCKSCR(zc) From W1PRT1
Return

Subprog D_PCKSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]PCKSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PCKSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTCOD
Onevent AFTER_CHANGE Gosub AMM_LOTCOD From W1PRT1
Onevent INIT_AREA Call D_LOTCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1PRT1
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_LOTCOD
Call AM_LOTCOD(zc)
If !mkstat & GOBJET
 zoncou = "LOTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LOTCOD(VALEUR) From SUBPRT
If mkstat : GERR = 1 : GZONE = "LOTCOD" : GZNUM = 2721 : Endif
Gosub _AFF
End

$ON_LOTSCR
Onevent INIT_AREA Call D_LOTSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_LOTSCR(zc) From W1PRT1
Return

Subprog D_LOTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOCOD
Onevent INIT_AREA Call D_SLOCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_SLOCOD(zc) From W1PRT1
Return

Subprog D_SLOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOSCR
Onevent INIT_AREA Call D_SLOSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_SLOSCR(zc) From W1PRT1
Return

Subprog D_SLOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERCOD
Onevent INIT_AREA Call D_SERCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_SERCOD(zc) From W1PRT1
Return

Subprog D_SERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERSCR
Onevent INIT_AREA Call D_SERSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_SERSCR(zc) From W1PRT1
Return

Subprog D_SERSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERECOD
Onevent INIT_AREA Call D_SERECOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_SERECOD(zc) From W1PRT1
Return

Subprog D_SERECOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERECOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERECOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERESCR
Onevent INIT_AREA Call D_SERESCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_SERESCR(zc) From W1PRT1
Return

Subprog D_SERESCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERESCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERESCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCOD
Onevent INIT_AREA Call D_LOCCOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_LOCCOD(zc) From W1PRT1
Return

Subprog D_LOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCSCR
Onevent INIT_AREA Call D_LOCSCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_LOCSCR(zc) From W1PRT1
Return

Subprog D_LOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STACOD
Onevent INIT_AREA Call D_STACOD(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_STACOD(zc) From W1PRT1
Return

Subprog D_STACOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STACOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STACOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STASCR
Onevent INIT_AREA Call D_STASCR(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_STASCR(zc) From W1PRT1
Return

Subprog D_STASCR(VALEUR)
Variable Integer VALEUR
If varinit([M]STASCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STASCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD1
Onevent INIT_AREA Call D_IDECOD1(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_IDECOD1(zc) From W1PRT1
Return

Subprog D_IDECOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDESCR1
Onevent INIT_AREA Call D_IDESCR1(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_IDESCR1(zc) From W1PRT1
Return

Subprog D_IDESCR1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD2
Onevent INIT_AREA Call D_IDECOD2(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_IDECOD2(zc) From W1PRT1
Return

Subprog D_IDECOD2(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDESCR2
Onevent INIT_AREA Call D_IDESCR2(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_IDESCR2(zc) From W1PRT1
Return

Subprog D_IDESCR2(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DOCNAM
Onevent BEFORE_INPUT Call AS_DOCNAM(zc) From W1PRT1
Onevent CONTROL Call C_DOCNAM(zc) From W1PRT1
Onevent AFTER_CHANGE Gosub AMM_DOCNAM From W1PRT1
Return

Subprog AS_DOCNAM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(11937,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DOCNAM(zc) From W1PRT1
Onkey   2 Titled GBOUTS Call S_DOCNAM(zc) From W1PRT1
Onkey 144 Titled GBOUTP Call P_DOCNAM(zc) From W1PRT1
Onkey 146 Titled GBOUTA Call SA_DOCNAM(zc) From W1PRT1
Gosub _AFF
End

Subprog C_DOCNAM(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ARP","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "DOCNAM" : GZNUM = 5169 : Endif
Gosub _AFF
End

$AMM_DOCNAM
Call AM_DOCNAM(zc)
If !mkstat & GOBJET
 zoncou = "DOCNAM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DOCNAM(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZDOCNAM)")>indice
 [M]DOCNAM(indice) = VALEUR
 Affzo ZDOCNAM(indice)
Endif
Gosub _AFF
End

Subprog S_DOCNAM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJ1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJ1"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AS_DOCNAM" : PROGSUB = "SUBPRT" : PROGSPE = "SPEPRT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "ARP"
 PARMSK(2) = "ALK"
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 ACTION = "BS_DOCNAM" : PROGSUB = "SUBPRT" : PROGSPE = "SPEPRT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_DOCNAM(VALEUR)
Variable Char    VALEUR()
Call OBJET("ARP",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_DOCNAM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ARP"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_DOCNAM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ARP",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZDOCNAM
Onevent BEFORE_AREA Gosub AV_ZDOCNAM From W1PRT1
Return

$AV_ZDOCNAM
If clalev([F:ARP])=0 : Local File AREPORT [ARP] : Endif
Call LECTURE("ARP",[M]DOCNAM(indice),"") From CONTOBJ
Call TEXTE([F:ARP]RPTDES,zc) From OBJDIV
Gosub _AFF
Return

$ON_DOCFLG
Onevent INIT_AREA Call D_DOCFLG(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_DOCFLG(zc) From W1PRT1
Return

Subprog D_DOCFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DOCFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DOCFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PKGTYP
Onevent AFTER_CHANGE Gosub AMM_PKGTYP From W1PRT1
Onevent INIT_AREA Call D_PKGTYP(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_PKGTYP(zc) From W1PRT1
Onevent CONTROL Call C_PKGTYP(zc) From W1PRT1
Return

Subprog D_PKGTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PKGTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PKGTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_PKGTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PKGTYP" : GZNUM = 29733 : Endif
Gosub _AFF
End

$AMM_PKGTYP
Call AM_PKGTYP(zc)
If !mkstat & GOBJET
 zoncou = "PKGTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PKGTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_PKGTYP(VALEUR) From SUBPRT
If mkstat : GERR = 1 : GZONE = "PKGTYP" : GZNUM = 29733 : Endif
Gosub _AFF
End

$ON_PKTNUM
Onevent CONTROL Call C_PKTNUM(zc) From W1PRT1
Onevent BEFORE_INPUT Call AS_PKTNUM(zc) From W1PRT1
Onevent AFTER_CHANGE Gosub AMM_PKTNUM From W1PRT1
Return

Subprog AS_PKTNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PKTNUM(zc) From W1PRT1
Onkey 144 Titled GBOUTP Call P_PKTNUM(zc) From W1PRT1
Onkey 146 Titled GBOUTA Call SA_PKTNUM(zc) From W1PRT1
Gosub _AFF
End

Subprog C_PKTNUM(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("SPK","!$B",VALEUR,"11",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PKTNUM" : GZNUM = 3211 : Endif
Gosub _AFF
End

$AMM_PKTNUM
Call AM_PKTNUM(zc)
If !mkstat & GOBJET
 zoncou = "PKTNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PKTNUM(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZPKTNUM)")>indice
 [M]PKTNUM(indice) = VALEUR
 Affzo ZPKTNUM(indice)
Endif
Gosub _AFF
End

Subprog S_PKTNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "SPK"
PARMSK(2) = "!$B"
PARMSK(3) = "11"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_PKTNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "SPK"
PARMSK(2) = "11"
PARMSK(3) = "$"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PKTNUM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "11"
Call VISU("SPK",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2PRT1
Return

$TIT_COL
Gosub TIT_COL From W2PRT1
Return


