#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Sage X3 supervisor
## CRUD-CLASSE ## ASYRAUS
# 2018-06-20 06:33:48 389


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AUTILIS [AUS_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ASYRAUS") From ASYRCOM : Endif
Local Instance ASYRAUS Using C_ASYRAUS

If !SILENCE : Call TRACE("3 --> New Instance C_ASYRAUS") From ASYRCOM : Endif
ASYRAUS = NewInstance C_ASYRAUS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AUS_]CODUSR First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ASYRAUS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.AREAD([AUS_]USR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ASYRAUS.USR ="-num$(ASYRAUS.USR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ASYRAUS.AKEYS)
  Call TRACE("-"-num$(I)-":"-ASYRAUS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AUS_]
FreeGroup ASYRAUS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ASYRAUS,ACLE,ASTATUS,_ETAG)
Variable Instance ASYRAUS Using C_ASYRAUS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AUTILIS [AUS]
Default File [F:AUS]
Read [F:AUS]CODUSR = [L]_USR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AUS]UPDTICK)>0
 [L]_ETAG = num$([F:AUS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ASYRAUS,ACLE,ASTATUS)
Variable Instance ASYRAUS Using C_ASYRAUS
Value Char ACLE
Variable Integer ASTATUS
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.AREAD([L]_USR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ASYRAUS,_USR,ASTATUS)
Variable Instance ASYRAUS Using C_ASYRAUS
Value Char _USR
Variable Integer ASTATUS

If ASYRAUS = null : End : Endif

Gosub AVARIABLES From WMC00ASYRAUS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ASYRAUS.APARENT=null
 [L]A_I = ASYRAUS.freeSnapshot
 ASYRAUS.snapshotEnabled = 0
 ASYRAUS.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ASYRAUS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ASYRAUS.APARENT=null
 ASYRAUS.snapshotEnabled = 1
 ASYRAUS.setAccessorEnabled = 1
Endif
LogicClose File [AUS]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS._ACTION_PARAM("AREAD_BEFORE",[L]_USR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:AUS]
Read [F:AUS]CODUSR = [L]_USR
If fstat
[L]A_ERROR = [L]_USR
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ASYRAUS,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:AUS]AUUID)>0 & [F:AUS]AUUID=NullUuid
 [F:AUS]AUUID = getUuid
Endif
SetInstance ASYRAUS With [F:AUS]
ASYRAUS.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=ASYRAUS.USR & IDENT2=AVOID.ACHAR
 Call ASETTEXTRA(ASYRAUS.AXX,ASYRAUS.AllocGrp(),"INTUSR",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 ASYRAUS.AXX(maxtab(ASYRAUS.AXX)).FLG = 0
Next AXX
If !len(fmet ASYRAUS.AGETTEXTRA("INTUSR"))
 Call ASETTEXTRA(ASYRAUS.AXX,ASYRAUS.AllocGrp(),"INTUSR",
& fmet ASYRAUS.AGETTEXTRALAN("INTUSR",ASYRAUS.ACTX.AFOLD.ALANGDEF),
& ASYRAUS.ACTX.LAN) From ASYRSUB
Endif

Return



