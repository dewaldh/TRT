#<AdxTL>@(#)0.0.0.0 $Revision$Class Purchase invoicing elements
# Supervisor
## CRUD-CLASSE ## PFOOTINV
# 2018-08-27 12:38:10 469


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PFOOTINV [PFI_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PFOOTINV") From ASYRCOM : Endif
Local Instance PFOOTINV Using C_PFOOTINV

If !SILENCE : Call TRACE("3 --> New Instance C_PFOOTINV") From ASYRCOM : Endif
PFOOTINV = NewInstance C_PFOOTINV AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PFI_]PFI0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PFOOTINV") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PFOOTINV.AREAD([PFI_]PFINUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PFOOTINV.PFINUM ="-num$(PFOOTINV.PFINUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PFOOTINV.AKEYS)
  Call TRACE("-"-num$(I)-":"-PFOOTINV.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PFI_]
FreeGroup PFOOTINV
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PFOOTINV,ACLE,ASTATUS,_ETAG)
Variable Instance PFOOTINV Using C_PFOOTINV
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Shortint _PFINUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PFINUM = val([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PFOOTINV [PFI]
Default File [F:PFI]
Read [F:PFI]PFI0 = [L]_PFINUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PFI]UPDTICK)>0
 [L]_ETAG = num$([F:PFI]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PFOOTINV,ACLE,ASTATUS)
Variable Instance PFOOTINV Using C_PFOOTINV
Value Char ACLE
Variable Integer ASTATUS
Local Shortint _PFINUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PFINUM = val([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PFOOTINV.AREAD([L]_PFINUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PFOOTINV,_PFINUM,ASTATUS)
Variable Instance PFOOTINV Using C_PFOOTINV
Value Shortint _PFINUM
Variable Integer ASTATUS

If PFOOTINV = null : End : Endif

Gosub AVARIABLES From WMC00PFOOTINV
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PFOOTINV.APARENT=null
 [L]A_I = PFOOTINV.freeSnapshot
 PFOOTINV.snapshotEnabled = 0
 PFOOTINV.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PFOOTINV.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PFOOTINV._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PFOOTINV.APARENT=null
 PFOOTINV.snapshotEnabled = 1
 PFOOTINV.setAccessorEnabled = 1
Endif
LogicClose File [PFI]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PFOOTINV._ACTION_PARAM("AREAD_BEFORE",[L]_PFINUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PFI]
Read [F:PFI]PFI0 = [L]_PFINUM
If fstat
[L]A_ERROR = num$([L]_PFINUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PFOOTINV,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PFI]AUUID)>0 & [F:PFI]AUUID=NullUuid
 [F:PFI]AUUID = getUuid
Endif
SetInstance PFOOTINV With [F:PFI]
PFOOTINV.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 20
 If ([F:PFI]DIE([L]A_I-1)<>"" or [F:PFI]CCE([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  PFOOTINV.C_DIE(A_NEWCOL) = NewInstance  C_PFOOTINV_C_DIE(PFOOTINV.ACTX,NullUuid,[L]A_I,PFOOTINV,"C_DIE") AllocGroup PFOOTINV
  PFOOTINV.C_DIE(A_NEWCOL).DIE = [F:PFI]DIE([L]A_I-1)
  PFOOTINV.C_DIE(A_NEWCOL).CCE = [F:PFI]CCE([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet PFOOTINV.C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet PFOOTINV.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PFOOTINV" & ZONE="DESAXX" & IDENT1=num$(PFOOTINV.PFINUM) & IDENT2=""
 Call ASETTEXTRA(PFOOTINV.AXX,PFOOTINV.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PFOOTINV.AXX(maxtab(PFOOTINV.AXX)).FLG = 0
Next AXX
If !len(fmet PFOOTINV.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(PFOOTINV.AXX,PFOOTINV.AllocGrp(),"DESAXX",
& fmet PFOOTINV.AGETTEXTRALAN("DESAXX",PFOOTINV.ACTX.AFOLD.ALANGDEF),
& PFOOTINV.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="PFOOTINV" & ZONE="SHOAXX" & IDENT1=num$(PFOOTINV.PFINUM) & IDENT2=""
 Call ASETTEXTRA(PFOOTINV.AXX,PFOOTINV.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PFOOTINV.AXX(maxtab(PFOOTINV.AXX)).FLG = 0
Next AXX
If !len(fmet PFOOTINV.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(PFOOTINV.AXX,PFOOTINV.AllocGrp(),"SHOAXX",
& fmet PFOOTINV.AGETTEXTRALAN("SHOAXX",PFOOTINV.ACTX.AFOLD.ALANGDEF),
& PFOOTINV.ACTX.LAN) From ASYRSUB
Endif

Return



