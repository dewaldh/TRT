#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management TCA1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:54"
A_USER  = "ADMIN"
A_STAMP = "20180828001554"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBDOC"
  If [M]NBDOC=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask TCA1 [TCA1]
Gosub HORODAT
Local Inpbox "TCA1" From GFONCTION At A_STAMP With A_WINDPREV Mask [TCA1] As [SIM_]
Grizo [TCA1]5
Grizo [TCA1]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [TCA1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=4
X1(1)=1 : X2(1)=74 : Y1(1)=5 : Y2(1)=28
Return

$ON_MODULE
Onevent BEFORE_INPUT Call AS_MODULE(zc) From W1TCA1
Onevent CONTROL Call C_MODULE(zc) From W1TCA1
Onevent AFTER_CHANGE Gosub AMM_MODULE From W1TCA1
Onevent INIT_AREA Call D_MODULE(zc) From W1TCA1
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODULE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(14) From COMBOS
## Action STD
Call AS_MODULE(VALEUR) From SUBTCA
If mkstat=2
 [M]MODULE(INDIC) = VALEUR
 Affzo MODULE(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,14,1))))
Endif
If !mkstat
 Discombo 0 From MODULE(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From MODULE(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_MODULE(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MODULE" : GZNUM = 943 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action CONTOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJW"
 PARMSK(1) = "TCA"
 Call S_AFF_LIB(VALEUR,PARMSK,"CONTOBJW","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "MODULE" : GZNUM = 943 : Endif
 If !mkstat
  ## Action STD
  Call C_MODULE(VALEUR) From SUBTCA
  If mkstat : GERR = 1 : GZONE = "MODULE" : GZNUM = 943 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_MODULE
Call AM_MODULE(zc)
If !mkstat & GOBJET
 zoncou = "MODULE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MODULE(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MODULE(VALEUR) From SUBTCA
If mkstat : GERR = 1 : GZONE = "MODULE" : GZNUM = 943 : Endif
Gosub _AFF
End

$ON_LEG
Onevent INIT_AREA Call D_LEG(zc) From W1TCA1
Onevent CONTROL Call C_LEG(zc) From W1TCA1
Onevent AFTER_CHANGE Gosub AMM_LEG From W1TCA1
Onevent BEFORE_INPUT Call AS_LEG(zc) From W1TCA1
Return

Subprog D_LEG(VALEUR)
Variable Char    VALEUR()
If varinit([M]LEG,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"909","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_LEG(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TITADI(GBOUT1,"909") From TRTDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_LEG(zc) From W1TCA1
Onkey   2 Titled GBOUTS Call S_LEG(zc) From W1TCA1
Onkey 144 Titled GBOUTP Call P_LEG(zc) From W1TCA1
Onkey 146 Titled GBOUTA Call SA_LEG(zc) From W1TCA1
Gosub _AFF
End

Subprog C_LEG(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"909","") From SUBADI
If mkstat : GERR = 1 : GZONE = "LEG" : GZNUM = 26213 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"909",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "LEG" : GZNUM = 26213 : Endif
Endif
Gosub _AFF
End

$AMM_LEG
Call AM_LEG(zc)
If !mkstat & GOBJET
 zoncou = "LEG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LEG(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LEG(VALEUR) From SUBTCA
If mkstat : GERR = 1 : GZONE = "LEG" : GZNUM = 26213 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZLEG)")>indice
 [M]LEG(indice) = VALEUR
 Affzo ZLEG(indice)
Endif
Gosub _AFF
End

Subprog S_LEG(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "909"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LEG(VALEUR)
Variable Char    VALEUR()
Call OBJET("ADI",VALEUR,"909") From GOBJET
Gosub _AFF
End

Subprog SA_LEG(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "909"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_LEG(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "909"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZLEG
Onevent BEFORE_AREA Gosub AV_ZLEG From W1TCA1
Return

$AV_ZLEG
Call LECTEXTRA(zc,"ATABDIV","LNGDES","909",num$([M]LEG(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1TCA1
Onevent AFTER_CHANGE Gosub AMM_CPY From W1TCA1
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1TCA1
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3529,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CPY(zc) From W1TCA1
Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1TCA1
Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1TCA1
Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1TCA1
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action ACONTCPY
Call CONTSOC(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CPY","!A",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
Endif
Gosub _AFF
End

$AMM_CPY
Call AM_CPY(zc)
If !mkstat & GOBJET
 zoncou = "CPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CPY(VALEUR) From SUBTCA
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZCPY)")>indice
 [M]CPY(indice) = VALEUR
 Affzo ZCPY(indice)
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = "!A"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPY(VALEUR)
Variable Char    VALEUR()
Call OBJET("CPY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1TCA1
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_NBDOC
Onevent BEFORE_INPUT Call AS_NBDOC From W1TCA1
Onevent CONTROL Call C_NBDOC From W1TCA1
Return

Subprog AS_NBDOC
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NBDOC From SUBTCA
Gosub _AFF
End

Subprog C_NBDOC
Local Decimal BASPAG
## Action STD
Call C_NBDOC From SUBTCA
If mkstat : GERR = 1 : GZONE = "NBDOC" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_NODOC
Onevent BEFORE_AREA Gosub AV_NODOC From W1TCA1
Return

$AV_NODOC
zc = nolign
Gosub _AFF
Return

$ON_CODNUM
Onevent BEFORE_INPUT Call AS_CODNUM(zc) From W1TCA1
Onevent CONTROL Call C_CODNUM(zc) From W1TCA1
Return

Subprog AS_CODNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(446,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_CODNUM(VALEUR) From SUBTCA
If mkstat=2
 [M]CODNUM(INDIC) = VALEUR
 Affzo CODNUM(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CODNUM(zc) From W1TCA1
Onkey   2 Titled GBOUTS Call S_CODNUM(zc) From W1TCA1
Onkey 144 Titled GBOUTP Call P_CODNUM(zc) From W1TCA1
Onkey 146 Titled GBOUTA Call SA_CODNUM(zc) From W1TCA1
Gosub _AFF
End

Subprog C_CODNUM(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("ANM","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "CODNUM" : GZNUM = 771 : Endif
If !mkstat
 ## Action STD
 Call C_CODNUM(VALEUR) From SUBTCA
 If mkstat : GERR = 1 : GZONE = "CODNUM" : GZNUM = 771 : Endif
Endif
Gosub _AFF
End

Subprog S_CODNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call S_CODNUM(VALEUR) From SUBTCA
Endif
Gosub _AFF
End

Subprog B1_CODNUM(VALEUR)
Variable Char    VALEUR()
Call OBJET("ANM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CODNUM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ANM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODNUM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ANM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_MANCOU
Onevent BEFORE_INPUT Call AS_MANCOU(zc) From W1TCA1
Onevent INIT_AREA Call D_MANCOU(zc) From W1TCA1
Return

Subprog D_MANCOU(VALEUR)
Variable Integer VALEUR
If varinit([M]MANCOU,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MANCOU(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MANCOU(VALEUR) From SUBTCA
If mkstat=2
 [M]MANCOU(INDIC) = VALEUR
 Affzo MANCOU(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


