#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoice number definition
# Supervisor
## CRUD-CLASSE ## BSIINVDIO
# 2018-08-27 13:08:06 821


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BSIINVDIO,ASTATUS)
Variable Instance BSIINVDIO Using R_BSIINVDIO
Variable Integer ASTATUS

If BSIINVDIO = null : End : Endif

Gosub AVARIABLES From WMR00BSIINVDIO
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BSIINVDIO
Else
 Gosub AINSERT_BSIINVDIO
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = BSIINVDIO.freeSnapshot
BSIINVDIO.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
BSIINVDIO.ASTALIN = [V]CST_ANEW
BSIINVDIO.BSIINVD.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIINVDIO._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIINVDIO._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIINVDIO._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BSIINVDIO.BSIINVD.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIINVDIO.BSIINVD.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.BSIINVD.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSIINVDIO.BSIINVD.LINES) : # BSIINVDIOD -- 2
 If BSIINVDIO.BSIINVD.LINES(A_N2) <> null
& and !find(BSIINVDIO.BSIINVD.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.BSIINVD.LINES(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(BSIINVDIO.BSIINVD.LINES) : # BSIINVDIOD -- 2
 If BSIINVDIO.BSIINVD.LINES(A_N2) <> null
& and !find(BSIINVDIO.BSIINVD.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.BSIINVD.LINES(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.BSIINVD.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BSIINVDIO
Trbegin [F:BSIIND]
 Gosub AINSERT_BSIINVDIO
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BSIINVDIO.BSIINVD.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIINVDIO.BSIINVD.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIINVDIO.BSIINVD.LINES)
 If BSIINVDIO.BSIINVD.LINES(A_N2) <> null
  If BSIINVDIO.BSIINVD.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSIINVDIO.BSIINVD.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSIINVDIO.BSIINVD.LINES(A_N2)
   BSIINVDIO.BSIINVD.LINES(A_N2) = null
  Elsif BSIINVDIO.BSIINVD.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSIINVDIO.BSIINVD.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_BSIINVDIO
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.BSIINVD._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If BSIINVDIO.snapshotEnabled=1
 [L]A_RETIK = BSIINVDIO.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIINVDIO.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



