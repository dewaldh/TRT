#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoicing elements
# Supervisor
## CRUD-CLASSE ## SFOOTINV
# 2018-08-27 13:28:28 244


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SFOOTINV [SFI_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SFOOTINV") From ASYRCOM : Endif
Local Instance SFOOTINV Using R_SFOOTINV

If !SILENCE : Call TRACE("3 --> New Instance R_SFOOTINV") From ASYRCOM : Endif
SFOOTINV = NewInstance R_SFOOTINV AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SFI_]SFI0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SFOOTINV") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SFOOTINV.AREAD([SFI_]SFINUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SFOOTINV.SFI.SFINUM ="-num$(SFOOTINV.SFI.SFINUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SFOOTINV.SFI.AKEYS)
  Call TRACE("-"-num$(I)-":"-SFOOTINV.SFI.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SFI_]
FreeGroup SFOOTINV
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SFOOTINV,ACLE,ASTATUS,_ETAG)
Variable Instance SFOOTINV Using R_SFOOTINV
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Shortint _SFINUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SFINUM = val([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SFOOTINV [SFI]
Default File [F:SFI]
Read [F:SFI]SFI0 = [L]_SFINUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SFI]UPDTICK)>0
 [L]_ETAG = num$([F:SFI]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SFOOTINV,ACLE,ASTATUS)
Variable Instance SFOOTINV Using R_SFOOTINV
Value Char ACLE
Variable Integer ASTATUS
Local Shortint _SFINUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SFINUM = val([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SFOOTINV.AREAD([L]_SFINUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SFOOTINV,_SFINUM,ASTATUS)
Variable Instance SFOOTINV Using R_SFOOTINV
Value Shortint _SFINUM
Variable Integer ASTATUS

If SFOOTINV = null : End : Endif

Gosub AVARIABLES From WMR00SFOOTINV
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SFOOTINV.APARENT=null
 [L]A_I = SFOOTINV.freeSnapshot
 SFOOTINV.snapshotEnabled = 0
 SFOOTINV.setAccessorEnabled = 0
Endif

If fmet SFOOTINV.ACTX.AGETAFCRIGHT(SFOOTINV,"GESSFI",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SFI]
Read [F:SFI]SFI0 = [L]_SFINUM
If fstat
[L]A_ERROR = num$([L]_SFINUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SFOOTINV,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet SFOOTINV.ACTX.AGETAFCRIGHTR(SFOOTINV,"GESSFI",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SFOOTINV.ACTX.ASTACRITROLE(SFOOTINV,num$([L]_SFINUM)
& ,"SFI","SFI",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SFOOTINV.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SFOOTINV.SFI.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SFOOTINV.SFI.AREAD([L]_SFINUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SFOOTINV.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SFOOTINV.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SFOOTINV._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SFOOTINV.APARENT=null
 SFOOTINV.snapshotEnabled = 1
 SFOOTINV.setAccessorEnabled = 1
Endif
LogicClose File [SFI]
End



