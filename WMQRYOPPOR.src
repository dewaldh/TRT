#<AdxTL>@(#)0.0.0.0 $Revision$Class Project
# Supervisor
## WMREP REPRESENTATION ## OPPOR
# 2018-08-27 13:20:29 195

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:OPP])=0 : Local File OPPOR [OPP] : Endif
If clalev([F:PIMPL])=0 : Local File PIMPL [PIMPL] : Endif
If clalev([F:WAXX1])=0 : Local File ATEXTRA [WAXX1] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [OPP]
LogicClose File [PIMPL]
LogicClose File [WAXX1]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"OPP","OPP",ACRITROLE,[V]CST_AFALSE)
Link [OPP] With
& [PIMPL]PIM0 ~= [F:OPP]OPPNUM,
& [F:WAXX1]AXX0 = "PIMPL";"PIMDESAXX";GACTX.LAN;[F:PIMPL]PIMNUM;""
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"OPP","OPP",ACRITROLE,[V]CST_AFALSE)
Link [OPP] With
& [PIMPL]PIM0 ~= [F:OPP]OPPNUM,
& [F:WAXX1]AXX0 = "PIMPL";"PIMDESAXX";GACTX.LAN;[F:PIMPL]PIMNUM;""
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# OPP --- OPPOR(OPP)
QRY(NBREP) = NewInstance R_OPPOR AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:OPP]AUUID)>0 & [F:OPP]AUUID=NullUuid
 [F:OPP]AUUID = getUuid
Endif
SetInstance QRY(NBREP).OPP With [F:OPP]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
# OPP.PIMPL --- PIMPL(PIMPL) PIMPL
QRY(NBREP).OPP.PIMPL = NewInstance C_PIMPL(QRY.ACTX,UIDINS,NUMLIN,QRY(NBREP),"PIMPL") AllocGroup QRY(NBREP)
SetInstance QRY(NBREP).OPP.PIMPL With [F:PIMPL]
Call ASETTEXTRA(QRY(NBREP).OPP.PIMPL.AXX,"QRY","PIMDESAXX",[F:WAXX1]TEXTE,[F:WAXX1]LANGUE ) From ASYRSUB

QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# OPP --- OPPOR(OPP)
QRY = NewInstance R_OPPOR AllocGroup PQRY
# OPP.PIMPL --- PIMPL(PIMPL) PIMPL
QRY.OPP.PIMPL = NewInstance C_PIMPL(QRY.ACTX,UIDINS,NUMLIN,QRY,"PIMPL") AllocGroup QRY
QRY.OPP.PIMPL.AXX(1) = NewInstance C_ATXTTRA AllocGroup QRY

QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:OPP]AUUID)>0 & [F:OPP]AUUID=NullUuid
 [F:OPP]AUUID = getUuid
Endif
SetInstance QRY.OPP With [F:OPP]
SetInstance QRY.OPP.PIMPL With [F:PIMPL]
QRY.OPP.PIMPL.AXX(1).PRO = "PIMDESAXX"
QRY.OPP.PIMPL.AXX(1).LAN = [F:WAXX1]LANGUE
QRY.OPP.PIMPL.AXX(1).TEX = [F:WAXX1]TEXTE
QRY.OPP.PIMPL.AXX(1).FLG = 1

[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0OPPOR
CURQRY = "R_OPPOR"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "AFFAIRE" : TBFIL(NBPRO) = "[F:OPP]"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "AFFAIRE"
NBPRO += 1 : TBPRO(NBPRO) = "OPPNUM" : TBFIL(NBPRO) = "[F:OPP]OPPNUM"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "OPP.OPPNUM"
NBPRO += 1 : TBPRO(NBPRO) = "OPPDESAXX" : TBFIL(NBPRO) = "[F:WAXX1]TEXTE"
           : TBTYP(NBPRO) = 26 : TBPTH(NBPRO) = "OPP.PIMPL.PIMDESAXX"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:OPP]OPPNUM"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From OPPOR_RSTD
Gosub EVENTS From OPPOR_RSTD
Return
 


