#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management FASVISPLN0 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:01:27"
A_USER  = "ADMIN"
A_STAMP = "20180828000127"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask FASVISPLN0 [FVP0]
Gosub HORODAT
Local Inpbox "FASVISPLN0" From GFONCTION At A_STAMP With A_WINDPREV Mask [FVP0] As [SIM_]
Grizo [FVP0]5
Grizo [FVP0]10
Grizo [FVP0]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [FVP0]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=92 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=75 : Y1(1)=4 : Y2(1)=6
X1(2)=76 : X2(2)=92 : Y1(2)=4 : Y2(2)=6
Return

$ON_CPY
Onevent INIT_AREA Call D_CPY(zc) From W1FASVISPLN0
Return

Subprog D_CPY(VALEUR)
Variable Char    VALEUR()
If varinit([M]CPY,indice)=0
 VALEUR = GCOUSOC
Endif
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1FASVISPLN0
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_AASREF
Return

$ON_ZAASREF
Onevent BEFORE_AREA Gosub AV_ZAASREF From W1FASVISPLN0
Return

$AV_ZAASREF
If clalev([F:FAS])=0 : Local File FXDASSETS [FAS] : Endif
Call LECTURE("FAS",num$([M]AASREF(indice)),"") From CONTOBJ
zc = [F:FAS]AASDES1
Gosub _AFF
Return

$ON_CNX1
Onevent BEFORE_INPUT Call AS_CNX1(zc) From W1FASVISPLN0
Onevent AFTER_AREA Call AP_CNX1(zc) From W1FASVISPLN0
Onevent INIT_AREA Call D_CNX1(zc) From W1FASVISPLN0
Onevent CONTROL Call C_CNX1(zc) From W1FASVISPLN0
Return

Subprog D_CNX1(VALEUR)
Variable Integer VALEUR
If varinit([M]CNX1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CNX1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3100) From COMBOS
## Action STD
Call AS_CNX1(VALEUR) From FUNVISPLN
If mkstat=2
 [M]CNX1(INDIC) = VALEUR
 Affzo CNX1(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3100,1))))
Endif
If !mkstat
 Discombo 0 From CNX1(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CNX1(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CNX1(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CNX1" : GZNUM = 22164 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_CNX1(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_CNX1(VALEUR) From FUNVISPLN
If mkstat : GERR = 1 : GZONE = "CNX1" : GZNUM = 22164 : Endif
Gosub _AFF
End

$ON_PLN1
Onevent BEFORE_INPUT Call AS_PLN1(zc) From W1FASVISPLN0
Onevent INIT_AREA Call D_PLN1(zc) From W1FASVISPLN0
Onevent CONTROL Call C_PLN1(zc) From W1FASVISPLN0
Return

Subprog D_PLN1(VALEUR)
Variable Integer VALEUR
If varinit([M]PLN1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PLN1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3101) From COMBOS
## Action STD
Call AS_PLN1(VALEUR) From FUNVISPLN
If mkstat=2
 [M]PLN1(INDIC) = VALEUR
 Affzo PLN1(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3101,1))))
Endif
If !mkstat
 Discombo 0 From PLN1(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PLN1(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PLN1(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PLN1" : GZNUM = 2917 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_OTHPLN
Onevent AFTER_AREA Call AP_OTHPLN(zc) From W1FASVISPLN0
Onevent INIT_AREA Call D_OTHPLN(zc) From W1FASVISPLN0
Onevent BEFORE_INPUT Call AS_OTHPLN(zc) From W1FASVISPLN0
Return

Subprog D_OTHPLN(VALEUR)
Variable Integer VALEUR
If varinit([M]OTHPLN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OTHPLN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_OTHPLN(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_OTHPLN(VALEUR) From FUNVISPLN
If mkstat : GERR = 1 : GZONE = "OTHPLN" : GZNUM = 35071 : Endif
Gosub _AFF
End

$ON_CNX2
Onevent BEFORE_INPUT Call AS_CNX2(zc) From W1FASVISPLN0
Onevent AFTER_AREA Call AP_CNX2(zc) From W1FASVISPLN0
Onevent INIT_AREA Call D_CNX2(zc) From W1FASVISPLN0
Onevent CONTROL Call C_CNX2(zc) From W1FASVISPLN0
Return

Subprog D_CNX2(VALEUR)
Variable Integer VALEUR
If varinit([M]CNX2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CNX2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3100) From COMBOS
## Action STD
Call AS_CNX2(VALEUR) From FUNVISPLN
If mkstat=2
 [M]CNX2(INDIC) = VALEUR
 Affzo CNX2(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3100,1))))
Endif
If !mkstat
 Discombo 0 From CNX2(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CNX2(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CNX2(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CNX2" : GZNUM = 22164 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_CNX2(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_CNX2(VALEUR) From FUNVISPLN
If mkstat : GERR = 1 : GZONE = "CNX2" : GZNUM = 22164 : Endif
Gosub _AFF
End

$ON_PLN2
Onevent BEFORE_INPUT Call AS_PLN2(zc) From W1FASVISPLN0
Onevent INIT_AREA Call D_PLN2(zc) From W1FASVISPLN0
Onevent CONTROL Call C_PLN2(zc) From W1FASVISPLN0
Return

Subprog D_PLN2(VALEUR)
Variable Integer VALEUR
If varinit([M]PLN2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PLN2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3101) From COMBOS
## Action STD
Call AS_PLN2(VALEUR) From FUNVISPLN
If mkstat=2
 [M]PLN2(INDIC) = VALEUR
 Affzo PLN2(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3101,1))))
Endif
If !mkstat
 Discombo 0 From PLN2(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PLN2(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PLN2(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PLN2" : GZNUM = 2917 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_FIYPER
Onevent BEFORE_INPUT Call AS_FIYPER(zc) From W1FASVISPLN0
Onevent INIT_AREA Call D_FIYPER(zc) From W1FASVISPLN0
Onevent CONTROL Call C_FIYPER(zc) From W1FASVISPLN0
Return

Subprog D_FIYPER(VALEUR)
Variable Integer VALEUR
If varinit([M]FIYPER,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FIYPER(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3186) From COMBOS
## Action STD
Call AS_FIYPER(VALEUR) From FUNVISPLN
If mkstat=2
 [M]FIYPER(INDIC) = VALEUR
 Affzo FIYPER(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3186,1))))
Endif
Gosub _AFF
End

Subprog C_FIYPER(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$CHG_STY
Return


