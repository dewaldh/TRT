#<AdxTL>@(#)0.0.0.0 $Revision$Class Factors
# Supervisor
## CRUD-CLASSE ## FACTOR
# 2018-08-27 12:31:32 861


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File FACTOR [FCT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_FACTOR") From ASYRCOM : Endif
Local Instance FACTOR Using C_FACTOR

If !SILENCE : Call TRACE("3 --> New Instance C_FACTOR") From ASYRCOM : Endif
FACTOR = NewInstance C_FACTOR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [FCT_]FCT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of FACTOR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet FACTOR.AREAD([FCT_]FCTCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("FACTOR.FCTCOD ="-num$(FACTOR.FCTCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(FACTOR.AKEYS)
  Call TRACE("-"-num$(I)-":"-FACTOR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [FCT_]
FreeGroup FACTOR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(FACTOR,ACLE,ASTATUS,_ETAG)
Variable Instance FACTOR Using C_FACTOR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _FCTCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FCTCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File FACTOR [FCT]
Default File [F:FCT]
Read [F:FCT]FCT0 = [L]_FCTCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:FCT]UPDTICK)>0
 [L]_ETAG = num$([F:FCT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(FACTOR,ACLE,ASTATUS)
Variable Instance FACTOR Using C_FACTOR
Value Char ACLE
Variable Integer ASTATUS
Local Char _FCTCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FCTCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet FACTOR.AREAD([L]_FCTCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(FACTOR,_FCTCOD,ASTATUS)
Variable Instance FACTOR Using C_FACTOR
Value Char _FCTCOD
Variable Integer ASTATUS

If FACTOR = null : End : Endif

Gosub AVARIABLES From WMC00FACTOR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If FACTOR.APARENT=null
 [L]A_I = FACTOR.freeSnapshot
 FACTOR.snapshotEnabled = 0
 FACTOR.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & FACTOR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet FACTOR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If FACTOR.APARENT=null
 FACTOR.snapshotEnabled = 1
 FACTOR.setAccessorEnabled = 1
Endif
LogicClose File [FCT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet FACTOR._ACTION_PARAM("AREAD_BEFORE",[L]_FCTCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:FCT]
Read [F:FCT]FCT0 = [L]_FCTCOD
If fstat
[L]A_ERROR = [L]_FCTCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(FACTOR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:FCT]AUUID)>0 & [F:FCT]AUUID=NullUuid
 [F:FCT]AUUID = getUuid
Endif
SetInstance FACTOR With [F:FCT]
FACTOR.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:FCT]ADDFCT([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  FACTOR.FCTADR(A_NEWCOL) = NewInstance  C_FACTOR_FCTADR(FACTOR.ACTX,NullUuid,[L]A_I,FACTOR,"FCTADR") AllocGroup FACTOR
  FACTOR.FCTADR(A_NEWCOL).ADDFCT = [F:FCT]ADDFCT([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet FACTOR.FCTADR(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 6
 If ([F:FCT]TXTSBRGT([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  FACTOR.SBRGTXT(A_NEWCOL) = NewInstance  C_FACTOR_SBRGTXT(FACTOR.ACTX,NullUuid,[L]A_I,FACTOR,"SBRGTXT") AllocGroup FACTOR
  FACTOR.SBRGTXT(A_NEWCOL).TXTSBRGT = [F:FCT]TXTSBRGT([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet FACTOR.SBRGTXT(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet FACTOR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



