#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MFMW 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "12:53:12"
A_USER  = "ADMIN"
A_STAMP = "20180326125312"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MFMW [MFMW]
Gosub HORODAT
Local Inpbox "MFMW" From GFONCTION At A_STAMP With A_WINDPREV Mask [MFMW] As [SIM_]
Grizo [MFMW]5
Grizo [MFMW]10
Grizo [MFMW]20
Grizo [MFMW]25
Grizo [MFMW]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MFMW]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=137 : Y1(0)=5 : Y2(0)=9
X1(1)=1 : X2(1)=69 : Y1(1)=10 : Y2(1)=20
X1(2)=70 : X2(2)=137 : Y1(2)=10 : Y2(2)=14
X1(3)=70 : X2(3)=137 : Y1(3)=15 : Y2(3)=20
X1(4)=1 : X2(4)=137 : Y1(4)=21 : Y2(4)=23
Return

$ON_ITMREF
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1MFMW
Onevent CONTROL Call C_ITMREF(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1MFMW
Return

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3651,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_ITMREF(VALEUR) From SUBMFG2
If mkstat=2
 [M]ITMREF(INDIC) = VALEUR
 Affzo ITMREF(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_ITMREF(zc) From W1MFMW
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1MFMW
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 4600 : Endif
If !mkstat
 ## Action STD
 Call C_ITMREF(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 4600 : Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREF(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 4600 : Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M:MFG0]MFGFCY
 PARMSK(2) = "123"
 PARMSK(3) = "123"
 PARMSK(4) = "234"
 PARMSK(5) = ""
 PARMSK(6) = [M:MFG2]RETDAT
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJET"
 Call OBJET_CHAR(VALEUR,"ITM","") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ECCVALMAJ
Onevent BEFORE_INPUT Call AS_ECCVALMAJ(zc) From W1MFMW
Onevent CONTROL Call C_ECCVALMAJ(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_ECCVALMAJ From W1MFMW
Return

Subprog AS_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_ECCVALMAJ(VALEUR) From SUBMFG2
If mkstat=2
 [M]ECCVALMAJ(INDIC) = VALEUR
 Affzo ECCVALMAJ(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ECCVALMAJ(zc) From W1MFMW
Gosub _AFF
End

Subprog C_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
If !mkstat
 ## Action STD
 Call C_ECCVALMAJ(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Endif
Gosub _AFF
End

$AMM_ECCVALMAJ
Call AM_ECCVALMAJ(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMAJ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMAJ(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELECCVAL"
 PARMSK(1) = [M:MFMW]ITMREF
 PARMSK(2) = VALEUR
 PARMSK(3) = "[M:MFMW]ECCVALMIN"
 PARMSK(4) = "4"
 PARMSK(5) = [0/0/0]
 PARMSK(6) = "MFMW"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELECCVAL","ECCLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ECCVALMIN
Onevent BEFORE_INPUT Call AS_ECCVALMIN(zc) From W1MFMW
Onevent CONTROL Call C_ECCVALMIN(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_ECCVALMIN From W1MFMW
Return

Subprog AS_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_ECCVALMIN(VALEUR) From SUBMFG2
If mkstat=2
 [M]ECCVALMIN(INDIC) = VALEUR
 Affzo ECCVALMIN(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ECCVALMIN(zc) From W1MFMW
Gosub _AFF
End

Subprog C_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
If !mkstat
 ## Action STD
 Call C_ECCVALMIN(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Endif
Gosub _AFF
End

$AMM_ECCVALMIN
Call AM_ECCVALMIN(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMIN(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

Subprog S_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELECCVAL"
 PARMSK(1) = [M:MFMW]ITMREF
 PARMSK(2) = [M:MFMW]ECCVALMAJ
 PARMSK(3) = ""
 PARMSK(4) = "4"
 PARMSK(5) = [0/0/0]
 PARMSK(6) = "MFMW"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELECCVAL","ECCLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1MFMW
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1MFMW
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGLINK
Onevent BEFORE_INPUT Call AS_MFGLINK(zc) From W1MFMW
Onevent CONTROL Call C_MFGLINK(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_MFGLINK From W1MFMW
Onevent INIT_AREA Call D_MFGLINK(zc) From W1MFMW
Return

Subprog D_MFGLINK(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGLINK,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MFGLINK(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MFGLINK(VALEUR) From SUBMFG2
If mkstat=2
 [M]MFGLINK(INDIC) = VALEUR
 Affzo MFGLINK(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_MFGLINK(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_MFGLINK(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "MFGLINK" : GZNUM = 10108 : Endif
Gosub _AFF
End

$AMM_MFGLINK
Call AM_MFGLINK(zc)
If !mkstat & GOBJET
 zoncou = "MFGLINK" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MFGLINK(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MFGLINK(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "MFGLINK" : GZNUM = 10108 : Endif
Gosub _AFF
End

$ON_MFGLIN
Onevent BEFORE_INPUT Call AS_MFGLIN(zc) From W1MFMW
Onevent CONTROL Call C_MFGLIN(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_MFGLIN From W1MFMW
Return

Subprog AS_MFGLIN(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
If !([M]MFGLINK = 2)
 Affzo MFGLIN : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_MFGLIN(VALEUR) From SUBMFG2
 If mkstat=2
  [M]MFGLIN(INDIC) = VALEUR
  Affzo MFGLIN(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_MFGLIN(zc) From W1MFMW
Endif
Gosub _AFF
End

Subprog C_MFGLIN(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MFGLIN" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_MFGLIN(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "MFGLIN" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_MFGLIN
Call AM_MFGLIN(zc)
If !mkstat & GOBJET
 zoncou = "MFGLIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MFGLIN(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_MFGLIN(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "MFGLIN" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_MFGLIN(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELMFGLIN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMFGLIN"
 Call S_LIS_NUM(VALEUR,PARMSK,"SELMFGLIN","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_QTYCOD
Onevent BEFORE_INPUT Call AS_QTYCOD(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_QTYCOD From W1MFMW
Onevent INIT_AREA Call D_QTYCOD(zc) From W1MFMW
Onevent CONTROL Call C_QTYCOD(zc) From W1MFMW
Return

Subprog D_QTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(225) From COMBOS
## Action STD
Call AS_QTYCOD(VALEUR) From SUBMFG2
If mkstat=2
 [M]QTYCOD(INDIC) = VALEUR
 Affzo QTYCOD(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]QTYCOD(INDIC) = VALEUR
  Affzo QTYCOD(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,225,1))))
 Endif
 If !mkstat
  Discombo 0 From QTYCOD(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From QTYCOD(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_QTYCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_QTYCOD
Call AM_QTYCOD(zc)
If !mkstat & GOBJET
 zoncou = "QTYCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_QTYCOD(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "QTYCOD" : GZNUM = 1545 : Endif
Gosub _AFF
End

$ON_BASQTY
Onevent BEFORE_INPUT Call AS_BASQTY(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_BASQTY From W1MFMW
Onevent INIT_AREA Call D_BASQTY(zc) From W1MFMW
Onevent CONTROL Call C_BASQTY(zc) From W1MFMW
Return

Subprog D_BASQTY(VALEUR)
Variable Decimal VALEUR
If varinit([M]BASQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BASQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BASQTY(VALEUR) From SUBMFG2
If mkstat=2
 [M]BASQTY(INDIC) = VALEUR
 Affzo BASQTY(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]BASQTY(INDIC) = VALEUR
  Affzo BASQTY(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_BASQTY(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_BASQTY
Call AM_BASQTY(zc)
If !mkstat & GOBJET
 zoncou = "BASQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BASQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BASQTY(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "BASQTY" : GZNUM = 1543 : Endif
Gosub _AFF
End

$ON_BOMUOM
Onevent BEFORE_INPUT Call AS_BOMUOM(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_BOMUOM From W1MFMW
Onevent CONTROL Call C_BOMUOM(zc) From W1MFMW
Return

Subprog AS_BOMUOM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_BOMUOM(VALEUR) From SUBMFG2
If mkstat=2
 [M]BOMUOM(INDIC) = VALEUR
 Affzo BOMUOM(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]BOMUOM(INDIC) = VALEUR
  Affzo BOMUOM(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_BOMUOM(zc) From W1MFMW
 Onkey   2 Titled GBOUTS Call S_BOMUOM(zc) From W1MFMW
 Onkey 144 Titled GBOUTP Call P_BOMUOM(zc) From W1MFMW
 Onkey 146 Titled GBOUTA Call SA_BOMUOM(zc) From W1MFMW
Endif
Gosub _AFF
End

Subprog C_BOMUOM(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMUOM" : GZNUM = 8127 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("TUN","E",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BOMUOM" : GZNUM = 8127 : Endif
Endif
Gosub _AFF
End

$AMM_BOMUOM
Call AM_BOMUOM(zc)
If !mkstat & GOBJET
 zoncou = "BOMUOM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMUOM(VALEUR)
Variable Char    VALEUR()
## Action BOMCOE
Call BOMCOE(VALEUR,[M:MFMW]STU,[M:MFMW]ITMREF,"MFMW") From UOMLIB
If mkstat : GERR = 1 : GZONE = "BOMUOM" : GZNUM = 8127 : Endif
If !mkstat
 ## Action STD
 Call AM_BOMUOM(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "BOMUOM" : GZNUM = 8127 : Endif
 If !mkstat & evalue("dim("+clanam([M])+"ZBOMUOM)")>indice
  [M]BOMUOM(indice) = VALEUR
  Affzo ZBOMUOM(indice)
 Endif
Endif
Gosub _AFF
End

Subprog S_BOMUOM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TUN"
PARMSK(2) = "E"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BOMUOM(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BOMUOM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BOMUOM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBOMUOM
Onevent BEFORE_AREA Gosub AV_ZBOMUOM From W1MFMW
Return

$AV_ZBOMUOM
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]BOMUOM(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_BOMQTY
Onevent BEFORE_INPUT Call AS_BOMQTY(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_BOMQTY From W1MFMW
Onevent INIT_AREA Call D_BOMQTY(zc) From W1MFMW
Onevent CONTROL Call C_BOMQTY(zc) From W1MFMW
Return

Subprog D_BOMQTY(VALEUR)
Variable Decimal VALEUR
If varinit([M]BOMQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BOMQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCMFM
Call PASECCMFM From ECCLIB
If mkstat=2
 [M]BOMQTY(INDIC) = VALEUR
 Affzo BOMQTY(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BOMQTY(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMQTY" : GZNUM = 20521 : Endif
Gosub _AFF
End

$AMM_BOMQTY
Call AM_BOMQTY(zc)
If !mkstat & GOBJET
 zoncou = "BOMQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMQTY(VALEUR)
Variable Decimal VALEUR
## Action LIKQTY
Call LIKQTY(VALEUR,[M:MFMW]BOMSTUCOE,[M:MFMW]STU,"MFMW") From UOMLIB
If mkstat : GERR = 1 : GZONE = "BOMQTY" : GZNUM = 20521 : Endif
If !mkstat
 ## Action STD
 Call AM_BOMQTY(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "BOMQTY" : GZNUM = 20521 : Endif
Endif
Gosub _AFF
End

$ON_LIKQTY
Onevent BEFORE_INPUT Call AS_LIKQTY(zc) From W1MFMW
Onevent CONTROL Call C_LIKQTY(zc) From W1MFMW
Onevent AFTER_AREA Call AP_LIKQTY(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_LIKQTY From W1MFMW
Onevent INIT_AREA Call D_LIKQTY(zc) From W1MFMW
Return

Subprog D_LIKQTY(VALEUR)
Variable Decimal VALEUR
If varinit([M]LIKQTY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LIKQTY(VALEUR) From SUBMFG2
If mkstat=2
 [M]LIKQTY(INDIC) = VALEUR
 Affzo LIKQTY(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]LIKQTY(INDIC) = VALEUR
  Affzo LIKQTY(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
If !mkstat
 ## Action STD
 Call C_LIKQTY(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Endif
Gosub _AFF
End

Subprog AP_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_LIKQTY(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$AMM_LIKQTY
Call AM_LIKQTY(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action BOMQTY
Call BOMQTY(VALEUR,[M]WBOMSTUCOE,"MFMW") From UOMLIB
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
If !mkstat
 ## Action STD
 Call AM_LIKQTY(VALEUR) From SUBMFG2
 If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Endif
Gosub _AFF
End

$ON_LIKQTYCOD
Onevent BEFORE_INPUT Call AS_LIKQTYCOD(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_LIKQTYCOD From W1MFMW
Onevent INIT_AREA Call D_LIKQTYCOD(zc) From W1MFMW
Return

Subprog D_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LIKQTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LIKQTYCOD(VALEUR) From SUBMFG2
If mkstat=2
 [M]LIKQTYCOD(INDIC) = VALEUR
 Affzo LIKQTYCOD(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]LIKQTYCOD(INDIC) = VALEUR
  Affzo LIKQTYCOD(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$AMM_LIKQTYCOD
Call AM_LIKQTYCOD(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTYCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LIKQTYCOD(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "LIKQTYCOD" : GZNUM = 4683 : Endif
Gosub _AFF
End

$ON_QTYRND
Onevent BEFORE_INPUT Call AS_QTYRND(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_QTYRND From W1MFMW
Onevent INIT_AREA Call D_QTYRND(zc) From W1MFMW
Return

Subprog D_QTYRND(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYRND,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_QTYRND(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_QTYRND(VALEUR) From SUBMFG2
If mkstat=2
 [M]QTYRND(INDIC) = VALEUR
 Affzo QTYRND(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]QTYRND(INDIC) = VALEUR
  Affzo QTYRND(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$AMM_QTYRND
Call AM_QTYRND(zc)
If !mkstat & GOBJET
 zoncou = "QTYRND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYRND(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_QTYRND(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "QTYRND" : GZNUM = 4684 : Endif
Gosub _AFF
End

$ON_SCA
Onevent BEFORE_INPUT Call AS_SCA(zc) From W1MFMW
Onevent CONTROL Call C_SCA(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_SCA From W1MFMW
Onevent INIT_AREA Call D_SCA(zc) From W1MFMW
Return

Subprog D_SCA(VALEUR)
Variable Decimal VALEUR
If varinit([M]SCA,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

Subprog AS_SCA(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SCA(VALEUR) From SUBMFG2
If mkstat=2
 [M]SCA(INDIC) = VALEUR
 Affzo SCA(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SCA(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_SCA(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "SCA" : GZNUM = 6244 : Endif
Gosub _AFF
End

$AMM_SCA
Call AM_SCA(zc)
If !mkstat & GOBJET
 zoncou = "SCA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SCA(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SCA(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "SCA" : GZNUM = 6244 : Endif
Gosub _AFF
End

$ON_RELSCATIA
Onevent BEFORE_INPUT Call AS_RELSCATIA(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_RELSCATIA From W1MFMW
Onevent INIT_AREA Call D_RELSCATIA(zc) From W1MFMW
Return

Subprog D_RELSCATIA(VALEUR)
Variable Integer VALEUR
If varinit([M]RELSCATIA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RELSCATIA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCMFM
Call PASECCMFM From ECCLIB
If mkstat=2
 [M]RELSCATIA(INDIC) = VALEUR
 Affzo RELSCATIA(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_RELSCATIA
Call AM_RELSCATIA(zc)
If !mkstat & GOBJET
 zoncou = "RELSCATIA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RELSCATIA(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_RELSCATIA(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "RELSCATIA" : GZNUM = 17623 : Endif
Gosub _AFF
End

$ON_BOMOPE
Onevent BEFORE_INPUT Call AS_BOMOPE(zc) From W1MFMW
Onevent CONTROL Call C_BOMOPE(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_BOMOPE From W1MFMW
Return

Subprog AS_BOMOPE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_BOMOPE(VALEUR) From SUBMFG2
If mkstat=2
 [M]BOMOPE(INDIC) = VALEUR
 Affzo BOMOPE(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]BOMOPE(INDIC) = VALEUR
  Affzo BOMOPE(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_BOMOPE(zc) From W1MFMW
Endif
Gosub _AFF
End

Subprog C_BOMOPE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_BOMOPE(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "BOMOPE" : GZNUM = 2296 : Endif
Gosub _AFF
End

$AMM_BOMOPE
Call AM_BOMOPE(zc)
If !mkstat & GOBJET
 zoncou = "BOMOPE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMOPE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BOMOPE(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "BOMOPE" : GZNUM = 2296 : Endif
Gosub _AFF
End

Subprog S_BOMOPE(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELOPEMBM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOPEMBM"
 PARMSK(1) = ""
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = "9"
 PARMSK(8) = date$
 Call S_LIS_NUM(VALEUR,PARMSK,"SELOPEMBM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_BOMOFS
Onevent BEFORE_INPUT Call AS_BOMOFS(zc) From W1MFMW
Onevent AFTER_CHANGE Gosub AMM_BOMOFS From W1MFMW
Return

Subprog AS_BOMOFS(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCMFM
Call PASECCMFM From ECCLIB
If mkstat=2
 [M]BOMOFS(INDIC) = VALEUR
 Affzo BOMOFS(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_BOMOFS
Call AM_BOMOFS(zc)
If !mkstat & GOBJET
 zoncou = "BOMOFS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMOFS(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BOMOFS(VALEUR) From SUBMFG2
If mkstat : GERR = 1 : GZONE = "BOMOFS" : GZNUM = 2620 : Endif
Gosub _AFF
End

$ON_SCOFLG
Onevent INIT_AREA Call D_SCOFLG(zc) From W1MFMW
Return

Subprog D_SCOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BOMSHO
Onevent BEFORE_INPUT Call AS_BOMSHO(zc) From W1MFMW
Return

Subprog AS_BOMSHO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMSHO(VALEUR) From SUBMFG2
If mkstat=2
 [M]BOMSHO(INDIC) = VALEUR
 Affzo BOMSHO(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCMFM
 Call PASECCMFM From ECCLIB
 If mkstat=2
  [M]BOMSHO(INDIC) = VALEUR
  Affzo BOMSHO(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

$ON_CSTFLG
Onevent INIT_AREA Call D_CSTFLG(zc) From W1MFMW
Onevent BEFORE_INPUT Call AS_CSTFLG(zc) From W1MFMW
Return

Subprog D_CSTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CSTFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CSTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2MFMW
Return

$TIT_COL
Gosub TIT_COL From W2MFMW
Return


