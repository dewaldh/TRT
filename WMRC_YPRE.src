#<AdxTL>@(#)0.0.0.0 $Revision$Class Precinct
# Supervisor
## CRUD-CLASSE ## YPRE
# 2019-03-22 03:25:19 119


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(YPRE,ASTATUS)
Variable Instance YPRE Using R_YPRE
Variable Integer ASTATUS

If YPRE = null : End : Endif

Gosub AVARIABLES From WMR00YPRE
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet YPRE.ACTX.AGETAFCRIGHT(YPRE,"GESYPRE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet YPRE.ACTX.AGETAFCRIGHTC(YPRE,"GESYPRE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif
If fmet YPRE.ACTX.AGETACSRIGHTM(YPRE,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AINSERT_END
  Endif
  
  Gosub AREPCONTROL_AINSERT
  If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
  
If !adxlog
 Gosub AINSERT_TR_YPRE
Else
 Gosub AINSERT_YPRE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = YPRE.freeSnapshot
YPRE.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
YPRE.ASTALIN = [V]CST_ANEW
YPRE.YPRC.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YPRE._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YPRE._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YPRE._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If YPRE.YPRC.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YPRE.YPRC.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.YPRC.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YPRE.YPRC.YRMA) : # YRMA -- 2
 If YPRE.YPRC.YRMA(A_N2) <> null
& and !find(YPRE.YPRC.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YPRC.YRMA(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YPRE.YPRC.YSTA) : # YSTA -- 3
 If YPRE.YPRC.YSTA(A_N2) <> null
& and !find(YPRE.YPRC.YSTA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YPRE.YPRC.YGSC) : # YGSC -- 4
 If YPRE.YPRC.YGSC(A_N2) <> null
& and !find(YPRE.YPRC.YGSC(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(YPRE.YPRC.YRMA) : # YRMA -- 2
 If YPRE.YPRC.YRMA(A_N2) <> null
& and !find(YPRE.YPRC.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YPRC.YRMA(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YPRE.YPRC.YSTA) : # YSTA -- 3
 If YPRE.YPRC.YSTA(A_N2) <> null
& and !find(YPRE.YPRC.YSTA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YPRE.YPRC.YGSC) : # YGSC -- 4
 If YPRE.YPRC.YGSC(A_N2) <> null
& and !find(YPRE.YPRC.YGSC(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.YPRC.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_YPRE
Trbegin [F:YPRC]
 Gosub AINSERT_YPRE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(YPRE.YPRC.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YPRE.YPRC.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YPRE.YPRC.YRMA)
 If YPRE.YPRC.YRMA(A_N2) <> null
  [L]ASTATUS2 = fmet YPRE.YPRC.YRMA(A_N2)._AINSERT_AFTER
  If YPRE.YPRC.YRMA(A_N2).ASTALIN=[V]CST_ADEL or YPRE.YPRC.YRMA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YPRE.YPRC.YRMA(A_N2)
   YPRE.YPRC.YRMA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YPRE.YPRC.YSTA)
 If YPRE.YPRC.YSTA(A_N2) <> null
  [L]ASTATUS2 = fmet YPRE.YPRC.YSTA(A_N2)._AINSERT_AFTER
  If YPRE.YPRC.YSTA(A_N2).ASTALIN=[V]CST_ADEL or YPRE.YPRC.YSTA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YPRE.YPRC.YSTA(A_N2)
   YPRE.YPRC.YSTA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YPRE.YPRC.YGSC)
 If YPRE.YPRC.YGSC(A_N2) <> null
  [L]ASTATUS2 = fmet YPRE.YPRC.YGSC(A_N2)._AINSERT_AFTER
  If YPRE.YPRC.YGSC(A_N2).ASTALIN=[V]CST_ADEL or YPRE.YPRC.YGSC(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YPRE.YPRC.YGSC(A_N2)
   YPRE.YPRC.YGSC(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_YPRE
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.YPRC._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If YPRE.snapshotEnabled=1
 [L]A_RETIK = YPRE.revertUpdTick
Endif
[L]ASTATUS = max(fmet YPRE.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



