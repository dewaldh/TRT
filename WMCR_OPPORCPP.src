#<AdxTL>@(#)0.0.0.0 $Revision$Class Project competitor
# Supervisor
## CRUD-CLASSE ## OPPORCPP
# 2018-08-27 12:36:24 278


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File OPPORCPP [OCP_]

If !SILENCE : Call TRACE("2 --> Local Instance C_OPPORCPP") From ASYRCOM : Endif
Local Instance OPPORCPP Using C_OPPORCPP

If !SILENCE : Call TRACE("3 --> New Instance C_OPPORCPP") From ASYRCOM : Endif
OPPORCPP = NewInstance C_OPPORCPP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [OCP_]OCP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of OPPORCPP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet OPPORCPP.AREAD([OCP_]OPPNUM,[OCP_]CPP))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("OPPORCPP.OPPNUM ="-num$(OPPORCPP.OPPNUM)) From ASYRCOM
 Call TRACE("OPPORCPP.CPP ="-num$(OPPORCPP.CPP)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(OPPORCPP.AKEYS)
  Call TRACE("-"-num$(I)-":"-OPPORCPP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [OCP_]
FreeGroup OPPORCPP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(OPPORCPP,ACLE,ASTATUS,_ETAG)
Variable Instance OPPORCPP Using C_OPPORCPP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(20)
Local Char _CPP(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPP = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File OPPORCPP [OCP]
Default File [F:OCP]
Read [F:OCP]OCP0 = [L]_OPPNUM;[L]_CPP
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:OCP]UPDTICK)>0
 [L]_ETAG = num$([F:OCP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(OPPORCPP,ACLE,ASTATUS)
Variable Instance OPPORCPP Using C_OPPORCPP
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(20)
Local Char _CPP(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPP = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet OPPORCPP.AREAD([L]_OPPNUM,[L]_CPP))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(OPPORCPP,_OPPNUM,_CPP,ASTATUS)
Variable Instance OPPORCPP Using C_OPPORCPP
Value Char _OPPNUM
Value Char _CPP
Variable Integer ASTATUS

If OPPORCPP = null : End : Endif

Gosub AVARIABLES From WMC00OPPORCPP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If OPPORCPP.APARENT=null
 [L]A_I = OPPORCPP.freeSnapshot
 OPPORCPP.snapshotEnabled = 0
 OPPORCPP.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & OPPORCPP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet OPPORCPP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If OPPORCPP.APARENT=null
 OPPORCPP.snapshotEnabled = 1
 OPPORCPP.setAccessorEnabled = 1
Endif
LogicClose File [OCP]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet OPPORCPP._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_CPP))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:OCP]
Read [F:OCP]OCP0 = [L]_OPPNUM;[L]_CPP
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_CPP
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(OPPORCPP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:OCP]AUUID)>0 & [F:OCP]AUUID=NullUuid
 [F:OCP]AUUID = getUuid
Endif
SetInstance OPPORCPP With [F:OCP]
OPPORCPP.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet OPPORCPP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



