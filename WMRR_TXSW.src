#<AdxTL>@(#)0.0.0.0 $Revision$Class Financial data extraction
# Supervisor
## CRUD-CLASSE ## TXSW
# 2018-08-27 13:45:59 848


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TXSW [TXW_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TXSW") From ASYRCOM : Endif
Local Instance TXSW Using R_TXSW

If !SILENCE : Call TRACE("3 --> New Instance R_TXSW") From ASYRCOM : Endif
TXSW = NewInstance R_TXSW AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TXW_]TXW1 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TXSW") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TXSW.AREAD([TXW_]TXSNAM,[TXW_]VERSION))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TXSW.TXSW.TXSNAM ="-num$(TXSW.TXSW.TXSNAM)) From ASYRCOM
 Call TRACE("TXSW.TXSW.VERSION ="-num$(TXSW.TXSW.VERSION)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TXSW.TXSW.AKEYS)
  Call TRACE("-"-num$(I)-":"-TXSW.TXSW.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TXW_]
FreeGroup TXSW
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TXSW,ACLE,ASTATUS,_ETAG)
Variable Instance TXSW Using R_TXSW
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _TXSNAM(10)
Local Char _VERSION(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TXSNAM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VERSION = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TXSW [TXW]
Default File [F:TXW]
Read [F:TXW]TXW1 = [L]_TXSNAM;[L]_VERSION
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TXW]UPDTICK)>0
 [L]_ETAG = num$([F:TXW]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TXSW,ACLE,ASTATUS)
Variable Instance TXSW Using R_TXSW
Value Char ACLE
Variable Integer ASTATUS
Local Char _TXSNAM(10)
Local Char _VERSION(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TXSNAM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VERSION = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TXSW.AREAD([L]_TXSNAM,[L]_VERSION))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TXSW,_TXSNAM,_VERSION,ASTATUS)
Variable Instance TXSW Using R_TXSW
Value Char _TXSNAM
Value Char _VERSION
Variable Integer ASTATUS

If TXSW = null : End : Endif

Gosub AVARIABLES From WMR00TXSW
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TXSW.APARENT=null
 [L]A_I = TXSW.freeSnapshot
 TXSW.snapshotEnabled = 0
 TXSW.setAccessorEnabled = 0
Endif

If fmet TXSW.ACTX.AGETAFCRIGHT(TXSW,"GESTXW",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TXW]
Read [F:TXW]TXW1 = [L]_TXSNAM;[L]_VERSION
If fstat
[L]A_ERROR = [L]_TXSNAM+"~"+[L]_VERSION
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TXSW,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TXSW.ACTX.AGETAFCRIGHTR(TXSW,"GESTXW",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TXSW.ACTX.ASTACRITROLE(TXSW,[L]_TXSNAM+"~"+[L]_VERSION
& ,"TXW","TXW",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TXSW.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TXSW.TXSW.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TXSW.TXSW.AREAD([L]_TXSNAM,[L]_VERSION))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TXSW.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TXSW.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TXSW._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TXSW.APARENT=null
 TXSW.snapshotEnabled = 1
 TXSW.setAccessorEnabled = 1
Endif
LogicClose File [TXW]
End



