#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule SADSIDDUD

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GACCDUDATE" : If clalev([F:DUD])=0 : Local File =OUVTAB [DUD] : Endif
OUVTAB = GDOSSIER+".SINVOICE" : If clalev([F:SIH])=0 : Local File =OUVTAB [SIH] : Endif
OUVTAB = GDOSSIER+".SINVOICEV" : If clalev([F:SIV])=0 : Local File =OUVTAB [SIV] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [DUD]"
Link [DUD] With
& [SIH]SIH0 ~= [F:DUD]NUM,
& [SIV]SIV0 ~= [F:DUD]NUM,
& [CPY]CPY0 = [F:DUD]CPY
& As [LNK_]
& Where [F:SIH]STA=3 and [F:SIH]ORIMOD=5 and [F:SIV]INVSTA=3 & [F:DUD]BPRTYP=1
& Order By Key CLE = [DUD]TYP;[DUD]NUM;[DUD]LIG;[DUD]DUDLIG
FILTRE = ""
Return

$FERME
If clalev([F:DUD]) : Close local File [DUD] : Endif
If clalev([F:SIH]) : Close local File [SIH] : Endif
If clalev([F:SIV]) : Close local File [SIV] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..4)
Local Integer DTYP(1..4)
Local Integer NBDCLE
NBDCLE = 4
DCLE(1) = "TYP"
DTYP(1) =  7
DCLE(2) = "NUM"
DTYP(2) =  7
DCLE(3) = "LIG"
DTYP(3) =  2
DCLE(4) = "DUDLIG"
DTYP(4) =  2
Return

$CHARGE_CLE
If dim([F:AAA_]TYP)>0
 [F:AAA_]TYP = [F:DUD]TYP
Endif
If dim([F:AAA_]NUM)>0
 [F:AAA_]NUM = [F:DUD]NUM
Endif
If dim([F:AAA_]LIG)>0
 [F:AAA_]LIG = [F:DUD]LIG
Endif
If dim([F:AAA_]DUDLIG)>0
 [F:AAA_]DUDLIG = [F:DUD]DUDLIG
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]TYP=[F:DUD]TYP"
Append PFLT, " & [F:AAA_]NUM=[F:DUD]NUM"
Append PFLT, " & [F:AAA_]LIG=[F:DUD]LIG"
Append PFLT, " & [F:AAA_]DUDLIG=[F:DUD]DUDLIG"

End

$MAJFLD
### TYP
[L]FLD="TYP"
[L]FORMULE='[F:DUD]TYP'
If dim([F:AAA_]TYP)>0
 [F:AAA_]TYP = [F:DUD]TYP
Endif

### NUM
[L]FLD="NUM"
[L]FORMULE='[F:DUD]NUM'
If dim([F:AAA_]NUM)>0
 [F:AAA_]NUM = [F:DUD]NUM
Endif

### LIG
[L]FLD="LIG"
[L]FORMULE='[F:DUD]LIG'
If dim([F:AAA_]LIG)>0
 [F:AAA_]LIG = [F:DUD]LIG
Endif

### DUDLIG
[L]FLD="DUDLIG"
[L]FORMULE='[F:DUD]DUDLIG'
If dim([F:AAA_]DUDLIG)>0
 [F:AAA_]DUDLIG = [F:DUD]DUDLIG
Endif

### DOCTYPLIN
[L]FLD="DOCTYPLIN"
[L]FORMULE='func TRTDIMBISAD.CREATESADSIDDUD(3)'
If dim([F:AAA_]DOCTYPLIN)>0
 [F:AAA_]DOCTYPLIN = func TRTDIMBISAD.CREATESADSIDDUD(3)
Endif

### DUDDAT
[L]FLD="DUDDAT"
[L]FORMULE='[F:DUD]DUDDAT'
If dim([F:AAA_]DUDDAT)>0
 [F:AAA_]DUDDAT = [F:DUD]DUDDAT
Endif

### PAM
[L]FLD="PAM"
[L]FORMULE='[F:DUD]PAM'
If dim([F:AAA_]PAM)>0
 [F:AAA_]PAM = [F:DUD]PAM
Endif

### PAMTYP
[L]FLD="PAMTYP"
[L]FORMULE='[F:DUD]PAMTYP'
If dim([F:AAA_]PAMTYP)>0
 K   = max(1,val(num$([F:DUD]PAMTYP)))
 [F:AAA_]PAMTYP = mess(K,292,1)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:DUD]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:DUD]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### FLGFUP
[L]FLD="FLGFUP"
[L]FORMULE='[F:DUD]FLGFUP'
If dim([F:AAA_]FLGFUP)>0
 K   = max(1,val(num$([F:DUD]FLGFUP)))
 [F:AAA_]FLGFUP = mess(K,1,1)
Endif

### LEVFUP
[L]FLD="LEVFUP"
[L]FORMULE='[F:DUD]LEVFUP'
If dim([F:AAA_]LEVFUP)>0
 [F:AAA_]LEVFUP = [F:DUD]LEVFUP
Endif

### DATFUP
[L]FLD="DATFUP"
[L]FORMULE='[F:DUD]DATFUP'
If dim([F:AAA_]DATFUP)>0
 [F:AAA_]DATFUP = [F:DUD]DATFUP
Endif

### DPTCOD
[L]FLD="DPTCOD"
[L]FORMULE='[F:DUD]DPTCOD'
If dim([F:AAA_]DPTCOD)>0
 [F:AAA_]DPTCOD = [F:DUD]DPTCOD
Endif

### SOI
[L]FLD="SOI"
[L]FORMULE='[F:DUD]SOI'
If dim([F:AAA_]SOI)>0
 K   = max(1,val(num$([F:DUD]SOI)))
 [F:AAA_]SOI = mess(K,1,1)
Endif

### SOINUM
[L]FLD="SOINUM"
[L]FORMULE='[F:DUD]SOINUM'
If dim([F:AAA_]SOINUM)>0
 [F:AAA_]SOINUM = [F:DUD]SOINUM
Endif

### BPRFCT
[L]FLD="BPRFCT"
[L]FORMULE='[F:DUD]BPRFCT'
If dim([F:AAA_]BPRFCT)>0
 [F:AAA_]BPRFCT = [F:DUD]BPRFCT
Endif

### FCTVCR
[L]FLD="FCTVCR"
[L]FORMULE='[F:DUD]FCTVCR'
If dim([F:AAA_]FCTVCR)>0
 [F:AAA_]FCTVCR = [F:DUD]FCTVCR
Endif

### FLGCLE
[L]FLD="FLGCLE"
[L]FORMULE='[F:DUD]FLGCLE'
If dim([F:AAA_]FLGCLE)>0
 [F:AAA_]FLGCLE = [F:DUD]FLGCLE
Endif

### PAYDAT
[L]FLD="PAYDAT"
[L]FORMULE='[F:DUD]PAYDAT'
If dim([F:AAA_]PAYDAT)>0
 [F:AAA_]PAYDAT = [F:DUD]PAYDAT
Endif

### UMRNUM
[L]FLD="UMRNUM"
[L]FORMULE='[F:DUD]UMRNUM'
If dim([F:AAA_]UMRNUM)>0
 [F:AAA_]UMRNUM = [F:DUD]UMRNUM
Endif

### AMTCUR
[L]FLD="AMTCUR"
[L]FORMULE='[F:DUD]AMTCUR'
If dim([F:AAA_]AMTCUR)>0
 [F:AAA_]AMTCUR = [F:DUD]AMTCUR
Endif

### PAYCUR
[L]FLD="PAYCUR"
[L]FORMULE='[F:DUD]PAYCUR'
If dim([F:AAA_]PAYCUR)>0
 [F:AAA_]PAYCUR = [F:DUD]PAYCUR
Endif

### TMPCUR
[L]FLD="TMPCUR"
[L]FORMULE='[F:DUD]TMPCUR'
If dim([F:AAA_]TMPCUR)>0
 [F:AAA_]TMPCUR = [F:DUD]TMPCUR
Endif

### DUDSTATUS
[L]FLD="DUDSTATUS"
[L]FORMULE='1+(([F:AAA_]PAYCUR+[F:AAA_]TMPCUR)>0)*1+(([F:AAA_]PAYCUR+[F:AAA_]TMPCUR)>=[F:AAA_]AMTCUR)*1'
If dim([F:AAA_]DUDSTATUS)>0
 [F:AAA_]DUDSTATUS = 1+(([F:AAA_]PAYCUR+[F:AAA_]TMPCUR)>0)*1+(([F:AAA_]PAYCUR+[F:AAA_]TMPCUR)>=[F:AAA_]AMTCUR)*1
Endif


Return

