#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment logistical tracking
# Supervisor
## CRUD-CLASSE ## SHIPTRACK
# 2018-08-27 12:45:53 457


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(SHIPTRACK,ASTATUS)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Variable Integer ASTATUS

If SHIPTRACK = null : End : Endif

Gosub _AVARIABLES From WMC00SHIPTRACK

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_SHIPTRACK

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(SHIPTRACK,ASTATUS)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Variable Integer ASTATUS

If SHIPTRACK = null : End : Endif

Gosub AVARIABLES From WMC00SHIPTRACK
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
SHIPTRACK.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_SHIPTRACK
Else
 Gosub AUPDATE_SHIPTRACK
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = SHIPTRACK.freeSnapshot
SHIPTRACK.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPTRACK._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPTRACK._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPTRACK._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If SHIPTRACK.ASTALIN = [V]CST_ANEWDEL : Return : Endif
SHIPTRACK.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(SHIPTRACK.ASTALIN)<>""
 [L]A_ASTALIN = SHIPTRACK.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(SHIPTRACK.ASTALIN)<>""
 [L]A_ASTALIN = SHIPTRACK.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_SHIPTRACK
Trbegin [F:SHIPT]
 Gosub AUPDATE_SHIPTRACK
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_SHIPTRACK
[L]A_ASTALIN = SHIPTRACK.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00SHIPTRACK._MAJSQL_SHIPTRACK(SHIPTRACK))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = SHIPTRACK.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If SHIPTRACK.snapshotEnabled=1
 [L]A_RETIK = SHIPTRACK.revertUpdTick
Endif

[L]ASTATUS = max(fmet SHIPTRACK.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(SHIPTRACK.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 SHIPTRACK.ASTALIN = [V]CST_ALL
Endif
Return



