#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule SRETURN

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".SRETURND" : If clalev([F:SRD])=0 : Local File =OUVTAB [SRD] : Endif
OUVTAB = GDOSSIER+".SRETURN" : If clalev([F:SRH])=0 : Local File =OUVTAB [SRH] : Endif
OUVTAB = GDOSSIER+".BPCUSTOMER" : If clalev([F:BPC])=0 : Local File =OUVTAB [BPC] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [SRD]"
Link [SRD] With
& [SRH]SRH0 = [F:SRD]SRHNUM,
& [BPC]BPC0 = [F:SRH]BPCINV,
& [CPY]CPY0 = [F:SRH]CPY
& As [LNK_]
& Order By Key CLE = [SRD]SRHNUM;[SRD]SRDLIN
FILTRE = ""
Return

$FERME
If clalev([F:SRD]) : Close local File [SRD] : Endif
If clalev([F:SRH]) : Close local File [SRH] : Endif
If clalev([F:BPC]) : Close local File [BPC] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "SRHNUM"
DTYP(1) =  7
DCLE(2) = "SRDLIN"
DTYP(2) =  3
Return

$CHARGE_CLE
If dim([F:AAA_]SRHNUM)>0
 [F:AAA_]SRHNUM = [F:SRD]SRHNUM
Endif
If dim([F:AAA_]SRDLIN)>0
 [F:AAA_]SRDLIN = [F:SRD]SRDLIN
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]SRHNUM=[F:SRD]SRHNUM"
Append PFLT, " & [F:AAA_]SRDLIN=[F:SRD]SRDLIN"

End

$MAJFLD
### SRHNUM
[L]FLD="SRHNUM"
[L]FORMULE='[F:SRD]SRHNUM'
If dim([F:AAA_]SRHNUM)>0
 [F:AAA_]SRHNUM = [F:SRD]SRHNUM
Endif

### SRDLIN
[L]FLD="SRDLIN"
[L]FORMULE='[F:SRD]SRDLIN'
If dim([F:AAA_]SRDLIN)>0
 [F:AAA_]SRDLIN = [F:SRD]SRDLIN
Endif

### LNDRTN
[L]FLD="LNDRTN"
[L]FORMULE='[F:SRH]LNDRTN'
If dim([F:AAA_]LNDRTN)>0
 [F:AAA_]LNDRTN = [F:SRH]LNDRTN
Endif

### SCORTN
[L]FLD="SCORTN"
[L]FORMULE='[F:SRH]SCORTN'
If dim([F:AAA_]SCORTN)>0
 [F:AAA_]SCORTN = [F:SRH]SCORTN
Endif

### RTNDAT
[L]FLD="RTNDAT"
[L]FORMULE='[F:SRH]RTNDAT'
If dim([F:AAA_]RTNDAT)>0
 [F:AAA_]RTNDAT = [F:SRH]RTNDAT
Endif

### EXTRTNDAT
[L]FLD="EXTRTNDAT"
[L]FORMULE='[F:SRH]EXTRTNDAT'
If dim([F:AAA_]EXTRTNDAT)>0
 [F:AAA_]EXTRTNDAT = [F:SRH]EXTRTNDAT
Endif

### SIHNUM
[L]FLD="SIHNUM"
[L]FORMULE='[F:SRD]SIHNUM'
If dim([F:AAA_]SIHNUM)>0
 [F:AAA_]SIHNUM = [F:SRD]SIHNUM
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:SRH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:SRH]EECICT
Endif

### EECSCH
[L]FLD="EECSCH"
[L]FORMULE='[F:SRH]EECSCH'
If dim([F:AAA_]EECSCH)>0
 [F:AAA_]EECSCH = [F:SRH]EECSCH
Endif

### EECSCH_LEG
[L]FLD="EECSCH_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_EECSCH([F:AAA_]EECSCH,[F:CPY]LEG)'
If dim([F:AAA_]EECSCH_LEG)>0
 [F:AAA_]EECSCH_LEG = func TRTX3BITC.GETLEG_EECSCH([F:AAA_]EECSCH,[F:CPY]LEG)
Endif

### EECNAT
[L]FLD="EECNAT"
[L]FORMULE='[F:SRH]EECNAT'
If dim([F:AAA_]EECNAT)>0
 [F:AAA_]EECNAT = [F:SRH]EECNAT
Endif

### EECNAT_LEG
[L]FLD="EECNAT_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_EECNAT([F:AAA_]EECNAT,[F:CPY]LEG)'
If dim([F:AAA_]EECNAT_LEG)>0
 [F:AAA_]EECNAT_LEG = func TRTX3BITC.GETLEG_EECNAT([F:AAA_]EECNAT,[F:CPY]LEG)
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:SRH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:SRH]FFWNUM
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:BPC]VACBPR'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:BPC]VACBPR
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:BPC]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:BPC]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### DEP
[L]FLD="DEP"
[L]FORMULE='[F:BPC]DEP'
If dim([F:AAA_]DEP)>0
 [F:AAA_]DEP = [F:BPC]DEP
Endif

### DEP_LEG
[L]FLD="DEP_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)'
If dim([F:AAA_]DEP_LEG)>0
 [F:AAA_]DEP_LEG = func TRTX3BITC.GETLEG_DEP([F:AAA_]DEP,[F:CPY]LEG)
Endif

### RTNREN
[L]FLD="RTNREN"
[L]FORMULE='[F:SRD]RTNREN'
If dim([F:AAA_]RTNREN)>0
 [F:AAA_]RTNREN = [F:SRD]RTNREN
Endif

### ITMDES1
[L]FLD="ITMDES1"
[L]FORMULE='[F:SRD]ITMDES1'
If dim([F:AAA_]ITMDES1)>0
 [F:AAA_]ITMDES1 = [F:SRD]ITMDES1
Endif

### NETPRI
[L]FLD="NETPRI"
[L]FORMULE='[F:SRD]NETPRI'
If dim([F:AAA_]NETPRI)>0
 [F:AAA_]NETPRI = [F:SRD]NETPRI
Endif

### PRIORD
[L]FLD="PRIORD"
[L]FORMULE='[F:SRD]PRIORD'
If dim([F:AAA_]PRIORD)>0
 [F:AAA_]PRIORD = [F:SRD]PRIORD
Endif

### SAU
[L]FLD="SAU"
[L]FORMULE='[F:SRD]SAU'
If dim([F:AAA_]SAU)>0
 [F:AAA_]SAU = [F:SRD]SAU
Endif

### SAUSTUCOE
[L]FLD="SAUSTUCOE"
[L]FORMULE='[F:SRD]SAUSTUCOE'
If dim([F:AAA_]SAUSTUCOE)>0
 [F:AAA_]SAUSTUCOE = [F:SRD]SAUSTUCOE
Endif

### BPDNAM
[L]FLD="BPDNAM"
[L]FORMULE='[F:SRH]BPDNAM'
If dim([F:AAA_]BPDNAM)>0
 [F:AAA_]BPDNAM = [F:SRH]BPDNAM
Endif

### CNDNAM
[L]FLD="CNDNAM"
[L]FORMULE='[F:SRH]CNDNAM'
If dim([F:AAA_]CNDNAM)>0
 [F:AAA_]CNDNAM = [F:SRH]CNDNAM
Endif

### BPDPOSCOD
[L]FLD="BPDPOSCOD"
[L]FORMULE='vireblc([F:SRH]BPDPOSCOD,1)'
If dim([F:AAA_]BPDPOSCOD)>0
 [F:AAA_]BPDPOSCOD = vireblc([F:SRH]BPDPOSCOD,1)
Endif

### BPDCTY
[L]FLD="BPDCTY"
[L]FORMULE='[F:SRH]BPDCTY'
If dim([F:AAA_]BPDCTY)>0
 [F:AAA_]BPDCTY = [F:SRH]BPDCTY
Endif

### BPDCRY
[L]FLD="BPDCRY"
[L]FORMULE='[F:SRH]BPDCRY'
If dim([F:AAA_]BPDCRY)>0
 [F:AAA_]BPDCRY = [F:SRH]BPDCRY
Endif

### SDHNUM
[L]FLD="SDHNUM"
[L]FORMULE='[F:SRD]SDHNUM'
If dim([F:AAA_]SDHNUM)>0
 [F:AAA_]SDHNUM = [F:SRD]SDHNUM
Endif

### SDDLIN
[L]FLD="SDDLIN"
[L]FORMULE='[F:SRD]SDDLIN'
If dim([F:AAA_]SDDLIN)>0
 [F:AAA_]SDDLIN = [F:SRD]SDDLIN
Endif

### PNHNUM
[L]FLD="PNHNUM"
[L]FORMULE='[F:SRD]PNHNUM'
If dim([F:AAA_]PNHNUM)>0
 [F:AAA_]PNHNUM = [F:SRD]PNHNUM
Endif

### PNDLIN
[L]FLD="PNDLIN"
[L]FORMULE='[F:SRD]PNDLIN'
If dim([F:AAA_]PNDLIN)>0
 [F:AAA_]PNDLIN = [F:SRD]PNDLIN
Endif

### SRHTYP
[L]FLD="SRHTYP"
[L]FORMULE='[F:SRH]SRHTYP'
If dim([F:AAA_]SRHTYP)>0
 [F:AAA_]SRHTYP = [F:SRH]SRHTYP
Endif

### SRHTYP_LEG
[L]FLD="SRHTYP_LEG"
[L]FORMULE='func TRTX3BIVEN.GETLEG_SRHTYP([F:AAA_]SRHTYP,[F:CPY]LEG)'
If dim([F:AAA_]SRHTYP_LEG)>0
 [F:AAA_]SRHTYP_LEG = func TRTX3BIVEN.GETLEG_SRHTYP([F:AAA_]SRHTYP,[F:CPY]LEG)
Endif


Return

