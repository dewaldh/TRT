#<AdxTL>@(#)0.0.0.0 $Revision$Class Planning App
# Supervisor
## CRUD-CLASSE ## YPLA
# 2018-11-13 23:57:25 499

Gosub TEST From WMCR_YPLA : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YPLLID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YPLA : YPLAGEN
# YPLL : YPLAGEN YPLAREL
# YRMA : YPLAGEN YRELMAST
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YPLA._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YPLA.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YPLA.ACTX.AFOLDER,nomap,"")>0
 Local File YPLAGEN [YPLN]
 Local File YPLAREL [YPLL]
 Local File YRELMAST [YRMA]
Else
 Local File =YPLA.ACTX.AFOLDER+".YPLAGEN" [YPLN]
 Local File =YPLA.ACTX.AFOLDER+".YPLAREL" [YPLL]
 Local File =YPLA.ACTX.AFOLDER+".YRELMAST" [YRMA]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YPLA.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YPLN] With
& [YPLL]YPLL0 = [F:YPLN]YPLLID,
& [YRMA]YRMA0 = [F:YPLN]YGUID
& As [LNK_]
Return

############################################################################################
### YPLAGEN(WYPLN)
############################################################################################
Funprog  _MAJSQL_YPLAGEN(WYPLN)
Variable Instance WYPLN Using C_YPLA
Local Integer ASTATUS,A_I,A_J
Default File [F:YPLN]
If WYPLN.ASTALIN=[V]CST_ANEW
 Call INICRE(WYPLN) From ASYRSUB
 SetInstance [F:YPLN] With WYPLN
 Write [F:YPLN]
 If fstat
  Call FSTA("YPLN",WYPLN,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYPLN.updTick = [F:YPLN]updTick
Elsif WYPLN.ASTALIN=[V]CST_ALL or WYPLN.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYPLN) From ASYRSUB
 SetInstance [F:YPLN] With WYPLN
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYPLN,"YPLAGEN")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YPLN]YPLN0 = [F:YPLN]YPLLID
 If fstat
  Call FSTA("YPLN",WYPLN,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYPLN.updTick = [F:YPLN]updTick
Elsif WYPLN.ASTALIN=[V]CST_ADEL
 SetInstance [F:YPLN] With WYPLN
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYPLN,"YPLAGEN")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YPLN]YPLN0 = [F:YPLN]YPLLID
 If fstat
  Call FSTA("YPLN",WYPLN,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YPLAREL(WYPLL)
############################################################################################
Funprog  _MAJSQL_YPLAREL(WYPLL)
Variable Instance WYPLL Using C_YPLL
Local Integer ASTATUS,A_I,A_J
Default File [F:YPLL]
If WYPLL.ASTALIN=[V]CST_ANEW
 Call INICRE(WYPLL) From ASYRSUB
 SetInstance [F:YPLL] With WYPLL
 Write [F:YPLL]
 If fstat
  Call FSTA("YPLL",WYPLL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYPLL.updTick = [F:YPLL]updTick
Elsif WYPLL.ASTALIN=[V]CST_ALL or WYPLL.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYPLL) From ASYRSUB
 SetInstance [F:YPLL] With WYPLL
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYPLL,"YPLAREL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YPLL]YPLL0 = [F:YPLL]YPLLID
 If fstat
  Call FSTA("YPLL",WYPLL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYPLL.updTick = [F:YPLL]updTick
Elsif WYPLL.ASTALIN=[V]CST_ADEL
 SetInstance [F:YPLL] With WYPLL
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYPLL,"YPLAREL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YPLL]YPLL0 = [F:YPLL]YPLLID
 If fstat
  Call FSTA("YPLL",WYPLL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YRELMAST(WYRMA)
############################################################################################
Funprog  _MAJSQL_YRELMAST(WYRMA)
Variable Instance WYRMA Using C_YRMA
Local Integer ASTATUS,A_I,A_J
Default File [F:YRMA]
If WYRMA.ASTALIN=[V]CST_ANEW
 Call INICRE(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 Write [F:YRMA]
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ALL or WYRMA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ADEL
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



