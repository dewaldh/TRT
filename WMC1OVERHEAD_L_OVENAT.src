#<AdxTL>@(#)0.0.0.0 $Revision$Class Overheads codes
# Supervisor
## ACLA-CLASSE ## OVERHEAD_L_OVENAT
# 2018-08-27 12:36:50 307


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : OVENAT Category ( Field ONA 3)
####################################################################

$SET_OVENAT
If [L]_AOLDVAL<>this.OVENAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OVENAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OVENAT
 Gosub PROPAGATE_OVENAT
Endif
Return

$INIT_OVENAT
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "OVENAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OVENAT
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "OVENAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OVENAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OVENAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OVENAT
[L]CURPRO = "OVENAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.OVENAT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OVENAT
[L]CURPRO = "OVENAT"
If vireblc(this.OVENAT,2)<>vireblc(format$("K:3c",this.OVENAT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_OVENAT
[L]CURPRO = "OVENAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OVENAT
[L]CURPRO = "OVENAT"
Return

$PROPAGATE_OVENAT
this.isReadonly = 0
[L]CURPRO = "OVENAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OVENAT
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "OVENAT"
$_LNKPRO_OVENAT
Return


####################################################################
# 2 : VCRTRG Trigger ( Field Local menu number 2381)
####################################################################

$SET_VCRTRG
If [L]_AOLDVAL<>this.VCRTRG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRTRG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRTRG
 Gosub PROPAGATE_VCRTRG
Endif
Return

$INIT_VCRTRG
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "VCRTRG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VCRTRG=0 and fmet this.AGETATTRIBUTE("VCRTRG","$isMandatory")="true"
 this.VCRTRG = 1
Endif
Return
 
$CONTROL_VCRTRG
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "VCRTRG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRTRG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRTRG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRTRG
[L]CURPRO = "VCRTRG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRTRG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRTRG
[L]CURPRO = "VCRTRG"
If this.VCRTRG<0 or this.VCRTRG>len(mess(0,2381,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2381 ->"-num$(this.VCRTRG)-mess(99,123,1)):  Return : # Local menu "2381 -> Invalid option
Endif
Return

$_AOTHERS_VCRTRG
[L]CURPRO = "VCRTRG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRTRG
[L]CURPRO = "VCRTRG"
Return

$PROPAGATE_VCRTRG
this.isReadonly = 0
[L]CURPRO = "VCRTRG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRTRG
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "VCRTRG"
$_LNKPRO_VCRTRG
Return


####################################################################
# 3 : FORCODA Formula code ( Field FOR 3)
####################################################################

$SET_FORCODA
If [L]_AOLDVAL<>this.FORCODA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FORCODA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FORCODA
 Gosub PROPAGATE_FORCODA
Endif
Return

$INIT_FORCODA
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FORCODA
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FORCODA               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FORCODA               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FORCODA
[L]CURPRO = "FORCODA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FORCODA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FORCODA
[L]CURPRO = "FORCODA"
If vireblc(this.FORCODA,2)<>vireblc(format$("K:3c",this.FORCODA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FORCODA
[L]CURPRO = "FORCODA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FORCODA
[L]CURPRO = "FORCODA"
If vireblc(this.FORCODA,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFOR.ACTRLREF(this,"FORCODA",this.FORCODA,5,this.FORCODA,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FORCODA<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_FORCODA
this.isReadonly = 0
[L]CURPRO = "FORCODA"
Gosub _LNKPRO_FORCODA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FORCODA
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODA"
$_LNKPRO_FORCODA
If vireblc(this.FORCODA,2)<>""
 # Link TABFOR
 Local File TABFOR [WTFO]
 Read [F:WTFO]TFO0 = 5;this.FORCODA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DESSHO" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DES" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTFO]
Endif
Return


####################################################################
# 4 : FORCODB Formula code ( Field FOR 3)
####################################################################

$SET_FORCODB
If [L]_AOLDVAL<>this.FORCODB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FORCODB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FORCODB
 Gosub PROPAGATE_FORCODB
Endif
Return

$INIT_FORCODB
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FORCODB
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FORCODB               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FORCODB               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FORCODB
[L]CURPRO = "FORCODB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FORCODB,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FORCODB
[L]CURPRO = "FORCODB"
If vireblc(this.FORCODB,2)<>vireblc(format$("K:3c",this.FORCODB),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FORCODB
[L]CURPRO = "FORCODB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FORCODB
[L]CURPRO = "FORCODB"
If vireblc(this.FORCODB,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFOR.ACTRLREF(this,"FORCODB",this.FORCODB,5,this.FORCODB,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FORCODB<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_FORCODB
this.isReadonly = 0
[L]CURPRO = "FORCODB"
Gosub _LNKPRO_FORCODB
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FORCODB
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODB"
$_LNKPRO_FORCODB
If vireblc(this.FORCODB,2)<>""
 # Link TABFOR
 Local File TABFOR [WTFO]
 Read [F:WTFO]TFO0 = 5;this.FORCODB
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DESSHO" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODB","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DES" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODB","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTFO]
Endif
Return


####################################################################
# 5 : FORCODC Formula code ( Field FOR 3)
####################################################################

$SET_FORCODC
If [L]_AOLDVAL<>this.FORCODC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FORCODC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FORCODC
 Gosub PROPAGATE_FORCODC
Endif
Return

$INIT_FORCODC
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FORCODC
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FORCODC               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FORCODC               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FORCODC
[L]CURPRO = "FORCODC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FORCODC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FORCODC
[L]CURPRO = "FORCODC"
If vireblc(this.FORCODC,2)<>vireblc(format$("K:3c",this.FORCODC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FORCODC
[L]CURPRO = "FORCODC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FORCODC
[L]CURPRO = "FORCODC"
If vireblc(this.FORCODC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFOR.ACTRLREF(this,"FORCODC",this.FORCODC,5,this.FORCODC,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FORCODC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_FORCODC
this.isReadonly = 0
[L]CURPRO = "FORCODC"
Gosub _LNKPRO_FORCODC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FORCODC
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODC"
$_LNKPRO_FORCODC
If vireblc(this.FORCODC,2)<>""
 # Link TABFOR
 Local File TABFOR [WTFO]
 Read [F:WTFO]TFO0 = 5;this.FORCODC
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DESSHO" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DES" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTFO]
Endif
Return


####################################################################
# 6 : FORCODD Formula code ( Field FOR 3)
####################################################################

$SET_FORCODD
If [L]_AOLDVAL<>this.FORCODD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FORCODD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FORCODD
 Gosub PROPAGATE_FORCODD
Endif
Return

$INIT_FORCODD
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FORCODD
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FORCODD               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FORCODD               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FORCODD
[L]CURPRO = "FORCODD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FORCODD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FORCODD
[L]CURPRO = "FORCODD"
If vireblc(this.FORCODD,2)<>vireblc(format$("K:3c",this.FORCODD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FORCODD
[L]CURPRO = "FORCODD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FORCODD
[L]CURPRO = "FORCODD"
If vireblc(this.FORCODD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFOR.ACTRLREF(this,"FORCODD",this.FORCODD,5,this.FORCODD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FORCODD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_FORCODD
this.isReadonly = 0
[L]CURPRO = "FORCODD"
Gosub _LNKPRO_FORCODD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FORCODD
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FORCODD"
$_LNKPRO_FORCODD
If vireblc(this.FORCODD,2)<>""
 # Link TABFOR
 Local File TABFOR [WTFO]
 Read [F:WTFO]TFO0 = 5;this.FORCODD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DESSHO" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODD","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABFOR" & ZONE="DES" & IDENT1=[F:WTFO]FORNUM & IDENT2=[F:WTFO]FORCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FORCODD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTFO]
Endif
Return


####################################################################
# 7 : FXDOVEA Contract ( Field DCB 8)
####################################################################

$SET_FXDOVEA
If [L]_AOLDVAL<>this.FXDOVEA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FXDOVEA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FXDOVEA
 Gosub PROPAGATE_FXDOVEA
Endif
Return

$INIT_FXDOVEA
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FXDOVEA
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FXDOVEA               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FXDOVEA               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FXDOVEA
[L]CURPRO = "FXDOVEA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FXDOVEA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FXDOVEA
[L]CURPRO = "FXDOVEA"
Return

$_AOTHERS_FXDOVEA
[L]CURPRO = "FXDOVEA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FXDOVEA
[L]CURPRO = "FXDOVEA"
Return

$PROPAGATE_FXDOVEA
this.isReadonly = 0
[L]CURPRO = "FXDOVEA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FXDOVEA
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEA"
$_LNKPRO_FXDOVEA
Return


####################################################################
# 8 : FXDOVEB Contract ( Field DCB 8)
####################################################################

$SET_FXDOVEB
If [L]_AOLDVAL<>this.FXDOVEB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FXDOVEB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FXDOVEB
 Gosub PROPAGATE_FXDOVEB
Endif
Return

$INIT_FXDOVEB
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FXDOVEB
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FXDOVEB               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FXDOVEB               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FXDOVEB
[L]CURPRO = "FXDOVEB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FXDOVEB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FXDOVEB
[L]CURPRO = "FXDOVEB"
Return

$_AOTHERS_FXDOVEB
[L]CURPRO = "FXDOVEB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FXDOVEB
[L]CURPRO = "FXDOVEB"
Return

$PROPAGATE_FXDOVEB
this.isReadonly = 0
[L]CURPRO = "FXDOVEB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FXDOVEB
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEB"
$_LNKPRO_FXDOVEB
Return


####################################################################
# 9 : FXDOVEC Contract ( Field DCB 8)
####################################################################

$SET_FXDOVEC
If [L]_AOLDVAL<>this.FXDOVEC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FXDOVEC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FXDOVEC
 Gosub PROPAGATE_FXDOVEC
Endif
Return

$INIT_FXDOVEC
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FXDOVEC
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FXDOVEC               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FXDOVEC               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FXDOVEC
[L]CURPRO = "FXDOVEC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FXDOVEC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FXDOVEC
[L]CURPRO = "FXDOVEC"
Return

$_AOTHERS_FXDOVEC
[L]CURPRO = "FXDOVEC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FXDOVEC
[L]CURPRO = "FXDOVEC"
Return

$PROPAGATE_FXDOVEC
this.isReadonly = 0
[L]CURPRO = "FXDOVEC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FXDOVEC
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVEC"
$_LNKPRO_FXDOVEC
Return


####################################################################
# 10 : FXDOVED Contract ( Field DCB 8)
####################################################################

$SET_FXDOVED
If [L]_AOLDVAL<>this.FXDOVED
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FXDOVED
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FXDOVED
 Gosub PROPAGATE_FXDOVED
Endif
Return

$INIT_FXDOVED
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVED"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FXDOVED
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVED"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FXDOVED               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FXDOVED               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FXDOVED
[L]CURPRO = "FXDOVED"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FXDOVED=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FXDOVED
[L]CURPRO = "FXDOVED"
Return

$_AOTHERS_FXDOVED
[L]CURPRO = "FXDOVED"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FXDOVED
[L]CURPRO = "FXDOVED"
Return

$PROPAGATE_FXDOVED
this.isReadonly = 0
[L]CURPRO = "FXDOVED"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FXDOVED
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
[L]CURPRO = "FXDOVED"
$_LNKPRO_FXDOVED
Return




