#<AdxTL>@(#)0.0.0.0 $Revision$Class Company
# Supervisor
## CRUD-CLASSE ## COMPANY
# 2018-08-27 12:29:58 582

Gosub TEST From WMCR_COMPANY : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CPY)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# COMPANY : COMPANY
# BPADDRESS : COMPANY BPADDRESS
# BID : COMPANY BID
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet COMPANY._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = COMPANY.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(COMPANY.ACTX.AFOLDER,nomap,"")>0
 Local File COMPANY [CPY]
 Local File BPADDRESS [BPA]
 Local File BID [BID]
Else
 Local File =COMPANY.ACTX.AFOLDER+".COMPANY" [CPY]
 Local File =COMPANY.ACTX.AFOLDER+".BPADDRESS" [BPA]
 Local File =COMPANY.ACTX.AFOLDER+".BID" [BID]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet COMPANY.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [CPY] With
& [BPA]BPA0 = 2;[F:CPY]CPY,
& [BID]BID0 = 2;[F:CPY]CPY
& As [LNK_]
Return

############################################################################################
### COMPANY(WCPY)
############################################################################################
Funprog  _MAJSQL_COMPANY(WCPY)
Variable Instance WCPY Using C_COMPANY
Local Integer ASTATUS,A_I,A_J
Default File [F:CPY]
If WCPY.ASTALIN=[V]CST_ANEW
 Call INICRE(WCPY) From ASYRSUB
 SetInstance [F:CPY] With WCPY
 Write [F:CPY]
 If fstat
  Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCPY.updTick = [F:CPY]updTick
Elsif WCPY.ASTALIN=[V]CST_ALL or WCPY.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCPY) From ASYRSUB
 SetInstance [F:CPY] With WCPY
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCPY,"COMPANY")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CPY]CPY0 = [F:CPY]CPY
 If fstat
  Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCPY.updTick = [F:CPY]updTick
Elsif WCPY.ASTALIN=[V]CST_ADEL
 SetInstance [F:CPY] With WCPY
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCPY,"COMPANY")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CPY]CPY0 = [F:CPY]CPY
 If fstat
  Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BPADDRESS(WBPA)
############################################################################################
Funprog  _MAJSQL_BPADDRESS(WBPA)
Variable Instance WBPA Using C_BPADDRESS
Local Integer ASTATUS,A_I,A_J
Default File [F:BPA]
If WBPA.ASTALIN=[V]CST_ANEW
 Call INICRE(WBPA) From ASYRSUB
 SetInstance [F:BPA] With WBPA
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WBPA.COLTEL)
   If WBPA.COLTEL([L]A_I)<>null & !find(WBPA.COLTEL([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPA.COLTEL([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WBPA.COLWEB)
   If WBPA.COLWEB([L]A_I)<>null & !find(WBPA.COLWEB([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPA.COLWEB([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BPA]
 If fstat
  Call FSTA("BPA",WBPA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPA.updTick = [F:BPA]updTick
Elsif WBPA.ASTALIN=[V]CST_ALL or WBPA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBPA) From ASYRSUB
 SetInstance [F:BPA] With WBPA
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WBPA.COLTEL)
   If WBPA.COLTEL([L]A_I)<>null & !find(WBPA.COLTEL([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPA.COLTEL([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WBPA.COLWEB)
   If WBPA.COLWEB([L]A_I)<>null & !find(WBPA.COLWEB([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPA.COLWEB([L]A_I).AORDER=[L]A_J
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPA,"BPADDRESS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BPA]BPA0 = [F:BPA]BPATYP;[F:BPA]BPANUM;[F:BPA]BPAADD
 If fstat
  Call FSTA("BPA",WBPA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPA.updTick = [F:BPA]updTick
Elsif WBPA.ASTALIN=[V]CST_ADEL
 SetInstance [F:BPA] With WBPA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPA,"BPADDRESS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BPA]BPA0 = [F:BPA]BPATYP;[F:BPA]BPANUM;[F:BPA]BPAADD
 If fstat
  Call FSTA("BPA",WBPA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BID(WBID)
############################################################################################
Funprog  _MAJSQL_BID(WBID)
Variable Instance WBID Using C_BID
Local Integer ASTATUS,A_I,A_J
Default File [F:BID]
If WBID.ASTALIN=[V]CST_ANEW
 Call INICRE(WBID) From ASYRSUB
 SetInstance [F:BID] With WBID
 Write [F:BID]
 If fstat
  Call FSTA("BID",WBID,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBID.updTick = [F:BID]updTick
Elsif WBID.ASTALIN=[V]CST_ALL or WBID.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBID) From ASYRSUB
 SetInstance [F:BID] With WBID
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBID,"BID")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BID]BID0 = [F:BID]BPATYP;[F:BID]BPANUM;[F:BID]BIDNUM;[F:BID]BPAADD
 If fstat
  Call FSTA("BID",WBID,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBID.updTick = [F:BID]updTick
Elsif WBID.ASTALIN=[V]CST_ADEL
 SetInstance [F:BID] With WBID
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBID,"BID")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BID]BID0 = [F:BID]BPATYP;[F:BID]BPANUM;[F:BID]BIDNUM;[F:BID]BPAADD
 If fstat
  Call FSTA("BID",WBID,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_COMPANY_LOGO(WCPY,LOGO)
Variable Instance WCPY Using C_COMPANY
Value Blbfile LOGO
Local Blbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File ABLOB [F:ABB]
If WCPY.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]LOGO
 Raz [ABB]
 Call INICRE(WCPY) From ASYRSUB
 [F:ABB]CODBLB = "LOGO"
 [F:ABB]IDENT1 = WCPY.CPY
 [F:ABB]IDENT2 = ""
 [F:ABB]IDENT3 = ""
 [F:ABB]BLOB = [L]LOGO
 [L]WATYP = 'ATYPE9-1'
 [L]WCNT = 'image'
 [F:ABB]CNTTYP = [L]WATYP
 [F:ABB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
 Write [F:ABB]
 If fstat
  Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WCPY.ASTALIN=[V]CST_ADEL
 Read [F:ABB]ABB0 ="LOGO";WCPY.CPY;"";""
 If !fstat
  Delete [F:ABB]
  If fstat
   Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WCPY.ASTALIN=[V]CST_ALL or WCPY.ASTALIN=[V]CST_AUPD
 If fmet WCPY.AGETATTRIBUTE("LOGO","$isLoaded")="true"
  Read [F:ABB]ABB0 ="LOGO";WCPY.CPY;"";""
  If !fstat & [L]WEMPTY<>[L]LOGO
   Call INIUPD(WCPY) From ASYRSUB
   [F:ABB]BLOB = [L]LOGO
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:ABB]CNTTYP = [L]WATYP
   [F:ABB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Rewrite [F:ABB]
   If fstat
    Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]LOGO
   Delete [F:ABB]
   If fstat
    Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]LOGO
   Raz [ABB]
   Call INICRE(WCPY) From ASYRSUB
   [ABB]CODBLB = "LOGO"
   [ABB]IDENT1 = WCPY.CPY
   [ABB]IDENT2 = ""
   [ABB]IDENT3 = ""
   [F:ABB]BLOB = [L]LOGO
   [L]WATYP = 'ATYPE9-1'
   [L]WCNT = 'image'
   [F:ABB]CNTTYP = [L]WATYP
   [F:ABB]TYPBLB = func ASYRLOB.F_CNTTYP_TO_AML7806([L]WCNT)
   Write [F:ABB]
   If fstat
    Call FSTA("CPY",WCPY,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:ABB]
End 0



