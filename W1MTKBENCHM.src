#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MTKBENCHM 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "12:53:59"
A_USER  = "ADMIN"
A_STAMP = "20180326125359"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If GFMTDIE(1)<>""
    Chgfmt CCE1 With GFMTDIE(1)
   Else
    Chgfmt CCE1 With "-K:1X"
   Endif
   If GFMTDIE(2)<>""
    Chgfmt CCE2 With GFMTDIE(2)
   Else
    Chgfmt CCE2 With "-K:1X"
   Endif
   If GFMTDIE(3)<>""
    Chgfmt CCE3 With GFMTDIE(3)
   Else
    Chgfmt CCE3 With "-K:1X"
   Endif
   If GFMTDIE(4)<>""
    Chgfmt CCE4 With GFMTDIE(4)
   Else
    Chgfmt CCE4 With "-K:1X"
   Endif
   If GFMTDIE(5)<>""
    Chgfmt CCE5 With GFMTDIE(5)
   Else
    Chgfmt CCE5 With "-K:1X"
   Endif
   If GFMTDIE(6)<>""
    Chgfmt CCE6 With GFMTDIE(6)
   Else
    Chgfmt CCE6 With "-K:1X"
   Endif
   If GFMTDIE(7)<>""
    Chgfmt CCE7 With GFMTDIE(7)
   Else
    Chgfmt CCE7 With "-K:1X"
   Endif
   If GFMTDIE(8)<>""
    Chgfmt CCE8 With GFMTDIE(8)
   Else
    Chgfmt CCE8 With "-K:1X"
   Endif
   If GFMTDIE(9)<>""
    Chgfmt CCE9 With GFMTDIE(9)
   Else
    Chgfmt CCE9 With "-K:1X"
   Endif
   If GFMTDIE(10)<>""
    Chgfmt CCE10 With GFMTDIE(10)
   Else
    Chgfmt CCE10 With "-K:1X"
   Endif
   If GFMTDIE(11)<>""
    Chgfmt CCE11 With GFMTDIE(11)
   Else
    Chgfmt CCE11 With "-K:1X"
   Endif
   If GFMTDIE(12)<>""
    Chgfmt CCE12 With GFMTDIE(12)
   Else
    Chgfmt CCE12 With "-K:1X"
   Endif
   If GFMTDIE(13)<>""
    Chgfmt CCE13 With GFMTDIE(13)
   Else
    Chgfmt CCE13 With "-K:1X"
   Endif
   If GFMTDIE(14)<>""
    Chgfmt CCE14 With GFMTDIE(14)
   Else
    Chgfmt CCE14 With "-K:1X"
   Endif
   If GFMTDIE(15)<>""
    Chgfmt CCE15 With GFMTDIE(15)
   Else
    Chgfmt CCE15 With "-K:1X"
   Endif
   If GFMTDIE(16)<>""
    Chgfmt CCE16 With GFMTDIE(16)
   Else
    Chgfmt CCE16 With "-K:1X"
   Endif
   If GFMTDIE(17)<>""
    Chgfmt CCE17 With GFMTDIE(17)
   Else
    Chgfmt CCE17 With "-K:1X"
   Endif
   If GFMTDIE(18)<>""
    Chgfmt CCE18 With GFMTDIE(18)
   Else
    Chgfmt CCE18 With "-K:1X"
   Endif
   If GFMTDIE(19)<>""
    Chgfmt CCE19 With GFMTDIE(19)
   Else
    Chgfmt CCE19 With "-K:1X"
   Endif
   If GFMTDIE(20)<>""
    Chgfmt CCE20 With GFMTDIE(20)
   Else
    Chgfmt CCE20 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MTKBENCHM [MBM]
Gosub HORODAT
Local Inpbox "MTKBENCHM" From GFONCTION At A_STAMP With A_WINDPREV Mask [MBM] As [SIM_]
Grizo [MBM]5
Grizo [MBM]7
Grizo [MBM]10
Grizo [MBM]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MBM]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=31 : Y1(0)=1 : Y2(0)=6
X1(1)=1 : X2(1)=31 : Y1(1)=7 : Y2(1)=8
X1(2)=32 : X2(2)=125 : Y1(2)=1 : Y2(2)=8
X1(3)=1 : X2(3)=125 : Y1(3)=9 : Y2(3)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_FCY From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1MTKBENCHM
Onevent INIT_AREA Call D_FCY(zc) From W1MTKBENCHM
Return

Subprog D_FCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]FCY,indice)=0
 VALEUR = GFCYDEF(8)
Endif
Gosub _AFF
End

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","E",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "E"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1MTKBENCHM
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_ENDDATSTR
Onevent BEFORE_AREA Gosub AV_ENDDATSTR From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_ENDDATSTR From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_ENDDATSTR(zc) From W1MTKBENCHM
Return

$AV_ENDDATSTR
## Action ADATRELI
Call INIDAT(zc,[M]ENDDATSTRF) From ADATREL
Chgfmt [M]ENDDATSTR(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDATSTR(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDDATSTR(zc) From W1MTKBENCHM
Gosub _AFF
End

$AMM_ENDDATSTR
Call AM_ENDDATSTR(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATSTR(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]ENDDATSTRF) From ADATREL
If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 28769 : Endif
If !mkstat
 ## Action STD
 Call AM_ENDDATSTR(VALEUR) From FUNBENCHM
 If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 28769 : Endif
Endif
Gosub _AFF
End

Subprog B1_ENDDATSTR(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]ENDDATSTRF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]ENDDATSTRF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ENDDATEND
Onevent BEFORE_AREA Gosub AV_ENDDATEND From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_ENDDATEND From W1MTKBENCHM
Onevent CONTROL Call C_ENDDATEND(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_ENDDATEND(zc) From W1MTKBENCHM
Return

$AV_ENDDATEND
## Action ADATRELI
Call INIDAT(zc,[M]ENDDATENDF) From ADATREL
Chgfmt [M]ENDDATEND(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDATEND(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDDATEND(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDATEND(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 28770 : Endif
Gosub _AFF
End

$AMM_ENDDATEND
Call AM_ENDDATEND(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]ENDDATENDF) From ADATREL
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 28770 : Endif
Gosub _AFF
End

Subprog B1_ENDDATEND(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]ENDDATENDF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]ENDDATENDF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_FILTMAT
Onevent INIT_AREA Call D_FILTMAT(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_FILTMAT(zc) From W1MTKBENCHM
Return

Subprog D_FILTMAT(VALEUR)
Variable Integer VALEUR
If varinit([M]FILTMAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FILTMAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRHE
Onevent CONTROL Call C_WRHE(zc) From W1MTKBENCHM
Onevent INIT_AREA Call D_WRHE(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WRHE(zc) From W1MTKBENCHM
Return

Subprog D_WRHE(VALEUR)
Variable Char    VALEUR()
If varinit([M]WRHE,indice)=0
 ## Action WRHINIT2
 Call WRHINIT2(VALEUR,[M]FCY,8) From STKWRH
Endif
Gosub _AFF
End

Subprog AS_WRHE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WRHE(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WRHE(INDIC) = VALEUR
 Affzo WRHE(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WRHE(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WRHE(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M]FCY,GWRHOBY) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRHE" : GZNUM = 281 : Endif
Gosub _AFF
End

Subprog S_WRHE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M]FCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUMD
Onevent CONTROL Call C_WMFGNUMD(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WMFGNUMD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WMFGNUMD From W1MTKBENCHM
Return

Subprog AS_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WMFGNUMD(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WMFGNUMD(INDIC) = VALEUR
 Affzo WMFGNUMD(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WMFGNUMD(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Endif
Gosub _AFF
End

$AMM_WMFGNUMD
Call AM_WMFGNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WMFGNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WMFGNUMD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Gosub _AFF
End

Subprog S_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBM]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "3"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUMF
Onevent CONTROL Call C_WMFGNUMF(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WMFGNUMF(zc) From W1MTKBENCHM
Return

Subprog AS_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WMFGNUMF(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WMFGNUMF(INDIC) = VALEUR
 Affzo WMFGNUMF(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WMFGNUMF(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_WMFGNUMF(VALEUR) From FUNBENCHM
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBM]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "3"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WOPENUMD
Onevent BEFORE_INPUT Call AS_WOPENUMD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WOPENUMD From W1MTKBENCHM
Onevent CONTROL Call C_WOPENUMD(zc) From W1MTKBENCHM
Return

Subprog AS_WOPENUMD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WOPENUMD(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WOPENUMD(INDIC) = VALEUR
 Affzo WOPENUMD(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_WOPENUMD(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_WOPENUMD
Call AM_WOPENUMD(zc)
If !mkstat & GOBJET
 zoncou = "WOPENUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WOPENUMD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WOPENUMD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WOPENUMD" : GZNUM = 2296 : Endif
Gosub _AFF
End

$ON_WOPENUMF
Onevent BEFORE_INPUT Call AS_WOPENUMF(zc) From W1MTKBENCHM
Onevent CONTROL Call C_WOPENUMF(zc) From W1MTKBENCHM
Return

Subprog AS_WOPENUMF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WOPENUMF(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WOPENUMF(INDIC) = VALEUR
 Affzo WOPENUMF(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_WOPENUMF(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_WOPENUMF(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WOPENUMF" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WITMRELD
Onevent CONTROL Call C_WITMRELD(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WITMRELD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WITMRELD From W1MTKBENCHM
Return

Subprog IB_WITMRELD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WITMRELD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WITMRELD(VALEUR)
## Action STD
Call AS_WITMRELD(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WITMRELD(INDIC) = VALEUR
 Affzo WITMRELD(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WITMRELD(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_WITMRELD(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WITMRELD(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_WITMRELD(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WITMRELD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WITMRELD" : GZNUM = 11093 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WITMRELD" : GZNUM = 11093 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WITMRELD" : GZNUM = 11093 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WITMRELD
Call AM_WITMRELD(zc)
If !mkstat & GOBJET
 zoncou = "WITMRELD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WITMRELD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WITMRELD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WITMRELD" : GZNUM = 11093 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWITMRELD)")>indice
 [M]WITMRELD(indice) = VALEUR
 Affzo ZWITMRELD(indice)
Endif
Gosub _AFF
End

Subprog S_WITMRELD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WITMRELD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WITMRELD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WITMRELD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWITMRELD
Onevent BEFORE_AREA Gosub AV_ZWITMRELD From W1MTKBENCHM
Return

$AV_ZWITMRELD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WITMRELD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WITMRELF
Onevent CONTROL Call C_WITMRELF(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WITMRELF(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WITMRELF From W1MTKBENCHM
Return

Subprog IB_WITMRELF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WITMRELF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WITMRELF(VALEUR)
## Action STD
Call AS_WITMRELF(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WITMRELF(INDIC) = VALEUR
 Affzo WITMRELF(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WITMRELF(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_WITMRELF(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WITMRELF(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_WITMRELF(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WITMRELF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WITMRELF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WITMRELF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WITMRELF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WITMRELF(VALEUR) From FUNBENCHM
   If mkstat : GERR = 1 : GZONE = "WITMRELF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WITMRELF
Call AM_WITMRELF(zc)
If !mkstat & GOBJET
 zoncou = "WITMRELF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WITMRELF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWITMRELF)")>indice
 [M]WITMRELF(indice) = VALEUR
 Affzo ZWITMRELF(indice)
Endif
Gosub _AFF
End

Subprog S_WITMRELF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WITMRELF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WITMRELF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WITMRELF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWITMRELF
Onevent BEFORE_AREA Gosub AV_ZWITMRELF From W1MTKBENCHM
Return

$AV_ZWITMRELF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WITMRELF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WBOMNUMD
Onevent CONTROL Call C_WBOMNUMD(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WBOMNUMD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WBOMNUMD From W1MTKBENCHM
Return

Subprog IB_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WBOMNUMD(VALEUR)
## Action STD
Call AS_WBOMNUMD(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WBOMNUMD(INDIC) = VALEUR
 Affzo WBOMNUMD(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WBOMNUMD(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_WBOMNUMD(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WBOMNUMD(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_WBOMNUMD(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WBOMNUMD" : GZNUM = 3966 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WBOMNUMD" : GZNUM = 3966 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!C",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WBOMNUMD" : GZNUM = 3966 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WBOMNUMD
Call AM_WBOMNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WBOMNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WBOMNUMD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WBOMNUMD" : GZNUM = 3966 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWBOMNUMD)")>indice
 [M]WBOMNUMD(indice) = VALEUR
 Affzo ZWBOMNUMD(indice)
Endif
Gosub _AFF
End

Subprog S_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!C"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WBOMNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWBOMNUMD
Onevent BEFORE_AREA Gosub AV_ZWBOMNUMD From W1MTKBENCHM
Return

$AV_ZWBOMNUMD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WBOMNUMD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WBOMNUMF
Onevent CONTROL Call C_WBOMNUMF(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WBOMNUMF(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WBOMNUMF From W1MTKBENCHM
Return

Subprog IB_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WBOMNUMF(VALEUR)
## Action STD
Call AS_WBOMNUMF(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WBOMNUMF(INDIC) = VALEUR
 Affzo WBOMNUMF(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WBOMNUMF(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_WBOMNUMF(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WBOMNUMF(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_WBOMNUMF(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WBOMNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WBOMNUMF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WBOMNUMF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WBOMNUMF(VALEUR) From FUNBENCHM
   If mkstat : GERR = 1 : GZONE = "WBOMNUMF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WBOMNUMF
Call AM_WBOMNUMF(zc)
If !mkstat & GOBJET
 zoncou = "WBOMNUMF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWBOMNUMF)")>indice
 [M]WBOMNUMF(indice) = VALEUR
 Affzo ZWBOMNUMF(indice)
Endif
Gosub _AFF
End

Subprog S_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WBOMNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWBOMNUMF
Onevent BEFORE_AREA Gosub AV_ZWBOMNUMF From W1MTKBENCHM
Return

$AV_ZWBOMNUMF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WBOMNUMF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WBOMALTD
Onevent BEFORE_INPUT Call AS_WBOMALTD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WBOMALTD From W1MTKBENCHM
Onevent CONTROL Call C_WBOMALTD(zc) From W1MTKBENCHM
Return

Subprog AS_WBOMALTD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
## Action STD
Call AS_WBOMALTD(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WBOMALTD(INDIC) = VALEUR
 Affzo WBOMALTD(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WBOMALTD(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WBOMALTD(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WBOMALTD(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TBO","!B",VALEUR,"2",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WBOMALTD" : GZNUM = 3964 : Endif
Gosub _AFF
End

$AMM_WBOMALTD
Call AM_WBOMALTD(zc)
If !mkstat & GOBJET
 zoncou = "WBOMALTD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WBOMALTD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WBOMALTD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WBOMALTD" : GZNUM = 3964 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWBOMALTD)")>indice
 [M]WBOMALTD(indice) = VALEUR
 Affzo ZWBOMALTD(indice)
Endif
Gosub _AFF
End

Subprog S_WBOMALTD(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELTBO
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELTBO"
 PARMSK(1) = [M]FCY
 PARMSK(2) = "2"
 Call S_TAB_NUM(VALEUR,PARMSK,"SELTBO","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog P_WBOMALTD(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = "2"
Call VISU("TBO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWBOMALTD
Onevent BEFORE_AREA Gosub AV_ZWBOMALTD From W1MTKBENCHM
Return

$AV_ZWBOMALTD
Call LECTEXTRA(zc,"TABBOMALT","TBOSHOAXX","2",num$([M]WBOMALTD(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_WBOMALTF
Onevent BEFORE_INPUT Call AS_WBOMALTF(zc) From W1MTKBENCHM
Onevent CONTROL Call C_WBOMALTF(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WBOMALTF From W1MTKBENCHM
Return

Subprog AS_WBOMALTF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
## Action STD
Call AS_WBOMALTF(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WBOMALTF(INDIC) = VALEUR
 Affzo WBOMALTF(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WBOMALTF(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WBOMALTF(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WBOMALTF(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TBO","!B",VALEUR,"2",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WBOMALTF" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_WBOMALTF(VALEUR) From FUNBENCHM
 If mkstat : GERR = 1 : GZONE = "WBOMALTF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_WBOMALTF
Call AM_WBOMALTF(zc)
If !mkstat & GOBJET
 zoncou = "WBOMALTF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WBOMALTF(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZWBOMALTF)")>indice
 [M]WBOMALTF(indice) = VALEUR
 Affzo ZWBOMALTF(indice)
Endif
Gosub _AFF
End

Subprog S_WBOMALTF(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELTBO
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELTBO"
 PARMSK(1) = [M]FCY
 PARMSK(2) = "2"
 Call S_TAB_NUM(VALEUR,PARMSK,"SELTBO","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog P_WBOMALTF(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = "2"
Call VISU("TBO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWBOMALTF
Onevent BEFORE_AREA Gosub AV_ZWBOMALTF From W1MTKBENCHM
Return

$AV_ZWBOMALTF
Call LECTEXTRA(zc,"TABBOMALT","TBOSHOAXX","2",num$([M]WBOMALTF(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_WITMREFD
Onevent CONTROL Call C_WITMREFD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WITMREFD From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WITMREFD(zc) From W1MTKBENCHM
Return

Subprog IB_WITMREFD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WITMREFD(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_WITMREFD(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_WITMREFD(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WITMREFD(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_WITMREFD(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WITMREFD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11249 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11249 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11249 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WITMREFD
Call AM_WITMREFD(zc)
If !mkstat & GOBJET
 zoncou = "WITMREFD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WITMREFD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WITMREFD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11249 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWITMREFD)")>indice
 [M]WITMREFD(indice) = VALEUR
 Affzo ZWITMREFD(indice)
Endif
Gosub _AFF
End

Subprog S_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WITMREFD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWITMREFD
Onevent BEFORE_AREA Gosub AV_ZWITMREFD From W1MTKBENCHM
Return

$AV_ZWITMREFD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WITMREFD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WITMREFF
Onevent CONTROL Call C_WITMREFF(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_WITMREFF(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WITMREFF From W1MTKBENCHM
Return

Subprog IB_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WITMREFF(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_WITMREFF(zc) From W1MTKBENCHM
Onkey   2 Titled GBOUTS Call S_WITMREFF(zc) From W1MTKBENCHM
Onkey 144 Titled GBOUTP Call P_WITMREFF(zc) From W1MTKBENCHM
Onkey 146 Titled GBOUTA Call SA_WITMREFF(zc) From W1MTKBENCHM
Gosub _AFF
End

Subprog C_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WITMREFF(VALEUR) From FUNBENCHM
   If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WITMREFF
Call AM_WITMREFF(zc)
If !mkstat & GOBJET
 zoncou = "WITMREFF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWITMREFF)")>indice
 [M]WITMREFF(indice) = VALEUR
 Affzo ZWITMREFF(indice)
Endif
Gosub _AFF
End

Subprog S_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWITMREFF
Onevent BEFORE_AREA Gosub AV_ZWITMREFF From W1MTKBENCHM
Return

$AV_ZWITMREFF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WITMREFF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WBOMSEQD
Onevent BEFORE_INPUT Call AS_WBOMSEQD(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_WBOMSEQD From W1MTKBENCHM
Return

Subprog AS_WBOMSEQD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WBOMSEQD(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WBOMSEQD(INDIC) = VALEUR
 Affzo WBOMSEQD(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_WBOMSEQD
Call AM_WBOMSEQD(zc)
If !mkstat & GOBJET
 zoncou = "WBOMSEQD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WBOMSEQD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WBOMSEQD(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WBOMSEQD" : GZNUM = 2275 : Endif
Gosub _AFF
End

$ON_WBOMSEQF
Onevent BEFORE_INPUT Call AS_WBOMSEQF(zc) From W1MTKBENCHM
Onevent CONTROL Call C_WBOMSEQF(zc) From W1MTKBENCHM
Return

Subprog AS_WBOMSEQF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WBOMSEQF(VALEUR) From FUNBENCHM
If mkstat=2
 [M]WBOMSEQF(INDIC) = VALEUR
 Affzo WBOMSEQF(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_WBOMSEQF(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_WBOMSEQF(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "WBOMSEQF" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WCDED
Return

$ON_WCDEF
Return

$ON_WPJTD
Return

$ON_WPJTF
Return

$ON_FORMULE
Return

$ON_TRSCODS
Onevent INIT_AREA Call D_TRSCODS(zc) From W1MTKBENCHM
Return

Subprog D_TRSCODS(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSCODS,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"","") From SUBADI
Endif
Gosub _AFF
End

$ON_CCECODS
Onevent INIT_AREA Call D_CCECODS(zc) From W1MTKBENCHM
Return

Subprog D_CCECODS(VALEUR)
Variable Integer VALEUR
If varinit([M]CCECODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MEMO
Return

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1MTKBENCHM
Onevent BEFORE_LINE Call AVANT_NBLIG From W1MTKBENCHM
Onevent AFTER_LINE Call APRES_NBLIG From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_NBLIG From W1MTKBENCHM
Onevent BEFORE_AREA Call AV_NBLIG From W1MTKBENCHM
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From FUNBENCHM
Endif
Gosub _AFF
End

Subprog AV_NBLIG
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBLIG" : Gosub TIT_COL From W3MTKBENCHM
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(22452,GBOUT1) From OBJDIV
Call TEXTE(17036,GBOUT2) From OBJDIV
Call TEXTE(3966,GBOUT3) From OBJDIV
Call TEXTE(12817,GBOUT4) From OBJDIV
Call TEXTE(10079,GBOUT5) From OBJDIV
Call TEXTE(17084,GBOUT6) From OBJDIV
Call TEXTE(3164,GBOUT7) From OBJDIV
Call TEXTE(12490,GBOUT8) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1MTKBENCHM
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1MTKBENCHM
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1MTKBENCHM
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1MTKBENCHM
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1MTKBENCHM
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1MTKBENCHM
Onkey 135 Titled GBOUT7 Call B7_NBLIG From W1MTKBENCHM
Onkey 136 Titled GBOUT8 Call B8_NBLIG From W1MTKBENCHM
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action MFMTRKSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MFMTRKSTA"
 PARMSK(1) = num$(nolign-1)
 PARMSK(2) = "MBM"
 Call SAISIE_NUM(BASPAG,PARMSK,"IMFMQTY","MFGWINLIB","XWIMFMQTY") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action MFMFICHMTK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MFMFICHMTK"
 PARMSK(1) = [M:MBM]MFGNUM(nolign-1)
 PARMSK(2) = num$([M:MBM]MFGLIN(nolign-1))
 PARMSK(3) = num$([M:MBM]BOMSEQ(nolign-1))
 PARMSK(4) = [M:MBM]ITMREF(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"IMFMW","MFGWINLIB","XWIMFMW") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC7A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC7A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB3_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = WCLE2
 Call OBJET_CHAR(OBJCLE,"BOD",WCLE1) From GOBJET
 ACTION = "BB3_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSSFC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSFC"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB4_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "1"
 PARMSK(2) = [M:MBM]FCY
 PARMSK(3) = [M:MBM]ITMREF(nolign-1)
 PARMSK(4) = ""
 Call CONSULT_NUM(BASPAG,"SFC",PARMSK) From GCONSULT
 ACTION = "BB4_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From FUNBENCHM
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action SAISTOSOR
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAISTOSOR"
Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
ACTION = "AAPRES_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
PARMSK(1) = "MBM"
PARMSK(2) = num$(nolign-1)
PARMSK(3) = num$([M:MBM]NBLIG)
PARMSK(4) = [M:MBM]ITMREF(nolign-1)
PARMSK(5) = [M:MBM]FCY
PARMSK(6) = "12"
Call TRAITE_NUM(BASPAG,PARMSK,"ISTOSOR","TRTSTOSOR","",1,"XYTRTSTOSOR") From GTRAITE
ACTION = "BAPRES_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
Gosub ACTSUB From GOBJSUB
GACTION = SAVACT
If mkstat : End : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB5_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = WCLE1
 Call OBJET_CHAR(OBJCLE,WOBJET,WCLE2) From GOBJET
 ACTION = "BB5_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISTOSOR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTOSOR"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB6_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "MBM"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = num$([M:MBM]NBLIG)
 PARMSK(4) = [M:MBM]ITMREF(nolign-1)
 PARMSK(5) = [M:MBM]FCY
 PARMSK(6) = "12"
 Call TRAITE_NUM(BASPAG,PARMSK,"ISTOSOR","TRTSTOSOR","",1,"XYTRTSTOSOR") From GTRAITE
 ACTION = "BB6_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B7_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSALL"
 PARMSK(1) = [M:MBM]FCY
 PARMSK(2) = "1"
 PARMSK(3) = [M:MBM]ITMREF(nolign-1)
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = "15"
 PARMSK(7) = "1"
 Call CONSULT_NUM(BASPAG,"ALL",PARMSK) From GCONSULT
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B8_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action ACLOB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ACLOB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB8_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MBM]MKMTEX(nolign-1)
 PARMSK(2) = "MKM"
 PARMSK(3) = "TRTX3TEX"
 PARMSK(4) = "MBM"
 PARMSK(5) = num$(nolign)
 PARMSK(6) = "1"
 Call TRAITE_NUM(BASPAG,PARMSK,"","ACLOB","ACLOB",3,"XYACLOB") From GTRAITE
 [M:MBM]MKMTEX(nolign-1) = PARMSK(1)
 ACTION = "BB8_NBLIG" : PROGSUB = "FUNBENCHM" : PROGSPE = "SPEBENCHM" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_IPTDAT
Onevent CONTROL Call C_IPTDAT(zc) From W1MTKBENCHM
Onevent INIT_AREA Call D_IPTDAT(zc) From W1MTKBENCHM
Onevent BEFORE_INPUT Call AS_IPTDAT(zc) From W1MTKBENCHM
Onevent BEFORE_AREA Gosub AV_IPTDAT From W1MTKBENCHM
Return

$AV_IPTDAT
Chgfmt [M]IPTDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_IPTDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]IPTDAT,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

Subprog AS_IPTDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo IPTDAT : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

Subprog C_IPTDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
If !mkstat
 ## Action CONTPER
 Call CONTPER(VALEUR,1,[M:MBM]FCY) From CPTSUB
 If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
 If !mkstat
  ## Action STD
  Call C_IPTDAT(VALEUR) From FUNBENCHM
  If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
  If !mkstat
   ## Action STKCTRIPT
   Call STKCTRIPT(VALEUR,[M:MBM]FCY,"1") From STKLIB
   If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$ON_MATTYP
Onevent BEFORE_INPUT Call AS_MATTYP(zc) From W1MTKBENCHM
Onevent AFTER_CHANGE Gosub AMM_MATTYP From W1MTKBENCHM
Onevent INIT_AREA Call D_MATTYP(zc) From W1MTKBENCHM
Onevent CONTROL Call C_MATTYP(zc) From W1MTKBENCHM
Return

Subprog D_MATTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]MATTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M]WINDIC(nolign-1) = 0 & GMODIF = 2)
 Affzo MATTYP : mkstat = 2
Endif
If !mkstat
 Call INICOMBO(2306) From COMBOS
 ## Action STD
 Call AS_MATTYP(VALEUR) From FUNBENCHM
 If mkstat=2
  [M]MATTYP(INDIC) = VALEUR
  Affzo MATTYP(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,2306,1))))
 Endif
 If !mkstat
  Discombo 0 From MATTYP(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From MATTYP(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_MATTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MATTYP" : GZNUM = 14698 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_MATTYP
Call AM_MATTYP(zc)
If !mkstat & GOBJET
 zoncou = "MATTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MATTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MATTYP(VALEUR) From FUNBENCHM
If mkstat : GERR = 1 : GZONE = "MATTYP" : GZNUM = 14698 : Endif
Gosub _AFF
End

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1MTKBENCHM
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W3MTKBENCHM
Return

$TIT_COL
Gosub TIT_COL From W3MTKBENCHM
Return


