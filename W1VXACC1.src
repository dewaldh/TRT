#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management VXACC1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:18:06"
A_USER  = "ADMIN"
A_STAMP = "20180828001806"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask VXACC1 [XAC1]
Gosub HORODAT
Local Inpbox "VXACC1" From GFONCTION At A_STAMP With A_WINDPREV Mask [XAC1] As [SIM_]
Grizo [XAC1]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [XAC1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=64 : Y1(0)=1 : Y2(0)=16
Return

$ON_WITMLISNUM
Onevent INIT_AREA Call D_WITMLISNUM(zc) From W1VXACC1
Return

Subprog D_WITMLISNUM(VALEUR)
Variable Char    VALEUR()
If varinit([M]WITMLISNUM,indice)=0
 VALEUR = mess(690,197,1)
Endif
Gosub _AFF
End

$ON_ITMLISNUM
Onevent CONTROL Call C_ITMLISNUM(zc) From W1VXACC1
Return

Subprog C_ITMLISNUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_ITMLISNUM(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "ITMLISNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WITMREF
Onevent INIT_AREA Call D_WITMREF(zc) From W1VXACC1
Return

Subprog D_WITMREF(VALEUR)
Variable Char    VALEUR()
If varinit([M]WITMREF,indice)=0
 VALEUR = mess(80,197,1)
Endif
Gosub _AFF
End

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1VXACC1
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1VXACC1
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1VXACC1
Return

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1VXACC1
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREF(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = GXAFCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = "234"
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WLOC
Onevent INIT_AREA Call D_WLOC(zc) From W1VXACC1
Return

Subprog D_WLOC(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOC,indice)=0
 VALEUR = mess(672,197,1)
Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1VXACC1
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1VXACC1
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1VXACC1
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_LOC(VALEUR) From VXACC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOCT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOCT"
 PARMSK(1) = GCUNFCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = "1234"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELLOCT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WLOT
Onevent INIT_AREA Call D_WLOT(zc) From W1VXACC1
Return

Subprog D_WLOT(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOT,indice)=0
 VALEUR = mess(43,197,1)
Endif
Gosub _AFF
End

$ON_LOT
Onevent CONTROL Call C_LOT(zc) From W1VXACC1
Onevent AFTER_AREA Call AP_LOT(zc) From W1VXACC1
Return

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LOT(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog AP_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKINIECC
Call STKINIECC([M]ITMREF,VALEUR,"XAC1",2,1,0,2,func TRTX3FNC.VALFLD_C("[M]ECCVALMAJ")
&,"ECCVALMAJ","ECCVALMIN","","",1,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WSLO
Onevent INIT_AREA Call D_WSLO(zc) From W1VXACC1
Return

Subprog D_WSLO(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSLO,indice)=0
 VALEUR = mess(704,197,1)
Endif
Gosub _AFF
End

$ON_SLO
Onevent CONTROL Call C_SLO(zc) From W1VXACC1
Return

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SLO(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WMAJ
Onevent INIT_AREA Call D_WMAJ(zc) From W1VXACC1
Return

Subprog D_WMAJ(VALEUR)
Variable Char    VALEUR()
If varinit([M]WMAJ,indice)=0
 VALEUR = mess(832,197,1)
Endif
Gosub _AFF
End

$ON_WMIN
Onevent INIT_AREA Call D_WMIN(zc) From W1VXACC1
Return

Subprog D_WMIN(VALEUR)
Variable Char    VALEUR()
If varinit([M]WMIN,indice)=0
 VALEUR = mess(833,197,1)
Endif
Gosub _AFF
End

$ON_WSER
Onevent INIT_AREA Call D_WSER(zc) From W1VXACC1
Return

Subprog D_WSER(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSER,indice)=0
 VALEUR = mess(453,197,1)
Endif
Gosub _AFF
End

$ON_SERNUM
Onevent CONTROL Call C_SERNUM(zc) From W1VXACC1
Return

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SERNUM(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WPCU
Onevent INIT_AREA Call D_WPCU(zc) From W1VXACC1
Return

Subprog D_WPCU(VALEUR)
Variable Char    VALEUR()
If varinit([M]WPCU,indice)=0
 VALEUR = mess(397,198,1)
Endif
Gosub _AFF
End

$ON_PCU
Onevent CONTROL Call C_PCU(zc) From W1VXACC1
Onevent AFTER_CHANGE Gosub AMM_PCU From W1VXACC1
Onevent BEFORE_INPUT Call AS_PCU(zc) From W1VXACC1
Return

Subprog AS_PCU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PCU(zc) From W1VXACC1
Onkey 144 Titled GBOUTP Call P_PCU(zc) From W1VXACC1
Onkey 146 Titled GBOUTA Call SA_PCU(zc) From W1VXACC1
Gosub _AFF
End

Subprog C_PCU(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 0 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("TUN","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 0 : Endif
 If !mkstat
  ## Action STD
  Call C_PCU(VALEUR) From VXACC
  If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 0 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_PCU
Call AM_PCU(zc)
If !mkstat & GOBJET
 zoncou = "PCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCU(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 0 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZPCU)")>indice
 [M]PCU(indice) = VALEUR
 Affzo ZPCU(indice)
Endif
Gosub _AFF
End

Subprog S_PCU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELUOMN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELUOMN"
 PARMSK(1) = "1"
 PARMSK(2) = "1"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELUOMN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPCU
Onevent BEFORE_AREA Gosub AV_ZPCU From W1VXACC1
Return

$AV_ZPCU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]PCU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WSTA
Onevent INIT_AREA Call D_WSTA(zc) From W1VXACC1
Return

Subprog D_WSTA(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSTA,indice)=0
 VALEUR = mess(702,197,1)
Endif
Gosub _AFF
End

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1VXACC1
Onevent BEFORE_INPUT Call AS_STA(zc) From W1VXACC1
Return

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STA(zc) From W1VXACC1
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_STA(VALEUR) From VXACC
 If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 0 : Endif
 If !mkstat
  ## Action STKCTRSTA
  Call STKCTRSTA(VALEUR,"A*,Q*,R*",0,1,0,mkstat) From STKACT
  If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 0 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = "A*,Q*,R*"
 PARMSK(2) = "0"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WQTYPCU
Onevent INIT_AREA Call D_WQTYPCU(zc) From W1VXACC1
Return

Subprog D_WQTYPCU(VALEUR)
Variable Char    VALEUR()
If varinit([M]WQTYPCU,indice)=0
 VALEUR = mess(691,197,1)
Endif
Gosub _AFF
End

$ON_QTYPCU
Onevent BEFORE_AREA Gosub AV_QTYPCU From W1VXACC1
Return

$AV_QTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_WQTYPCUNEW
Onevent INIT_AREA Call D_WQTYPCUNEW(zc) From W1VXACC1
Return

Subprog D_WQTYPCUNEW(VALEUR)
Variable Char    VALEUR()
If varinit([M]WQTYPCUNEW,indice)=0
 VALEUR = mess(692,197,1)
Endif
Gosub _AFF
End

$ON_QTYPCUNEW
Onevent BEFORE_AREA Gosub AV_QTYPCUNEW From W1VXACC1
Onevent CONTROL Call C_QTYPCUNEW(zc) From W1VXACC1
Onevent AFTER_CHANGE Gosub AMM_QTYPCUNEW From W1VXACC1
Return

$AV_QTYPCUNEW
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCUNEW(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog C_QTYPCUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYPCUNEW(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_QTYPCUNEW
Call AM_QTYPCUNEW(zc)
If !mkstat & GOBJET
 zoncou = "QTYPCUNEW" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYPCUNEW(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYPCUNEW(VALEUR) From VXACC
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WZERSTOFLG
Onevent INIT_AREA Call D_WZERSTOFLG(zc) From W1VXACC1
Return

Subprog D_WZERSTOFLG(VALEUR)
Variable Char    VALEUR()
If varinit([M]WZERSTOFLG,indice)=0
 VALEUR = mess(135,190,1)
Endif
Gosub _AFF
End

$ON_ZERSTOFLG
Onevent INIT_AREA Call D_ZERSTOFLG(zc) From W1VXACC1
Return

Subprog D_ZERSTOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERSTOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CUMALLQTY
Onevent BEFORE_AREA Gosub AV_CUMALLQTY From W1VXACC1
Return

$AV_CUMALLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_QTYPCUOLD
Onevent BEFORE_AREA Gosub AV_QTYPCUOLD From W1VXACC1
Return

$AV_QTYPCUOLD
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$CHG_STY
Return


