#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SLS1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:12:53"
A_USER  = "ADMIN"
A_STAMP = "20180828001253"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SLS1 [SLS1]
Gosub HORODAT
Local Inpbox "SLS1" From GFONCTION At A_STAMP With A_WINDPREV Mask [SLS1] As [SIM_]
Grizo [SLS1]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SLS1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=25
Return

$ON_LOTCOD
Onevent INIT_AREA Call D_LOTCOD(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1SLS1
Onevent CONTROL Call C_LOTCOD(zc) From W1SLS1
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_LOTCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "LOTCOD" : GZNUM = 2721 : Endif
Gosub _AFF
End

$ON_LOTSCR
Onevent INIT_AREA Call D_LOTSCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_LOTSCR(zc) From W1SLS1
Return

Subprog D_LOTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOCOD
Onevent INIT_AREA Call D_SLOCOD(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_SLOCOD(zc) From W1SLS1
Onevent CONTROL Call C_SLOCOD(zc) From W1SLS1
Return

Subprog D_SLOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_SLOCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "SLOCOD" : GZNUM = 19213 : Endif
Gosub _AFF
End

$ON_SLOSCR
Onevent INIT_AREA Call D_SLOSCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_SLOSCR(zc) From W1SLS1
Return

Subprog D_SLOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AQRCOD
Onevent INIT_AREA Call D_AQRCOD(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_AQRCOD(zc) From W1SLS1
Onevent CONTROL Call C_AQRCOD(zc) From W1SLS1
Return

Subprog D_AQRCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]AQRCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AQRCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_AQRCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "AQRCOD" : GZNUM = 1287 : Endif
Gosub _AFF
End

$ON_AQRSCR
Onevent INIT_AREA Call D_AQRSCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_AQRSCR(zc) From W1SLS1
Return

Subprog D_AQRSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]AQRSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AQRSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCOD
Onevent INIT_AREA Call D_LOCCOD(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_LOCCOD(zc) From W1SLS1
Onevent CONTROL Call C_LOCCOD(zc) From W1SLS1
Return

Subprog D_LOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_LOCCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "LOCCOD" : GZNUM = 3623 : Endif
Gosub _AFF
End

$ON_LOCSCR
Onevent INIT_AREA Call D_LOCSCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_LOCSCR(zc) From W1SLS1
Return

Subprog D_LOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERCOD
Onevent INIT_AREA Call D_SERCOD(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_SERCOD(zc) From W1SLS1
Onevent CONTROL Call C_SERCOD(zc) From W1SLS1
Return

Subprog D_SERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_SERCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "SERCOD" : GZNUM = 53135 : Endif
Gosub _AFF
End

$ON_SERSCR
Onevent INIT_AREA Call D_SERSCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_SERSCR(zc) From W1SLS1
Return

Subprog D_SERSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERECOD
Onevent BEFORE_INPUT Call AS_SERECOD(zc) From W1SLS1
Onevent INIT_AREA Call D_SERECOD(zc) From W1SLS1
Onevent CONTROL Call C_SERECOD(zc) From W1SLS1
Return

Subprog D_SERECOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERECOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERECOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_SERECOD(VALEUR) From SUBSLS1
If mkstat=2
 [M]SERECOD(INDIC) = VALEUR
 Affzo SERECOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From SERECOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SERECOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SERECOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "SERECOD" : GZNUM = 53136 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SERESCR
Onevent INIT_AREA Call D_SERESCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_SERESCR(zc) From W1SLS1
Return

Subprog D_SERESCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERESCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERESCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD01
Onevent INIT_AREA Call D_IDECOD01(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_IDECOD01(zc) From W1SLS1
Onevent CONTROL Call C_IDECOD01(zc) From W1SLS1
Return

Subprog D_IDECOD01(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD01,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD01(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_IDECOD01(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "IDECOD01" : GZNUM = 18110 : Endif
Gosub _AFF
End

$ON_IDESCR01
Onevent INIT_AREA Call D_IDESCR01(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_IDESCR01(zc) From W1SLS1
Return

Subprog D_IDESCR01(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR01,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR01(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD02
Onevent INIT_AREA Call D_IDECOD02(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_IDECOD02(zc) From W1SLS1
Onevent CONTROL Call C_IDECOD02(zc) From W1SLS1
Return

Subprog D_IDECOD02(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD02,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD02(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_IDECOD02(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "IDECOD02" : GZNUM = 3191 : Endif
Gosub _AFF
End

$ON_IDESCR02
Onevent INIT_AREA Call D_IDESCR02(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_IDESCR02(zc) From W1SLS1
Return

Subprog D_IDESCR02(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR02,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR02(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MVTDESCOD
Onevent INIT_AREA Call D_MVTDESCOD(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_MVTDESCOD(zc) From W1SLS1
Onevent CONTROL Call C_MVTDESCOD(zc) From W1SLS1
Return

Subprog D_MVTDESCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MVTDESCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MVTDESCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_MVTDESCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MVTDESCOD" : GZNUM = 24521 : Endif
Gosub _AFF
End

$ON_MVTDESSCR
Onevent INIT_AREA Call D_MVTDESSCR(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_MVTDESSCR(zc) From W1SLS1
Return

Subprog D_MVTDESSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]MVTDESSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MVTDESSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRHCOD1
Onevent BEFORE_INPUT Call AS_WRHCOD1(zc) From W1SLS1
Onevent INIT_AREA Call D_WRHCOD1(zc) From W1SLS1
Onevent CONTROL Call C_WRHCOD1(zc) From W1SLS1
Return

Subprog D_WRHCOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHCOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WRHCOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_WRHCOD1(VALEUR) From SUBSLS1
If mkstat=2
 [M]WRHCOD1(INDIC) = VALEUR
 Affzo WRHCOD1(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From WRHCOD1(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From WRHCOD1(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_WRHCOD1(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_WRHSCR1
Onevent INIT_AREA Call D_WRHSCR1(zc) From W1SLS1
Onevent BEFORE_INPUT Call AS_WRHSCR1(zc) From W1SLS1
Return

Subprog D_WRHSCR1(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHSCR1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WRHSCR1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CCECODS
Onevent INIT_AREA Call D_CCECODS(zc) From W1SLS1
Return

Subprog D_CCECODS(VALEUR)
Variable Integer VALEUR
If varinit([M]CCECODS,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

$CHG_STY
Return


