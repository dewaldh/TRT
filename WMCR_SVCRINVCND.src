#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## CRUD-CLASSE ## SVCRINVCND
# 2018-08-27 12:50:26 100


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SVCRINVCND [SVIC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SVCRINVCND") From ASYRCOM : Endif
Local Instance SVCRINVCND Using C_SVCRINVCND

If !SILENCE : Call TRACE("3 --> New Instance C_SVCRINVCND") From ASYRCOM : Endif
SVCRINVCND = NewInstance C_SVCRINVCND AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SVIC_]SVIC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SVCRINVCND") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.AREAD([SVIC_]VCRTYP,[SVIC_]VCRNUMORI,[SVIC_]VCRLINORI,[SVIC_]VCRSEQORI))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SVCRINVCND.VCRTYP ="-num$(SVCRINVCND.VCRTYP)) From ASYRCOM
 Call TRACE("SVCRINVCND.VCRNUMORI ="-num$(SVCRINVCND.VCRNUMORI)) From ASYRCOM
 Call TRACE("SVCRINVCND.VCRLINORI ="-num$(SVCRINVCND.VCRLINORI)) From ASYRCOM
 Call TRACE("SVCRINVCND.VCRSEQORI ="-num$(SVCRINVCND.VCRSEQORI)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SVCRINVCND.AKEYS)
  Call TRACE("-"-num$(I)-":"-SVCRINVCND.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SVIC_]
FreeGroup SVCRINVCND
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SVCRINVCND,ACLE,ASTATUS,_ETAG)
Variable Instance SVCRINVCND Using C_SVCRINVCND
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _VCRTYP
Local Char _VCRNUMORI(20)
Local Integer _VCRLINORI
Local Integer _VCRSEQORI
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRNUMORI = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_VCRLINORI = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_VCRSEQORI = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File SVCRINVCND [SVIC]
Default File [F:SVIC]
Read [F:SVIC]SVIC0 = [L]_VCRTYP;[L]_VCRNUMORI;[L]_VCRLINORI;[L]_VCRSEQORI
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SVIC]UPDTICK)>0
 [L]_ETAG = num$([F:SVIC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SVCRINVCND,ACLE,ASTATUS)
Variable Instance SVCRINVCND Using C_SVCRINVCND
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _VCRTYP
Local Char _VCRNUMORI(20)
Local Integer _VCRLINORI
Local Integer _VCRSEQORI
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRNUMORI = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_VCRLINORI = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_VCRSEQORI = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.AREAD([L]_VCRTYP,[L]_VCRNUMORI,[L]_VCRLINORI,[L]_VCRSEQORI))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SVCRINVCND,_VCRTYP,_VCRNUMORI,_VCRLINORI,_VCRSEQORI,ASTATUS)
Variable Instance SVCRINVCND Using C_SVCRINVCND
Value Tinyint _VCRTYP
Value Char _VCRNUMORI
Value Integer _VCRLINORI
Value Integer _VCRSEQORI
Variable Integer ASTATUS

If SVCRINVCND = null : End : Endif

Gosub AVARIABLES From WMC00SVCRINVCND
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SVCRINVCND.APARENT=null
 [L]A_I = SVCRINVCND.freeSnapshot
 SVCRINVCND.snapshotEnabled = 0
 SVCRINVCND.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SVCRINVCND.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SVCRINVCND.APARENT=null
 SVCRINVCND.snapshotEnabled = 1
 SVCRINVCND.setAccessorEnabled = 1
Endif
LogicClose File [SVIC] ,[SVICD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND._ACTION_PARAM("AREAD_BEFORE",[L]_VCRTYP,[L]_VCRNUMORI,[L]_VCRLINORI,[L]_VCRSEQORI))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:SVIC]
Read [F:SVIC]SVIC0 = [L]_VCRTYP;[L]_VCRNUMORI;[L]_VCRLINORI;[L]_VCRSEQORI
If fstat
[L]A_ERROR = num$([L]_VCRTYP)+"~"+[L]_VCRNUMORI+"~"+num$([L]_VCRLINORI)+"~"+num$([L]_VCRSEQORI)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SVCRINVCND,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:SVIC]AUUID)>0 & [F:SVIC]AUUID=NullUuid
 [F:SVIC]AUUID = getUuid
Endif
SetInstance SVCRINVCND With [F:SVIC]
SVCRINVCND.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SVICD]
 [L]A_N2=0
 For [F:SVICD]SVICD0 Where VCRTYP=[F:SVIC]VCRTYP & VCRNUMORI=[F:SVIC]VCRNUMORI & VCRLINORI=[F:SVIC]VCRLINORI & VCRSEQORI=[F:SVIC]VCRSEQORI
  [L]A_N2 +=1
  SVCRINVCND.VCRINVCNDLIN(A_N2) = NewInstance  C_SVCRINVCNDD(SVCRINVCND.ACTX,NullUuid,[L]A_N2,SVCRINVCND,"VCRINVCNDLIN") AllocGroup SVCRINVCND
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.VCRINVCNDLIN(A_N2).ADDINSTANCE_BOUND)
  Callmet SVCRINVCND.VCRINVCNDLIN(A_N2).AREAD([F:SVICD]VCRTYP,[F:SVICD]VCRNUMORI,[F:SVICD]VCRLINORI,[F:SVICD]VCRSEQORI,[F:SVICD]VCRINVCNDLIN)
  SVCRINVCND.VCRINVCNDLIN(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.VCRINVCNDLIN(A_N2).ASETATTRIBUTE("VCRTYP","$namProParent","VCRTYP"))
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.VCRINVCNDLIN(A_N2).ASETATTRIBUTE("VCRNUMORI","$namProParent","VCRNUMORI"))
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.VCRINVCNDLIN(A_N2).ASETATTRIBUTE("VCRLINORI","$namProParent","VCRLINORI"))
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.VCRINVCNDLIN(A_N2).ASETATTRIBUTE("VCRSEQORI","$namProParent","VCRSEQORI"))
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.VCRINVCNDLIN(A_N2).ASETATTRIBUTE("VCRINVCNDLIN","$isDisabled","true"))
 Next SVICD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="SVCRINVCND" & ZONE="DESAXX" & IDENT1="" & IDENT2=""
 Call ASETTEXTRA(SVCRINVCND.AXX,SVCRINVCND.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 SVCRINVCND.AXX(maxtab(SVCRINVCND.AXX)).FLG = 0
Next AXX
If !len(fmet SVCRINVCND.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(SVCRINVCND.AXX,SVCRINVCND.AllocGrp(),"DESAXX",
& fmet SVCRINVCND.AGETTEXTRALAN("DESAXX",SVCRINVCND.ACTX.AFOLD.ALANGDEF),
& SVCRINVCND.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="SVCRINVCND" & ZONE="SHOAXX" & IDENT1="" & IDENT2=""
 Call ASETTEXTRA(SVCRINVCND.AXX,SVCRINVCND.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 SVCRINVCND.AXX(maxtab(SVCRINVCND.AXX)).FLG = 0
Next AXX
If !len(fmet SVCRINVCND.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(SVCRINVCND.AXX,SVCRINVCND.AllocGrp(),"SHOAXX",
& fmet SVCRINVCND.AGETTEXTRALAN("SHOAXX",SVCRINVCND.ACTX.AFOLD.ALANGDEF),
& SVCRINVCND.ACTX.LAN) From ASYRSUB
Endif

Return



