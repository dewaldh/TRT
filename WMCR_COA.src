#<AdxTL>@(#)0.0.0.0 $Revision$Class Chart code
# Supervisor
## CRUD-CLASSE ## COA
# 2018-08-27 12:29:54 202


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GCOA [COA_]

If !SILENCE : Call TRACE("2 --> Local Instance C_COA") From ASYRCOM : Endif
Local Instance COA Using C_COA

If !SILENCE : Call TRACE("3 --> New Instance C_COA") From ASYRCOM : Endif
COA = NewInstance C_COA AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [COA_]COA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of COA") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet COA.AREAD([COA_]COA))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("COA.COA ="-num$(COA.COA)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(COA.AKEYS)
  Call TRACE("-"-num$(I)-":"-COA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [COA_]
FreeGroup COA
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(COA,ACLE,ASTATUS,_ETAG)
Variable Instance COA Using C_COA
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COA(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COA = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File GCOA [COA]
Default File [F:COA]
Read [F:COA]COA0 = [L]_COA
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:COA]UPDTICK)>0
 [L]_ETAG = num$([F:COA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(COA,ACLE,ASTATUS)
Variable Instance COA Using C_COA
Value Char ACLE
Variable Integer ASTATUS
Local Char _COA(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COA = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet COA.AREAD([L]_COA))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(COA,_COA,ASTATUS)
Variable Instance COA Using C_COA
Value Char _COA
Variable Integer ASTATUS

If COA = null : End : Endif

Gosub AVARIABLES From WMC00COA
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If COA.APARENT=null
 [L]A_I = COA.freeSnapshot
 COA.snapshotEnabled = 0
 COA.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif


$AREAD_END
LogicClose File [COA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet COA._ACTION_PARAM("AREAD_BEFORE",[L]_COA))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:COA]
Read [F:COA]COA0 = [L]_COA
If fstat
[L]A_ERROR = [L]_COA
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(COA,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:COA]AUUID)>0 & [F:COA]AUUID=NullUuid
 [F:COA]AUUID = getUuid
Endif
SetInstance COA With [F:COA]
COA.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet COA.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="GCOA" & ZONE="COLHEA" & IDENT1=COA.COA & IDENT2=""
 Call ASETTEXTRA(COA.AXX,COA.AllocGrp(),"COLHEA",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 COA.AXX(maxtab(COA.AXX)).FLG = 0
Next AXX
If !len(fmet COA.AGETTEXTRA("COLHEA"))
 Call ASETTEXTRA(COA.AXX,COA.AllocGrp(),"COLHEA",
& fmet COA.AGETTEXTRALAN("COLHEA",COA.ACTX.AFOLD.ALANGDEF),
& COA.ACTX.LAN) From ASYRSUB
Endif

Return



