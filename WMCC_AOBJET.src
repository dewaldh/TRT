#<AdxTL>@(#)0.0.0.0 $Revision$Class Basic objects  
# Supervisor
## CRUD-CLASSE ## AOBJET
# 2018-08-27 12:21:27 731


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(AOBJET,ASTATUS)
Variable Instance AOBJET Using C_AOBJET
Variable Integer ASTATUS

If AOBJET = null : End : Endif

Gosub _AVARIABLES From WMC00AOBJET

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_AOBJET

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(AOBJET,ASTATUS)
Variable Instance AOBJET Using C_AOBJET
Variable Integer ASTATUS

If AOBJET = null : End : Endif

Gosub AVARIABLES From WMC00AOBJET
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_AOBJET
Else
 Gosub AINSERT_AOBJET
Endif

Gosub _AINSERT_AFTER
[L]A_I = AOBJET.freeSnapshot
AOBJET.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet AOBJET._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet AOBJET._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet AOBJET._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If AOBJET.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AOBJET.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet AOBJET.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.IMP)
 If AOBJET.IMP([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.IMP([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.OPTCN)
 If AOBJET.OPTCN([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.OPTCN([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.SCR)
 If AOBJET.SCR([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.SCR([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.VUE)
 If AOBJET.VUE([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.VUE([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If AOBJET.AOL(A_N2) <> null
& and !find(AOBJET.AOL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AOBJET.AOT) : # AOBJTAB -- 3
 If AOBJET.AOT(A_N2) <> null
& and !find(AOBJET.AOT(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
A_N2=1
If AOBJET.AOL(A_N2) <> null
& and !find(AOBJET.AOL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AOBJET.AOT) : # AOBJTAB -- 3
 If AOBJET.AOT(A_N2) <> null
& and !find(AOBJET.AOT(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(AOBJET.IMP)
 If AOBJET.IMP([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.IMP([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.OPTCN)
 If AOBJET.OPTCN([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.OPTCN([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.SCR)
 If AOBJET.SCR([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.SCR([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJET.VUE)
 If AOBJET.VUE([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.VUE([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AOBJET.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_AOBJET
Trbegin [F:AOB]
 Gosub AINSERT_AOBJET
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_AOBJET
Raz [F:AOB]
[L]ASTATUS = max([L]ASTATUS,fmet AOBJET.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00AOBJET._MAJSQL_AOBJET(AOBJET))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
A_N2=1
If AOBJET.AOL(A_N2) <> null and 
& AOBJET.AOL(A_N2).ASTALIN=[V]CST_ALL
AOBJET.AOL(A_N2).ASTALIN = [V]CST_AUPD
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(AOBJET.AOT)
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet AOBJET.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If AOBJET.snapshotEnabled=1
 [L]A_RETIK = AOBJET.revertUpdTick
Endif
[L]ASTATUS = max(fmet AOBJET.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(AOBJET.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 AOBJET.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(AOBJET.IMP)
 If AOBJET.IMP([L]A_I)<>null
  If AOBJET.IMP([L]A_I).ASTALIN=[V]CST_ADEL or AOBJET.IMP([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AOBJET.IMP([L]A_I)
   AOBJET.IMP([L]A_I) = null
  Elsif AOBJET.IMP([L]A_I).ASTALIN <> [V]CST_ALL
   AOBJET.IMP([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
For [L]A_I=1 To maxtab(AOBJET.OPTCN)
 If AOBJET.OPTCN([L]A_I)<>null
  If AOBJET.OPTCN([L]A_I).ASTALIN=[V]CST_ADEL or AOBJET.OPTCN([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AOBJET.OPTCN([L]A_I)
   AOBJET.OPTCN([L]A_I) = null
  Elsif AOBJET.OPTCN([L]A_I).ASTALIN <> [V]CST_ALL
   AOBJET.OPTCN([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
For [L]A_I=1 To maxtab(AOBJET.SCR)
 If AOBJET.SCR([L]A_I)<>null
  If AOBJET.SCR([L]A_I).ASTALIN=[V]CST_ADEL or AOBJET.SCR([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AOBJET.SCR([L]A_I)
   AOBJET.SCR([L]A_I) = null
  Elsif AOBJET.SCR([L]A_I).ASTALIN <> [V]CST_ALL
   AOBJET.SCR([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
For [L]A_I=1 To maxtab(AOBJET.VUE)
 If AOBJET.VUE([L]A_I)<>null
  If AOBJET.VUE([L]A_I).ASTALIN=[V]CST_ADEL or AOBJET.VUE([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AOBJET.VUE([L]A_I)
   AOBJET.VUE([L]A_I) = null
  Elsif AOBJET.VUE([L]A_I).ASTALIN <> [V]CST_ALL
   AOBJET.VUE([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
Local Integer ASTATUS2
A_N2=1
If AOBJET.AOL(A_N2) <> null
 If AOBJET.AOL(A_N2).ASTALIN=[V]CST_ADEL or AOBJET.AOL(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance AOBJET.AOL(A_N2)
  AOBJET.AOL(A_N2) = null
 Elsif AOBJET.AOL(A_N2).ASTALIN <> [V]CST_ALL
  AOBJET.AOL(A_N2).ASTALIN = [V]CST_ALL
  For [L]A_I=1 To maxtab(AOBJET.AOL(A_N2).ASELCOL)
   If AOBJET.AOL(A_N2).ASELCOL([L]A_I)<>null
    If AOBJET.AOL(A_N2).ASELCOL([L]A_I).ASTALIN=[V]CST_ADEL or AOBJET.AOL(A_N2).ASELCOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
     FreeInstance AOBJET.AOL(A_N2).ASELCOL([L]A_I)
     AOBJET.AOL(A_N2).ASELCOL([L]A_I) = null
    Elsif AOBJET.AOL(A_N2).ASELCOL([L]A_I).ASTALIN <> [V]CST_ALL
     AOBJET.AOL(A_N2).ASELCOL([L]A_I).ASTALIN = [V]CST_ALL
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(AOBJET.AOT)
 If AOBJET.AOT(A_N2) <> null
  If AOBJET.AOT(A_N2).ASTALIN=[V]CST_ADEL or AOBJET.AOT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance AOBJET.AOT(A_N2)
   AOBJET.AOT(A_N2) = null
  Elsif AOBJET.AOT(A_N2).ASTALIN <> [V]CST_ALL
   AOBJET.AOT(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



