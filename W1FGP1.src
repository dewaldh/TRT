#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management FGP1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:01:34"
A_USER  = "ADMIN"
A_STAMP = "20180828000134"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask FGP1 [FGP1]
Gosub HORODAT
Local Inpbox "FGP1" From GFONCTION At A_STAMP With A_WINDPREV Mask [FGP1] As [SIM_]
Grizo [FGP1]5
Grizo [FGP1]10
Grizo [FGP1]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [FGP1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=80 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=80 : Y1(1)=3 : Y2(1)=17
X1(2)=1 : X2(2)=80 : Y1(2)=18 : Y2(2)=25
Return

$ON_GRP
Onevent CONTROL Call C_GRP(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_GRP(zc) From W1FGP1
Return

Subprog AS_GRP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_GRP(zc) From W1FGP1
Onkey 144 Titled GBOUTP Call P_GRP(zc) From W1FGP1
Onkey 146 Titled GBOUTA Call SA_GRP(zc) From W1FGP1
Gosub _AFF
End

Subprog C_GRP(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "GRP" : GZNUM = 19391 : Endif
If !mkstat
 ## Action CONTOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJW"
 PARMSK(1) = "FGP"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJW","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "GRP" : GZNUM = 19391 : Endif
Endif
Gosub _AFF
End

Subprog S_GRP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FGP"
PARMSK(2) = "$"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_GRP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FGP"
PARMSK(3) = "$"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_GRP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FGP",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_DESTRA
Onevent INIT_AREA Call D_DESTRA(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_DESTRA(zc) From W1FGP1
Return

Subprog IB_DESTRA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_DESTRA(VALEUR)
Variable Char    VALEUR()
If varinit([M]DESTRA,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"FUPGRP","DESTRA",[M]GRP,"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_DESTRA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_DESTRA(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_DESTRA(zc) From W1FGP1
Gosub _AFF
End

Subprog B1_DESTRA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_DESTRA" : PROGSUB = "SUBFGP" : PROGSPE = "SPEFGP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "FUPGRP"
 PARMSK(2) = "DESTRA"
 PARMSK(3) = [M]GRP
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_DESTRA" : PROGSUB = "SUBFGP" : PROGSPE = "SPEFGP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_SHOTRA
Onevent INIT_AREA Call D_SHOTRA(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_SHOTRA(zc) From W1FGP1
Return

Subprog IB_SHOTRA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_SHOTRA(VALEUR)
Variable Char    VALEUR()
If varinit([M]SHOTRA,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"FUPGRP","SHOTRA",[M]GRP,"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_SHOTRA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_SHOTRA(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_SHOTRA(zc) From W1FGP1
Gosub _AFF
End

Subprog B1_SHOTRA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_SHOTRA" : PROGSUB = "SUBFGP" : PROGSPE = "SPEFGP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "FUPGRP"
 PARMSK(2) = "SHOTRA"
 PARMSK(3) = [M]GRP
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_SHOTRA" : PROGSUB = "SUBFGP" : PROGSPE = "SPEFGP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_FUPTYP
Onevent BEFORE_INPUT Call AS_FUPTYP(zc) From W1FGP1
Onevent INIT_AREA Call D_FUPTYP(zc) From W1FGP1
Onevent CONTROL Call C_FUPTYP(zc) From W1FGP1
Return

Subprog D_FUPTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(235) From COMBOS
## Action STD
Call AS_FUPTYP(VALEUR) From SUBFGP
If mkstat=2
 [M]FUPTYP(INDIC) = VALEUR
 Affzo FUPTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,235,1))))
Endif
If !mkstat
 Discombo 0 From FUPTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From FUPTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_FUPTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_FUPCTL
Onevent INIT_AREA Call D_FUPCTL(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPCTL(zc) From W1FGP1
Return

Subprog D_FUPCTL(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPCTL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPCTL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FUPMINAMT
Onevent BEFORE_AREA Gosub AV_FUPMINAMT From W1FGP1
Onevent CONTROL Call C_FUPMINAMT(zc) From W1FGP1
Return

$AV_FUPMINAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find("EUR",GDEVISE(1..GNBDEV)),1))
Chgfmt [M]FUPMINAMT(indice) With "N+z3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_FUPMINAMT(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_CUR
Onevent INIT_AREA Call D_CUR(zc) From W1FGP1
Return

Subprog D_CUR(VALEUR)
Variable Char    VALEUR()
If varinit([M]CUR,indice)=0
 VALEUR = GCURSHR
Endif
Gosub _AFF
End

$ON_FUPMAX
Onevent CONTROL Call C_FUPMAX(zc) From W1FGP1
Onevent AFTER_CHANGE Gosub AMM_FUPMAX From W1FGP1
Return

Subprog C_FUPMAX(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_FUPMAX(VALEUR) From SUBFGP
If mkstat : GERR = 1 : GZONE = "FUPMAX" : GZNUM = 10530 : Endif
Gosub _AFF
End

$AMM_FUPMAX
Call AM_FUPMAX(zc)
If !mkstat & GOBJET
 zoncou = "FUPMAX" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FUPMAX(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_FUPMAX(VALEUR) From SUBFGP
If mkstat : GERR = 1 : GZONE = "FUPMAX" : GZNUM = 10530 : Endif
Gosub _AFF
End

$ON_FUPMOD
Onevent INIT_AREA Call D_FUPMOD(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPMOD(zc) From W1FGP1
Return

Subprog D_FUPMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPMOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBRCOP
Onevent INIT_AREA Call D_NBRCOP(zc) From W1FGP1
Onevent CONTROL Call C_NBRCOP(zc) From W1FGP1
Return

Subprog D_NBRCOP(VALEUR)
Variable Decimal VALEUR
If varinit([M]NBRCOP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_NBRCOP(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_FUPCUR
Onevent AFTER_CHANGE Gosub AMM_FUPCUR From W1FGP1
Onevent INIT_AREA Call D_FUPCUR(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPCUR(zc) From W1FGP1
Return

Subprog D_FUPCUR(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPCUR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPCUR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_FUPCUR
Call AM_FUPCUR(zc)
If !mkstat & GOBJET
 zoncou = "FUPCUR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FUPCUR(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_FUPCUR(VALEUR) From SUBFGP
If mkstat : GERR = 1 : GZONE = "FUPCUR" : GZNUM = 32410 : Endif
Gosub _AFF
End

$ON_FUPBALTRS
Onevent INIT_AREA Call D_FUPBALTRS(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPBALTRS(zc) From W1FGP1
Return

Subprog D_FUPBALTRS(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPBALTRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPBALTRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FUPFCY
Onevent INIT_AREA Call D_FUPFCY(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPFCY(zc) From W1FGP1
Return

Subprog D_FUPFCY(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPFCY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPFCY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FUPCDT
Onevent INIT_AREA Call D_FUPCDT(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPCDT(zc) From W1FGP1
Return

Subprog D_FUPCDT(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPCDT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPCDT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FUPFRY
Onevent AFTER_CHANGE Gosub AMM_FUPFRY From W1FGP1
Onevent INIT_AREA Call D_FUPFRY(zc) From W1FGP1
Onevent BEFORE_INPUT Call AS_FUPFRY(zc) From W1FGP1
Return

Subprog D_FUPFRY(VALEUR)
Variable Integer VALEUR
If varinit([M]FUPFRY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FUPFRY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_FUPFRY
Call AM_FUPFRY(zc)
If !mkstat & GOBJET
 zoncou = "FUPFRY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FUPFRY(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_FUPFRY(VALEUR) From SUBFGP
If mkstat : GERR = 1 : GZONE = "FUPFRY" : GZNUM = 56497 : Endif
Gosub _AFF
End

$ON_SEUILS
Onevent CONTROL Call C_SEUILS(zc) From W1FGP1
Return

Subprog C_SEUILS(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_SEUILS(VALEUR) From SUBFGP
If mkstat : GERR = 1 : GZONE = "SEUILS" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_FUPINTERVAL
Onevent CONTROL Call C_FUPINTERVAL(zc) From W1FGP1
Return

Subprog C_FUPINTERVAL(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_FUPCRG
Onevent BEFORE_AREA Gosub AV_FUPCRG From W1FGP1
Onevent CONTROL Call C_FUPCRG(zc) From W1FGP1
Return

$AV_FUPCRG
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find("EUR",GDEVISE(1..GNBDEV)),1))
Chgfmt [M]FUPCRG(indice) With "N+z3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_FUPCRG(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_CURFUPCRG
Onevent INIT_AREA Call D_CURFUPCRG(zc) From W1FGP1
Return

Subprog D_CURFUPCRG(VALEUR)
Variable Char    VALEUR()
If varinit([M]CURFUPCRG,indice)=0
 VALEUR = GCURSHR
Endif
Gosub _AFF
End

$CHG_STY
Return


