#<AdxTL>@(#)0.0.0.0 $Revision$Class Estate
# Supervisor
## CRUD-CLASSE ## YEST
# 2019-06-04 07:14:18 761

Gosub TEST From WMCR_YEST : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YESTID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YEST : YESTA
# YRMA : YESTA YRELMAST
# YLNDPUR : YESTA YLNDPUR
# YSTAVIW : YESTA YSTAGE
# YPREVIW : YESTA YPRECINT
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YEST._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YEST.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YEST.ACTX.AFOLDER,nomap,"")>0
 Local File YESTA [YEST]
 Local File YRELMAST [YRMA]
 Local File YLNDPUR [YLDP]
 Local File YSTAGE [YSTG]
 Local File YPRECINT [YPRC]
Else
 Local File =YEST.ACTX.AFOLDER+".YESTA" [YEST]
 Local File =YEST.ACTX.AFOLDER+".YRELMAST" [YRMA]
 Local File =YEST.ACTX.AFOLDER+".YLNDPUR" [YLDP]
 Local File =YEST.ACTX.AFOLDER+".YSTAGE" [YSTG]
 Local File =YEST.ACTX.AFOLDER+".YPRECINT" [YPRC]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YEST.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YEST] With
& [YRMA]YRMA0 = [F:YEST]YGUID,
& [YLDP]YLDP4 = [F:YEST]YESTID,
& [YSTG]YSTG4 = [F:YEST]YESTID,
& [YPRC]YPRC4 = [F:YEST]YESTID
& As [LNK_]
Return

############################################################################################
### YESTA(WYEST)
############################################################################################
Funprog  _MAJSQL_YESTA(WYEST)
Variable Instance WYEST Using C_YEST
Local Integer ASTATUS,A_I,A_J
Default File [F:YEST]
If WYEST.ASTALIN=[V]CST_ANEW
 Call INICRE(WYEST) From ASYRSUB
 SetInstance [F:YEST] With WYEST
 Write [F:YEST]
 If fstat
  Call FSTA("YEST",WYEST,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYEST.updTick = [F:YEST]updTick
Elsif WYEST.ASTALIN=[V]CST_ALL or WYEST.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYEST) From ASYRSUB
 SetInstance [F:YEST] With WYEST
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYEST,"YESTA")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YEST]YEST0 = [F:YEST]YESTID
 If fstat
  Call FSTA("YEST",WYEST,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYEST.updTick = [F:YEST]updTick
Elsif WYEST.ASTALIN=[V]CST_ADEL
 SetInstance [F:YEST] With WYEST
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYEST,"YESTA")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YEST]YEST0 = [F:YEST]YESTID
 If fstat
  Call FSTA("YEST",WYEST,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YRELMAST(WYRMA)
############################################################################################
Funprog  _MAJSQL_YRELMAST(WYRMA)
Variable Instance WYRMA Using C_YRMA
Local Integer ASTATUS,A_I,A_J
Default File [F:YRMA]
If WYRMA.ASTALIN=[V]CST_ANEW
 Call INICRE(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 Write [F:YRMA]
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ALL or WYRMA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ADEL
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLNDPUR(WYLDP)
############################################################################################
Funprog  _MAJSQL_YLNDPUR(WYLDP)
Variable Instance WYLDP Using C_YLNDPUR
Local Integer ASTATUS,A_I,A_J
Default File [F:YLDP]
If WYLDP.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLDP) From ASYRSUB
 SetInstance [F:YLDP] With WYLDP
 Write [F:YLDP]
 If fstat
  Call FSTA("YLDP",WYLDP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDP.updTick = [F:YLDP]updTick
Elsif WYLDP.ASTALIN=[V]CST_ALL or WYLDP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLDP) From ASYRSUB
 SetInstance [F:YLDP] With WYLDP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDP,"YLNDPUR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLDP]YLDP4 = [F:YLDP]YESTID;[F:YLDP]YLNDPURID
 If fstat
  Call FSTA("YLDP",WYLDP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDP.updTick = [F:YLDP]updTick
Elsif WYLDP.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLDP] With WYLDP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDP,"YLNDPUR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLDP]YLDP4 = [F:YLDP]YESTID;[F:YLDP]YLNDPURID
 If fstat
  Call FSTA("YLDP",WYLDP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSTAGE(WYSTG)
############################################################################################
Funprog  _MAJSQL_YSTAGE(WYSTG)
Variable Instance WYSTG Using C_YSTAVIW
Local Integer ASTATUS,A_I,A_J
Default File [F:YSTG]
If WYSTG.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSTG) From ASYRSUB
 SetInstance [F:YSTG] With WYSTG
 Write [F:YSTG]
 If fstat
  Call FSTA("YSTG",WYSTG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSTG.updTick = [F:YSTG]updTick
Elsif WYSTG.ASTALIN=[V]CST_ALL or WYSTG.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSTG) From ASYRSUB
 SetInstance [F:YSTG] With WYSTG
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSTG,"YSTAGE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSTG]YSTG4 = [F:YSTG]YESTID;[F:YSTG]YSTAID
 If fstat
  Call FSTA("YSTG",WYSTG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSTG.updTick = [F:YSTG]updTick
Elsif WYSTG.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSTG] With WYSTG
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSTG,"YSTAGE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSTG]YSTG4 = [F:YSTG]YESTID;[F:YSTG]YSTAID
 If fstat
  Call FSTA("YSTG",WYSTG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YPRECINT(WYPRC)
############################################################################################
Funprog  _MAJSQL_YPRECINT(WYPRC)
Variable Instance WYPRC Using C_YPREVIW
Local Integer ASTATUS,A_I,A_J
Default File [F:YPRC]
If WYPRC.ASTALIN=[V]CST_ANEW
 Call INICRE(WYPRC) From ASYRSUB
 SetInstance [F:YPRC] With WYPRC
 Write [F:YPRC]
 If fstat
  Call FSTA("YPRC",WYPRC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYPRC.updTick = [F:YPRC]updTick
Elsif WYPRC.ASTALIN=[V]CST_ALL or WYPRC.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYPRC) From ASYRSUB
 SetInstance [F:YPRC] With WYPRC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYPRC,"YPRECINT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YPRC]YPRC4 = [F:YPRC]YESTID;[F:YPRC]YPREID
 If fstat
  Call FSTA("YPRC",WYPRC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYPRC.updTick = [F:YPRC]updTick
Elsif WYPRC.ASTALIN=[V]CST_ADEL
 SetInstance [F:YPRC] With WYPRC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYPRC,"YPRECINT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YPRC]YPRC4 = [F:YPRC]YESTID;[F:YPRC]YPREID
 If fstat
  Call FSTA("YPRC",WYPRC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



