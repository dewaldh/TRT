#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management BOM2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:52:28"
A_USER  = "ADMIN"
A_STAMP = "20180827235228"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask BOM2 [BOM2]
Gosub HORODAT
Local Inpbox "BOM2" From GFONCTION At A_STAMP With A_WINDPREV Mask [BOM2] As [SIM_]
Grizo [BOM2]20
Grizo [BOM2]25
Grizo [BOM2]30
Grizo [BOM2]35
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BOM2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=4
X1(1)=1 : X2(1)=72 : Y1(1)=5 : Y2(1)=11
X1(2)=73 : X2(2)=112 : Y1(2)=5 : Y2(2)=11
X1(3)=1 : X2(3)=72 : Y1(3)=12 : Y2(3)=28
Return

$ON_BOMSEQ
Onevent INIT_AREA Call D_BOMSEQ(zc) From W1BOM2
Onevent BEFORE_INPUT Call AS_BOMSEQ(zc) From W1BOM2
Onevent CONTROL Call C_BOMSEQ(zc) From W1BOM2
Return

Subprog D_BOMSEQ(VALEUR)
Variable Decimal VALEUR
If varinit([M]BOMSEQ,indice)=0
 ## Action STD
 Call D_BOMSEQ(VALEUR) From SUBBOD
Endif
Gosub _AFF
End

Subprog AS_BOMSEQ(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMSEQ(VALEUR) From SUBBOD
If mkstat=2
 [M]BOMSEQ(INDIC) = VALEUR
 Affzo BOMSEQ(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BOMSEQ(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMSEQ" : GZNUM = 1251 : Endif
Gosub _AFF
End

$ON_CPNTYP
Onevent BEFORE_INPUT Call AS_CPNTYP(zc) From W1BOM2
Onevent CONTROL Call C_CPNTYP(zc) From W1BOM2
Onevent INIT_AREA Call D_CPNTYP(zc) From W1BOM2
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CPNTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(438) From COMBOS
## Action STD
Call AS_CPNTYP(VALEUR) From SUBBOD
If mkstat=2
 [M]CPNTYP(INDIC) = VALEUR
 Affzo CPNTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,438,1))))
Endif
If !mkstat
 Discombo 0 From CPNTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CPNTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CPNTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_CPNTYP(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "CPNTYP" : GZNUM = 5468 : Endif
Gosub _AFF
End

$ON_CPNITMREF
Onevent CONTROL Call C_CPNITMREF(zc) From W1BOM2
Onevent BEFORE_INPUT Call AS_CPNITMREF(zc) From W1BOM2
Onevent AFTER_CHANGE Gosub AMM_CPNITMREF From W1BOM2
Return

Subprog IB_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_CPNITMREF(VALEUR)
## Action STD
Call AS_CPNITMREF(VALEUR) From SUBBOD
If mkstat=2
 [M]CPNITMREF(INDIC) = VALEUR
 Affzo CPNITMREF(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CPNITMREF(zc) From W1BOM2
Onkey 170 Titled GBOUT13 Call B13_CPNITMREF(zc) From W1BOM2
Onkey   2 Titled GBOUTS Call S_CPNITMREF(zc) From W1BOM2
Onkey 144 Titled GBOUTP Call P_CPNITMREF(zc) From W1BOM2
Onkey 146 Titled GBOUTA Call SA_CPNITMREF(zc) From W1BOM2
Gosub _AFF
End

Subprog C_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
  If !mkstat
   ## Action STD
   Call C_CPNITMREF(VALEUR) From SUBBOD
   If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPNITMREF
Call AM_CPNITMREF(zc)
If !mkstat & GOBJET
 zoncou = "CPNITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPNITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CPNITMREF(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZCPNITMREF)")>indice
 [M]CPNITMREF(indice) = VALEUR
 Affzo ZCPNITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPNITMREF
Onevent BEFORE_AREA Gosub AV_ZCPNITMREF From W1BOM2
Return

$AV_ZCPNITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]CPNITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_FORSEL
Onevent BEFORE_INPUT Call AS_FORSEL(zc) From W1BOM2
Onevent CONTROL Call C_FORSEL(zc) From W1BOM2
Onevent AFTER_CHANGE Gosub AMM_FORSEL From W1BOM2
Return

Subprog AS_FORSEL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4574,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_FORSEL(VALEUR) From SUBBOD
If mkstat=2
 [M]FORSEL(INDIC) = VALEUR
 Affzo FORSEL(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_FORSEL(zc) From W1BOM2
Onkey   2 Titled GBOUTS Call S_FORSEL(zc) From W1BOM2
Onkey 144 Titled GBOUTP Call P_FORSEL(zc) From W1BOM2
Onkey 146 Titled GBOUTA Call SA_FORSEL(zc) From W1BOM2
Gosub _AFF
End

Subprog C_FORSEL(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TFO","!",VALEUR,"53",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "FORSEL" : GZNUM = 12877 : Endif
If !mkstat
 ## Action STD
 Call C_FORSEL(VALEUR) From SUBBOD
 If mkstat : GERR = 1 : GZONE = "FORSEL" : GZNUM = 12877 : Endif
Endif
Gosub _AFF
End

$AMM_FORSEL
Call AM_FORSEL(zc)
If !mkstat & GOBJET
 zoncou = "FORSEL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FORSEL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FORSEL(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "FORSEL" : GZNUM = 12877 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFORSEL)")>indice
 [M]FORSEL(indice) = VALEUR
 Affzo ZFORSEL(indice)
Endif
Gosub _AFF
End

Subprog S_FORSEL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TFO"
PARMSK(2) = "!"
PARMSK(3) = "53"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FORSEL(VALEUR)
Variable Char    VALEUR()
Call OBJET("TFO",VALEUR,"53") From GOBJET
Gosub _AFF
End

Subprog SA_FORSEL(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TFO"
PARMSK(2) = "53"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FORSEL(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "53"
Call VISU("TFO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFORSEL
Onevent BEFORE_AREA Gosub AV_ZFORSEL From W1BOM2
Return

$AV_ZFORSEL
Call LECTEXTRA(zc,"TABFOR","DES","53",num$([M]FORSEL(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1BOM2
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_LIKQTY
Onevent CONTROL Call C_LIKQTY(zc) From W1BOM2
Onevent AFTER_CHANGE Gosub AMM_LIKQTY From W1BOM2
Return

Subprog C_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_LIKQTY(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 2280 : Endif
Gosub _AFF
End

$AMM_LIKQTY
Call AM_LIKQTY(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_LIKQTY(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 2280 : Endif
Gosub _AFF
End

$ON_FORQTY
Onevent BEFORE_INPUT Call AS_FORQTY(zc) From W1BOM2
Onevent CONTROL Call C_FORQTY(zc) From W1BOM2
Onevent AFTER_CHANGE Gosub AMM_FORQTY From W1BOM2
Return

Subprog AS_FORQTY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4574,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_FORQTY(VALEUR) From SUBBOD
If mkstat=2
 [M]FORQTY(INDIC) = VALEUR
 Affzo FORQTY(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_FORQTY(zc) From W1BOM2
Onkey   2 Titled GBOUTS Call S_FORQTY(zc) From W1BOM2
Onkey 144 Titled GBOUTP Call P_FORQTY(zc) From W1BOM2
Onkey 146 Titled GBOUTA Call SA_FORQTY(zc) From W1BOM2
Gosub _AFF
End

Subprog C_FORQTY(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TFO","!",VALEUR,"54",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "FORQTY" : GZNUM = 44415 : Endif
If !mkstat
 ## Action STD
 Call C_FORQTY(VALEUR) From SUBBOD
 If mkstat : GERR = 1 : GZONE = "FORQTY" : GZNUM = 44415 : Endif
Endif
Gosub _AFF
End

$AMM_FORQTY
Call AM_FORQTY(zc)
If !mkstat & GOBJET
 zoncou = "FORQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FORQTY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FORQTY(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "FORQTY" : GZNUM = 44415 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFORQTY)")>indice
 [M]FORQTY(indice) = VALEUR
 Affzo ZFORQTY(indice)
Endif
Gosub _AFF
End

Subprog S_FORQTY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TFO"
PARMSK(2) = "!"
PARMSK(3) = "54"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FORQTY(VALEUR)
Variable Char    VALEUR()
Call OBJET("TFO",VALEUR,"54") From GOBJET
Gosub _AFF
End

Subprog SA_FORQTY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TFO"
PARMSK(2) = "54"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FORQTY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "54"
Call VISU("TFO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFORQTY
Onevent BEFORE_AREA Gosub AV_ZFORQTY From W1BOM2
Return

$AV_ZFORQTY
Call LECTEXTRA(zc,"TABFOR","DES","54",num$([M]FORQTY(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_LIKQTYCOD
Onevent BEFORE_INPUT Call AS_LIKQTYCOD(zc) From W1BOM2
Onevent INIT_AREA Call D_LIKQTYCOD(zc) From W1BOM2
Return

Subprog D_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LIKQTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LIKQTYCOD(VALEUR) From SUBBOD
If mkstat=2
 [M]LIKQTYCOD(INDIC) = VALEUR
 Affzo LIKQTYCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYRND
Onevent INIT_AREA Call D_QTYRND(zc) From W1BOM2
Onevent BEFORE_INPUT Call AS_QTYRND(zc) From W1BOM2
Return

Subprog D_QTYRND(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYRND,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYRND(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BOMSTRDAT
Onevent CONTROL Call C_BOMSTRDAT(zc) From W1BOM2
Onevent BEFORE_AREA Gosub AV_BOMSTRDAT From W1BOM2
Return

$AV_BOMSTRDAT
Chgfmt [M]BOMSTRDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_BOMSTRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_BOMSTRDAT(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "BOMSTRDAT" : GZNUM = 1536 : Endif
Gosub _AFF
End

$ON_BOMENDDAT
Onevent CONTROL Call C_BOMENDDAT(zc) From W1BOM2
Onevent BEFORE_AREA Gosub AV_BOMENDDAT From W1BOM2
Return

$AV_BOMENDDAT
Chgfmt [M]BOMENDDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_BOMENDDAT(VALEUR)
Variable Date    VALEUR
## Action CTLDATV
Call CTLDATV(VALEUR,[M]BOMSTRDAT) From CONTDIV
If mkstat : GERR = 1 : GZONE = "BOMENDDAT" : GZNUM = 5463 : Endif
If !mkstat
 ## Action STD
 Call C_BOMENDDAT(VALEUR) From SUBBOD
 If mkstat : GERR = 1 : GZONE = "BOMENDDAT" : GZNUM = 5463 : Endif
Endif
Gosub _AFF
End

$ON_OCNPRN
Onevent INIT_AREA Call D_OCNPRN(zc) From W1BOM2
Onevent BEFORE_INPUT Call AS_OCNPRN(zc) From W1BOM2
Return

Subprog D_OCNPRN(VALEUR)
Variable Integer VALEUR
If varinit([M]OCNPRN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_OCNPRN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NDEPRN
Onevent INIT_AREA Call D_NDEPRN(zc) From W1BOM2
Onevent BEFORE_INPUT Call AS_NDEPRN(zc) From W1BOM2
Return

Subprog D_NDEPRN(VALEUR)
Variable Integer VALEUR
If varinit([M]NDEPRN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_NDEPRN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INVPRN
Onevent INIT_AREA Call D_INVPRN(zc) From W1BOM2
Onevent BEFORE_INPUT Call AS_INVPRN(zc) From W1BOM2
Return

Subprog D_INVPRN(VALEUR)
Variable Integer VALEUR
If varinit([M]INVPRN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_INVPRN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


