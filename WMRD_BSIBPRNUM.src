#<AdxTL>@(#)0.0.0.0 $Revision$Class BP number definition
# Supervisor
## CRUD-CLASSE ## BSIBPRNUM
# 2018-08-27 13:07:24 276


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(BSIBPRNUM,ASTATUS)
Variable Instance BSIBPRNUM Using R_BSIBPRNUM
Variable Integer ASTATUS

If BSIBPRNUM = null : End : Endif

Gosub AVARIABLES From WMR00BSIBPRNUM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_BSIBPRNUM
Else
 Gosub ADELETE_BSIBPRNUM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
BSIBPRNUM.ASTALIN = [V]CST_ADEL
BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(BSIBPRNUM.BSIBPN,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIBPRNUM.BSIBPN.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSIBPRNUM.BSIBPN.LINES) : # BSIBPRNUMD -- 2
 If BSIBPRNUM.BSIBPN.LINES(A_N2) <> null
& and BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN<>[V]CST_ANEW
   BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.LINES(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(BSIBPRNUM.BSIBPN.LINES) : # BSIBPRNUMD -- 2
 If BSIBPRNUM.BSIBPN.LINES(A_N2) <> null
& and BSIBPRNUM.BSIBPN.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.LINES(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_BSIBPRNUM
Trbegin [F:BSIBPN]
 Gosub ADELETE_BSIBPRNUM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_BSIBPRNUM
[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.BSIBPN._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIBPRNUM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If BSIBPRNUM.snapshotEnabled=1
 [L]A_RETIK = BSIBPRNUM.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIBPRNUM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



