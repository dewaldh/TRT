#<AdxTL>@(#)0.0.0.0 $Revision$Class GST reporting period details
# Supervisor
## CRUD-CLASSE ## GSTPERD
# 2018-08-27 12:33:41 845


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GSTPERD [GSTPD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_GSTPERD") From ASYRCOM : Endif
Local Instance GSTPERD Using C_GSTPERD

If !SILENCE : Call TRACE("3 --> New Instance C_GSTPERD") From ASYRCOM : Endif
GSTPERD = NewInstance C_GSTPERD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [GSTPD_]GSTPD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of GSTPERD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet GSTPERD.AREAD([GSTPD_]CODGSTPER,[GSTPD_]LIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("GSTPERD.CODGSTPER ="-num$(GSTPERD.CODGSTPER)) From ASYRCOM
 Call TRACE("GSTPERD.LIN ="-num$(GSTPERD.LIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(GSTPERD.AKEYS)
  Call TRACE("-"-num$(I)-":"-GSTPERD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [GSTPD_]
FreeGroup GSTPERD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(GSTPERD,ACLE,ASTATUS,_ETAG)
Variable Instance GSTPERD Using C_GSTPERD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Integer _CODGSTPER
Local Integer _LIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODGSTPER = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LIN = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File GSTPERD [GSTPD]
Default File [F:GSTPD]
Read [F:GSTPD]GSTPD0 = [L]_CODGSTPER;[L]_LIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:GSTPD]UPDTICK)>0
 [L]_ETAG = num$([F:GSTPD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(GSTPERD,ACLE,ASTATUS)
Variable Instance GSTPERD Using C_GSTPERD
Value Char ACLE
Variable Integer ASTATUS
Local Integer _CODGSTPER
Local Integer _LIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODGSTPER = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LIN = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet GSTPERD.AREAD([L]_CODGSTPER,[L]_LIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(GSTPERD,_CODGSTPER,_LIN,ASTATUS)
Variable Instance GSTPERD Using C_GSTPERD
Value Integer _CODGSTPER
Value Integer _LIN
Variable Integer ASTATUS

If GSTPERD = null : End : Endif

Gosub AVARIABLES From WMC00GSTPERD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If GSTPERD.APARENT=null
 [L]A_I = GSTPERD.freeSnapshot
 GSTPERD.snapshotEnabled = 0
 GSTPERD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & GSTPERD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet GSTPERD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If GSTPERD.APARENT=null
 GSTPERD.snapshotEnabled = 1
 GSTPERD.setAccessorEnabled = 1
Endif
LogicClose File [GSTPD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet GSTPERD._ACTION_PARAM("AREAD_BEFORE",[L]_CODGSTPER,[L]_LIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:GSTPD]
Read [F:GSTPD]GSTPD0 = [L]_CODGSTPER;[L]_LIN
If fstat
[L]A_ERROR = num$([L]_CODGSTPER)+"~"+num$([L]_LIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(GSTPERD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:GSTPD]AUUID)>0 & [F:GSTPD]AUUID=NullUuid
 [F:GSTPD]AUUID = getUuid
Endif
SetInstance GSTPERD With [F:GSTPD]
GSTPERD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet GSTPERD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



