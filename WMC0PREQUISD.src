#<AdxTL>@(#)0.0.0.0 $Revision$Class Purchase request detail
# Supervisor
## ACLA-CLASSE ## PREQUISD
# 2018-08-27 12:42:49 181

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMCM_PREQUISD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "PREQUISD_CSTD"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Result
$LOADDOCFROMRESULT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADDOCFROMRESULT" : [L]ACTION = "LOADDOCFROMRESULT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Load
$LOADPARAMFROMDOC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADPARAMFROMDOC" : [L]ACTION = "LOADPARAMFROMDOC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Load
$LOADVATPARAMFROMDOC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADVATPARAMFROMDOC" : [L]ACTION = "LOADVATPARAMFROMDOC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Result
$LOADVATRESULTFROMFINDVAT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADVATRESULTFROMFINDVAT" : [L]ACTION = "LOADVATRESULTFROMFINDVAT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Load
$LOADWIPPARAM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADWIPPARAM" : [L]ACTION = "LOADWIPPARAM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Price search
$SEARCHPRICE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SEARCHPRICE" : [L]ACTION = "SEARCHPRICE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update ORDERS
$WIP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "WIP" : [L]ACTION = "WIP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Net price initialization
$_MET_CALNETPRI
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_MET_CALNETPRI" : [L]ACTION = "_MET_CALNETPRI" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod PR supplier initialization
$_MET_INIBPSNUM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_MET_INIBPSNUM" : [L]ACTION = "_MET_INIBPSNUM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Taxes
$_MET_LOADVAT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "_MET_LOADVAT" : [L]ACTION = "_MET_LOADVAT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0PREQUISD
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 9
 If this.C_DISCRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_VACITM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_VACITM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.PSDCAL<>null
 [L]ASTATUS = fmet this.PSDCAL._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0PREQUISD
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 9
 If this.C_DISCRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_VACITM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_VACITM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.PSDCAL<>null
 [L]ASTATUS = fmet this.PSDCAL._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0PREQUISD
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 9
 If this.C_DISCRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DISCRG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_VACITM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_VACITM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_VACITM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.PSDCAL<>null
 [L]ASTATUS = fmet this.PSDCAL._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PSDCAL')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0PREQUISD
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "TEXTE"
  If fmet this.AGETATTRIBUTE("TEXTE","$isLoaded")<>"true"
   Gosub READ_CLB_TEXTE
  Else
   [L]_CLB = this.TEXTE
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("TEXTE","$contentType","text/rtf")
   [L]_CNT = "text/rtf"
  Endif
Endcase
Return

$READ_CLB_TEXTE
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WTXC]CODE = [L]_KEYVALTAB(1)
Read [WTXC] =
If !fstat
 [L]_CLB = [F:WTXC]TEXTE
Endif
LogicClose File [WTXC]
Return

$READ_EXI_TEXTE
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WTXC]CODE = this.LINTEX
Look [WTXC] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WTXC]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DISCRG",this)
 When "C_VACITM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_VACITM",this)
 When "PSDCAL"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PSDCAL",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DISCRG","C_PREQUISD_C_DISCRG",this)
 When "C_VACITM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_VACITM","C_PREQUISD_C_VACITM",this)
 When "PSDCAL"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PSDCAL","C_CPTANALIN",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE = 9
 When "C_VACITM"
  [L]_ALINE = 3
 When "PSDCAL"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE = 3
 When "C_VACITM"
  [L]_ALINE = 3
 When "PSDCAL"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "PSHNUM"
this.AKEYS(2) = "PSDLIN"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



