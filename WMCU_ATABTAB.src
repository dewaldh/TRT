#<AdxTL>@(#)0.0.0.0 $Revision$Class Miscellaneous tables
# Supervisor
## CRUD-CLASSE ## ATABTAB
# 2018-08-27 12:23:10 609


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(ATABTAB,ASTATUS)
Variable Instance ATABTAB Using C_ATABTAB
Variable Integer ASTATUS

If ATABTAB = null : End : Endif

Gosub _AVARIABLES From WMC00ATABTAB

[L]A_STRSITE = ""
[L]A_STRACC = ATABTAB.ACS
Gosub AUPDATE_ATABTAB

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(ATABTAB,ASTATUS)
Variable Instance ATABTAB Using C_ATABTAB
Variable Integer ASTATUS

If ATABTAB = null : End : Endif

Gosub AVARIABLES From WMC00ATABTAB
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ATABTAB.ACS
ATABTAB.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_ATABTAB
Else
 Gosub AUPDATE_ATABTAB
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = ATABTAB.freeSnapshot
ATABTAB.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATABTAB._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATABTAB._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATABTAB._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If ATABTAB.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATABTAB.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(ATABTAB.ASTALIN)<>""
 [L]A_ASTALIN = ATABTAB.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(ATABTAB.ACOLALP)
 If ATABTAB.ACOLALP([L]A_I)<>null
  [L]A_ASTALIN = ATABTAB.ACOLALP([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACOLALP([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ATABTAB.ACOLNUM)
 If ATABTAB.ACOLNUM([L]A_I)<>null
  [L]A_ASTALIN = ATABTAB.ACOLNUM([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACOLNUM([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

For [L]A_I=1 To maxtab(ATABTAB.ACOLALP)
 If ATABTAB.ACOLALP([L]A_I)<>null
  [L]A_ASTALIN = ATABTAB.ACOLALP([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACOLALP([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ATABTAB.ACOLNUM)
 If ATABTAB.ACOLNUM([L]A_I)<>null
  [L]A_ASTALIN = ATABTAB.ACOLNUM([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACOLNUM([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(ATABTAB.ASTALIN)<>""
 [L]A_ASTALIN = ATABTAB.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_ATABTAB
Trbegin [F:ADV]
 Gosub AUPDATE_ATABTAB
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_ATABTAB
[L]A_ASTALIN = ATABTAB.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00ATABTAB._MAJSQL_ATABTAB(ATABTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = ATABTAB.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If ATABTAB.snapshotEnabled=1
 [L]A_RETIK = ATABTAB.revertUpdTick
Endif

[L]ASTATUS = max(fmet ATABTAB.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(ATABTAB.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATABTAB.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(ATABTAB.ACOLALP)
 If ATABTAB.ACOLALP([L]A_I)<>null
  If ATABTAB.ACOLALP([L]A_I).ASTALIN=[V]CST_ADEL or ATABTAB.ACOLALP([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABTAB.ACOLALP([L]A_I)
   ATABTAB.ACOLALP([L]A_I) = null
  Elsif ATABTAB.ACOLALP([L]A_I).ASTALIN <> [V]CST_ALL
   ATABTAB.ACOLALP([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(ATABTAB.ACOLNUM)
 If ATABTAB.ACOLNUM([L]A_I)<>null
  If ATABTAB.ACOLNUM([L]A_I).ASTALIN=[V]CST_ADEL or ATABTAB.ACOLNUM([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABTAB.ACOLNUM([L]A_I)
   ATABTAB.ACOLNUM([L]A_I) = null
  Elsif ATABTAB.ACOLNUM([L]A_I).ASTALIN <> [V]CST_ALL
   ATABTAB.ACOLNUM([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Return



