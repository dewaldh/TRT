#<AdxTL>@(#)0.0.0.0 $Revision$Class Business batch
# Supervisor
## CRUD-CLASSE ## YBBT
# 2018-11-06 23:30:58 521


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(YBBT,ASTATUS)
Variable Instance YBBT Using R_YBBT
Variable Integer ASTATUS

If YBBT = null : End : Endif

Gosub AVARIABLES From WMR00YBBT
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet YBBT.ACTX.AGETAFCRIGHT(YBBT,"GESYBB",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet YBBT.ACTX.AGETAFCRIGHTD(YBBT,"GESYBB",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_YBBT
Else
 Gosub ADELETE_YBBT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
YBBT.ASTALIN = [V]CST_ADEL
YBBT.YBBH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(YBBT.YBBH,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If YBBT.YBBH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YBBT.YBBH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YBBT.YBBH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YBBT.YBBH.YBBD) : # YBBD -- 2
 If YBBT.YBBH.YBBD(A_N2) <> null
& and YBBT.YBBH.YBBD(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(YBBT.YBBH.YBBD) : # YBBD -- 2
 If YBBT.YBBH.YBBD(A_N2) <> null
& and YBBT.YBBH.YBBD(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBT.YBBH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_YBBT
Trbegin [F:YBBH]
 Gosub ADELETE_YBBT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_YBBT
[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBT.YBBH._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBT.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If YBBT.snapshotEnabled=1
 [L]A_RETIK = YBBT.revertUpdTick
Endif
[L]ASTATUS = max(fmet YBBT.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



