#<AdxTL>@(#)0.0.0.0 $Revision$Class Fiscal year
# Supervisor
## ACLA-CLASSE ## FISCYEAR
# 2018-08-27 12:31:44 201


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CPY Company ( Field CPY 5)
####################################################################

$SET_CPY
If [L]_AOLDVAL<>this.CPY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPY
 Gosub PROPAGATE_CPY
Endif
Return

$INIT_CPY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CPY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CPY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPY
[L]CURPRO = "CPY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CPY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>vireblc(format$("K:5c",this.CPY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCPY.ACTRLREF(this,"CPY",this.CPY,this.CPY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CPY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPY
[L]CURPRO = "CPY"
Return

$PROPAGATE_CPY
this.isReadonly = 0
[L]CURPRO = "CPY"
Gosub _LNKPRO_CPY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CPY"
$_LNKPRO_CPY
If vireblc(this.CPY,2)<>""
 # Link COMPANY
 Local File COMPANY [WCPY]
 Read [F:WCPY]CPY0 = this.CPY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$title",[F:WCPY]CPYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$description",[F:WCPY]CPYNAM)
 Endif
 LogicClose File [WCPY]
Endif
Return

$_ALOADATTRIBUTE_CPY
[L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$isMandatory","true")
Return


####################################################################
# 2 : CNX Context ( Field Local menu number 3100)
####################################################################

$SET_CNX
If [L]_AOLDVAL<>this.CNX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CNX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CNX
 Gosub PROPAGATE_CNX
Endif
Return

$INIT_CNX
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CNX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CNX=0 and fmet this.AGETATTRIBUTE("CNX","$isMandatory")="true"
 this.CNX = 1
Endif
Return
 
$CONTROL_CNX
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CNX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CNX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CNX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CNX
[L]CURPRO = "CNX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CNX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CNX
[L]CURPRO = "CNX"
If this.CNX<0 or this.CNX>len(mess(0,3100,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3100 ->"-num$(this.CNX)-mess(99,123,1)):  Return : # Local menu "3100 -> Invalid option
Endif
Return

$_AOTHERS_CNX
[L]CURPRO = "CNX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CNX
[L]CURPRO = "CNX"
Return

$PROPAGATE_CNX
this.isReadonly = 0
[L]CURPRO = "CNX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CNX
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CNX"
$_LNKPRO_CNX
Return

$_ALOADATTRIBUTE_CNX
[L]ASTATUS = fmet this.ASETATTRIBUTE("CNX","$isMandatory","true")
Return


####################################################################
# 3 : DATSTRFIY FY start date ( Field D4)
####################################################################

$SET_DATSTRFIY
If [L]_AOLDVAL<>this.DATSTRFIY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DATSTRFIY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DATSTRFIY
 Gosub PROPAGATE_DATSTRFIY
Endif
Return

$INIT_DATSTRFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DATSTRFIY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DATSTRFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DATSTRFIY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DATSTRFIY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DATSTRFIY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DATSTRFIY
[L]CURPRO = "DATSTRFIY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DATSTRFIY=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DATSTRFIY
[L]CURPRO = "DATSTRFIY"
Return

$_AOTHERS_DATSTRFIY
[L]CURPRO = "DATSTRFIY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DATSTRFIY
[L]CURPRO = "DATSTRFIY"
Return

$PROPAGATE_DATSTRFIY
this.isReadonly = 0
[L]CURPRO = "DATSTRFIY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DATSTRFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DATSTRFIY"
$_LNKPRO_DATSTRFIY
Return

$_ALOADATTRIBUTE_DATSTRFIY
[L]ASTATUS = fmet this.ASETATTRIBUTE("DATSTRFIY","$isMandatory","true")
Return


####################################################################
# 4 : DATENDFIY FY end date ( Field D4)
####################################################################

$SET_DATENDFIY
If [L]_AOLDVAL<>this.DATENDFIY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DATENDFIY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DATENDFIY
 Gosub PROPAGATE_DATENDFIY
Endif
Return

$INIT_DATENDFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DATENDFIY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DATENDFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DATENDFIY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DATENDFIY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DATENDFIY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DATENDFIY
[L]CURPRO = "DATENDFIY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DATENDFIY=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DATENDFIY
[L]CURPRO = "DATENDFIY"
Return

$_AOTHERS_DATENDFIY
[L]CURPRO = "DATENDFIY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DATENDFIY
[L]CURPRO = "DATENDFIY"
Return

$PROPAGATE_DATENDFIY
this.isReadonly = 0
[L]CURPRO = "DATENDFIY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DATENDFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DATENDFIY"
$_LNKPRO_DATENDFIY
Return

$_ALOADATTRIBUTE_DATENDFIY
[L]ASTATUS = fmet this.ASETATTRIBUTE("DATENDFIY","$isMandatory","true")
Return


####################################################################
# 5 : RAT39BIS 39bis temp rate ( Field RAT 0)
####################################################################

$SET_RAT39BIS
If [L]_AOLDVAL<>this.RAT39BIS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RAT39BIS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RAT39BIS
 Gosub PROPAGATE_RAT39BIS
Endif
Return

$INIT_RAT39BIS
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "RAT39BIS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RAT39BIS
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "RAT39BIS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RAT39BIS              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RAT39BIS              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RAT39BIS
[L]CURPRO = "RAT39BIS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RAT39BIS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RAT39BIS
[L]CURPRO = "RAT39BIS"
Return

$_AOTHERS_RAT39BIS
[L]CURPRO = "RAT39BIS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RAT39BIS
[L]CURPRO = "RAT39BIS"
Return

$PROPAGATE_RAT39BIS
this.isReadonly = 0
[L]CURPRO = "RAT39BIS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RAT39BIS
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "RAT39BIS"
$_LNKPRO_RAT39BIS
Return


####################################################################
# 6 : STAFIY FY status ( Field Local menu number 3102)
####################################################################

$SET_STAFIY
If [L]_AOLDVAL<>this.STAFIY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STAFIY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STAFIY
 Gosub PROPAGATE_STAFIY
Endif
Return

$INIT_STAFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "STAFIY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.STAFIY=0 and fmet this.AGETATTRIBUTE("STAFIY","$isMandatory")="true"
 this.STAFIY = 1
Endif
Return
 
$CONTROL_STAFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "STAFIY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STAFIY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STAFIY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STAFIY
[L]CURPRO = "STAFIY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STAFIY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STAFIY
[L]CURPRO = "STAFIY"
If this.STAFIY<0 or this.STAFIY>len(mess(0,3102,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3102 ->"-num$(this.STAFIY)-mess(99,123,1)):  Return : # Local menu "3102 -> Invalid option
Endif
Return

$_AOTHERS_STAFIY
[L]CURPRO = "STAFIY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STAFIY
[L]CURPRO = "STAFIY"
Return

$PROPAGATE_STAFIY
this.isReadonly = 0
[L]CURPRO = "STAFIY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STAFIY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "STAFIY"
$_LNKPRO_STAFIY
Return


####################################################################
# 7 : EVTCREFLG Generated events ( Field Local menu number 1)
####################################################################

$SET_EVTCREFLG
If [L]_AOLDVAL<>this.EVTCREFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EVTCREFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EVTCREFLG
 Gosub PROPAGATE_EVTCREFLG
Endif
Return

$INIT_EVTCREFLG
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "EVTCREFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.EVTCREFLG=0 and fmet this.AGETATTRIBUTE("EVTCREFLG","$isMandatory")="true"
 this.EVTCREFLG = 1
Endif
Return
 
$CONTROL_EVTCREFLG
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "EVTCREFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EVTCREFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EVTCREFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EVTCREFLG
[L]CURPRO = "EVTCREFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EVTCREFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EVTCREFLG
[L]CURPRO = "EVTCREFLG"
If this.EVTCREFLG<0 or this.EVTCREFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.EVTCREFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_EVTCREFLG
[L]CURPRO = "EVTCREFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EVTCREFLG
[L]CURPRO = "EVTCREFLG"
Return

$PROPAGATE_EVTCREFLG
this.isReadonly = 0
[L]CURPRO = "EVTCREFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EVTCREFLG
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "EVTCREFLG"
$_LNKPRO_EVTCREFLG
Return


####################################################################
# 8 : INDCURPER Current period ( Field C 4)
####################################################################

$SET_INDCURPER
If [L]_AOLDVAL<>this.INDCURPER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INDCURPER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INDCURPER
 Gosub PROPAGATE_INDCURPER
Endif
Return

$INIT_INDCURPER
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "INDCURPER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INDCURPER
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "INDCURPER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INDCURPER             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INDCURPER             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INDCURPER
[L]CURPRO = "INDCURPER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INDCURPER=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INDCURPER
[L]CURPRO = "INDCURPER"
Return

$_AOTHERS_INDCURPER
[L]CURPRO = "INDCURPER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INDCURPER
[L]CURPRO = "INDCURPER"
Return

$PROPAGATE_INDCURPER
this.isReadonly = 0
[L]CURPRO = "INDCURPER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INDCURPER
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "INDCURPER"
$_LNKPRO_INDCURPER
Return


####################################################################
# 9 : NBRPER Number of periods ( Field C 4)
####################################################################

$SET_NBRPER
If [L]_AOLDVAL<>this.NBRPER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBRPER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBRPER
 Gosub PROPAGATE_NBRPER
Endif
Return

$INIT_NBRPER
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "NBRPER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBRPER
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "NBRPER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBRPER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBRPER                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBRPER
[L]CURPRO = "NBRPER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBRPER=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBRPER
[L]CURPRO = "NBRPER"
Return

$_AOTHERS_NBRPER
[L]CURPRO = "NBRPER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBRPER
[L]CURPRO = "NBRPER"
Return

$PROPAGATE_NBRPER
this.isReadonly = 0
[L]CURPRO = "NBRPER"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBRPER
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "NBRPER"
$_LNKPRO_NBRPER
Return


####################################################################
# 10 : DFDTYP Deferred type ( Field Local menu number 3232)
####################################################################

$SET_DFDTYP
If [L]_AOLDVAL<>this.DFDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DFDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DFDTYP
 Gosub PROPAGATE_DFDTYP
Endif
Return

$INIT_DFDTYP
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DFDTYP=0 and fmet this.AGETATTRIBUTE("DFDTYP","$isMandatory")="true"
 this.DFDTYP = 1
Endif
Return
 
$CONTROL_DFDTYP
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DFDTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DFDTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DFDTYP
[L]CURPRO = "DFDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DFDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DFDTYP
[L]CURPRO = "DFDTYP"
If this.DFDTYP<0 or this.DFDTYP>len(mess(0,3232,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3232 ->"-num$(this.DFDTYP)-mess(99,123,1)):  Return : # Local menu "3232 -> Invalid option
Endif
Return

$_AOTHERS_DFDTYP
[L]CURPRO = "DFDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DFDTYP
[L]CURPRO = "DFDTYP"
Return

$PROPAGATE_DFDTYP
this.isReadonly = 0
[L]CURPRO = "DFDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DFDTYP
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDTYP"
$_LNKPRO_DFDTYP
Return


####################################################################
# 11 : DFDCOD Deferred rule ( Field Local menu number 3239)
####################################################################

$SET_DFDCOD
If [L]_AOLDVAL<>this.DFDCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DFDCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DFDCOD
 Gosub PROPAGATE_DFDCOD
Endif
Return

$INIT_DFDCOD
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DFDCOD=0 and fmet this.AGETATTRIBUTE("DFDCOD","$isMandatory")="true"
 this.DFDCOD = 1
Endif
Return
 
$CONTROL_DFDCOD
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DFDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DFDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DFDCOD
[L]CURPRO = "DFDCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DFDCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DFDCOD
[L]CURPRO = "DFDCOD"
If this.DFDCOD<0 or this.DFDCOD>len(mess(0,3239,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3239 ->"-num$(this.DFDCOD)-mess(99,123,1)):  Return : # Local menu "3239 -> Invalid option
Endif
Return

$_AOTHERS_DFDCOD
[L]CURPRO = "DFDCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DFDCOD
[L]CURPRO = "DFDCOD"
Return

$PROPAGATE_DFDCOD
this.isReadonly = 0
[L]CURPRO = "DFDCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DFDCOD
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDCOD"
$_LNKPRO_DFDCOD
Return


####################################################################
# 12 : DFDRAT Deferred rate ( Field RAT 0)
####################################################################

$SET_DFDRAT
If [L]_AOLDVAL<>this.DFDRAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DFDRAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DFDRAT
 Gosub PROPAGATE_DFDRAT
Endif
Return

$INIT_DFDRAT
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDRAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DFDRAT
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDRAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DFDRAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DFDRAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DFDRAT
[L]CURPRO = "DFDRAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DFDRAT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DFDRAT
[L]CURPRO = "DFDRAT"
Return

$_AOTHERS_DFDRAT
[L]CURPRO = "DFDRAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DFDRAT
[L]CURPRO = "DFDRAT"
Return

$PROPAGATE_DFDRAT
this.isReadonly = 0
[L]CURPRO = "DFDRAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DFDRAT
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "DFDRAT"
$_LNKPRO_DFDRAT
Return


####################################################################
# 13 : LVATYP LVA management ( Field Local menu number 3297)
####################################################################

$SET_LVATYP
If [L]_AOLDVAL<>this.LVATYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LVATYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LVATYP
 Gosub PROPAGATE_LVATYP
Endif
Return

$INIT_LVATYP
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "LVATYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LVATYP=0 and fmet this.AGETATTRIBUTE("LVATYP","$isMandatory")="true"
 this.LVATYP = 1
Endif
Return
 
$CONTROL_LVATYP
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "LVATYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LVATYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LVATYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LVATYP
[L]CURPRO = "LVATYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LVATYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LVATYP
[L]CURPRO = "LVATYP"
If this.LVATYP<0 or this.LVATYP>len(mess(0,3297,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3297 ->"-num$(this.LVATYP)-mess(99,123,1)):  Return : # Local menu "3297 -> Invalid option
Endif
Return

$_AOTHERS_LVATYP
[L]CURPRO = "LVATYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LVATYP
[L]CURPRO = "LVATYP"
Return

$PROPAGATE_LVATYP
this.isReadonly = 0
[L]CURPRO = "LVATYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LVATYP
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "LVATYP"
$_LNKPRO_LVATYP
Return


####################################################################
# 14 : LVALIM LVA threshold ( Field MD1 0)
####################################################################

$SET_LVALIM
If [L]_AOLDVAL<>this.LVALIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LVALIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LVALIM
 Gosub PROPAGATE_LVALIM
Endif
Return

$INIT_LVALIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "LVALIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LVALIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "LVALIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LVALIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LVALIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LVALIM
[L]CURPRO = "LVALIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LVALIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LVALIM
[L]CURPRO = "LVALIM"
Return

$_AOTHERS_LVALIM
[L]CURPRO = "LVALIM"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"LVALIM",this.LVALIM,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LVALIM
[L]CURPRO = "LVALIM"
Return

$PROPAGATE_LVALIM
this.isReadonly = 0
[L]CURPRO = "LVALIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LVALIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "LVALIM"
$_LNKPRO_LVALIM
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"LVALIM",this.LVALIM,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("LVALIM","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 15 : TOTMON Months ( Field C 4)
####################################################################

$SET_TOTMON
If [L]_AOLDVAL<>this.TOTMON
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOTMON
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOTMON
 Gosub PROPAGATE_TOTMON
Endif
Return

$INIT_TOTMON
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTMON"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOTMON
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTMON"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOTMON                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOTMON                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOTMON
[L]CURPRO = "TOTMON"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOTMON=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOTMON
[L]CURPRO = "TOTMON"
Return

$_AOTHERS_TOTMON
[L]CURPRO = "TOTMON"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOTMON
[L]CURPRO = "TOTMON"
Return

$PROPAGATE_TOTMON
this.isReadonly = 0
[L]CURPRO = "TOTMON"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOTMON
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTMON"
$_LNKPRO_TOTMON
Return


####################################################################
# 16 : TOTWEK Weeks ( Field C 4)
####################################################################

$SET_TOTWEK
If [L]_AOLDVAL<>this.TOTWEK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOTWEK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOTWEK
 Gosub PROPAGATE_TOTWEK
Endif
Return

$INIT_TOTWEK
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTWEK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOTWEK
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTWEK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOTWEK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOTWEK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOTWEK
[L]CURPRO = "TOTWEK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOTWEK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOTWEK
[L]CURPRO = "TOTWEK"
Return

$_AOTHERS_TOTWEK
[L]CURPRO = "TOTWEK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOTWEK
[L]CURPRO = "TOTWEK"
Return

$PROPAGATE_TOTWEK
this.isReadonly = 0
[L]CURPRO = "TOTWEK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOTWEK
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTWEK"
$_LNKPRO_TOTWEK
Return


####################################################################
# 17 : TOTDAY Days ( Field C 4)
####################################################################

$SET_TOTDAY
If [L]_AOLDVAL<>this.TOTDAY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOTDAY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOTDAY
 Gosub PROPAGATE_TOTDAY
Endif
Return

$INIT_TOTDAY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTDAY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOTDAY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTDAY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOTDAY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOTDAY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOTDAY
[L]CURPRO = "TOTDAY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOTDAY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOTDAY
[L]CURPRO = "TOTDAY"
Return

$_AOTHERS_TOTDAY
[L]CURPRO = "TOTDAY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOTDAY
[L]CURPRO = "TOTDAY"
Return

$PROPAGATE_TOTDAY
this.isReadonly = 0
[L]CURPRO = "TOTDAY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOTDAY
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "TOTDAY"
$_LNKPRO_TOTDAY
Return


####################################################################
# 19 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 20 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 21 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 22 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 23 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0FISCYEAR
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




