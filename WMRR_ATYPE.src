#<AdxTL>@(#)0.0.0.0 $Revision$Class Data types
# Supervisor
## CRUD-CLASSE ## ATYPE
# 2018-08-27 13:03:34 319


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ATYPE [ATY_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ATYPE") From ASYRCOM : Endif
Local Instance ATYPE Using R_ATYPE

If !SILENCE : Call TRACE("3 --> New Instance R_ATYPE") From ASYRCOM : Endif
ATYPE = NewInstance R_ATYPE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ATY_]CODTYP First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ATYPE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ATYPE.AREAD([ATY_]CODTYP))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ATYPE.ATY.CODTYP ="-num$(ATYPE.ATY.CODTYP)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ATYPE.ATY.AKEYS)
  Call TRACE("-"-num$(I)-":"-ATYPE.ATY.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ATY_]
FreeGroup ATYPE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ATYPE,ACLE,ASTATUS,_ETAG)
Variable Instance ATYPE Using R_ATYPE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODTYP(8)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODTYP = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File ATYPE [ATY]
Default File [F:ATY]
Read [F:ATY]CODTYP = [L]_CODTYP
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ATY]UPDTICK)>0
 [L]_ETAG = num$([F:ATY]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ATYPE,ACLE,ASTATUS)
Variable Instance ATYPE Using R_ATYPE
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODTYP(8)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODTYP = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.AREAD([L]_CODTYP))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ATYPE,_CODTYP,ASTATUS)
Variable Instance ATYPE Using R_ATYPE
Value Char _CODTYP
Variable Integer ASTATUS

If ATYPE = null : End : Endif

Gosub AVARIABLES From WMR00ATYPE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ATYPE.APARENT=null
 [L]A_I = ATYPE.freeSnapshot
 ATYPE.snapshotEnabled = 0
 ATYPE.setAccessorEnabled = 0
Endif

If fmet ATYPE.ACTX.AGETAFCRIGHT(ATYPE,"GESATY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:ATY]
Read [F:ATY]CODTYP = [L]_CODTYP
If fstat
[L]A_ERROR = [L]_CODTYP
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATYPE,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet ATYPE.ACTX.AGETAFCRIGHTR(ATYPE,"GESATY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet ATYPE.ACTX.ASTACRITROLE(ATYPE,[L]_CODTYP
& ,"ATY","ATY",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ATYPE.ATY.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ATY.AREAD([L]_CODTYP))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ATYPE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ATYPE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ATYPE.APARENT=null
 ATYPE.snapshotEnabled = 1
 ATYPE.setAccessorEnabled = 1
Endif
LogicClose File [ATY] ,[ATYR] ,[ATYRP]
End



