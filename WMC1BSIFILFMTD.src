#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import format definition
# Supervisor
## ACLA-CLASSE ## BSIFILFMTD
# 2018-08-27 12:26:50 442


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CODBFF File format ( Field BSIBFF 10)
####################################################################

$SET_CODBFF
If [L]_AOLDVAL<>this.CODBFF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODBFF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODBFF
 Gosub PROPAGATE_CODBFF
Endif
Return

$INIT_CODBFF
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CODBFF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODBFF
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CODBFF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODBFF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODBFF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODBFF
[L]CURPRO = "CODBFF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODBFF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODBFF
[L]CURPRO = "CODBFF"
If vireblc(this.CODBFF,2)<>vireblc(format$("K:10X",this.CODBFF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODBFF
[L]CURPRO = "CODBFF"
If vireblc(this.CODBFF,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBSIBFF.ACTRLREF(this,"CODBFF",this.CODBFF,this.CODBFF,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODBFF<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODBFF
[L]CURPRO = "CODBFF"
Return

$PROPAGATE_CODBFF
this.isReadonly = 0
[L]CURPRO = "CODBFF"
Gosub _LNKPRO_CODBFF
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODBFF
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CODBFF"
$_LNKPRO_CODBFF
If vireblc(this.CODBFF,2)<>""
 # Link BSIFILFMT
 Local File BSIFILFMT [WBSIFFM]
 Read [F:WBSIFFM]BSIFFM0 = this.CODBFF
 If !fstat
 Endif
 LogicClose File [WBSIFFM]
Endif
Return

$_ALOADATTRIBUTE_CODBFF
[L]ASTATUS = fmet this.ASETATTRIBUTE("CODBFF","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field DES 30)
####################################################################

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(this.DES,2)<>vireblc(format$("K:30X",this.DES),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : LIN Line number ( Field C 3)
####################################################################

$SET_LIN
If [L]_AOLDVAL<>this.LIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIN
 Gosub PROPAGATE_LIN
Endif
Return

$INIT_LIN
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "LIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIN
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "LIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIN
[L]CURPRO = "LIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIN
[L]CURPRO = "LIN"
Return

$_AOTHERS_LIN
[L]CURPRO = "LIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIN
[L]CURPRO = "LIN"
Return

$PROPAGATE_LIN
this.isReadonly = 0
[L]CURPRO = "LIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIN
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "LIN"
$_LNKPRO_LIN
Return

$_ALOADATTRIBUTE_LIN
[L]ASTATUS = fmet this.ASETATTRIBUTE("LIN","$isMandatory","true")
Return


####################################################################
# 4 : SCT Segment ( Field BSISCT 20)
####################################################################

$SET_SCT
If [L]_AOLDVAL<>this.SCT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCT
 Gosub PROPAGATE_SCT
Endif
Return

$INIT_SCT
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SCT
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCT
[L]CURPRO = "SCT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SCT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCT
[L]CURPRO = "SCT"
If vireblc(this.SCT,2)<>vireblc(format$("K:20X",this.SCT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SCT
[L]CURPRO = "SCT"
If vireblc(this.SCT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBSISCT.ACTRLREF(this,"SCT",this.SCT,this.SCT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SCT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCT
[L]CURPRO = "SCT"
Return

$PROPAGATE_SCT
this.isReadonly = 0
[L]CURPRO = "SCT"
Gosub _LNKPRO_SCT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCT
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCT"
$_LNKPRO_SCT
If vireblc(this.SCT,2)<>""
 # Link BSISCT
 Local File BSISCT [WBSISCT]
 Read [F:WBSISCT]BSISCT0 = this.SCT
 If !fstat
 Endif
 LogicClose File [WBSISCT]
Endif
Return

$_ALOADATTRIBUTE_SCT
[L]ASTATUS = fmet this.ASETATTRIBUTE("SCT","$isMandatory","true")
Return


####################################################################
# 5 : LEV Level ( Field C 4)
####################################################################

$SET_LEV
If [L]_AOLDVAL<>this.LEV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEV
 Gosub PROPAGATE_LEV
Endif
Return

$INIT_LEV
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "LEV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEV
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "LEV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEV                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEV                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEV
[L]CURPRO = "LEV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LEV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEV
[L]CURPRO = "LEV"
Return

$_AOTHERS_LEV
[L]CURPRO = "LEV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEV
[L]CURPRO = "LEV"
Return

$PROPAGATE_LEV
this.isReadonly = 0
[L]CURPRO = "LEV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEV
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "LEV"
$_LNKPRO_LEV
Return


####################################################################
# 6 : SCTSTR Start ( Field Local menu number 1)
####################################################################

$SET_SCTSTR
If [L]_AOLDVAL<>this.SCTSTR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCTSTR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCTSTR
 Gosub PROPAGATE_SCTSTR
Endif
Return

$INIT_SCTSTR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCTSTR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SCTSTR=0 and fmet this.AGETATTRIBUTE("SCTSTR","$isMandatory")="true"
 this.SCTSTR = 1
Endif
Return
 
$CONTROL_SCTSTR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCTSTR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCTSTR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCTSTR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCTSTR
[L]CURPRO = "SCTSTR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SCTSTR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCTSTR
[L]CURPRO = "SCTSTR"
If this.SCTSTR<0 or this.SCTSTR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SCTSTR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SCTSTR
[L]CURPRO = "SCTSTR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCTSTR
[L]CURPRO = "SCTSTR"
Return

$PROPAGATE_SCTSTR
this.isReadonly = 0
[L]CURPRO = "SCTSTR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCTSTR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCTSTR"
$_LNKPRO_SCTSTR
Return


####################################################################
# 7 : SCTEND End ( Field Local menu number 1)
####################################################################

$SET_SCTEND
If [L]_AOLDVAL<>this.SCTEND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCTEND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCTEND
 Gosub PROPAGATE_SCTEND
Endif
Return

$INIT_SCTEND
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCTEND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SCTEND=0 and fmet this.AGETATTRIBUTE("SCTEND","$isMandatory")="true"
 this.SCTEND = 1
Endif
Return
 
$CONTROL_SCTEND
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCTEND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCTEND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCTEND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCTEND
[L]CURPRO = "SCTEND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SCTEND=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCTEND
[L]CURPRO = "SCTEND"
If this.SCTEND<0 or this.SCTEND>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SCTEND)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SCTEND
[L]CURPRO = "SCTEND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCTEND
[L]CURPRO = "SCTEND"
Return

$PROPAGATE_SCTEND
this.isReadonly = 0
[L]CURPRO = "SCTEND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCTEND
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SCTEND"
$_LNKPRO_SCTEND
Return


####################################################################
# 8 : TABTYP Header/Line ( Field Local menu number 3689)
####################################################################

$SET_TABTYP
If [L]_AOLDVAL<>this.TABTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TABTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TABTYP
 Gosub PROPAGATE_TABTYP
Endif
Return

$INIT_TABTYP
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "TABTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TABTYP=0 and fmet this.AGETATTRIBUTE("TABTYP","$isMandatory")="true"
 this.TABTYP = 1
Endif
Return
 
$CONTROL_TABTYP
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "TABTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TABTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TABTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TABTYP
[L]CURPRO = "TABTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TABTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TABTYP
[L]CURPRO = "TABTYP"
If this.TABTYP<0 or this.TABTYP>len(mess(0,3689,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3689 ->"-num$(this.TABTYP)-mess(99,123,1)):  Return : # Local menu "3689 -> Invalid option
Endif
Return

$_AOTHERS_TABTYP
[L]CURPRO = "TABTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TABTYP
[L]CURPRO = "TABTYP"
Return

$PROPAGATE_TABTYP
this.isReadonly = 0
[L]CURPRO = "TABTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TABTYP
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "TABTYP"
$_LNKPRO_TABTYP
Return


####################################################################
# 9 : SEGOBY Mandatory ( Field Local menu number 1)
####################################################################

$SET_SEGOBY
If [L]_AOLDVAL<>this.SEGOBY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SEGOBY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SEGOBY
 Gosub PROPAGATE_SEGOBY
Endif
Return

$INIT_SEGOBY
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SEGOBY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SEGOBY=0 and fmet this.AGETATTRIBUTE("SEGOBY","$isMandatory")="true"
 this.SEGOBY = 1
Endif
Return
 
$CONTROL_SEGOBY
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SEGOBY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SEGOBY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SEGOBY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SEGOBY
[L]CURPRO = "SEGOBY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SEGOBY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SEGOBY
[L]CURPRO = "SEGOBY"
If this.SEGOBY<0 or this.SEGOBY>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SEGOBY)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SEGOBY
[L]CURPRO = "SEGOBY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SEGOBY
[L]CURPRO = "SEGOBY"
Return

$PROPAGATE_SEGOBY
this.isReadonly = 0
[L]CURPRO = "SEGOBY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SEGOBY
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "SEGOBY"
$_LNKPRO_SEGOBY
Return


####################################################################
# 10 : DBACT Operation ( Field Local menu number 3672)
####################################################################

$SET_DBACT
If [L]_AOLDVAL<>this.DBACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DBACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DBACT
 Gosub PROPAGATE_DBACT
Endif
Return

$INIT_DBACT
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "DBACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DBACT=0 and fmet this.AGETATTRIBUTE("DBACT","$isMandatory")="true"
 this.DBACT = 1
Endif
Return
 
$CONTROL_DBACT
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "DBACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DBACT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DBACT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DBACT
[L]CURPRO = "DBACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DBACT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DBACT
[L]CURPRO = "DBACT"
If this.DBACT<0 or this.DBACT>len(mess(0,3672,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3672 ->"-num$(this.DBACT)-mess(99,123,1)):  Return : # Local menu "3672 -> Invalid option
Endif
Return

$_AOTHERS_DBACT
[L]CURPRO = "DBACT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DBACT
[L]CURPRO = "DBACT"
Return

$PROPAGATE_DBACT
this.isReadonly = 0
[L]CURPRO = "DBACT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DBACT
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "DBACT"
$_LNKPRO_DBACT
Return


####################################################################
# 11 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 12 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 13 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 14 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 15 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0BSIFILFMTD
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




