#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHSCOHEAD SCOHEAD
# 2018-08-27 12:44:04 618

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","SCOHEAD","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SCOHEAD [SCO]
If filinfo(filpath("FIL","SCOITM","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SCOITM [SCI]
If filinfo(filpath("FIL","SCOMAT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SCOMAT [SCM]
If filinfo(filpath("FIL","SCOSRV","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SCOSRV [SCS]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [SCICAL]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [SCSCAL]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [SCMCAL]
Local File SCOHEAD [SCO_]
Local Char KEY_SCO(120)(1..3)
Local Char KEY_SCI(120)(1..3)
Local Char KEY_SCM(120)(1..3)
Local Char KEY_SCS(120)(1..3)
Local Char KEY_SCICAL(120)(1..3)
Local Char KEY_SCSCAL(120)(1..3)
Local Char KEY_SCMCAL(120)(1..3)
#Empty keys :
KEY_SCO(3) = ""
KEY_SCI(3) = "+0"
KEY_SCM(3) = "+0+0"
KEY_SCS(3) = "+0+0"
KEY_SCICAL(3) = "+0++0+0++0"
KEY_SCSCAL(3) = "+0++0+0++0"
KEY_SCMCAL(3) = "+0++0+0++0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [SCO]
LogicClose File [SCI]
LogicClose File [SCM]
LogicClose File [SCS]
LogicClose File [SCICAL]
LogicClose File [SCSCAL]
LogicClose File [SCMCAL]
LogicClose File [SCO_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [SCO] With
& [SCI]SCI0~=[SCO]SCONUM;1000,
& [SCM]SCM0=[SCI]SCONUM;[SCI]SCILIN,
& [SCS]SCS0=[SCI]SCONUM;[SCI]SCILIN;5,
& [SCICAL]CAL0='SCI';36;[SCI]SCONUM;[SCI]SCILIN;0;'';1,
& [SCSCAL]CAL0='SCS';36;[SCS]SCONUM;[SCS]SCILIN;[SCS]SCSLIN;'';1,
& [SCMCAL]CAL0='SCM';36;[SCM]SCONUM;[SCM]SCILIN;[SCM]SCMLIN;'';1
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [SCO] With
& [SCI]SCI0~=[SCO]SCONUM;1000,
& [SCM]SCM0=[SCI]SCONUM;[SCI]SCILIN,
& [SCS]SCS0=[SCI]SCONUM;[SCI]SCILIN;5,
& [SCICAL]CAL0='SCI';36;[SCI]SCONUM;[SCI]SCILIN;0;'';1,
& [SCSCAL]CAL0='SCS';36;[SCS]SCONUM;[SCS]SCILIN;[SCS]SCSLIN;'';1,
& [SCMCAL]CAL0='SCM';36;[SCM]SCONUM;[SCM]SCILIN;[SCM]SCMLIN;'';1
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_SCO(2) = [F:SCO]SCONUM
KEY_SCI(2) = [F:SCI]SCONUM+"+"+num$([F:SCI]SCILIN)
KEY_SCM(2) = [F:SCM]SCONUM+"+"+num$([F:SCM]SCILIN)+"+"+num$([F:SCM]SCMLIN)
KEY_SCS(2) = [F:SCS]SCONUM+"+"+num$([F:SCS]SCILIN)+"+"+num$([F:SCS]SCSLIN)
KEY_SCICAL(2) = [F:SCICAL]ABRFIC+"+"+num$([F:SCICAL]VCRTYP)+"+"+[F:SCICAL]VCRNUM+"+"+num$([F:SCICAL]VCRLIN)+"+"+num$([F:SCICAL]VCRSEQ)+"+"+[F:SCICAL]CPLCLE+"+"+num$([F:SCICAL]ANALIG)
KEY_SCSCAL(2) = [F:SCSCAL]ABRFIC+"+"+num$([F:SCSCAL]VCRTYP)+"+"+[F:SCSCAL]VCRNUM+"+"+num$([F:SCSCAL]VCRLIN)+"+"+num$([F:SCSCAL]VCRSEQ)+"+"+[F:SCSCAL]CPLCLE+"+"+num$([F:SCSCAL]ANALIG)
KEY_SCMCAL(2) = [F:SCMCAL]ABRFIC+"+"+num$([F:SCMCAL]VCRTYP)+"+"+[F:SCMCAL]VCRNUM+"+"+num$([F:SCMCAL]VCRLIN)+"+"+num$([F:SCMCAL]VCRSEQ)+"+"+[F:SCMCAL]CPLCLE+"+"+num$([F:SCMCAL]ANALIG)

If (KEY_SCO(2) <> KEY_SCO(3)) & (KEY_SCO(1) <> KEY_SCO(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_SCOHEAD(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:SCO]
FINS = 1
 KEY_SCO(1) = KEY_SCO(2)
Endif : # KEY_SCO(1) <> KEY_SCO(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"SCONUM":'          +'"'+escJson(INS.SCONUM)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"SCODES":'         +'"'+escJson(INS.SCODES)+'"'
Append ASND.DATA ,',"POHFCY":'         +'"'+escJson(INS.POHFCY)+'"'
Append ASND.DATA ,',"MFGFCY":'         +'"'+escJson(INS.MFGFCY)+'"'
Append ASND.DATA ,',"INVFCY":'         +'"'+escJson(INS.INVFCY)+'"'
Append ASND.DATA ,',"BPRNUM":'         +'"'+escJson(INS.BPRNUM)+'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"SCOTEX":'         +'"'+escJson(INS.SCOTEX)+'"'
Append ASND.DATA ,',"MTOREF":'         +'"'+escJson(INS.MTOREF)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_SCO(1),KEY_SCI(1),KEY_SCM(1),KEY_SCS(1),KEY_SCICAL(1),KEY_SCSCAL(1),KEY_SCMCAL(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:SCO]SCONUM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="SCOHEAD" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SCOHEAD")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SCOHEAD")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,18751)+'"'
Append WCLOB,',"$url":"{$baseUrl}/SCOHEAD'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{POHFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,18751)+' {$key}"'
Append WCLOB,',"$key":"{SCONUM}"'
Append WCLOB,',"$url":"{$baseUrl}/SCOHEAD('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'SCOHEAD.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"SCONUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27223)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"SCODES":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,282)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"POHFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2550)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"MFGFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,9144)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"INVFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6073)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPRNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3680)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"SCOTEX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4685)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"MTOREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,33645)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/SCOHEAD('+"'"+'{$key}'+"'"+')?representation=SCOHEAD.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHSCOHEADB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHSCOHEADB
End RES


