#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ADOCTRA2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:47:43"
A_USER  = "ADMIN"
A_STAMP = "20180827234743"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBDOC"
  If [M]NBDOC=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ADOCTRA2 [TRA2]
Gosub HORODAT
Local Inpbox "ADOCTRA2" From GFONCTION At A_STAMP With A_WINDPREV Mask [TRA2] As [SIM_]
Grizo [TRA2]5
Grizo [TRA2]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [TRA2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=5
X1(1)=1 : X2(1)=112 : Y1(1)=6 : Y2(1)=24
Return

$ON_ALLTYP
Onevent AFTER_CHANGE Gosub AMM_ALLTYP From W1ADOCTRA2
Onevent INIT_AREA Call D_ALLTYP(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_ALLTYP(zc) From W1ADOCTRA2
Return

Subprog D_ALLTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ALLTYP
Call AM_ALLTYP(zc)
If !mkstat & GOBJET
 zoncou = "ALLTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ALLTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ALLTYP(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "ALLTYP" : GZNUM = 10412 : Endif
Gosub _AFF
End

$ON_TYP
Onevent INIT_AREA Call D_TYP(zc) From W1ADOCTRA2
Onevent CONTROL Call C_TYP(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_TYP(zc) From W1ADOCTRA2
Onevent AFTER_CHANGE Gosub AMM_TYP From W1ADOCTRA2
Return

Subprog D_TYP(VALEUR)
Variable Char    VALEUR()
If varinit([M]TYP,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"910","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_TYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TITADI(GBOUT1,"910") From TRTDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_TYP(zc) From W1ADOCTRA2
Onkey   2 Titled GBOUTS Call S_TYP(zc) From W1ADOCTRA2
Onkey 144 Titled GBOUTP Call P_TYP(zc) From W1ADOCTRA2
Onkey 146 Titled GBOUTA Call SA_TYP(zc) From W1ADOCTRA2
Gosub _AFF
End

Subprog C_TYP(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"910","") From SUBADI
If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 680 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"910",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 680 : Endif
 If !mkstat
  ## Action STD
  Call C_TYP(VALEUR) From ADOCTRA
  If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 680 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_TYP
Call AM_TYP(zc)
If !mkstat & GOBJET
 zoncou = "TYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYP(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZTYP)")>indice
 [M]TYP(indice) = VALEUR
 Affzo ZTYP(indice)
Endif
Gosub _AFF
End

Subprog S_TYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "910"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_TYP(VALEUR)
Variable Char    VALEUR()
Call OBJET("ADI",VALEUR,"910") From GOBJET
Gosub _AFF
End

Subprog SA_TYP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "910"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TYP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "910"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZTYP
Onevent BEFORE_AREA Gosub AV_ZTYP From W1ADOCTRA2
Return

$AV_ZTYP
Call LECTEXTRA(zc,"ATABDIV","LNGDES","910",num$([M]TYP(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_ALLMOD
Onevent AFTER_CHANGE Gosub AMM_ALLMOD From W1ADOCTRA2
Onevent INIT_AREA Call D_ALLMOD(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_ALLMOD(zc) From W1ADOCTRA2
Return

Subprog D_ALLMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLMOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ALLMOD
Call AM_ALLMOD(zc)
If !mkstat & GOBJET
 zoncou = "ALLMOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ALLMOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ALLMOD(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "ALLMOD" : GZNUM = 21328 : Endif
Gosub _AFF
End

$ON_MODULE
Onevent INIT_AREA Call D_MODULE(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_MODULE(zc) From W1ADOCTRA2
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODULE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_EXCMOD
Onevent AFTER_CHANGE Gosub AMM_EXCMOD From W1ADOCTRA2
Onevent INIT_AREA Call D_EXCMOD(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_EXCMOD(zc) From W1ADOCTRA2
Return

Subprog D_EXCMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]EXCMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_EXCMOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_EXCMOD
Call AM_EXCMOD(zc)
If !mkstat & GOBJET
 zoncou = "EXCMOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EXCMOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_EXCMOD(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "EXCMOD" : GZNUM = 33506 : Endif
Gosub _AFF
End

$ON_MODTOEXC
Onevent INIT_AREA Call D_MODTOEXC(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_MODTOEXC(zc) From W1ADOCTRA2
Return

Subprog D_MODTOEXC(VALEUR)
Variable Integer VALEUR
If varinit([M]MODTOEXC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODTOEXC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ALLPRIO
Onevent AFTER_CHANGE Gosub AMM_ALLPRIO From W1ADOCTRA2
Onevent INIT_AREA Call D_ALLPRIO(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_ALLPRIO(zc) From W1ADOCTRA2
Return

Subprog D_ALLPRIO(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLPRIO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLPRIO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ALLPRIO
Call AM_ALLPRIO(zc)
If !mkstat & GOBJET
 zoncou = "ALLPRIO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ALLPRIO(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ALLPRIO(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "ALLPRIO" : GZNUM = 42482 : Endif
Gosub _AFF
End

$ON_PRIOTRA
Onevent INIT_AREA Call D_PRIOTRA(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_PRIOTRA(zc) From W1ADOCTRA2
Return

Subprog D_PRIOTRA(VALEUR)
Variable Integer VALEUR
If varinit([M]PRIOTRA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PRIOTRA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ALLCOD
Onevent AFTER_CHANGE Gosub AMM_ALLCOD From W1ADOCTRA2
Onevent INIT_AREA Call D_ALLCOD(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_ALLCOD(zc) From W1ADOCTRA2
Return

Subprog D_ALLCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ALLCOD
Call AM_ALLCOD(zc)
If !mkstat & GOBJET
 zoncou = "ALLCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ALLCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ALLCOD(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "ALLCOD" : GZNUM = 27400 : Endif
Gosub _AFF
End

$ON_CODDEB
Onevent AFTER_CHANGE Gosub AMM_CODDEB From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_CODDEB(zc) From W1ADOCTRA2
Return

Subprog AS_CODDEB(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_CODDEB(zc) From W1ADOCTRA2
Gosub _AFF
End

$AMM_CODDEB
Call AM_CODDEB(zc)
If !mkstat & GOBJET
 zoncou = "CODDEB" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODDEB(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CODDEB(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "CODDEB" : GZNUM = 30008 : Endif
Gosub _AFF
End

Subprog S_CODDEB(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ASELDOC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ASELDOC"
 PARMSK(1) = [M]TYP
 Call S_AFF_CHAR(VALEUR,PARMSK,"ASELDOC","SUBADO","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_CODFIN
Onevent BEFORE_INPUT Call AS_CODFIN(zc) From W1ADOCTRA2
Return

Subprog AS_CODFIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_CODFIN(VALEUR) From ADOCTRA
If mkstat=2
 [M]CODFIN(INDIC) = VALEUR
 Affzo CODFIN(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_CODFIN(zc) From W1ADOCTRA2
Gosub _AFF
End

Subprog S_CODFIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ASELDOC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ASELDOC"
 PARMSK(1) = [M]TYP
 Call S_AFF_CHAR(VALEUR,PARMSK,"ASELDOC","SUBADO","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_NBDOC
Onevent BEFORE_INPUT Call AS_NBDOC From W1ADOCTRA2
Onevent BEFORE_AREA Call AV_NBDOC From W1ADOCTRA2
Return

Subprog AV_NBDOC
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBDOC" : Gosub TIT_COL From W1ADOCTRA2
Endif
Gosub _AFF
End

Subprog AS_NBDOC
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(31449,GBOUT3) From OBJDIV
## Action STD
Call AS_NBDOC From ADOCTRA
Onkey 129 Titled GBOUT1 Call B1_NBDOC From W1ADOCTRA2
Onkey 130 Titled GBOUT2 Call B2_NBDOC From W1ADOCTRA2
Onkey 131 Titled GBOUT3 Call B3_NBDOC From W1ADOCTRA2
Gosub _AFF
End

Subprog B1_NBDOC
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B1_NBDOC From ADOCTRA
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBDOC
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B2_NBDOC From ADOCTRA
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBDOC
Local Decimal BASPAG
If !GWEBSERV
 ## Action ADOCTRA4
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADOCTRA4"
 PARMSK(1) = [M]DOCTYP(nolign-1)
 PARMSK(2) = [M]COD(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"","ADOCTRA","ADOCTRA4",3,"SPEADOCTRA") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PROFLG
Onevent AFTER_CHANGE Gosub AMM_PROFLG From W1ADOCTRA2
Onevent INIT_AREA Call D_PROFLG(zc) From W1ADOCTRA2
Onevent BEFORE_INPUT Call AS_PROFLG(zc) From W1ADOCTRA2
Return

Subprog D_PROFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PROFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PROFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_PROFLG
Call AM_PROFLG(zc)
If !mkstat & GOBJET
 zoncou = "PROFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PROFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_PROFLG(VALEUR) From ADOCTRA
If mkstat : GERR = 1 : GZONE = "PROFLG" : GZNUM = 31452 : Endif
Gosub _AFF
End

$ON_DOCTYP
Onevent INIT_AREA Call D_DOCTYP(zc) From W1ADOCTRA2
Return

Subprog D_DOCTYP(VALEUR)
Variable Char    VALEUR()
If varinit([M]DOCTYP,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"910","") From SUBADI
Endif
Gosub _AFF
End

$ON_VLDDATREF
Onevent BEFORE_AREA Gosub AV_VLDDATREF From W1ADOCTRA2
Return

$AV_VLDDATREF
Chgfmt [M]VLDDATREF(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_VLDDAT
Onevent BEFORE_AREA Gosub AV_VLDDAT From W1ADOCTRA2
Return

$AV_VLDDAT
Chgfmt [M]VLDDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_EXIST
Onevent INIT_AREA Call D_EXIST(zc) From W1ADOCTRA2
Return

Subprog D_EXIST(VALEUR)
Variable Integer VALEUR
If varinit([M]EXIST,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PRIO
Onevent INIT_AREA Call D_PRIO(zc) From W1ADOCTRA2
Return

Subprog D_PRIO(VALEUR)
Variable Integer VALEUR
If varinit([M]PRIO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$TIT_COL
Local Char TITCL(200)(1..3)
Raz TITCL
Case BASPAG
 When "NBDOC"
  TITCL(1) = mess(14,123,1)-[M]LANREF
  TITCL(2) = mess(14,123,1)-[M]LAN
  TITCL(3) = mess(110,176,1)-[M]LAN
  If !GORITITCOL
   Titcol [M]NBDOC TITCL(1) For VLDDATREF
   Titcol [M]NBDOC TITCL(2) For VLDDAT
   Titcol [M]NBDOC TITCL(3) For CREGRP
  Else
   Titcol [M:TRA2]NBDOC TITCL(1) For VLDDATREF
   Titcol [M:TRA2]NBDOC TITCL(2) For VLDDAT
   Titcol [M:TRA2]NBDOC TITCL(3) For CREGRP
  Endif
Endcase
Return

$CHG_STY
Return


