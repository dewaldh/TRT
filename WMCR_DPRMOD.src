#<AdxTL>@(#)0.0.0.0 $Revision$Class Depreciation methods
# Supervisor
## CRUD-CLASSE ## DPRMOD
# 2018-08-27 12:30:54 623


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File DPRMOD [DPM_]

If !SILENCE : Call TRACE("2 --> Local Instance C_DPRMOD") From ASYRCOM : Endif
Local Instance DPRMOD Using C_DPRMOD

If !SILENCE : Call TRACE("3 --> New Instance C_DPRMOD") From ASYRCOM : Endif
DPRMOD = NewInstance C_DPRMOD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [DPM_]DPM0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of DPRMOD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.AREAD([DPM_]DPM,[DPM_]CPY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("DPRMOD.DPM ="-num$(DPRMOD.DPM)) From ASYRCOM
 Call TRACE("DPRMOD.CPY ="-num$(DPRMOD.CPY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(DPRMOD.AKEYS)
  Call TRACE("-"-num$(I)-":"-DPRMOD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [DPM_]
FreeGroup DPRMOD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(DPRMOD,ACLE,ASTATUS,_ETAG)
Variable Instance DPRMOD Using C_DPRMOD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _DPM(8)
Local Char _CPY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_DPM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPY = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File DPRMOD [DPM]
Default File [F:DPM]
Read [F:DPM]DPM0 = [L]_DPM;[L]_CPY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:DPM]UPDTICK)>0
 [L]_ETAG = num$([F:DPM]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(DPRMOD,ACLE,ASTATUS)
Variable Instance DPRMOD Using C_DPRMOD
Value Char ACLE
Variable Integer ASTATUS
Local Char _DPM(8)
Local Char _CPY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_DPM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPY = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.AREAD([L]_DPM,[L]_CPY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(DPRMOD,_DPM,_CPY,ASTATUS)
Variable Instance DPRMOD Using C_DPRMOD
Value Char _DPM
Value Char _CPY
Variable Integer ASTATUS

If DPRMOD = null : End : Endif

Gosub AVARIABLES From WMC00DPRMOD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If DPRMOD.APARENT=null
 [L]A_I = DPRMOD.freeSnapshot
 DPRMOD.snapshotEnabled = 0
 DPRMOD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & DPRMOD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If DPRMOD.APARENT=null
 DPRMOD.snapshotEnabled = 1
 DPRMOD.setAccessorEnabled = 1
Endif
LogicClose File [DPM] ,[DMR] ,[DMO]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD._ACTION_PARAM("AREAD_BEFORE",[L]_DPM,[L]_CPY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:DPM]
Read [F:DPM]DPM0 = [L]_DPM;[L]_CPY
If fstat
[L]A_ERROR = [L]_DPM+"~"+[L]_CPY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(DPRMOD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:DPM]AUUID)>0 & [F:DPM]AUUID=NullUuid
 [F:DPM]AUUID = getUuid
Endif
SetInstance DPRMOD With [F:DPM]
DPRMOD.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:DMR]
 [L]A_N2=0
 For [F:DMR]DMR0 Where DPM=[DPM]DPM & CPY=[DPM]CPY
  [L]A_N2 +=1
  DPRMOD.DMR(A_N2) = NewInstance  C_DPRMODRAT(DPRMOD.ACTX,NullUuid,[L]A_N2,DPRMOD,"DMR") AllocGroup DPRMOD
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ADDINSTANCE_BOUND)
  If dim([F:DMR]AUUID)>0 & [F:DMR]AUUID=NullUuid
   [F:DMR]AUUID = getUuid
  Endif
  SetInstance DPRMOD.DMR(A_N2) With [F:DMR]
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  DPRMOD.DMR(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ASETATTRIBUTE("DPM","$namProParent","DPM"))
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ASETATTRIBUTE("CPY","$namProParent","CPY"))
 Next DMR
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:DMO]
 [L]A_N2=0
 For [F:DMO]DMO0 Where STDDPM=[DPM]STDDPM & CPY=[DPM]CPY
  [L]A_N2 +=1
  DPRMOD.DMO(A_N2) = NewInstance  C_DPRMODOPT(DPRMOD.ACTX,NullUuid,[L]A_N2,DPRMOD,"DMO") AllocGroup DPRMOD
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ADDINSTANCE_BOUND)
  If dim([F:DMO]AUUID)>0 & [F:DMO]AUUID=NullUuid
   [F:DMO]AUUID = getUuid
  Endif
  SetInstance DPRMOD.DMO(A_N2) With [F:DMO]
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  DPRMOD.DMO(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ASETATTRIBUTE("STDDPM","$namProParent","DPM"))
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ASETATTRIBUTE("CPY","$namProParent","CPY"))
 Next DMO
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]A_NEWCOL = 0
For [L]A_I=1 To 15
 [L]A_NEWCOL += 1
 DPRMOD.PLN(A_NEWCOL) = NewInstance  C_DPRMOD_PLN(DPRMOD.ACTX,NullUuid,[L]A_I,DPRMOD,"PLN") AllocGroup DPRMOD
 DPRMOD.PLN(A_NEWCOL).APLPLNFLG = [F:DPM]APLPLNFLG([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.PLN(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



