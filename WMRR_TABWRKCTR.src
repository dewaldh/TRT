#<AdxTL>@(#)0.0.0.0 $Revision$Class Work center groups
# Sage X3 supervisor
## CRUD-CLASSE ## TABWRKCTR
# 2018-03-26 01:29:26 473


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABWRKCTR [TWC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABWRKCTR") From ASYRCOM : Endif
Local Instance TABWRKCTR Using R_TABWRKCTR

If !SILENCE : Call TRACE("3 --> New Instance R_TABWRKCTR") From ASYRCOM : Endif
TABWRKCTR = NewInstance R_TABWRKCTR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TWC_]TWC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABWRKCTR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.AREAD([TWC_]WCR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABWRKCTR.TWC.WCR ="-num$(TABWRKCTR.TWC.WCR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABWRKCTR.TWC.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABWRKCTR.TWC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TWC_]
FreeGroup TABWRKCTR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABWRKCTR,ACLE,ASTATUS,_ETAG)
Variable Instance TABWRKCTR Using R_TABWRKCTR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _WCR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_WCR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABWRKCTR [TWC]
Default File [F:TWC]
Read [F:TWC]TWC0 = [L]_WCR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TWC]UPDTICK)>0
 [L]_ETAG = num$([F:TWC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABWRKCTR,ACLE,ASTATUS)
Variable Instance TABWRKCTR Using R_TABWRKCTR
Value Char ACLE
Variable Integer ASTATUS
Local Char _WCR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_WCR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.AREAD([L]_WCR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABWRKCTR,_WCR,ASTATUS)
Variable Instance TABWRKCTR Using R_TABWRKCTR
Value Char _WCR
Variable Integer ASTATUS

If TABWRKCTR = null : End : Endif

Gosub AVARIABLES From WMR00TABWRKCTR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABWRKCTR.APARENT=null
 [L]A_I = TABWRKCTR.freeSnapshot
 TABWRKCTR.snapshotEnabled = 0
 TABWRKCTR.setAccessorEnabled = 0
Endif

If fmet TABWRKCTR.ACTX.AGETAFCRIGHT(TABWRKCTR,"GESTWC",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TWC]
Read [F:TWC]TWC0 = [L]_WCR
If fstat
[L]A_ERROR = [L]_WCR
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABWRKCTR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABWRKCTR.ACTX.AGETAFCRIGHTR(TABWRKCTR,"GESTWC",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABWRKCTR.ACTX.ASTACRITROLE(TABWRKCTR,[L]_WCR
& ,"TWC","TWC",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABWRKCTR.TWC.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.TWC.AREAD([L]_WCR))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABWRKCTR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABWRKCTR.APARENT=null
 TABWRKCTR.snapshotEnabled = 1
 TABWRKCTR.setAccessorEnabled = 1
Endif
LogicClose File [TWC] ,[MWS]
End



