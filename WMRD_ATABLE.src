#<AdxTL>@(#)0.0.0.0 $Revision$Class Data dictionary
# Supervisor
## CRUD-CLASSE ## ATABLE
# 2018-08-27 13:03:14 875


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(ATABLE,ASTATUS)
Variable Instance ATABLE Using R_ATABLE
Variable Integer ASTATUS

If ATABLE = null : End : Endif

Gosub AVARIABLES From WMR00ATABLE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet ATABLE.ACTX.AGETAFCRIGHT(ATABLE,"GESATB",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet ATABLE.ACTX.AGETAFCRIGHTD(ATABLE,"GESATB",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_ATABLE
Else
 Gosub ADELETE_ATABLE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
ATABLE.ASTALIN = [V]CST_ADEL
ATABLE.ATB.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(ATABLE.ATB,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If ATABLE.ATB.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATABLE.ATB.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATZ) : # ATABZON -- 2
 If ATABLE.ATB.ATZ(A_N2) <> null
& and ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEW
   ATABLE.ATB.ATZ(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 For A_N3=1 To maxtab(ATABLE.ATB.ATZ(A_N2).AMP) : # AMSKPAR -- 5
  If ATABLE.ATB.ATZ(A_N2).AMP(A_N3) <> null
& and ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN<>[V]CST_ANEWDEL
   If ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN<>[V]CST_ANEW
    ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN = [V]CST_ADEL
    [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ACTION("ADELETE_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATI) : # ATABIND -- 3
 If ATABLE.ATB.ATI(A_N2) <> null
& and ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEW
   ATABLE.ATB.ATI(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATI(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATA) : # ATABAUD -- 4
 If ATABLE.ATB.ATA(A_N2) <> null
& and ATABLE.ATB.ATA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABLE.ATB.ATA(A_N2).ASTALIN<>[V]CST_ANEW
   ATABLE.ATB.ATA(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATA(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(ATABLE.ATB.ATZ) : # ATABZON -- 2
 If ATABLE.ATB.ATZ(A_N2) <> null
& and ATABLE.ATB.ATZ(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
 For A_N3=1 To maxtab(ATABLE.ATB.ATZ(A_N2).AMP) : # AMSKPAR -- 5
  If ATABLE.ATB.ATZ(A_N2).AMP(A_N3) <> null
& and ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ASTALIN<>[V]CST_ANEWDEL
   [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATZ(A_N2).AMP(A_N3).ACTION("ADELETE_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
  Endif
 Next A_N3
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATI) : # ATABIND -- 3
 If ATABLE.ATB.ATI(A_N2) <> null
& and ATABLE.ATB.ATI(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATI(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(ATABLE.ATB.ATA) : # ATABAUD -- 4
 If ATABLE.ATB.ATA(A_N2) <> null
& and ATABLE.ATB.ATA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ATA(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_ATABLE
Trbegin [F:ATB]
 Gosub ADELETE_ATABLE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_ATABLE
[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ATB._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABLE.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If ATABLE.snapshotEnabled=1
 [L]A_RETIK = ATABLE.revertUpdTick
Endif
[L]ASTATUS = max(fmet ATABLE.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



