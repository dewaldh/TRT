#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Purchases
# Supervisor
## CRUD-CLASSE ## CCMIMPPOD
# 2018-08-27 13:11:42 565


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(CCMIMPPOD,ASTATUS)
Variable Instance CCMIMPPOD Using R_CCMIMPPOD
Variable Integer ASTATUS

If CCMIMPPOD = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPPOD
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet CCMIMPPOD.ACTX.AGETAFCRIGHT(CCMIMPPOD,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet CCMIMPPOD.ACTX.AGETAFCRIGHTU(CCMIMPPOD,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_CCMIMPPOD
Else
 Gosub AUPDATE_CCMIMPPOD
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = CCMIMPPOD.freeSnapshot
CCMIMPPOD.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
CCMIMPPOD.ASTALIN = [V]CST_AUPD
CCMIMPPOD.CCMIPOD.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = CCMIMPPOD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = CCMIMPPOD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPPOD._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPPOD._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPPOD._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If CCMIMPPOD.CCMIPOD.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPPOD.CCMIPOD.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(CCMIMPPOD.CCMIPOD.ASTALIN)<>""
 [L]A_ASTALIN = CCMIMPPOD.CCMIPOD.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.CCMIPOD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(CCMIMPPOD.CCMIPOD.ASTALIN)<>""
 [L]A_ASTALIN = CCMIMPPOD.CCMIPOD.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.CCMIPOD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_CCMIMPPOD
Trbegin [F:CCMIPOD]
 Gosub AUPDATE_CCMIMPPOD
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(CCMIMPPOD.CCMIPOD.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMIMPPOD.CCMIPOD.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_CCMIMPPOD
[L]A_ASTALIN = CCMIMPPOD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.CCMIPOD._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = CCMIMPPOD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If CCMIMPPOD.snapshotEnabled=1
 [L]A_RETIK = CCMIMPPOD.revertUpdTick
Endif

[L]ASTATUS = max(fmet CCMIMPPOD.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



