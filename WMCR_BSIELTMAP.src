#<AdxTL>@(#)0.0.0.0 $Revision$Class Camt element mapping
# Supervisor
## CRUD-CLASSE ## BSIELTMAP
# 2018-08-27 12:26:39 657


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BSIELTMAP [BSIELT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BSIELTMAP") From ASYRCOM : Endif
Local Instance BSIELTMAP Using C_BSIELTMAP

If !SILENCE : Call TRACE("3 --> New Instance C_BSIELTMAP") From ASYRCOM : Endif
BSIELTMAP = NewInstance C_BSIELTMAP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BSIELT_]BSIELT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BSIELTMAP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.AREAD([BSIELT_]COD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BSIELTMAP.COD ="-num$(BSIELTMAP.COD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BSIELTMAP.AKEYS)
  Call TRACE("-"-num$(I)-":"-BSIELTMAP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BSIELT_]
FreeGroup BSIELTMAP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BSIELTMAP,ACLE,ASTATUS,_ETAG)
Variable Instance BSIELTMAP Using C_BSIELTMAP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COD(30)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BSIELTMAP [BSIELT]
Default File [F:BSIELT]
Read [F:BSIELT]BSIELT0 = [L]_COD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BSIELT]UPDTICK)>0
 [L]_ETAG = num$([F:BSIELT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BSIELTMAP,ACLE,ASTATUS)
Variable Instance BSIELTMAP Using C_BSIELTMAP
Value Char ACLE
Variable Integer ASTATUS
Local Char _COD(30)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.AREAD([L]_COD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BSIELTMAP,_COD,ASTATUS)
Variable Instance BSIELTMAP Using C_BSIELTMAP
Value Char _COD
Variable Integer ASTATUS

If BSIELTMAP = null : End : Endif

Gosub AVARIABLES From WMC00BSIELTMAP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BSIELTMAP.APARENT=null
 [L]A_I = BSIELTMAP.freeSnapshot
 BSIELTMAP.snapshotEnabled = 0
 BSIELTMAP.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BSIELTMAP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BSIELTMAP.APARENT=null
 BSIELTMAP.snapshotEnabled = 1
 BSIELTMAP.setAccessorEnabled = 1
Endif
LogicClose File [BSIELT] ,[BSIELTD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP._ACTION_PARAM("AREAD_BEFORE",[L]_COD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BSIELT]
Read [F:BSIELT]BSIELT0 = [L]_COD
If fstat
[L]A_ERROR = [L]_COD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BSIELTMAP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:BSIELT]AUUID)>0 & [F:BSIELT]AUUID=NullUuid
 [F:BSIELT]AUUID = getUuid
Endif
SetInstance BSIELTMAP With [F:BSIELT]
BSIELTMAP.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BSIELTD]
 [L]A_N2=0
 For [F:BSIELTD]BSIELTD0 Where COD=[F:BSIELT]COD
  [L]A_N2 +=1
  BSIELTMAP.LINES(A_N2) = NewInstance  C_BSIELTMAPD(BSIELTMAP.ACTX,NullUuid,[L]A_N2,BSIELTMAP,"LINES") AllocGroup BSIELTMAP
  [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.LINES(A_N2).ADDINSTANCE_BOUND)
  If dim([F:BSIELTD]AUUID)>0 & [F:BSIELTD]AUUID=NullUuid
   [F:BSIELTD]AUUID = getUuid
  Endif
  SetInstance BSIELTMAP.LINES(A_N2) With [F:BSIELTD]
  [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.LINES(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  BSIELTMAP.LINES(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.LINES(A_N2).ASETATTRIBUTE("COD","$namProParent","COD"))
 Next BSIELTD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="BSIELTMAP" & ZONE="DESAXX" & IDENT1=BSIELTMAP.COD & IDENT2=""
 Call ASETTEXTRA(BSIELTMAP.AXX,BSIELTMAP.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 BSIELTMAP.AXX(maxtab(BSIELTMAP.AXX)).FLG = 0
Next AXX
If !len(fmet BSIELTMAP.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(BSIELTMAP.AXX,BSIELTMAP.AllocGrp(),"DESAXX",
& fmet BSIELTMAP.AGETTEXTRALAN("DESAXX",BSIELTMAP.ACTX.AFOLD.ALANGDEF),
& BSIELTMAP.ACTX.LAN) From ASYRSUB
Endif

Return



