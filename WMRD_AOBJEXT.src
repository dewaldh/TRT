#<AdxTL>@(#)0.0.0.0 $Revision$Class Import/export templates
# Supervisor
## CRUD-CLASSE ## AOBJEXT
# 2018-08-27 13:02:05 324


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(AOBJEXT,ASTATUS)
Variable Instance AOBJEXT Using R_AOBJEXT
Variable Integer ASTATUS

If AOBJEXT = null : End : Endif

Gosub AVARIABLES From WMR00AOBJEXT
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet AOBJEXT.ACTX.AGETAFCRIGHT(AOBJEXT,"GESAOE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet AOBJEXT.ACTX.AGETAFCRIGHTD(AOBJEXT,"GESAOE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif
If fmet AOBJEXT.ACTX.AGETACSRIGHTM(AOBJEXT,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto ADELETE_END
  Endif
  
  Gosub AREPCONTROL_ADELETE
  If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif
  
If !adxlog
 Gosub ADELETE_TR_AOBJEXT
Else
 Gosub ADELETE_AOBJEXT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
AOBJEXT.ASTALIN = [V]CST_ADEL
AOBJEXT.AOE.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(AOBJEXT.AOE,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If AOBJEXT.AOE.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AOBJEXT.AOE.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJEXT.AOE.FILCOL)
 If AOBJEXT.AOE.FILCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.FILCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJEXT.AOE.FLGCOL)
 If AOBJEXT.AOE.FLGCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.FLGCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AOBJEXT.AOE.AOD) : # AOBJEXTD -- 2
 If AOBJEXT.AOE.AOD(A_N2) <> null
& and AOBJEXT.AOE.AOD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If AOBJEXT.AOE.AOD(A_N2).ASTALIN<>[V]CST_ANEW
   AOBJEXT.AOE.AOD(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.AOD(A_N2).ACTION("ADELETE_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(AOBJEXT.AOE.AOD) : # AOBJEXTD -- 2
 If AOBJEXT.AOE.AOD(A_N2) <> null
& and AOBJEXT.AOE.AOD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.AOD(A_N2).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(AOBJEXT.AOE.FILCOL)
 If AOBJEXT.AOE.FILCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.FILCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AOBJEXT.AOE.FLGCOL)
 If AOBJEXT.AOE.FLGCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.FLGCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_AOBJEXT
Trbegin [F:AOE]
 Gosub ADELETE_AOBJEXT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_AOBJEXT
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If AOBJEXT.snapshotEnabled=1
 [L]A_RETIK = AOBJEXT.revertUpdTick
Endif
[L]ASTATUS = max(fmet AOBJEXT.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



