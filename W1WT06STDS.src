#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT06STDS 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:28:38"
A_USER  = "ADMIN"
A_STAMP = "20180828002838"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If GWSINVWRH<>""
    Chgfmt WRH With GWSINVWRH
   Else
    Chgfmt WRH With "-K:1X"
   Endif
   If GWSINVEMP<>""
    Chgfmt LOC With GWSINVEMP
   Else
    Chgfmt LOC With "-K:1X"
   Endif
   If GWSINVLOT<>""
    Chgfmt LOT With GWSINVLOT
   Else
    Chgfmt LOT With "-K:1X"
   Endif
   If GWSINVSLO<>""
    Chgfmt SLO With GWSINVSLO
   Else
    Chgfmt SLO With "-K:1X"
   Endif
   If GWSINVECCMAJ<>""
    Chgfmt ECCVALMAJ With GWSINVECCMAJ
   Else
    Chgfmt ECCVALMAJ With "-K:1X"
   Endif
   If GWSINVQTY<>""
    Chgfmt QTYPCUNEW1 With GWSINVQTY
   Else
    Chgfmt QTYPCUNEW1 With "-K:1X"
   Endif
   If GWSINVCOE<>""
    Chgfmt PCUSTUNEW1 With GWSINVCOE
   Else
    Chgfmt PCUSTUNEW1 With "-K:1X"
   Endif
   If GWSINVQTY<>""
    Chgfmt QTYSTUNEW1 With GWSINVQTY
   Else
    Chgfmt QTYSTUNEW1 With "-K:1X"
   Endif
   If GWSINVZER<>""
    Chgfmt ZERSTOFLG1 With GWSINVZER
   Else
    Chgfmt ZERSTOFLG1 With "-K:1X"
   Endif
   If GWSINVQTY<>""
    Chgfmt QTYPCUNEW2 With GWSINVQTY
   Else
    Chgfmt QTYPCUNEW2 With "-K:1X"
   Endif
   If GWSINVCOE<>""
    Chgfmt PCUSTUNEW2 With GWSINVCOE
   Else
    Chgfmt PCUSTUNEW2 With "-K:1X"
   Endif
   If GWSINVQTY<>""
    Chgfmt QTYSTUNEW2 With GWSINVQTY
   Else
    Chgfmt QTYSTUNEW2 With "-K:1X"
   Endif
   If GWSINVZER<>""
    Chgfmt ZERSTOFLG2 With GWSINVZER
   Else
    Chgfmt ZERSTOFLG2 With "-K:1X"
   Endif
   If GWSINVSER<>""
    Chgfmt SERNUM With GWSINVSER
   Else
    Chgfmt SERNUM With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT06STDS [SNL1]
Gosub HORODAT
Local Inpbox "WT06STDS" From GFONCTION At A_STAMP With A_WINDPREV Mask [SNL1] As [SIM_]
Grizo [SNL1]5
Grizo [SNL1]10
Grizo [SNL1]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SNL1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=3 : X2(0)=109 : Y1(0)=5 : Y2(0)=6
X1(1)=3 : X2(1)=109 : Y1(1)=7 : Y2(1)=9
X1(2)=3 : X2(2)=109 : Y1(2)=10 : Y2(2)=24
Return

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1WT06STDS
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_CUNSSSNUM
Return

$ON_CUNLISNUM
Return

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1WT06STDS
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_QTYTOENT
Onevent BEFORE_AREA Gosub AV_QTYTOENT From W1WT06STDS
Return

$AV_QTYTOENT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCUTOENT,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYTOENT(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PCUTOENT
Return

$ON_LOTMGTCOD
Onevent INIT_AREA Call D_LOTMGTCOD(zc) From W1WT06STDS
Return

Subprog D_LOTMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PECQTY
Onevent BEFORE_AREA Gosub AV_PECQTY From W1WT06STDS
Return

$AV_PECQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCUTOENT,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PECQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_ABCCLS
Onevent INIT_AREA Call D_ABCCLS(zc) From W1WT06STDS
Return

Subprog D_ABCCLS(VALEUR)
Variable Integer VALEUR
If varinit([M]ABCCLS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_CCECODS
Onevent INIT_AREA Call D_CCECODS(zc) From W1WT06STDS
Return

Subprog D_CCECODS(VALEUR)
Variable Integer VALEUR
If varinit([M]CCECODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CCE
Onevent BEFORE_AREA Gosub AV_CCE From W1WT06STDS
Return

$AV_CCE
## Action INICCEFMT
Call INICCEFMT("") From SETGLBDIE
Gosub _AFF
Return

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1WT06STDS
Onevent BEFORE_LINE Call AVANT_NBLIG From W1WT06STDS
Onevent AFTER_LINE Call APRES_NBLIG From W1WT06STDS
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT06STDS
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From TRTSNLINV
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(39175,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT06STDS
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WT06STDS
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1WT06STDS
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B1_NBLIG From TRTSNLINV
Endif
If !GWEBSERV
 ## Action SAISNLL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISNLL"
 PARMSK(1) = num$(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"ISNLL","SUBSNLL","",1,"SPESNLL") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIDECPRI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIDECPRI"
 PARMSK(1) = "VALW"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = num$(nolign)
 PARMSK(4) = "9"
 PARMSK(5) = "[M:SNL1]PRIORD("+num$(nolign-1)+")"
 PARMSK(6) = num$(124-([M:SNL1]STOCOU(nolign-1)<>0|[M:SNL1]CUNLISSTA(nolign-1)>2)*122)
 PARMSK(7) = ""
 Call SAISIE_NUM(BASPAG,PARMSK,"ISAIDECPRI","SUBSDP","SPESDP") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B4_NBLIG From TRTSNLINV
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From TRTSNLINV
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action STKINIECC
Call STKINIECC([M]ITMREF,[M]LOT(nolign-1),"SNL1",2,2,nolign-1,2,func TRTX3FNC.VALFLD_C("[M]ECCVALMAJ(nolign-1)")
&,"ECCVALMAJ","ECCVALMIN","","",1,"") From STKACT
If mkstat : End : Endif
## Action STD
Call APRES_NBLIG From TRTSNLINV
If mkstat : End : Endif
## Action SAISNLL
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "SAISNLL"
PARMSK(1) = num$(nolign-1)
Call TRAITE_NUM(BASPAG,PARMSK,"ISNLL","SUBSNLL","",1,"SPESNLL") From GTRAITE
GACTION = SAVACT
If mkstat : End : Endif
Gosub _AFF
End

$ON_CUNLISSTA
Onevent INIT_AREA Call D_CUNLISSTA(zc) From W1WT06STDS
Return

Subprog D_CUNLISSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]CUNLISSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRH
Onevent CONTROL Call C_WRH(zc) From W1WT06STDS
Onevent BEFORE_INPUT Call AS_WRH(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_WRH From W1WT06STDS
Onevent BEFORE_AREA Gosub AV_WRH From W1WT06STDS
Return

$AV_WRH
If GWSINVWRH<>""
 Chgfmt [M]WRH(indice) With GWSINVWRH
Else
 Chgfmt [M]WRH(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_WRH(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(39594,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action PASSAISNL1
Call PASSAISNL1("WRH",nolign-1) From STKINV
If mkstat=2
 [M]WRH(INDIC) = VALEUR
 Affzo WRH(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_WRH(zc) From W1WT06STDS
Onkey   2 Titled GBOUTS Call S_WRH(zc) From W1WT06STDS
Onkey 144 Titled GBOUTP Call P_WRH(zc) From W1WT06STDS
Onkey 146 Titled GBOUTA Call SA_WRH(zc) From W1WT06STDS
Gosub _AFF
End

Subprog C_WRH(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,[M:SNL1]STOFCY,0) From STKWRH
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("WRH","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
 If !GWEBSERV
  If !mkstat
   ## Action STD
   Call C_WRH(VALEUR) From TRTSNLINV
   If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WRH
Call AM_WRH(zc)
If !mkstat & GOBJET
 zoncou = "WRH" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WRH(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WRH(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
Gosub _AFF
End

Subprog S_WRH(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = [M:SNL1]STOFCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_WRH(VALEUR)
Variable Char    VALEUR()
Call OBJET("WRH",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_WRH(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "WRH"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WRH(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("WRH",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1WT06STDS
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_LOC From W1WT06STDS
Onevent BEFORE_AREA Gosub AV_LOC From W1WT06STDS
Return

$AV_LOC
If GWSINVEMP<>""
 Chgfmt [M]LOC(indice) With GWSINVEMP
Else
 Chgfmt [M]LOC(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3623,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASSAISNL1
Call PASSAISNL1("LOC",nolign-1) From STKINV
If mkstat=2
 [M]LOC(INDIC) = VALEUR
 Affzo LOC(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_LOC(zc) From W1WT06STDS
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1WT06STDS
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
If !mkstat
 ## Action STD
 Call C_LOC(VALEUR) From TRTSNLINV
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
Endif
Gosub _AFF
End

$AMM_LOC
Call AM_LOC(zc)
If !mkstat & GOBJET
 zoncou = "LOC" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOC(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOC(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 3623 : Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELEMP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELEMP"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M:SNL1]WRH)),[M:SNL1]WRH(nolign-1))))
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELEMP","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_LOC" : PROGSUB = "TRTSNLINV" : PROGSPE = "SPESNLINV" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR(VALEUR,"LOC","") From GOBJET
 ACTION = "BB1_LOC" : PROGSUB = "TRTSNLINV" : PROGSPE = "SPESNLINV" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LOT
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1WT06STDS
Onevent CONTROL Call C_LOT(zc) From W1WT06STDS
Onevent AFTER_AREA Call AP_LOT(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_LOT From W1WT06STDS
Onevent BEFORE_AREA Gosub AV_LOT From W1WT06STDS
Return

$AV_LOT
If GWSINVLOT<>""
 Chgfmt [M]LOT(indice) With GWSINVLOT
Else
 Chgfmt [M]LOT(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASSAISNL1
Call PASSAISNL1("LOT",nolign-1) From STKINV
If mkstat=2
 [M]LOT(INDIC) = VALEUR
 Affzo LOT(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_LOT(zc) From W1WT06STDS
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LOT(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Gosub _AFF
End

Subprog AP_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKINIECC
Call STKINIECC([M]ITMREF,VALEUR,"SNL1",2,2,nolign-1,2,func TRTX3FNC.VALFLD_C("[M]ECCVALMAJ(nolign-1)")
&,"ECCVALMAJ","ECCVALMIN","","",1,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Gosub _AFF
End

$AMM_LOT
Call AM_LOT(zc)
If !mkstat & GOBJET
 zoncou = "LOT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LOT(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 2721 : Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOT"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M:SNL1]STOFCY
 PARMSK(3) = "SNL1"
 PARMSK(4) = num$(nolign-1)
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELLOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SLO
Onevent BEFORE_INPUT Call AS_SLO(zc) From W1WT06STDS
Onevent CONTROL Call C_SLO(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_SLO From W1WT06STDS
Onevent BEFORE_AREA Gosub AV_SLO From W1WT06STDS
Return

$AV_SLO
If GWSINVSLO<>""
 Chgfmt [M]SLO(indice) With GWSINVSLO
Else
 Chgfmt [M]SLO(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_SLO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12420,GBOUT3) From OBJDIV
## Action PASSAISNL1
Call PASSAISNL1("SLO",nolign-1) From STKINV
If mkstat=2
 [M]SLO(INDIC) = VALEUR
 Affzo SLO(INDIC) : mkstat = 2
Endif
Onkey 131 Titled GBOUT3 Call B3_SLO(zc) From W1WT06STDS
Gosub _AFF
End

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SLO(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 18960 : Endif
Gosub _AFF
End

$AMM_SLO
Call AM_SLO(zc)
If !mkstat & GOBJET
 zoncou = "SLO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SLO(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 18960 : Endif
Gosub _AFF
End

Subprog B3_SLO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B3_SLO(VALEUR) From TRTSNLINV
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ECCVALMAJ
Onevent BEFORE_AREA Gosub AV_ECCVALMAJ From W1WT06STDS
Return

$AV_ECCVALMAJ
If GWSINVECCMAJ<>""
 Chgfmt [M]ECCVALMAJ(indice) With GWSINVECCMAJ
Else
 Chgfmt [M]ECCVALMAJ(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_ECCSTA
Onevent INIT_AREA Call D_ECCSTA(zc) From W1WT06STDS
Return

Subprog D_ECCSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCU
Onevent AFTER_CHANGE Gosub AMM_PCU From W1WT06STDS
Onevent BEFORE_INPUT Call AS_PCU(zc) From W1WT06STDS
Onevent CONTROL Call C_PCU(zc) From W1WT06STDS
Return

Subprog IB_PCU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PASSAISNL1
 Call PASSAISNL1("PCU",nolign-1) From STKINV
Endif
Gosub _AFF
End

Subprog AS_PCU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_PCU(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_PCU(zc) From W1WT06STDS
Onkey   2 Titled GBOUTS Call S_PCU(zc) From W1WT06STDS
Onkey 144 Titled GBOUTP Call P_PCU(zc) From W1WT06STDS
Onkey 146 Titled GBOUTA Call SA_PCU(zc) From W1WT06STDS
Gosub _AFF
End

Subprog C_PCU(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 2685 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("TUN","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 2685 : Endif
Endif
Gosub _AFF
End

$AMM_PCU
Call AM_PCU(zc)
If !mkstat & GOBJET
 zoncou = "PCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCU(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 2685 : Endif
Gosub _AFF
End

Subprog S_PCU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELUOMN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELUOMN"
 PARMSK(1) = "1"
 PARMSK(2) = "1"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELUOMN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_PCU(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_STA From W1WT06STDS
Onevent BEFORE_INPUT Call AS_STA(zc) From W1WT06STDS
Return

Subprog IB_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PASSAISNL1
 Call PASSAISNL1("STA",nolign-1) From STKINV
Endif
Gosub _AFF
End

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call IB_STA(VALEUR)
Onkey   2 Titled GBOUTS Call S_STA(zc) From W1WT06STDS
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,"A*,Q*,R*",0,1,0,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1287 : Endif
Gosub _AFF
End

$AMM_STA
Call AM_STA(zc)
If !mkstat & GOBJET
 zoncou = "STA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STA(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_STA(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1287 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = "A*,Q*,R*"
 PARMSK(2) = "0"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_QTYPCU
Onevent BEFORE_AREA Gosub AV_QTYPCU From W1WT06STDS
Return

$AV_QTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W1WT06STDS
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_QTYPCUNEW1
Onevent BEFORE_AREA Gosub AV_QTYPCUNEW1 From W1WT06STDS
Onevent BEFORE_INPUT Call AS_QTYPCUNEW1(zc) From W1WT06STDS
Onevent AFTER_AREA Call AP_QTYPCUNEW1(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_QTYPCUNEW1 From W1WT06STDS
Return

$AV_QTYPCUNEW1
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
If GWSINVQTY<>""
 Chgfmt [M]QTYPCUNEW1(indice) With GWSINVQTY
Else
 Chgfmt [M]QTYPCUNEW1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_QTYPCUNEW1(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("QTYPCUNEW1",nolign-1) From STKINV
If mkstat=2
 [M]QTYPCUNEW1(INDIC) = VALEUR
 Affzo QTYPCUNEW1(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTYPCUNEW1(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]QTYPCUNEW1(INDIC) = VALEUR
  Affzo QTYPCUNEW1(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog AP_QTYPCUNEW1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_QTYPCUNEW1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW1" : GZNUM = 54219 : Endif
Gosub _AFF
End

$AMM_QTYPCUNEW1
Call AM_QTYPCUNEW1(zc)
If !mkstat & GOBJET
 zoncou = "QTYPCUNEW1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYPCUNEW1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYPCUNEW1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW1" : GZNUM = 54219 : Endif
Gosub _AFF
End

$ON_PCUSTUNEW1
Onevent BEFORE_INPUT Call AS_PCUSTUNEW1(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_PCUSTUNEW1 From W1WT06STDS
Onevent BEFORE_AREA Gosub AV_PCUSTUNEW1 From W1WT06STDS
Return

$AV_PCUSTUNEW1
If GWSINVCOE<>""
 Chgfmt [M]PCUSTUNEW1(indice) With GWSINVCOE
Else
 Chgfmt [M]PCUSTUNEW1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_PCUSTUNEW1(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("PCUSTUNEW1",nolign-1) From STKINV
If mkstat=2
 [M]PCUSTUNEW1(INDIC) = VALEUR
 Affzo PCUSTUNEW1(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_PCUSTUNEW1(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]PCUSTUNEW1(INDIC) = VALEUR
  Affzo PCUSTUNEW1(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

$AMM_PCUSTUNEW1
Call AM_PCUSTUNEW1(zc)
If !mkstat & GOBJET
 zoncou = "PCUSTUNEW1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCUSTUNEW1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PCUSTUNEW1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "PCUSTUNEW1" : GZNUM = 54236 : Endif
Gosub _AFF
End

$ON_QTYSTUNEW1
Onevent BEFORE_AREA Gosub AV_QTYSTUNEW1 From W1WT06STDS
Onevent BEFORE_INPUT Call AS_QTYSTUNEW1(zc) From W1WT06STDS
Onevent CONTROL Call C_QTYSTUNEW1(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_QTYSTUNEW1 From W1WT06STDS
Return

$AV_QTYSTUNEW1
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
If GWSINVQTY<>""
 Chgfmt [M]QTYSTUNEW1(indice) With GWSINVQTY
Else
 Chgfmt [M]QTYSTUNEW1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_QTYSTUNEW1(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("QTYSTUNEW1",nolign-1) From STKINV
If mkstat=2
 [M]QTYSTUNEW1(INDIC) = VALEUR
 Affzo QTYSTUNEW1(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTYSTUNEW1(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]QTYSTUNEW1(INDIC) = VALEUR
  Affzo QTYSTUNEW1(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_QTYSTUNEW1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYSTUNEW1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYSTUNEW1" : GZNUM = 54229 : Endif
Gosub _AFF
End

$AMM_QTYSTUNEW1
Call AM_QTYSTUNEW1(zc)
If !mkstat & GOBJET
 zoncou = "QTYSTUNEW1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYSTUNEW1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYSTUNEW1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYSTUNEW1" : GZNUM = 54229 : Endif
Gosub _AFF
End

$ON_ZERSTOFLG1
Onevent BEFORE_AREA Gosub AV_ZERSTOFLG1 From W1WT06STDS
Onevent BEFORE_INPUT Call AS_ZERSTOFLG1(zc) From W1WT06STDS
Onevent CONTROL Call C_ZERSTOFLG1(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_ZERSTOFLG1 From W1WT06STDS
Onevent INIT_AREA Call D_ZERSTOFLG1(zc) From W1WT06STDS
Return

$AV_ZERSTOFLG1
## Action STD
Call AV_ZERSTOFLG1(zc) From TRTSNLINV
If GWSINVZER<>""
 Chgfmt [M]ZERSTOFLG1(indice) With GWSINVZER
Else
 Chgfmt [M]ZERSTOFLG1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_ZERSTOFLG1(VALEUR)
Variable Integer VALEUR
If varinit([M]ZERSTOFLG1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ZERSTOFLG1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("ZERSTOFLG1",nolign-1) From STKINV
If mkstat=2
 [M]ZERSTOFLG1(INDIC) = VALEUR
 Affzo ZERSTOFLG1(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_ZERSTOFLG1(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]ZERSTOFLG1(INDIC) = VALEUR
  Affzo ZERSTOFLG1(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

Subprog C_ZERSTOFLG1(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ZERSTOFLG1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "ZERSTOFLG1" : GZNUM = 54231 : Endif
Gosub _AFF
End

$AMM_ZERSTOFLG1
Call AM_ZERSTOFLG1(zc)
If !mkstat & GOBJET
 zoncou = "ZERSTOFLG1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ZERSTOFLG1(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ZERSTOFLG1(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "ZERSTOFLG1" : GZNUM = 54231 : Endif
Gosub _AFF
End

$ON_QTYPCUNEW2
Onevent BEFORE_AREA Gosub AV_QTYPCUNEW2 From W1WT06STDS
Onevent BEFORE_INPUT Call AS_QTYPCUNEW2(zc) From W1WT06STDS
Onevent AFTER_AREA Call AP_QTYPCUNEW2(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_QTYPCUNEW2 From W1WT06STDS
Return

$AV_QTYPCUNEW2
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
If GWSINVQTY<>""
 Chgfmt [M]QTYPCUNEW2(indice) With GWSINVQTY
Else
 Chgfmt [M]QTYPCUNEW2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_QTYPCUNEW2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("QTYPCUNEW2",nolign-1) From STKINV
If mkstat=2
 [M]QTYPCUNEW2(INDIC) = VALEUR
 Affzo QTYPCUNEW2(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTYPCUNEW2(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]QTYPCUNEW2(INDIC) = VALEUR
  Affzo QTYPCUNEW2(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog AP_QTYPCUNEW2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_QTYPCUNEW2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW2" : GZNUM = 54223 : Endif
Gosub _AFF
End

$AMM_QTYPCUNEW2
Call AM_QTYPCUNEW2(zc)
If !mkstat & GOBJET
 zoncou = "QTYPCUNEW2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYPCUNEW2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYPCUNEW2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYPCUNEW2" : GZNUM = 54223 : Endif
Gosub _AFF
End

$ON_PCUSTUNEW2
Onevent BEFORE_INPUT Call AS_PCUSTUNEW2(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_PCUSTUNEW2 From W1WT06STDS
Onevent BEFORE_AREA Gosub AV_PCUSTUNEW2 From W1WT06STDS
Return

$AV_PCUSTUNEW2
If GWSINVCOE<>""
 Chgfmt [M]PCUSTUNEW2(indice) With GWSINVCOE
Else
 Chgfmt [M]PCUSTUNEW2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_PCUSTUNEW2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("PCUSTUNEW2",nolign-1) From STKINV
If mkstat=2
 [M]PCUSTUNEW2(INDIC) = VALEUR
 Affzo PCUSTUNEW2(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_PCUSTUNEW2(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]PCUSTUNEW2(INDIC) = VALEUR
  Affzo PCUSTUNEW2(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

$AMM_PCUSTUNEW2
Call AM_PCUSTUNEW2(zc)
If !mkstat & GOBJET
 zoncou = "PCUSTUNEW2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCUSTUNEW2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PCUSTUNEW2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "PCUSTUNEW2" : GZNUM = 54237 : Endif
Gosub _AFF
End

$ON_QTYSTUNEW2
Onevent BEFORE_AREA Gosub AV_QTYSTUNEW2 From W1WT06STDS
Onevent BEFORE_INPUT Call AS_QTYSTUNEW2(zc) From W1WT06STDS
Onevent CONTROL Call C_QTYSTUNEW2(zc) From W1WT06STDS
Onevent AFTER_CHANGE Gosub AMM_QTYSTUNEW2 From W1WT06STDS
Return

$AV_QTYSTUNEW2
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
If GWSINVQTY<>""
 Chgfmt [M]QTYSTUNEW2(indice) With GWSINVQTY
Else
 Chgfmt [M]QTYSTUNEW2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_QTYSTUNEW2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASSAISNL1
Call PASSAISNL1("QTYSTUNEW2",nolign-1) From STKINV
If mkstat=2
 [M]QTYSTUNEW2(INDIC) = VALEUR
 Affzo QTYSTUNEW2(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_QTYSTUNEW2(VALEUR) From TRTSNLINV
 If mkstat=2
  [M]QTYSTUNEW2(INDIC) = VALEUR
  Affzo QTYSTUNEW2(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_QTYSTUNEW2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYSTUNEW2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYSTUNEW2" : GZNUM = 54232 : Endif
Gosub _AFF
End

$AMM_QTYSTUNEW2
Call AM_QTYSTUNEW2(zc)
If !mkstat & GOBJET
 zoncou = "QTYSTUNEW2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYSTUNEW2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QTYSTUNEW2(VALEUR) From TRTSNLINV
If mkstat : GERR = 1 : GZONE = "QTYSTUNEW2" : GZNUM = 54232 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2WT06STDS
Return

$TIT_COL
Gosub TIT_COL From W2WT06STDS
Return


