#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales contract - Rebates
# Supervisor
## CRUD-CLASSE ## YSREB
# 2019-01-31 06:53:55 267


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(YSREB,ASTATUS)
Variable Instance YSREB Using C_YSREB
Variable Integer ASTATUS

If YSREB = null : End : Endif

Gosub _AVARIABLES From WMC00YSREB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_YSREB

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(YSREB,ASTATUS)
Variable Instance YSREB Using C_YSREB
Variable Integer ASTATUS

If YSREB = null : End : Endif

Gosub AVARIABLES From WMC00YSREB
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
YSREB.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_YSREB
Else
 Gosub AUPDATE_YSREB
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = YSREB.freeSnapshot
YSREB.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YSREB._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YSREB._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YSREB._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If YSREB.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YSREB.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(YSREB.ASTALIN)<>""
 [L]A_ASTALIN = YSREB.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YSREB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(YSREB.ASTALIN)<>""
 [L]A_ASTALIN = YSREB.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YSREB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_YSREB
Trbegin [F:YSREB]
 Gosub AUPDATE_YSREB
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_YSREB
[L]A_ASTALIN = YSREB.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YSREB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00YSREB._MAJSQL_YSALREB(YSREB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = YSREB.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YSREB.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If YSREB.snapshotEnabled=1
 [L]A_RETIK = YSREB.revertUpdTick
Endif

[L]ASTATUS = max(fmet YSREB.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(YSREB.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YSREB.ASTALIN = [V]CST_ALL
Endif
Return



