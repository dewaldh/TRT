#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management STOENTS 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:16"
A_USER  = "ADMIN"
A_STAMP = "20180828001516"
Return

$TITRES
Chgtzn [M:ENTS]VCRNUMORI With GBIDC1
Return

$CHG_FMT
Case zoncou
 When "NBLIGS"
  If [M]NBLIGS=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask STOENTS [ENTS]
Gosub HORODAT
Local Inpbox "STOENTS" From GFONCTION At A_STAMP With A_WINDPREV Mask [ENTS] As [SIM_]
Grizo [ENTS]5
Grizo [ENTS]10
Grizo [ENTS]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ENTS]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=108 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=158 : Y1(1)=4 : Y2(1)=28
X1(2)=109 : X2(2)=158 : Y1(2)=1 : Y2(2)=3
Return

$ON_STOFCY
Return

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1STOENTS
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_ITMREF
Return

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1STOENTS
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_SRTFLG
Onevent INIT_AREA Call D_SRTFLG(zc) From W1STOENTS
Onevent BEFORE_INPUT Call AS_SRTFLG(zc) From W1STOENTS
Return

Subprog D_SRTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SRTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SRTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMORI
Return

$ON_NBLIGS
Onevent AFTER_LINE Call APRES_NBLIGS From W1STOENTS
Return

Subprog APRES_NBLIGS
Local Decimal BASPAG
## Action STD
Call APRES_NBLIGS From TRTSTOENTS
If mkstat : End : Endif
Gosub _AFF
End

$ON_COCHAGE
Onevent AFTER_CHANGE Gosub AMM_COCHAGE From W1STOENTS
Onevent INIT_AREA Call D_COCHAGE(zc) From W1STOENTS
Onevent BEFORE_INPUT Call AS_COCHAGE(zc) From W1STOENTS
Onevent CONTROL Call C_COCHAGE(zc) From W1STOENTS
Return

Subprog D_COCHAGE(VALEUR)
Variable Integer VALEUR
If varinit([M]COCHAGE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_COCHAGE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_COCHAGE(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "COCHAGE" : GZNUM = 8255 : Endif
Gosub _AFF
End

$AMM_COCHAGE
Call AM_COCHAGE(zc)
If !mkstat & GOBJET
 zoncou = "COCHAGE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_COCHAGE(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_COCHAGE(VALEUR) From TRTSTOENTS
If mkstat : GERR = 1 : GZONE = "COCHAGE" : GZNUM = 8255 : Endif
Gosub _AFF
End

$ON_PCU
Return

$ON_QTYPCU
Onevent BEFORE_AREA Gosub AV_QTYPCU From W1STOENTS
Return

$AV_QTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W1STOENTS
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PECQTY
Onevent BEFORE_AREA Gosub AV_PECQTY From W1STOENTS
Return

$AV_PECQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]PECQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1STOENTS
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Return


