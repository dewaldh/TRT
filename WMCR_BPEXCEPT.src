#<AdxTL>@(#)0.0.0.0 $Revision$Class BP-Company exception
# Supervisor
## CRUD-CLASSE ## BPEXCEPT
# 2018-08-27 12:25:57 158


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPEXCEPT [BPE_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BPEXCEPT") From ASYRCOM : Endif
Local Instance BPEXCEPT Using C_BPEXCEPT

If !SILENCE : Call TRACE("3 --> New Instance C_BPEXCEPT") From ASYRCOM : Endif
BPEXCEPT = NewInstance C_BPEXCEPT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPE_]BPE0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPEXCEPT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPEXCEPT.AREAD([BPE_]BPRNUM,[BPE_]CPY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPEXCEPT.BPRNUM ="-num$(BPEXCEPT.BPRNUM)) From ASYRCOM
 Call TRACE("BPEXCEPT.CPY ="-num$(BPEXCEPT.CPY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPEXCEPT.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPEXCEPT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPE_]
FreeGroup BPEXCEPT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPEXCEPT,ACLE,ASTATUS,_ETAG)
Variable Instance BPEXCEPT Using C_BPEXCEPT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPRNUM(15)
Local Char _CPY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPY = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File BPEXCEPT [BPE]
Default File [F:BPE]
Read [F:BPE]BPE0 = [L]_BPRNUM;[L]_CPY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPE]UPDTICK)>0
 [L]_ETAG = num$([F:BPE]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPEXCEPT,ACLE,ASTATUS)
Variable Instance BPEXCEPT Using C_BPEXCEPT
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPRNUM(15)
Local Char _CPY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPY = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPEXCEPT.AREAD([L]_BPRNUM,[L]_CPY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPEXCEPT,_BPRNUM,_CPY,ASTATUS)
Variable Instance BPEXCEPT Using C_BPEXCEPT
Value Char _BPRNUM
Value Char _CPY
Variable Integer ASTATUS

If BPEXCEPT = null : End : Endif

Gosub AVARIABLES From WMC00BPEXCEPT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPEXCEPT.APARENT=null
 [L]A_I = BPEXCEPT.freeSnapshot
 BPEXCEPT.snapshotEnabled = 0
 BPEXCEPT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPEXCEPT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPEXCEPT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPEXCEPT.APARENT=null
 BPEXCEPT.snapshotEnabled = 1
 BPEXCEPT.setAccessorEnabled = 1
Endif
LogicClose File [BPE]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BPEXCEPT._ACTION_PARAM("AREAD_BEFORE",[L]_BPRNUM,[L]_CPY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPEXCEPT._ACTION_PARAM("AREAD",[L]_BPRNUM,[L]_CPY))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
BPEXCEPT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet BPEXCEPT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



