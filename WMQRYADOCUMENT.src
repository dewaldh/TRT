#<AdxTL>@(#)0.0.0.0 $Revision$Class Documentation
# Supervisor
## WMREP REPRESENTATION ## ADOCUMENT
# 2018-08-27 13:01:04 848

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:ADO])=0 : Local File ADOCUMENT [ADO] : Endif
If clalev([F:A_])=0 : Local File ADOCUMENT [A_] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [ADO]
LogicClose File [A_]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"ADO","ADO",ACRITROLE,[V]CST_AFALSE)
Link [ADO] With
& [A_]ADO0~=[ADO]LAN;[ADO]TYP;[ADO]COD;[ADO]LEV;[ADO]SUBLEV
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"ADO","ADO",ACRITROLE,[V]CST_AFALSE)
Link [ADO] With
& [A_]ADO0~=[ADO]LAN;[ADO]TYP;[ADO]COD;[ADO]LEV;[ADO]SUBLEV
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# ADO --- ADOCUMENT(ADO)
QRY(NBREP) = NewInstance R_ADOCUMENT AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:ADO]AUUID)>0 & [F:ADO]AUUID=NullUuid
 [F:ADO]AUUID = getUuid
Endif
SetInstance QRY(NBREP).ADO With [F:ADO]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# ADO --- ADOCUMENT(ADO)
QRY = NewInstance R_ADOCUMENT AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:ADO]AUUID)>0 & [F:ADO]AUUID=NullUuid
 [F:ADO]AUUID = getUuid
Endif
SetInstance QRY.ADO With [F:ADO]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0ADOCUMENT
CURQRY = "R_ADOCUMENT"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).ADO.LAN.LNKPRO
Callmet QRY(NBREP).ADO.TYP.LNKPRO
Callmet QRY(NBREP).ADO.PAR.LNKPRO
Callmet QRY(NBREP).TEXTE.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.ADO.LAN.LNKPRO
Callmet QRY.ADO.TYP.LNKPRO
Callmet QRY.ADO.PAR.LNKPRO
Callmet QRY.TEXTE.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "LAN" : TBFIL(NBPRO) = "[F:ADO]LAN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ADO.LAN"
NBPRO += 1 : TBPRO(NBPRO) = "TYP" : TBFIL(NBPRO) = "[F:ADO]TYP"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ADO.TYP"
NBPRO += 1 : TBPRO(NBPRO) = "COD" : TBFIL(NBPRO) = "[F:ADO]COD"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ADO.COD"
NBPRO += 1 : TBPRO(NBPRO) = "LEV" : TBFIL(NBPRO) = "[F:ADO]LEV"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "ADO.LEV"
NBPRO += 1 : TBPRO(NBPRO) = "SUBLEV" : TBFIL(NBPRO) = "[F:ADO]SUBLEV"
           : TBTYP(NBPRO) = 3 : TBPTH(NBPRO) = "ADO.SUBLEV"
NBPRO += 1 : TBPRO(NBPRO) = "PAR" : TBFIL(NBPRO) = "[F:ADO]PAR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ADO.PAR"
NBPRO += 1 : TBPRO(NBPRO) = "STY" : TBFIL(NBPRO) = "[F:ADO]STY"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "ADO.STY"
NBPRO += 1 : TBPRO(NBPRO) = "PRIO" : TBFIL(NBPRO) = "[F:ADO]PRIO"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "ADO.PRIO"
NBPRO += 1 : TBPRO(NBPRO) = "AUUID" : TBFIL(NBPRO) = "[F:ADO]AUUID"
           : TBTYP(NBPRO) = 11 : TBPTH(NBPRO) = "ADO.AUUID"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:ADO]LAN"
ASTDKEY += ";"+"[F:ADO]TYP"
ASTDKEY += ";"+"[F:ADO]COD"
ASTDKEY += ";"+"[F:ADO]LEV"
ASTDKEY += ";"+"[F:ADO]SUBLEV"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Return
 


