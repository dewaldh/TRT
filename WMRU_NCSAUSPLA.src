#<AdxTL>@(#)0.0.0.0 $Revision$Class Non-conformance-Planners
# Supervisor
## CRUD-CLASSE ## NCSAUSPLA
# 2018-08-27 13:20:13 471


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(NCSAUSPLA,ASTATUS)
Variable Instance NCSAUSPLA Using R_NCSAUSPLA
Variable Integer ASTATUS

If NCSAUSPLA = null : End : Endif

Gosub AVARIABLES From WMR00NCSAUSPLA
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet NCSAUSPLA.ACTX.AGETAFCRIGHT(NCSAUSPLA,"GESAUS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet NCSAUSPLA.ACTX.AGETAFCRIGHTU(NCSAUSPLA,"GESAUS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif
If fmet NCSAUSPLA.ACTX.AGETACSRIGHTM(NCSAUSPLA,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AUPDATE_END
  Endif
  
  Gosub AREPCONTROL_AUPDATE
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
  
If !adxlog
 Gosub AUPDATE_TR_NCSAUSPLA
Else
 Gosub AUPDATE_NCSAUSPLA
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = NCSAUSPLA.freeSnapshot
NCSAUSPLA.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
NCSAUSPLA.ASTALIN = [V]CST_AUPD
NCSAUSPLA.AUS.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = NCSAUSPLA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = NCSAUSPLA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet NCSAUSPLA._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet NCSAUSPLA._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet NCSAUSPLA._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If NCSAUSPLA.AUS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
NCSAUSPLA.AUS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(NCSAUSPLA.AUS.ASTALIN)<>""
 [L]A_ASTALIN = NCSAUSPLA.AUS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.AUS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.FNCCOL)
 If NCSAUSPLA.AUS.FNCCOL([L]A_I)<>null
  [L]A_ASTALIN = NCSAUSPLA.AUS.FNCCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.AUS.FNCCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If NCSAUSPLA.AUS.BPA(A_N2) <> null
& and NCSAUSPLA.AUS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(NCSAUSPLA.AUS.BID) : # BID -- 3
 If NCSAUSPLA.AUS.BID(A_N2) <> null
& and NCSAUSPLA.AUS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
A_N2=1
If NCSAUSPLA.AUS.BPA(A_N2) <> null
& and NCSAUSPLA.AUS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(NCSAUSPLA.AUS.BID) : # BID -- 3
 If NCSAUSPLA.AUS.BID(A_N2) <> null
& and NCSAUSPLA.AUS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.FNCCOL)
 If NCSAUSPLA.AUS.FNCCOL([L]A_I)<>null
  [L]A_ASTALIN = NCSAUSPLA.AUS.FNCCOL([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.AUS.FNCCOL([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(NCSAUSPLA.AUS.ASTALIN)<>""
 [L]A_ASTALIN = NCSAUSPLA.AUS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.AUS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_NCSAUSPLA
Trbegin [F:AUS]
 Gosub AUPDATE_NCSAUSPLA
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(NCSAUSPLA.AUS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 NCSAUSPLA.AUS.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.FNCCOL)
 If NCSAUSPLA.AUS.FNCCOL([L]A_I)<>null
  If NCSAUSPLA.AUS.FNCCOL([L]A_I).ASTALIN=[V]CST_ADEL or NCSAUSPLA.AUS.FNCCOL([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance NCSAUSPLA.AUS.FNCCOL([L]A_I)
   NCSAUSPLA.AUS.FNCCOL([L]A_I) = null
  Elsif NCSAUSPLA.AUS.FNCCOL([L]A_I).ASTALIN <> [V]CST_ALL
   NCSAUSPLA.AUS.FNCCOL([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Local Integer ASTATUS2
A_N2=1
If NCSAUSPLA.AUS.BPA(A_N2) <> null
 If NCSAUSPLA.AUS.BPA(A_N2).ASTALIN=[V]CST_ADEL or NCSAUSPLA.AUS.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance NCSAUSPLA.AUS.BPA(A_N2)
  NCSAUSPLA.AUS.BPA(A_N2) = null
 Elsif NCSAUSPLA.AUS.BPA(A_N2).ASTALIN <> [V]CST_ALL
  NCSAUSPLA.AUS.BPA(A_N2).ASTALIN = [V]CST_ALL
  For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.BPA(A_N2).COLTEL)
   If NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I)<>null
    If NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ADEL or NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
     FreeInstance NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I)
     NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I) = null
    Elsif NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I).ASTALIN <> [V]CST_ALL
     NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I).ASTALIN = [V]CST_ALL
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
  For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.BPA(A_N2).COLWEB)
   If NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I)<>null
    If NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ADEL or NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
     FreeInstance NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I)
     NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I) = null
    Elsif NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I).ASTALIN <> [V]CST_ALL
     NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I).ASTALIN = [V]CST_ALL
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(NCSAUSPLA.AUS.BID)
 If NCSAUSPLA.AUS.BID(A_N2) <> null
  [L]ASTATUS2 = fmet NCSAUSPLA.AUS.BID(A_N2)._AUPDATE_AFTER
  If NCSAUSPLA.AUS.BID(A_N2).ASTALIN=[V]CST_ADEL or NCSAUSPLA.AUS.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance NCSAUSPLA.AUS.BID(A_N2)
   NCSAUSPLA.AUS.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_NCSAUSPLA
[L]A_ASTALIN = NCSAUSPLA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.AUS._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = NCSAUSPLA.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet NCSAUSPLA.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If NCSAUSPLA.snapshotEnabled=1
 [L]A_RETIK = NCSAUSPLA.revertUpdTick
Endif
Local Integer ASTATUS2
A_N2=1
If NCSAUSPLA.AUS.BPA(A_N2) <> null
 If NCSAUSPLA.AUS.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
  NCSAUSPLA.AUS.BPA(A_N2).ASTALIN = [V]CST_ANEW
  For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.BPA(A_N2).COLTEL)
   If NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I)<>null
    If NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
     NCSAUSPLA.AUS.BPA(A_N2).COLTEL([L]A_I).ASTALIN = [V]CST_ANEW
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
  For [L]A_I=1 To maxtab(NCSAUSPLA.AUS.BPA(A_N2).COLWEB)
   If NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I)<>null
    If NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
     NCSAUSPLA.AUS.BPA(A_N2).COLWEB([L]A_I).ASTALIN = [V]CST_ANEW
    Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(NCSAUSPLA.AUS.BID)
 If NCSAUSPLA.AUS.BID(A_N2) <> null
  [L]ASTATUS2 = fmet NCSAUSPLA.AUS.BID(A_N2)._AUPDATE_ABORT
  If NCSAUSPLA.AUS.BID(A_N2).ASTALIN=[V]CST_ADEL or NCSAUSPLA.AUS.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance NCSAUSPLA.AUS.BID(A_N2)
   NCSAUSPLA.AUS.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet NCSAUSPLA.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



