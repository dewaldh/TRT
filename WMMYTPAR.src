#<AdxTL>@(#)0.0.0.0 $Revision$
$PARAM
Local Char    PARTIT(30)(1..250) , PARTYP(GLONATY)(1..250)
Local Char    PARDEF(120)(1..250)
Local Integer PARLIB(1..250)
Local Integer BASE
PARTIT(1) = func AFNC.TEXTRA("ALISTED","INTITLIG","YTPAR","101")
PARTIT(1) = ctrans(PARTIT(1),'"',"'")
PARTYP(1) = "D"
PARLIB(1) = 0
PARDEF(1) = ""
PARTIT(2) = func AFNC.TEXTRA("ALISTED","INTITLIG","YTPAR","102")
PARTIT(2) = ctrans(PARTIT(2),'"',"'")
PARTYP(2) = "D"
PARLIB(2) = 0
PARDEF(2) = ""
BASE = 5
Return

$LECTURE
Local Integer I , J , K , L , ER , TIM , DEPLIG , DEPTIM
Local Char    TEXTE(250)(1..19) , GENTYP(8) , VARGLB(30)
Local Clbfile CLOB(12)
TEXTE(1) = "select C.CPY_0 as CompanyNumber, C.CPYNAM_0 as CompanyName, C.CRN_0 as CompanyABN, BPART.CRN_0 as ABN, '' as Title, '' as FamilyName, '' as GivenName, 'MN' as OrganisationalNameType "
TEXTE(2) = ",BPS.BPSNAM_0 as OrganisationalName, BPA.BPATYP_0 as AddressType, BP"
TEXTE(3) = "A.BPAADDLIG_0 as Address1, BPA.BPAADDLIG_1 as Address2, BPA.CTY_0 as LocalityName  "
TEXTE(4) = ",BPA.POSCOD_0 as Postcode, BPA.SAT_0 as StateOrTerritory, BPA.CRY_0 as CountryCode, left(BPA.TEL_0,2) as TelephoneAreaCode, substring(BPA.TEL_0,3,15) as TelephoneNumbe"
TEXTE(5) = "r "
TEXTE(6) = ", '' as BankStateBranchNumber, '' as FinancialInstitutionAccnt "
TEXTE(7) = ",sum(PH.AMTATI_0) as BusPaymentGrossAmount, 0 as IncTaxPAYGWTaxAmount, sum(PH.AMTTAX_0) as GST, '' as Amendment "
TEXTE(8) = "from "
TEXTE(9) = "PINVOICE PH "
TEXTE(10) = "INNER JOIN COMPANY C ON PH.CPY_0 = C.CPY_0 "
TEXTE(11) = "INNER JOIN BP"
TEXTE(12) = "SUPPLIER BPS ON PH.BPR_0 = BPS.BPSNUM_0 "
TEXTE(13) = "INNER JOIN BPARTNER BPART ON BPS.BPSNUM_0 = BPART.BPRNUM_0 AND BPART.BRGOBJ_0 = 'BPS' "
TEXTE(14) = "INNER JOIN BPADDRESS BPA ON BPA.BPANUM_0 = BPS.BPSNUM_0 AND BPA.BPAADDFLG_0 = 2 "
TEXTE(15) = "WHERE BPS.YTPAR_0 = 2 and PH.ACCDAT_0 betwee"
TEXTE(16) = "n %1% and %2% "
TEXTE(17) = "Group By "
TEXTE(18) = "C.CPY_0, C.CPYNAM_0, C.CRN_0, BPART.CRN_0,BPS.BPSNAM_0,BPA.BPATYP_0, BPA.BPAADDLIG_0, BPA.BPAADDLIG_1, BPA.CTY_0, BPA.POSCOD_0, BPA.SAT_0, BPA.CRY_0, left(BPA.TEL_0,2), substring(BPA.TEL_0,3,15) "
TEXTE(19) = " "
Gosub PARAM
Gosub REMPLACE_CLOB From VISUSQL
Gosub ENVALR From VISUSQL
[F:ALR]COD = "YTPAR"
[F:ALR]USR = UTIL
[F:ALR]NIV = 1
[F:ALR]CREDAT = date$
If dim([F:ALR]CRETIM)>0 : [F:ALR]CRETIM = left$(time$,2)+mid$(time$,4,2) : Endif
K      = 0
TIM    = time
DEPLIG = 0
DEPTIM = 0
Onerrgo ERREUR
ER = 0
For (
&  Char     C1(5)
& ,Char     C2(35)
& ,Char     C3(20)
& ,Char     C4(20)
& ,Char     C5(30)
& ,Char     C6(30)
& ,Char     C7(30)
& ,Char     C8(2)
& ,Char     C9(35)
& ,Integer  C10
& ,Char     C11(50)
& ,Char     C12(50)
& ,Char     C13(40)
& ,Char     C14(10)
& ,Char     C15(35)
& ,Char     C16(3)
& ,Char     C17(2)
& ,Char     C18(15)
& ,Char     C19(30)
& ,Char     C20(30)
& ,Decimal  C21
& ,Decimal  C22
& ,Decimal  C23
& ,Char     C24(30)
& ) From '5' Sql TEXTE(1..19) As [SQL0]
If ER : Break : Endif
 K += 1
 [F:ALR]LIG = K
 [F:ALR]COL = 1
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C1
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 2
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C2
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 3
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C3
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 4
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C4
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 5
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C5
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 6
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C6
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 7
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C7
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 8
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C8
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 9
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C9
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 10
 [F:ALR]TYP = 2
 [F:ALR]NUM = [F:SQL0]C10
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 11
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C11
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 12
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C12
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 13
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C13
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 14
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C14
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 15
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C15
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 16
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C16
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 17
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C17
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 18
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C18
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 19
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C19
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 20
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C20
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 21
 [F:ALR]TYP = 4
 [F:ALR]NUM = [F:SQL0]C21
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 22
 [F:ALR]TYP = 3
 [F:ALR]NUM = [F:SQL0]C22
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 23
 [F:ALR]TYP = 4
 [F:ALR]NUM = [F:SQL0]C23
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
 [F:ALR]COL = 24
 [F:ALR]TYP = 7
 [F:ALR]VLR = [F:SQL0]C24
 Write [ALR]
 If fstat
  GOK = 0 : Call FSTA("ALR") From GLOCK : Break
 Endif
Next SQL0
Onerrgo
Return

$ERREUR
ER = errn
Call ERREUR(errmes$(errn)-errm+"\"+sum(TEXTE)) From GESECRAN
Resume

$TIT
Local Char    TIT(30)
TIT(0) = Func AFNC.TEXTRA("ALISTEH","INTIT","YTPAR","")
Return

$DEFVAR
Local Integer NBCOL
Local Integer TYP(1..24)
Local Decimal LONG(1..24)
Local Integer NOLIB(1..24)
NBCOL = 24
TYP(1) = 7
NOLIB(1) = 0
LONG(1) = 5
TYP(2) = 7
NOLIB(2) = 0
LONG(2) = 35
TYP(3) = 7
NOLIB(3) = 0
LONG(3) = 5
TYP(4) = 7
NOLIB(4) = 0
LONG(4) = 5
TYP(5) = 7
NOLIB(5) = 0
LONG(5) = 30
TYP(6) = 7
NOLIB(6) = 0
LONG(6) = 30
TYP(7) = 7
NOLIB(7) = 0
LONG(7) = 30
TYP(8) = 7
NOLIB(8) = 0
LONG(8) = 2
TYP(9) = 7
NOLIB(9) = 0
LONG(9) = 35
TYP(10) = 1
NOLIB(10) = 943
LONG(10) = 15
TYP(11) = 7
NOLIB(11) = 0
LONG(11) = 50
TYP(12) = 7
NOLIB(12) = 0
LONG(12) = 50
TYP(13) = 7
NOLIB(13) = 0
LONG(13) = 40
TYP(14) = 7
NOLIB(14) = 0
LONG(14) = 10
TYP(15) = 7
NOLIB(15) = 0
LONG(15) = 35
TYP(16) = 7
NOLIB(16) = 0
LONG(16) = 3
TYP(17) = 7
NOLIB(17) = 0
LONG(17) = 20
TYP(18) = 7
NOLIB(18) = 0
LONG(18) = 20
TYP(19) = 7
NOLIB(19) = 0
LONG(19) = 30
TYP(20) = 7
NOLIB(20) = 0
LONG(20) = 30
TYP(21) = 4
NOLIB(21) = 0
LONG(21) = 9.2
TYP(22) = 4
NOLIB(22) = 0
LONG(22) = 9.2
TYP(23) = 4
NOLIB(23) = 0
LONG(23) = 9.2
TYP(24) = 7
NOLIB(24) = 0
LONG(24) = 30
Return

$BOUTONS
Raz GBOUT1, GBOUT2, GBOUT3, GBOUT4, GBOUT5, GBOUT6, GBOUT7, GBOUT8
If [M:LST]C1(nolign-1) <> "" 
 Call TEXTE(3529,GBOUT1) From OBJDIV
 [M:LST]TUNNEL(1) = "CPY"
 [M:LST]TUNZON(1) = 1
Endif
If [M:LST]C3(nolign-1) <> "" 
 Call TEXTE(5342,GBOUT2) From OBJDIV
 [M:LST]TUNNEL(2) = "TVT"
 [M:LST]TUNZON(2) = 3
Endif
If [M:LST]C4(nolign-1) <> "" 
 Call TEXTE(5342,GBOUT3) From OBJDIV
 [M:LST]TUNNEL(3) = "TVT"
 [M:LST]TUNZON(3) = 4
Endif
If [M:LST]C16(nolign-1) <> "" 
 Call TEXTE(53316,GBOUT4) From OBJDIV
 [M:LST]TUNNEL(4) = "TCY"
 [M:LST]TUNZON(4) = 16
Endif
Return
