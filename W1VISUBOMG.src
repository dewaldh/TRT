#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management VISUBOMG 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:17:53"
A_USER  = "ADMIN"
A_STAMP = "20180828001753"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask VISUBOMG [VBOG]
Gosub HORODAT
Local Inpbox "VISUBOMG" From GFONCTION At A_STAMP With A_WINDPREV Mask [VBOG] As [SIM_]
Grizo [VBOG]5
Grizo [VBOG]15
Grizo [VBOG]20
Grizo [VBOG]25
Grizo [VBOG]30
Grizo [VBOG]35
Grizo [VBOG]40
Grizo [VBOG]45
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [VBOG]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=201 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=55 : Y1(1)=4 : Y2(1)=7
X1(2)=56 : X2(2)=201 : Y1(2)=4 : Y2(2)=7
X1(3)=1 : X2(3)=55 : Y1(3)=8 : Y2(3)=28
X1(4)=56 : X2(4)=175 : Y1(4)=8 : Y2(4)=19
X1(5)=176 : X2(5)=201 : Y1(5)=8 : Y2(5)=19
X1(6)=56 : X2(6)=175 : Y1(6)=20 : Y2(6)=28
X1(7)=176 : X2(7)=201 : Y1(7)=20 : Y2(7)=28
X1(8)=1 : X2(8)=-2 : Y1(8)=1 : Y2(8)=0
Return

$ON_BOMALTTYP
Onevent BEFORE_INPUT Call AS_BOMALTTYP(zc) From W1VISUBOMG
Onevent AFTER_AREA Call AP_BOMALTTYP(zc) From W1VISUBOMG
Onevent INIT_AREA Call D_BOMALTTYP(zc) From W1VISUBOMG
Onevent CONTROL Call C_BOMALTTYP(zc) From W1VISUBOMG
Return

Subprog D_BOMALTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]BOMALTTYP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_BOMALTTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(224) From COMBOS
## Action STD
Call AS_BOMALTTYP(VALEUR) From SUBVBOMG
If mkstat=2
 [M]BOMALTTYP(INDIC) = VALEUR
 Affzo BOMALTTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,224,1))))
Endif
If !mkstat
 Discombo 0 From BOMALTTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From BOMALTTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_BOMALTTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMALTTYP" : GZNUM = 4281 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_BOMALTTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_BOMALTTYP(VALEUR) From SUBVBOMG
If mkstat : GERR = 1 : GZONE = "BOMALTTYP" : GZNUM = 4281 : Endif
Gosub _AFF
End

$ON_FILTRE
Return

$ON_STOFCY
Onevent CONTROL Call C_STOFCY(zc) From W1VISUBOMG
Onevent BEFORE_INPUT Call AS_STOFCY(zc) From W1VISUBOMG
Onevent AFTER_CHANGE Gosub AMM_STOFCY From W1VISUBOMG
Return

Subprog AS_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_STOFCY(VALEUR) From SUBVBOMG
If mkstat=2
 [M]STOFCY(INDIC) = VALEUR
 Affzo STOFCY(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_STOFCY(zc) From W1VISUBOMG
Onkey   2 Titled GBOUTS Call S_STOFCY(zc) From W1VISUBOMG
Onkey 144 Titled GBOUTP Call P_STOFCY(zc) From W1VISUBOMG
Onkey 146 Titled GBOUTA Call SA_STOFCY(zc) From W1VISUBOMG
Gosub _AFF
End

Subprog C_STOFCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1720 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1720 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "STOFCY" : GZNUM = 1720 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_STOFCY
Call AM_STOFCY(zc)
If !mkstat & GOBJET
 zoncou = "STOFCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOFCY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZSTOFCY)")>indice
 [M]STOFCY(indice) = VALEUR
 Affzo ZSTOFCY(indice)
Endif
Gosub _AFF
End

Subprog S_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_STOFCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_STOFCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSTOFCY
Onevent BEFORE_AREA Gosub AV_ZSTOFCY From W1VISUBOMG
Return

$AV_ZSTOFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]STOFCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_PARITMREF
Onevent CONTROL Call C_PARITMREF(zc) From W1VISUBOMG
Onevent BEFORE_INPUT Call AS_PARITMREF(zc) From W1VISUBOMG
Onevent AFTER_CHANGE Gosub AMM_PARITMREF From W1VISUBOMG
Return

Subprog IB_PARITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
If !GWEBSERV
 ## Action STD
 Call IB_PARITMREF From SUBVBOMG
Endif
Gosub _AFF
End

Subprog AS_PARITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_PARITMREF(VALEUR)
If !GWEBSERV
 ## Action STD
 Call AS_PARITMREF(VALEUR) From SUBVBOMG
 If mkstat=2
  [M]PARITMREF(INDIC) = VALEUR
  Affzo PARITMREF(INDIC) : mkstat = 2
 Endif
Endif
Onkey 129 Titled GBOUT1 Call B1_PARITMREF(zc) From W1VISUBOMG
Onkey 170 Titled GBOUT13 Call B13_PARITMREF(zc) From W1VISUBOMG
Onkey   2 Titled GBOUTS Call S_PARITMREF(zc) From W1VISUBOMG
Onkey 144 Titled GBOUTP Call P_PARITMREF(zc) From W1VISUBOMG
Onkey 146 Titled GBOUTA Call SA_PARITMREF(zc) From W1VISUBOMG
Gosub _AFF
End

Subprog C_PARITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PARITMREF" : GZNUM = 7352 : Endif
If !GWEBSERV
 If !mkstat
  ## Action ITMCHOICE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "ITMCHOICE"
  Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "PARITMREF" : GZNUM = 7352 : Endif
 Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "PARITMREF" : GZNUM = 7352 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "PARITMREF" : GZNUM = 7352 : Endif
  If !mkstat
   ## Action STD
   Call C_PARITMREF(VALEUR) From SUBVBOMG
   If mkstat : GERR = 1 : GZONE = "PARITMREF" : GZNUM = 7352 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_PARITMREF
Call AM_PARITMREF(zc)
If !mkstat & GOBJET
 zoncou = "PARITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PARITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PARITMREF(VALEUR) From SUBVBOMG
If mkstat : GERR = 1 : GZONE = "PARITMREF" : GZNUM = 7352 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZPARITMREF)")>indice
 [M]PARITMREF(indice) = VALEUR
 Affzo ZPARITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_PARITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELBOMOBJ
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELBOMOBJ"
 PARMSK(1) = VALEUR
 PARMSK(2) = ""
 PARMSK(3) = "[M:VBOG]"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELBOMOBJ","TRTBOM","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_PARITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_PARITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_PARITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PARITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPARITMREF
Onevent BEFORE_AREA Gosub AV_ZPARITMREF From W1VISUBOMG
Return

$AV_ZPARITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]PARITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_BOMALT
Onevent BEFORE_INPUT Call AS_BOMALT(zc) From W1VISUBOMG
Onevent AFTER_CHANGE Gosub AMM_BOMALT From W1VISUBOMG
Onevent CONTROL Call C_BOMALT(zc) From W1VISUBOMG
Return

Subprog AS_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3570,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
## Action STD
Call AS_BOMALT(VALEUR) From SUBVBOMG
If mkstat=2
 [M]BOMALT(INDIC) = VALEUR
 Affzo BOMALT(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_BOMALT(zc) From W1VISUBOMG
Onkey   2 Titled GBOUTS Call S_BOMALT(zc) From W1VISUBOMG
Onkey 144 Titled GBOUTP Call P_BOMALT(zc) From W1VISUBOMG
Gosub _AFF
End

Subprog C_BOMALT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMALT" : GZNUM = 3964 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTNUM("TBO","",VALEUR,num$([M]BOMALTTYP),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BOMALT" : GZNUM = 3964 : Endif
Endif
Gosub _AFF
End

$AMM_BOMALT
Call AM_BOMALT(zc)
If !mkstat & GOBJET
 zoncou = "BOMALT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BOMALT(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_BOMALT(VALEUR) From SUBVBOMG
If mkstat : GERR = 1 : GZONE = "BOMALT" : GZNUM = 3964 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZBOMALT)")>indice
 [M]BOMALT(indice) = VALEUR
 Affzo ZBOMALT(indice)
Endif
Gosub _AFF
End

Subprog S_BOMALT(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELBOM2
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELBOM2"
 PARMSK(1) = [M:VBOG]PARITMREF
 PARMSK(2) = "0"
 PARMSK(3) = [M:VBOG]OPTIONA
 PARMSK(4) = [M:VBOG]PARITMREF
 Call S_TAB_NUM(VALEUR,PARMSK,"SELBOM2","TRTBOM","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TBO",VALCHAR,num$([M]BOMALTTYP)) From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_BOMALT(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = num$([M]BOMALTTYP)
Call VISU("TBO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBOMALT
Onevent BEFORE_AREA Gosub AV_ZBOMALT From W1VISUBOMG
Return

$AV_ZBOMALT
Call LECTEXTRA(zc,"TABBOMALT","TBODESAXX",num$([M]BOMALTTYP),num$([M]BOMALT(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_DATREF
Onevent CONTROL Call C_DATREF(zc) From W1VISUBOMG
Onevent BEFORE_AREA Gosub AV_DATREF From W1VISUBOMG
Return

$AV_DATREF
Chgfmt [M]DATREF(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog C_DATREF(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_DATREF(VALEUR) From SUBVBOMG
If mkstat : GERR = 1 : GZONE = "DATREF" : GZNUM = 6424 : Endif
Gosub _AFF
End

$ON_VBOGECCMAJ
Onevent CONTROL Call C_VBOGECCMAJ(zc) From W1VISUBOMG
Onevent BEFORE_INPUT Call AS_VBOGECCMAJ(zc) From W1VISUBOMG
Return

Subprog AS_VBOGECCMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VBOGECCMAJ(zc) From W1VISUBOMG
Gosub _AFF
End

Subprog C_VBOGECCMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VBOGECCMAJ(VALEUR) From SUBVBOMG
If mkstat : GERR = 1 : GZONE = "VBOGECCMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_VBOGECCMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "VBOGECCMAJ"
 PARMSK(2) = "ECCVISUBOM"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VBOGECCMIN
Onevent CONTROL Call C_VBOGECCMIN(zc) From W1VISUBOMG
Onevent BEFORE_INPUT Call AS_VBOGECCMIN(zc) From W1VISUBOMG
Return

Subprog AS_VBOGECCMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VBOGECCMIN(zc) From W1VISUBOMG
Gosub _AFF
End

Subprog C_VBOGECCMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VBOGECCMIN(VALEUR) From SUBVBOMG
If mkstat : GERR = 1 : GZONE = "VBOGECCMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

Subprog S_VBOGECCMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "VBOGECCMIN"
 PARMSK(2) = "ECCVISUBOM"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_BOMSTU
Return

$ON_ZBOMSTU
Onevent BEFORE_AREA Gosub AV_ZBOMSTU From W1VISUBOMG
Return

$AV_ZBOMSTU
Call LECTEXTRA(zc,"TABUNIT","DESSHO",num$([M]BOMSTU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_QTYCOD
Onevent INIT_AREA Call D_QTYCOD(zc) From W1VISUBOMG
Return

Subprog D_QTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BASQTY
Onevent BEFORE_AREA Gosub AV_BASQTY From W1VISUBOMG
Return

$AV_BASQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]BOMSTU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]BASQTY(indice) With "NP+z:"+GUNTFMT
Gosub _AFF
Return

$ON_BOHSTRDAT
Onevent BEFORE_AREA Gosub AV_BOHSTRDAT From W1VISUBOMG
Return

$AV_BOHSTRDAT
Chgfmt [M]BOHSTRDAT(indice) With "DPzZ:"+GFMDAT
Gosub _AFF
Return

$ON_BOHENDDAT
Onevent BEFORE_AREA Gosub AV_BOHENDDAT From W1VISUBOMG
Return

$AV_BOHENDDAT
Chgfmt [M]BOHENDDAT(indice) With "DPzZ:"+GFMDAT
Gosub _AFF
Return

$ON_ECCSTRDAT
Onevent BEFORE_AREA Gosub AV_ECCSTRDAT From W1VISUBOMG
Return

$AV_ECCSTRDAT
Chgfmt [M]ECCSTRDAT(indice) With "DPzZ:"+GFMDAT
Gosub _AFF
Return

$ON_ECCENDDAT
Onevent BEFORE_AREA Gosub AV_ECCENDDAT From W1VISUBOMG
Return

$AV_ECCENDDAT
Chgfmt [M]ECCENDDAT(indice) With "DPzZ:"+GFMDAT
Gosub _AFF
Return

$ON_USESTA
Onevent INIT_AREA Call D_USESTA(zc) From W1VISUBOMG
Return

Subprog D_USESTA(VALEUR)
Variable Integer VALEUR
If varinit([M]USESTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG
Onevent BEFORE_INPUT Call AS_NBLIG From W1VISUBOMG
Return

Subprog IB_NBLIG
Local Decimal BASPAG
## Action STD
Call IB_NBLIG From SUBVBOMG
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3651,GBOUT2) From OBJDIV
Call TEXTE(7377,GBOUT3) From OBJDIV
Call TEXTE(7909,GBOUT4) From OBJDIV
Call TEXTE(26829,GBOUT5) From OBJDIV
Call TEXTE(12817,GBOUT6) From OBJDIV
Call IB_NBLIG
## Action STD
Call AS_NBLIG From SUBVBOMG
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1VISUBOMG
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1VISUBOMG
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1VISUBOMG
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1VISUBOMG
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1VISUBOMG
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB2_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M]XCPNITMREF
 Call OBJET_CHAR(OBJCLE,"ITM","") From GOBJET
 ACTION = "BB2_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action VISUBOMWUS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUBOMWUS"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB3_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call TRAITE_NUM(BASPAG,PARMSK,"FBOMWUS","SUBBOW","",1,"SPEBOW") From GTRAITE
 ACTION = "BB3_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC7A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC7A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB4_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = num$([M:VBOG]BOMALT)
 Call OBJET_CHAR(OBJCLE,"BOD",WCLE1+"~"+num$([M:VBOG]ALTTYPR(nolign))) From GOBJET
 ACTION = "BB4_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC7A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC7A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB5_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = num$([M:VBOG]BOMALT)
 Call OBJET_CHAR(OBJCLE,"BOD",WCLE1+"~"+num$([M:VBOG]ALTTYPR(nolign))) From GOBJET
 ACTION = "BB5_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSSFC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSFC"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB6_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "0"
 PARMSK(2) = [M:VBOG]STOFCY
 PARMSK(3) = [M]XCPNITMREF
 PARMSK(4) = ""
 Call CONSULT_NUM(BASPAG,"SFC",PARMSK) From GCONSULT
 ACTION = "BB6_NBLIG" : PROGSUB = "SUBVBOMG" : PROGSPE = "SPEVBOMG" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ITMREF
Return

$ON_ALTTYPR
Onevent INIT_AREA Call D_ALTTYPR(zc) From W1VISUBOMG
Return

Subprog D_ALTTYPR(VALEUR)
Variable Integer VALEUR
If varinit([M]ALTTYPR,indice)=0
 VALEUR = [M]BOMALTTYP
Endif
Gosub _AFF
End

$ON_CPNITMREF
Return

$ON_GRPITMREF
Return

$ON_DES1AXX
Onevent INIT_AREA Call D_DES1AXX(zc) From W1VISUBOMG
Return

Subprog D_DES1AXX(VALEUR)
Variable Char    VALEUR()
If varinit([M]DES1AXX,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"ITMMASTER","DES1AXX",[M:VBOG]GRPITMREF(nolign-1),"") From ATEXTRA
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_REOCOD
Onevent INIT_AREA Call D_REOCOD(zc) From W1VISUBOMG
Return

Subprog D_REOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]REOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1VISUBOMG
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2VISUBOMG
Return

$TIT_COL
Gosub TIT_COL From W2VISUBOMG
Return


