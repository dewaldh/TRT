#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoice number definition
# Supervisor
## CRUD-CLASSE ## BSIINVDIODUP
# 2018-08-27 12:27:17 537


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(BSIINVDIODUP,ASTATUS)
Variable Instance BSIINVDIODUP Using C_BSIINVDIODUP
Variable Integer ASTATUS

If BSIINVDIODUP = null : End : Endif

Gosub _AVARIABLES From WMC00BSIINVDIODUP

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_BSIINVDIODUP

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BSIINVDIODUP,ASTATUS)
Variable Instance BSIINVDIODUP Using C_BSIINVDIODUP
Variable Integer ASTATUS

If BSIINVDIODUP = null : End : Endif

Gosub AVARIABLES From WMC00BSIINVDIODUP
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BSIINVDIODUP
Else
 Gosub AINSERT_BSIINVDIODUP
Endif

Gosub _AINSERT_AFTER
[L]A_I = BSIINVDIODUP.freeSnapshot
BSIINVDIODUP.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIINVDIODUP._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIINVDIODUP._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIINVDIODUP._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BSIINVDIODUP.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIINVDIODUP.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIODUP.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIODUP.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BSIINVDIODUP
Gosub AINSERT_BSIINVDIODUP
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_BSIINVDIODUP
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIODUP.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIODUP.ACTION("AINSERT"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIODUP.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
$_AINSERT_ABORT
If BSIINVDIODUP.snapshotEnabled=1
 [L]A_RETIK = BSIINVDIODUP.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIINVDIODUP.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BSIINVDIODUP.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIINVDIODUP.ASTALIN = [V]CST_ALL
Endif
Return



