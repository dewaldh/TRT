#<AdxTL>@(#)0.0.0.0 $Revision$Class Economic reason by product
# Supervisor
## CRUD-CLASSE ## PBDECODITM
# 2018-08-27 13:21:12 049


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PBDECODITM,ASTATUS)
Variable Instance PBDECODITM Using R_PBDECODITM
Variable Integer ASTATUS

If PBDECODITM = null : End : Endif

Gosub AVARIABLES From WMR00PBDECODITM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet PBDECODITM.ACTX.AGETAFCRIGHT(PBDECODITM,"GESPBDECO",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet PBDECODITM.ACTX.AGETAFCRIGHTU(PBDECODITM,"GESPBDECO",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PBDECODITM
Else
 Gosub AUPDATE_PBDECODITM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PBDECODITM.freeSnapshot
PBDECODITM.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
PBDECODITM.ASTALIN = [V]CST_AUPD
PBDECODITM.PBDECIT.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = PBDECODITM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = PBDECODITM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PBDECODITM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PBDECODITM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PBDECODITM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PBDECODITM.PBDECIT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PBDECODITM.PBDECIT.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PBDECODITM.PBDECIT.ASTALIN)<>""
 [L]A_ASTALIN = PBDECODITM.PBDECIT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.PBDECIT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(PBDECODITM.PBDECIT.ASTALIN)<>""
 [L]A_ASTALIN = PBDECODITM.PBDECIT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.PBDECIT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PBDECODITM
Gosub AUPDATE_PBDECODITM
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PBDECODITM.PBDECIT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PBDECODITM.PBDECIT.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_PBDECODITM
[L]A_ASTALIN = PBDECODITM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.PBDECIT._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = PBDECODITM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
$_AUPDATE_ABORT
If PBDECODITM.snapshotEnabled=1
 [L]A_RETIK = PBDECODITM.revertUpdTick
Endif

[L]ASTATUS = max(fmet PBDECODITM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



