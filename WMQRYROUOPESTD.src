#<AdxTL>@(#)0.0.0.0 $Revision$Class Standard operations
# Sage X3 supervisor
## WMREP REPRESENTATION ## ROUOPESTD
# 2018-03-26 01:18:58 817

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:ROT])=0 : Local File ROUOPESTD [ROT] : Endif
If clalev([F:WAXX1])=0 : Local File ATEXTRA [WAXX1] : Endif
If clalev([F:AFF])=0 : Local File AFCTFCY [AFF] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [ROT]
LogicClose File [WAXX1]
LogicClose File [AFF]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"ROT","ROT",ACRITROLE,[V]CST_AFALSE)
Link [ROT] With
& [AFF]AFF0~= [F:ROT]FCY;GACTX.APRFCOD;[L]_AFCRIGHT,
& [F:WAXX1]AXX0 = "ROUOPESTD";"STDOPEDESAXX";GACTX.LAN;num$([F:ROT]STDOPENUM);[F:ROT]FCY
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"ROT","ROT",ACRITROLE,[V]CST_AFALSE)
Link [ROT] With
& [AFF]AFF0~= [F:ROT]FCY;GACTX.APRFCOD;[L]_AFCRIGHT,
& [F:WAXX1]AXX0 = "ROUOPESTD";"STDOPEDESAXX";GACTX.LAN;num$([F:ROT]STDOPENUM);[F:ROT]FCY
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# ROT --- ROUOPESTD(ROT)
QRY(NBREP) = NewInstance R_ROUOPESTD AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:ROT]AUUID)>0 & [F:ROT]AUUID=NullUuid
 [F:ROT]AUUID = getUuid
Endif
SetInstance QRY(NBREP).ROT With [F:ROT]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
Call ASETTEXTRA(QRY(NBREP).ROT.AXX,"QRY","STDOPEDESAXX",[F:WAXX1]TEXTE,[F:WAXX1]LANGUE) From ASYRSUB
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# ROT --- ROUOPESTD(ROT)
QRY = NewInstance R_ROUOPESTD AllocGroup PQRY
QRY.ROT.AXX(1) = NewInstance C_ATXTTRA AllocGroup QRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:ROT]AUUID)>0 & [F:ROT]AUUID=NullUuid
 [F:ROT]AUUID = getUuid
Endif
SetInstance QRY.ROT With [F:ROT]
QRY.ROT.AXX(1).PRO = "STDOPEDESAXX"
QRY.ROT.AXX(1).LAN = [F:WAXX1]LANGUE
QRY.ROT.AXX(1).TEX = [F:WAXX1]TEXTE
QRY.ROT.AXX(1).FLG = 1
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0ROUOPESTD
CURQRY = "R_ROUOPESTD"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).ROT.FCY.LNKPRO
Callmet QRY(NBREP).ROT.WCR.LNKPRO
Callmet QRY(NBREP).ROT.WST.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.ROT.FCY.LNKPRO
Callmet QRY.ROT.WCR.LNKPRO
Callmet QRY.ROT.WST.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "STDOPENUM" : TBFIL(NBPRO) = "[F:ROT]STDOPENUM"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "ROT.STDOPENUM"
NBPRO += 1 : TBPRO(NBPRO) = "STDOPEDESAXX" : TBFIL(NBPRO) = "[F:WAXX1]TEXTE"
           : TBTYP(NBPRO) = 26 : TBPTH(NBPRO) = "ROT.STDOPEDESAXX"
NBPRO += 1 : TBPRO(NBPRO) = "FCY" : TBFIL(NBPRO) = "[F:ROT]FCY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ROT.FCY"
NBPRO += 1 : TBPRO(NBPRO) = "WCR" : TBFIL(NBPRO) = "[F:ROT]WCR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ROT.WCR"
NBPRO += 1 : TBPRO(NBPRO) = "WSTTYP" : TBFIL(NBPRO) = "[F:ROT]WSTTYP"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "ROT.WSTTYP"
NBPRO += 1 : TBPRO(NBPRO) = "WST" : TBFIL(NBPRO) = "[F:ROT]WST"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "ROT.WST"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:ROT]STDOPENUM"
ASTDKEY += ";"+"[F:ROT]FCY"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From ROUOPESTD_RSTD
Gosub EVENTS From ROUOPESTD_RSTD
Return
 


