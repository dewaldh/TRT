#<AdxTL>@(#)0.0.0.0 $Revision$Class Camt element mapping
# Supervisor
## CRUD-CLASSE ## BSIELTMAP
# 2018-08-27 13:07:32 058


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(BSIELTMAP,ASTATUS)
Variable Instance BSIELTMAP Using R_BSIELTMAP
Variable Integer ASTATUS

If BSIELTMAP = null : End : Endif

Gosub AVARIABLES From WMR00BSIELTMAP
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_BSIELTMAP
Else
 Gosub AINSERT_BSIELTMAP
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = BSIELTMAP.freeSnapshot
BSIELTMAP.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
BSIELTMAP.ASTALIN = [V]CST_ANEW
BSIELTMAP.BSIELT.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSIELTMAP._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSIELTMAP._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSIELTMAP._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If BSIELTMAP.BSIELT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSIELTMAP.BSIELT.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES) : # BSIELTMAPD -- 2
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
& and !find(BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.LINES(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES) : # BSIELTMAPD -- 2
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
& and !find(BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.LINES(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_BSIELTMAP
Trbegin [F:BSIELT]
 Gosub AINSERT_BSIELTMAP
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(BSIELTMAP.BSIELT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSIELTMAP.BSIELT.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSIELTMAP.BSIELT.LINES)
 If BSIELTMAP.BSIELT.LINES(A_N2) <> null
  If BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSIELTMAP.BSIELT.LINES(A_N2)
   BSIELTMAP.BSIELT.LINES(A_N2) = null
  Elsif BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSIELTMAP.BSIELT.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_BSIELTMAP
[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.BSIELT._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSIELTMAP.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If BSIELTMAP.snapshotEnabled=1
 [L]A_RETIK = BSIELTMAP.revertUpdTick
Endif
[L]ASTATUS = max(fmet BSIELTMAP.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



