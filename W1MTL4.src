#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management MTL4 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "12:54:10"
A_USER  = "ADMIN"
A_STAMP = "20180326125410"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MTL4 [MTL4]
Gosub HORODAT
Local Inpbox "MTL4" From GFONCTION At A_STAMP With A_WINDPREV Mask [MTL4] As [SIM_]
Grizo [MTL4]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MTL4]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=80 : Y1(0)=1 : Y2(0)=15
Return

$ON_LOTCODS
Onevent INIT_AREA Call D_LOTCODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_LOTCODS(zc) From W1MTL4
Return

Subprog D_LOTCODS(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTSCRS
Onevent INIT_AREA Call D_LOTSCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_LOTSCRS(zc) From W1MTL4
Return

Subprog D_LOTSCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOCODS
Onevent INIT_AREA Call D_SLOCODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_SLOCODS(zc) From W1MTL4
Return

Subprog D_SLOCODS(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOSCRS
Onevent INIT_AREA Call D_SLOSCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_SLOSCRS(zc) From W1MTL4
Return

Subprog D_SLOSCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOSCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOSCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATECCCOD
Onevent INIT_AREA Call D_MATECCCOD(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_MATECCCOD(zc) From W1MTL4
Return

Subprog D_MATECCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MATECCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATECCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATECCSCR
Onevent INIT_AREA Call D_MATECCSCR(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_MATECCSCR(zc) From W1MTL4
Return

Subprog D_MATECCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]MATECCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATECCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATECCCODMIN
Onevent INIT_AREA Call D_MATECCCODMIN(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_MATECCCODMIN(zc) From W1MTL4
Return

Subprog D_MATECCCODMIN(VALEUR)
Variable Integer VALEUR
If varinit([M]MATECCCODMIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATECCCODMIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MATECCSCRMIN
Onevent INIT_AREA Call D_MATECCSCRMIN(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_MATECCSCRMIN(zc) From W1MTL4
Return

Subprog D_MATECCSCRMIN(VALEUR)
Variable Integer VALEUR
If varinit([M]MATECCSCRMIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MATECCSCRMIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AQRCODS
Onevent INIT_AREA Call D_AQRCODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_AQRCODS(zc) From W1MTL4
Return

Subprog D_AQRCODS(VALEUR)
Variable Integer VALEUR
If varinit([M]AQRCODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AQRCODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AQRSCRS
Onevent INIT_AREA Call D_AQRSCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_AQRSCRS(zc) From W1MTL4
Return

Subprog D_AQRSCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]AQRSCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AQRSCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCODS
Onevent INIT_AREA Call D_LOCCODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_LOCCODS(zc) From W1MTL4
Return

Subprog D_LOCCODS(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCSCRS
Onevent INIT_AREA Call D_LOCSCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_LOCSCRS(zc) From W1MTL4
Return

Subprog D_LOCSCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCSCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCSCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERCODS
Onevent INIT_AREA Call D_SERCODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_SERCODS(zc) From W1MTL4
Return

Subprog D_SERCODS(VALEUR)
Variable Integer VALEUR
If varinit([M]SERCODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERCODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERSCRS
Onevent INIT_AREA Call D_SERSCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_SERSCRS(zc) From W1MTL4
Return

Subprog D_SERSCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]SERSCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERSCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERECODS
Onevent INIT_AREA Call D_SERECODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_SERECODS(zc) From W1MTL4
Return

Subprog D_SERECODS(VALEUR)
Variable Integer VALEUR
If varinit([M]SERECODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERECODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERESCRS
Onevent INIT_AREA Call D_SERESCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_SERESCRS(zc) From W1MTL4
Return

Subprog D_SERESCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]SERESCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERESCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECODS1
Onevent INIT_AREA Call D_IDECODS1(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_IDECODS1(zc) From W1MTL4
Return

Subprog D_IDECODS1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECODS1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECODS1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDESCRS1
Onevent INIT_AREA Call D_IDESCRS1(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_IDESCRS1(zc) From W1MTL4
Return

Subprog D_IDESCRS1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCRS1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCRS1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECODS2
Onevent INIT_AREA Call D_IDECODS2(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_IDECODS2(zc) From W1MTL4
Return

Subprog D_IDECODS2(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECODS2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECODS2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDESCRS2
Onevent INIT_AREA Call D_IDESCRS2(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_IDESCRS2(zc) From W1MTL4
Return

Subprog D_IDESCRS2(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCRS2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCRS2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MVTDESCODS
Onevent INIT_AREA Call D_MVTDESCODS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_MVTDESCODS(zc) From W1MTL4
Return

Subprog D_MVTDESCODS(VALEUR)
Variable Integer VALEUR
If varinit([M]MVTDESCODS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MVTDESCODS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MVTDESSCRS
Onevent INIT_AREA Call D_MVTDESSCRS(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_MVTDESSCRS(zc) From W1MTL4
Return

Subprog D_MVTDESSCRS(VALEUR)
Variable Integer VALEUR
If varinit([M]MVTDESSCRS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MVTDESSCRS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WRHCOD2
Onevent BEFORE_INPUT Call AS_WRHCOD2(zc) From W1MTL4
Onevent INIT_AREA Call D_WRHCOD2(zc) From W1MTL4
Onevent CONTROL Call C_WRHCOD2(zc) From W1MTL4
Return

Subprog D_WRHCOD2(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHCOD2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WRHCOD2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_WRHCOD2(VALEUR) From SUBMTL
If mkstat=2
 [M]WRHCOD2(INDIC) = VALEUR
 Affzo WRHCOD2(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From WRHCOD2(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From WRHCOD2(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_WRHCOD2(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_WRHSCR2
Onevent INIT_AREA Call D_WRHSCR2(zc) From W1MTL4
Onevent BEFORE_INPUT Call AS_WRHSCR2(zc) From W1MTL4
Return

Subprog D_WRHSCR2(VALEUR)
Variable Integer VALEUR
If varinit([M]WRHSCR2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WRHSCR2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


