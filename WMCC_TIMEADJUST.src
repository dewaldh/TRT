#<AdxTL>@(#)0.0.0.0 $Revision$Class Daylight saving time
# Supervisor
## CRUD-CLASSE ## TIMEADJUST
# 2018-08-27 12:54:12 685


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(TIMEADJUST,ASTATUS)
Variable Instance TIMEADJUST Using C_TIMEADJUST
Variable Integer ASTATUS

If TIMEADJUST = null : End : Endif

Gosub _AVARIABLES From WMC00TIMEADJUST

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_TIMEADJUST

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(TIMEADJUST,ASTATUS)
Variable Instance TIMEADJUST Using C_TIMEADJUST
Variable Integer ASTATUS

If TIMEADJUST = null : End : Endif

Gosub AVARIABLES From WMC00TIMEADJUST
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_TIMEADJUST
Else
 Gosub AINSERT_TIMEADJUST
Endif

Gosub _AINSERT_AFTER
[L]A_I = TIMEADJUST.freeSnapshot
TIMEADJUST.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet TIMEADJUST._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet TIMEADJUST._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet TIMEADJUST._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If TIMEADJUST.ASTALIN = [V]CST_ANEWDEL : Return : Endif
TIMEADJUST.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If TIMEADJUST.TTRSTR(A_N2) <> null
& and !find(TIMEADJUST.TTRSTR(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If TIMEADJUST.TTRSTR(A_N2).ASTALIN<>[V]CST_ADEL & TIMEADJUST.TTRSTR(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TIMEADJUST,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"TIMETRANS:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If TIMEADJUST.TTREND(A_N2) <> null
& and !find(TIMEADJUST.TTREND(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If TIMEADJUST.TTREND(A_N2).ASTALIN<>[V]CST_ADEL & TIMEADJUST.TTREND(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TIMEADJUST,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"TIMETRANS:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
A_N2=1
If TIMEADJUST.TTRSTR(A_N2) <> null
& and !find(TIMEADJUST.TTRSTR(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If TIMEADJUST.TTRSTR(A_N2).ASTALIN<>[V]CST_ADEL & TIMEADJUST.TTRSTR(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TIMEADJUST,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"TIMETRANS:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If TIMEADJUST.TTREND(A_N2) <> null
& and !find(TIMEADJUST.TTREND(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If TIMEADJUST.TTREND(A_N2).ASTALIN<>[V]CST_ADEL & TIMEADJUST.TTREND(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TIMEADJUST,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"TIMETRANS:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_TIMEADJUST
Trbegin [F:TAD]
 Gosub AINSERT_TIMEADJUST
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_TIMEADJUST
Raz [F:TAD]
[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00TIMEADJUST._MAJSQL_TIMEADJUST(TIMEADJUST))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
A_N2=1
If TIMEADJUST.TTRSTR(A_N2) <> null and 
& TIMEADJUST.TTRSTR(A_N2).ASTALIN=[V]CST_ALL
TIMEADJUST.TTRSTR(A_N2).ASTALIN = [V]CST_AUPD
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
A_N2=1
If TIMEADJUST.TTREND(A_N2) <> null and 
& TIMEADJUST.TTREND(A_N2).ASTALIN=[V]CST_ALL
TIMEADJUST.TTREND(A_N2).ASTALIN = [V]CST_AUPD
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If TIMEADJUST.snapshotEnabled=1
 [L]A_RETIK = TIMEADJUST.revertUpdTick
Endif
[L]ASTATUS = max(fmet TIMEADJUST.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(TIMEADJUST.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 TIMEADJUST.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
A_N2=1
If TIMEADJUST.TTRSTR(A_N2) <> null
 [L]ASTATUS2 = fmet TIMEADJUST.TTRSTR(A_N2)._AINSERT_AFTER
 If TIMEADJUST.TTRSTR(A_N2).ASTALIN=[V]CST_ADEL or TIMEADJUST.TTRSTR(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance TIMEADJUST.TTRSTR(A_N2)
  TIMEADJUST.TTRSTR(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
A_N2=1
If TIMEADJUST.TTREND(A_N2) <> null
 [L]ASTATUS2 = fmet TIMEADJUST.TTREND(A_N2)._AINSERT_AFTER
 If TIMEADJUST.TTREND(A_N2).ASTALIN=[V]CST_ADEL or TIMEADJUST.TTREND(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance TIMEADJUST.TTREND(A_N2)
  TIMEADJUST.TTREND(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Return



