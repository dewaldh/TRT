#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales orders - Light 1
# Supervisor
## CRUD-CLASSE ## SORDERH1
# 2018-08-27 12:48:16 288

Gosub TEST From WMCR_SORDERH1 : End

############################################################################################
## R : Subprog AREAD(INSTANCE,SOHNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# SORDERH1 : SORDER
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet SORDERH1._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = SORDERH1.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(SORDERH1.ACTX.AFOLDER,nomap,"")>0
 Local File SORDER [SOH]
 Local File SORDER [AAA_]
Else
 Local File =SORDERH1.ACTX.AFOLDER+".SORDER" [SOH]
 Local File =SORDERH1.ACTX.AFOLDER+".SORDER" [AAA_]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet SORDERH1.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [SOH] With
& [AAA_]SOH0 = SOHNUM
& As [LNK_]
Return

############################################################################################
### SORDER(WSOH)
############################################################################################
Funprog  _MAJSQL_SORDER(WSOH)
Variable Instance WSOH Using C_SORDERH1
Local Integer ASTATUS,A_I,A_J
Default File [F:SOH]
If WSOH.ASTALIN=[V]CST_ANEW
 Call INICRE(WSOH) From ASYRSUB
 SetInstance [F:SOH] With WSOH
 For [L]A_J=1 to 1
  For [L]A_I=1 To maxtab(WSOH.C_BPCNAM)
   If WSOH.C_BPCNAM([L]A_I)<>null & !find(WSOH.C_BPCNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPCNAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPCNAM([L]A_J-1) = WSOH.C_BPCNAM([L]A_I).BPCNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to dim([F:SOH]REP)
  For [L]A_I=1 To maxtab(WSOH.C_REP)
   If WSOH.C_REP([L]A_I)<>null & !find(WSOH.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_REP([L]A_I).AORDER=[L]A_J
    [F:SOH]REP([L]A_J-1) = WSOH.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SOH]
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOH.updTick = [F:SOH]updTick
Elsif WSOH.ASTALIN=[V]CST_ALL or WSOH.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSOH) From ASYRSUB
 SetInstance [F:SOH] With WSOH
 For [L]A_J=1 to 1
  For [L]A_I=1 To maxtab(WSOH.C_BPCNAM)
   If WSOH.C_BPCNAM([L]A_I)<>null & !find(WSOH.C_BPCNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_BPCNAM([L]A_I).AORDER=[L]A_J
    [F:SOH]BPCNAM([L]A_J-1) = WSOH.C_BPCNAM([L]A_I).BPCNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to dim([F:SOH]REP)
  For [L]A_I=1 To maxtab(WSOH.C_REP)
   If WSOH.C_REP([L]A_I)<>null & !find(WSOH.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WSOH.C_REP([L]A_I).AORDER=[L]A_J
    [F:SOH]REP([L]A_J-1) = WSOH.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOH,"SORDER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SOH]SOH0 = [F:SOH]SOHNUM
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSOH.updTick = [F:SOH]updTick
Elsif WSOH.ASTALIN=[V]CST_ADEL
 SetInstance [F:SOH] With WSOH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSOH,"SORDER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SOH]SOH0 = [F:SOH]SOHNUM
 If fstat
  Call FSTA("SOH",WSOH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



