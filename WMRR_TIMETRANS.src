#<AdxTL>@(#)0.0.0.0 $Revision$Class Change to daylight saving time
# Supervisor
## CRUD-CLASSE ## TIMETRANS
# 2018-08-27 13:45:48 648


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TIMETRANS [TTR_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TIMETRANS") From ASYRCOM : Endif
Local Instance TIMETRANS Using R_TIMETRANS

If !SILENCE : Call TRACE("3 --> New Instance R_TIMETRANS") From ASYRCOM : Endif
TIMETRANS = NewInstance R_TIMETRANS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TTR_]TTR0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TIMETRANS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TIMETRANS.AREAD([TTR_]COD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TIMETRANS.TTR.COD ="-num$(TIMETRANS.TTR.COD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TIMETRANS.TTR.AKEYS)
  Call TRACE("-"-num$(I)-":"-TIMETRANS.TTR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TTR_]
FreeGroup TIMETRANS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TIMETRANS,ACLE,ASTATUS,_ETAG)
Variable Instance TIMETRANS Using R_TIMETRANS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COD(30)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TIMETRANS [TTR]
Default File [F:TTR]
Read [F:TTR]TTR0 = [L]_COD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TTR]UPDTICK)>0
 [L]_ETAG = num$([F:TTR]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TIMETRANS,ACLE,ASTATUS)
Variable Instance TIMETRANS Using R_TIMETRANS
Value Char ACLE
Variable Integer ASTATUS
Local Char _COD(30)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TIMETRANS.AREAD([L]_COD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TIMETRANS,_COD,ASTATUS)
Variable Instance TIMETRANS Using R_TIMETRANS
Value Char _COD
Variable Integer ASTATUS

If TIMETRANS = null : End : Endif

Gosub AVARIABLES From WMR00TIMETRANS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TIMETRANS.APARENT=null
 [L]A_I = TIMETRANS.freeSnapshot
 TIMETRANS.snapshotEnabled = 0
 TIMETRANS.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TIMETRANS.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TIMETRANS.TTR.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TIMETRANS.TTR.AREAD([L]_COD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TIMETRANS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TIMETRANS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TIMETRANS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TIMETRANS.APARENT=null
 TIMETRANS.snapshotEnabled = 1
 TIMETRANS.setAccessorEnabled = 1
Endif
LogicClose File [TTR]
End



