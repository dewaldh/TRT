#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SRO1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:14:21"
A_USER  = "ADMIN"
A_STAMP = "20180828001421"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SRO1 [SRO1]
Gosub HORODAT
Local Inpbox "SRO1" From GFONCTION At A_STAMP With A_WINDPREV Mask [SRO1] As [SIM_]
Grizo [SRO1]10
Grizo [SRO1]15
Grizo [SRO1]20
Grizo [SRO1]30
Grizo [SRO1]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SRO1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=38 : X2(0)=74 : Y1(0)=1 : Y2(0)=25
X1(1)=1 : X2(1)=37 : Y1(1)=5 : Y2(1)=6
X1(2)=1 : X2(2)=37 : Y1(2)=7 : Y2(2)=9
X1(4)=1 : X2(4)=37 : Y1(4)=10 : Y2(4)=25
X1(5)=1 : X2(5)=37 : Y1(5)=1 : Y2(5)=4
Return

$ON_SRGPPSCOD
Onevent INIT_AREA Call D_SRGPPSCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_SRGPPSCOD(zc) From W1SRO1
Return

Subprog D_SRGPPSCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SRGPPSCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SRGPPSCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SRGPPSSCR
Onevent INIT_AREA Call D_SRGPPSSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_SRGPPSSCR(zc) From W1SRO1
Return

Subprog D_SRGPPSSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SRGPPSSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SRGPPSSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORIREOCOD
Onevent INIT_AREA Call D_ORIREOCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_ORIREOCOD(zc) From W1SRO1
Return

Subprog D_ORIREOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ORIREOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORIREOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORIREOSCR
Onevent INIT_AREA Call D_ORIREOSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_ORIREOSCR(zc) From W1SRO1
Return

Subprog D_ORIREOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ORIREOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORIREOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMCOD
Onevent INIT_AREA Call D_VCRNUMCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_VCRNUMCOD(zc) From W1SRO1
Return

Subprog D_VCRNUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRNUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRNUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMSCR
Onevent INIT_AREA Call D_VCRNUMSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_VCRNUMSCR(zc) From W1SRO1
Return

Subprog D_VCRNUMSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRNUMSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRNUMSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPRNUMCOD
Onevent INIT_AREA Call D_BPRNUMCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_BPRNUMCOD(zc) From W1SRO1
Return

Subprog D_BPRNUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]BPRNUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPRNUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPRNUMSCR
Onevent INIT_AREA Call D_BPRNUMSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_BPRNUMSCR(zc) From W1SRO1
Return

Subprog D_BPRNUMSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]BPRNUMSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPRNUMSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STUCOD
Onevent INIT_AREA Call D_STUCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_STUCOD(zc) From W1SRO1
Return

Subprog D_STUCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STUCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STUCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STUSCR
Onevent INIT_AREA Call D_STUSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_STUSCR(zc) From W1SRO1
Return

Subprog D_STUSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]STUSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STUSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUOCOD
Onevent INIT_AREA Call D_QTYSTUOCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_QTYSTUOCOD(zc) From W1SRO1
Return

Subprog D_QTYSTUOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUOSCR
Onevent INIT_AREA Call D_QTYSTUOSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_QTYSTUOSCR(zc) From W1SRO1
Return

Subprog D_QTYSTUOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFLOCCOD
Onevent INIT_AREA Call D_DEFLOCCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_DEFLOCCOD(zc) From W1SRO1
Return

Subprog D_DEFLOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]DEFLOCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEFLOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFLOCSCR
Onevent INIT_AREA Call D_DEFLOCSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_DEFLOCSCR(zc) From W1SRO1
Return

Subprog D_DEFLOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]DEFLOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEFLOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFTYPCOD
Onevent INIT_AREA Call D_DEFTYPCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_DEFTYPCOD(zc) From W1SRO1
Return

Subprog D_DEFTYPCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]DEFTYPCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEFTYPCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFTYPSCR
Onevent INIT_AREA Call D_DEFTYPSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_DEFTYPSCR(zc) From W1SRO1
Return

Subprog D_DEFTYPSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]DEFTYPSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEFTYPSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUCOD
Onevent INIT_AREA Call D_QTYSTUCOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_QTYSTUCOD(zc) From W1SRO1
Return

Subprog D_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUSCR
Onevent INIT_AREA Call D_QTYSTUSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_QTYSTUSCR(zc) From W1SRO1
Return

Subprog D_QTYSTUSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTCOD
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1SRO1
Onevent INIT_AREA Call D_LOTCOD(zc) From W1SRO1
Onevent CONTROL Call C_LOTCOD(zc) From W1SRO1
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_LOTCOD(VALEUR) From SUBSRO
If mkstat=2
 [M]LOTCOD(INDIC) = VALEUR
 Affzo LOTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From LOTCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LOTCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LOTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_LOTSCR
Onevent INIT_AREA Call D_LOTSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_LOTSCR(zc) From W1SRO1
Return

Subprog D_LOTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOCOD
Onevent BEFORE_INPUT Call AS_SLOCOD(zc) From W1SRO1
Onevent INIT_AREA Call D_SLOCOD(zc) From W1SRO1
Onevent CONTROL Call C_SLOCOD(zc) From W1SRO1
Return

Subprog D_SLOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_SLOCOD(VALEUR) From SUBSRO
If mkstat=2
 [M]SLOCOD(INDIC) = VALEUR
 Affzo SLOCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From SLOCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SLOCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SLOCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SLOSCR
Onevent INIT_AREA Call D_SLOSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_SLOSCR(zc) From W1SRO1
Return

Subprog D_SLOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STACOD
Onevent BEFORE_INPUT Call AS_STACOD(zc) From W1SRO1
Onevent INIT_AREA Call D_STACOD(zc) From W1SRO1
Onevent CONTROL Call C_STACOD(zc) From W1SRO1
Return

Subprog D_STACOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STACOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STACOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_STACOD(VALEUR) From SUBSRO
If mkstat=2
 [M]STACOD(INDIC) = VALEUR
 Affzo STACOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From STACOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From STACOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_STACOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_STASCR
Onevent INIT_AREA Call D_STASCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_STASCR(zc) From W1SRO1
Return

Subprog D_STASCR(VALEUR)
Variable Integer VALEUR
If varinit([M]STASCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STASCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCCOD
Onevent BEFORE_INPUT Call AS_LOCCOD(zc) From W1SRO1
Onevent INIT_AREA Call D_LOCCOD(zc) From W1SRO1
Onevent CONTROL Call C_LOCCOD(zc) From W1SRO1
Return

Subprog D_LOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_LOCCOD(VALEUR) From SUBSRO
If mkstat=2
 [M]LOCCOD(INDIC) = VALEUR
 Affzo LOCCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From LOCCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LOCCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LOCCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_LOCSCR
Onevent INIT_AREA Call D_LOCSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_LOCSCR(zc) From W1SRO1
Return

Subprog D_LOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERCOD
Onevent BEFORE_INPUT Call AS_SERCOD(zc) From W1SRO1
Onevent INIT_AREA Call D_SERCOD(zc) From W1SRO1
Onevent CONTROL Call C_SERCOD(zc) From W1SRO1
Return

Subprog D_SERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_SERCOD(VALEUR) From SUBSRO
If mkstat=2
 [M]SERCOD(INDIC) = VALEUR
 Affzo SERCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From SERCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SERCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SERCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SERSCR
Onevent INIT_AREA Call D_SERSCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_SERSCR(zc) From W1SRO1
Return

Subprog D_SERSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERECOD
Onevent INIT_AREA Call D_SERECOD(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_SERECOD(zc) From W1SRO1
Return

Subprog D_SERECOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERECOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERECOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERESCR
Onevent INIT_AREA Call D_SERESCR(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_SERESCR(zc) From W1SRO1
Return

Subprog D_SERESCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERESCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERESCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD01
Onevent BEFORE_INPUT Call AS_IDECOD01(zc) From W1SRO1
Onevent INIT_AREA Call D_IDECOD01(zc) From W1SRO1
Onevent CONTROL Call C_IDECOD01(zc) From W1SRO1
Return

Subprog D_IDECOD01(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD01,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD01(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_IDECOD01(VALEUR) From SUBSRO
If mkstat=2
 [M]IDECOD01(INDIC) = VALEUR
 Affzo IDECOD01(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From IDECOD01(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From IDECOD01(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_IDECOD01(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_IDESCR01
Onevent INIT_AREA Call D_IDESCR01(zc) From W1SRO1
Onevent BEFORE_INPUT Call AS_IDESCR01(zc) From W1SRO1
Return

Subprog D_IDESCR01(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR01,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR01(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2SRO1
Return

$TIT_COL
Gosub TIT_COL From W2SRO1
Return


