#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management VXABP1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:18:05"
A_USER  = "ADMIN"
A_STAMP = "20180828001805"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask VXABP1 [XAB1]
Gosub HORODAT
Local Inpbox "VXABP1" From GFONCTION At A_STAMP With A_WINDPREV Mask [XAB1] As [SIM_]
Grizo [XAB1]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [XAB1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=64 : Y1(0)=1 : Y2(0)=16
Return

$ON_PRHNUMAFF
Return

$ON_WITMREF
Onevent INIT_AREA Call D_WITMREF(zc) From W1VXABP1
Return

Subprog D_WITMREF(VALEUR)
Variable Char    VALEUR()
If varinit([M]WITMREF,indice)=0
 VALEUR = mess(80,197,1)
Endif
Gosub _AFF
End

$ON_WQTYORITRT
Onevent INIT_AREA Call D_WQTYORITRT(zc) From W1VXABP1
Return

Subprog D_WQTYORITRT(VALEUR)
Variable Char    VALEUR()
If varinit([M]WQTYORITRT,indice)=0
 VALEUR = mess(733,197,1)-"/"-mess(734,197,1)
Endif
Gosub _AFF
End

$ON_QTYORI
Onevent BEFORE_AREA Gosub AV_QTYORI From W1VXABP1
Return

$AV_QTYORI
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYORI(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_QTYTRT
Onevent BEFORE_AREA Gosub AV_QTYTRT From W1VXABP1
Return

$AV_QTYTRT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYTRT(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_WPCU
Onevent INIT_AREA Call D_WPCU(zc) From W1VXABP1
Return

Subprog D_WPCU(VALEUR)
Variable Char    VALEUR()
If varinit([M]WPCU,indice)=0
 VALEUR = mess(397,198,1)
Endif
Gosub _AFF
End

$ON_PCU
Onevent INIT_AREA Call D_PCU(zc) From W1VXABP1
Onevent AFTER_CHANGE Gosub AMM_PCU From W1VXABP1
Onevent BEFORE_INPUT Call AS_PCU(zc) From W1VXABP1
Onevent CONTROL Call C_PCU(zc) From W1VXABP1
Return

Subprog D_PCU(VALEUR)
Variable Char    VALEUR()
If varinit([M]PCU,indice)=0
 ## Action STD
 Call D_PCU(VALEUR) From VXABP
Endif
Gosub _AFF
End

Subprog AS_PCU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PCU(zc) From W1VXABP1
Onkey 144 Titled GBOUTP Call P_PCU(zc) From W1VXABP1
Onkey 146 Titled GBOUTA Call SA_PCU(zc) From W1VXABP1
Gosub _AFF
End

Subprog C_PCU(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_PCU
Call AM_PCU(zc)
If !mkstat & GOBJET
 zoncou = "PCU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCU(VALEUR) From VXABP
If mkstat : GERR = 1 : GZONE = "PCU" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_PCU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELUOMN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELUOMN"
 PARMSK(1) = "1"
 PARMSK(2) = "1"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELUOMN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_PCUSTUCOE
Onevent AFTER_CHANGE Gosub AMM_PCUSTUCOE From W1VXABP1
Return

$AMM_PCUSTUCOE
Call AM_PCUSTUCOE(zc)
If !mkstat & GOBJET
 zoncou = "PCUSTUCOE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCUSTUCOE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PCUSTUCOE(VALEUR) From VXABP
If mkstat : GERR = 1 : GZONE = "PCUSTUCOE" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WQTY
Onevent INIT_AREA Call D_WQTY(zc) From W1VXABP1
Return

Subprog D_WQTY(VALEUR)
Variable Char    VALEUR()
If varinit([M]WQTY,indice)=0
 VALEUR = mess(677,197,1)
Endif
Gosub _AFF
End

$ON_QTYPCU
Onevent BEFORE_AREA Gosub AV_QTYPCU From W1VXABP1
Onevent BEFORE_INPUT Call AS_QTYPCU(zc) From W1VXABP1
Onevent CONTROL Call C_QTYPCU(zc) From W1VXABP1
Return

$AV_QTYPCU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]PCU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCU(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTYPCU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_QTYPCU(VALEUR) From VXABP
If mkstat=2
 [M]QTYPCU(INDIC) = VALEUR
 Affzo QTYPCU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_QTYPCU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYPCU(VALEUR) From VXABP
If mkstat : GERR = 1 : GZONE = "QTYPCU" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WQTYSTU
Onevent INIT_AREA Call D_WQTYSTU(zc) From W1VXABP1
Return

Subprog D_WQTYSTU(VALEUR)
Variable Char    VALEUR()
If varinit([M]WQTYSTU,indice)=0
 VALEUR = mess(401,184,1)
Endif
Gosub _AFF
End

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W1VXABP1
Onevent BEFORE_INPUT Call AS_QTYSTU(zc) From W1VXABP1
Onevent CONTROL Call C_QTYSTU(zc) From W1VXABP1
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTU(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTYSTU(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_QTYSTU(VALEUR) From VXABP
If mkstat=2
 [M]QTYSTU(INDIC) = VALEUR
 Affzo QTYSTU(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_QTYSTU(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_QTYSTU(VALEUR) From VXABP
If mkstat : GERR = 1 : GZONE = "QTYSTU" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WLOC
Onevent INIT_AREA Call D_WLOC(zc) From W1VXABP1
Return

Subprog D_WLOC(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOC,indice)=0
 VALEUR = mess(672,197,1)
Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1VXABP1
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1VXABP1
Return

Subprog IB_LOC(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_LOC From VXABP
Gosub _AFF
End

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6028,GBOUTS) From OBJDIV
Call IB_LOC(VALEUR)
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1VXABP1
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
If !mkstat
 ## Action STKCTREMPS
 Call STKCTREMPS(VALEUR,[M]STOFCY,"12","","") From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOCT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOCT"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = "12"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELLOCT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WLOT
Onevent INIT_AREA Call D_WLOT(zc) From W1VXABP1
Return

Subprog D_WLOT(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOT,indice)=0
 VALEUR = mess(43,197,1)
Endif
Gosub _AFF
End

$ON_LOT
Onevent CONTROL Call C_LOT(zc) From W1VXABP1
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1VXABP1
Return

Subprog IB_LOT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_LOT From VXABP
Gosub _AFF
End

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(7919,GBOUTS) From OBJDIV
Call IB_LOT(VALEUR)
Onkey   2 Titled GBOUTS Call S_LOT(zc) From W1VXABP1
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKCTRLOTS
Call STKCTRLOTS(VALEUR,[M]ITMREF,[M]BESDAT,[M:PREP]BPCORD(nolign1),[M]STOFCY) From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTOT"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = VALEUR
 PARMSK(4) = [M]SLO
 PARMSK(5) = [M]LOC
 PARMSK(6) = [M]STA
 PARMSK(7) = "XAB1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WSLO
Onevent INIT_AREA Call D_WSLO(zc) From W1VXABP1
Return

Subprog D_WSLO(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSLO,indice)=0
 VALEUR = mess(704,197,1)
Endif
Gosub _AFF
End

$ON_SLO
Onevent CONTROL Call C_SLO(zc) From W1VXABP1
Onevent BEFORE_INPUT Call AS_SLO(zc) From W1VXABP1
Return

Subprog IB_SLO(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_SLO From VXABP
Gosub _AFF
End

Subprog AS_SLO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(7919,GBOUT1) From OBJDIV
Call IB_SLO(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_SLO(zc) From W1VXABP1
Gosub _AFF
End

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSLOS
Call STKCTRSLOS(VALEUR,[M]LOT,[M]ITMREF,[M]BESDAT,[M:PREP]BPCORD(nolign1),[M]STOFCY) From STKACT
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_SLO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTOT"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = [M]LOT
 PARMSK(4) = VALEUR
 PARMSK(5) = [M]LOC
 PARMSK(6) = [M]STA
 PARMSK(7) = "XAB1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WSER
Onevent INIT_AREA Call D_WSER(zc) From W1VXABP1
Return

Subprog D_WSER(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSER,indice)=0
 VALEUR = mess(453,197,1)
Endif
Gosub _AFF
End

$ON_SERNUM
Onevent CONTROL Call C_SERNUM(zc) From W1VXABP1
Onevent BEFORE_INPUT Call AS_SERNUM(zc) From W1VXABP1
Return

Subprog IB_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_SERNUM From VXABP
Gosub _AFF
End

Subprog AS_SERNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(7919,GBOUT1) From OBJDIV
Call IB_SERNUM(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_SERNUM(zc) From W1VXABP1
Gosub _AFF
End

Subprog C_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_SERNUM(VALEUR) From VXABP
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_SERNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTOT"
 PARMSK(1) = [M]STOFCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = [M]LOT
 PARMSK(4) = [M]SLO
 PARMSK(5) = [M]LOC
 PARMSK(6) = [M]STA
 PARMSK(7) = "XAB1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WSTA
Onevent INIT_AREA Call D_WSTA(zc) From W1VXABP1
Return

Subprog D_WSTA(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSTA,indice)=0
 VALEUR = mess(702,197,1)
Endif
Gosub _AFF
End

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1VXABP1
Return

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,0,0,0,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_STU
Return

$ON_ALLSTU
Onevent BEFORE_AREA Gosub AV_ALLSTU From W1VXABP1
Return

$AV_ALLSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_LOCTYP
Return

$ON_TCLCOD
Return

$ON_ORITYP
Onevent INIT_AREA Call D_ORITYP(zc) From W1VXABP1
Return

Subprog D_ORITYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ORITYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STOMGTCOD
Onevent INIT_AREA Call D_STOMGTCOD(zc) From W1VXABP1
Return

Subprog D_STOMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


