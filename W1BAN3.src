#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management BAN3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [11/12/2018]
A_HEURE = "19:47:34"
A_USER  = "MB"
A_STAMP = "20181211194734"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask BAN3 [BAN3]
Gosub HORODAT
Local Inpbox "BAN3" From GFONCTION At A_STAMP With A_WINDPREV Mask [BAN3] As [SIM_]
Grizo [BAN3]5
Grizo [BAN3]10
Grizo [BAN3]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BAN3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=37 : Y1(0)=1 : Y2(0)=5
X1(1)=38 : X2(1)=74 : Y1(1)=1 : Y2(1)=5
X1(2)=1 : X2(2)=37 : Y1(2)=6 : Y2(2)=25
Return

$ON_CHKFMT
Onevent BEFORE_INPUT Call AS_CHKFMT(zc) From W1BAN3
Onevent INIT_AREA Call D_CHKFMT(zc) From W1BAN3
Onevent CONTROL Call C_CHKFMT(zc) From W1BAN3
Return

Subprog D_CHKFMT(VALEUR)
Variable Integer VALEUR
If varinit([M]CHKFMT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CHKFMT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2760) From COMBOS
## Action STD
Call AS_CHKFMT(VALEUR) From SUBBAN
If mkstat=2
 [M]CHKFMT(INDIC) = VALEUR
 Affzo CHKFMT(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2760,1))))
Endif
If !mkstat
 Discombo 0 From CHKFMT(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CHKFMT(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CHKFMT(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_NXTSEQ
Onevent CONTROL Call C_NXTSEQ(zc) From W1BAN3
Return

Subprog C_NXTSEQ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_NXTSEQ(VALEUR) From SUBBAN
If mkstat : GERR = 1 : GZONE = "NXTSEQ" : GZNUM = 43723 : Endif
Gosub _AFF
End

$ON_CHK_BTN
Onevent BEFORE_INPUT Call AS_CHK_BTN(zc) From W1BAN3
Onevent INIT_AREA Call D_CHK_BTN(zc) From W1BAN3
Return

Subprog D_CHK_BTN(VALEUR)
Variable Char    VALEUR()
If varinit([M]CHK_BTN,indice)=0
 VALEUR = '53'
Endif
Gosub _AFF
End

Subprog AS_CHK_BTN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUTI) From OBJDIV
## Action STD
Call AS_CHK_BTN(VALEUR) From SUBBAN
If mkstat=2
 [M]CHK_BTN(INDIC) = VALEUR
 Affzo CHK_BTN(INDIC) : mkstat = 2
Endif
Onkey 178 Titled GBOUTI Call CL_CHK_BTN(zc) From W1BAN3
Gosub _AFF
End

Subprog CL_CHK_BTN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC0
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0"
 Local Char    OBJCLE(30)
 OBJCLE = [M]BAN
 Call OBJET_CHAR(OBJCLE,"CHB","") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_STA_BTN
Onevent BEFORE_INPUT Call AS_STA_BTN(zc) From W1BAN3
Onevent INIT_AREA Call D_STA_BTN(zc) From W1BAN3
Return

Subprog D_STA_BTN(VALEUR)
Variable Char    VALEUR()
If varinit([M]STA_BTN,indice)=0
 VALEUR = '21'
Endif
Gosub _AFF
End

Subprog AS_STA_BTN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUTI) From OBJDIV
Onkey 178 Titled GBOUTI Call CL_STA_BTN(zc) From W1BAN3
Gosub _AFF
End

Subprog CL_STA_BTN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action MODCHQNUM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MODCHQNUM"
 PARMSK(1) = [M]BAN
 PARMSK(2) = ""
 PARMSK(3) = "0"
 Call SAISIE_CHAR(VALEUR,PARMSK,"FCHQNUM","MODCHQNUM","XWFCHQNUM") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_MCRPRT
Onevent AFTER_CHANGE Gosub AMM_MCRPRT From W1BAN3
Onevent INIT_AREA Call D_MCRPRT(zc) From W1BAN3
Onevent BEFORE_INPUT Call AS_MCRPRT(zc) From W1BAN3
Return

Subprog D_MCRPRT(VALEUR)
Variable Integer VALEUR
If varinit([M]MCRPRT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MCRPRT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_MCRPRT
Call AM_MCRPRT(zc)
If !mkstat & GOBJET
 zoncou = "MCRPRT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MCRPRT(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_MCRPRT(VALEUR) From SUBBAN
If mkstat : GERR = 1 : GZONE = "MCRPRT" : GZNUM = 3075 : Endif
Gosub _AFF
End

$ON_BANTRA
Onevent CONTROL Call C_BANTRA(zc) From W1BAN3
Return

Subprog C_BANTRA(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BANTRA" : GZNUM = 43726 : Endif
Gosub _AFF
End

$ON_CHKACC
Onevent CONTROL Call C_CHKACC(zc) From W1BAN3
Return

Subprog C_CHKACC(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CHKACC" : GZNUM = 43733 : Endif
Gosub _AFF
End

$ON_POSPAYFIL
Onevent CONTROL Call C_POSPAYFIL(zc) From W1BAN3
Onevent BEFORE_INPUT Call AS_POSPAYFIL(zc) From W1BAN3
Return

Subprog AS_POSPAYFIL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_POSPAYFIL(zc) From W1BAN3
Gosub _AFF
End

Subprog C_POSPAYFIL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_POSPAYFIL(VALEUR) From SUBBAN
If mkstat : GERR = 1 : GZONE = "POSPAYFIL" : GZNUM = 12749 : Endif
Gosub _AFF
End

Subprog S_POSPAYFIL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELLIS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELLIS"
 PARMSK(1) = "POSPAYFIL"
 PARMSK(2) = "SUBBAN"
 Call S_LIS_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$CHG_STY
Return


