#<AdxTL>@(#)0.0.0.0 $Revision$Class Tasks - Operations
# Sage X3 supervisor
## ACLA-CLASSE ## PJMTSKOPE
# 2018-06-20 06:52:59 354

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMCM_PJMTSKOPE"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "PJMTSKOPE_CSTD"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Calculation
$COMPUTE_OPECST_OPECTS2
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "COMPUTE_OPECST_OPECTS2" : [L]ACTION = "COMPUTE_OPECST_OPECTS2" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Copy
$COPY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "COPY" : [L]ACTION = "COPY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Unit
$GET_OPEUOM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_OPEUOM" : [L]ACTION = "GET_OPEUOM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Default
$GET_OPEUOM_DEFAULT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_OPEUOM_DEFAULT" : [L]ACTION = "GET_OPEUOM_DEFAULT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Resource
$GET_OPEUOM_RES1
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_OPEUOM_RES1" : [L]ACTION = "GET_OPEUOM_RES1" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Task
$GET_OPEUOM_TASK
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_OPEUOM_TASK" : [L]ACTION = "GET_OPEUOM_TASK" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Rate
$GET_RESOURCE_RATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_RESOURCE_RATE" : [L]ACTION = "GET_RESOURCE_RATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Rate
$GET_RES_RATE_CSTYP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_RES_RATE_CSTYP" : [L]ACTION = "GET_RES_RATE_CSTYP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Rate
$GET_RES_RATE_DIM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_RES_RATE_DIM" : [L]ACTION = "GET_RES_RATE_DIM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Description
$GET_STDOPENUM_DES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_STDOPENUM_DES" : [L]ACTION = "GET_STDOPENUM_DES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Number
$RAFFT_COUNT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_COUNT" : [L]ACTION = "RAFFT_COUNT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Employee index
$RAFFT_GET_INDEX
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_GET_INDEX" : [L]ACTION = "RAFFT_GET_INDEX" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Technical properties init.
$RAFFT_INIT_TECH_PROP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_INIT_TECH_PROP" : [L]ACTION = "RAFFT_INIT_TECH_PROP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Replace?
$RAFFT_REPEAT_OPEEND
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_REPEAT_OPEEND" : [L]ACTION = "RAFFT_REPEAT_OPEEND" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Replace?
$RAFFT_REPEAT_OPESTR
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_REPEAT_OPESTR" : [L]ACTION = "RAFFT_REPEAT_OPESTR" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sum
$RAFFT_SUM_POACSMQTY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_SUM_POACSMQTY" : [L]ACTION = "RAFFT_SUM_POACSMQTY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sum
$RAFFT_SUM_POARMNQTY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_SUM_POARMNQTY" : [L]ACTION = "RAFFT_SUM_POARMNQTY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sum
$RAFFT_SUM_POASTDQTY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RAFFT_SUM_POASTDQTY" : [L]ACTION = "RAFFT_SUM_POASTDQTY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0PJMTSKOPE
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To maxtab(this.RAFFT)
 If this.RAFFT(AINDCLA)<>null
  [L]ASTATUS = fmet this.RAFFT(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0PJMTSKOPE
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To maxtab(this.RAFFT)
 If this.RAFFT(AINDCLA)<>null
  [L]ASTATUS = fmet this.RAFFT(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0PJMTSKOPE
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To maxtab(this.RAFFT)
 If this.RAFFT(AINDCLA)<>null
  [L]ASTATUS = fmet this.RAFFT(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'RAFFT('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0PJMTSKOPE
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "OPEDESTEX"
  If fmet this.AGETATTRIBUTE("OPEDESTEX","$isLoaded")<>"true"
   Gosub READ_CLB_OPEDESTEX
  Else
   [L]_CLB = this.OPEDESTEX
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("OPEDESTEX","$contentType","text/plain")
   [L]_CNT = "text/plain"
  Endif
 When "OPECOMTEX"
  If fmet this.AGETATTRIBUTE("OPECOMTEX","$isLoaded")<>"true"
   Gosub READ_CLB_OPECOMTEX
  Else
   [L]_CLB = this.OPECOMTEX
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("OPECOMTEX","$contentType","text/plain")
   [L]_CNT = "text/plain"
  Endif
Endcase
Return

$READ_CLB_OPEDESTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WPJCB]CODBLB = [L]_KEYVALTAB(1)
[F:WPJCB]IDENT1 = [L]_KEYVALTAB(2)
[F:WPJCB]IDENT2 = [L]_KEYVALTAB(3)
[F:WPJCB]IDENT3 = [L]_KEYVALTAB(4)
[F:WPJCB]IDENT4 = [L]_KEYVALTAB(5)
Read [WPJCB] =
If !fstat
 [L]_CLB = [F:WPJCB]CLOB
Endif
LogicClose File [WPJCB]
Return

$READ_EXI_OPEDESTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WPJCB]CODBLB = "PJMTSKOPE"
[F:WPJCB]IDENT1 = "OPEDESTEX"
[F:WPJCB]IDENT2 = this.KEYCONCAT
[F:WPJCB]IDENT3 = AVOID.ACHAR
[F:WPJCB]IDENT4 = AVOID.ACHAR
Look [WPJCB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WPJCB]
Return

$READ_CLB_OPECOMTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WPJCB]CODBLB = [L]_KEYVALTAB(1)
[F:WPJCB]IDENT1 = [L]_KEYVALTAB(2)
[F:WPJCB]IDENT2 = [L]_KEYVALTAB(3)
[F:WPJCB]IDENT3 = [L]_KEYVALTAB(4)
[F:WPJCB]IDENT4 = [L]_KEYVALTAB(5)
Read [WPJCB] =
If !fstat
 [L]_CLB = [F:WPJCB]CLOB
Endif
LogicClose File [WPJCB]
Return

$READ_EXI_OPECOMTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WPJCB]CODBLB = "PJMTSKOPE"
[F:WPJCB]IDENT1 = "OPECOMTEX"
[F:WPJCB]IDENT2 = this.KEYCONCAT
[F:WPJCB]IDENT3 = AVOID.ACHAR
[F:WPJCB]IDENT4 = AVOID.ACHAR
Look [WPJCB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WPJCB]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "RAFFT"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"RAFFT",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "RAFFT"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"RAFFT","C_PJMOPEAFF",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "RAFFT"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "RAFFT"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "OPPNUM"
this.AKEYS(2) = "TASCOD"
this.AKEYS(3) = "OPENUM"
this.AKEYS(4) = "OPESPLNUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



