#<AdxTL>@(#)%I%
# Supervisor
# Inquiry CPP

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [31/10/2018]
A_HEURE = "11:54:45"
A_USER  = "MAJID"
A_STAMP = "20181031115445"
Return

$DEFAUT
Default File [BPS]
Return

$OUVFIC
Local File BPSUPPLIER [BPS]
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(54908,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSCPPSTD"
PROGSPE    = "CNSCPPSPE"
CBOITE     = "DCNSCPP"
BOITE      = "FCNSCPP"
NOMMSK(0)  = "CONSCPP1"
ABMSK(0)   = "CPP1"
NOMMSK(1)  = "CONSCPP2"
ABMSK(1)   = "CPP2"
CMEMO      = "cpp"
CNOMMSK    = "CRITCPP"
CABMSK     = "CCPP"
NOMFIC     = "BPSUPPLIER"
ABFIC      = "BPS"
CODMSKDEF  = "STD"
MAGNETO    = 2
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = "BPS0"
NBCMP = 1
CLECMP(0) = "BPSNUM"
CLEMSK(0) = "BPSNUMDEB"
Return

$OUVRE
If clalev([F:BPS])=0 : Local File BPSUPPLIER   [BPS] : Endif
If clalev([F:CPY])=0 : Local File COMPANY      [CPY] : Endif
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:POH])=0 : Local File PORDER       [POH] : Endif
If clalev([F:POQ])=0 : Local File PORDERQ      [POQ] : Endif
If clalev([F:POP])=0 : Local File PORDERP      [POP] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CCPP]
 When  0 : Local Mask =NOMMSK(0) [CPP1]
 When  1 : Local Mask =NOMMSK(1) [CPP2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CCPP]
 When  0 : Grizo [CPP1]
 When  1 : Grizo [CPP2]
Endcase
Return

$GRISE_CLE
Case MA
 When -1 : If dim([M:CCPP]BPSNUMDEB)>0 : Grizo [CCPP]BPSNUMDEB : Endif
 When  0 : If dim([M:CPP1]BPSNUMDEB)>0 : Grizo [CPP1]BPSNUMDEB : Endif
Endcase
Return

$GRISE_CRIT
If dim([M:CCPP]CPY)>0
 Grizo [CCPP]CPY
Endif
If dim([M:CCPP]POHFCY)>0
 Grizo [CCPP]POHFCY
Endif
If dim([M:CCPP]BPSNUMDEB)>0
 Grizo [CCPP]BPSNUMDEB
Endif
If dim([M:CCPP]BPSNUMFIN)>0
 Grizo [CCPP]BPSNUMFIN
Endif
If dim([M:CCPP]POHNUMDEB)>0
 Grizo [CCPP]POHNUMDEB
Endif
If dim([M:CCPP]POHNUMFIN)>0
 Grizo [CCPP]POHNUMFIN
Endif
If dim([M:CCPP]ITMREF)>0
 Grizo [CCPP]ITMREF
Endif
If dim([M:CCPP]PJTDEB)>0
 Grizo [CCPP]PJTDEB
Endif
If dim([M:CCPP]PJTFIN)>0
 Grizo [CCPP]PJTFIN
Endif
If dim([M:CCPP]ORDDATDEB)>0
 Grizo [CCPP]ORDDATDEB
Endif
If dim([M:CCPP]ORDDATFIN)>0
 Grizo [CCPP]ORDDATFIN
Endif
If dim([M:CCPP]CLEFLGO)>0
 Grizo [CCPP]CLEFLGO
Endif
If dim([M:CCPP]CLEFLGN)>0
 Grizo [CCPP]CLEFLGN
Endif
If dim([M:CCPP]APPFLGO)>0
 Grizo [CCPP]APPFLGO
Endif
If dim([M:CCPP]APPFLGN)>0
 Grizo [CCPP]APPFLGN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CCPP])>0 : Close Local Mask [CCPP] : Endif
 When  0 : If clalev([M:CPP1])>0 : Close Local Mask [CPP1] : Endif
 When  1 : If clalev([M:CPP2])>0 : Close Local Mask [CPP2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CCPP]
 When  0 : Default Mask [CPP1]
 When  1 : Default Mask [CPP2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CCPP]
 When  0 : Raz [M:CPP1]
 When  1 : Raz [M:CPP2]
Endcase
Return

$CRITENT
If dim([M:CCPP]CPY)>0 & dim([M:CPP1]CPY)>0
 [M:CCPP]CPY = [M:CPP1]CPY
Endif
If dim([M:CCPP]POHFCY)>0 & dim([M:CPP1]POHFCY)>0
 [M:CCPP]POHFCY = [M:CPP1]POHFCY
Endif
If dim([M:CCPP]BPSNUMDEB)>0 & dim([M:CPP1]BPSNUMDEB)>0
 [M:CCPP]BPSNUMDEB = [M:CPP1]BPSNUMDEB
Endif
If dim([M:CCPP]BPSNUMFIN)>0 & dim([M:CPP1]BPSNUMFIN)>0
 [M:CCPP]BPSNUMFIN = [M:CPP1]BPSNUMFIN
Endif
If dim([M:CCPP]POHNUMDEB)>0 & dim([M:CPP1]POHNUMDEB)>0
 [M:CCPP]POHNUMDEB = [M:CPP1]POHNUMDEB
Endif
If dim([M:CCPP]POHNUMFIN)>0 & dim([M:CPP1]POHNUMFIN)>0
 [M:CCPP]POHNUMFIN = [M:CPP1]POHNUMFIN
Endif
If dim([M:CCPP]ITMREF)>0 & dim([M:CPP1]ITMREF)>0
 [M:CCPP]ITMREF = [M:CPP1]ITMREF
Endif
If dim([M:CCPP]PJTDEB)>0 & dim([M:CPP1]PJTDEB)>0
 [M:CCPP]PJTDEB = [M:CPP1]PJTDEB
Endif
If dim([M:CCPP]PJTFIN)>0 & dim([M:CPP1]PJTFIN)>0
 [M:CCPP]PJTFIN = [M:CPP1]PJTFIN
Endif
If dim([M:CCPP]ORDDATDEB)>0 & dim([M:CPP1]ORDDATDEB)>0
 [M:CCPP]ORDDATDEB = [M:CPP1]ORDDATDEB
Endif
If dim([M:CCPP]ORDDATFIN)>0 & dim([M:CPP1]ORDDATFIN)>0
 [M:CCPP]ORDDATFIN = [M:CPP1]ORDDATFIN
Endif
If dim([M:CCPP]CLEFLGO)>0 & dim([M:CPP1]CLEFLGO)>0
 [M:CCPP]CLEFLGO = [M:CPP1]CLEFLGO
Endif
If dim([M:CCPP]CLEFLGN)>0 & dim([M:CPP1]CLEFLGN)>0
 [M:CCPP]CLEFLGN = [M:CPP1]CLEFLGN
Endif
If dim([M:CCPP]APPFLGO)>0 & dim([M:CPP1]APPFLGO)>0
 [M:CCPP]APPFLGO = [M:CPP1]APPFLGO
Endif
If dim([M:CCPP]APPFLGN)>0 & dim([M:CPP1]APPFLGN)>0
 [M:CCPP]APPFLGN = [M:CPP1]APPFLGN
Endif
Return

$ENTCRIT
If dim([M:CCPP]CPY)>0 & dim([M:CPP1]CPY)>0
[M:CPP1]CPY = [M:CCPP]CPY
Endif
If dim([M:CCPP]POHFCY)>0 & dim([M:CPP1]POHFCY)>0
[M:CPP1]POHFCY = [M:CCPP]POHFCY
Endif
If dim([M:CCPP]BPSNUMDEB)>0 & dim([M:CPP1]BPSNUMDEB)>0
[M:CPP1]BPSNUMDEB = [M:CCPP]BPSNUMDEB
Endif
If dim([M:CCPP]BPSNUMFIN)>0 & dim([M:CPP1]BPSNUMFIN)>0
[M:CPP1]BPSNUMFIN = [M:CCPP]BPSNUMFIN
Endif
If dim([M:CCPP]POHNUMDEB)>0 & dim([M:CPP1]POHNUMDEB)>0
[M:CPP1]POHNUMDEB = [M:CCPP]POHNUMDEB
Endif
If dim([M:CCPP]POHNUMFIN)>0 & dim([M:CPP1]POHNUMFIN)>0
[M:CPP1]POHNUMFIN = [M:CCPP]POHNUMFIN
Endif
If dim([M:CCPP]ITMREF)>0 & dim([M:CPP1]ITMREF)>0
[M:CPP1]ITMREF = [M:CCPP]ITMREF
Endif
If dim([M:CCPP]PJTDEB)>0 & dim([M:CPP1]PJTDEB)>0
[M:CPP1]PJTDEB = [M:CCPP]PJTDEB
Endif
If dim([M:CCPP]PJTFIN)>0 & dim([M:CPP1]PJTFIN)>0
[M:CPP1]PJTFIN = [M:CCPP]PJTFIN
Endif
If dim([M:CCPP]ORDDATDEB)>0 & dim([M:CPP1]ORDDATDEB)>0
[M:CPP1]ORDDATDEB = [M:CCPP]ORDDATDEB
Endif
If dim([M:CCPP]ORDDATFIN)>0 & dim([M:CPP1]ORDDATFIN)>0
[M:CPP1]ORDDATFIN = [M:CCPP]ORDDATFIN
Endif
If dim([M:CCPP]CLEFLGO)>0 & dim([M:CPP1]CLEFLGO)>0
[M:CPP1]CLEFLGO = [M:CCPP]CLEFLGO
Endif
If dim([M:CCPP]CLEFLGN)>0 & dim([M:CPP1]CLEFLGN)>0
[M:CPP1]CLEFLGN = [M:CCPP]CLEFLGN
Endif
If dim([M:CCPP]APPFLGO)>0 & dim([M:CPP1]APPFLGO)>0
[M:CPP1]APPFLGO = [M:CCPP]APPFLGO
Endif
If dim([M:CCPP]APPFLGN)>0 & dim([M:CPP1]APPFLGN)>0
[M:CPP1]APPFLGN = [M:CCPP]APPFLGN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "TRI" : CRITAFF2(1) = ""
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSCPP2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "CPP"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans(WCLE1,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(WOBJET,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(WCLE2,"~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "CPP"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M]SOHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("SOH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "CPP"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("POH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:CPP2]POHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:CPP2]POPLIN(nolign-1)),"~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "WCLE1" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "WOBJET" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "WCLE2" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSCPP2"
 When "B2"
  Onerrgo RIEN
  Assign "[M]SOHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSCPP2"
 When "B3"
  Onerrgo RIEN
  Assign "[M:CPP2]POHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:CPP2]POPLIN(nolign-1)" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Onerrgo
  Call B3_NBLIG From ="W1CONSCPP2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


