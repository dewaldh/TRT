#<AdxTL>@(#)0.0.0.0 $Revision$Class Time summary head
# Supervisor
## CRUD-CLASSE ## PJMTIMEMPH
# 2018-08-27 12:40:32 934


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMTIMEMPH,ASTATUS)
Variable Instance PJMTIMEMPH Using C_PJMTIMEMPH
Variable Integer ASTATUS

If PJMTIMEMPH = null : End : Endif

Gosub _AVARIABLES From WMC00PJMTIMEMPH

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMTIMEMPH

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMTIMEMPH,ASTATUS)
Variable Instance PJMTIMEMPH Using C_PJMTIMEMPH
Variable Integer ASTATUS

If PJMTIMEMPH = null : End : Endif

Gosub AVARIABLES From WMC00PJMTIMEMPH
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMTIMEMPH
Else
 Gosub ADELETE_PJMTIMEMPH
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMTIMEMPH,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMTIMEMPH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMTIMEMPH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTIMEMPH.TIMENT) : # PJMTIMEMP -- 2
 If PJMTIMEMPH.TIMENT(A_N2) <> null
& and PJMTIMEMPH.TIMENT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTIMEMPH.TIMENT(A_N2).ASTALIN<>[V]CST_ANEW
   PJMTIMEMPH.TIMENT(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(PJMTIMEMPH.TIMENT) : # PJMTIMEMP -- 2
 If PJMTIMEMPH.TIMENT(A_N2) <> null
& and PJMTIMEMPH.TIMENT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMTIMEMPH
Trbegin [F:PTEH]
 Gosub ADELETE_PJMTIMEMPH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMTIMEMPH
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(PJMTIMEMPH.TIMENT)
 If PJMTIMEMPH.TIMENT(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMTIMEMPH,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00PJMTIMEMPH._MAJSQL_PJMTIMEMPH(PJMTIMEMPH))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMTIMEMPH.snapshotEnabled=1
 [L]A_RETIK = PJMTIMEMPH.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMTIMEMPH.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



