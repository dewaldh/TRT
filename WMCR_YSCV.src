#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales contract - Covenants
# Supervisor
## CRUD-CLASSE ## YSCV
# 2019-04-03 06:17:09 566


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSALCONV [YSCV_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YSCV") From ASYRCOM : Endif
Local Instance YSCV Using C_YSCV

If !SILENCE : Call TRACE("3 --> New Instance C_YSCV") From ASYRCOM : Endif
YSCV = NewInstance C_YSCV AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YSCV_]YSCV0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSCV") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSCV.AREAD([YSCV_]YSLCID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSCV.YSLCID ="-num$(YSCV.YSLCID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSCV.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSCV.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YSCV_]
FreeGroup YSCV
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSCV,ACLE,ASTATUS,_ETAG)
Variable Instance YSCV Using C_YSCV
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YSLCID(25)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSLCID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YSALCONV [YSCV]
Default File [F:YSCV]
Read [F:YSCV]YSCV0 = [L]_YSLCID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YSCV]UPDTICK)>0
 [L]_ETAG = num$([F:YSCV]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSCV,ACLE,ASTATUS)
Variable Instance YSCV Using C_YSCV
Value Char ACLE
Variable Integer ASTATUS
Local Char _YSLCID(25)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSLCID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSCV.AREAD([L]_YSLCID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSCV,_YSLCID,ASTATUS)
Variable Instance YSCV Using C_YSCV
Value Char _YSLCID
Variable Integer ASTATUS

If YSCV = null : End : Endif

Gosub AVARIABLES From WMC00YSCV
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSCV.APARENT=null
 [L]A_I = YSCV.freeSnapshot
 YSCV.snapshotEnabled = 0
 YSCV.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YSCV.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YSCV._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YSCV.APARENT=null
 YSCV.snapshotEnabled = 1
 YSCV.setAccessorEnabled = 1
Endif
LogicClose File [YSCV]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YSCV._ACTION_PARAM("AREAD_BEFORE",[L]_YSLCID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YSCV]
Read [F:YSCV]YSCV0 = [L]_YSLCID
If fstat
[L]A_ERROR = [L]_YSLCID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSCV,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YSCV]AUUID)>0 & [F:YSCV]AUUID=NullUuid
 [F:YSCV]AUUID = getUuid
Endif
SetInstance YSCV With [F:YSCV]
YSCV.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YSCV.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



