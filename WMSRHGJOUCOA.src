#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHGJOUCOA GJOUCOA
# 2018-08-27 12:33:09 450

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","GJOUCOA","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File GJOUCOA [JCO]
Local File GJOUCOA [JCO_]
Local Char KEY_JCO(120)(1..3)
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [JCO]
LogicClose File [JCO_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [JCO] With
& [JCO_]JCO0=[JCO]COA;[JCO]JOU;[JCO]LEG
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [JCO] With
& [JCO_]JCO0=[JCO]COA;[JCO]JOU;[JCO]LEG
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
#Create a new instance
INS = NewInstance C_GJOUCOA(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

CJ1=1
For CI1 = 0 To dim([F:JCO]FBDACC)-1
#Create a new instance
INS.FORACC(CJ1) = NewInstance C_GJOUCOA_FORACC(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.FORACC(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
CJ1=1
For CI1 = 0 To dim([F:JCO]FRQACC)-1
#Create a new instance
INS.FQEACC(CJ1) = NewInstance C_GJOUCOA_FQEACC(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.FQEACC(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE

SetInstance INS With [F:JCO]
FINS = 1
Local Integer FBDACC_MAX:FBDACC_MAX0
CJ1=1
For CI1 = 0 To dim([F:JCO]FBDACC)-1
 Break ((CI1 > [F:JCO]FBDNBR) & (CJ1 >= 0))
 FBDACC_MAX+=1
 INS.FORACC(CJ1).FBDACC=[F:JCO]FBDACC(CI1)
 CJ1+=1
Next CI1
Local Integer FRQACC_MAX:FRQACC_MAX0
CJ1=1
For CI1 = 0 To dim([F:JCO]FRQACC)-1
 Break ((CI1 > [F:JCO]FRQNBR) & (CJ1 >= 0))
 FRQACC_MAX+=1
 INS.FQEACC(CJ1).FRQACC=[F:JCO]FRQACC(CI1)
 CJ1+=1
Next CI1
[L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
Gosub ASEARCH_TO_JSON
Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"JOU":'             +'"'+escJson(INS.JOU)+'"'
Append ASND.DATA ,',"COA":'            +'"'+escJson(INS.COA)+'"'
Append ASND.DATA ,',"ACC":'            +'"'+escJson(INS.ACC)+'"'
Append ASND.DATA ,',"LEG":'            +'"'+escJson(INS.LEG)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"FORACC":['
For CI1=1 To FBDACC_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"FBDACC":'          +'"'+escJson(INS.FORACC(CJ1).FBDACC)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"FQEACC":['
For CI1=1 To FRQACC_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"FRQACC":'          +'"'+escJson(INS.FQEACC(CJ1).FRQACC)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:JCO]COA"
ASTDKEY += ";[F:JCO]JOU"
ASTDKEY += ";[F:JCO]LEG"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="GJOUCOA" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"GJOUCOA")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"GJOUCOA")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,29382)+'"'
Append WCLOB,',"$url":"{$baseUrl}/GJOUCOA'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,29382)+' {$key}"'
Append WCLOB,',"$key":"{COA}~{JOU}~{LEG}"'
Append WCLOB,',"$url":"{$baseUrl}/GJOUCOA('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'GJOUCOA.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"JOU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4314)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"COA":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,29357)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"ACC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4316)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"LEG":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26213)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"FORACC":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":10'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"FBDACC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4317)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"FQEACC":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":10'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"FRQACC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/GJOUCOA('+"'"+'{$key}'+"'"+')?representation=GJOUCOA.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHGJOUCOAB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHGJOUCOAB
End RES


