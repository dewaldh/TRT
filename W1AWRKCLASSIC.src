#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management AWRKCLASSIC 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:51:05"
A_USER  = "ADMIN"
A_STAMP = "20180827235105"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask AWRKCLASSIC [AWRKC]
Gosub HORODAT
Local Inpbox "AWRKCLASSIC" From GFONCTION At A_STAMP With A_WINDPREV Mask [AWRKC] As [SIM_]
Grizo [AWRKC]5
Grizo [AWRKC]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [AWRKC]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=5
X1(1)=1 : X2(1)=74 : Y1(1)=6 : Y2(1)=10
Return

$ON_ATYPEVT
Onevent BEFORE_INPUT Call AS_ATYPEVT(zc) From W1AWRKCLASSIC
Onevent INIT_AREA Call D_ATYPEVT(zc) From W1AWRKCLASSIC
Onevent CONTROL Call C_ATYPEVT(zc) From W1AWRKCLASSIC
Return

Subprog D_ATYPEVT(VALEUR)
Variable Integer VALEUR
If varinit([M]ATYPEVT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ATYPEVT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(988) From COMBOS
## Action STD
Call AS_ATYPEVT(VALEUR) From SUBAWRKC
If mkstat=2
 [M]ATYPEVT(INDIC) = VALEUR
 Affzo ATYPEVT(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,988,1))))
Endif
If !mkstat
 Discombo 0 From ATYPEVT(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ATYPEVT(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ATYPEVT(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ACODEVT
Onevent BEFORE_INPUT Call AS_ACODEVT(zc) From W1AWRKCLASSIC
Return

Subprog AS_ACODEVT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ACODEVT(zc) From W1AWRKCLASSIC
Gosub _AFF
End

Subprog S_ACODEVT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ASELEVT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ASELEVT"
 PARMSK(1) = num$([M]ATYPEVT)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELEVT","SUBAWA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_PLUS
Onevent AFTER_CHANGE Gosub AMM_PLUS From W1AWRKCLASSIC
Onevent INIT_AREA Call D_PLUS(zc) From W1AWRKCLASSIC
Onevent BEFORE_INPUT Call AS_PLUS(zc) From W1AWRKCLASSIC
Return

Subprog D_PLUS(VALEUR)
Variable Integer VALEUR
If varinit([M]PLUS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PLUS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_PLUS
Call AM_PLUS(zc)
If !mkstat & GOBJET
 zoncou = "PLUS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLUS(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_PLUS(VALEUR) From SUBAWRKC
If mkstat : GERR = 1 : GZONE = "PLUS" : GZNUM = 39040 : Endif
Gosub _AFF
End

$ON_PCODE
Onevent BEFORE_INPUT Call AS_PCODE(zc) From W1AWRKCLASSIC
Return

Subprog AS_PCODE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PCODE(VALEUR) From SUBAWRKC
If mkstat=2
 [M]PCODE(INDIC) = VALEUR
 Affzo PCODE(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_PGRPDEB
Onevent CONTROL Call C_PGRPDEB(zc) From W1AWRKCLASSIC
Onevent BEFORE_INPUT Call AS_PGRPDEB(zc) From W1AWRKCLASSIC
Return

Subprog AS_PGRPDEB(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PGRPDEB(VALEUR) From SUBAWRKC
If mkstat=2
 [M]PGRPDEB(INDIC) = VALEUR
 Affzo PGRPDEB(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_PGRPDEB(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "PGRPDEB" : GZNUM = 616 : Endif
Endif
Gosub _AFF
End

$ON_PSIMUL
Onevent BEFORE_INPUT Call AS_PSIMUL(zc) From W1AWRKCLASSIC
Onevent INIT_AREA Call D_PSIMUL(zc) From W1AWRKCLASSIC
Return

Subprog D_PSIMUL(VALEUR)
Variable Integer VALEUR
If varinit([M]PSIMUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PSIMUL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PSIMUL(VALEUR) From SUBAWRKC
If mkstat=2
 [M]PSIMUL(INDIC) = VALEUR
 Affzo PSIMUL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PDIFFERE
Onevent BEFORE_INPUT Call AS_PDIFFERE(zc) From W1AWRKCLASSIC
Onevent INIT_AREA Call D_PDIFFERE(zc) From W1AWRKCLASSIC
Return

Subprog D_PDIFFERE(VALEUR)
Variable Integer VALEUR
If varinit([M]PDIFFERE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PDIFFERE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PDIFFERE(VALEUR) From SUBAWRKC
If mkstat=2
 [M]PDIFFERE(INDIC) = VALEUR
 Affzo PDIFFERE(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PTYPDEC
Onevent BEFORE_INPUT Call AS_PTYPDEC(zc) From W1AWRKCLASSIC
Onevent INIT_AREA Call D_PTYPDEC(zc) From W1AWRKCLASSIC
Return

Subprog D_PTYPDEC(VALEUR)
Variable Integer VALEUR
If varinit([M]PTYPDEC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PTYPDEC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PTYPDEC(VALEUR) From SUBAWRKC
If mkstat=2
 [M]PTYPDEC(INDIC) = VALEUR
 Affzo PTYPDEC(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


