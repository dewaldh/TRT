#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule BPSUPPLIER

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".BPSUPPLIER" : If clalev([F:BPS])=0 : Local File =OUVTAB [BPS] : Endif
OUVTAB = GDOSSIER+".BPARTNER" : If clalev([F:BPR])=0 : Local File =OUVTAB [BPR] : Endif
OUVTAB = GDOSSIER+".BPADDRESS" : If clalev([F:BPA])=0 : Local File =OUVTAB [BPA] : Endif
OUVTAB = GDOSSIER+".CONTACTCRM" : If clalev([F:AIN])=0 : Local File =OUVTAB [AIN] : Endif
OUVTAB = "Link [BPS]"
Link [BPS] With
& [BPR]BPR0 = [F:BPS]BPSNUM,
& [BPA]BPA0 = 1;[F:BPR]BPRNUM;[F:BPR]BPAADD,
& [AIN]AIN0 = [F:BPS]CNTNAM
& As [LNK_]
& Order By Key CLE = [BPS]BPSNUM
FILTRE = ""
Return

$FERME
If clalev([F:BPS]) : Close local File [BPS] : Endif
If clalev([F:BPR]) : Close local File [BPR] : Endif
If clalev([F:BPA]) : Close local File [BPA] : Endif
If clalev([F:AIN]) : Close local File [AIN] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..1)
Local Integer DTYP(1..1)
Local Integer NBDCLE
NBDCLE = 1
DCLE(1) = "BPSNUM"
DTYP(1) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]BPSNUM)>0
 [F:AAA_]BPSNUM = [F:BPS]BPSNUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]BPSNUM=[F:BPS]BPSNUM"

End

$MAJFLD
### BSGCOD
[L]FLD="BSGCOD"
[L]FORMULE='[F:BPS]BSGCOD'
If dim([F:AAA_]BSGCOD)>0
 [F:AAA_]BSGCOD = [F:BPS]BSGCOD
Endif

### BPSNUM
[L]FLD="BPSNUM"
[L]FORMULE='[F:BPS]BPSNUM'
If dim([F:AAA_]BPSNUM)>0
 [F:AAA_]BPSNUM = [F:BPS]BPSNUM
Endif

### BPSNAM
[L]FLD="BPSNAM"
[L]FORMULE='[F:BPS]BPSNAM'
If dim([F:AAA_]BPSNAM)>0
 [F:AAA_]BPSNAM = [F:BPS]BPSNAM
Endif

### CNTNAM
[L]FLD="CNTNAM"
[L]FORMULE='[F:AIN]CNTLNA-[F:AIN]CNTFNA'
If dim([F:AAA_]CNTNAM)>0
 [F:AAA_]CNTNAM = [F:AIN]CNTLNA-[F:AIN]CNTFNA
Endif

### CUR
[L]FLD="CUR"
[L]FORMULE='[F:BPS]CUR'
If dim([F:AAA_]CUR)>0
 [F:AAA_]CUR = [F:BPS]CUR
Endif

### NAF
[L]FLD="NAF"
[L]FORMULE='[F:BPR]NAF'
If dim([F:AAA_]NAF)>0
 [F:AAA_]NAF = [F:BPR]NAF
Endif

### CRN
[L]FLD="CRN"
[L]FORMULE='[F:BPR]CRN'
If dim([F:AAA_]CRN)>0
 [F:AAA_]CRN = [F:BPR]CRN
Endif

### POSCOD
[L]FLD="POSCOD"
[L]FORMULE='vireblc([F:BPA]POSCOD,1)'
If dim([F:AAA_]POSCOD)>0
 [F:AAA_]POSCOD = vireblc([F:BPA]POSCOD,1)
Endif

### CTY
[L]FLD="CTY"
[L]FORMULE='[F:BPA]CTY'
If dim([F:AAA_]CTY)>0
 [F:AAA_]CTY = [F:BPA]CTY
Endif

### CRY
[L]FLD="CRY"
[L]FORMULE='[F:BPR]CRY'
If dim([F:AAA_]CRY)>0
 [F:AAA_]CRY = [F:BPR]CRY
Endif

### TSSCOD1
[L]FLD="TSSCOD1"
[L]FORMULE='[F:BPS]TSSCOD(0)'
If dim([F:AAA_]TSSCOD1)>0
 [F:AAA_]TSSCOD1 = [F:BPS]TSSCOD(0)
Endif

### TSSCOD2
[L]FLD="TSSCOD2"
[L]FORMULE='[F:BPS]TSSCOD(1)'
If dim([F:AAA_]TSSCOD2)>0
 [F:AAA_]TSSCOD2 = [F:BPS]TSSCOD(1)
Endif

### TSCCOD3
[L]FLD="TSCCOD3"
[L]FORMULE='[F:BPS]TSSCOD(2)'
If dim([F:AAA_]TSCCOD3)>0
 [F:AAA_]TSCCOD3 = [F:BPS]TSSCOD(2)
Endif

### TSCCOD4
[L]FLD="TSCCOD4"
[L]FORMULE='[F:BPS]TSSCOD(3)'
If dim([F:AAA_]TSCCOD4)>0
 [F:AAA_]TSCCOD4 = [F:BPS]TSSCOD(3)
Endif

### TSCCOD5
[L]FLD="TSCCOD5"
[L]FORMULE='[F:BPS]TSSCOD(4)'
If dim([F:AAA_]TSCCOD5)>0
 [F:AAA_]TSCCOD5 = [F:BPS]TSSCOD(4)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:BPS]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:BPS]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTEBPR([F:AAA_]PTE,"")'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTEBPR([F:AAA_]PTE,"")
Endif

### DADFLG
[L]FLD="DADFLG"
[L]FORMULE='mess([F:BPS]DADFLG,1,1)'
If dim([F:AAA_]DADFLG)>0
 [F:AAA_]DADFLG = mess([F:BPS]DADFLG,1,1)
Endif

### PRVNUM
[L]FLD="PRVNUM"
[L]FORMULE='[F:BPS]PRVNUM'
If dim([F:AAA_]PRVNUM)>0
 [F:AAA_]PRVNUM = [F:BPS]PRVNUM
Endif


Return

