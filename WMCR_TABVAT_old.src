#<AdxTL>@(#)0.0.0.0 $Revision$Class Tax code table
# Sage X3 supervisor
## CRUD-CLASSE ## TABVAT
# 2018-06-20 07:05:57 954


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABVAT [TVT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABVAT") From ASYRCOM : Endif
Local Instance TABVAT Using C_TABVAT

If !SILENCE : Call TRACE("3 --> New Instance C_TABVAT") From ASYRCOM : Endif
TABVAT = NewInstance C_TABVAT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TVT_]TVT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABVAT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABVAT.AREAD([TVT_]VAT,[TVT_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABVAT.VAT ="-num$(TABVAT.VAT)) From ASYRCOM
 Call TRACE("TABVAT.LEG ="-num$(TABVAT.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABVAT.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABVAT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TVT_]
FreeGroup TABVAT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABVAT,ACLE,ASTATUS,_ETAG)
Variable Instance TABVAT Using C_TABVAT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VAT(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VAT = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABVAT [TVT]
Default File [F:TVT]
Read [F:TVT]TVT0 = [L]_VAT;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TVT]UPDTICK)>0
 [L]_ETAG = num$([F:TVT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABVAT,ACLE,ASTATUS)
Variable Instance TABVAT Using C_TABVAT
Value Char ACLE
Variable Integer ASTATUS
Local Char _VAT(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VAT = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABVAT.AREAD([L]_VAT,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABVAT,_VAT,_LEG,ASTATUS)
Variable Instance TABVAT Using C_TABVAT
Value Char _VAT
Value Char _LEG
Variable Integer ASTATUS

If TABVAT = null : End : Endif

Gosub AVARIABLES From WMC00TABVAT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABVAT.APARENT=null
 [L]A_I = TABVAT.freeSnapshot
 TABVAT.snapshotEnabled = 0
 TABVAT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABVAT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABVAT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABVAT.APARENT=null
 TABVAT.snapshotEnabled = 1
 TABVAT.setAccessorEnabled = 1
Endif
LogicClose File [TVT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABVAT._ACTION_PARAM("AREAD_BEFORE",[L]_VAT,[L]_LEG))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TVT]
Read [F:TVT]TVT0 = [L]_VAT;[L]_LEG
If fstat
[L]A_ERROR = [L]_VAT+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABVAT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TVT]AUUID)>0 & [F:TVT]AUUID=NullUuid
 [F:TVT]AUUID = getUuid
Endif
SetInstance TABVAT With [F:TVT]
TABVAT.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 20
 [L]A_NEWCOL += 1
 TABVAT.C_DIE(A_NEWCOL) = NewInstance  C_TABVAT_C_DIE(TABVAT.ACTX,NullUuid,[L]A_I,TABVAT,"C_DIE") AllocGroup TABVAT
 TABVAT.C_DIE(A_NEWCOL).DIE = [F:TVT]DIE([L]A_I-1)
 TABVAT.C_DIE(A_NEWCOL).CCE = [F:TVT]CCE([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet TABVAT.C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet TABVAT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABVAT" & ZONE="DESAXX" & IDENT1=TABVAT.VAT & IDENT2=TABVAT.LEG
 Call ASETTEXTRA(TABVAT.AXX,TABVAT.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABVAT.AXX(maxtab(TABVAT.AXX)).FLG = 0
Next AXX
If !len(fmet TABVAT.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TABVAT.AXX,TABVAT.AllocGrp(),"DESAXX",
& fmet TABVAT.AGETTEXTRALAN("DESAXX",TABVAT.ACTX.AFOLD.ALANGDEF),
& TABVAT.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABVAT" & ZONE="SHOAXX" & IDENT1=TABVAT.VAT & IDENT2=TABVAT.LEG
 Call ASETTEXTRA(TABVAT.AXX,TABVAT.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABVAT.AXX(maxtab(TABVAT.AXX)).FLG = 0
Next AXX
If !len(fmet TABVAT.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(TABVAT.AXX,TABVAT.AllocGrp(),"SHOAXX",
& fmet TABVAT.AGETTEXTRALAN("SHOAXX",TABVAT.ACTX.AFOLD.ALANGDEF),
& TABVAT.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABVAT" & ZONE="TEXAXX" & IDENT1=TABVAT.VAT & IDENT2=TABVAT.LEG
 Call ASETTEXTRA(TABVAT.AXX,TABVAT.AllocGrp(),"TEXAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABVAT.AXX(maxtab(TABVAT.AXX)).FLG = 0
Next AXX
If !len(fmet TABVAT.AGETTEXTRA("TEXAXX"))
 Call ASETTEXTRA(TABVAT.AXX,TABVAT.AllocGrp(),"TEXAXX",
& fmet TABVAT.AGETTEXTRALAN("TEXAXX",TABVAT.ACTX.AFOLD.ALANGDEF),
& TABVAT.ACTX.LAN) From ASYRSUB
Endif

Return



