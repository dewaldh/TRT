#<AdxTL>@(#)0.0.0.0 $Revision$Class Data type parameters
# Supervisor
## ACLA-CLASSE ## ATYPERPAR
# 2018-08-27 12:23:46 319


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CODTYP Data type ( Field ATY 8)
####################################################################

$SET_CODTYP
If [L]_AOLDVAL<>this.CODTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODTYP
 Gosub PROPAGATE_CODTYP
Endif
Return

$INIT_CODTYP
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CODTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODTYP
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CODTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODTYP
[L]CURPRO = "CODTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODTYP
[L]CURPRO = "CODTYP"
If vireblc(this.CODTYP,2)<>vireblc(format$("K:8B",this.CODTYP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODTYP
[L]CURPRO = "CODTYP"
If vireblc(this.CODTYP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPATY.ACTRLREF(this,"CODTYP",this.CODTYP,this.CODTYP,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODTYP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODTYP
[L]CURPRO = "CODTYP"
Return

$PROPAGATE_CODTYP
this.isReadonly = 0
[L]CURPRO = "CODTYP"
Gosub _LNKPRO_CODTYP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODTYP
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CODTYP"
$_LNKPRO_CODTYP
If vireblc(this.CODTYP,2)<>""
 # Link ATYPE
 Local File ATYPE [WATY]
 Read [F:WATY]CODTYP = this.CODTYP
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WATY]INTITTYP & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODTYP","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WATY]
Endif
Return

$_ALOADATTRIBUTE_CODTYP
[L]ASTATUS = fmet this.ASETATTRIBUTE("CODTYP","$isMandatory","true")
Return


####################################################################
# 2 : TYPRUL Type ( Field Local menu number 7961)
####################################################################

$SET_TYPRUL
If [L]_AOLDVAL<>this.TYPRUL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPRUL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPRUL
 Gosub PROPAGATE_TYPRUL
Endif
Return

$INIT_TYPRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "TYPRUL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPRUL=0 and fmet this.AGETATTRIBUTE("TYPRUL","$isMandatory")="true"
 this.TYPRUL = 1
Endif
Return
 
$CONTROL_TYPRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "TYPRUL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPRUL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPRUL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPRUL
[L]CURPRO = "TYPRUL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPRUL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPRUL
[L]CURPRO = "TYPRUL"
If this.TYPRUL<0 or this.TYPRUL>len(mess(0,7961,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"7961 ->"-num$(this.TYPRUL)-mess(99,123,1)):  Return : # Local menu "7961 -> Invalid option
Endif
Return

$_AOTHERS_TYPRUL
[L]CURPRO = "TYPRUL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPRUL
[L]CURPRO = "TYPRUL"
Return

$PROPAGATE_TYPRUL
this.isReadonly = 0
[L]CURPRO = "TYPRUL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "TYPRUL"
$_LNKPRO_TYPRUL
Return


####################################################################
# 3 : TRTRUL Processing ( Field ADC 30)
####################################################################

$SET_TRTRUL
If [L]_AOLDVAL<>this.TRTRUL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRTRUL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRTRUL
 Gosub PROPAGATE_TRTRUL
Endif
Return

$INIT_TRTRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "TRTRUL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRTRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "TRTRUL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRTRUL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRTRUL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRTRUL
[L]CURPRO = "TRTRUL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TRTRUL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRTRUL
[L]CURPRO = "TRTRUL"
If vireblc(this.TRTRUL,2)<>vireblc(format$("KTD:30X",this.TRTRUL),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TRTRUL
[L]CURPRO = "TRTRUL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRTRUL
[L]CURPRO = "TRTRUL"
Return

$PROPAGATE_TRTRUL
this.isReadonly = 0
[L]CURPRO = "TRTRUL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRTRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "TRTRUL"
$_LNKPRO_TRTRUL
Return


####################################################################
# 4 : PRGRUL Sub-program ( Field ASU 30)
####################################################################

$SET_PRGRUL
If [L]_AOLDVAL<>this.PRGRUL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRGRUL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRGRUL
 Gosub PROPAGATE_PRGRUL
Endif
Return

$INIT_PRGRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PRGRUL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRGRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PRGRUL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRGRUL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRGRUL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRGRUL
[L]CURPRO = "PRGRUL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRGRUL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRGRUL
[L]CURPRO = "PRGRUL"
If vireblc(this.PRGRUL,2)<>vireblc(format$("K:30c",this.PRGRUL),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRGRUL
[L]CURPRO = "PRGRUL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRGRUL
[L]CURPRO = "PRGRUL"
Return

$PROPAGATE_PRGRUL
this.isReadonly = 0
[L]CURPRO = "PRGRUL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRGRUL
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PRGRUL"
$_LNKPRO_PRGRUL
Return


####################################################################
# 5 : PARORD Order ( Field C 4)
####################################################################

$SET_PARORD
If [L]_AOLDVAL<>this.PARORD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARORD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARORD
 Gosub PROPAGATE_PARORD
Endif
Return

$INIT_PARORD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARORD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARORD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARORD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARORD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARORD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARORD
[L]CURPRO = "PARORD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARORD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARORD
[L]CURPRO = "PARORD"
Return

$_AOTHERS_PARORD
[L]CURPRO = "PARORD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARORD
[L]CURPRO = "PARORD"
Return

$PROPAGATE_PARORD
this.isReadonly = 0
[L]CURPRO = "PARORD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARORD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARORD"
$_LNKPRO_PARORD
Return


####################################################################
# 6 : PARCOD Code ( Field A 50)
####################################################################

$SET_PARCOD
If [L]_AOLDVAL<>this.PARCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARCOD
 Gosub PROPAGATE_PARCOD
Endif
Return

$INIT_PARCOD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARCOD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARCOD
[L]CURPRO = "PARCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARCOD
[L]CURPRO = "PARCOD"
Return

$_AOTHERS_PARCOD
[L]CURPRO = "PARCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARCOD
[L]CURPRO = "PARCOD"
Return

$PROPAGATE_PARCOD
this.isReadonly = 0
[L]CURPRO = "PARCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARCOD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARCOD"
$_LNKPRO_PARCOD
Return


####################################################################
# 7 : PARTIT Description ( Field ATX)
####################################################################

$GET_PARTIT
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTIT"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_PARTIT
If [L]_AOLDVAL<>this.PARTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARTIT
 Gosub PROPAGATE_PARTIT
Endif
Return

$INIT_PARTIT
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARTIT
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARTIT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARTIT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARTIT
[L]CURPRO = "PARTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARTIT
[L]CURPRO = "PARTIT"
Return

$_AOTHERS_PARTIT
[L]CURPRO = "PARTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARTIT
[L]CURPRO = "PARTIT"
Return

$PROPAGATE_PARTIT
this.isReadonly = 0
[L]CURPRO = "PARTIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARTIT
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTIT"
$_LNKPRO_PARTIT
Return


####################################################################
# 8 : PARTYP Type ( Field Local menu number 33)
####################################################################

$SET_PARTYP
If [L]_AOLDVAL<>this.PARTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARTYP
 Gosub PROPAGATE_PARTYP
Endif
Return

$INIT_PARTYP
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PARTYP=0 and fmet this.AGETATTRIBUTE("PARTYP","$isMandatory")="true"
 this.PARTYP = 1
Endif
Return
 
$CONTROL_PARTYP
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARTYP
[L]CURPRO = "PARTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARTYP
[L]CURPRO = "PARTYP"
If this.PARTYP<0 or this.PARTYP>len(mess(0,33,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"33 ->"-num$(this.PARTYP)-mess(99,123,1)):  Return : # Local menu "33 -> Invalid option
Endif
Return

$_AOTHERS_PARTYP
[L]CURPRO = "PARTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARTYP
[L]CURPRO = "PARTYP"
Return

$PROPAGATE_PARTYP
this.isReadonly = 0
[L]CURPRO = "PARTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARTYP
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARTYP"
$_LNKPRO_PARTYP
Return


####################################################################
# 9 : PARCLA Class code ( Field ACLA 20)
####################################################################

$SET_PARCLA
If [L]_AOLDVAL<>this.PARCLA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARCLA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARCLA
 Gosub PROPAGATE_PARCLA
Endif
Return

$INIT_PARCLA
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARCLA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PARCLA
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARCLA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARCLA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARCLA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARCLA
[L]CURPRO = "PARCLA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PARCLA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARCLA
[L]CURPRO = "PARCLA"
If vireblc(this.PARCLA,2)<>vireblc(format$("K:A11B",this.PARCLA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PARCLA
[L]CURPRO = "PARCLA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARCLA
[L]CURPRO = "PARCLA"
Return

$PROPAGATE_PARCLA
this.isReadonly = 0
[L]CURPRO = "PARCLA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARCLA
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARCLA"
$_LNKPRO_PARCLA
Return


####################################################################
# 10 : PARDIM Dim. ( Field Local menu number 7987)
####################################################################

$SET_PARDIM
If [L]_AOLDVAL<>this.PARDIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARDIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARDIM
 Gosub PROPAGATE_PARDIM
Endif
Return

$INIT_PARDIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARDIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PARDIM=0 and fmet this.AGETATTRIBUTE("PARDIM","$isMandatory")="true"
 this.PARDIM = 1
Endif
Return
 
$CONTROL_PARDIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARDIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARDIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARDIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARDIM
[L]CURPRO = "PARDIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARDIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARDIM
[L]CURPRO = "PARDIM"
If this.PARDIM<0 or this.PARDIM>len(mess(0,7987,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"7987 ->"-num$(this.PARDIM)-mess(99,123,1)):  Return : # Local menu "7987 -> Invalid option
Endif
Return

$_AOTHERS_PARDIM
[L]CURPRO = "PARDIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARDIM
[L]CURPRO = "PARDIM"
Return

$PROPAGATE_PARDIM
this.isReadonly = 0
[L]CURPRO = "PARDIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARDIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARDIM"
$_LNKPRO_PARDIM
Return


####################################################################
# 11 : PARMOD Method ( Field Local menu number 34)
####################################################################

$SET_PARMOD
If [L]_AOLDVAL<>this.PARMOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PARMOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PARMOD
 Gosub PROPAGATE_PARMOD
Endif
Return

$INIT_PARMOD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARMOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PARMOD=0 and fmet this.AGETATTRIBUTE("PARMOD","$isMandatory")="true"
 this.PARMOD = 1
Endif
Return
 
$CONTROL_PARMOD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARMOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PARMOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PARMOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PARMOD
[L]CURPRO = "PARMOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PARMOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PARMOD
[L]CURPRO = "PARMOD"
If this.PARMOD<0 or this.PARMOD>len(mess(0,34,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"34 ->"-num$(this.PARMOD)-mess(99,123,1)):  Return : # Local menu "34 -> Invalid option
Endif
Return

$_AOTHERS_PARMOD
[L]CURPRO = "PARMOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PARMOD
[L]CURPRO = "PARMOD"
Return

$PROPAGATE_PARMOD
this.isReadonly = 0
[L]CURPRO = "PARMOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PARMOD
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "PARMOD"
$_LNKPRO_PARMOD
Return


####################################################################
# 12 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 13 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 14 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 15 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 16 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ATYPERPAR
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




