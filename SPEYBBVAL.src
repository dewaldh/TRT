#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################
# FILE NAME   : SPEYBBVAL
# DESCRIPTION : Business Batch Validation
######################################################################################################
# DATE        : 11-09-2018
# AUTHOR      : Dewald Henning
# COMPANY     : Leverage Technologies
#-----------------------------------------------------------------------------------------------------
# Epics Code  : DFCX1-27
#-----------------------------------------------------------------------------------------------------
######################################################################################################

$ACTION
  Case ACTION
    When "YBBVAL"  :   Gosub VALIDATE
    When Default
  Endcase
Return

$VALIDATE
Local Char MESSAGE(255) : MESSAGE = "Validate business batch "-[M:YBB0]YBATNBR+"?"
  Call OUINON(MESSAGE,OK)  From GESECRAN
  Case OK
     When 2: Call VAL_BUSBAT([M:YBB0]YBATNBR)  #yes
  Endcase

Return

Subprog VAL_BUSBAT(YBATNBR)
Variable Char YBATNBR()

  #Check if Debit = Credits
  If [M]YTOTDEB <> [M]YTOTCRE
    GMESSAGE = mess(21,6254,1)
    GERR = 1
    mkstat = 2
    End
  Endif

  #Check if the Business Batch is a template
  If left$(YBATNBR,1) = "T"
    GMESSAGE = mess(16,6254,1)
    End
  Endif

  # Delete ALL RECORDS IN THE SIMULATION TABLE and ERRORS TABLE
  If clalev([F:YBBS]) = 0 : Local File YBBSIM [YBBS] : Endif
  If clalev([F:YBBE]) = 0 : Local File YBBERR [YBBE] : Endif
  Delete [F:YBBS] Where [F:YBBS]YBATNBR = YBATNBR
  Delete [F:YBBE] Where [F:YBBE]YBATNBR = YBATNBR

  #SORT BUSINES TRANSACTIONS LINES By TRANSACTION NO and Then SITE
  #RENUMBER SAGE LINE NUMBER For THE SORTED BUSINES TRANSACTIONS LINES
  Local Char QUERY(255)(0..4)
  Local Integer I

  # QUERY WILL WORK IN TEMP TABLE To RE-Order THE DATA
  I = 0

  QUERY(0) = "SET NOCOUNT ON"
  QUERY(1) -= "DECLARE @RETURNVAL VARCHAR(255) = '';"
  QUERY(2) -= "EXEC [BB_VALSORT] '"+YBATNBR+"', @RETURNVAL OUTPUT"
  QUERY(3) -= "SELECT @RETURNVAL as RETVAL"

  For (Char RETVAL) From "5" Sql QUERY As [YLNK]
    If RETVAL = "Passed" Then
      I = 1
    Else
      I = 0
    Endif
  Next
  If I = 0 Then
    GMESSAGE = mess(17,6254,1)-"Transaction number sorting"
    GERR = 1
    mkstat = 2
    End
  Endif

#   ---------CALC GST - Start
#  CALCULATE GST ON EACH LINE By THE ENGINE RULES
#  I.E. If BATCH type IS Inter ENTITY
#  A)  CHECK To SEE If COMPANIES ARE IN THE SAME GST GROUP
#    If SO, Update GST Field = 0, AMT + GST = AMOUNT
#TAX CODE = EXM and CHANGE DOCUMENT type To BBGIE & JOURNAL type To BBGIE (GROUP GST) – this DOCUMENT type WILL HAVE VAT ON DEBIT DISABLED, SO WILL not BE INCLUDED IN GST REPORTING.

  Local Integer J : J = 0
  Local Integer TRANVAL : TRANVAL = 0
  Local Decimal NEWGSTAMT
  #Open Tables
  If clalev([F:YBBH]) = 0 : Local File YBBHEADER    [YBBH]  : Endif
  If clalev([F:YBDT]) = 0 : Local File YBBDETAILTEM [YBDT]  : Endif
  If clalev([F:TVT])  = 0 : Local File TABVAT       [TVT]   : Endif
  If clalev([F:GTE])  = 0 : Local File GTYPACCENT   [GTE]   : Endif

  Read [F:YBDT]YBDT0 = YBATNBR
  For [F:YBDT] Where [F:YBDT]YBATNBR = YBATNBR
    #BASED UPON THE TAX CODE CALCULATE THE GST AMOUNT Using THE DEBIT/CREDIT AMOUNT
    #Get VAT and VAT Rates for GST Amount
    Read [F:TVT]TVT1 = [F:YBDT]YTAX
    NEWGSTAMT = [F:TVT]VATRAT
    #Update THE GST AMOUNT With THE NEWLY CALCULATE GST Value
    [F:YBDT]YGSTAMT = NEWGSTAMT
    #Update THE AMOUNT + TAX Field With THE DEBIT/CREDIT AMOUN + GST AMOUNT
    If [F:TVT]VATRAT <> 0 Then
      If [F:YBDT]YDEB <> 0 : [F:YBDT]YAMTTAX = [F:YBDT]YDEB + NEWGSTAMT : Endif
      If [F:YBDT]YCDT <> 0 : [F:YBDT]YAMTTAX = [F:YBDT]YCDT + NEWGSTAMT : Endif
    Endif
    If fstat = 0
      Rewrite [F:YBDT]
      #Commit
#    Else
#      GMESSAGE = mess(18,6254,1)-"GST Calculation Update."
#      GERR = 1
#      mkstat = 2
#      J = 0
#      Break
    Endif
    #TODO: Requires expansion - START

    #TODO: Requires expansion - END
    J += 1
  Next
  Infbox("J"-num$(J))
#   ---------CALC GST - End

    Infbox "YBATTYP"-num$([F:YBDT]YBATTYP)
    If [F:YBDT]YBATTYP = 1 Then #IE
      TRANVAL = func BB_ENGINE_EXEC.BT_IE(YBATNBR)
    Elsif [F:YBDT]YBATTYP = 2 Then #Cash
      Infbox("EXEC CASH")
      TRANVAL = func BB_ENGINE_EXEC.BT_CASH(YBATNBR)
    Elsif [F:YBDT]YBATTYP = 3 Then #Journal
      TRANVAL = func BB_ENGINE_EXEC.BT_JOURNAL(YBATNBR)
    Endif

  Read [F:YBBH]YBBH0 = YBATNBR
  If J = 0 Then
    #SET THE BATCH status To “ERRORS” (3)
    [F:YBBH]YBATSTA = 3
  Elsif TRANVAL > 0
    [F:YBBH]YBATSTA = 3
    GMESSAGE = ("Validation completed with Errors:"-num$(TRANVAL))
  Else
     #SET THE BATCH status To “VALIATED” (2)
    [F:YBBH]YBATSTA = 2
    Infbox("Validation completed")
  Endif
  If fstat = 0 Then
    Rewrite [F:YBBH]
    #Commit
  Else #Validation failed on FSTAT
  #[V]CST_AERROR
  # 0 THE Rewrite OPERATION SUCCEEDED.
  # 1 THE LINE IS LOCKED.
  # 2 With >= or <= MODE, THE Key FOUND WAS not EQUAL To THE Value GIVEN.
  # 3 AN ATTEMPT OF THE CREATION OF A DUPLICATE Key Value WAS DONE.
  # 4 BEGIN or End OF TABLE REACHED.
  # 5 LINE CORRESPONDING To THE Key Value not FOUND.
  # 7 CLASS DOES not EXIST (NO TABLE OPENED With THE CORRESPONDING ABBREVIATION).
  # 8 THE NUMBER OF VALUES GIVEN, or THE NUMBER OF SEGMENTS INDICATED, EXCEEDS THE NUMBER OF SEGMENTS OF THE Key.
  # 21 THE Key DOES not EXIST.
  # 22 INCORRECT Read MODE.
  # 32 TRANSACTION STARTED At A HIGHER LEVEL OF THE NESTING Call
  # 48 NO TRANSACTION IN PROGRESS.
    GMESSAGE = mess(18,6254,1)-[V]CST_AERROR
    Rollback
    End
  Endif

  Affzo [M:YBB0]
  Affzo [M:YBB1]
  Affzo [M:YBB2]
  Affzo [M:YBB3]

End

