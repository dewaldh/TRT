#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################
# FILE NAME   : SPEYBBVAL
# DESCRIPTION : Business Batch Validation
######################################################################################################
# DATE        : 11-09-2018
# AUTHOR      : Dewald Henning
# COMPANY     : Leverage Technologies
#-----------------------------------------------------------------------------------------------------
# Epics Code  : DFCX1-27
#-----------------------------------------------------------------------------------------------------
######################################################################################################

$ACTION
  Case ACTION
    When "YBBVAL"  :  Gosub VALIDATE
  Endcase
Return

$VALIDATE
Local Char MESSAGE(255) : MESSAGE = "Validate business batch "-[M:YBB0]YBATNBR+"?"
  Call OUINON(MESSAGE,OK)  From GESECRAN
  Case OK
     When 2 : Call VAL_BUSBAT([M:YBB0]YBATNBR)
  Endcase

Return

Subprog VAL_BUSBAT(YBATNBR)
Variable Char YBATNBR()

  # DELETE ALL RECORDS IN THE SIMULATION TABLE, ERRORS TABLE and TEMP TABLE
  If clalev([F:YBBS]) = 0 : Local File YBBSIM [YBBS]        : Endif
  If clalev([F:YBBE]) = 0 : Local File YBBERR [YBBE]        : Endif
  If clalev([F:YBDT]) = 0 : Local File YBBDETAILTEM [YBDT]  : Endif
  Delete [F:YBBS]YBBS1 = YBATNBR
  Delete [F:YBBE]YBBE1 = YBATNBR
  Delete [F:YBDT]YBDT0 = YBATNBR
  If clalev([F:YBBS]) = 0 : Close Local File [F:YBBS] : Endif
  If clalev([F:YBBE]) = 0 : Close Local File [F:YBBE] : Endif
  If clalev([F:YBDT]) = 0 : Close Local File [F:YBDT] : Endif

  #Add Lines to Temp Table
  Call ADD_DETAILTEMP()

  #Balance Checks
  Call EXE_BALANCE_VAL(YBATNBR)

  #Site Checks

  Affzo [M:YBB0]
  Affzo [M:YBB1]
  Affzo [M:YBB2]
  Affzo [M:YBB3]

End

#---------------------------------------------------------------------------------
# Balance Checks
#---------------------------------------------------------------------------------
Subprog EXE_BALANCE_VAL(BATNBR)
Variable Char BATNBR()

  If clalev([F:YBBE]) = 0 : Local File YBBERR [YBBE]        : Endif
  If clalev([F:YBDT]) = 0 : Local File YBBDETAILTEM [YBDT]  : Endif

  Local Integer I : I = 0
  Local Char QUERY(255)
  Local Char EXECSP(255)
  Local Char YMSG(255)
  Local Char YSRC(50)
  Local Integer YNBRLIG

  [L]EXECSP = "EXEC [BB_BALANCE_VALIDATION] '"+BATNBR+"'"
  Execsql From "5" Sql EXECSP

  QUERY = "SELECT YDETLIG_0, YVALRES_0, YTRANSNBR_0 FROM YBBDETAILTEM WHERE YBATNBR_0 = '"+BATNBR+"'"
  For (Integer DETLIG, Integer RESULT, Integer YTRANSNO) From "5" Sql QUERY As [YLNK]
    Read [F:YBDT]YBDT1 = BATNBR;YDETLIG
    #Infbox num$(DETLIG), num$(RESULT)
    YNBRLIG = [F:YLNK]DETLIG + 1
    If [F:YLNK]RESULT = 1 Then #Error
      YMSG = "Balance exceeds 0 for transaction number"-num$(YTRANSNO)
      YSRC =  BATNBR+"-"+num$([F:YLNK]DETLIG)
      Call ADDLIG_ERR(BATNBR,YSRC,YNBRLIG,[F:YBDT]YFCY,[F:YBDT]YENTTYP,[F:YBDT]YJOU,[F:YBDT]YDETDES,[F:YBDT]YACC,[F:YBDT]YLIGDES,YMSG)
#    Else
#      Call ADDLIG_SIM(BATNBR,YNBRLIG,[F:YBDT]YENTTYP,[F:YBDT]YJOU,[F:YBDT]YTRANSNBR,
#&          [F:YBDT]YDETDES,[F:YBDT]YFCY,[F:YBDT]YCOA,[F:YBDT]YACC,[F:YBDT]YLIGDES,[F:YBDT]YCTRL,
#&          [F:YBDT]YBP,[F:YBDT]YDEB,[F:YBDT]YCDT,[F:YBDT]YTAX,[F:YBDT]YREF,[F:YBDT]YPJT,[F:YBDT]YCCE0,
#&          [F:YBDT]YCCE1,[F:YBDT]YCCE2,[F:YBDT]YCCE3,[F:YBDT]YCCE4,[F:YBDT]YGSTAMT,[F:YBDT]YAMTTAX)
    Endif
  Next

  If clalev([F:YBBE]) = 0 : Close Local File [F:YBBE] : Endif
  If clalev([F:YBDT]) = 0 : Close Local File [F:YBDT] : Endif

End

#---------------------------------------------------------------------------------
# GST Calculations
#---------------------------------------------------------------------------------
Subprog EXE_GSTCALC(BATNBR,DETLIG,YCOA,YACC)
Variable Char BATNBR()
Variable Integer DETLIG()
Variable Char YCOA()
Variable Char YACC()

  If clalev([F:TAX])  = 0 : Local File TABRATVAT  [TAX]  : Endif
  If clalev([F:GAC])  = 0 : Local File GACCOUNT   [GAC]  : Endif
  If clalev([F:TVT])  = 0 : Local File TABVAT     [TVT]  : Endif
  #If clalev([F:YELA]) = 0 : Local File YENTLOAAGR [YELA] : Endif
  #If clalev([F:YBDT]) = 0 : Local File YBBDETAILTEM [YBDT]  : Endif

  #Declarations
  Local Char NEW_TAX(5)
  Local Decimal NEW_GST, NEW_VATRAT, NEW_AMT
  #Get Vat Rates
  Read [F:TVT]TVT1 = [F:YBDT]YTAX
  [F:TVT]VATRAT = NEW_VATRAT

  #Check ACCOUNT IS DEFINED As SUBJECTED
  Read [F:GAC]GAC0 = YCOA;YACC
  If [F:GAC]FLGVAT = 2 Then
    #SET TAX To null
    [L]NEW_TAX = ""
  Else
    #IE Transaction Type for GST Calc
    If [F:YBDT]YBATTYP = 1 Then
      #Declare 2 sites for the GST group [S1 and S2]
      #Refer to Pseudo code, but this is the only way I could get this to work as per the group by
      If [V]IE_SITE1 = "" Then
        [V]IE_SITE1 = [F:YBDT]YFCY
        IE_DETLIG1 = [F:YBDT]YDETLIG
        End
      Elsif [V]IE_SITE1 <> "" and [V]IE_SITE2 = "" Then
        [V]IE_SITE2 = [F:YBDT]YFCY
        IE_DETLIG2 = [F:YBDT]YDETLIG
      Endif
      If [V]IE_SITE1 <> "" and [V]IE_SITE2 <> "" and [V]IE_SITE1 = [V]IE_SITE2 Then
        #THE BUSINESS TRANSACTION ARE MEMBERS OF THE SAME GST GROUP
        [L]NEW_TAX = func AFNC.PARAM("YIEVAT","")
      Else
        Local Char MESSAGE(255) : MESSAGE = "Site not setup correctly for batch type"
        Local Char YSRC(50) : YSRC = [F:YBDT]YBATNBR+"-"+num$(DETLIG)
        Call ADDLIG_ERR(BATNBR,YSRC,DETLIG,[F:YBDT]YFCY,[F:YBDT]YENTTYP,
&                   [F:YBDT]YJOU,[F:YBDT]YDETDES,[F:YBDT]YACC,[F:YBDT]YLIGDES,MESSAGE)
        End
      Endif
    Endif
    If [F:YBDT]YBATTYP = 2 or [F:YBDT]YBATTYP = 3 Then
      If [F:TVT]VATVAC = ""
        Local Char MESSAGE(255) : MESSAGE = "Tax rule not setup"
        Local Char YSRC(50) : YSRC = [F:YBDT]YBATNBR+"-"+num$(DETLIG)
        Call ADDLIG_ERR(BATNBR,YSRC,DETLIG,[F:YBDT]YFCY,[F:YBDT]YENTTYP,
&                       [F:YBDT]YJOU,[F:YBDT]YDETDES,[F:YBDT]YACC,[F:YBDT]YLIGDES,MESSAGE)
        End
      Else
        [L]NEW_TAX = [F:TVT]VATVAC
      Endif
    Endif
  Endif
  #TAX OVERRIDE IS POPULATED
  If [L]NEW_TAX <> "" Then
    #CALCULATE THE GST and AMOUNT + TAX (As PER SECTION 6.1.17 GST CALCULATIONS)
    If [F:YBDT]YDEB <> 0 : [L]NEW_AMT = [F:YBDT]YDEB : Endif
    If [F:YBDT]YCDT <> 0 : [L]NEW_AMT = [F:YBDT]YCDT : Endif
    If [F:YBDT]YGSTINC = 2 Then #GST Inc
      #GST Amount = Amount - Round(Amount/(1+(Rate/100)))
      [L]NEW_GST = [L]NEW_AMT - (1+([L]NEW_VATRAT/100))
      [F:YBDT]YAMTTAX = [L]NEW_AMT + [L]NEW_GST
    Else #GST Ex
      #GST Amount = Amount * (Rate/100)
      [L]NEW_GST = [L]NEW_AMT * ([L]NEW_VATRAT/100)
      [F:YBDT]YAMTTAX = [L]NEW_AMT - [L]NEW_GST
    Endif
  Else
    #SET GST To ZERO
    #SET AMOUNT + TAX To DEBIT/CREDIT Value
    [F:YBDT]YAMTTAX = [L]NEW_AMT
    [L]NEW_GST = 0
  Endif
  [F:YBDT]YGSTAMT = [L]NEW_GST
  If fstat = 0
    Rewrite [F:YBDT]
  Else
    Call ADDMESSERR("Critical error occured."-[V]CST_AERROR) From AWEB
    Rollback
    End
  Endif

  If clalev([F:TAX]) = 0 : Close Local File [F:TAX] : Endif
  If clalev([F:GAC]) = 0 : Close Local File [F:GAC] : Endif
  If clalev([F:TVT]) = 0 : Close Local File [F:TVT] : Endif

End

#---------------------------------------------------------------------------------
# Add Detail Temp Line for Current Batch number
#---------------------------------------------------------------------------------
Subprog ADD_DETAILTEMP()
If clalev([F:YBDT]) = 0  : Local File YBBDETAILTEM [YBDT]  : Endif
  For I = 0 To [M:YBB1]NBLIG - 1
    nolign = I + 1
    [F:YBDT] = [M:YBB1]
    [F:YBDT]YBATNBR = [M:YBB0]YBATNBR
    [F:YBDT]YFCY = [M:YBB1]YFCY(I)
    [F:YBDT]YENTTYP = [M:YBB1]YENTTYP(I)
    [F:YBDT]YJOU = [M:YBB1]YJOU(I)
    [F:YBDT]YCPY = [M:YBB1]YCPY(I)
    [F:YBDT]YACM = [M:YBB1]YACM(I)
    [F:YBDT]YLED1 = [M:YBB1]YLED1(I)
    [F:YBDT]YELA = [M:YBB1]YELA(I)
    [F:YBDT]YCOA = [M:YBB1]YCOA(I)
    [F:YBDT]YELA = [M:YBB1]YELA(I)
    [F:YBDT]YBAN = [M:YBB1]YBAN(I)
    [F:YBDT]YACC = [M:YBB1]YACC(I)
    [F:YBDT]YLIGDES = [M:YBB1]YLIGDES(I)
    [F:YBDT]YDETDES = [M:YBB1]YDETDES(I)
    [F:YBDT]YCTRL = [M:YBB1]YCTRL(I)
    [F:YBDT]YBP = [M:YBB1]YBP(I)
    [F:YBDT]YDEB = [M:YBB1]YDEB(I)
    [F:YBDT]YCDT = [M:YBB1]YCDT(I)
    [F:YBDT]YTAX = [M:YBB1]YTAX(I)
    [F:YBDT]YGSTAMT = [M:YBB1]YGSTAMT(I)
    [F:YBDT]YAMTTAX = [M:YBB1]YAMTTAX(I)
    [F:YBDT]YREF = [M:YBB1]YREF(I)
    [F:YBDT]YPJT = [M:YBB1]YPJT(I)
    [F:YBDT]YDIE0 = [M:YBB1]YDIE0(I)
    [F:YBDT]YCCE0 = [M:YBB1]YCCE0(I)
    [F:YBDT]YDIE1 = [M:YBB1]YDIE1(I)
    [F:YBDT]YCCE1 = [M:YBB1]YCCE1(I)
    [F:YBDT]YDIE2 = [M:YBB1]YDIE2(I)
    [F:YBDT]YCCE2 = [M:YBB1]YCCE2(I)
    [F:YBDT]YDIE3 = [M:YBB1]YDIE3(I)
    [F:YBDT]YCCE3 = [M:YBB1]YCCE3(I)
    [F:YBDT]YDIE4 = [M:YBB1]YDIE4(I)
    [F:YBDT]YCCE4 = [M:YBB1]YCCE4(I)
    [F:YBDT]YBATTYP = [M:YBB1]YBATTYP(I)
    [F:YBDT]YGSTINC = [M:YBB1]YGSTINC(I)
    [F:YBDT]YDETLIG = I
     Write [F:YBDT]
  Next
  Close Local File [YBDT]
End

#---------------------------------------------------------------------------------
# Simulation Line Write
#---------------------------------------------------------------------------------
Subprog ADDLIG_SIM(YBATNBR,YDETLIG, YENTTYP,YJOU,YTRANSNBR,YDETDES,YFCY,YCOA,YACC,YLIGDES,YCTRL,YBP,YDEB,YCDT,
&                  YTAX,YREF,YPJT,YCCE0,YCCE1,YCCE2,YCCE3,YCCE4,YGSTAMT,YAMTTAX)
Variable Char YBATNBR()
Variable Integer YDETLIG()
Variable Char YENTTYP()
Variable Char YJOU()
Variable Integer YTRANSNBR()
Variable Char YDETDES()
Variable Char YFCY()
Variable Char YCOA()
Variable Char YACC()
Variable Char YLIGDES()
Variable Char YCTRL()
Variable Char YBP()
Variable Decimal YDEB()
Variable Decimal YCDT()
Variable Char YTAX()
Variable Char YREF()
Variable Char YPJT()
Variable Char YCCE0()
Variable Char YCCE1()
Variable Char YCCE2()
Variable Char YCCE3()
Variable Char YCCE4()
Variable Decimal YGSTAMT
Variable Decimal YAMTTAX

  If clalev([F:YBBS]) = 0 : Local File YBBSIM [YBBS]  : Endif
  Raz [F:YBBS]
  [F:YBBS]YBATNBR = YBATNBR
  [F:YBBS]YDETLIG = YDETLIG
  [F:YBBS]YENTTYP = YENTTYP
  [F:YBBS]YJOU = YJOU
  [F:YBBS]YTRANSNBR = YTRANSNBR
  [F:YBBS]YDETDES = YDETDES
  [F:YBBS]YFCY = YFCY
  [F:YBBS]YCOA = YCOA
  [F:YBBS]YACC = YACC
  [F:YBBS]YLIGDES = YLIGDES
  [F:YBBS]YCTRL = YCTRL
  [F:YBBS]YBP = YBP
  [F:YBBS]YDEB = YDEB
  [F:YBBS]YCDT = YCDT
  [F:YBBS]YTAX = YTAX
  [F:YBBS]YREF = YREF
  [F:YBBS]YPJT = YPJT
  [F:YBBS]YCCE0 = YCCE0
  [F:YBBS]YCCE1 = YCCE1
  [F:YBBS]YCCE2 = YCCE2
  [F:YBBS]YCCE3 = YCCE3
  [F:YBBS]YCCE4 = YCCE4
  [F:YBBS]YGSTAMT = YGSTAMT
  [F:YBBS]YAMTTAX = YAMTTAX

  Write [F:YBBS]
  Close Local File [YBBS]

End

#---------------------------------------------------------------------------------
# Error Line Write
#---------------------------------------------------------------------------------
Subprog ADDLIG_ERR(YBATNBR,YSRC,YDETLIG,YFCY,YENTTYP,YJOU,YDETDES,YACC,YLIGDES,YMESS)
Variable Char YBATNBR()
Variable Char YSRC()
Variable Integer YDETLIG()
Variable Char YFCY()
Variable Char YENTTYP()
Variable Char YJOU()
Variable Char YDETDES()
Variable Char YACC()
Variable Char YLIGDES()
Variable Char YMESS()

  If clalev([F:YBBE]) = 0 : Local File YBBERR [YBBE]  : Endif
  Raz [F:YBBE]
  [F:YBBE]YBATNBR = YBATNBR
  [F:YBBE]YSRC = YSRC
  [F:YBBE]YDETLIG = YDETLIG
  [F:YBBE]YFCY = YFCY
  [F:YBBE]YENTTYP = YENTTYP
  [F:YBBE]YJOU = YJOU
  [F:YBBE]YDETDES = YDETDES
  [F:YBBE]YACC = YACC
  [F:YBBE]YLIGDES = YLIGDES
  [F:YBBE]YMESS = YMESS
  Write [F:YBBE]
  Close Local File [YBBE]

End

