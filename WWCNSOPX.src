#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry OPX

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:34"
A_USER  = "ADMIN"
A_STAMP = "20180326134134"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(10704,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSOPXSTD"
PROGSPE    = "CNSOPXSPE"
CBOITE     = "DCNSOPX"
BOITE      = "FCNSOPX"
NOMMSK(0)  = "CONSOPX1"
ABMSK(0)   = "OPX1"
NOMMSK(1)  = "CONSOPX2"
ABMSK(1)   = "OPX2"
CMEMO      = "opx"
CNOMMSK    = "CRITOPX"
CABMSK     = "COPX"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:OPS])=0 : Local File OPERATIONS   [OPS] : Endif
If clalev([F:MWS])=0 : Local File WORKSTATIO   [MWS] : Endif
If clalev([F:SCH])=0 : Local File SCHEDULING   [SCH] : Endif
If clalev([F:TWC])=0 : Local File TABWRKCTR    [TWC] : Endif
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:AUS])=0 : Local File AUTILIS      [AUS] : Endif
If clalev([F:MFG])=0 : Local File MFGHEAD      [MFG] : Endif
If clalev([F:TUN])=0 : Local File TABUNIT      [TUN] : Endif
If clalev([F:MFI])=0 : Local File MFGITM       [MFI] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [COPX]
 When  0 : Local Mask =NOMMSK(0) [OPX1]
 When  1 : Local Mask =NOMMSK(1) [OPX2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [COPX]
 When  0 : Grizo [OPX1]
 When  1 : Grizo [OPX2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:COPX]WCRSTR)>0
 Grizo [COPX]WCRSTR
Endif
If dim([M:COPX]WCREND)>0
 Grizo [COPX]WCREND
Endif
If dim([M:COPX]WSTSTR)>0
 Grizo [COPX]WSTSTR
Endif
If dim([M:COPX]WSTEND)>0
 Grizo [COPX]WSTEND
Endif
If dim([M:COPX]WSTTYPSTR)>0
 Grizo [COPX]WSTTYPSTR
Endif
If dim([M:COPX]WSTTYPEND)>0
 Grizo [COPX]WSTTYPEND
Endif
If dim([M:COPX]STRDATSTR)>0
 Grizo [COPX]STRDATSTR
Endif
If dim([M:COPX]STRDATEND)>0
 Grizo [COPX]STRDATEND
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:COPX])>0 : Close Local Mask [COPX] : Endif
 When  0 : If clalev([M:OPX1])>0 : Close Local Mask [OPX1] : Endif
 When  1 : If clalev([M:OPX2])>0 : Close Local Mask [OPX2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [COPX]
 When  0 : Default Mask [OPX1]
 When  1 : Default Mask [OPX2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:COPX]
 When  0 : Raz [M:OPX1]
 When  1 : Raz [M:OPX2]
Endcase
Return

$CRITENT
If dim([M:COPX]WCRSTR)>0 & dim([M:OPX1]WCRSTR)>0
 [M:COPX]WCRSTR = [M:OPX1]WCRSTR
Endif
If dim([M:COPX]WCREND)>0 & dim([M:OPX1]WCREND)>0
 [M:COPX]WCREND = [M:OPX1]WCREND
Endif
If dim([M:COPX]WSTSTR)>0 & dim([M:OPX1]WSTSTR)>0
 [M:COPX]WSTSTR = [M:OPX1]WSTSTR
Endif
If dim([M:COPX]WSTEND)>0 & dim([M:OPX1]WSTEND)>0
 [M:COPX]WSTEND = [M:OPX1]WSTEND
Endif
If dim([M:COPX]WSTTYPSTR)>0 & dim([M:OPX1]WSTTYPSTR)>0
 [M:COPX]WSTTYPSTR = [M:OPX1]WSTTYPSTR
Endif
If dim([M:COPX]WSTTYPEND)>0 & dim([M:OPX1]WSTTYPEND)>0
 [M:COPX]WSTTYPEND = [M:OPX1]WSTTYPEND
Endif
If dim([M:COPX]STRDATSTR)>0 & dim([M:OPX1]STRDATSTR)>0
 [M:COPX]STRDATSTR = [M:OPX1]STRDATSTR
Endif
If dim([M:COPX]STRDATEND)>0 & dim([M:OPX1]STRDATEND)>0
 [M:COPX]STRDATEND = [M:OPX1]STRDATEND
Endif
Return

$ENTCRIT
If dim([M:COPX]WCRSTR)>0 & dim([M:OPX1]WCRSTR)>0
[M:OPX1]WCRSTR = [M:COPX]WCRSTR
Endif
If dim([M:COPX]WCREND)>0 & dim([M:OPX1]WCREND)>0
[M:OPX1]WCREND = [M:COPX]WCREND
Endif
If dim([M:COPX]WSTSTR)>0 & dim([M:OPX1]WSTSTR)>0
[M:OPX1]WSTSTR = [M:COPX]WSTSTR
Endif
If dim([M:COPX]WSTEND)>0 & dim([M:OPX1]WSTEND)>0
[M:OPX1]WSTEND = [M:COPX]WSTEND
Endif
If dim([M:COPX]WSTTYPSTR)>0 & dim([M:OPX1]WSTTYPSTR)>0
[M:OPX1]WSTTYPSTR = [M:COPX]WSTTYPSTR
Endif
If dim([M:COPX]WSTTYPEND)>0 & dim([M:OPX1]WSTTYPEND)>0
[M:OPX1]WSTTYPEND = [M:COPX]WSTTYPEND
Endif
If dim([M:COPX]STRDATSTR)>0 & dim([M:OPX1]STRDATSTR)>0
[M:OPX1]STRDATSTR = [M:COPX]STRDATSTR
Endif
If dim([M:COPX]STRDATEND)>0 & dim([M:OPX1]STRDATEND)>0
[M:OPX1]STRDATEND = [M:COPX]STRDATEND
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "TRI" : CRITAFF2(1) = ""
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSOPX2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("0","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("2","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MFG","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT4<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT4
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B4"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:OPX2]OPENUM(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$(GBIDI1),"~","¨")
 Onerrgo
Endif
If GBOUT5<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT5
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B5"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:OPX2]OPENUM(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$(GBIDI1),"~","¨")
 Onerrgo
Endif
If GBOUT6<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT6
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B6"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([m:opx1]fcy,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("2","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([m:opx1]wsta),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]WCR(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]wcr(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]extWST(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]extWST(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:OPX2]EXTWSTTYP(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:OPX2]EXTWSTTYP(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]OPESTR(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("1","~","¨")
 Onerrgo
Endif
If GBOUT8<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT8
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B8"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("3","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]EXTWST(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]WCR(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]STRDATSTR,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]STRDATEND,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT9<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT9
 VALBOUT(NBBOUT) = "OPX"
 VALBOUT(NBBOUT) += "~B9"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MWS","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:OPX2]EXTWST(nolign-1),"~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:OPX2]EXTWST(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSOPX2"
 When "B2"
  Onerrgo RIEN
  Assign "[M:OPX1]FCY" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:OPX2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,10),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSOPX2"
 When "B3"
  Onerrgo RIEN
  Assign "[M:OPX2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B3_NBLIG From ="W1CONSOPX2"
 When "B4"
  Onerrgo RIEN
  Assign "[M:OPX1]FCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "1" With val(ctrans(func AFNC.PART(INFO,4),"¨","~"))
  Assign "1" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Assign "1" With val(ctrans(func AFNC.PART(INFO,6),"¨","~"))
  Assign "[M:OPX2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Assign "[M:OPX2]OPENUM(nolign-1)" With val(ctrans(func AFNC.PART(INFO,8),"¨","~"))
  Assign "GBIDI1" With val(ctrans(func AFNC.PART(INFO,9),"¨","~"))
  Onerrgo
  Call B4_NBLIG From ="W1CONSOPX2"
 When "B5"
  Onerrgo RIEN
  Assign "[M:OPX1]FCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "1" With val(ctrans(func AFNC.PART(INFO,4),"¨","~"))
  Assign "1" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Assign "[M:OPX2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:OPX2]OPENUM(nolign-1)" With val(ctrans(func AFNC.PART(INFO,7),"¨","~"))
  Assign "GBIDI1" With val(ctrans(func AFNC.PART(INFO,8),"¨","~"))
  Onerrgo
  Call B5_NBLIG From ="W1CONSOPX2"
 When "B6"
  Onerrgo RIEN
  Assign "[m:opx1]fcy" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "2" With val(ctrans(func AFNC.PART(INFO,4),"¨","~"))
  Assign "[m:opx1]wsta" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Assign "[M:OPX2]WCR(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:OPX2]wcr(nolign-1)" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Assign "[M:OPX2]extWST(nolign-1)" With ctrans(func AFNC.PART(INFO,8),"¨","~")
  Assign "[M:OPX2]extWST(nolign-1)" With ctrans(func AFNC.PART(INFO,9),"¨","~")
  Assign "[M:OPX2]EXTWSTTYP(nolign-1)" With val(ctrans(func AFNC.PART(INFO,10),"¨","~"))
  Assign "[M:OPX2]EXTWSTTYP(nolign-1)" With val(ctrans(func AFNC.PART(INFO,11),"¨","~"))
  Assign "1" With val(ctrans(func AFNC.PART(INFO,12),"¨","~"))
  Assign "[M:OPX2]OPESTR(nolign-1)" With ctrans(func AFNC.PART(INFO,14),"¨","~")
  Onerrgo
  Call B6_NBLIG From ="W1CONSOPX2"
 When "B8"
  Onerrgo RIEN
  Assign "[M:OPX1]FCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:OPX2]EXTWST(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:OPX2]WCR(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Assign "[M:OPX1]STRDATSTR" With ctrans(func AFNC.PART(INFO,7),"¨","~")
  Assign "[M:OPX1]STRDATEND" With ctrans(func AFNC.PART(INFO,8),"¨","~")
  Onerrgo
  Call B8_NBLIG From ="W1CONSOPX2"
 When "B9"
  Onerrgo RIEN
  Assign "[M:OPX1]FCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:OPX2]EXTWST(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Onerrgo
  Call B9_NBLIG From ="W1CONSOPX2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


