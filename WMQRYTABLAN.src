#<AdxTL>@(#)0.0.0.0 $Revision$Class Languages
# Supervisor
## WMREP REPRESENTATION ## TABLAN
# 2018-08-27 13:37:35 735

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:TLA])=0 : Local File TABLAN [TLA] : Endif
If clalev([F:WAXX1])=0 : Local File ATEXTRA [WAXX1] : Endif
If clalev([F:WAXX2])=0 : Local File ATEXTRA [WAXX2] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [TLA]
LogicClose File [WAXX1]
LogicClose File [WAXX2]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"TLA","TLA",ACRITROLE,[V]CST_AFALSE)
Link [TLA] With
& [F:WAXX2]AXX0 = "TABLAN";"INTSHO";GACTX.LAN;[F:TLA]LAN;"",
& [F:WAXX1]AXX0 = "TABLAN";"INTDES";GACTX.LAN;[F:TLA]LAN;""
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"TLA","TLA",ACRITROLE,[V]CST_AFALSE)
Link [TLA] With
& [F:WAXX2]AXX0 = "TABLAN";"INTSHO";GACTX.LAN;[F:TLA]LAN;"",
& [F:WAXX1]AXX0 = "TABLAN";"INTDES";GACTX.LAN;[F:TLA]LAN;""
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# TLA --- TABLAN(TLA)
QRY(NBREP) = NewInstance R_TABLAN AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:TLA]AUUID)>0 & [F:TLA]AUUID=NullUuid
 [F:TLA]AUUID = getUuid
Endif
SetInstance QRY(NBREP).TLA With [F:TLA]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
Call ASETTEXTRA(QRY(NBREP).TLA.AXX,"QRY","INTSHO",[F:WAXX2]TEXTE,[F:WAXX2]LANGUE) From ASYRSUB
Call ASETTEXTRA(QRY(NBREP).TLA.AXX,"QRY","INTDES",[F:WAXX1]TEXTE,[F:WAXX1]LANGUE) From ASYRSUB
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# TLA --- TABLAN(TLA)
QRY = NewInstance R_TABLAN AllocGroup PQRY
QRY.TLA.AXX(1) = NewInstance C_ATXTTRA AllocGroup QRY
QRY.TLA.AXX(2) = NewInstance C_ATXTTRA AllocGroup QRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:TLA]AUUID)>0 & [F:TLA]AUUID=NullUuid
 [F:TLA]AUUID = getUuid
Endif
SetInstance QRY.TLA With [F:TLA]
QRY.TLA.AXX(1).PRO = "INTSHO"
QRY.TLA.AXX(1).LAN = [F:WAXX2]LANGUE
QRY.TLA.AXX(1).TEX = [F:WAXX2]TEXTE
QRY.TLA.AXX(1).FLG = 1
QRY.TLA.AXX(2).PRO = "INTDES"
QRY.TLA.AXX(2).LAN = [F:WAXX1]LANGUE
QRY.TLA.AXX(2).TEX = [F:WAXX1]TEXTE
QRY.TLA.AXX(2).FLG = 1
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0TABLAN
CURQRY = "R_TABLAN"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).TLA.LAN.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.TLA.LAN.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "LAN" : TBFIL(NBPRO) = "[F:TLA]LAN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TLA.LAN"
NBPRO += 1 : TBPRO(NBPRO) = "INTDES" : TBFIL(NBPRO) = "[F:WAXX1]TEXTE"
           : TBTYP(NBPRO) = 26 : TBPTH(NBPRO) = "TLA.INTDES"
NBPRO += 1 : TBPRO(NBPRO) = "INTSHO" : TBFIL(NBPRO) = "[F:WAXX2]TEXTE"
           : TBTYP(NBPRO) = 26 : TBPTH(NBPRO) = "TLA.INTSHO"
NBPRO += 1 : TBPRO(NBPRO) = "LANSTD" : TBFIL(NBPRO) = "[F:TLA]LANSTD"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "TLA.LANSTD"
NBPRO += 1 : TBPRO(NBPRO) = "LANISO" : TBFIL(NBPRO) = "[F:TLA]LANISO"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TLA.LANISO"
NBPRO += 1 : TBPRO(NBPRO) = "LANCON" : TBFIL(NBPRO) = "[F:TLA]LANCON"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "TLA.LANCON"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:TLA]LAN"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From TABLAN_RSTD
Gosub EVENTS From TABLAN_RSTD
Return
 


