#<AdxTL>@(#)0.0.0.0 $Revision$Class Stage
# Supervisor
## CRUD-CLASSE ## YSTA
# 2018-09-21 18:14:38 907

Gosub TEST From WMCR_YSTA : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YSTAID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YSTA : YSTAGE
# YSRG : YSTAGE YSTAGREG
# YSLD : YSTAGE YSTAYLD
# YSLT : YSTAGE YLOT
# YSLL : YSTAGE YSALCTR
# YREL : YSTAGE YRELMAST
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YSTA._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5,A_N6,A_S6
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YSTA.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YSTA.ACTX.AFOLDER,nomap,"")>0
 Local File YSTAGE [YSTG]
 Local File YSTAGREG [YSRG]
 Local File YSTAYLD [YSLD]
 Local File YLOT [YLOT]
 Local File YSALCTR [YSLC]
 Local File YRELMAST [YRMA]
Else
 Local File =YSTA.ACTX.AFOLDER+".YSTAGE" [YSTG]
 Local File =YSTA.ACTX.AFOLDER+".YSTAGREG" [YSRG]
 Local File =YSTA.ACTX.AFOLDER+".YSTAYLD" [YSLD]
 Local File =YSTA.ACTX.AFOLDER+".YLOT" [YLOT]
 Local File =YSTA.ACTX.AFOLDER+".YSALCTR" [YSLC]
 Local File =YSTA.ACTX.AFOLDER+".YRELMAST" [YRMA]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YSTA.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YSTG] With
& [YSRG]YSTRG0 = [F:YSTG]YSTAID,
& [YSLD]YSLD0 = [F:YSTG]YSTAID,
& [YLOT]YLOT0 = [F:YSTG]YSTAID,
& [YSLC]YSLC0 = [F:YSTG]YSTAID,
& [YRMA]YRMA0 = [F:YSTG]YGUID
& As [LNK_]
Return

############################################################################################
### YSTAGE(WYSTG)
############################################################################################
Funprog  _MAJSQL_YSTAGE(WYSTG)
Variable Instance WYSTG Using C_YSTA
Local Integer ASTATUS,A_I,A_J
Default File [F:YSTG]
If WYSTG.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSTG) From ASYRSUB
 SetInstance [F:YSTG] With WYSTG
 Write [F:YSTG]
 If fstat
  Call FSTA("YSTG",WYSTG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSTG.updTick = [F:YSTG]updTick
Elsif WYSTG.ASTALIN=[V]CST_ALL or WYSTG.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSTG) From ASYRSUB
 SetInstance [F:YSTG] With WYSTG
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSTG,"YSTAGE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSTG]YSTG0 = [F:YSTG]YSTAID
 If fstat
  Call FSTA("YSTG",WYSTG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSTG.updTick = [F:YSTG]updTick
Elsif WYSTG.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSTG] With WYSTG
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSTG,"YSTAGE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSTG]YSTG0 = [F:YSTG]YSTAID
 If fstat
  Call FSTA("YSTG",WYSTG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSTAGREG(WYSRG)
############################################################################################
Funprog  _MAJSQL_YSTAGREG(WYSRG)
Variable Instance WYSRG Using C_YSRG
Local Integer ASTATUS,A_I,A_J
Default File [F:YSRG]
If WYSRG.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSRG) From ASYRSUB
 SetInstance [F:YSRG] With WYSRG
 Write [F:YSRG]
 If fstat
  Call FSTA("YSRG",WYSRG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSRG.updTick = [F:YSRG]updTick
Elsif WYSRG.ASTALIN=[V]CST_ALL or WYSRG.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSRG) From ASYRSUB
 SetInstance [F:YSRG] With WYSRG
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSRG,"YSTAGREG")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSRG]YSTRG0 = [F:YSRG]YSTAID;[F:YSRG]YTITREGDAT
 If fstat
  Call FSTA("YSRG",WYSRG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSRG.updTick = [F:YSRG]updTick
Elsif WYSRG.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSRG] With WYSRG
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSRG,"YSTAGREG")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSRG]YSTRG0 = [F:YSRG]YSTAID;[F:YSRG]YTITREGDAT
 If fstat
  Call FSTA("YSRG",WYSRG,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSTAYLD(WYSLD)
############################################################################################
Funprog  _MAJSQL_YSTAYLD(WYSLD)
Variable Instance WYSLD Using C_YSLD
Local Integer ASTATUS,A_I,A_J
Default File [F:YSLD]
If WYSLD.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSLD) From ASYRSUB
 SetInstance [F:YSLD] With WYSLD
 Write [F:YSLD]
 If fstat
  Call FSTA("YSLD",WYSLD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSLD.updTick = [F:YSLD]updTick
Elsif WYSLD.ASTALIN=[V]CST_ALL or WYSLD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSLD) From ASYRSUB
 SetInstance [F:YSLD] With WYSLD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSLD,"YSTAYLD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSLD]YSLD0 = [F:YSLD]YSTAID
 If fstat
  Call FSTA("YSLD",WYSLD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSLD.updTick = [F:YSLD]updTick
Elsif WYSLD.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSLD] With WYSLD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSLD,"YSTAYLD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSLD]YSLD0 = [F:YSLD]YSTAID
 If fstat
  Call FSTA("YSLD",WYSLD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLOT(WYLOT)
############################################################################################
Funprog  _MAJSQL_YLOT(WYLOT)
Variable Instance WYLOT Using C_YSLT
Local Integer ASTATUS,A_I,A_J
Default File [F:YLOT]
If WYLOT.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLOT) From ASYRSUB
 SetInstance [F:YLOT] With WYLOT
 Write [F:YLOT]
 If fstat
  Call FSTA("YLOT",WYLOT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLOT.updTick = [F:YLOT]updTick
Elsif WYLOT.ASTALIN=[V]CST_ALL or WYLOT.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLOT) From ASYRSUB
 SetInstance [F:YLOT] With WYLOT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLOT,"YLOT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLOT]YLOT0 = [F:YLOT]YLOTID
 If fstat
  Call FSTA("YLOT",WYLOT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLOT.updTick = [F:YLOT]updTick
Elsif WYLOT.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLOT] With WYLOT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLOT,"YLOT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLOT]YLOT0 = [F:YLOT]YLOTID
 If fstat
  Call FSTA("YLOT",WYLOT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSALCTR(WYSLC)
############################################################################################
Funprog  _MAJSQL_YSALCTR(WYSLC)
Variable Instance WYSLC Using C_YSLL
Local Integer ASTATUS,A_I,A_J
Default File [F:YSLC]
If WYSLC.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSLC) From ASYRSUB
 SetInstance [F:YSLC] With WYSLC
 Write [F:YSLC]
 If fstat
  Call FSTA("YSLC",WYSLC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSLC.updTick = [F:YSLC]updTick
Elsif WYSLC.ASTALIN=[V]CST_ALL or WYSLC.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSLC) From ASYRSUB
 SetInstance [F:YSLC] With WYSLC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSLC,"YSALCTR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSLC]YSLC0 = [F:YSLC]YSLCID
 If fstat
  Call FSTA("YSLC",WYSLC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSLC.updTick = [F:YSLC]updTick
Elsif WYSLC.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSLC] With WYSLC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSLC,"YSALCTR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSLC]YSLC0 = [F:YSLC]YSLCID
 If fstat
  Call FSTA("YSLC",WYSLC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YRELMAST(WYRMA)
############################################################################################
Funprog  _MAJSQL_YRELMAST(WYRMA)
Variable Instance WYRMA Using C_YREL
Local Integer ASTATUS,A_I,A_J
Default File [F:YRMA]
If WYRMA.ASTALIN=[V]CST_ANEW
 Call INICRE(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 Write [F:YRMA]
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ALL or WYRMA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ADEL
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



