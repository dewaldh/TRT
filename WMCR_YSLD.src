#<AdxTL>@(#)0.0.0.0 $Revision$Class Stage lot yields
# Supervisor
## CRUD-CLASSE ## YSLD
# 2018-11-20 04:57:25 185


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSTAYLD [YSLD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YSLD") From ASYRCOM : Endif
Local Instance YSLD Using C_YSLD

If !SILENCE : Call TRACE("3 --> New Instance C_YSLD") From ASYRCOM : Endif
YSLD = NewInstance C_YSLD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YSLD_]YSLD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSLD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSLD.AREAD([YSLD_]YSTAID,[YSLD_]YLINE))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSLD.YSTAID ="-num$(YSLD.YSTAID)) From ASYRCOM
 Call TRACE("YSLD.YLINE ="-num$(YSLD.YLINE)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSLD.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSLD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YSLD_]
FreeGroup YSLD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSLD,ACLE,ASTATUS,_ETAG)
Variable Instance YSLD Using C_YSLD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YSTAID(8)
Local Shortint _YLINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSTAID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YLINE = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File YSTAYLD [YSLD]
Default File [F:YSLD]
Read [F:YSLD]YSLD0 = [L]_YSTAID;[L]_YLINE
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YSLD]UPDTICK)>0
 [L]_ETAG = num$([F:YSLD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSLD,ACLE,ASTATUS)
Variable Instance YSLD Using C_YSLD
Value Char ACLE
Variable Integer ASTATUS
Local Char _YSTAID(8)
Local Shortint _YLINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSTAID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YLINE = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSLD.AREAD([L]_YSTAID,[L]_YLINE))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSLD,_YSTAID,_YLINE,ASTATUS)
Variable Instance YSLD Using C_YSLD
Value Char _YSTAID
Value Shortint _YLINE
Variable Integer ASTATUS

If YSLD = null : End : Endif

Gosub AVARIABLES From WMC00YSLD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSLD.APARENT=null
 [L]A_I = YSLD.freeSnapshot
 YSLD.snapshotEnabled = 0
 YSLD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YSLD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YSLD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YSLD.APARENT=null
 YSLD.snapshotEnabled = 1
 YSLD.setAccessorEnabled = 1
Endif
LogicClose File [YSLD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YSLD._ACTION_PARAM("AREAD_BEFORE",[L]_YSTAID,[L]_YLINE))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YSLD]
Read [F:YSLD]YSLD0 = [L]_YSTAID;[L]_YLINE
If fstat
[L]A_ERROR = [L]_YSTAID+"~"+num$([L]_YLINE)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSLD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YSLD]AUUID)>0 & [F:YSLD]AUUID=NullUuid
 [F:YSLD]AUUID = getUuid
Endif
SetInstance YSLD With [F:YSLD]
YSLD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YSLD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



