#<AdxTL>@(#)0.0.0.0 $Revision$Class Change managers
# Supervisor
## CRUD-CLASSE ## CCMAUSCM
# 2018-08-27 13:09:36 580


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AUTILIS [AUS_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMAUSCM") From ASYRCOM : Endif
Local Instance CCMAUSCM Using R_CCMAUSCM

If !SILENCE : Call TRACE("3 --> New Instance R_CCMAUSCM") From ASYRCOM : Endif
CCMAUSCM = NewInstance R_CCMAUSCM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AUS_]CODUSR First
If !fstat
 If !SILENCE : Call TRACE("Call program read of AUTILIS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMAUSCM.AREAD([AUS_]USR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMAUSCM.AUS.USR ="-num$(CCMAUSCM.AUS.USR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMAUSCM.AUS.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMAUSCM.AUS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AUS_]
FreeGroup CCMAUSCM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMAUSCM,ACLE,ASTATUS,_ETAG)
Variable Instance CCMAUSCM Using R_CCMAUSCM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AUTILIS [AUS]
Default File [F:AUS]
Read [F:AUS]CODUSR = [L]_USR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AUS]UPDTICK)>0
 [L]_ETAG = num$([F:AUS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMAUSCM,ACLE,ASTATUS)
Variable Instance CCMAUSCM Using R_CCMAUSCM
Value Char ACLE
Variable Integer ASTATUS
Local Char _USR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_USR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMAUSCM.AREAD([L]_USR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMAUSCM,_USR,ASTATUS)
Variable Instance CCMAUSCM Using R_CCMAUSCM
Value Char _USR
Variable Integer ASTATUS

If CCMAUSCM = null : End : Endif

Gosub AVARIABLES From WMR00CCMAUSCM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMAUSCM.APARENT=null
 [L]A_I = CCMAUSCM.freeSnapshot
 CCMAUSCM.snapshotEnabled = 0
 CCMAUSCM.setAccessorEnabled = 0
Endif

If fmet CCMAUSCM.ACTX.AGETAFCRIGHT(CCMAUSCM,"GESAUS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:AUS]
Read [F:AUS]CODUSR = [L]_USR
If fstat
[L]A_ERROR = [L]_USR
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMAUSCM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:AUS]ACSUSR
If fmet CCMAUSCM.ACTX.AGETAFCRIGHTR(CCMAUSCM,"GESAUS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMAUSCM.ACTX.AGETACSRIGHTC(CCMAUSCM,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet CCMAUSCM.ACTX.ASTACRITROLE(CCMAUSCM,[L]_USR
& ,"AUS","AUS",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet CCMAUSCM.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  CCMAUSCM.AUS.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet CCMAUSCM.AUS.AREAD([L]_USR))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet CCMAUSCM.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & CCMAUSCM.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet CCMAUSCM._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If CCMAUSCM.APARENT=null
   CCMAUSCM.snapshotEnabled = 1
   CCMAUSCM.setAccessorEnabled = 1
  Endif
  LogicClose File [AUS] ,[BPA] ,[BID]
  End
  


