#<AdxTL>@(#)0.0.0.0 $Revision$Class Task
# Supervisor
## CRUD-CLASSE ## PJMTSK
# 2018-09-17 03:52:08 224


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMTSK,ASTATUS)
Variable Instance PJMTSK Using C_PJMTSK
Variable Integer ASTATUS

If PJMTSK = null : End : Endif

Gosub _AVARIABLES From WMC00PJMTSK

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMTSK

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMTSK,ASTATUS)
Variable Instance PJMTSK Using C_PJMTSK
Variable Integer ASTATUS

If PJMTSK = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSK
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMTSK
Else
 Gosub ADELETE_PJMTSK
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMTSK,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMTSK.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMTSK.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.RITT) : # PJMTSKITM -- 2
 If PJMTSK.RITT(A_N2) <> null
& and PJMTSK.RITT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTSK.RITT(A_N2).ASTALIN<>[V]CST_ANEW
   PJMTSK.RITT(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.RTKO) : # PJMTSKOPE -- 3
 If PJMTSK.RTKO(A_N2) <> null
& and PJMTSK.RTKO(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTSK.RTKO(A_N2).ASTALIN<>[V]CST_ANEW
   PJMTSK.RTKO(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
& and PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 If PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEW
  PJMTSK.PIMPL(A_N2).ASTALIN = [V]CST_ADEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._ADELETE_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.SPLD) : # PJMSALITMD -- 5
 If PJMTSK.SPLD(A_N2) <> null
& and PJMTSK.SPLD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMTSK.SPLD(A_N2).ASTALIN<>[V]CST_ANEW
   PJMTSK.SPLD(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(PJMTSK.RITT) : # PJMTSKITM -- 2
 If PJMTSK.RITT(A_N2) <> null
& and PJMTSK.RITT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.RTKO) : # PJMTSKOPE -- 3
 If PJMTSK.RTKO(A_N2) <> null
& and PJMTSK.RTKO(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
& and PJMTSK.PIMPL(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._ADELETE_CONTROL_AFTER)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMTSK.SPLD) : # PJMSALITMD -- 5
 If PJMTSK.SPLD(A_N2) <> null
& and PJMTSK.SPLD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMTSK
Trbegin [F:PJTA]
 Gosub ADELETE_PJMTSK
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMTSK
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(PJMTSK.RITT)
 If PJMTSK.RITT(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RITT(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(PJMTSK.RTKO)
 If PJMTSK.RTKO(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.RTKO(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
A_N2=1
If PJMTSK.PIMPL(A_N2) <> null
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.PIMPL(A_N2)._ADELETE)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(PJMTSK.SPLD)
 If PJMTSK.SPLD(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.SPLD(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMTSK,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMTSK.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSK.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSK.AGETATTRIBUTE("TASDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSK._MAJSQL_PJMTSK_TASDESTEX(PJMTSK,PJMTSK.TASDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMTSK.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSK.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSK.AGETATTRIBUTE("TASCOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSK._MAJSQL_PJMTSK_TASCOMTEX(PJMTSK,PJMTSK.TASCOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMTSK._MAJSQL_PJMTSK(PJMTSK))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSK.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMTSK.snapshotEnabled=1
 [L]A_RETIK = PJMTSK.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMTSK.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



