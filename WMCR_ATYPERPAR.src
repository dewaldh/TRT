#<AdxTL>@(#)0.0.0.0 $Revision$Class Data type parameters
# Supervisor
## CRUD-CLASSE ## ATYPERPAR
# 2018-08-27 12:23:46 436


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ATYPERPAR [ATYRP_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ATYPERPAR") From ASYRCOM : Endif
Local Instance ATYPERPAR Using C_ATYPERPAR

If !SILENCE : Call TRACE("3 --> New Instance C_ATYPERPAR") From ASYRCOM : Endif
ATYPERPAR = NewInstance C_ATYPERPAR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ATYRP_]ATYRP0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ATYPERPAR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ATYPERPAR.AREAD([ATYRP_]CODTYP,[ATYRP_]TYPRUL,[ATYRP_]TRTRUL,[ATYRP_]PRGRUL,[ATYRP_]PARCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ATYPERPAR.CODTYP ="-num$(ATYPERPAR.CODTYP)) From ASYRCOM
 Call TRACE("ATYPERPAR.TYPRUL ="-num$(ATYPERPAR.TYPRUL)) From ASYRCOM
 Call TRACE("ATYPERPAR.TRTRUL ="-num$(ATYPERPAR.TRTRUL)) From ASYRCOM
 Call TRACE("ATYPERPAR.PRGRUL ="-num$(ATYPERPAR.PRGRUL)) From ASYRCOM
 Call TRACE("ATYPERPAR.PARCOD ="-num$(ATYPERPAR.PARCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ATYPERPAR.AKEYS)
  Call TRACE("-"-num$(I)-":"-ATYPERPAR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ATYRP_]
FreeGroup ATYPERPAR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ATYPERPAR,ACLE,ASTATUS,_ETAG)
Variable Instance ATYPERPAR Using C_ATYPERPAR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODTYP(8)
Local Tinyint _TYPRUL
Local Char _TRTRUL(30)
Local Char _PRGRUL(30)
Local Char _PARCOD(50)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODTYP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TYPRUL = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_TRTRUL = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PRGRUL = num$([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_PARCOD = num$([L]CLE(5)) : Endif
Raz [L]_ETAG
Local File ATYPERPAR [ATYRP]
Default File [F:ATYRP]
Read [F:ATYRP]ATYRP0 = [L]_CODTYP;[L]_TYPRUL;[L]_TRTRUL;[L]_PRGRUL;[L]_PARCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ATYRP]UPDTICK)>0
 [L]_ETAG = num$([F:ATYRP]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ATYPERPAR,ACLE,ASTATUS)
Variable Instance ATYPERPAR Using C_ATYPERPAR
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODTYP(8)
Local Tinyint _TYPRUL
Local Char _TRTRUL(30)
Local Char _PRGRUL(30)
Local Char _PARCOD(50)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODTYP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TYPRUL = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_TRTRUL = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PRGRUL = num$([L]CLE(4)) : Endif
If [L]CLE(5)<>"" : [L]_PARCOD = num$([L]CLE(5)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATYPERPAR.AREAD([L]_CODTYP,[L]_TYPRUL,[L]_TRTRUL,[L]_PRGRUL,[L]_PARCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ATYPERPAR,_CODTYP,_TYPRUL,_TRTRUL,_PRGRUL,_PARCOD,ASTATUS)
Variable Instance ATYPERPAR Using C_ATYPERPAR
Value Char _CODTYP
Value Tinyint _TYPRUL
Value Char _TRTRUL
Value Char _PRGRUL
Value Char _PARCOD
Variable Integer ASTATUS

If ATYPERPAR = null : End : Endif

Gosub AVARIABLES From WMC00ATYPERPAR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ATYPERPAR.APARENT=null
 [L]A_I = ATYPERPAR.freeSnapshot
 ATYPERPAR.snapshotEnabled = 0
 ATYPERPAR.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ATYPERPAR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ATYPERPAR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ATYPERPAR.APARENT=null
 ATYPERPAR.snapshotEnabled = 1
 ATYPERPAR.setAccessorEnabled = 1
Endif
LogicClose File [ATYRP]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ATYPERPAR._ACTION_PARAM("AREAD_BEFORE",[L]_CODTYP,[L]_TYPRUL,[L]_TRTRUL,[L]_PRGRUL,[L]_PARCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:ATYRP]
Read [F:ATYRP]ATYRP0 = [L]_CODTYP;[L]_TYPRUL;[L]_TRTRUL;[L]_PRGRUL;[L]_PARCOD
If fstat
[L]A_ERROR = [L]_CODTYP+"~"+num$([L]_TYPRUL)+"~"+[L]_TRTRUL+"~"+[L]_PRGRUL+"~"+[L]_PARCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATYPERPAR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:ATYRP]AUUID)>0 & [F:ATYRP]AUUID=NullUuid
 [F:ATYRP]AUUID = getUuid
Endif
SetInstance ATYPERPAR With [F:ATYRP]
ATYPERPAR.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ATYPERPAR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [ATX] Where NUMERO=[F:ATYRP]PARTIT
 Call ASETTEXT(ATYPERPAR.ATX,ATYPERPAR.AllocGrp,"PARTIT",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
Next ATX

Return



