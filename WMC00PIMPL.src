#<AdxTL>@(#)0.0.0.0 $Revision$Class Project link
# Supervisor
## CRUD-CLASSE ## PIMPL
# 2018-08-27 12:38:58 629

Gosub TEST From WMCR_PIMPL : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,PIMNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# PIMPL : PIMPL
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet PIMPL._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = PIMPL.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(PIMPL.ACTX.AFOLDER,nomap,"")>0
 Local File PIMPL [PIM]
 Local File PIMPL [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =PIMPL.ACTX.AFOLDER+".PIMPL" [PIM]
 Local File =PIMPL.ACTX.AFOLDER+".PIMPL" [AAA_]
 Local File =PIMPL.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet PIMPL.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [PIM] With
& [AAA_]PIM0 = PIMNUM
& As [LNK_]
Return

############################################################################################
### PIMPL(WPIM)
############################################################################################
Funprog  _MAJSQL_PIMPL(WPIM)
Variable Instance WPIM Using C_PIMPL
Local Integer ASTATUS,A_I,A_J
Default File [F:PIM]
If WPIM.ASTALIN=[V]CST_ANEW
 Call INICRE(WPIM) From ASYRSUB
 SetInstance [F:PIM] With WPIM
 For J=1 To maxtab(WPIM.AXX)
  If WPIM.AXX(J)<>null & WPIM.AXX(J).PRO= "PIMDESAXX" & WPIM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIM,WPIM.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIM.AXX(J).LAN,WPIM.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIM.AXX)
  If WPIM.AXX(J)<>null & WPIM.AXX(J).PRO= "PIMDESAX1" & WPIM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIM,WPIM.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIM.AXX(J).LAN,WPIM.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:PIM]
 If fstat
  Call FSTA("PIM",WPIM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPIM.updTick = [F:PIM]updTick
Elsif WPIM.ASTALIN=[V]CST_ALL or WPIM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WPIM) From ASYRSUB
 SetInstance [F:PIM] With WPIM
 For J=1 To maxtab(WPIM.AXX)
  If WPIM.AXX(J)<>null & WPIM.AXX(J).PRO= "PIMDESAXX" & WPIM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIM,WPIM.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIM.AXX(J).LAN,WPIM.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIM.AXX)
  If WPIM.AXX(J)<>null & WPIM.AXX(J).PRO= "PIMDESAX1" & WPIM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WPIM,WPIM.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIM.AXX(J).LAN,WPIM.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPIM,"PIMPL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:PIM]PIM0 = [F:PIM]PIMNUM
 If fstat
  Call FSTA("PIM",WPIM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WPIM.updTick = [F:PIM]updTick
Elsif WPIM.ASTALIN=[V]CST_ADEL
 SetInstance [F:PIM] With WPIM
 For J=1 To maxtab(WPIM.AXX)
  If WPIM.AXX(J)<>null & WPIM.AXX(J).PRO= "PIMDESAXX"
   Call SUPTEXTRA(WPIM,WPIM.AXX(J).TEX,"PIMPL","PIMDESAXX",WPIM.AXX(J).LAN,WPIM.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WPIM.AXX)
  If WPIM.AXX(J)<>null & WPIM.AXX(J).PRO= "PIMDESAX1"
   Call SUPTEXTRA(WPIM,WPIM.AXX(J).TEX,"PIMPL","PIMDESAX1",WPIM.AXX(J).LAN,WPIM.PIMNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WPIM,"PIMPL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:PIM]PIM0 = [F:PIM]PIMNUM
 If fstat
  Call FSTA("PIM",WPIM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



