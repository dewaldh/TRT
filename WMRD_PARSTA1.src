#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical triggers
# Supervisor
## CRUD-CLASSE ## PARSTA1
# 2018-08-27 13:20:43 844


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PARSTA1,ASTATUS)
Variable Instance PARSTA1 Using R_PARSTA1
Variable Integer ASTATUS

If PARSTA1 = null : End : Endif

Gosub AVARIABLES From WMR00PARSTA1
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet PARSTA1.ACTX.AGETAFCRIGHT(PARSTA1,"GESPS1",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet PARSTA1.ACTX.AGETAFCRIGHTD(PARSTA1,"GESPS1",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PARSTA1
Else
 Gosub ADELETE_PARSTA1
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
PARSTA1.ASTALIN = [V]CST_ADEL
PARSTA1.PS1.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PARSTA1.PS1,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PARSTA1.PS1.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PARSTA1.PS1.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.PS1.CRICOL)
 If PARSTA1.PS1.CRICOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.CRICOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.PS1.TBLCOL)
 If PARSTA1.PS1.TBLCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.TBLCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.PS1.VARCOL)
 If PARSTA1.PS1.VARCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.VARCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

For [L]A_I=1 To maxtab(PARSTA1.PS1.CRICOL)
 If PARSTA1.PS1.CRICOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.CRICOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.PS1.TBLCOL)
 If PARSTA1.PS1.TBLCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.TBLCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA1.PS1.VARCOL)
 If PARSTA1.PS1.VARCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.VARCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PARSTA1
Trbegin [F:PS1]
 Gosub ADELETE_PARSTA1
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_PARSTA1
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PARSTA1.snapshotEnabled=1
 [L]A_RETIK = PARSTA1.revertUpdTick
Endif
[L]ASTATUS = max(fmet PARSTA1.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



