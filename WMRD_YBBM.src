#<AdxTL>@(#)0.0.0.0 $Revision$Class Business batch
# Sage X3 supervisor
## CRUD-CLASSE ## YBBM
# 2018-04-30 06:20:15 847


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(YBBM,ASTATUS)
Variable Instance YBBM Using R_YBBM
Variable Integer ASTATUS

If YBBM = null : End : Endif

Gosub AVARIABLES From WMR00YBBM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_YBBM
Else
 Gosub ADELETE_YBBM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
YBBM.ASTALIN = [V]CST_ADEL
YBBM.YBBH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(YBBM.YBBH,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If YBBM.YBBH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YBBM.YBBH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.YBBH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet YBBM.YBBH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_YBBM
Trbegin [F:YBBH]
 Gosub ADELETE_YBBM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_YBBM
[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBM.YBBH._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YBBM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If YBBM.snapshotEnabled=1
 [L]A_RETIK = YBBM.revertUpdTick
Endif
[L]ASTATUS = max(fmet YBBM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



