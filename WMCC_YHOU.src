#<AdxTL>@(#)0.0.0.0 $Revision$Class Housing Jobs
# Supervisor
## CRUD-CLASSE ## YHOU
# 2018-11-15 04:03:59 921


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(YHOU,ASTATUS)
Variable Instance YHOU Using C_YHOU
Variable Integer ASTATUS

If YHOU = null : End : Endif

Gosub _AVARIABLES From WMC00YHOU

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_YHOU

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(YHOU,ASTATUS)
Variable Instance YHOU Using C_YHOU
Variable Integer ASTATUS

If YHOU = null : End : Endif

Gosub AVARIABLES From WMC00YHOU
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_YHOU
Else
 Gosub AINSERT_YHOU
Endif

Gosub _AINSERT_AFTER
[L]A_I = YHOU.freeSnapshot
YHOU.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YHOU._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YHOU._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YHOU._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If YHOU.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YHOU.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YHOU.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YHOU.YHJS) : # YHJS -- 2
 If YHOU.YHJS(A_N2) <> null
& and !find(YHOU.YHJS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJS(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YHOU.YHJV) : # YHJV -- 3
 If YHOU.YHJV(A_N2) <> null
& and !find(YHOU.YHJV(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJV(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If YHOU.YHJC(A_N2) <> null
& and !find(YHOU.YHJC(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJC(A_N2)._AINSERT_CONTROL_BEFORE)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHJC(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHJC(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJCON:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YHOU.YHJP(A_N2) <> null
& and !find(YHOU.YHJP(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJP(A_N2)._AINSERT_CONTROL_BEFORE)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHJP(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHJP(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJPEO:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YHOU.YHDH(A_N2) <> null
& and !find(YHOU.YHDH(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHDH(A_N2)._AINSERT_CONTROL_BEFORE)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHDH(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHDH(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJDH:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YHOU.YHJF(A_N2) <> null
& and !find(YHOU.YHJF(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJF(A_N2)._AINSERT_CONTROL_BEFORE)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHJF(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHJF(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJFIN:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(YHOU.YRMA) : # YRMA -- 8
 If YHOU.YRMA(A_N2) <> null
& and !find(YHOU.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YRMA(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(YHOU.YHJS) : # YHJS -- 2
 If YHOU.YHJS(A_N2) <> null
& and !find(YHOU.YHJS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJS(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YHOU.YHJV) : # YHJV -- 3
 If YHOU.YHJV(A_N2) <> null
& and !find(YHOU.YHJV(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJV(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If YHOU.YHJC(A_N2) <> null
& and !find(YHOU.YHJC(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJC(A_N2)._AINSERT_CONTROL_AFTER)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHJC(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHJC(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJCON:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YHOU.YHJP(A_N2) <> null
& and !find(YHOU.YHJP(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJP(A_N2)._AINSERT_CONTROL_AFTER)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHJP(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHJP(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJPEO:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YHOU.YHDH(A_N2) <> null
& and !find(YHOU.YHDH(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHDH(A_N2)._AINSERT_CONTROL_AFTER)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHDH(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHDH(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJDH:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YHOU.YHJF(A_N2) <> null
& and !find(YHOU.YHJF(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJF(A_N2)._AINSERT_CONTROL_AFTER)
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
A_N2=1
If YHOU.YHJF(A_N2).ASTALIN<>[V]CST_ADEL & YHOU.YHJF(A_N2).ASTALIN<>[V]CST_ANEWDEL
 [L]A_OK1 = 1
Endif
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YHOU,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"YHOUJFIN:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(YHOU.YRMA) : # YRMA -- 8
 If YHOU.YRMA(A_N2) <> null
& and !find(YHOU.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YRMA(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YHOU.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_YHOU
Trbegin [F:YHJD]
 Gosub AINSERT_YHOU
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_YHOU
Raz [F:YHJD]
[L]ASTATUS = max([L]ASTATUS,fmet YHOU.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00YHOU._MAJSQL_YHOUJDET(YHOU))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
For A_N2=1 To maxtab(YHOU.YHJS)
 If YHOU.YHJS(A_N2) <> null and
& (YHOU.YHJS(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YHJS(A_N2).ASTALIN=[V]CST_ALL)
  If YHOU.YHJS(A_N2).ASTALIN=[L]A_TYPMAJ
   Case YHOU.YHJS(A_N2).ASTALIN
    When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJS(A_N2)._AUPDATE)
    When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJS(A_N2)._AINSERT)
    When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJS(A_N2)._ADELETE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(YHOU.YHJV)
 If YHOU.YHJV(A_N2) <> null and
& (YHOU.YHJV(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YHJV(A_N2).ASTALIN=[V]CST_ALL)
  If YHOU.YHJV(A_N2).ASTALIN=[L]A_TYPMAJ
   Case YHOU.YHJV(A_N2).ASTALIN
    When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJV(A_N2)._AUPDATE)
    When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJV(A_N2)._AINSERT)
    When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJV(A_N2)._ADELETE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
A_N2=1
If YHOU.YHJC(A_N2) <> null and 
& YHOU.YHJC(A_N2).ASTALIN=[V]CST_ALL
YHOU.YHJC(A_N2).ASTALIN = [V]CST_AUPD
Endif
If YHOU.YHJC(A_N2) <> null and
& (YHOU.YHJC(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YHJC(A_N2).ASTALIN=[V]CST_ALL)
 If YHOU.YHJC(A_N2).ASTALIN=[L]A_TYPMAJ
  Case YHOU.YHJC(A_N2).ASTALIN
   When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJC(A_N2)._AUPDATE)
   When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJC(A_N2)._AINSERT)
   When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJC(A_N2)._ADELETE)
  Endcase
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
A_N2=1
If YHOU.YHJP(A_N2) <> null and 
& YHOU.YHJP(A_N2).ASTALIN=[V]CST_ALL
YHOU.YHJP(A_N2).ASTALIN = [V]CST_AUPD
Endif
If YHOU.YHJP(A_N2) <> null and
& (YHOU.YHJP(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YHJP(A_N2).ASTALIN=[V]CST_ALL)
 If YHOU.YHJP(A_N2).ASTALIN=[L]A_TYPMAJ
  Case YHOU.YHJP(A_N2).ASTALIN
   When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJP(A_N2)._AUPDATE)
   When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJP(A_N2)._AINSERT)
   When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJP(A_N2)._ADELETE)
  Endcase
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
A_N2=1
If YHOU.YHDH(A_N2) <> null and 
& YHOU.YHDH(A_N2).ASTALIN=[V]CST_ALL
YHOU.YHDH(A_N2).ASTALIN = [V]CST_AUPD
Endif
If YHOU.YHDH(A_N2) <> null and
& (YHOU.YHDH(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YHDH(A_N2).ASTALIN=[V]CST_ALL)
 If YHOU.YHDH(A_N2).ASTALIN=[L]A_TYPMAJ
  Case YHOU.YHDH(A_N2).ASTALIN
   When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHDH(A_N2)._AUPDATE)
   When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHDH(A_N2)._AINSERT)
   When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHDH(A_N2)._ADELETE)
  Endcase
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
A_N2=1
If YHOU.YHJF(A_N2) <> null and 
& YHOU.YHJF(A_N2).ASTALIN=[V]CST_ALL
YHOU.YHJF(A_N2).ASTALIN = [V]CST_AUPD
Endif
If YHOU.YHJF(A_N2) <> null and
& (YHOU.YHJF(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YHJF(A_N2).ASTALIN=[V]CST_ALL)
 If YHOU.YHJF(A_N2).ASTALIN=[L]A_TYPMAJ
  Case YHOU.YHJF(A_N2).ASTALIN
   When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJF(A_N2)._AUPDATE)
   When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJF(A_N2)._AINSERT)
   When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YHJF(A_N2)._ADELETE)
  Endcase
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(YHOU.YRMA)
 If YHOU.YRMA(A_N2) <> null and
& (YHOU.YRMA(A_N2).ASTALIN=[L]A_TYPMAJ or
& YHOU.YRMA(A_N2).ASTALIN=[V]CST_ALL)
  If YHOU.YRMA(A_N2).ASTALIN=[L]A_TYPMAJ
   Case YHOU.YRMA(A_N2).ASTALIN
    When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YRMA(A_N2)._AUPDATE)
    When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YRMA(A_N2)._AINSERT)
    When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet YHOU.YRMA(A_N2)._ADELETE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YHOU.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If YHOU.snapshotEnabled=1
 [L]A_RETIK = YHOU.revertUpdTick
Endif
[L]ASTATUS = max(fmet YHOU.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(YHOU.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YHOU.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YHOU.YHJS)
 If YHOU.YHJS(A_N2) <> null
  [L]ASTATUS2 = fmet YHOU.YHJS(A_N2)._AINSERT_AFTER
  If YHOU.YHJS(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YHJS(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YHOU.YHJS(A_N2)
   YHOU.YHJS(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YHOU.YHJV)
 If YHOU.YHJV(A_N2) <> null
  [L]ASTATUS2 = fmet YHOU.YHJV(A_N2)._AINSERT_AFTER
  If YHOU.YHJV(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YHJV(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YHOU.YHJV(A_N2)
   YHOU.YHJV(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
A_N2=1
If YHOU.YHJC(A_N2) <> null
 [L]ASTATUS2 = fmet YHOU.YHJC(A_N2)._AINSERT_AFTER
 If YHOU.YHJC(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YHJC(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YHOU.YHJC(A_N2)
  YHOU.YHJC(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
A_N2=1
If YHOU.YHJP(A_N2) <> null
 [L]ASTATUS2 = fmet YHOU.YHJP(A_N2)._AINSERT_AFTER
 If YHOU.YHJP(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YHJP(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YHOU.YHJP(A_N2)
  YHOU.YHJP(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
A_N2=1
If YHOU.YHDH(A_N2) <> null
 [L]ASTATUS2 = fmet YHOU.YHDH(A_N2)._AINSERT_AFTER
 If YHOU.YHDH(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YHDH(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YHOU.YHDH(A_N2)
  YHOU.YHDH(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
A_N2=1
If YHOU.YHJF(A_N2) <> null
 [L]ASTATUS2 = fmet YHOU.YHJF(A_N2)._AINSERT_AFTER
 If YHOU.YHJF(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YHJF(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YHOU.YHJF(A_N2)
  YHOU.YHJF(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YHOU.YRMA)
 If YHOU.YRMA(A_N2) <> null
  [L]ASTATUS2 = fmet YHOU.YRMA(A_N2)._AINSERT_AFTER
  If YHOU.YRMA(A_N2).ASTALIN=[V]CST_ADEL or YHOU.YRMA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YHOU.YRMA(A_N2)
   YHOU.YRMA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



