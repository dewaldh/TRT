#<AdxTL>@(#)0.0.0.0 $Revision$Class Main product
# Sage X3 supervisor
## CRUD-CLASSE ## PJMTSKITM
# 2018-06-20 06:52:55 161


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(PJMTSKITM,ASTATUS)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Variable Integer ASTATUS

If PJMTSKITM = null : End : Endif

Gosub _AVARIABLES From WMC00PJMTSKITM

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_PJMTSKITM

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PJMTSKITM,ASTATUS)
Variable Instance PJMTSKITM Using C_PJMTSKITM
Variable Integer ASTATUS

If PJMTSKITM = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSKITM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
PJMTSKITM.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PJMTSKITM
Else
 Gosub AUPDATE_PJMTSKITM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PJMTSKITM.freeSnapshot
PJMTSKITM.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PJMTSKITM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PJMTSKITM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PJMTSKITM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PJMTSKITM.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMTSKITM.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PJMTSKITM.ASTALIN)<>""
 [L]A_ASTALIN = PJMTSKITM.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(PJMTSKITM.ASTALIN)<>""
 [L]A_ASTALIN = PJMTSKITM.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PJMTSKITM
Trbegin [F:JTT]
 Gosub AUPDATE_PJMTSKITM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_PJMTSKITM
[L]A_ASTALIN = PJMTSKITM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMTSKITM.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSKITM.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSKITM.AGETATTRIBUTE("ITTDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSKITM._MAJSQL_PJMTSKITM_ITTDESTEX(PJMTSKITM,PJMTSKITM.ITTDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMTSKITM.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTSKITM.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTSKITM.AGETATTRIBUTE("ITTCOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTSKITM._MAJSQL_PJMTSKITM_ITTCOMTEX(PJMTSKITM,PJMTSKITM.ITTCOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMTSKITM._MAJSQL_PJMTSKITM(PJMTSKITM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = PJMTSKITM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKITM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PJMTSKITM.snapshotEnabled=1
 [L]A_RETIK = PJMTSKITM.revertUpdTick
Endif

[L]ASTATUS = max(fmet PJMTSKITM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PJMTSKITM.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PJMTSKITM.ASTALIN = [V]CST_ALL
Endif
Return



