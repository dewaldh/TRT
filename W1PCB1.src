#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PCB1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:07:04"
A_USER  = "ADMIN"
A_STAMP = "20180828000704"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PCB1 [PCB1]
Gosub HORODAT
Local Inpbox "PCB1" From GFONCTION At A_STAMP With A_WINDPREV Mask [PCB1] As [SIM_]
Grizo [PCB1]5
Grizo [PCB1]10
Grizo [PCB1]15
Grizo [PCB1]20
Grizo [PCB1]25
Grizo [PCB1]35
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PCB1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=52 : Y1(0)=1 : Y2(0)=9
X1(1)=53 : X2(1)=80 : Y1(1)=1 : Y2(1)=6
X1(2)=1 : X2(2)=33 : Y1(2)=10 : Y2(2)=24
X1(3)=34 : X2(3)=52 : Y1(3)=10 : Y2(3)=24
X1(4)=53 : X2(4)=80 : Y1(4)=10 : Y2(4)=24
X1(5)=53 : X2(5)=80 : Y1(5)=7 : Y2(5)=9
Return

$ON_MPSALTTYP
Onevent BEFORE_INPUT Call AS_MPSALTTYP(zc) From W1PCB1
Onevent INIT_AREA Call D_MPSALTTYP(zc) From W1PCB1
Onevent CONTROL Call C_MPSALTTYP(zc) From W1PCB1
Return

Subprog D_MPSALTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSALTTYP,indice)=0
 VALEUR = 2+(GMODU(8)<>2)
Endif
Gosub _AFF
End

Subprog AS_MPSALTTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(224) From COMBOS
## Action STD
Call AS_MPSALTTYP(VALEUR) From SUBPCB
If mkstat=2
 [M]MPSALTTYP(INDIC) = VALEUR
 Affzo MPSALTTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,224,1))))
Endif
If !mkstat
 Discombo 0 From MPSALTTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From MPSALTTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_MPSALTTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_MPSBOMALT
Onevent CONTROL Call C_MPSBOMALT(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSBOMALT(zc) From W1PCB1
Onevent AFTER_CHANGE Gosub AMM_MPSBOMALT From W1PCB1
Return

Subprog AS_MPSBOMALT(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3570,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_MPSBOMALT(zc) From W1PCB1
Onkey   2 Titled GBOUTS Call S_MPSBOMALT(zc) From W1PCB1
Onkey 144 Titled GBOUTP Call P_MPSBOMALT(zc) From W1PCB1
Gosub _AFF
End

Subprog C_MPSBOMALT(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MPSBOMALT" : GZNUM = 11742 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTNUM("TBO","",VALEUR,num$([M:PCB1]MPSALTTYP),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "MPSBOMALT" : GZNUM = 11742 : Endif
 If !mkstat
  ## Action STD
  Call C_MPSBOMALT(VALEUR) From SUBPCB
  If mkstat : GERR = 1 : GZONE = "MPSBOMALT" : GZNUM = 11742 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_MPSBOMALT
Call AM_MPSBOMALT(zc)
If !mkstat & GOBJET
 zoncou = "MPSBOMALT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MPSBOMALT(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZMPSBOMALT)")>indice
 [M]MPSBOMALT(indice) = VALEUR
 Affzo ZMPSBOMALT(indice)
Endif
Gosub _AFF
End

Subprog S_MPSBOMALT(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELBOMALTM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELBOMALTM"
 PARMSK(1) = [M:PCB0]STOFCY
 PARMSK(2) = num$(2+2*([M:PCB1]MPSALTTYP=3))
 Call S_LIS_NUM(VALEUR,PARMSK,"SELBOMALTM","TRTBOM","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_MPSBOMALT(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TBO",VALCHAR,num$([M:PCB1]MPSALTTYP)) From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_MPSBOMALT(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = num$([M:PCB1]MPSALTTYP)
Call VISU("TBO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZMPSBOMALT
Onevent BEFORE_AREA Gosub AV_ZMPSBOMALT From W1PCB1
Return

$AV_ZMPSBOMALT
Call LECTEXTRA(zc,"TABBOMALT","TBODESAXX",num$([M:PCB1]MPSALTTYP),num$([M]MPSBOMALT(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_MPSTWD
Onevent CONTROL Call C_MPSTWD(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSTWD(zc) From W1PCB1
Onevent AFTER_CHANGE Gosub AMM_MPSTWD From W1PCB1
Onevent INIT_AREA Call D_MPSTWD(zc) From W1PCB1
Return

Subprog D_MPSTWD(VALEUR)
Variable Char    VALEUR()
If varinit([M]MPSTWD,indice)=0
 VALEUR = string$(GMODU(8)=2,GPLNTWD)
Endif
Gosub _AFF
End

Subprog AS_MPSTWD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3514,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_MPSTWD(zc) From W1PCB1
Onkey   2 Titled GBOUTS Call S_MPSTWD(zc) From W1PCB1
Onkey 144 Titled GBOUTP Call P_MPSTWD(zc) From W1PCB1
Onkey 146 Titled GBOUTA Call SA_MPSTWD(zc) From W1PCB1
Gosub _AFF
End

Subprog C_MPSTWD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "MPSTWD" : GZNUM = 1809 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("TWD","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "MPSTWD" : GZNUM = 1809 : Endif
Endif
Gosub _AFF
End

$AMM_MPSTWD
Call AM_MPSTWD(zc)
If !mkstat & GOBJET
 zoncou = "MPSTWD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MPSTWD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZMPSTWD)")>indice
 [M]MPSTWD(indice) = VALEUR
 Affzo ZMPSTWD(indice)
Endif
Gosub _AFF
End

Subprog S_MPSTWD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TWD"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_MPSTWD(VALEUR)
Variable Char    VALEUR()
Call OBJET("TWD",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_MPSTWD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TWD"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_MPSTWD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TWD",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZMPSTWD
Onevent BEFORE_AREA Gosub AV_ZMPSTWD From W1PCB1
Return

$AV_ZMPSTWD
Call LECTEXTRA(zc,"TABWEEDIA","TWDDESAXX",num$([M]MPSTWD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_MPSMFGLTI
Onevent BEFORE_AREA Gosub AV_MPSMFGLTI From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSMFGLTI(zc) From W1PCB1
Onevent CONTROL Call C_MPSMFGLTI(zc) From W1PCB1
Onevent INIT_AREA Call D_MPSMFGLTI(zc) From W1PCB1
Return

$AV_MPSMFGLTI
## Action STD
Call AV_MPSMFGLTI(zc) From SUBPCB
Gosub _AFF
Return

Subprog D_MPSMFGLTI(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSMFGLTI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSMFGLTI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(747) From COMBOS
## Action STD
Call AS_MPSMFGLTI(VALEUR) From SUBPCB
If mkstat=2
 [M]MPSMFGLTI(INDIC) = VALEUR
 Affzo MPSMFGLTI(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,747,1))))
Endif
If !mkstat
 Discombo 0 From MPSMFGLTI(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From MPSMFGLTI(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_MPSMFGLTI(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_MPSMFGLTI(VALEUR) From SUBPCB
If mkstat : GERR = 1 : GZONE = "MPSMFGLTI" : GZNUM = 7428 : Endif
Gosub _AFF
End

$ON_MPSCAPFCT
Onevent INIT_AREA Call D_MPSCAPFCT(zc) From W1PCB1
Return

Subprog D_MPSCAPFCT(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSCAPFCT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSMAXANY
Onevent INIT_AREA Call D_MPSMAXANY(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSMAXANY(zc) From W1PCB1
Return

Subprog D_MPSMAXANY(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSMAXANY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSMAXANY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSPRNFLG
Onevent INIT_AREA Call D_MPSPRNFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSPRNFLG(zc) From W1PCB1
Return

Subprog D_MPSPRNFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSPRNFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSPRNFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSITM
Onevent INIT_AREA Call D_MPSITM(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSITM(zc) From W1PCB1
Return

Subprog D_MPSITM(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSITM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSITM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSITMCOD
Onevent INIT_AREA Call D_MPSITMCOD(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSITMCOD(zc) From W1PCB1
Return

Subprog D_MPSITMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSITMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSITMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSWEENBR
Onevent INIT_AREA Call D_MPSWEENBR(zc) From W1PCB1
Return

Subprog D_MPSWEENBR(VALEUR)
Variable Decimal VALEUR
If varinit([M]MPSWEENBR,indice)=0
 VALEUR = 52
Endif
Gosub _AFF
End

$ON_MPSMONNBR
Onevent CONTROL Call C_MPSMONNBR(zc) From W1PCB1
Return

Subprog C_MPSMONNBR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_MPSMONNBR(VALEUR) From SUBPCB
If mkstat : GERR = 1 : GZONE = "MPSMONNBR" : GZNUM = 3600 : Endif
Gosub _AFF
End

$ON_MPSBUCCOR
Onevent INIT_AREA Call D_MPSBUCCOR(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSBUCCOR(zc) From W1PCB1
Return

Subprog D_MPSBUCCOR(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSBUCCOR,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSBUCCOR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSPHYSTO
Onevent AFTER_AREA Call AP_MPSPHYSTO(zc) From W1PCB1
Onevent INIT_AREA Call D_MPSPHYSTO(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSPHYSTO(zc) From W1PCB1
Return

Subprog D_MPSPHYSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSPHYSTO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSPHYSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_MPSPHYSTO(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_MPSPHYSTO(VALEUR) From SUBPCB
If mkstat : GERR = 1 : GZONE = "MPSPHYSTO" : GZNUM = 17528 : Endif
Gosub _AFF
End

$ON_MPSCTLSTO
Onevent BEFORE_AREA Gosub AV_MPSCTLSTO From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSCTLSTO(zc) From W1PCB1
Onevent INIT_AREA Call D_MPSCTLSTO(zc) From W1PCB1
Return

$AV_MPSCTLSTO
## Action STD
Call AV_MPSCTLSTO(zc) From SUBPCB
Gosub _AFF
Return

Subprog D_MPSCTLSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSCTLSTO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSCTLSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MPSCTLSTO(VALEUR) From SUBPCB
If mkstat=2
 [M]MPSCTLSTO(INDIC) = VALEUR
 Affzo MPSCTLSTO(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSREJSTO
Onevent BEFORE_AREA Gosub AV_MPSREJSTO From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSREJSTO(zc) From W1PCB1
Onevent INIT_AREA Call D_MPSREJSTO(zc) From W1PCB1
Return

$AV_MPSREJSTO
## Action STD
Call AV_MPSREJSTO(zc) From SUBPCB
Gosub _AFF
Return

Subprog D_MPSREJSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSREJSTO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSREJSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MPSREJSTO(VALEUR) From SUBPCB
If mkstat=2
 [M]MPSREJSTO(INDIC) = VALEUR
 Affzo MPSREJSTO(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSTRFSTO
Onevent BEFORE_AREA Gosub AV_MPSTRFSTO From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSTRFSTO(zc) From W1PCB1
Onevent INIT_AREA Call D_MPSTRFSTO(zc) From W1PCB1
Return

$AV_MPSTRFSTO
## Action STD
Call AV_MPSTRFSTO(zc) From SUBPCB
Gosub _AFF
Return

Subprog D_MPSTRFSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSTRFSTO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSTRFSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MPSTRFSTO(VALEUR) From SUBPCB
If mkstat=2
 [M]MPSTRFSTO(INDIC) = VALEUR
 Affzo MPSTRFSTO(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSGHOSTO
Onevent INIT_AREA Call D_MPSGHOSTO(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSGHOSTO(zc) From W1PCB1
Return

Subprog D_MPSGHOSTO(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSGHOSTO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSGHOSTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSSOSFLG
Onevent INIT_AREA Call D_MPSSOSFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSSOSFLG(zc) From W1PCB1
Return

Subprog D_MPSSOSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSSOSFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSSOSFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSSOPFLG
Onevent INIT_AREA Call D_MPSSOPFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSSOPFLG(zc) From W1PCB1
Return

Subprog D_MPSSOPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSSOPFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSSOPFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSSOFFLG
Onevent INIT_AREA Call D_MPSSOFFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSSOFFLG(zc) From W1PCB1
Return

Subprog D_MPSSOFFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSSOFFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSSOFFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSTPSFLG
Onevent INIT_AREA Call D_MPSTPSFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSTPSFLG(zc) From W1PCB1
Return

Subprog D_MPSTPSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSTPSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSTPSFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSTPPFLG
Onevent INIT_AREA Call D_MPSTPPFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSTPPFLG(zc) From W1PCB1
Return

Subprog D_MPSTPPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSTPPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSTPPFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSTPFFLG
Onevent INIT_AREA Call D_MPSTPFFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSTPFFLG(zc) From W1PCB1
Return

Subprog D_MPSTPFFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSTPFFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSTPFFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSWAISTO
Onevent INIT_AREA Call D_MPSWAISTO(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSWAISTO(zc) From W1PCB1
Return

Subprog D_MPSWAISTO(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSWAISTO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSWAISTO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSHORDEM
Onevent INIT_AREA Call D_MPSHORDEM(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSHORDEM(zc) From W1PCB1
Return

Subprog D_MPSHORDEM(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSHORDEM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MPSHORDEM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MPSWOPFLG
Onevent INIT_AREA Call D_MPSWOPFLG(zc) From W1PCB1
Onevent BEFORE_INPUT Call AS_MPSWOPFLG(zc) From W1PCB1
Return

Subprog D_MPSWOPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MPSWOPFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MPSWOPFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2PCB1
Return

$TIT_COL
Gosub TIT_COL From W2PCB1
Return


