#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical rule table
# Supervisor
## CRUD-CLASSE ## TABEECSCH
# 2018-08-27 12:51:24 432


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABEECSCH [TSC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABEECSCH") From ASYRCOM : Endif
Local Instance TABEECSCH Using C_TABEECSCH

If !SILENCE : Call TRACE("3 --> New Instance C_TABEECSCH") From ASYRCOM : Endif
TABEECSCH = NewInstance C_TABEECSCH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TSC_]TSC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABEECSCH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABEECSCH.AREAD([TSC_]EECSCH,[TSC_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABEECSCH.EECSCH ="-num$(TABEECSCH.EECSCH)) From ASYRCOM
 Call TRACE("TABEECSCH.LEG ="-num$(TABEECSCH.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABEECSCH.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABEECSCH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TSC_]
FreeGroup TABEECSCH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABEECSCH,ACLE,ASTATUS,_ETAG)
Variable Instance TABEECSCH Using C_TABEECSCH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _EECSCH(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_EECSCH = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABEECSCH [TSC]
Default File [F:TSC]
Read [F:TSC]TSC0 = [L]_EECSCH;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TSC]UPDTICK)>0
 [L]_ETAG = num$([F:TSC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABEECSCH,ACLE,ASTATUS)
Variable Instance TABEECSCH Using C_TABEECSCH
Value Char ACLE
Variable Integer ASTATUS
Local Char _EECSCH(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_EECSCH = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABEECSCH.AREAD([L]_EECSCH,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABEECSCH,_EECSCH,_LEG,ASTATUS)
Variable Instance TABEECSCH Using C_TABEECSCH
Value Char _EECSCH
Value Char _LEG
Variable Integer ASTATUS

If TABEECSCH = null : End : Endif

Gosub AVARIABLES From WMC00TABEECSCH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABEECSCH.APARENT=null
 [L]A_I = TABEECSCH.freeSnapshot
 TABEECSCH.snapshotEnabled = 0
 TABEECSCH.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABEECSCH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABEECSCH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABEECSCH.APARENT=null
 TABEECSCH.snapshotEnabled = 1
 TABEECSCH.setAccessorEnabled = 1
Endif
LogicClose File [TSC]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABEECSCH._ACTION_PARAM("AREAD_BEFORE",[L]_EECSCH,[L]_LEG))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TSC]
Read [F:TSC]TSC0 = [L]_EECSCH;[L]_LEG
If fstat
[L]A_ERROR = [L]_EECSCH+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABEECSCH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TSC]AUUID)>0 & [F:TSC]AUUID=NullUuid
 [F:TSC]AUUID = getUuid
Endif
SetInstance TABEECSCH With [F:TSC]
TABEECSCH.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet TABEECSCH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABEECSCH" & ZONE="DESAXX" & IDENT1=TABEECSCH.EECSCH & IDENT2=TABEECSCH.LEG
 Call ASETTEXTRA(TABEECSCH.AXX,TABEECSCH.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABEECSCH.AXX(maxtab(TABEECSCH.AXX)).FLG = 0
Next AXX
If !len(fmet TABEECSCH.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TABEECSCH.AXX,TABEECSCH.AllocGrp(),"DESAXX",
& fmet TABEECSCH.AGETTEXTRALAN("DESAXX",TABEECSCH.ACTX.AFOLD.ALANGDEF),
& TABEECSCH.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABEECSCH" & ZONE="SHOAXX" & IDENT1=TABEECSCH.EECSCH & IDENT2=TABEECSCH.LEG
 Call ASETTEXTRA(TABEECSCH.AXX,TABEECSCH.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABEECSCH.AXX(maxtab(TABEECSCH.AXX)).FLG = 0
Next AXX
If !len(fmet TABEECSCH.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(TABEECSCH.AXX,TABEECSCH.AllocGrp(),"SHOAXX",
& fmet TABEECSCH.AGETTEXTRALAN("SHOAXX",TABEECSCH.ACTX.AFOLD.ALANGDEF),
& TABEECSCH.ACTX.LAN) From ASYRSUB
Endif

Return



