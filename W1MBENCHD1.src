#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management MBENCHD1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:05:06"
A_USER  = "ADMIN"
A_STAMP = "20180828000506"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask MBENCHD1 [MBD1]
Gosub HORODAT
Local Inpbox "MBENCHD1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MBD1] As [SIM_]
Grizo [MBD1]5
Grizo [MBD1]10
Grizo [MBD1]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MBD1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=32 : X2(0)=81 : Y1(0)=9 : Y2(0)=12
X1(1)=32 : X2(1)=81 : Y1(1)=13 : Y2(1)=16
X1(2)=32 : X2(2)=81 : Y1(2)=17 : Y2(2)=20
Return

$ON_MRPMES
Onevent INIT_AREA Call D_MRPMES(zc) From W1MBENCHD1
Return

Subprog D_MRPMES(VALEUR)
Variable Integer VALEUR
If varinit([M]MRPMES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MRPDAT
Onevent BEFORE_AREA Gosub AV_MRPDAT From W1MBENCHD1
Return

$AV_MRPDAT
Chgfmt [M]MRPDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_MRPQTY
Onevent BEFORE_AREA Gosub AV_MRPQTY From W1MBENCHD1
Return

$AV_MRPQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]MRPQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1MBENCHD1
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_EXTQTY1
Onevent BEFORE_AREA Gosub AV_EXTQTY1 From W1MBENCHD1
Return

$AV_EXTQTY1
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]EXTQTY1(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STU1
Return

$ON_ZSTU1
Onevent BEFORE_AREA Gosub AV_ZSTU1 From W1MBENCHD1
Return

$AV_ZSTU1
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU1(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_STRDAT1
Onevent BEFORE_AREA Gosub AV_STRDAT1 From W1MBENCHD1
Return

$AV_STRDAT1
## Action STD
Call AV_STRDAT1(zc) From SUBMBD1
Chgfmt [M]STRDAT1(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_ENDDAT1
Onevent BEFORE_AREA Gosub AV_ENDDAT1 From W1MBENCHD1
Return

$AV_ENDDAT1
Chgfmt [M]ENDDAT1(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_EXTQTY2
Onevent BEFORE_AREA Gosub AV_EXTQTY2 From W1MBENCHD1
Onevent BEFORE_INPUT Call AS_EXTQTY2(zc) From W1MBENCHD1
Onevent CONTROL Call C_EXTQTY2(zc) From W1MBENCHD1
Onevent AFTER_CHANGE Gosub AMM_EXTQTY2 From W1MBENCHD1
Return

$AV_EXTQTY2
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]EXTQTY2(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_EXTQTY2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(22504,GBOUT3) From OBJDIV
Call TEXTE(22510,GBOUT4) From OBJDIV
## Action STD
Call AS_EXTQTY2(VALEUR) From SUBMBD1
If mkstat=2
 [M]EXTQTY2(INDIC) = VALEUR
 Affzo EXTQTY2(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_EXTQTY2(zc) From W1MBENCHD1
Onkey 130 Titled GBOUT2 Call B2_EXTQTY2(zc) From W1MBENCHD1
Onkey 131 Titled GBOUT3 Call B3_EXTQTY2(zc) From W1MBENCHD1
Onkey 132 Titled GBOUT4 Call B4_EXTQTY2(zc) From W1MBENCHD1
Gosub _AFF
End

Subprog C_EXTQTY2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_EXTQTY2(VALEUR) From SUBMBD1
If mkstat : GERR = 1 : GZONE = "EXTQTY2" : GZNUM = 1906 : Endif
Gosub _AFF
End

$AMM_EXTQTY2
Call AM_EXTQTY2(zc)
If !mkstat & GOBJET
 zoncou = "EXTQTY2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EXTQTY2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_EXTQTY2(VALEUR) From SUBMBD1
If mkstat : GERR = 1 : GZONE = "EXTQTY2" : GZNUM = 1906 : Endif
Gosub _AFF
End

Subprog B1_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B1_EXTQTY2(VALEUR) From SUBMBD1
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call B2_EXTQTY2(VALEUR) From SUBMBD1
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action FDISPNOW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FDISPNOW"
 PARMSK(1) = [M:MBW1]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = num$([M:MBW1]WIPSTA)
 PARMSK(4) = [M:MBW1]VCRNUM
 PARMSK(5) = [M]STU
 PARMSK(6) = num$(VALEUR)
 PARMSK(7) = num$(VALEUR)
 Call SAISIE_NUM(VALEUR,PARMSK,"IDISPNOW","BENCHLIB","XYZBENCHLIB") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_EXTQTY2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action FDISPPLN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FDISPPLN"
 PARMSK(1) = [M:MBW1]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = num$([M:MBW1]WIPSTA)
 PARMSK(4) = [M:MBW1]VCRNUM
 PARMSK(5) = [M]STU
 PARMSK(6) = num$(VALEUR)
 PARMSK(7) = num$(VALEUR)
 Call SAISIE_NUM(VALEUR,PARMSK,"IDISPPLN","BENCHLIB","XYZBENCHLIB") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_STU2
Return

$ON_ZSTU2
Onevent BEFORE_AREA Gosub AV_ZSTU2 From W1MBENCHD1
Return

$AV_ZSTU2
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU2(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_STRDAT2
Onevent BEFORE_AREA Gosub AV_STRDAT2 From W1MBENCHD1
Onevent BEFORE_INPUT Call AS_STRDAT2(zc) From W1MBENCHD1
Onevent AFTER_CHANGE Gosub AMM_STRDAT2 From W1MBENCHD1
Return

$AV_STRDAT2
## Action STD
Call AV_STRDAT2(zc) From SUBMBD1
Chgfmt [M]STRDAT2(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_STRDAT2(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_STRDAT2(VALEUR) From SUBMBD1
If mkstat=2
 [M]STRDAT2(INDIC) = VALEUR
 Affzo STRDAT2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_STRDAT2
Call AM_STRDAT2(zc)
If !mkstat & GOBJET
 zoncou = "STRDAT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STRDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_STRDAT2(VALEUR) From SUBMBD1
If mkstat : GERR = 1 : GZONE = "STRDAT2" : GZNUM = 1805 : Endif
Gosub _AFF
End

$ON_ENDDAT2
Onevent BEFORE_INPUT Call AS_ENDDAT2(zc) From W1MBENCHD1
Onevent AFTER_AREA Call AP_ENDDAT2(zc) From W1MBENCHD1
Onevent AFTER_CHANGE Gosub AMM_ENDDAT2 From W1MBENCHD1
Onevent BEFORE_AREA Gosub AV_ENDDAT2 From W1MBENCHD1
Return

$AV_ENDDAT2
Chgfmt [M]ENDDAT2(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDAT2(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ENDDAT2(VALEUR) From SUBMBD1
If mkstat=2
 [M]ENDDAT2(INDIC) = VALEUR
 Affzo ENDDAT2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog AP_ENDDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call AP_ENDDAT2(VALEUR) From SUBMBD1
If mkstat : GERR = 1 : GZONE = "ENDDAT2" : GZNUM = 1806 : Endif
Gosub _AFF
End

$AMM_ENDDAT2
Call AM_ENDDAT2(zc)
If !mkstat & GOBJET
 zoncou = "ENDDAT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDAT2(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_ENDDAT2(VALEUR) From SUBMBD1
If mkstat : GERR = 1 : GZONE = "ENDDAT2" : GZNUM = 1806 : Endif
Gosub _AFF
End

$ON_STOFCY
Return

$ON_ITMREF
Return

$CHG_STY
Return


