#<AdxTL>@(#)0.0.0.0 $Revision$Class Journals - chart of account
# Supervisor
## ACLA-CLASSE ## GJOUCOA_FQEACC
# 2018-08-27 12:33:08 549


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : FRQACC Frequent accounts ( Field GAC 15)
####################################################################

$SET_FRQACC
If [L]_AOLDVAL<>this.FRQACC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FRQACC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FRQACC
 Gosub PROPAGATE_FRQACC
Endif
Return

$INIT_FRQACC
Gosub DECLARE_VAR From WMC0GJOUCOA_FQEACC
[L]CURPRO = "FRQACC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FRQACC
Gosub DECLARE_VAR From WMC0GJOUCOA_FQEACC
[L]CURPRO = "FRQACC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FRQACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FRQACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FRQACC
[L]CURPRO = "FRQACC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FRQACC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FRQACC
[L]CURPRO = "FRQACC"
If vireblc(this.FRQACC,2)<>vireblc(format$("K:15X",this.FRQACC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FRQACC
[L]CURPRO = "FRQACC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FRQACC
[L]CURPRO = "FRQACC"
If vireblc(this.FRQACC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGAC.ACTRLREF(this,"FRQACC",this.FRQACC,this.APARENT.COA,this.APARENT.ACC,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FRQACC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_FRQACC
this.isReadonly = 0
[L]CURPRO = "FRQACC"
Gosub _LNKPRO_FRQACC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FRQACC
Gosub DECLARE_VAR From WMC0GJOUCOA_FQEACC
[L]CURPRO = "FRQACC"
$_LNKPRO_FRQACC
If vireblc(this.FRQACC,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.APARENT.COA;this.APARENT.ACC
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FRQACC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FRQACC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return


####################################################################
# 2 : FRQCOD Short codes ( Field A 1)
####################################################################

$SET_FRQCOD
If [L]_AOLDVAL<>this.FRQCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FRQCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FRQCOD
 Gosub PROPAGATE_FRQCOD
Endif
Return

$INIT_FRQCOD
Gosub DECLARE_VAR From WMC0GJOUCOA_FQEACC
[L]CURPRO = "FRQCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FRQCOD
Gosub DECLARE_VAR From WMC0GJOUCOA_FQEACC
[L]CURPRO = "FRQCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FRQCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FRQCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FRQCOD
[L]CURPRO = "FRQCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FRQCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FRQCOD
[L]CURPRO = "FRQCOD"
Return

$_AOTHERS_FRQCOD
[L]CURPRO = "FRQCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FRQCOD
[L]CURPRO = "FRQCOD"
Return

$PROPAGATE_FRQCOD
this.isReadonly = 0
[L]CURPRO = "FRQCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FRQCOD
Gosub DECLARE_VAR From WMC0GJOUCOA_FQEACC
[L]CURPRO = "FRQCOD"
$_LNKPRO_FRQCOD
Return




