#<AdxTL>@(#)0.0.0.0 $Revision$Class Customer category
# Supervisor
## CRUD-CLASSE ## BPCCATEG
# 2018-08-27 12:25:27 641


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPCCATEG [BCG_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BPCCATEG") From ASYRCOM : Endif
Local Instance BPCCATEG Using C_BPCCATEG

If !SILENCE : Call TRACE("3 --> New Instance C_BPCCATEG") From ASYRCOM : Endif
BPCCATEG = NewInstance C_BPCCATEG AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BCG_]BCG0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPCCATEG") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.AREAD([BCG_]BCGCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPCCATEG.BCGCOD ="-num$(BPCCATEG.BCGCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPCCATEG.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPCCATEG.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BCG_]
FreeGroup BPCCATEG
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPCCATEG,ACLE,ASTATUS,_ETAG)
Variable Instance BPCCATEG Using C_BPCCATEG
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BCGCOD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BCGCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BPCCATEG [BCG]
Default File [F:BCG]
Read [F:BCG]BCG0 = [L]_BCGCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BCG]UPDTICK)>0
 [L]_ETAG = num$([F:BCG]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPCCATEG,ACLE,ASTATUS)
Variable Instance BPCCATEG Using C_BPCCATEG
Value Char ACLE
Variable Integer ASTATUS
Local Char _BCGCOD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BCGCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.AREAD([L]_BCGCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPCCATEG,_BCGCOD,ASTATUS)
Variable Instance BPCCATEG Using C_BPCCATEG
Value Char _BCGCOD
Variable Integer ASTATUS

If BPCCATEG = null : End : Endif

Gosub AVARIABLES From WMC00BPCCATEG
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPCCATEG.APARENT=null
 [L]A_I = BPCCATEG.freeSnapshot
 BPCCATEG.snapshotEnabled = 0
 BPCCATEG.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPCCATEG.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPCCATEG.APARENT=null
 BPCCATEG.snapshotEnabled = 1
 BPCCATEG.setAccessorEnabled = 1
Endif
LogicClose File [BCG]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG._ACTION_PARAM("AREAD_BEFORE",[L]_BCGCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BCG]
Read [F:BCG]BCG0 = [L]_BCGCOD
If fstat
[L]A_ERROR = [L]_BCGCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BPCCATEG,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:BCG]AUUID)>0 & [F:BCG]AUUID=NullUuid
 [F:BCG]AUUID = getUuid
Endif
SetInstance BPCCATEG With [F:BCG]
BPCCATEG.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 20
 If ([F:BCG]DIE([L]A_I-1)<>"" or [F:BCG]CCE([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  BPCCATEG.C_DIE(A_NEWCOL) = NewInstance  C_BPCCATEG_C_DIE(BPCCATEG.ACTX,NullUuid,[L]A_I,BPCCATEG,"C_DIE") AllocGroup BPCCATEG
  BPCCATEG.C_DIE(A_NEWCOL).DIE = [F:BCG]DIE([L]A_I-1)
  BPCCATEG.C_DIE(A_NEWCOL).CCE = [F:BCG]CCE([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.C_DIE(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 30
 If ([F:BCG]INVDTAAMT([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  BPCCATEG.C_INVDTAAMT(A_NEWCOL) = NewInstance  C_BPCCATEG_C_INVDTAAMT(BPCCATEG.ACTX,NullUuid,[L]A_I,BPCCATEG,"C_INVDTAAMT") AllocGroup BPCCATEG
  BPCCATEG.C_INVDTAAMT(A_NEWCOL).INVDTAAMT = [F:BCG]INVDTAAMT([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.C_INVDTAAMT(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 2
 If ([F:BCG]REP([L]A_I-1)<>"" or [F:BCG]REPDLV([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  BPCCATEG.C_REP(A_NEWCOL) = NewInstance  C_BPCCATEG_C_REP(BPCCATEG.ACTX,NullUuid,[L]A_I,BPCCATEG,"C_REP") AllocGroup BPCCATEG
  BPCCATEG.C_REP(A_NEWCOL).REP = [F:BCG]REP([L]A_I-1)
  BPCCATEG.C_REP(A_NEWCOL).REPDLV = [F:BCG]REPDLV([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.C_REP(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 5
 [L]A_NEWCOL += 1
 BPCCATEG.C_TSCCOD(A_NEWCOL) = NewInstance  C_BPCCATEG_C_TSCCOD(BPCCATEG.ACTX,NullUuid,[L]A_I,BPCCATEG,"C_TSCCOD") AllocGroup BPCCATEG
 BPCCATEG.C_TSCCOD(A_NEWCOL).TSCCOD = [F:BCG]TSCCOD([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.C_TSCCOD(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet BPCCATEG.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="BPCCATEG" & ZONE="DESAXX" & IDENT1=BPCCATEG.BCGCOD & IDENT2=""
 Call ASETTEXTRA(BPCCATEG.AXX,BPCCATEG.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 BPCCATEG.AXX(maxtab(BPCCATEG.AXX)).FLG = 0
Next AXX
If !len(fmet BPCCATEG.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(BPCCATEG.AXX,BPCCATEG.AllocGrp(),"DESAXX",
& fmet BPCCATEG.AGETTEXTRALAN("DESAXX",BPCCATEG.ACTX.AFOLD.ALANGDEF),
& BPCCATEG.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="BPCCATEG" & ZONE="SHOAXX" & IDENT1=BPCCATEG.BCGCOD & IDENT2=""
 Call ASETTEXTRA(BPCCATEG.AXX,BPCCATEG.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 BPCCATEG.AXX(maxtab(BPCCATEG.AXX)).FLG = 0
Next AXX
If !len(fmet BPCCATEG.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(BPCCATEG.AXX,BPCCATEG.AllocGrp(),"SHOAXX",
& fmet BPCCATEG.AGETTEXTRALAN("SHOAXX",BPCCATEG.ACTX.AFOLD.ALANGDEF),
& BPCCATEG.ACTX.LAN) From ASYRSUB
Endif

Return



