#<AdxTL>@(#)0.0.0.0 $Revision$Class Content type 
# Supervisor
## CRUD-CLASSE ## ATYPEPRO
# 2018-08-27 13:03:40 301


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(ATYPEPRO,ASTATUS)
Variable Instance ATYPEPRO Using R_ATYPEPRO
Variable Integer ASTATUS

If ATYPEPRO = null : End : Endif

Gosub AVARIABLES From WMR00ATYPEPRO
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet ATYPEPRO.ACTX.AGETAFCRIGHT(ATYPEPRO,"GESATYP",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet ATYPEPRO.ACTX.AGETAFCRIGHTC(ATYPEPRO,"GESATYP",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_ATYPEPRO
Else
 Gosub AINSERT_ATYPEPRO
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = ATYPEPRO.freeSnapshot
ATYPEPRO.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
ATYPEPRO.ASTALIN = [V]CST_ANEW
ATYPEPRO.ATYP.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPEPRO._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPEPRO._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATYPEPRO._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If ATYPEPRO.ATYP.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATYPEPRO.ATYP.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ATYP.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ATYP.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_ATYPEPRO
Trbegin [F:ATYP]
 Gosub AINSERT_ATYPEPRO
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(ATYPEPRO.ATYP.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATYPEPRO.ATYP.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_ATYPEPRO
[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ATYP._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATYPEPRO.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If ATYPEPRO.snapshotEnabled=1
 [L]A_RETIK = ATYPEPRO.revertUpdTick
Endif
[L]ASTATUS = max(fmet ATYPEPRO.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



