#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Sage X3 supervisor
#WMSRHCONTACT CONTACT
# 2018-06-20 06:41:37 747

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","CONTACT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CONTACT [CNT]
If filinfo(filpath("FIL","CONTACTCRM","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CONTACTCRM [AIN]
Local File CONTACT [CNT_]
Local Char KEY_CNT(120)(1..3)
Local Char KEY_AIN(120)(1..3)
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [CNT]
LogicClose File [AIN]
LogicClose File [CNT_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [CNT] With
& [AIN]AIN0~=[F:CNT]CCNCRM
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [CNT] With
& [AIN]AIN0~=[F:CNT]CCNCRM
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
#Create a new instance
INS = NewInstance C_CONTACT(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE

SetInstance INS With [F:CNT]
FINS = 1
[L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
Gosub ASEARCH_TO_JSON
Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"BPATYP":'           + num$(INS.BPATYP)
Append ASND.DATA ,',"BPANUM":'         +'"'+escJson(INS.BPANUM)+'"'
Append ASND.DATA ,',"CCNCRM":'         +'"'+escJson(INS.CCNCRM)+'"'
Append ASND.DATA ,',"CNTSRV":'         +'"'+escJson(INS.CNTSRV)+'"'
Append ASND.DATA ,',"CNTMSS":'         +'"'+escJson(INS.CNTMSS)+'"'
Append ASND.DATA ,',"BPAADD":'         +'"'+escJson(INS.BPAADD)+'"'
Append ASND.DATA ,',"TEL":'            +'"'+escJson(INS.TEL)+'"'
Append ASND.DATA ,',"FAX":'            +'"'+escJson(INS.FAX)+'"'
Append ASND.DATA ,',"WEB":'            +'"'+escJson(INS.WEB)+'"'
Append ASND.DATA ,',"MOB":'            +'"'+escJson(INS.MOB)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,'}'
Onerrgo
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:CNT]BPATYP"
ASTDKEY += ";[F:CNT]BPANUM"
ASTDKEY += ";[F:CNT]CCNCRM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From CONTACT_CSTD
Gosub METHODS From CONTACTTC_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="CONTACT" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"CONTACT")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"CONTACT")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,3527)+'"'
Append WCLOB,',"$url":"{$baseUrl}/CONTACT'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3527)+' {$key}"'
Append WCLOB,',"$key":"{BPATYP}~{BPANUM}~{CCNCRM}"'
Append WCLOB,',"$url":"{$baseUrl}/CONTACT('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'CONTACT.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPATYP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1492)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-choice"'
Append WCLOB,',"$value":{'
Append WCLOB,'"$type":"application/x-integer"'
Append WCLOB,',"$enum":['
Append WCLOB,'{'
Append WCLOB,'"$value":1'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.1")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":2'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.2")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":3'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.3")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":4'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.4")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":5'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.5")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":6'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.6")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":7'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.7")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":8'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"943.8")+'"'
Append WCLOB,"}"
Append WCLOB,"]"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"BPANUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3657)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CCNCRM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5296)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CNTSRV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,18735)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CNTMSS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,10073)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"BPAADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1499)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TEL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,289)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"FAX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,919)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"WEB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1828)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":80'
Append WCLOB,"}"
Append WCLOB,',"MOB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,9564)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHCONTACTB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHCONTACTB
End RES


