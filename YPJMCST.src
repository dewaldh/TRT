#<AdxTL>@(#)0.0.0.0 $Revision$
Subprog YPJMCST(YACTION,YOPPNUM
& ,YPBUFCYX,YOPPNUMX,YPBUCODX,YPBUPAEX,YPBUSTATEX,YPBUELEX,YPBUIMPX,YCURX
& ,YPBUSTARTDTX,YPBUENDDTX,YOPPIMPTX,YPCCCODX,YPLBFCYX,YPLBDESAXXX,YPLBUX
& ,YPLBQTYX,YPLBPRIX,YPLBAMTX,YPLBDATBUDX,YPLBFLGREMX,YPLBQTYREMX,YPLBPRIREMX,YPLBQTYESTX
& ,YPLBAMTESTX,YPLBQTYRECX,YPLBAMTRECX,YTCHOPPIMPTX,YTCHPBUSTRDTX,YPIMDESAXXX,YTASCODX,YPIMTYPX
& ,YPIMSTAX,YOPPSTATEX)

Value Char      YACTION
Value Char      YOPPNUM

Variable Char      YPBUFCYX()(1..1000)
Variable Char      YOPPNUMX()(1..1000)
Variable Char      YPBUCODX()(1..1000)
Variable Char      YPBUPAEX()(1..1000)
Variable Integer   YPBUSTATEX(1..1000)
Variable Integer   YPBUELEX(1..1000)
Variable Integer   YPBUIMPX(1..1000)
Variable Char      YCURX()(1..1000)
Variable Date      YPBUSTARTDTX(1..1000)
Variable Date      YPBUENDDTX(1..1000)
Variable Integer   YOPPIMPTX(1..1000)

Variable Char      YPCCCODX()(1..1000)
Variable Char      YPLBFCYX()(1..1000)
Variable Char      YPLBDESAXXX()(1..1000)
Variable Char      YPLBUX()(1..1000)
Variable Integer   YPLBQTYX(1..1000)
Variable Integer   YPLBPRIX(1..1000)
Variable Decimal   YPLBAMTX(1..1000)
Variable Date      YPLBDATBUDX(1..1000)
Variable Integer   YPLBFLGREMX(1..1000)
Variable Integer   YPLBQTYREMX(1..1000)
Variable Integer   YPLBPRIREMX(1..1000)
Variable Integer   YPLBQTYESTX(1..1000)
Variable Decimal   YPLBAMTESTX(1..1000)
Variable Integer   YPLBQTYRECX(1..1000)
Variable Decimal   YPLBAMTRECX(1..1000)
Variable Integer   YTCHOPPIMPTX(1..1000)
Variable Date      YTCHPBUSTRDTX(1..1000)

Variable Char      YPIMDESAXXX()(1..1000)
Variable Char      YTASCODX()(1..1000)
Variable Integer   YPIMTYPX(1..1000)
Variable Integer   YPIMSTAX(1..1000)
Variable Integer   YOPPSTATEX(1..1000)

Local Integer MY_STATUS
Local Integer IRET
Local Char SNUMERO(30)
Local Integer YMESSSCNT
Local Char YCPY
If clalev([F:YFCY]) = 0 : Local File FACILITY[YFCY] : Endif

YMESSSCNT = 0

#create PJM instance
Global Instance GZINSPJM Using C_OPPORPJM

ANOWRITE = 1

#clear any previous assignment
If (GZINSPJM <> null) : FreeGroup GZINSPJM : Endif

GZINSPJM = NewInstance C_OPPORPJM AllocGroup null

If YOPPNUM = ""
  Call ADDMESSERR("No project number found") From AWEB
Endif

#read the budget record
[L]MY_STATUS = fmet GZINSPJM.AREAD(YOPPNUM)

If [L]MY_STATUS <> 0
  Call ADDMESSERR("Project not found") From AWEB
  End
Endif


If YACTION = "READ"
  For I= 1 To maxtab(GZINSPJM.BUD)

    YPBUFCYX(I) = GZINSPJM.BUD(I).PBUFCY
    YOPPNUMX(I) = GZINSPJM.BUD(I).OPPNUM
    YPBUCODX(I) = GZINSPJM.BUD(I).PBUCOD
    YPBUPAEX(I) = GZINSPJM.BUD(I).PBUPAE
    YPBUSTATEX(I) = GZINSPJM.BUD(I).PBUSTATE

    YPBUELEX(I) = GZINSPJM.BUD(I).PBUELE
    YPBUIMPX(I) = GZINSPJM.BUD(I).PBUIMP
    YCURX(I) = GZINSPJM.BUD(I).CUR

    YPCCCODX(I) = GZINSPJM.BUD(I).BUDLIG(1).PCCCOD
    YPLBFCYX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBFCY
    YPLBDESAXXX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBDESAXX
    YPLBUX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBU
    YPLBQTYX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBQTY
    YPLBPRIX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBPRI

    YPLBAMTX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBAMT
    YPLBDATBUDX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBDATBUD
    YPLBFLGREMX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBFLGREM
    YPLBQTYREMX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBQTYREM
    YPLBPRIREMX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBPRIREM
    YPLBQTYESTX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBQTYEST
    YPLBAMTESTX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBAMTEST
    YPLBQTYRECX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBQTYREC
    YPLBAMTRECX(I) = GZINSPJM.BUD(I).BUDLIG(1).PLBAMTREC

    YPIMDESAXXX(I) = GZINSPJM.BUD(I).PIMPL(1).PIMDESAXX
    YTASCODX(I) = GZINSPJM.BUD(I).PIMPL(1).TASCOD
    YPLBFCYX(I) = GZINSPJM.BUD(I).PIMPL(1).FCY
    YPIMTYPX(I) = GZINSPJM.BUD(I).PIMPL(1).PIMTYP
    YPIMSTAX(I) = GZINSPJM.BUD(I).PIMPL(1).PIMSTA
    YPLBFCYX(I) = GZINSPJM.BUD(I).PIMPL(1).FINRSPFCY
    YOPPSTATEX(I) = GZINSPJM.BUD(I).PIMPL(1).OPPSTATE
    YPBUSTATEX(I) = GZINSPJM.BUD(I).PIMPL(1).PBUSTATE
  Next
End
Endif

Local Integer INDEX

For I = 1 To maxtab(YPBUCODX)

If YPBUCODX(I) = ""
  Break
Endif

##ifn no budget number was found, create one.

If YACTION = "CREATE"
  INDEX = fmet GZINSPJM.ADDLINE("BUD", [V]CST_ALASTPOS)
  If (INDEX = [V]CST_ANOTDEFINED)
    # Error management
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
    Call ADDMESSERR(GMESSAGE) From AWEB
  Endif

  Call NUMERO("PBU","",date$,"",SNUMERO,IRET) From SUBANM
  GZINSPJM.BUD(INDEX).PBUNUM = SNUMERO
Else
  #find the correct budget line and modify.
  If find(YPBUCODX(I), GZINSPJM.BUD(1..maxtab(GZINSPJM.BUD)).PBUCOD) = 0
    INDEX = fmet GZINSPJM.ADDLINE("BUD", [V]CST_ALASTPOS)
  Else
    INDEX = find(YPBUCODX(I), GZINSPJM.BUD(1..maxtab(GZINSPJM.BUD)).PBUCOD)
  Endif
Endif



#get the legal company
Read [F:YFCY]FCY0 = YPBUFCYX(I)
If fstat <> 0
  Call ADDMESSERR("Could not find the legal company for site: " + YPBUFCY) From AWEB
  Break
Else
  YCPY = [F:YFCY]LEGCPY
Endif
#
 #You can use the instruction SetInstance which will set propertie's Values from field's Values for propertie's names that are identical to a field's name of the [F] file.
  #SetInstance GZINSPJM With [F:PJBU]
GZINSPJM.BUD(INDEX).PBUFCY = YPBUFCYX(I)
GZINSPJM.BUD(INDEX).OPPNUM = YOPPNUM
GZINSPJM.BUD(INDEX).PBUCOD = YPBUCODX(I)
GZINSPJM.BUD(INDEX).PBUPAE = YPBUPAEX(I)
GZINSPJM.BUD(INDEX).PBUSTATE = YPBUSTATEX(I)
GZINSPJM.BUD(INDEX).PBUELE = YPBUELEX(I)
GZINSPJM.BUD(INDEX).PBUIMP = YPBUIMPX(I)
GZINSPJM.BUD(INDEX).CUR = YCURX(I)
#GZINSPJM.PBUSTARTDT = YPBUSTARTDT
#GZINSPJM.PBUENDDT = YPBUENDDT
GZINSPJM.BUD(INDEX).TCHOPPIMPT = GZINSPJM.OPPIMPT
GZINSPJM.BUD(INDEX).KEYCONCAT = YOPPNUM + func AFNC.PARAM ("SEPARCODE", "") + YPBUCODX(I)
#GZINSPJM.BUD(INDEX).KEYCONCAT = YOPPNUM+"!!"+YPBUCODX(I)



GZINSPJM.CUR = YCURX(I)
#
#
# Local Integer INDEX1
 If YACTION = "CREATE"
    INDEX1 = fmet GZINSPJM.BUD(INDEX).ADDLINE("BUDLIG", [V]CST_ALASTPOS)
    If (INDEX1 = [V]CST_ANOTDEFINED)
      # Error management
      GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
      Call ADDMESSERR(GMESSAGE) From AWEB
    Endif
 Else
  #find the correct budget line and modify.
  If find(YPBUCODX(I), GZINSPJM.BUD(INDEX).BUDLIG(1..maxtab(GZINSPJM.BUD(INDEX).BUDLIG)).PBUCOD) = 0
    INDEX1 = fmet GZINSPJM.BUD(INDEX).ADDLINE("BUDLIG", [V]CST_ALASTPOS)
  Else
    INDEX1 = find(YPBUCODX(I), GZINSPJM.BUD(INDEX).BUDLIG(1..maxtab(GZINSPJM.BUD(INDEX).BUDLIG)).PBUCOD)
  Endif
 Endif
##
##  # Use the SetInstance


GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).OPPNUM = YOPPNUM
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PBUCOD = YPBUCODX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBSEQ = 10
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PCCCOD = YPCCCODX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBFCY = YPLBFCYX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBDESAXX = YPLBDESAXXX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBU = YPLBUX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBQTY = YPLBQTYX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBPRI = YPLBPRIX(I)
If GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).YORIAMT = 0
  GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).YORIAMT = GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBAMT
Endif
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBAMT = YPLBAMTX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBDATBUD = date$
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBFLGREM = YPLBFLGREMX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBQTYREM = YPLBQTYREMX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBPRIREM = YPLBPRIREMX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBQTYEST = YPLBQTYESTX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBAMTEST = YPLBAMTESTX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBQTYREC = YPLBQTYRECX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).PLBAMTREC = YPLBAMTRECX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).CUR = YCURX(I)
GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).KEYCONCAT = YOPPNUM + func AFNC.PARAM ("SEPARCODE", "") + YPBUCODX(I)
#GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).KEYCONCAT = YOPPNUM+"!!"+YPBUCODX(I)



GZINSPJM.BUD(INDEX).BUDLIG(INDEX1).TCHPBUSTRDT = date$

#GZINSPJM.BUD(INDEX-1).BUDLIG(INDEX1).TCHPBUSTRDT = date$
#GZINSPJM.BUD(INDEX-2).BUDLIG(INDEX1).TCHPBUSTRDT = date$

#GZINSPJM.BUD(INDEX).BUDLIG(INDEX1-1).TCHPBUSTRDT = date$
#GZINSPJM.BUD.BUDLIG(INDEX1).TCHPBUSTRDT = date$
#
#
Local Integer INDEX2
If YACTION = "CREATE"
  INDEX2 = fmet GZINSPJM.BUD(INDEX).ADDLINE("PIMPL", [V]CST_ALASTPOS)
  If (INDEX2 = [V]CST_ANOTDEFINED)
    # Error management
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
    Call ADDMESSERR(GMESSAGE) From AWEB
  Endif
 Else
   #find the correct budget line and modify.
  If find(YPBUCODX(I), GZINSPJM.BUD(INDEX).PIMPL(1..maxtab(GZINSPJM.BUD(INDEX).PIMPL)).PBUCOD) = 0
    INDEX2 =  fmet GZINSPJM.BUD.ADDLINE("PIMPL", [V]CST_ALASTPOS)
  Else
    INDEX2 = find(YPBUCODX(I), GZINSPJM.BUD(INDEX).PIMPL(1..maxtab(GZINSPJM.BUD(INDEX).PIMPL)).PBUCOD)
  Endif
 Endif


### Use the SetInstance
##  #SetInstance GZINSPJM.PIMPL(INDEX) With [F:PJLB]
  #GZINSPJM.BUD.PIMPL(INDEX2).PIMNUM = YOPPNUM(I)+"!!"+YPBUCOD(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).PIMDESAXX = YPIMDESAXXX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).OPPNUM = YOPPNUM
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).PBUCOD = YPBUCODX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).TASCOD = YTASCODX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).FCY = YPLBFCYX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).PIMTYP = YPIMTYPX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).PIMSTA = YPIMSTAX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).FINRSPFCY = YPLBFCYX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).CPY = YCPY
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).OPPSTATE = YOPPSTATEX(I)
  GZINSPJM.BUD(INDEX).PIMPL(INDEX2).PBUSTATE = YPBUSTATEX(I)
#
  GZINSPJM.CPY = YCPY
  GZINSPJM.SALFCY = YPLBFCYX(I)


#Call ADDMESSERR(num$(GZINSPJM.BUD(INDEX).PIMPL(INDEX2).PIMSTA)) From AWEB
#Call ADDMESSERR(num$(GZINSPJM.BUD(INDEX-1).PIMPL(INDEX2).PIMSTA)) From AWEB
#Call ADDMESSERR(num$(INDEX)) From AWEB

Next

If YACTION = "CREATE"
 [L]MY_STATUS = fmet GZINSPJM.BUD(INDEX).AINSERT()
Else
 [L]MY_STATUS = fmet GZINSPJM.BUD(INDEX).AUPDATE()
Endif
  If ([L]MY_STATUS >= [V]CST_AERROR)
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)
    #If GMESSAGE = AVOID.ACHAR Then
      Call ADDMESSERR(GMESSAGE) From AWEB
      #WW_GRAVE = 3
      #WW_OK = 1
    #Endif
  Endif
#
If GZINSPJM <> null Then
    FreeGroup GZINSPJM
  Endif
  Kill GZINSPJM
  ANOWRITE = 0
End

#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)

  Variable Instance GZINSPJM Using C_OPPORPJM

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(GZINSPJM, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End

