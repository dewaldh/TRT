#<AdxTL>@(#)0.0.0.0 $Revision$
Subprog YPJMCST(YACTION,YPBUFCY,YOPPNUM,YPBUCOD,YPBUPAE,YPBUSTATE,YPBUELE,YPBUIMP
& ,YCUR,YPBUSTARTDT,YPBUENDDT,YOPPIMPT,YPCCCOD,YPLBFCY
& ,YPLBDESAXX,YPLBU,YPLBQTY,YPLBPRI,YPLBAMT,YPLBDATBUD,YPLBFLGREM,YPLBQTYREM,YPLBPRIREM,YPLBQTYEST
& ,YPLBAMTEST,YPLBQTYREC,YPLBAMTREC,YTCHOPPIMPT
& ,YTCHPBUSTRDT,YPIMDESAXX,YTASCOD,YPIMTYP ,YPIMSTA ,YOPPSTATE)

Value Char      YACTION
Value Char      YPBUFCY()(1..)
Value Char      YOPPNUM()(1..)
Value Char      YPBUCOD()(1..)
Value Char      YPBUPAE()(1..)
Value Integer   YPBUSTATE(1..)
Value Integer   YPBUELE(1..)
Value Integer   YPBUIMP(1..)
Value Char      YCUR()(1..)
Value Date      YPBUSTARTDT(1..)
Value Date      YPBUENDDT(1..)
Value Integer   YOPPIMPT(1..)

Value Char      YPCCCOD()(1..)
Value Char      YPLBFCY()(1..)
Value Char      YPLBDESAXX()(1..)
Value Char      YPLBU()(1..)
Value Integer   YPLBQTY(1..)
Value Integer   YPLBPRI(1..)
Value Decimal   YPLBAMT(1..)
Value Date      YPLBDATBUD(1..)
Value Integer   YPLBFLGREM(1..)
Value Integer   YPLBQTYREM(1..)
Value Integer   YPLBPRIREM(1..)
Value Integer   YPLBQTYEST(1..)
Value Decimal   YPLBAMTEST(1..)
Value Integer   YPLBQTYREC(1..)
Value Decimal   YPLBAMTREC(1..)
Value Integer   YTCHOPPIMPT(1..)
Value Date      YTCHPBUSTRDT(1..)

Value Char      YPIMDESAXX()(1..)
Value Char      YTASCOD()(1..)
Value Integer   YPIMTYP(1..)
Value Integer   YPIMSTA(1..)
Value Integer   YOPPSTATE(1..)

Local Integer MY_STATUS
Local Integer IRET
Local Char SNUMERO(30)
Local Integer YMESSSCNT
Local Char YCPY
If clalev([F:YFCY]) = 0 : Local File FACILITY[YFCY] : Endif

YMESSSCNT = 0

#create PJM instance
Global Instance GZINSPJM Using C_OPPORPJM

ANOWRITE = 1

#clear any previous assignment
If (GZINSPJM <> null) : FreeGroup GZINSPJM : Endif

GZINSPJM = NewInstance C_OPPORPJM AllocGroup null

If YOPPNUM = ""
  Call ADDMESSERR("No project number found") From AWEB
Endif

#read the budget record
[L]MY_STATUS = fmet GZINSPJM.AREAD(YOPPNUM)

If [L]MY_STATUS <> 0
  Call ADDMESSERR("Project not found") From AWEB
  End
Endif

For I = 1 To maxtab(YPBUCOD)

If YPBUCOD(I) = ""
  Break
Endif
##ifn no budget number was found, create one.
Local Integer INDEX
If YACTION = "CREATE"
  INDEX = fmet GZINSPJM.ADDLINE("BUD", [V]CST_ALASTPOS)
  If (INDEX = [V]CST_ANOTDEFINED)
    # Error management
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
    Call ADDMESSERR(GMESSAGE) From AWEB
  Endif

  Call NUMERO("PBU","",date$,"",SNUMERO,IRET) From SUBANM
  GZINSPJM.BUD.PBUNUM = SNUMERO
Else
  #find the correct budget line and modify.
  If find(YPBUCOD(I), GZINSPJM.BUD.PBUCOD(1..)) = 0
    INDEX = fmet GZINSPJM.ADDLINE("BUD", [V]CST_ALASTPOS)
  Else
    INDEX = find(YPBUCOD(I), GZINSPJM.BUD.PBUCOD)
  Endif
Endif

Call ADDMESSERR("Bud index: " + num$(INDEX)) From AWEB

#get the legal company
Read [F:YFCY]FCY0 = YPBUFCY
If fstat <> 0
  Call ADDMESSERR("Could not find the legal company for site: " + YPBUFCY) From AWEB
  Break
Else
  YCPY = [F:YFCY]LEGCPY
Endif
#
 #You can use the instruction SetInstance which will set propertie's Values from field's Values for propertie's names that are identical to a field's name of the [F] file.
  #SetInstance GZINSPJM With [F:PJBU]
GZINSPJM.BUD(INDEX).PBUFCY = YPBUFCY(I)
GZINSPJM.BUD(INDEX).OPPNUM = YOPPNUM(I)
GZINSPJM.BUD(INDEX).PBUCOD = YPBUCOD(I)
GZINSPJM.BUD(INDEX).PBUPAE = YPBUPAE(I)
GZINSPJM.BUD(INDEX).PBUSTATE = YPBUSTATE(I)
GZINSPJM.BUD(INDEX).PBUELE = YPBUELE(I)
GZINSPJM.BUD(INDEX).PBUIMP = YPBUIMP(I)
GZINSPJM.BUD(INDEX).CUR = YCUR(I)
#GZINSPJM.PBUSTARTDT = YPBUSTARTDT
#GZINSPJM.PBUENDDT = YPBUENDDT
GZINSPJM.BUD(INDEX).TCHOPPIMPT = GZINSPJM.OPPIMPT

GZINSPJM.CUR = YCUR(I)
GZINSPJM.BUD(INDEX-1).CUR = YCUR(I)
GZINSPJM.BUD(INDEX-2).CUR = YCUR(I)
#
#
# Local Integer INDEX1
 If YACTION = "CREATE"
    INDEX1 = fmet GZINSPJM.BUD.ADDLINE("BUDLIG", [V]CST_ALASTPOS)
    If (INDEX1 = [V]CST_ANOTDEFINED)
      # Error management
      GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
      Call ADDMESSERR(GMESSAGE) From AWEB
    Endif
 Else
  #find the correct budget line and modify.
  If find(YPBUCOD(I), GZINSPJM.BUD.BUDLIG.PBUCOD(1..)) = 0
    INDEX1 = fmet GZINSPJM.BUD.ADDLINE("BUDLIG", [V]CST_ALASTPOS)
  Else
    INDEX1 = find(YPBUCOD(I), GZINSPJM.BUD.BUDLIG.PBUCOD)
  Endif
 Endif
##
##  # Use the SetInstance

Call ADDMESSERR("Budlig index: " + num$(INDEX1)) From AWEB

GZINSPJM.BUD.BUDLIG(INDEX1).OPPNUM = YOPPNUM(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PBUCOD = YPBUCOD(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBSEQ = 10
GZINSPJM.BUD.BUDLIG(INDEX1).PCCCOD = YPCCCOD(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBFCY = YPLBFCY(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBDESAXX = YPLBDESAXX(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBU = YPLBU(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTY = YPLBQTY(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBPRI = YPLBPRI(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBAMT = YPLBAMT(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBDATBUD = YPLBDATBUD(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBFLGREM = YPLBFLGREM(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTYREM = YPLBQTYREM(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBPRIREM = YPLBPRIREM(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTYEST = YPLBQTYEST(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBAMTEST = YPLBAMTEST(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTYREC = YPLBQTYREC(I)
GZINSPJM.BUD.BUDLIG(INDEX1).PLBAMTREC = YPLBAMTREC(I)
GZINSPJM.BUD.BUDLIG(INDEX1).CUR = YCUR(I)



GZINSPJM.BUD.BUDLIG(INDEX1).TCHPBUSTRDT = date$

GZINSPJM.BUD.BUDLIG(INDEX1-1).TCHPBUSTRDT = date$
#GZINSPJM.BUD.BUDLIG(INDEX1).TCHPBUSTRDT = date$
#
#
Local Integer INDEX2
If YACTION = "CREATE"
  INDEX2 = fmet GZINSPJM.BUD.ADDLINE("PIMPL", [V]CST_ALASTPOS)
  If (INDEX2 = [V]CST_ANOTDEFINED)
    # Error management
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
    Call ADDMESSERR(GMESSAGE) From AWEB
  Endif
 Else
   #find the correct budget line and modify.
  If find(YPBUCOD(I), GZINSPJM.BUD.PIMPL.PBUCOD) = 0
    INDEX2 =  fmet GZINSPJM.BUD.ADDLINE("PIMPL", [V]CST_ALASTPOS)
  Else
    INDEX2 = find(YPBUCOD(I), GZINSPJM.BUD.PIMPL.PBUCOD(1..))
  Endif
 Endif
Call ADDMESSERR("pimpl index: " + num$(INDEX2)) From AWEB

##
##
### Use the SetInstance
##  #SetInstance GZINSPJM.PIMPL(INDEX) With [F:PJLB]
  #GZINSPJM.BUD.PIMPL(INDEX2).PIMNUM = YOPPNUM(I)+"!!"+YPBUCOD(I)
  GZINSPJM.BUD.PIMPL(INDEX2).PIMDESAXX = YPIMDESAXX(I)
  GZINSPJM.BUD.PIMPL(INDEX2).OPPNUM = YOPPNUM(I)
  GZINSPJM.BUD.PIMPL(INDEX2).PBUCOD = YPBUCOD(I)
  GZINSPJM.BUD.PIMPL(INDEX2).TASCOD = YTASCOD(I)
  GZINSPJM.BUD.PIMPL(INDEX2).FCY = YPLBFCY(I)
  GZINSPJM.BUD.PIMPL(INDEX2).PIMTYP = YPIMTYP(I)
  GZINSPJM.BUD.PIMPL(INDEX2).PIMSTA = YPIMSTA(I)
  GZINSPJM.BUD.PIMPL(INDEX2).FINRSPFCY = YPLBFCY(I)
  GZINSPJM.BUD.PIMPL(INDEX2).CPY = YCPY
  GZINSPJM.BUD.PIMPL(INDEX2).OPPSTATE = YOPPSTATE(I)
  GZINSPJM.BUD.PIMPL(INDEX2).PBUSTATE = YPBUSTATE(I)
#
  GZINSPJM.CPY = YCPY
  GZINSPJM.SALFCY = YPLBFCY(I)

Next

If YACTION = "CREATE" and INDEX = 1
 [L]MY_STATUS = fmet GZINSPJM.BUD.AINSERT()
Else
 [L]MY_STATUS = fmet GZINSPJM.BUD.AUPDATE()
Endif
  If ([L]MY_STATUS >= [V]CST_AERROR)
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)
    #If GMESSAGE = AVOID.ACHAR Then
      Call ADDMESSERR(GMESSAGE) From AWEB
      #WW_GRAVE = 3
      #WW_OK = 1
    #Endif
  Endif
#
If GZINSPJM <> null Then
    FreeGroup GZINSPJM
  Endif
  Kill GZINSPJM
  ANOWRITE = 0
End

#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)

  Variable Instance GZINSPJM Using C_OPPORPJM

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(GZINSPJM, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End

