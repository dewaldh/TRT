#<AdxTL>@(#)0.0.0.0 $Revision$
Subprog YPJMCST(YACTION,YPBUFCY,YOPPNUM,YPBUCOD,YPBUPAE,YPBUSTATE,YPBUELE,YPBUIMP
& ,YCUR,YPBUSTARTDT,YPBUENDDT,YOPPIMPT,YPLBSEQ,YPCCCOD,YPLBFCY
& ,YPLBDESAXX,YPLBU,YPLBQTY,YPLBPRI,YPLBAMT,YPLBDATBUD,YPLBFLGREM,YPLBQTYREM,YPLBPRIREM,YPLBQTYEST
& ,YPLBAMTEST,YPLBQTYREC,YPLBAMTREC,YTCHOPPIMPT
& ,YTCHPBUSTRDT,YPIMDESAXX,YTASCOD,YPIMTYP ,YPIMSTA ,YOPPSTATE)

Value Char      YACTION
Value Char      YPBUFCY
Value Char      YOPPNUM
Value Char      YPBUCOD
Value Char      YPBUPAE
Value Integer   YPBUSTATE
Value Integer   YPBUELE
Value Integer   YPBUIMP
Value Char      YCUR
Value Date      YPBUSTARTDT
Value Date      YPBUENDDT
Value Integer   YOPPIMPT

Value Integer   YPLBSEQ
Value Char      YPCCCOD
Value Char      YPLBFCY
Value Char      YPLBDESAXX
Value Char      YPLBU
Value Integer   YPLBQTY
Value Integer   YPLBPRI
Value Decimal   YPLBAMT
Value Date      YPLBDATBUD
Value Integer   YPLBFLGREM
Value Integer   YPLBQTYREM
Value Integer   YPLBPRIREM
Value Integer   YPLBQTYEST
Value Decimal   YPLBAMTEST
Value Integer   YPLBQTYREC
Value Decimal   YPLBAMTREC
Value Integer   YTCHOPPIMPT
Value Date      YTCHPBUSTRDT

Value Char      YPIMDESAXX
Value Char      YTASCOD
Value Integer   YPIMTYP
Value Integer   YPIMSTA
Value Integer   YOPPSTATE


Local Integer MY_STATUS
Local Integer IRET
Local Char SNUMERO(30)

#create PJM instance
Global Instance GZINSPJM Using C_OPPORPJM

ANOWRITE = 1

#clear any previous assignment
If (GZINSPJM <> null) : FreeGroup GZINSPJM : Endif

GZINSPJM = NewInstance C_OPPORPJM AllocGroup null

If YOPPNUM = ""
  GMESSAGE = "No project number found"
  GPE = 1
  End
Endif

#read the budget record
[L]MY_STATUS = fmet GZINSPJM.AREAD(YOPPNUM)

If [L]MY_STATUS <> 0
  GMESSAGE = "Project not found"
  GPE = 1
  End
Endif

#ifn no budget number was found, create one.
If GZINSPJM.BUD.PBUNUM = ""
  Call NUMERO("PBU","",date$,"",SNUMERO,IRET) From SUBANM
  GZINSPJM.BUD.PBUNUM = SNUMERO
Endif

 #You can use the instruction SetInstance which will set propertie's values from field's values for propertie's names that are identical to a field's name of the [F] file.
  #SetInstance GZINSPJM With [F:PJBU]
GZINSPJM.BUD(INDEX).PBUFCY = YPBUFCY
GZINSPJM.BUD(INDEX).OPPNUM = YOPPNUM
GZINSPJM.BUD(INDEX).PBUCOD = YPBUCOD
GZINSPJM.BUD(INDEX).PBUPAE = YPBUPAE
GZINSPJM.BUD(INDEX).PBUSTATE = YPBUSTATE
GZINSPJM.BUD(INDEX).PBUELE = YPBUELE
GZINSPJM.BUD(INDEX).PBUIMP = PBUIMP
GZINSPJM.BUD(INDEX).CUR = YCUR
GZINSPJM.PBUSTARTDT = YPBUSTARTDT
GZINSPJM.PBUENDDT = YPBUENDDT
GZINSPJM.BUD(INDEX).TCHOPPIMPT = GZINSPJM.OPPIMPT

#GZINSPJM.CUR = YCUR


 Local Integer INDEX1
  INDEX1 = fmet GZINSPJM.BUD.ADDLINE("BUDLIG", [V]CST_ALASTPOS)
  If (INDEX1 = [V]CST_ANOTDEFINED)
    # Error management
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
    GOK = 0
    GERR = 1
    Return
  Endif
#
#  # Use the SetInstance
#  #SetInstance GZINSPJM.BUDLIG(INDEX) With [F:PJLB]
#  #If (GERR = 1) : Return : Endif
#  #Infbox GZINSPJM.BUDLIG(INDEX).PBUCOD
GZINSPJM.BUD.BUDLIG(INDEX1).OPPNUM = YOPPNUM
GZINSPJM.BUD.BUDLIG(INDEX1).PBUCOD = YPBUCOD
GZINSPJM.BUD.BUDLIG(INDEX1).PLBSEQ = 10
GZINSPJM.BUD.BUDLIG(INDEX1).PCCCOD = YPCCCOD
GZINSPJM.BUD.BUDLIG(INDEX1).PLBFCY = YPLBFCY
GZINSPJM.BUD.BUDLIG(INDEX1).PLBDESAXX = YPLBDESAXX
GZINSPJM.BUD.BUDLIG(INDEX1).PLBU = YPLBU
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTY = YPLBQTY
GZINSPJM.BUD.BUDLIG(INDEX1).PLBPRI = YPLBPRI
GZINSPJM.BUD.BUDLIG(INDEX1).PLBAMT = YPLBAMT
GZINSPJM.BUD.BUDLIG(INDEX1).PLBDATBUD = YPLBDATBUD
GZINSPJM.BUD.BUDLIG(INDEX1).PLBFLGREM = YPLBFLGREM
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTYREM = YPLBQTYREM
GZINSPJM.BUD.BUDLIG(INDEX1).PLBPRIREM = YPLBPRIREM
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTYEST = YPLBQTYEST
GZINSPJM.BUD.BUDLIG(INDEX1).PLBAMTEST = YPLBAMTEST
GZINSPJM.BUD.BUDLIG(INDEX1).PLBQTYREC = YPLBQTYREC
GZINSPJM.BUD.BUDLIG(INDEX1).PLBAMTREC = YPLBAMTREC
GZINSPJM.BUD.BUDLIG(INDEX1).CUR = YCUR

GZINSPJM.BUD.BUDLIG(INDEX).TCHPBUSTRDT = date$


Local Integer INDEX2
  INDEX2 = fmet GZINSPJM.BUD.ADDLINE("PIMPL", [V]CST_ALASTPOS)
  If (INDEX2 = [V]CST_ANOTDEFINED)
    # Error management
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
    GERR = 1
    End
  Endif
#
#
## Use the SetInstance
#  #SetInstance GZINSPJM.PIMPL(INDEX) With [F:PJLB]
  GZINSPJM.BUD.PIMPL(INDEX2).PIMDESAXX = YPIMDESAXX
  GZINSPJM.BUD.PIMPL(INDEX2).OPPNUM = YOPPNUM
  GZINSPJM.BUD.PIMPL(INDEX2).PBUCOD = YPBUCOD
  GZINSPJM.BUD.PIMPL(INDEX2).TASCOD = YTASCOD
  GZINSPJM.BUD.PIMPL(INDEX2).FCY = GZINSPJM.BUD.BUDLIG(INDEX).PLBFCY
  GZINSPJM.BUD.PIMPL(INDEX2).PIMTYP = YPIMTYP
  GZINSPJM.BUD.PIMPL(INDEX2).PIMSTA = YPIMSTA
  GZINSPJM.BUD.PIMPL(INDEX2).FINRSPFCY = GZINSPJM.BUD.BUDLIG(INDEX).PLBFCY
  GZINSPJM.BUD.PIMPL(INDEX2).CPY = YCPY
  GZINSPJM.BUD.PIMPL(INDEX2).OPPSTATE = YOPPSTATE
  GZINSPJM.BUD.PIMPL(INDEX2).PBUSTATE = GZINSPJM.BUD(INDEX).PBUSTATE

 [L]MY_STATUS = fmet GZINSPJM.BUD.AUPDATE()
  If ([L]MY_STATUS >= [V]CST_AERROR)
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)
    #If GMESSAGE = AVOID.ACHAR Then
      #GERR = 1
    #Endif
  Endif

If GZINSPJM <> null Then
    FreeGroup GZINSPJM
  Endif
  Kill GZINSPJM
  ANOWRITE = 0
End

#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)

  Variable Instance GZINSPJM Using C_OPPORPJM

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(GZINSPJM, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End

