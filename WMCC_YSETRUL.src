#<AdxTL>@(#)0.0.0.0 $Revision$Class Settlement Rule
# Supervisor
## CRUD-CLASSE ## YSETRUL
# 2019-04-08 05:37:55 191


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(YSETRUL,ASTATUS)
Variable Instance YSETRUL Using C_YSETRUL
Variable Integer ASTATUS

If YSETRUL = null : End : Endif

Gosub _AVARIABLES From WMC00YSETRUL

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_YSETRUL

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(YSETRUL,ASTATUS)
Variable Instance YSETRUL Using C_YSETRUL
Variable Integer ASTATUS

If YSETRUL = null : End : Endif

Gosub AVARIABLES From WMC00YSETRUL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_YSETRUL
Else
 Gosub AINSERT_YSETRUL
Endif

Gosub _AINSERT_AFTER
[L]A_I = YSETRUL.freeSnapshot
YSETRUL.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YSETRUL._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YSETRUL._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YSETRUL._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If YSETRUL.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YSETRUL.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null
& and !find(YSETRUL.YSETRULTYP(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null
& and !find(YSETRUL.YSETRULTYP(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_YSETRUL
Trbegin [F:YSTR]
 Gosub AINSERT_YSETRUL
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_YSETRUL
Raz [F:YSTR]
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00YSETRUL._MAJSQL_YSETRUL(YSETRUL))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null and 
& YSETRUL.YSETRULTYP(A_N2).ASTALIN=[V]CST_ALL
YSETRUL.YSETRULTYP(A_N2).ASTALIN = [V]CST_AUPD
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If YSETRUL.snapshotEnabled=1
 [L]A_RETIK = YSETRUL.revertUpdTick
Endif
[L]ASTATUS = max(fmet YSETRUL.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(YSETRUL.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YSETRUL.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null
 [L]ASTATUS2 = fmet YSETRUL.YSETRULTYP(A_N2)._AINSERT_AFTER
 If YSETRUL.YSETRULTYP(A_N2).ASTALIN=[V]CST_ADEL or YSETRUL.YSETRULTYP(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YSETRUL.YSETRULTYP(A_N2)
  YSETRUL.YSETRULTYP(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Return



