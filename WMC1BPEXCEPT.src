#<AdxTL>@(#)0.0.0.0 $Revision$Class BP-Company exception
# Supervisor
## ACLA-CLASSE ## BPEXCEPT
# 2018-08-27 12:25:57 020


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : BPRNUM BP ( Field BPR 15)
####################################################################

$SET_BPRNUM
If [L]_AOLDVAL<>this.BPRNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPRNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPRNUM
 Gosub PROPAGATE_BPRNUM
Endif
Return

$INIT_BPRNUM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "BPRNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BPRNUM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "BPRNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPRNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPRNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPRNUM
[L]CURPRO = "BPRNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BPRNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPRNUM
[L]CURPRO = "BPRNUM"
If vireblc(this.BPRNUM,2)<>vireblc(format$("K:15c",this.BPRNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BPRNUM
[L]CURPRO = "BPRNUM"
If vireblc(this.BPRNUM,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPR.ACTRLREF(this,"BPRNUM",this.BPRNUM,this.BPRNUM,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BPRNUM<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPRNUM
[L]CURPRO = "BPRNUM"
Return

$PROPAGATE_BPRNUM
this.isReadonly = 0
[L]CURPRO = "BPRNUM"
Gosub _LNKPRO_BPRNUM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPRNUM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "BPRNUM"
$_LNKPRO_BPRNUM
If vireblc(this.BPRNUM,2)<>""
 # Link BPARTNER
 Local File BPARTNER [WBPR]
 Read [F:WBPR]BPR0 = this.BPRNUM
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("BPRNUM","$title",[F:WBPR]BPRSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("BPRNUM","$description",[F:WBPR]BPRNAM)
 Endif
 LogicClose File [WBPR]
Endif
Return

$_ALOADATTRIBUTE_BPRNUM
[L]ASTATUS = fmet this.ASETATTRIBUTE("BPRNUM","$isMandatory","true")
Return


####################################################################
# 2 : CPY Company ( Field CPY 5)
####################################################################

$SET_CPY
If [L]_AOLDVAL<>this.CPY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPY
 Gosub PROPAGATE_CPY
Endif
Return

$INIT_CPY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CPY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CPY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPY
[L]CURPRO = "CPY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CPY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>vireblc(format$("K:5c",this.CPY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCPY.ACTRLREF(this,"CPY",this.CPY,this.CPY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CPY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPY
[L]CURPRO = "CPY"
Return

$PROPAGATE_CPY
this.isReadonly = 0
[L]CURPRO = "CPY"
Gosub _LNKPRO_CPY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CPY"
$_LNKPRO_CPY
If vireblc(this.CPY,2)<>""
 # Link COMPANY
 Local File COMPANY [WCPY]
 Read [F:WCPY]CPY0 = this.CPY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$title",[F:WCPY]CPYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$description",[F:WCPY]CPYNAM)
 Endif
 LogicClose File [WCPY]
Endif
Return

$_ALOADATTRIBUTE_CPY
[L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$isMandatory","true")
Return


####################################################################
# 3 : VACBPR BP tax rule ( Field TVB 5)
####################################################################

$SET_VACBPR
If [L]_AOLDVAL<>this.VACBPR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VACBPR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VACBPR
 Gosub PROPAGATE_VACBPR
Endif
Return

$INIT_VACBPR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VACBPR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VACBPR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VACBPR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VACBPR
[L]CURPRO = "VACBPR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VACBPR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VACBPR
[L]CURPRO = "VACBPR"
If vireblc(this.VACBPR,2)<>vireblc(format$("K:5c",this.VACBPR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VACBPR
[L]CURPRO = "VACBPR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VACBPR
[L]CURPRO = "VACBPR"
If vireblc(this.VACBPR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTVB.ACTRLREF(this,"VACBPR",this.VACBPR,this.VACBPR,this.VACBPR_LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.VACBPR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_VACBPR
this.isReadonly = 0
[L]CURPRO = "VACBPR"
Gosub _LNKPRO_VACBPR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VACBPR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR"
$_LNKPRO_VACBPR
If vireblc(this.VACBPR,2)<>""
 # Link TABVACBPR
 Local File TABVACBPR [WTVB]
 Read [F:WTVB]TVB0 = this.VACBPR;this.VACBPR_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVACBPR" & ZONE="SHOAXX" & IDENT1=[F:WTVB]VACBPR & IDENT2=[F:WTVB]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVACBPR" & ZONE="DESAXX" & IDENT1=[F:WTVB]VACBPR & IDENT2=[F:WTVB]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTVB]
Endif
Return


####################################################################
# 4 : VACBPR_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_VACBPR_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_VACBPR_LEG
If [L]_AOLDVAL<>this.VACBPR_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VACBPR_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VACBPR_LEG
 Gosub PROPAGATE_VACBPR_LEG
Endif
Return

$INIT_VACBPR_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"VACBPR_LEG",this.VACBPR_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VACBPR_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VACBPR_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VACBPR_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VACBPR_LEG
[L]CURPRO = "VACBPR_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VACBPR_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VACBPR_LEG
[L]CURPRO = "VACBPR_LEG"
If vireblc(this.VACBPR_LEG,2)<>vireblc(format$("K:20B",this.VACBPR_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VACBPR_LEG
[L]CURPRO = "VACBPR_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"VACBPR_LEG",this.VACBPR_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VACBPR_LEG
[L]CURPRO = "VACBPR_LEG"
Return

$PROPAGATE_VACBPR_LEG
this.isReadonly = 0
[L]CURPRO = "VACBPR_LEG"
Gosub _LNKPRO_VACBPR_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VACBPR_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPR_LEG"
$_LNKPRO_VACBPR_LEG
If vireblc(this.VACBPR_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.VACBPR_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPR_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPR_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 5 : VACBPC Customer tax rule ( Field TVB 5)
####################################################################

$SET_VACBPC
If [L]_AOLDVAL<>this.VACBPC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VACBPC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VACBPC
 Gosub PROPAGATE_VACBPC
Endif
Return

$INIT_VACBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VACBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VACBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VACBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VACBPC
[L]CURPRO = "VACBPC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VACBPC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VACBPC
[L]CURPRO = "VACBPC"
If vireblc(this.VACBPC,2)<>vireblc(format$("K:5c",this.VACBPC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VACBPC
[L]CURPRO = "VACBPC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VACBPC
[L]CURPRO = "VACBPC"
If vireblc(this.VACBPC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTVB.ACTRLREF(this,"VACBPC",this.VACBPC,this.VACBPC,this.VACBPC_LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.VACBPC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_VACBPC
this.isReadonly = 0
[L]CURPRO = "VACBPC"
Gosub _LNKPRO_VACBPC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VACBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC"
$_LNKPRO_VACBPC
If vireblc(this.VACBPC,2)<>""
 # Link TABVACBPR
 Local File TABVACBPR [WTVB]
 Read [F:WTVB]TVB0 = this.VACBPC;this.VACBPC_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVACBPR" & ZONE="SHOAXX" & IDENT1=[F:WTVB]VACBPR & IDENT2=[F:WTVB]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVACBPR" & ZONE="DESAXX" & IDENT1=[F:WTVB]VACBPR & IDENT2=[F:WTVB]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTVB]
Endif
Return


####################################################################
# 6 : VACBPC_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_VACBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_VACBPC_LEG
If [L]_AOLDVAL<>this.VACBPC_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VACBPC_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VACBPC_LEG
 Gosub PROPAGATE_VACBPC_LEG
Endif
Return

$INIT_VACBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"VACBPC_LEG",this.VACBPC_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VACBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VACBPC_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VACBPC_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VACBPC_LEG
[L]CURPRO = "VACBPC_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VACBPC_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VACBPC_LEG
[L]CURPRO = "VACBPC_LEG"
If vireblc(this.VACBPC_LEG,2)<>vireblc(format$("K:20B",this.VACBPC_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VACBPC_LEG
[L]CURPRO = "VACBPC_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"VACBPC_LEG",this.VACBPC_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VACBPC_LEG
[L]CURPRO = "VACBPC_LEG"
Return

$PROPAGATE_VACBPC_LEG
this.isReadonly = 0
[L]CURPRO = "VACBPC_LEG"
Gosub _LNKPRO_VACBPC_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VACBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPC_LEG"
$_LNKPRO_VACBPC_LEG
If vireblc(this.VACBPC_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.VACBPC_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPC_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPC_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 7 : VACBPS Supplier tax rule ( Field TVB 5)
####################################################################

$SET_VACBPS
If [L]_AOLDVAL<>this.VACBPS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VACBPS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VACBPS
 Gosub PROPAGATE_VACBPS
Endif
Return

$INIT_VACBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VACBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VACBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VACBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VACBPS
[L]CURPRO = "VACBPS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VACBPS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VACBPS
[L]CURPRO = "VACBPS"
If vireblc(this.VACBPS,2)<>vireblc(format$("K:5c",this.VACBPS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VACBPS
[L]CURPRO = "VACBPS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VACBPS
[L]CURPRO = "VACBPS"
If vireblc(this.VACBPS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTVB.ACTRLREF(this,"VACBPS",this.VACBPS,this.VACBPS,this.VACBPS_LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.VACBPS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_VACBPS
this.isReadonly = 0
[L]CURPRO = "VACBPS"
Gosub _LNKPRO_VACBPS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VACBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS"
$_LNKPRO_VACBPS
If vireblc(this.VACBPS,2)<>""
 # Link TABVACBPR
 Local File TABVACBPR [WTVB]
 Read [F:WTVB]TVB0 = this.VACBPS;this.VACBPS_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVACBPR" & ZONE="SHOAXX" & IDENT1=[F:WTVB]VACBPR & IDENT2=[F:WTVB]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVACBPR" & ZONE="DESAXX" & IDENT1=[F:WTVB]VACBPR & IDENT2=[F:WTVB]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTVB]
Endif
Return


####################################################################
# 8 : VACBPS_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_VACBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_VACBPS_LEG
If [L]_AOLDVAL<>this.VACBPS_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VACBPS_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VACBPS_LEG
 Gosub PROPAGATE_VACBPS_LEG
Endif
Return

$INIT_VACBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"VACBPS_LEG",this.VACBPS_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VACBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VACBPS_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VACBPS_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VACBPS_LEG
[L]CURPRO = "VACBPS_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VACBPS_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VACBPS_LEG
[L]CURPRO = "VACBPS_LEG"
If vireblc(this.VACBPS_LEG,2)<>vireblc(format$("K:20B",this.VACBPS_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VACBPS_LEG
[L]CURPRO = "VACBPS_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"VACBPS_LEG",this.VACBPS_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VACBPS_LEG
[L]CURPRO = "VACBPS_LEG"
Return

$PROPAGATE_VACBPS_LEG
this.isReadonly = 0
[L]CURPRO = "VACBPS_LEG"
Gosub _LNKPRO_VACBPS_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VACBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "VACBPS_LEG"
$_LNKPRO_VACBPS_LEG
If vireblc(this.VACBPS_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.VACBPS_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPS_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VACBPS_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 9 : PTEBPC Customer payment terms ( Field PTE 15)
####################################################################

$SET_PTEBPC
If [L]_AOLDVAL<>this.PTEBPC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PTEBPC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PTEBPC
 Gosub PROPAGATE_PTEBPC
Endif
Return

$INIT_PTEBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PTEBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PTEBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PTEBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PTEBPC
[L]CURPRO = "PTEBPC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PTEBPC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PTEBPC
[L]CURPRO = "PTEBPC"
If vireblc(this.PTEBPC,2)<>vireblc(format$("K:15c",this.PTEBPC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PTEBPC
[L]CURPRO = "PTEBPC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PTEBPC
[L]CURPRO = "PTEBPC"
If vireblc(this.PTEBPC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPPTE.ACTRLREF(this,"PTEBPC",this.PTEBPC,this.PTEBPC,this.PTEBPC_LEG,1,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PTEBPC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_PTEBPC
this.isReadonly = 0
[L]CURPRO = "PTEBPC"
Gosub _LNKPRO_PTEBPC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PTEBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC"
$_LNKPRO_PTEBPC
If vireblc(this.PTEBPC,2)<>""
 # Link TABPAYTERM
 Local File TABPAYTERM [WTPT]
 Read [F:WTPT]TPT0 = this.PTEBPC;this.PTEBPC_LEG;1
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABPAYTERM" & ZONE="SHOAXX" & IDENT1=[F:WTPT]PTE & IDENT2=[F:WTPT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABPAYTERM" & ZONE="DESAXX" & IDENT1=[F:WTPT]PTE & IDENT2=[F:WTPT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTPT]
Endif
Return


####################################################################
# 10 : PTEBPC_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_PTEBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_PTEBPC_LEG
If [L]_AOLDVAL<>this.PTEBPC_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PTEBPC_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PTEBPC_LEG
 Gosub PROPAGATE_PTEBPC_LEG
Endif
Return

$INIT_PTEBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"PTEBPC_LEG",this.PTEBPC_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PTEBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PTEBPC_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PTEBPC_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PTEBPC_LEG
[L]CURPRO = "PTEBPC_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PTEBPC_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PTEBPC_LEG
[L]CURPRO = "PTEBPC_LEG"
If vireblc(this.PTEBPC_LEG,2)<>vireblc(format$("K:20B",this.PTEBPC_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PTEBPC_LEG
[L]CURPRO = "PTEBPC_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"PTEBPC_LEG",this.PTEBPC_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PTEBPC_LEG
[L]CURPRO = "PTEBPC_LEG"
Return

$PROPAGATE_PTEBPC_LEG
this.isReadonly = 0
[L]CURPRO = "PTEBPC_LEG"
Gosub _LNKPRO_PTEBPC_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PTEBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPC_LEG"
$_LNKPRO_PTEBPC_LEG
If vireblc(this.PTEBPC_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.PTEBPC_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPC_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPC_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 11 : PTEBPS Supplier payment terms ( Field PTE 15)
####################################################################

$SET_PTEBPS
If [L]_AOLDVAL<>this.PTEBPS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PTEBPS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PTEBPS
 Gosub PROPAGATE_PTEBPS
Endif
Return

$INIT_PTEBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PTEBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PTEBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PTEBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PTEBPS
[L]CURPRO = "PTEBPS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PTEBPS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PTEBPS
[L]CURPRO = "PTEBPS"
If vireblc(this.PTEBPS,2)<>vireblc(format$("K:15c",this.PTEBPS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PTEBPS
[L]CURPRO = "PTEBPS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PTEBPS
[L]CURPRO = "PTEBPS"
If vireblc(this.PTEBPS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPPTE.ACTRLREF(this,"PTEBPS",this.PTEBPS,this.PTEBPS,this.PTEBPS_LEG,1,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PTEBPS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_PTEBPS
this.isReadonly = 0
[L]CURPRO = "PTEBPS"
Gosub _LNKPRO_PTEBPS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PTEBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS"
$_LNKPRO_PTEBPS
If vireblc(this.PTEBPS,2)<>""
 # Link TABPAYTERM
 Local File TABPAYTERM [WTPT]
 Read [F:WTPT]TPT0 = this.PTEBPS;this.PTEBPS_LEG;1
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABPAYTERM" & ZONE="SHOAXX" & IDENT1=[F:WTPT]PTE & IDENT2=[F:WTPT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABPAYTERM" & ZONE="DESAXX" & IDENT1=[F:WTPT]PTE & IDENT2=[F:WTPT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTPT]
Endif
Return


####################################################################
# 12 : PTEBPS_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_PTEBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_PTEBPS_LEG
If [L]_AOLDVAL<>this.PTEBPS_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PTEBPS_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PTEBPS_LEG
 Gosub PROPAGATE_PTEBPS_LEG
Endif
Return

$INIT_PTEBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"PTEBPS_LEG",this.PTEBPS_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PTEBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PTEBPS_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PTEBPS_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PTEBPS_LEG
[L]CURPRO = "PTEBPS_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PTEBPS_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PTEBPS_LEG
[L]CURPRO = "PTEBPS_LEG"
If vireblc(this.PTEBPS_LEG,2)<>vireblc(format$("K:20B",this.PTEBPS_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PTEBPS_LEG
[L]CURPRO = "PTEBPS_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"PTEBPS_LEG",this.PTEBPS_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PTEBPS_LEG
[L]CURPRO = "PTEBPS_LEG"
Return

$PROPAGATE_PTEBPS_LEG
this.isReadonly = 0
[L]CURPRO = "PTEBPS_LEG"
Gosub _LNKPRO_PTEBPS_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PTEBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PTEBPS_LEG"
$_LNKPRO_PTEBPS_LEG
If vireblc(this.PTEBPS_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.PTEBPS_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPS_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PTEBPS_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 13 : DEPBPC Customer early disc ( Field TDA 5)
####################################################################

$SET_DEPBPC
If [L]_AOLDVAL<>this.DEPBPC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEPBPC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEPBPC
 Gosub PROPAGATE_DEPBPC
Endif
Return

$INIT_DEPBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEPBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEPBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEPBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEPBPC
[L]CURPRO = "DEPBPC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEPBPC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEPBPC
[L]CURPRO = "DEPBPC"
If vireblc(this.DEPBPC,2)<>vireblc(format$("K:5c",this.DEPBPC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEPBPC
[L]CURPRO = "DEPBPC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEPBPC
[L]CURPRO = "DEPBPC"
If vireblc(this.DEPBPC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTDA.ACTRLREF(this,"DEPBPC",this.DEPBPC,this.DEPBPC,this.DEPBPC_LEG,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DEPBPC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_DEPBPC
this.isReadonly = 0
[L]CURPRO = "DEPBPC"
Gosub _LNKPRO_DEPBPC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEPBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC"
$_LNKPRO_DEPBPC
If vireblc(this.DEPBPC,2)<>""
 # Link TABDEPAGIO
 Local File TABDEPAGIO [WTDA]
 Read [F:WTDA]TDA0 = this.DEPBPC;this.DEPBPC_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABDEPAGIO" & ZONE="SHOAXX" & IDENT1=[F:WTDA]DEP & IDENT2=[F:WTDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABDEPAGIO" & ZONE="DESAXX" & IDENT1=[F:WTDA]DEP & IDENT2=[F:WTDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTDA]
Endif
Return


####################################################################
# 14 : DEPBPC_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_DEPBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DEPBPC_LEG
If [L]_AOLDVAL<>this.DEPBPC_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEPBPC_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEPBPC_LEG
 Gosub PROPAGATE_DEPBPC_LEG
Endif
Return

$INIT_DEPBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"DEPBPC_LEG",this.DEPBPC_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEPBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEPBPC_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEPBPC_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEPBPC_LEG
[L]CURPRO = "DEPBPC_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEPBPC_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEPBPC_LEG
[L]CURPRO = "DEPBPC_LEG"
If vireblc(this.DEPBPC_LEG,2)<>vireblc(format$("K:20B",this.DEPBPC_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEPBPC_LEG
[L]CURPRO = "DEPBPC_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"DEPBPC_LEG",this.DEPBPC_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEPBPC_LEG
[L]CURPRO = "DEPBPC_LEG"
Return

$PROPAGATE_DEPBPC_LEG
this.isReadonly = 0
[L]CURPRO = "DEPBPC_LEG"
Gosub _LNKPRO_DEPBPC_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEPBPC_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPC_LEG"
$_LNKPRO_DEPBPC_LEG
If vireblc(this.DEPBPC_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.DEPBPC_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPC_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPC_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 15 : DEPBPS Supplier early disc ( Field TDA 5)
####################################################################

$SET_DEPBPS
If [L]_AOLDVAL<>this.DEPBPS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEPBPS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEPBPS
 Gosub PROPAGATE_DEPBPS
Endif
Return

$INIT_DEPBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEPBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEPBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEPBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEPBPS
[L]CURPRO = "DEPBPS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEPBPS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEPBPS
[L]CURPRO = "DEPBPS"
If vireblc(this.DEPBPS,2)<>vireblc(format$("K:5c",this.DEPBPS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEPBPS
[L]CURPRO = "DEPBPS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEPBPS
[L]CURPRO = "DEPBPS"
If vireblc(this.DEPBPS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTDA.ACTRLREF(this,"DEPBPS",this.DEPBPS,this.DEPBPS,this.DEPBPS_LEG,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DEPBPS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_DEPBPS
this.isReadonly = 0
[L]CURPRO = "DEPBPS"
Gosub _LNKPRO_DEPBPS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEPBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS"
$_LNKPRO_DEPBPS
If vireblc(this.DEPBPS,2)<>""
 # Link TABDEPAGIO
 Local File TABDEPAGIO [WTDA]
 Read [F:WTDA]TDA0 = this.DEPBPS;this.DEPBPS_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABDEPAGIO" & ZONE="SHOAXX" & IDENT1=[F:WTDA]DEP & IDENT2=[F:WTDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABDEPAGIO" & ZONE="DESAXX" & IDENT1=[F:WTDA]DEP & IDENT2=[F:WTDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTDA]
Endif
Return


####################################################################
# 16 : DEPBPS_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_DEPBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DEPBPS_LEG
If [L]_AOLDVAL<>this.DEPBPS_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEPBPS_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEPBPS_LEG
 Gosub PROPAGATE_DEPBPS_LEG
Endif
Return

$INIT_DEPBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"DEPBPS_LEG",this.DEPBPS_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEPBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEPBPS_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEPBPS_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEPBPS_LEG
[L]CURPRO = "DEPBPS_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEPBPS_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEPBPS_LEG
[L]CURPRO = "DEPBPS_LEG"
If vireblc(this.DEPBPS_LEG,2)<>vireblc(format$("K:20B",this.DEPBPS_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEPBPS_LEG
[L]CURPRO = "DEPBPS_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"DEPBPS_LEG",this.DEPBPS_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEPBPS_LEG
[L]CURPRO = "DEPBPS_LEG"
Return

$PROPAGATE_DEPBPS_LEG
this.isReadonly = 0
[L]CURPRO = "DEPBPS_LEG"
Gosub _LNKPRO_DEPBPS_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEPBPS_LEG
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "DEPBPS_LEG"
$_LNKPRO_DEPBPS_LEG
If vireblc(this.DEPBPS_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.DEPBPS_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPS_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEPBPS_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 17 : ACCBPC Customer accounting code ( Field CAC 10)
####################################################################

$SET_ACCBPC
If [L]_AOLDVAL<>this.ACCBPC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCBPC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCBPC
 Gosub PROPAGATE_ACCBPC
Endif
Return

$INIT_ACCBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACCBPC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACCBPC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCBPC
[L]CURPRO = "ACCBPC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCBPC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCBPC
[L]CURPRO = "ACCBPC"
If vireblc(this.ACCBPC,2)<>vireblc(format$("K:10c",this.ACCBPC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCBPC
[L]CURPRO = "ACCBPC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCBPC
[L]CURPRO = "ACCBPC"
Return

$PROPAGATE_ACCBPC
this.isReadonly = 0
[L]CURPRO = "ACCBPC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCBPC
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACCBPC"
$_LNKPRO_ACCBPC
Return


####################################################################
# 18 : ACCBPS Supplier accounting code ( Field CAC 10)
####################################################################

$SET_ACCBPS
If [L]_AOLDVAL<>this.ACCBPS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCBPS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCBPS
 Gosub PROPAGATE_ACCBPS
Endif
Return

$INIT_ACCBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACCBPS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACCBPS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCBPS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCBPS
[L]CURPRO = "ACCBPS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCBPS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCBPS
[L]CURPRO = "ACCBPS"
If vireblc(this.ACCBPS,2)<>vireblc(format$("K:10c",this.ACCBPS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCBPS
[L]CURPRO = "ACCBPS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCBPS
[L]CURPRO = "ACCBPS"
Return

$PROPAGATE_ACCBPS
this.isReadonly = 0
[L]CURPRO = "ACCBPS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCBPS
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACCBPS"
$_LNKPRO_ACCBPS
Return


####################################################################
# 19 : ACEAUZ Authorization ( Field Local menu number 1)
####################################################################

$SET_ACEAUZ
If [L]_AOLDVAL<>this.ACEAUZ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACEAUZ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACEAUZ
 Gosub PROPAGATE_ACEAUZ
Endif
Return

$INIT_ACEAUZ
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACEAUZ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ACEAUZ=0 and fmet this.AGETATTRIBUTE("ACEAUZ","$isMandatory")="true"
 this.ACEAUZ = 1
Endif
Return
 
$CONTROL_ACEAUZ
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACEAUZ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACEAUZ                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACEAUZ                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACEAUZ
[L]CURPRO = "ACEAUZ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACEAUZ=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACEAUZ
[L]CURPRO = "ACEAUZ"
If this.ACEAUZ<0 or this.ACEAUZ>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ACEAUZ)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ACEAUZ
[L]CURPRO = "ACEAUZ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACEAUZ
[L]CURPRO = "ACEAUZ"
Return

$PROPAGATE_ACEAUZ
this.isReadonly = 0
[L]CURPRO = "ACEAUZ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACEAUZ
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "ACEAUZ"
$_LNKPRO_ACEAUZ
Return


####################################################################
# 20 : PAYDAY Contractual period ( Field C 2)
####################################################################

$SET_PAYDAY
If [L]_AOLDVAL<>this.PAYDAY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PAYDAY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PAYDAY
 Gosub PROPAGATE_PAYDAY
Endif
Return

$INIT_PAYDAY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PAYDAY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PAYDAY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PAYDAY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PAYDAY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PAYDAY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PAYDAY
[L]CURPRO = "PAYDAY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PAYDAY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PAYDAY
[L]CURPRO = "PAYDAY"
Return

$_AOTHERS_PAYDAY
[L]CURPRO = "PAYDAY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PAYDAY
[L]CURPRO = "PAYDAY"
Return

$PROPAGATE_PAYDAY
this.isReadonly = 0
[L]CURPRO = "PAYDAY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PAYDAY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "PAYDAY"
$_LNKPRO_PAYDAY
Return


####################################################################
# 21 : CFOEXDCPY Cash forecast excluded ( Field Local menu number 1)
####################################################################

$SET_CFOEXDCPY
If [L]_AOLDVAL<>this.CFOEXDCPY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CFOEXDCPY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CFOEXDCPY
 Gosub PROPAGATE_CFOEXDCPY
Endif
Return

$INIT_CFOEXDCPY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CFOEXDCPY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CFOEXDCPY=0 and fmet this.AGETATTRIBUTE("CFOEXDCPY","$isMandatory")="true"
 this.CFOEXDCPY = 1
Endif
Return
 
$CONTROL_CFOEXDCPY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CFOEXDCPY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CFOEXDCPY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CFOEXDCPY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CFOEXDCPY
[L]CURPRO = "CFOEXDCPY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CFOEXDCPY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CFOEXDCPY
[L]CURPRO = "CFOEXDCPY"
If this.CFOEXDCPY<0 or this.CFOEXDCPY>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CFOEXDCPY)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CFOEXDCPY
[L]CURPRO = "CFOEXDCPY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CFOEXDCPY
[L]CURPRO = "CFOEXDCPY"
Return

$PROPAGATE_CFOEXDCPY
this.isReadonly = 0
[L]CURPRO = "CFOEXDCPY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CFOEXDCPY
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CFOEXDCPY"
$_LNKPRO_CFOEXDCPY
Return


####################################################################
# 22 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 23 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 24 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 25 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 26 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0BPEXCEPT
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return




