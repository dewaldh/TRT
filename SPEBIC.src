#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################################
# Script            : SPEBIC                                                                                         #
# Creation date     : 11/01/2019                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : LT (Leverage Technology)                                                                       #
# Module            : A/P-A/R accounting                                                                             #
# -------------------------------------------------------------------------------------------------------------------#
# Epic              :                                                                                                #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
######################################################################################################################
$ACTION
Case ACTION
  When "OUVRE"      : Gosub OUVRE
  When "INICRE"     : Gosub INICRE
  When "RAZCRE"     : Gosub RAZCRE
  When "RAZDUP"     : Gosub RAZDUP
  When "APRES_CRE"  : Gosub APRES_CRE
  When "APRES_MOD"  : Gosub APRES_MOD
  When "VERIF_CRE"  : Gosub VERIF_CRE
  When "VERIF_MOD"  : Gosub VERIF_MOD
  When "STYLE"      : Gosub STYLE
  When "SETBOUT"    : Gosub SETBOUT
  When Default
Endcase
Return

#------------------------------------------------------------------------------------#
#Open needed tables
#------------------------------------------------------------------------------------#
$OUVRE

If clalev([F:YGAC])   = 0 : Local File GACCOUNT   [YGAC]  : Endif
If clalev([F:YCCE])   = 0 : Local File CACCE      [YCCE]  : Endif
If clalev([F:YCPY])   = 0 : Local File COMPANY    [YCPY]  : Endif
If clalev([F:YGACM])  = 0 : Local File GACM       [YGACM] : Endif
If clalev([F:YGLED])  = 0 : Local File GLED       [YGLED] : Endif
If clalev([F:YBPC])   = 0 : Local File BPCUSTOMER [YBPC]  : Endif
If clalev([F:YVAC])   = 0 : Local File TABVACBPR  [YVAC]  : Endif
If clalev([F:YPJB])  = 0  : Local File PJMBUDLIG   [YPJB] : Endif
If clalev([F:YPIM])  = 0  : Local File PIMPL       [YPIM] : Endif

Return

#------------------------------------------------------------------------------------#
#Do validations before create
#------------------------------------------------------------------------------------#
$INICRE
If func AFNC.ACTIV("YPJM") = 1
  Gosub VALIDATEPJM
Endif
Return

#------------------------------------------------------------------------------------#
#Do validations before creation
#------------------------------------------------------------------------------------#
$VERIF_CRE

#DFCX1-337 Update Amount - GST header amount to supress "Totals different from header" warning message when creating / updating record
[M:BIC1]AMTNOT = sum([M]AMTNOTLIN(0..[M]NBLIG-1))
Affzo [M:BIC1]AMTNOT

Return


#------------------------------------------------------------------------------------#
#Do validations before modifications
#------------------------------------------------------------------------------------#
$VERIF_MOD
If func AFNC.ACTIV("YPJM") = 1
  Gosub VALIDATEPJM
  GOK = 0
Endif

#DFCX1-337 Update Amount - GST header amount to supress "Totals different from header" warning message when creating / updating record
[M:BIC1]AMTNOT = sum([M]AMTNOTLIN(0..[M]NBLIG-1))
Affzo [M:BIC1]AMTNOT

Return


#------------------------------------------------------------------------------------#
#Do actions after creation
#------------------------------------------------------------------------------------#
$APRES_CRE
  #DFCX1-71 - Write-back Document number to Housing Job Stage if allocated to a Housing Job and Stage number
  If func AFNC.ACTIV("YHOU") = 1
    #Only for manually created documents
    If GWEBSERV = 0 and [F:SIH]NUM <> ""
      If [M:BIC0]YJBNR <> "" and [M:BIC0]YSTANBR > 0
        #Update Staging Record
        If !clalev ([F:YHJS])   : Local File YHOUJSTA   [F:YHJS]  : Endif

        Read [F:YHJS]YHJS0 = [M:BIC0]YJBNR;[M:BIC0]YSTANBR

        If fstat = 0

          [F:YHJS]YINVNUM = [F:SIH]NUM
          [F:YHJS]YAMTCLM = [F:SIH]AMTATI
          [F:YHJS]YDATCLM = [F:SIH]ACCDAT

          Rewrite [F:YHJS]

          If fstat <> 0
            Infbox("Failed to update Housing Job Stage")
          Endif

        Endif

        If clalev([F:YHJS])     : Close Local File [F:YHJS]     : Endif

      Endif
    Endif
  Endif

  #Refresh budget lines
  For I = 0 To [M:BIC3]NBLIG-1
    Call UPDATE_LINE_BUDGET(I,[M:BIC3]ACC1(I),[M:BIC3]PJTLIN(I),[M:BIC3]AMTNOTLIN(I),1)
  Next

  Gosub VALIDATE_OVERBUDGET

  #DFCX1-389 Check if Budget Checks are enabled for the Company
  Read[F:YCPY]CPY0 = [M:BIC0]CPY

  If fstat = 0

    If [F:CPY]YBUDCHK = 2

      #Warn if invoice is overbudget and not posted
      If [M:BIC1]YOVRBUD = 2 and [M:BIC1]STA = 2
        GMESSAGE = "The project's budget is exceeded. Posting of the invoice is disabled. Please correct the budget or invoice."
        GERR = 1
      Endif

    Endif

  Endif

Return


#------------------------------------------------------------------------------------#
#Do actions after modify
#------------------------------------------------------------------------------------#
$APRES_MOD

  #Refresh budget lines
  For I = 0 To [M:BIC3]NBLIG-1
    Call UPDATE_LINE_BUDGET(I,[M:BIC3]ACC1(I),[M:BIC3]PJTLIN(I),[M:BIC3]AMTNOTLIN(I),1)
  Next

  Gosub VALIDATE_OVERBUDGET

  #DFCX1-389 Check if Budget Checks are enabled for the Company
  Read[F:YCPY]CPY0 = [M:BIC0]CPY

  If fstat = 0

    If [F:CPY]YBUDCHK = 2

      #Warn if invoice is overbudget and not posted
      If [M:BIC1]YOVRBUD = 2 and [M:BIC1]STA = 2
        GMESSAGE = "The project's budget is exceeded. Posting of the invoice is disabled. Please correct the budget or invoice."
        GERR = 1
      Endif

    Endif

  Endif

Return
#------------------------------------------------------------------------------------#
#Do validations before create
#------------------------------------------------------------------------------------#
$RAZCRE
  #DFCX1-71 - Disable the Job Number, Stage Number, and Supress Statement Printing for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1
    Diszo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
Return


#------------------------------------------------------------------------------------#
#Do validations before duplication
#------------------------------------------------------------------------------------#
$RAZDUP
  #DFCX1-71 - Disable the Job Number, Stage Number, and Supress Statement Printing for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1

    Raz [M:BIC0]YJBNR,YSTANBR,YSTASUPP

    If [M:BIC0]SIVTYP = "HINV" or [M:BIC0]SIVTYP = "HCRN"
      Actzo [M:BIC0]YJBNR,YSTANBR
    Else
      Diszo [M:BIC0]YJBNR,YSTANBR
    Endif

    Diszo [M:BIC0]YSTASUPP
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
Return

#------------------------------------------------------------------------------------#
#Set Buttons
#------------------------------------------------------------------------------------#
$SETBOUT
  #DFCX1-72 - Disable the Delete link for Housing Job Invoices and Credit Notes
  If func AFNC.ACTIV("YHOU") = 1
    #Hide Delete button if its not called by a Web Service
    If GWEBSERV = 0
      If [M:BIC0]SIVTYP = "HINV" or [M:BIC0]SIVTYP = "HCRN"
        Call VIREBOUT(CHAINE,"A") From GOBJET
      Endif
    Endif
  Endif
Return


#------------------------------------------------------------------------------------#
#Do validations after record is displayed
#------------------------------------------------------------------------------------#
$STYLE
  #DFCX1-71 - Disable the Job Number and Stage Number fields for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1
    Diszo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
  #DFCX1-153 - DW -  the user must be unable to selected Project Header - Start
  If func AFNC.ACTIV("YPJM") = 1
    If dim([M:BIC1]PJTH)>0 : Chgfmt [M:BIC1]PJTH With "-K:40X" : Raz [M:BIC1]PJTH : Endif
  Endif
  #DFCX1-153 - DW -  the user must be unable to selected Project Header - End

  #Refresh budget lines
  For I = 0 To [M:BIC3]NBLIG-1
    Call UPDATE_LINE_BUDGET(I,[M:BIC3]ACC1(I),[M:BIC3]PJTLIN(I),[M:BIC3]AMTNOTLIN(I),1)
  Next

  Gosub VALIDATE_OVERBUDGET

  #DFCX1-389 Check if Budget Checks are enabled for the Company
  Read[F:YCPY]CPY0 = [M:BIC0]CPY

  If fstat = 0

    If [F:CPY]YBUDCHK = 2

      #Warn if invoice is overbudget and not posted
      If [M:BIC1]YOVRBUD = 2 and [M:BIC1]STA = 2
        GMESSAGE = "The project's budget is exceeded. Posting of the invoice is disabled. Please correct the budget or invoice."
        GERR = 1
      Endif

    Endif

  Endif

Return


#------------------------------------------------------------------------------------#
#Perform PJM account link validations
#------------------------------------------------------------------------------------#
$VALIDATEPJM

Local Char YMSG(250)

  For I = 0 To [M:BIC3]NBLIG-1

  Filter [F:YGAC] Where ACC = [M:BIC3]ACC1(I)
  For [F:YGAC]

  If [F:YGAC]YPJM = 2 and [M:BIC3]PJTLIN(I) = ""
    YMSG += num$(I + 1) + ", "
  Endif

  Next
  Filter [F:YGAC]

  Next

  If len(YMSG) > 0
    GMESSAGE = mess(2,6201,1) + left$(YMSG,len(YMSG)-2) # "Please enter a project code on the following lines: " + ZMSG
    GERR = 1
    GOK = 0
  Endif

Return
#------------------------------------------------------------------------------------#
#After change - SINVTYP
#------------------------------------------------------------------------------------#
Subprog AM_SIVTYP(VALEUR)
Variable Char    VALEUR

  If func AFNC.ACTIV("YHOU") = 1

    #Enable Job and Stage Number fields for following doc types (DFCX1-71 and DFCX1-333)
    #Disabled check on HREB and HREF per Richard 20190402 DFCX1-333
    If VALEUR = "HINV" or VALEUR = "HCRN" #or VALEUR = "HREB" or VALEUR = "HREF"
      Actzo [M:BIC0]YJBNR,YSTANBR
    Else
      Raz [M:BIC0]YJBNR,YSTANBR
      Diszo [M:BIC0]YJBNR,YSTANBR
    Endif

    #Set Supress printing = YES for HREB (DFCX1-33)
    If VALEUR = "HREB"
      [M:BIC0]YSTASUPP = 2
    Endif

    #Enable the Supress printing field if its web services to enable editing value
    If GWEBSERV = 0
      Diszo [M:BIC0]YSTASUPP
    Else
      Actzo [M:BIC0]YSTASUPP
    Endif

    #Refresh fields
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP

  Endif

End


#------------------------------------------------------------------------------------#
#Control - BPR
#------------------------------------------------------------------------------------#
Subprog C_BPR(VALEUR)
Variable Char    VALEUR()

#DFCX1-71
If func AFNC.ACTIV("YBPR") = 1
  Call C_BPRSEL(VALEUR) From YSELBPC
Endif

End


#------------------------------------------------------------------------------------#
#Control - YJBNR
#------------------------------------------------------------------------------------#
Subprog C_YJBNR(VALEUR)
Variable Char    VALEUR
#DFCX1-71
If func AFNC.ACTIV("YHOU") = 1
  If VALEUR <> '' and GWEBSERV = 0

    Local Integer I : I = 0
    Local Char REQUEST(255)

    REQUEST(0) = "SELECT t0.YJBNR_0, t0.YJBTYP_0, t0.YHOUTYP_0 FROM YHOUJDET t0"
    REQUEST(0) -= "JOIN CACCE t1 ON t0.YJBNR_0 = t1.CCE_0 AND t1.DIE_0 = 'HJB' AND t1.ENAFLG_0 = 2"
    REQUEST(0) -= "WHERE UPPER(t0.YJBNR_0) = UPPER('" + VALEUR + "') AND t0.YCUSNO_0 = '" + [M:BIC0]BPR + "'"

    For (Char YJOBNUM(15), Char YJOBTYP(20), Char YHOUTYP(50)) From "5" Sql REQUEST As [YLNK]
      I += 1
      Break
    Next

    If I = 0
      #No record found
      Call ERRTIT(func AFNC.MES1(mess(6,6251,1), "Housing Job Number"), "Mandatory field") From GESECRAN
      Raz [M:BIC0]YJBNR
      Affzo [M:BIC0]YJBNR
      mkstat=2
    Endif

  Endif
Endif
End


#------------------------------------------------------------------------------------#
#Control - YSTANBR
#------------------------------------------------------------------------------------#
Subprog C_YSTANBR(VALEUR)
Variable Decimal    VALEUR
#DFCX1-71
If func AFNC.ACTIV("YHOU") = 1
  If VALEUR <> 0 and GWEBSERV = 0
    Local Integer I : I = 0
    Local Char REQUEST(255)(1..2)

    REQUEST(1) = "SELECT t0.YSTANBR_0, t0.YSTAGENAM_0, t0.YINVNUM_0 FROM YHOUJSTA t0"
    REQUEST(1) -= "JOIN CACCE t1 ON t0.YJBNR_0 = t1.CCE_0 AND t1.DIE_0 = 'HJB' AND t1.ENAFLG_0 = 2"
    REQUEST(1) -= "WHERE t0.YSTANBR_0 = " + num$(VALEUR) + " AND t0.YJBNR_0 = '" + [M:BIC0]YJBNR + "'"

    If [M:BIC0]SIVTYP = "HINV"
      REQUEST(2) -= "AND t0.YDATCLM_0 = '1753-01-01' and t0.YINVNUM_0 = '' and t0.YAMTCLM_0 = 0 and t0.YACTCMPDAT_0 <> '1753-01-01'"
    Elsif [M:BIC0]SIVTYP = "HCRN"
      REQUEST(2) -= "AND t0.YINVNUM_0 <> ''"
    Endif
    REQUEST(2) -= "ORDER BY 1"

    For (Integer YSTAGE, Char YSTAGNAME(50), Char YINVNO(50)) From "5" Sql REQUEST As [YLNK]
      I += 1
      #[M:BIC1]INVNUM = [YLNK]YINVNO
      #Affzo [M:BIC1]INVNUM
      Break
    Next

    If I = 0
      #No record found
      Call ERRTIT(func AFNC.MES1(mess(6,6251,1), "Housing Job Stage"), "Mandatory field") From GESECRAN
      Raz [M:BIC0]YSTANBR
      Affzo [M:BIC0]YSTANBR
      mkstat=2
    Endif

  Endif
Endif

End


#--------------------------------------------------------------
# Before field - ACC1
#--------------------------------------------------------------
Subprog AS_ACC1(VALEUR)
Variable Char    VALEUR()

  #DFCX1-291 Default the Project GL Account if we have a Project on the header
  If VALEUR = "" and [M:BIC1]PJTH <> ""

    If !clalev ([F:YOPJM])   : Local File OPPORPJM   [F:YOPJM]  : Endif
    If !clalev ([F:YOPJL])   : Local File PIMPL      [F:YOPJL]  : Endif
    If !clalev ([F:YOPJB])   : Local File PJMBUDLIG  [F:YOPJB]  : Endif

    #Read Project Number from Project Link
    Read [F:YOPJL]PIM0 = [M:BIC1]PJTH

    If fstat = 0

      #Read Project
      Read [F:YOPJM]OPPPJM0 = [F:YOPJL]OPPNUM

      If fstat = 0

        #Default GL Account if found on Project, otherwise use Customer Default GL account
        If [F:YOPJM]YDEFACC <> ""
          VALEUR = [F:YOPJM]YDEFACC
        Else
          #VALEUR = [F:BPC]YDEFGL
        Endif

      Endif
    Endif

    If clalev([F:YOPJM])     : Close Local File [F:YOPJM]       : Endif
    If clalev([F:YOPJL])     : Close Local File [F:YOPJL]       : Endif
    If clalev([F:YOPJB])     : Close Local File [F:YOPJB]       : Endif

  Else
    #Default GL Account when no Project specified on header
    #VALEUR = [F:BPC]YDEFGL
  Endif

End


#--------------------------------------------------------------
# Initialization - VAT
#--------------------------------------------------------------
Subprog D_VAT(VALEUR)
Variable Char    VALEUR()

  #Get default Customer tax code, otherwise use GL account if not found
  If [M:BIC3]ACC1(nolign-1) <> ""


    Read [F:YCPY]CPY0 = [M:BIC0]CPY

    If fstat = 0

      Read [F:YGACM]GCM0 = [F:YCPY]ACM

      If fstat = 0

        Case [F:YGACM]GENLEDTYP
          When 1  : Read [F:YGLED]LED0 = [F:YGACM]LED(0)
          When 2  : Read [F:YGLED]LED0 = [F:YGACM]LED(1)
          When 3  : Read [F:YGLED]LED0 = [F:YGACM]LED(2)
          When 4  : Read [F:YGLED]LED0 = [F:YGACM]LED(3)
          When 5  : Read [F:YGLED]LED0 = [F:YGACM]LED(4)
          When 6  : Read [F:YGLED]LED0 = [F:YGACM]LED(5)
          When 7  : Read [F:YGLED]LED0 = [F:YGACM]LED(6)
          When 8  : Read [F:YGLED]LED0 = [F:YGACM]LED(7)
          When 9  : Read [F:YGLED]LED0 = [F:YGACM]LED(8)
          When 10 : Read [F:YGLED]LED0 = [F:YGACM]LED(9)
        Endcase

        Read [F:YGAC]GAC0 = [F:YGLED]COA;[M:BIC3]ACC1(nolign-1)

        If fstat = 0

          #Assign default tax from Customer
          If [F:YGAC]FLGVAT = 2

            Read [F:YBPC]BPC0 = [M:BIC0]BPR

            If fstat = 0

              Read [F:YVAC]TVB0 = [F:YBPC]VACBPR;""

              If fstat = 0

                #If no customer tax code, then use GL account tax code
                If [F:YVAC]VAT = ""
                  #Do nothing. Use standard Sage determined value
                  #VALEUR = [F:YGAC]VAT
                Else
                  VALEUR = [F:YVAC]VAT
                Endif

              Endif

            Endif

          Endif

        Endif

      Endif

    Endif

  Endif

End
#--------------------------------------------------------------
# Before entry - VAT
#--------------------------------------------------------------
Subprog AS_VAT(VALEUR)
Variable Char    VALEUR()
End


#--------------------------------------------------------------
# After change - VAT
#--------------------------------------------------------------
Subprog AM_VAT(VALEUR)
Variable Char    VALEUR()

  If VALEUR <> "" and [M:BIC3]ACC1(nolign-1) <> ""

    Read [F:YCPY]CPY0 = [M:BIC0]CPY

    If fstat = 0

      Read [F:YGACM]GCM0 = [F:YCPY]ACM

      If fstat = 0

        Case [F:YGACM]GENLEDTYP
          When 1  : Read [F:YGLED]LED0 = [F:YGACM]LED(0)
          When 2  : Read [F:YGLED]LED0 = [F:YGACM]LED(1)
          When 3  : Read [F:YGLED]LED0 = [F:YGACM]LED(2)
          When 4  : Read [F:YGLED]LED0 = [F:YGACM]LED(3)
          When 5  : Read [F:YGLED]LED0 = [F:YGACM]LED(4)
          When 6  : Read [F:YGLED]LED0 = [F:YGACM]LED(5)
          When 7  : Read [F:YGLED]LED0 = [F:YGACM]LED(6)
          When 8  : Read [F:YGLED]LED0 = [F:YGACM]LED(7)
          When 9  : Read [F:YGLED]LED0 = [F:YGACM]LED(8)
          When 10 : Read [F:YGLED]LED0 = [F:YGACM]LED(9)
        Endcase

        Read [F:YGAC]GAC0 = [F:YGLED]COA;[M:BIC3]ACC1(nolign-1)

        If fstat = 0

          #GL Account not subject to Tax. Use Account default
          If [F:YGAC]FLGVAT = 1
            #No restrictions
          Else

            #Get Tax Codes for GL Account
            Local Char REQUEST(255)(0..12)
            REQUEST(0)  = "SELECT VATCTL FROM (SELECT"

            REQUEST(1)  -= "VATCTL_0,VATCTL_1,VATCTL_2,VATCTL_3,VATCTL_4,VATCTL_5,VATCTL_6,VATCTL_7,VATCTL_8,VATCTL_9,VATCTL_10,VATCTL_11,VATCTL_12,VATCTL_13,VATCTL_14,VATCTL_15,VATCTL_16,VATCTL_17,V"
&  + "ATCTL_18,VATCTL_19,VATCTL_20,VATCTL_21,VATCTL_22,VATCTL_23,VATCTL_24,VATCTL_25,"
            REQUEST(2)  -= "VATCTL_26,VATCTL_27,VATCTL_28,VATCTL_29,VATCTL_30,VATCTL_31,VATCTL_32,VATCTL_33,VATCTL_34,VATCTL_35,VATCTL_36,VATCTL_37,VATCTL_38,VATCTL_39,VATCTL_40,VATCTL_41,VATCTL_42,V"
&  + "ATCTL_43,VATCTL_44,VATCTL_45,VATCTL_46,VATCTL_47,VATCTL_48,VATCTL_49,VATCTL_50,"
            REQUEST(3)  -= "VATCTL_51,VATCTL_52,VATCTL_53,VATCTL_54,VATCTL_55,VATCTL_56,VATCTL_57,VATCTL_58,VATCTL_59,VATCTL_60,VATCTL_61,VATCTL_62,VATCTL_63,VATCTL_64,VATCTL_65,VATCTL_66,VATCTL_67,V"
&  + "ATCTL_68,VATCTL_69,VATCTL_70,VATCTL_71,VATCTL_72,VATCTL_73,VATCTL_74,VATCTL_75,"
            REQUEST(4)  -= "VATCTL_76,VATCTL_77,VATCTL_78,VATCTL_79,VATCTL_80,VATCTL_81,VATCTL_82,VATCTL_83,VATCTL_84,VATCTL_85,VATCTL_86,VATCTL_87,VATCTL_88,VATCTL_89,VATCTL_90,VATCTL_91,VATCTL_92,V"
&  + "ATCTL_93,VATCTL_94,VATCTL_95,VATCTL_96,VATCTL_97,VATCTL_98"

            REQUEST(5)  -= "FROM GACCOUNT G LEFT OUTER JOIN GACCOUNTA A ON G.COA_0 = A.COA_0 AND G.ACC_0 = A.ACC_0"
            REQUEST(6)  -= "WHERE G.ACC_0 = '" + [M:BIC3]ACC1(nolign-1) + "' AND G.COA_0 = '" + [F:YGLED]COA + "') GACCOUNTX"
            REQUEST(7)  -= "UNPIVOT (VATCTL FOR VATCTL_NUM IN ("

            REQUEST(8)  -= "VATCTL_0,VATCTL_1,VATCTL_2,VATCTL_3,VATCTL_4,VATCTL_5,VATCTL_6,VATCTL_7,VATCTL_8,VATCTL_9,VATCTL_10,VATCTL_11,VATCTL_12,VATCTL_13,VATCTL_14,VATCTL_15,VATCTL_16,VATCTL_17,V"
&  + "ATCTL_18,VATCTL_19,VATCTL_20,VATCTL_21,VATCTL_22,VATCTL_23,VATCTL_24,VATCTL_25,"
            REQUEST(9)  -= "VATCTL_26,VATCTL_27,VATCTL_28,VATCTL_29,VATCTL_30,VATCTL_31,VATCTL_32,VATCTL_33,VATCTL_34,VATCTL_35,VATCTL_36,VATCTL_37,VATCTL_38,VATCTL_39,VATCTL_40,VATCTL_41,VATCTL_42,V"
&  + "ATCTL_43,VATCTL_44,VATCTL_45,VATCTL_46,VATCTL_47,VATCTL_48,VATCTL_49,VATCTL_50,"
            REQUEST(10) -= "VATCTL_51,VATCTL_52,VATCTL_53,VATCTL_54,VATCTL_55,VATCTL_56,VATCTL_57,VATCTL_58,VATCTL_59,VATCTL_60,VATCTL_61,VATCTL_62,VATCTL_63,VATCTL_64,VATCTL_65,VATCTL_66,VATCTL_67,V"
&  + "ATCTL_68,VATCTL_69,VATCTL_70,VATCTL_71,VATCTL_72,VATCTL_73,VATCTL_74,VATCTL_75,"
            REQUEST(11) -= "VATCTL_76,VATCTL_77,VATCTL_78,VATCTL_79,VATCTL_80,VATCTL_81,VATCTL_82,VATCTL_83,VATCTL_84,VATCTL_85,VATCTL_86,VATCTL_87,VATCTL_88,VATCTL_89,VATCTL_90,VATCTL_91,VATCTL_92,V"
&  + "ATCTL_93,VATCTL_94,VATCTL_95,VATCTL_96,VATCTL_97,VATCTL_98"

            REQUEST(12) -= ")) AS UNPIV WHERE UNPIV.VATCTL = '" + VALEUR + "'"

            Local Integer X : X = 0
            For (Char YVAT(5)) From "5" Sql REQUEST As [YVAT]
              X=1
              Break
            Next

            #Check if Account VAT code exists in GL VAT code list
            Case  [F:YGAC]TYPVATCTL
              When 2 #Authorization - can only be in the list. If X=0 then the tax code is not in the authorized list
                If X = 0
                  GMESSAGE = "BP Tax code is not in the Authorized Account Tax Code list, the Default Account Tax code will be used"
                  GERR = 1
                  GOK = 0
                  VALEUR = [F:YGAC]VAT
                Endif
              When 3 #Restriction - cannot be in the list. If X<>0 then the tax code is in the restricted list
                If X > 0
                  GMESSAGE = "BP Tax code is in the Restricted Account Tax Code list, the Default Account Tax code will be used"
                  GERR = 1
                  GOK = 0
                  VALEUR = [F:YGAC]VAT
                Endif
              When Default
            Endcase

          Endif

        Endif

      Endif

    Endif

  Endif

End


#--------------------------------------------------------------
# Before Entry - AMTATILIN
#--------------------------------------------------------------
Subprog AS_AMTATILIN(VALEUR)
Variable Decimal VALEUR

  #Set Amount + GST on grid line equal to remaining amount (Header amount GST - total lines)
  If VALEUR = 0 and GWEBSERV = 0
    If [M:BIC1]AMTATI - sum([M:BIC3]AMTATILIN(0..[M:BIC3]NBLIG-1)) > 0
      VALEUR = [M:BIC1]AMTATI - sum([M:BIC3]AMTATILIN(0..[M:BIC3]NBLIG-1))
    Endif
  Endif

End


#--------------------------------------------------------------
# After change - AMTATILIN
#--------------------------------------------------------------
Subprog AM_AMTATILIN(VALEUR)
Variable Decimal VALEUR

  If [M:BIC3]ACC1(nolign-1) <> "" and [M:BIC3]PJTLIN(nolign-1) <> ""
    Call UPDATE_LINE_BUDGET(nolign-1,[M:BIC3]ACC1(nolign-1),[M:BIC3]PJTLIN(nolign-1),[M:BIC3]AMTNOTLIN(nolign-1),2)
  Endif

End


#------------------------------------------------------------------------------------#
#Control - PJTLIN
#------------------------------------------------------------------------------------#
Subprog C_PJTLIN(VALEUR)
Variable Char    VALEUR()

#Check if Project is mandatory and has no value, set focus to the Project field
If VALEUR = "" and [M:BIC3]ACC1(nolign-1) <> ""

  Read [F:YGAC]GAC0 = GPLAN(1);[M:BIC3]ACC1(nolign-1)

  If fstat = 0

    If [F:YGAC]YPJM = 2 and VALEUR = ""

      GMESSAGE = "Account " + [M:BIC3]ACC1(nolign-1) + "  requires a Project"
      GERR = 1
      GOK = 0

      mkstat=2

    Endif

  Endif

Endif

#Refresh budget lines
For I = 0 To [M:BIC3]NBLIG-1
  Call UPDATE_LINE_BUDGET(I,[M:BIC3]ACC1(I),[M:BIC3]PJTLIN(I),[M:BIC3]AMTNOTLIN(I),2)
Next

End


#--------------------------------------------------------------
# Before field - CCE1
#--------------------------------------------------------------
Subprog AS_CCE1(VALEUR)
Variable Char    VALEUR()

  #DFCX1-50 Default the Project, Business Group, Job, and Cost Center based on selected header Project code
  If VALEUR = "" and [M:BIC3]PJTLIN(nolign-1) <> ""

    If !clalev ([F:YOPJM])   : Local File OPPORPJM   [F:YOPJM]  : Endif
    If !clalev ([F:YOPJL])   : Local File PIMPL      [F:YOPJL]  : Endif
    If !clalev ([F:YOPJB])   : Local File PJMBUDLIG  [F:YOPJB]  : Endif

    #Read Project Number from Project Link
    Read [F:YOPJL]PIM0 = [M:BIC3]PJTLIN(nolign-1)

    If fstat = 0

      #Read Project
      Read [F:YOPJM]OPPPJM0 = [F:YOPJL]OPPNUM

      If fstat = 0
        VALEUR = [F:YOPJM]CCE(0)
      Endif

    Endif

    If clalev([F:YOPJM])     : Close Local File [F:YOPJM]       : Endif
    If clalev([F:YOPJL])     : Close Local File [F:YOPJL]       : Endif
    If clalev([F:YOPJB])     : Close Local File [F:YOPJB]       : Endif

  Endif

End


#--------------------------------------------------------------
# After change - CCE1
#--------------------------------------------------------------
Subprog AM_CCE1(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> "" and GWEBSERV=0
    Call VALIDATE_CCE(VALEUR,[M]DIE(0),"DIE_0")
  Endif
End


#--------------------------------------------------------------
# Before field - CCE2
#--------------------------------------------------------------
Subprog AS_CCE2(VALEUR)
Variable Char    VALEUR()
End


#--------------------------------------------------------------
# After change - CCE2
#--------------------------------------------------------------
Subprog AM_CCE2(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> "" and GWEBSERV=0
    Call VALIDATE_CCE(VALEUR,[M]DIE(1),"DIE_1")
  Endif
End


#--------------------------------------------------------------
# Before field - CCE3
#--------------------------------------------------------------
Subprog AS_CCE3(VALEUR)
Variable Char    VALEUR()

  #DFCX1-50 Default the Project, Business Group, Job, and Cost Center based on selected header Project code
  If VALEUR = "" and [M:BIC3]PJTLIN(nolign-1) <> ""

    If !clalev ([F:YOPJM])   : Local File OPPORPJM   [F:YOPJM]  : Endif
    If !clalev ([F:YOPJL])   : Local File PIMPL      [F:YOPJL]  : Endif
    If !clalev ([F:YOPJB])   : Local File PJMBUDLIG  [F:YOPJB]  : Endif

    #Read Project Number from Project Link
    Read [F:YOPJL]PIM0 = [M:BIC3]PJTLIN(nolign-1)

    If fstat = 0

      #Read Project
      Read [F:YOPJM]OPPPJM0 = [F:YOPJL]OPPNUM

      If fstat = 0
        VALEUR = [F:YOPJM]CCE(2)
      Endif

    Endif

    If clalev([F:YOPJM])     : Close Local File [F:YOPJM]       : Endif
    If clalev([F:YOPJL])     : Close Local File [F:YOPJL]       : Endif
    If clalev([F:YOPJB])     : Close Local File [F:YOPJB]       : Endif

  Endif

End


#--------------------------------------------------------------
# After change - CCE3
#--------------------------------------------------------------
Subprog AM_CCE3(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> "" and GWEBSERV=0
    Call VALIDATE_CCE(VALEUR,[M]DIE(2),"DIE_2")
  Endif
End

#--------------------------------------------------------------
# Before field - CCE4
#--------------------------------------------------------------
Subprog AS_CCE4(VALEUR)
Variable Char    VALEUR()

  #DFCX1-50 Default the Project, Business Group, Job, and Cost Center based on selected header Project code
  If VALEUR = "" and [M:BIC3]PJTLIN(nolign-1) <> ""

    If !clalev ([F:YOPJM])   : Local File OPPORPJM   [F:YOPJM]  : Endif
    If !clalev ([F:YOPJL])   : Local File PIMPL      [F:YOPJL]  : Endif
    If !clalev ([F:YOPJB])   : Local File PJMBUDLIG  [F:YOPJB]  : Endif

    #Read Project Number from Project Link
    Read [F:YOPJL]PIM0 = [M:BIC3]PJTLIN(nolign-1)

    If fstat = 0

      #Read Project budget
      Read [F:YOPJB]PJLB0 = [F:YOPJL]OPPNUM;[F:YOPJL]PBUCOD;10

      If fstat = 0
        VALEUR = [F:YOPJB]PCCCOD #Cost centre
      Endif

    Endif

    If clalev([F:YOPJM])     : Close Local File [F:YOPJM]       : Endif
    If clalev([F:YOPJL])     : Close Local File [F:YOPJL]       : Endif
    If clalev([F:YOPJB])     : Close Local File [F:YOPJB]       : Endif

  Endif

End


#--------------------------------------------------------------
# After change - CCE4
#--------------------------------------------------------------
Subprog AM_CCE4(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> "" and GWEBSERV=0
    Call VALIDATE_CCE(VALEUR,[M]DIE(3),"DIE_3")
  Endif
End


#--------------------------------------------------------------
# Before field - CCE5
#--------------------------------------------------------------
Subprog AS_CCE5(VALEUR)
Variable Char    VALEUR()
End


#--------------------------------------------------------------
# After change - CCE5
#--------------------------------------------------------------
Subprog AM_CCE5(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> "" and GWEBSERV=0
    Call VALIDATE_CCE(VALEUR,[M]DIE(4),"DIE_4")
  Endif
End


#--------------------------------------------------------------
# Validate entered grid dimension
#--------------------------------------------------------------
Subprog VALIDATE_CCE(CCE,DIE_VAL,DIE_FLD)

Variable Char CCE
Value Char DIE_VAL,DIE_FLD
Local Char REQUEST(255)(10)
Local Integer I

REQUEST(0) = "SELECT COUNT(*)"
REQUEST(1) -= "FROM FACILITY t0"
REQUEST(2) -= "JOIN COMPANY t1 ON t0.LEGCPY_0 = t1.CPY_0"
REQUEST(3) -= "JOIN GACM t2 ON t1.ACM_0 = t2.GCM_0"
REQUEST(4) -= "JOIN GLED t3 ON t2.LED_0 = t3.LED_0"
REQUEST(5) -= "INNER JOIN CACCE t4 ON t4.DIE_0 = t3." + DIE_FLD
REQUEST(6) -= "LEFT OUTER JOIN YPCCACC t5 ON t5.YLED_0 = t3.LED_0 AND t5.YDIE_0 = t4.DIE_0 AND t5.YCCE_0 = t4.CCE_0"
REQUEST(7) -= "WHERE t4.DIE_0 = '" + DIE_VAL +"' AND ((t5.YACC_0 = '" + [M:BIC3]ACC1(nolign-1) +
& "' AND t5.YLED_0 = t3.LED_0) OR (t5.YACC_0 IS NULL AND t5.YLED_0 IS NULL)) AND t4.CCE_0 = '" + CCE + "' AND t4.ENAFLG_0 = 2"

For (Integer COUNT) From "5" Sql REQUEST As [YDIE]
  I = [YDIE]COUNT
Next

If I < 1
  GMESSAGE = mess(6,6201,1)
  GERR = 1
  mkstat = 2
Endif

End


#--------------------------------------------------------------
# Update grid line budget amounts
#--------------------------------------------------------------
Subprog UPDATE_LINE_BUDGET(LINE,ACC,PROJ,AMT,SHOW_MSG)

Value Char ACC,PROJ
Value Decimal AMT
Value Integer LINE,SHOW_MSG

#DFCX1-389 Check if Budget Checks are enabled for the Company
Read[F:YCPY]CPY0 = [M:BIC0]CPY

If fstat = 0

  If [F:CPY]YBUDCHK = 2

    Local Decimal YBUDAMT : YBUDAMT = 0
    Local Decimal YAPPERC : YAPPERC = 0
    Local Decimal YAPAMT  : YAPAMT = 0
    Local Decimal YALLAMT : YALLAMT = 0
    Local Decimal YREMAMT : YREMAMT = 0

    Read [F:YGAC]GAC0 = GPLAN(1);ACC

    If fstat = 0

      If [F:YGAC]YPJM = 2

        Read [F:YPIM]PIM0 = PROJ

        If fstat = 0

          #Get budget amount for the Project if Account is marked as PJM
          Read [F:YPJB]PJLB0 = [F:YPIM]OPPNUM;[F:YPIM]PBUCOD

          If fstat = 0
            YBUDAMT = [F:YPJB]PLBAMT
          Endif

          #Get AP Tolerance percent and amount
          Read[F:YCPY]CPY0 = [M:BIC0]CPY

          If fstat = 0
            YAPPERC = [F:YCPY]YAPTPCT
            YAPAMT  = [F:YCPY]YAPTAMT
          Endif

          #Get the amount remaining.
          Local Char ZSQL(255)(2)
          ZSQL(0) = "SELECT SUM(L.AMTNOTLIN_0 * H.SNS_0) AS [AMOUNT] FROM BPSINVLIG L "
          ZSQL(1) = "LEFT OUTER JOIN PINVOICE H on H.NUM_0 = L.NUM_0 where PJTLIN_0 = '" + PROJ + "' and H.NUM_0 <> '" + [F:SIH]NUM + "'"

          For (Decimal YAMT) From "5" Sql ZSQL As [YLNK]
            YALLAMT += [F:YLNK]YAMT
          Next

          ZSQL(0) = "SELECT SUM(L.AMTNOTLIN_0 * H.SNS_0) * -1 AS [AMOUNT] FROM BPCINVLIG L "
          ZSQL(1) = "LEFT OUTER JOIN SINVOICE H on H.NUM_0 = L.NUM_0 where PJTLIN_0 = '" + PROJ + "' and H.NUM_0 <> '" + [F:SIH]NUM + "' and H.SIVTYP_0 in ('HREF','HREB')"

          For (Decimal YAMT) From "5" Sql ZSQL As [YLNK]
            YALLAMT += [F:YLNK]YAMT
          Next

          If (YBUDAMT * (1+YAPPERC)) > (YBUDAMT+YAPAMT)
            YBUDAMT = (YBUDAMT +YAPAMT)
          Else
            YBUDAMT = (YBUDAMT * (1+YAPPERC))
          Endif

          YREMAMT = YBUDAMT - YALLAMT - AMT

        Endif

      Endif

    Endif

    #Update grid fields
    [M:BIC3]YBUDAMT(LINE) = YBUDAMT
    [M:BIC3]YALLOCAMT(LINE) = YALLAMT
    [M:BIC3]YRMNAMT(LINE) = YREMAMT

    #Update YOVRBUD if amount is over remaining value
    If YREMAMT < 0

      If !GWEBSERV

        If SHOW_MSG = 2
          Errbox "The amount before tax is more than the remaining budgeted amount on line number: " + num$(LINE+1)
          mkstat=2
        Endif

        ##Validate lines
        #Gosub $VALIDATE_OVERBUDGET

        #If we are not overbudget with existing lines, set as overbudget for this line as it may be a new line
        If [M:BIC1]YOVRBUD = 1
          [M:BIC1]YOVRBUD = 2
          Affzo [M:BIC1]YOVRBUD
        Endif

      Endif
    Endif

    #Refreh grid fields
    Affzo [M:BIC3]YBUDAMT(LINE),YALLOCAMT(LINE),YRMNAMT(LINE)

  Endif

Endif

End


#--------------------------------------------------------------
# Valdiate existing grid lines and check if any are overbudget
#--------------------------------------------------------------
$VALIDATE_OVERBUDGET

[M:BIC1]YOVRBUD = 1

For I = 0 To [M:BIC3]NBLIG-1
  If [M:BIC3]YRMNAMT(I) < 0
    [M:BIC1]YOVRBUD = 2
    Break
  Endif
Next

Affzo [M:BIC1]YOVRBUD

Return

