#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical parameters
# Supervisor
## CRUD-CLASSE ## PARSTA2
# 2018-08-27 13:20:51 245


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PARSTA2,ASTATUS)
Variable Instance PARSTA2 Using R_PARSTA2
Variable Integer ASTATUS

If PARSTA2 = null : End : Endif

Gosub AVARIABLES From WMR00PARSTA2
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet PARSTA2.ACTX.AGETAFCRIGHT(PARSTA2,"GESPS2",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet PARSTA2.ACTX.AGETAFCRIGHTD(PARSTA2,"GESPS2",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif
If fmet PARSTA2.ACTX.AGETACSRIGHTM(PARSTA2,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto ADELETE_END
  Endif
  
  Gosub AREPCONTROL_ADELETE
  If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif
  
If !adxlog
 Gosub ADELETE_TR_PARSTA2
Else
 Gosub ADELETE_PARSTA2
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
PARSTA2.ASTALIN = [V]CST_ADEL
PARSTA2.PS2.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PARSTA2.PS2,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PARSTA2.PS2.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PARSTA2.PS2.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.CRICOL)
 If PARSTA2.PS2.CRICOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.CRICOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.INTCOL)
 If PARSTA2.PS2.INTCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.INTCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.TBLCOL)
 If PARSTA2.PS2.TBLCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.TBLCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

For [L]A_I=1 To maxtab(PARSTA2.PS2.CRICOL)
 If PARSTA2.PS2.CRICOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.CRICOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.INTCOL)
 If PARSTA2.PS2.INTCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.INTCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PARSTA2.PS2.TBLCOL)
 If PARSTA2.PS2.TBLCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.TBLCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PARSTA2
Trbegin [F:PS2]
 Gosub ADELETE_PARSTA2
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_PARSTA2
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PARSTA2.snapshotEnabled=1
 [L]A_RETIK = PARSTA2.revertUpdTick
Endif
[L]ASTATUS = max(fmet PARSTA2.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



