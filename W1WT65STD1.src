#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management WT65STD1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [16/04/2018]
A_HEURE = "14:37:10"
A_USER  = "ADMIN"
A_STAMP = "20180416143710"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT65STD1 [MBP]
Gosub HORODAT
Local Inpbox "WT65STD1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MBP] As [SIM_]
Grizo [MBP]5
Grizo [MBP]10
Grizo [MBP]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MBP]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=29 : Y1(0)=1 : Y2(0)=4
X1(1)=30 : X2(1)=119 : Y1(1)=1 : Y2(1)=4
X1(2)=1 : X2(2)=119 : Y1(2)=5 : Y2(2)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1WT65STD1
Onevent AFTER_CHANGE Gosub AMM_FCY From W1WT65STD1
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1WT65STD1
Onevent INIT_AREA Call D_FCY(zc) From W1WT65STD1
Return

Subprog D_FCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]FCY,indice)=0
 VALEUR = GFCYDEF(8)
Endif
Gosub _AFF
End

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1WT65STD1
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1WT65STD1
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1WT65STD1
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","E",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "E"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1WT65STD1
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_PLANNER
Onevent CONTROL Call C_PLANNER(zc) From W1WT65STD1
Onevent BEFORE_INPUT Call AS_PLANNER(zc) From W1WT65STD1
Onevent AFTER_CHANGE Gosub AMM_PLANNER From W1WT65STD1
Onevent INIT_AREA Call D_PLANNER(zc) From W1WT65STD1
Return

Subprog D_PLANNER(VALEUR)
Variable Char    VALEUR()
If varinit([M]PLANNER,indice)=0
 VALEUR = GUSER
Endif
Gosub _AFF
End

Subprog AS_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(485,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLANNER(zc) From W1WT65STD1
Onkey   2 Titled GBOUTS Call S_PLANNER(zc) From W1WT65STD1
Onkey 144 Titled GBOUTP Call P_PLANNER(zc) From W1WT65STD1
Onkey 146 Titled GBOUTA Call SA_PLANNER(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_PLANNER(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("AUS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PLANNER" : GZNUM = 3976 : Endif
Gosub _AFF
End

$AMM_PLANNER
Call AM_PLANNER(zc)
If !mkstat & GOBJET
 zoncou = "PLANNER" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLANNER(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZPLANNER)")>indice
 [M]PLANNER(indice) = VALEUR
 Affzo ZPLANNER(indice)
Endif
Gosub _AFF
End

Subprog S_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AUS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PLANNER(VALEUR)
Variable Char    VALEUR()
Call OBJET("AUS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AUS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AUS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPLANNER
Onevent BEFORE_AREA Gosub AV_ZPLANNER From W1WT65STD1
Return

$AV_ZPLANNER
Call LECTEXTRA(zc,"AUTILIS","INTUSR",num$([M]PLANNER(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ENDDATSTR
Onevent AFTER_CHANGE Gosub AMM_ENDDATSTR From W1WT65STD1
Onevent INIT_AREA Call D_ENDDATSTR(zc) From W1WT65STD1
Onevent BEFORE_AREA Gosub AV_ENDDATSTR From W1WT65STD1
Return

$AV_ENDDATSTR
Chgfmt [M]ENDDATSTR(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_ENDDATSTR(VALEUR)
Variable Date    VALEUR
If varinit([M]ENDDATSTR,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

$AMM_ENDDATSTR
Call AM_ENDDATSTR(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATSTR(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_ENDDATSTR(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 1806 : Endif
Gosub _AFF
End

$ON_ENDDATEND
Onevent CONTROL Call C_ENDDATEND(zc) From W1WT65STD1
Onevent INIT_AREA Call D_ENDDATEND(zc) From W1WT65STD1
Onevent BEFORE_AREA Gosub AV_ENDDATEND From W1WT65STD1
Return

$AV_ENDDATEND
Chgfmt [M]ENDDATEND(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_ENDDATEND(VALEUR)
Variable Date    VALEUR
If varinit([M]ENDDATEND,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

Subprog C_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDATEND(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WMFGNUMD
Onevent CONTROL Call C_WMFGNUMD(zc) From W1WT65STD1
Onevent AFTER_CHANGE Gosub AMM_WMFGNUMD From W1WT65STD1
Onevent BEFORE_INPUT Call AS_WMFGNUMD(zc) From W1WT65STD1
Return

Subprog AS_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WMFGNUMD(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Endif
Gosub _AFF
End

$AMM_WMFGNUMD
Call AM_WMFGNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WMFGNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WMFGNUMD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Gosub _AFF
End

Subprog S_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "2"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUMF
Onevent CONTROL Call C_WMFGNUMF(zc) From W1WT65STD1
Onevent BEFORE_INPUT Call AS_WMFGNUMF(zc) From W1WT65STD1
Return

Subprog AS_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WMFGNUMF(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_WMFGNUMF(VALEUR) From FUNBENPLT
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "2"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WROUNUMD
Onevent CONTROL Call C_WROUNUMD(zc) From W1WT65STD1
Onevent AFTER_CHANGE Gosub AMM_WROUNUMD From W1WT65STD1
Onevent BEFORE_INPUT Call AS_WROUNUMD(zc) From W1WT65STD1
Return

Subprog IB_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WROUNUMD(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_WROUNUMD(zc) From W1WT65STD1
Onkey   2 Titled GBOUTS Call S_WROUNUMD(zc) From W1WT65STD1
Onkey 144 Titled GBOUTP Call P_WROUNUMD(zc) From W1WT65STD1
Onkey 146 Titled GBOUTA Call SA_WROUNUMD(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WROUNUMD
Call AM_WROUNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WROUNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WROUNUMD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWROUNUMD)")>indice
 [M]WROUNUMD(indice) = VALEUR
 Affzo ZWROUNUMD(indice)
Endif
Gosub _AFF
End

Subprog S_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUNUMD
Onevent BEFORE_AREA Gosub AV_ZWROUNUMD From W1WT65STD1
Return

$AV_ZWROUNUMD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WROUNUMD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUNUMF
Onevent CONTROL Call C_WROUNUMF(zc) From W1WT65STD1
Onevent BEFORE_INPUT Call AS_WROUNUMF(zc) From W1WT65STD1
Onevent AFTER_CHANGE Gosub AMM_WROUNUMF From W1WT65STD1
Return

Subprog IB_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WROUNUMF(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_WROUNUMF(zc) From W1WT65STD1
Onkey   2 Titled GBOUTS Call S_WROUNUMF(zc) From W1WT65STD1
Onkey 144 Titled GBOUTP Call P_WROUNUMF(zc) From W1WT65STD1
Onkey 146 Titled GBOUTA Call SA_WROUNUMF(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WROUNUMF(VALEUR) From FUNBENPLT
   If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WROUNUMF
Call AM_WROUNUMF(zc)
If !mkstat & GOBJET
 zoncou = "WROUNUMF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWROUNUMF)")>indice
 [M]WROUNUMF(indice) = VALEUR
 Affzo ZWROUNUMF(indice)
Endif
Gosub _AFF
End

Subprog S_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUNUMF
Onevent BEFORE_AREA Gosub AV_ZWROUNUMF From W1WT65STD1
Return

$AV_ZWROUNUMF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WROUNUMF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUALTD
Onevent AFTER_CHANGE Gosub AMM_WROUALTD From W1WT65STD1
Onevent CONTROL Call C_WROUALTD(zc) From W1WT65STD1
Onevent BEFORE_INPUT Call AS_WROUALTD(zc) From W1WT65STD1
Return

Subprog AS_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6276,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_WROUALTD(zc) From W1WT65STD1
Onkey   2 Titled GBOUTS Call S_WROUALTD(zc) From W1WT65STD1
Onkey 144 Titled GBOUTP Call P_WROUALTD(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_WROUALTD(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TRO","!A",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WROUALTD" : GZNUM = 3964 : Endif
Gosub _AFF
End

$AMM_WROUALTD
Call AM_WROUALTD(zc)
If !mkstat & GOBJET
 zoncou = "WROUALTD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUALTD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WROUALTD(VALEUR) From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "WROUALTD" : GZNUM = 3964 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWROUALTD)")>indice
 [M]WROUALTD(indice) = VALEUR
 Affzo ZWROUALTD(indice)
Endif
Gosub _AFF
End

Subprog S_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRO"
PARMSK(2) = "!A"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TRO",VALCHAR,"") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUALTD
Onevent BEFORE_AREA Gosub AV_ZWROUALTD From W1WT65STD1
Return

$AV_ZWROUALTD
Call LECTEXTRA(zc,"TABROUALT","TROSHOAXX",num$([M]WROUALTD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUALTF
Onevent CONTROL Call C_WROUALTF(zc) From W1WT65STD1
Onevent BEFORE_INPUT Call AS_WROUALTF(zc) From W1WT65STD1
Onevent AFTER_CHANGE Gosub AMM_WROUALTF From W1WT65STD1
Return

Subprog AS_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6276,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_WROUALTF(zc) From W1WT65STD1
Onkey   2 Titled GBOUTS Call S_WROUALTF(zc) From W1WT65STD1
Onkey 144 Titled GBOUTP Call P_WROUALTF(zc) From W1WT65STD1
Gosub _AFF
End

Subprog C_WROUALTF(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TRO","!A",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WROUALTF" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_WROUALTF(VALEUR) From FUNBENPLT
 If mkstat : GERR = 1 : GZONE = "WROUALTF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_WROUALTF
Call AM_WROUALTF(zc)
If !mkstat & GOBJET
 zoncou = "WROUALTF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUALTF(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZWROUALTF)")>indice
 [M]WROUALTF(indice) = VALEUR
 Affzo ZWROUALTF(indice)
Endif
Gosub _AFF
End

Subprog S_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRO"
PARMSK(2) = "!A"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TRO",VALCHAR,"") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUALTF
Onevent BEFORE_AREA Gosub AV_ZWROUALTF From W1WT65STD1
Return

$AV_ZWROUALTF
Call LECTEXTRA(zc,"TABROUALT","TROSHOAXX",num$([M]WROUALTF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WMFGPIOD
Onevent INIT_AREA Call D_WMFGPIOD(zc) From W1WT65STD1
Return

Subprog D_WMFGPIOD(VALEUR)
Variable Integer VALEUR
If varinit([M]WMFGPIOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WMFGPIOF
Onevent INIT_AREA Call D_WMFGPIOF(zc) From W1WT65STD1
Return

Subprog D_WMFGPIOF(VALEUR)
Variable Integer VALEUR
If varinit([M]WMFGPIOF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FORMULE
Return

$ON_CRIT1
Onevent INIT_AREA Call D_CRIT1(zc) From W1WT65STD1
Return

Subprog D_CRIT1(VALEUR)
Variable Integer VALEUR
If varinit([M]CRIT1,indice)=0
 VALEUR = [F:BTS]CRIT1
Endif
Gosub _AFF
End

$ON_FILTDEF
Onevent INIT_AREA Call D_FILTDEF(zc) From W1WT65STD1
Return

Subprog D_FILTDEF(VALEUR)
Variable Integer VALEUR
If varinit([M]FILTDEF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MEMO
Return

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1WT65STD1
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT65STD1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From FUNBENPLT
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(10079,GBOUT1) From OBJDIV
Call TEXTE(22504,GBOUT2) From OBJDIV
Call TEXTE(22511,GBOUT3) From OBJDIV
Call TEXTE(7974,GBOUT4) From OBJDIV
Call TEXTE(2378,GBOUT5) From OBJDIV
Call TEXTE(9602,GBOUT6) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT65STD1
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WT65STD1
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WT65STD1
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1WT65STD1
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1WT65STD1
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1WT65STD1
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From FUNBENPLT
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "FUNBENPLT" : PROGSPE = "SPEBENPLT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MBP]MFGNUM(nolign-1)
 Call OBJET_CHAR(OBJCLE,"MFG","MFGNUM") From GOBJET
 ACTION = "BB1_NBLIG" : PROGSUB = "FUNBENPLT" : PROGSPE = "SPEBENPLT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FDISPNOW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FDISPNOW"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = ""
 PARMSK(3) = "1"
 PARMSK(4) = [M:MBP]MFGNUM(nolign-1)
 PARMSK(5) = [M:MBP]STU(nolign-1)
 PARMSK(6) = num$([M:MBP]RMNEXTQTY(nolign-1))
 PARMSK(7) = num$([M:MBP]RMNEXTQTY(nolign-1))
 Call SAISIE_NUM(BASPAG,PARMSK,"IDISPNOW","BENCHLIB","XYZBENCHLIB") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FDISPPLN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FDISPPLN"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = ""
 PARMSK(3) = "1"
 PARMSK(4) = [M:MBP]MFGNUM(nolign-1)
 PARMSK(5) = [M:MBP]STU(nolign-1)
 PARMSK(6) = num$([M:MBP]RMNEXTQTY(nolign-1))
 PARMSK(7) = num$([M:MBP]RMNEXTQTY(nolign-1))
 Call SAISIE_NUM(BASPAG,PARMSK,"IDISPPLN","BENCHLIB","XYZBENCHLIB") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMFGALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMFGALL"
 PARMSK(1) = [M:MBP]MFGNUM(nolign-1)
 PARMSK(2) = num$([M:MBP]WRET(nolign-1))
 Call SAISIE_NUM(BASPAG,PARMSK,"DMFGALL","MFGALL","XYZMFGALL") From GSAISIE
 [M:MBP]WRET(nolign-1) = val(PARMSK(2))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMFGSCD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMFGSCD"
 PARMSK(1) = [M:MBP]FCY
 PARMSK(2) = [M:MBP]MFGNUM(nolign-1)
 PARMSK(3) = num$([M:MBP]WRET(nolign-1))
 Call SAISIE_NUM(BASPAG,PARMSK,"DMFGSCD","MFGSCD","XYZMFGSCD") From GSAISIE
 [M:MBP]WRET(nolign-1) = val(PARMSK(3))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action TRTMSITU
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "TRTMSITU"
 PARMSK(1) = [M:MBP]MFGNUM(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"IMSITU","FUNMFGS","",1,"XYFUNMFGS") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PECFLG
Onevent INIT_AREA Call D_PECFLG(zc) From W1WT65STD1
Onevent BEFORE_INPUT Call AS_PECFLG(zc) From W1WT65STD1
Return

Subprog D_PECFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PECFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PECFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ALLSTA
Onevent INIT_AREA Call D_ALLSTA(zc) From W1WT65STD1
Return

Subprog D_ALLSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_EXTQTY
Onevent BEFORE_AREA Gosub AV_EXTQTY From W1WT65STD1
Return

$AV_EXTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBP]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_MFGMOD
Onevent INIT_AREA Call D_MFGMOD(zc) From W1WT65STD1
Return

Subprog D_MFGMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGNUM
Onevent CONTROL Call C_MFGNUM(zc) From W1WT65STD1
Return

Subprog C_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 4420 : Endif
Endif
Gosub _AFF
End

$ON_MFGPIO
Onevent INIT_AREA Call D_MFGPIO(zc) From W1WT65STD1
Return

Subprog D_MFGPIO(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGPIO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGTRKFLG
Onevent INIT_AREA Call D_MFGTRKFLG(zc) From W1WT65STD1
Return

Subprog D_MFGTRKFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGTRKFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RMNEXTQTY
Onevent BEFORE_AREA Gosub AV_RMNEXTQTY From W1WT65STD1
Return

$AV_RMNEXTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:MBP]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_ROUALT
Return

$ON_ROUNUM
Return

$ON_SCDFLG
Onevent INIT_AREA Call D_SCDFLG(zc) From W1WT65STD1
Return

Subprog D_SCDFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCDFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCDMOD
Onevent INIT_AREA Call D_SCDMOD(zc) From W1WT65STD1
Return

Subprog D_SCDMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SCDMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STU
Return

$CHG_STY
Return


