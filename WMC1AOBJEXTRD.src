#<AdxTL>@(#)0.0.0.0 $Revision$Class Transcribe import/export
# Supervisor
## ACLA-CLASSE ## AOBJEXTRD
# 2018-08-27 12:21:42 538


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : NUMTAB Table number ( Field C 3)
####################################################################

$SET_NUMTAB
If [L]_AOLDVAL<>this.NUMTAB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NUMTAB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NUMTAB
 Gosub PROPAGATE_NUMTAB
Endif
Return

$INIT_NUMTAB
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMTAB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NUMTAB
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMTAB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NUMTAB                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NUMTAB                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NUMTAB
[L]CURPRO = "NUMTAB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NUMTAB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NUMTAB
[L]CURPRO = "NUMTAB"
Return

$_AOTHERS_NUMTAB
[L]CURPRO = "NUMTAB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NUMTAB
[L]CURPRO = "NUMTAB"
Return

$PROPAGATE_NUMTAB
this.isReadonly = 0
[L]CURPRO = "NUMTAB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NUMTAB
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMTAB"
$_LNKPRO_NUMTAB
Return


####################################################################
# 2 : NUMCAR Table number ( Field A 4)
####################################################################

$SET_NUMCAR
If [L]_AOLDVAL<>this.NUMCAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NUMCAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NUMCAR
 Gosub PROPAGATE_NUMCAR
Endif
Return

$INIT_NUMCAR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMCAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NUMCAR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMCAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NUMCAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NUMCAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NUMCAR
[L]CURPRO = "NUMCAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NUMCAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NUMCAR
[L]CURPRO = "NUMCAR"
Return

$_AOTHERS_NUMCAR
[L]CURPRO = "NUMCAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NUMCAR
[L]CURPRO = "NUMCAR"
Return

$PROPAGATE_NUMCAR
this.isReadonly = 0
[L]CURPRO = "NUMCAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NUMCAR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMCAR"
$_LNKPRO_NUMCAR
Return


####################################################################
# 3 : INTIT Description ( Field AXX)
####################################################################

$GET_INTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTIT"
this.INTIT = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTIT
If [L]_AOLDVAL<>this.INTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTIT
 Gosub PROPAGATE_INTIT
Endif
Return

$INIT_INTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTIT
[L]CURPRO = "INTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTIT
[L]CURPRO = "INTIT"
Return

$_AOTHERS_INTIT
[L]CURPRO = "INTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTIT
[L]CURPRO = "INTIT"
Return

$PROPAGATE_INTIT
this.isReadonly = 0
[L]CURPRO = "INTIT"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.INTIT)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTIT"
$_LNKPRO_INTIT
Return


####################################################################
# 4 : NUMLIG Line no. ( Field C 3)
####################################################################

$SET_NUMLIG
If [L]_AOLDVAL<>this.NUMLIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NUMLIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NUMLIG
 Gosub PROPAGATE_NUMLIG
Endif
Return

$INIT_NUMLIG
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMLIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NUMLIG
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMLIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NUMLIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NUMLIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NUMLIG
[L]CURPRO = "NUMLIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NUMLIG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NUMLIG
[L]CURPRO = "NUMLIG"
Return

$_AOTHERS_NUMLIG
[L]CURPRO = "NUMLIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NUMLIG
[L]CURPRO = "NUMLIG"
Return

$PROPAGATE_NUMLIG
this.isReadonly = 0
[L]CURPRO = "NUMLIG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NUMLIG
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "NUMLIG"
$_LNKPRO_NUMLIG
Return


####################################################################
# 5 : CODLOC Code to transcribe ( Field A 30)
####################################################################

$SET_CODLOC
If [L]_AOLDVAL<>this.CODLOC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODLOC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODLOC
 Gosub PROPAGATE_CODLOC
Endif
Return

$INIT_CODLOC
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODLOC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODLOC
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODLOC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODLOC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODLOC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODLOC
[L]CURPRO = "CODLOC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODLOC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODLOC
[L]CURPRO = "CODLOC"
Return

$_AOTHERS_CODLOC
[L]CURPRO = "CODLOC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODLOC
[L]CURPRO = "CODLOC"
Return

$PROPAGATE_CODLOC
this.isReadonly = 0
[L]CURPRO = "CODLOC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODLOC
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODLOC"
$_LNKPRO_CODLOC
Return


####################################################################
# 6 : CODINTIT Transcoded title ( Field AXX)
####################################################################

$GET_CODINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODINTIT"
this.CODINTIT = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_CODINTIT
If [L]_AOLDVAL<>this.CODINTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODINTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODINTIT
 Gosub PROPAGATE_CODINTIT
Endif
Return

$INIT_CODINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODINTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODINTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODINTIT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODINTIT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODINTIT
[L]CURPRO = "CODINTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODINTIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODINTIT
[L]CURPRO = "CODINTIT"
Return

$_AOTHERS_CODINTIT
[L]CURPRO = "CODINTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODINTIT
[L]CURPRO = "CODINTIT"
Return

$PROPAGATE_CODINTIT
this.isReadonly = 0
[L]CURPRO = "CODINTIT"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.CODINTIT)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODINTIT"
$_LNKPRO_CODINTIT
Return


####################################################################
# 7 : CODEXT Function type ( Field A 30)
####################################################################

$SET_CODEXT
If [L]_AOLDVAL<>this.CODEXT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODEXT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODEXT
 Gosub PROPAGATE_CODEXT
Endif
Return

$INIT_CODEXT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODEXT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODEXT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODEXT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODEXT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODEXT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODEXT
[L]CURPRO = "CODEXT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODEXT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODEXT
[L]CURPRO = "CODEXT"
Return

$_AOTHERS_CODEXT
[L]CURPRO = "CODEXT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODEXT
[L]CURPRO = "CODEXT"
Return

$PROPAGATE_CODEXT
this.isReadonly = 0
[L]CURPRO = "CODEXT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODEXT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CODEXT"
$_LNKPRO_CODEXT
Return


####################################################################
# 8 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 9 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 10 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 11 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 12 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 13 : INTINTIT Internal ( Field A 65)
####################################################################

$SET_INTINTIT
If [L]_AOLDVAL<>this.INTINTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTINTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTINTIT
 Gosub PROPAGATE_INTINTIT
Endif
Return

$INIT_INTINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTINTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTINTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTINTIT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTINTIT              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTINTIT
[L]CURPRO = "INTINTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTINTIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTINTIT
[L]CURPRO = "INTINTIT"
Return

$_AOTHERS_INTINTIT
[L]CURPRO = "INTINTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTINTIT
[L]CURPRO = "INTINTIT"
Return

$PROPAGATE_INTINTIT
this.isReadonly = 0
[L]CURPRO = "INTINTIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTINTIT
Gosub DECLARE_VAR From WMC0AOBJEXTRD
[L]CURPRO = "INTINTIT"
$_LNKPRO_INTINTIT
Return




