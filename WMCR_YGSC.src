#<AdxTL>@(#)0.0.0.0 $Revision$Class General Scheme
# Supervisor
## CRUD-CLASSE ## YGSC
# 2018-11-13 22:23:13 631


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YGSCGEN [YGGN_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YGSC") From ASYRCOM : Endif
Local Instance YGSC Using C_YGSC

If !SILENCE : Call TRACE("3 --> New Instance C_YGSC") From ASYRCOM : Endif
YGSC = NewInstance C_YGSC AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YGGN_]YGGN0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YGSC") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YGSC.AREAD([YGGN_]YGSCID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YGSC.YGSCID ="-num$(YGSC.YGSCID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YGSC.AKEYS)
  Call TRACE("-"-num$(I)-":"-YGSC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YGGN_]
FreeGroup YGSC
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YGSC,ACLE,ASTATUS,_ETAG)
Variable Instance YGSC Using C_YGSC
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YGSCID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YGSCID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YGSCGEN [YGGN]
Default File [F:YGGN]
Read [F:YGGN]YGGN0 = [L]_YGSCID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YGGN]UPDTICK)>0
 [L]_ETAG = num$([F:YGGN]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YGSC,ACLE,ASTATUS)
Variable Instance YGSC Using C_YGSC
Value Char ACLE
Variable Integer ASTATUS
Local Char _YGSCID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YGSCID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YGSC.AREAD([L]_YGSCID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YGSC,_YGSCID,ASTATUS)
Variable Instance YGSC Using C_YGSC
Value Char _YGSCID
Variable Integer ASTATUS

If YGSC = null : End : Endif

Gosub AVARIABLES From WMC00YGSC
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YGSC.APARENT=null
 [L]A_I = YGSC.freeSnapshot
 YGSC.snapshotEnabled = 0
 YGSC.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YGSC.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YGSC._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YGSC.APARENT=null
 YGSC.snapshotEnabled = 1
 YGSC.setAccessorEnabled = 1
Endif
LogicClose File [YGGN] ,[YRMA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YGSC._ACTION_PARAM("AREAD_BEFORE",[L]_YGSCID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YGGN]
Read [F:YGGN]YGGN0 = [L]_YGSCID
If fstat
[L]A_ERROR = [L]_YGSCID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YGSC,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YGGN]AUUID)>0 & [F:YGGN]AUUID=NullUuid
 [F:YGGN]AUUID = getUuid
Endif
SetInstance YGSC With [F:YGGN]
YGSC.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YRMA]
 [L]A_N2=0
 For [F:YRMA]YRMA0 Where YGUID=[F:YGGN]YGUID
  [L]A_N2 +=1
  YGSC.YRMA(A_N2) = NewInstance  C_YRMA(YGSC.ACTX,NullUuid,[L]A_N2,YGSC,"YRMA") AllocGroup YGSC
  [L]ASTATUS = max([L]ASTATUS,fmet YGSC.YRMA(A_N2).ADDINSTANCE_BOUND)
  Callmet YGSC.YRMA(A_N2).AREAD([F:YRMA]YGUID,[F:YRMA]YLIGID)
  YGSC.YRMA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YGSC.YRMA(A_N2).ASETATTRIBUTE("YGUID","$namProParent","YGUID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YGSC.YRMA(A_N2).ASETATTRIBUTE("YLIGID","$isDisabled","true"))
 Next YRMA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YGSC.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



