#<AdxTL>@(#)0.0.0.0 $Revision$Class Settlement rule
# Supervisor
## CRUD-CLASSE ## YSETRUL
# 2019-04-11 12:09:43 708


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(YSETRUL,ASTATUS)
Variable Instance YSETRUL Using R_YSETRUL
Variable Integer ASTATUS

If YSETRUL = null : End : Endif

Gosub AVARIABLES From WMR00YSETRUL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet YSETRUL.ACTX.AGETAFCRIGHT(YSETRUL,"GESYSETRUL",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet YSETRUL.ACTX.AGETAFCRIGHTU(YSETRUL,"GESYSETRUL",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_YSETRUL
Else
 Gosub AUPDATE_YSETRUL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = YSETRUL.freeSnapshot
YSETRUL.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
YSETRUL.ASTALIN = [V]CST_AUPD
YSETRUL.YSTR.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = YSETRUL.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YSETRUL.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YSETRUL._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YSETRUL._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YSETRUL._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If YSETRUL.YSTR.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YSETRUL.YSTR.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(YSETRUL.YSTR.ASTALIN)<>""
 [L]A_ASTALIN = YSETRUL.YSTR.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.YSTR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
A_N2=1
If YSETRUL.YSTR.YSETRULTYP(A_N2) <> null
& and YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
A_N2=1
If YSETRUL.YSTR.YSETRULTYP(A_N2) <> null
& and YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(YSETRUL.YSTR.ASTALIN)<>""
 [L]A_ASTALIN = YSETRUL.YSTR.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.YSTR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_YSETRUL
Trbegin [F:YSTR]
 Gosub AUPDATE_YSETRUL
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(YSETRUL.YSTR.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YSETRUL.YSTR.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
A_N2=1
If YSETRUL.YSTR.YSETRULTYP(A_N2) <> null
 [L]ASTATUS2 = fmet YSETRUL.YSTR.YSETRULTYP(A_N2)._AUPDATE_AFTER
 If YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN=[V]CST_ADEL or YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YSETRUL.YSTR.YSETRULTYP(A_N2)
  YSETRUL.YSTR.YSETRULTYP(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif
Return

#-----------------------------------------------------#
$AUPDATE_YSETRUL
[L]A_ASTALIN = YSETRUL.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.YSTR._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = YSETRUL.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If YSETRUL.snapshotEnabled=1
 [L]A_RETIK = YSETRUL.revertUpdTick
Endif
Local Integer ASTATUS2
A_N2=1
If YSETRUL.YSTR.YSETRULTYP(A_N2) <> null
 [L]ASTATUS2 = fmet YSETRUL.YSTR.YSETRULTYP(A_N2)._AUPDATE_ABORT
 If YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN=[V]CST_ADEL or YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN=[V]CST_ANEWDEL
  FreeInstance YSETRUL.YSTR.YSETRULTYP(A_N2)
  YSETRUL.YSTR.YSETRULTYP(A_N2) = null
 Endif
 [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
Endif

[L]ASTATUS = max(fmet YSETRUL.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



