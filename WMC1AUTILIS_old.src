#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Sage X3 supervisor
## ACLA-CLASSE ## AUTILIS
# 2018-06-20 06:35:12 417


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : DATCONN Connection date ( Field D)
####################################################################

$SET_DATCONN
If [L]_AOLDVAL<>this.DATCONN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DATCONN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DATCONN
 Gosub PROPAGATE_DATCONN
Endif
Return

$INIT_DATCONN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DATCONN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DATCONN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DATCONN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DATCONN               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DATCONN               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DATCONN
[L]CURPRO = "DATCONN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DATCONN=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DATCONN
[L]CURPRO = "DATCONN"
Return

$_AOTHERS_DATCONN
[L]CURPRO = "DATCONN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DATCONN
[L]CURPRO = "DATCONN"
Return

$PROPAGATE_DATCONN
this.isReadonly = 0
[L]CURPRO = "DATCONN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DATCONN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DATCONN"
$_LNKPRO_DATCONN
Return


####################################################################
# 2 : DECTIME Time-out ( Field L 5)
####################################################################

$SET_DECTIME
If [L]_AOLDVAL<>this.DECTIME
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DECTIME
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DECTIME
 Gosub PROPAGATE_DECTIME
Endif
Return

$INIT_DECTIME
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DECTIME"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DECTIME
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DECTIME"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DECTIME               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DECTIME               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DECTIME
[L]CURPRO = "DECTIME"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DECTIME=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DECTIME
[L]CURPRO = "DECTIME"
Return

$_AOTHERS_DECTIME
[L]CURPRO = "DECTIME"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DECTIME
[L]CURPRO = "DECTIME"
Return

$PROPAGATE_DECTIME
this.isReadonly = 0
[L]CURPRO = "DECTIME"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DECTIME
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DECTIME"
$_LNKPRO_DECTIME
Return


####################################################################
# 3 : DIFIMP Deferred prints ( Field Local menu number 1)
####################################################################

$SET_DIFIMP
If [L]_AOLDVAL<>this.DIFIMP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIFIMP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIFIMP
 Gosub PROPAGATE_DIFIMP
Endif
Return

$INIT_DIFIMP
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DIFIMP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DIFIMP=0 and fmet this.AGETATTRIBUTE("DIFIMP","$isMandatory")="true"
 this.DIFIMP = 1
Endif
Return
 
$CONTROL_DIFIMP
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DIFIMP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIFIMP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIFIMP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIFIMP
[L]CURPRO = "DIFIMP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIFIMP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIFIMP
[L]CURPRO = "DIFIMP"
If this.DIFIMP<0 or this.DIFIMP>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DIFIMP)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DIFIMP
[L]CURPRO = "DIFIMP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIFIMP
[L]CURPRO = "DIFIMP"
Return

$PROPAGATE_DIFIMP
this.isReadonly = 0
[L]CURPRO = "DIFIMP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIFIMP
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "DIFIMP"
$_LNKPRO_DIFIMP
Return


####################################################################
# 4 : ENAFLG Active ( Field Local menu number 1)
####################################################################

$SET_ENAFLG
If [L]_AOLDVAL<>this.ENAFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ENAFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ENAFLG
 Gosub PROPAGATE_ENAFLG
Endif
Return

$INIT_ENAFLG
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ENAFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ENAFLG=0 and fmet this.AGETATTRIBUTE("ENAFLG","$isMandatory")="true"
 this.ENAFLG = 1
Endif
Return
 
$CONTROL_ENAFLG
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ENAFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ENAFLG
[L]CURPRO = "ENAFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ENAFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ENAFLG
[L]CURPRO = "ENAFLG"
If this.ENAFLG<0 or this.ENAFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ENAFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ENAFLG
[L]CURPRO = "ENAFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ENAFLG
[L]CURPRO = "ENAFLG"
Return

$PROPAGATE_ENAFLG
this.isReadonly = 0
[L]CURPRO = "ENAFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ENAFLG
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ENAFLG"
$_LNKPRO_ENAFLG
Return


####################################################################
# 5 : FAX Default fax ( Field TEL 20)
####################################################################

$SET_FAX
If [L]_AOLDVAL<>this.FAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FAX
 Gosub PROPAGATE_FAX
Endif
Return

$INIT_FAX
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "FAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FAX
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "FAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FAX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FAX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FAX
[L]CURPRO = "FAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FAX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FAX
[L]CURPRO = "FAX"
If vireblc(this.FAX,2)<>vireblc(format$("K:20X",this.FAX),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FAX
[L]CURPRO = "FAX"
[L]ASTATUS =  func ASYRTRTATY.CONTROLTEL(this,"FAX",this.FAX,this.CRY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FAX
[L]CURPRO = "FAX"
Return

$PROPAGATE_FAX
this.isReadonly = 0
[L]CURPRO = "FAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FAX
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "FAX"
$_LNKPRO_FAX
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATTEL(this,"FAX",this.FAX,[L]AFORMAT,this.CRY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("FAX","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 6 : NBRCON Number of connections ( Field C 4)
####################################################################

$SET_NBRCON
If [L]_AOLDVAL<>this.NBRCON
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBRCON
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBRCON
 Gosub PROPAGATE_NBRCON
Endif
Return

$INIT_NBRCON
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NBRCON"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBRCON
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NBRCON"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBRCON                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBRCON                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBRCON
[L]CURPRO = "NBRCON"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBRCON=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBRCON
[L]CURPRO = "NBRCON"
Return

$_AOTHERS_NBRCON
[L]CURPRO = "NBRCON"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBRCON
[L]CURPRO = "NBRCON"
Return

$PROPAGATE_NBRCON
this.isReadonly = 0
[L]CURPRO = "NBRCON"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBRCON
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NBRCON"
$_LNKPRO_NBRCON
Return


####################################################################
# 7 : NOMUSR Name ( Field DES 30)
####################################################################

$SET_NOMUSR
If [L]_AOLDVAL<>this.NOMUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NOMUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NOMUSR
 Gosub PROPAGATE_NOMUSR
Endif
Return

$INIT_NOMUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NOMUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NOMUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NOMUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NOMUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NOMUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NOMUSR
[L]CURPRO = "NOMUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NOMUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NOMUSR
[L]CURPRO = "NOMUSR"
If vireblc(this.NOMUSR,2)<>vireblc(format$("K:30X",this.NOMUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_NOMUSR
[L]CURPRO = "NOMUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NOMUSR
[L]CURPRO = "NOMUSR"
Return

$PROPAGATE_NOMUSR
this.isReadonly = 0
[L]CURPRO = "NOMUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NOMUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NOMUSR"
$_LNKPRO_NOMUSR
Return


####################################################################
# 8 : INTUSR Name ( Field AX3)
####################################################################

$GET_INTUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "INTUSR"
this.INTUSR = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTUSR
If [L]_AOLDVAL<>this.INTUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTUSR
 Gosub PROPAGATE_INTUSR
Endif
Return

$INIT_INTUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "INTUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "INTUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTUSR
[L]CURPRO = "INTUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTUSR
[L]CURPRO = "INTUSR"
If vireblc(fmet this.AGETTEXTRA("INTUSR"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("INTUSR")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INTUSR
[L]CURPRO = "INTUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTUSR
[L]CURPRO = "INTUSR"
Return

$PROPAGATE_INTUSR
this.isReadonly = 0
[L]CURPRO = "INTUSR"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.INTUSR)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "INTUSR"
$_LNKPRO_INTUSR
Return


####################################################################
# 9 : PASSE Password ( Field A 10)
####################################################################

$SET_PASSE
If [L]_AOLDVAL<>this.PASSE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PASSE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PASSE
 Gosub PROPAGATE_PASSE
Endif
Return

$INIT_PASSE
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PASSE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PASSE
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PASSE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PASSE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PASSE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PASSE
[L]CURPRO = "PASSE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PASSE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PASSE
[L]CURPRO = "PASSE"
Return

$_AOTHERS_PASSE
[L]CURPRO = "PASSE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PASSE
[L]CURPRO = "PASSE"
Return

$PROPAGATE_PASSE
this.isReadonly = 0
[L]CURPRO = "PASSE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PASSE
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PASSE"
$_LNKPRO_PASSE
Return


####################################################################
# 10 : PASSDAT Validity date ( Field D)
####################################################################

$SET_PASSDAT
If [L]_AOLDVAL<>this.PASSDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PASSDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PASSDAT
 Gosub PROPAGATE_PASSDAT
Endif
Return

$INIT_PASSDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PASSDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PASSDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PASSDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PASSDAT               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PASSDAT               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PASSDAT
[L]CURPRO = "PASSDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PASSDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PASSDAT
[L]CURPRO = "PASSDAT"
Return

$_AOTHERS_PASSDAT
[L]CURPRO = "PASSDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PASSDAT
[L]CURPRO = "PASSDAT"
Return

$PROPAGATE_PASSDAT
this.isReadonly = 0
[L]CURPRO = "PASSDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PASSDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PASSDAT"
$_LNKPRO_PASSDAT
Return


####################################################################
# 11 : TELEP Default telephone ( Field TEL 20)
####################################################################

$SET_TELEP
If [L]_AOLDVAL<>this.TELEP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TELEP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TELEP
 Gosub PROPAGATE_TELEP
Endif
Return

$INIT_TELEP
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "TELEP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TELEP
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "TELEP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TELEP                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TELEP                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TELEP
[L]CURPRO = "TELEP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TELEP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TELEP
[L]CURPRO = "TELEP"
If vireblc(this.TELEP,2)<>vireblc(format$("K:20X",this.TELEP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TELEP
[L]CURPRO = "TELEP"
[L]ASTATUS =  func ASYRTRTATY.CONTROLTEL(this,"TELEP",this.TELEP,this.CRY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TELEP
[L]CURPRO = "TELEP"
Return

$PROPAGATE_TELEP
this.isReadonly = 0
[L]CURPRO = "TELEP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TELEP
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "TELEP"
$_LNKPRO_TELEP
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATTEL(this,"TELEP",this.TELEP,[L]AFORMAT,this.CRY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("TELEP","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 12 : TIMCONN Connection time ( Field A 10)
####################################################################

$SET_TIMCONN
If [L]_AOLDVAL<>this.TIMCONN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TIMCONN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TIMCONN
 Gosub PROPAGATE_TIMCONN
Endif
Return

$INIT_TIMCONN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "TIMCONN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TIMCONN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "TIMCONN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TIMCONN               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TIMCONN               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TIMCONN
[L]CURPRO = "TIMCONN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TIMCONN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TIMCONN
[L]CURPRO = "TIMCONN"
Return

$_AOTHERS_TIMCONN
[L]CURPRO = "TIMCONN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TIMCONN
[L]CURPRO = "TIMCONN"
Return

$PROPAGATE_TIMCONN
this.isReadonly = 0
[L]CURPRO = "TIMCONN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TIMCONN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "TIMCONN"
$_LNKPRO_TIMCONN
Return


####################################################################
# 13 : USR Code ( Field AUS 5)
####################################################################

$SET_USR
If [L]_AOLDVAL<>this.USR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USR
 Gosub PROPAGATE_USR
Endif
Return

$INIT_USR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USR
[L]CURPRO = "USR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USR
[L]CURPRO = "USR"
If vireblc(this.USR,2)<>vireblc(format$("K:5B",this.USR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USR
[L]CURPRO = "USR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USR
[L]CURPRO = "USR"
Return

$PROPAGATE_USR
this.isReadonly = 0
[L]CURPRO = "USR"
Gosub _LNKPRO_USR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USR"
$_LNKPRO_USR
If vireblc(this.USR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.USR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return

$_ALOADATTRIBUTE_USR
[L]ASTATUS = fmet this.ASETATTRIBUTE("USR","$isMandatory","true")
Return


####################################################################
# 14 : CODMET Profession code ( Field AME 4)
####################################################################

$SET_CODMET
If [L]_AOLDVAL<>this.CODMET
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODMET
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODMET
 Gosub PROPAGATE_CODMET
Endif
Return

$INIT_CODMET
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CODMET"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODMET
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CODMET"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODMET                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODMET                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODMET
[L]CURPRO = "CODMET"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODMET,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODMET
[L]CURPRO = "CODMET"
If vireblc(this.CODMET,2)<>vireblc(format$("K:4c",this.CODMET),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODMET
[L]CURPRO = "CODMET"
If vireblc(this.CODMET,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAME.ACTRLREF(this,"CODMET",this.CODMET,this.CODMET,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODMET<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODMET
[L]CURPRO = "CODMET"
Return

$PROPAGATE_CODMET
this.isReadonly = 0
[L]CURPRO = "CODMET"
Gosub _LNKPRO_CODMET
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODMET
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CODMET"
$_LNKPRO_CODMET
If vireblc(this.CODMET,2)<>""
 # Link AMETUTI
 Local File AMETUTI [WAME]
 Read [F:WAME]AME0 = this.CODMET
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AMETUTI" & ZONE="INTMET" & IDENT1=[F:WAME]CODMET & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CODMET","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAME]
Endif
Return


####################################################################
# 15 : PRFMEN Menu profile ( Field APM 5)
####################################################################

$SET_PRFMEN
If [L]_AOLDVAL<>this.PRFMEN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRFMEN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRFMEN
 Gosub PROPAGATE_PRFMEN
Endif
Return

$INIT_PRFMEN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PRFMEN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRFMEN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PRFMEN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRFMEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRFMEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRFMEN
[L]CURPRO = "PRFMEN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRFMEN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRFMEN
[L]CURPRO = "PRFMEN"
If vireblc(this.PRFMEN,2)<>vireblc(format$("K:5c",this.PRFMEN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRFMEN
[L]CURPRO = "PRFMEN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRFMEN
[L]CURPRO = "PRFMEN"
If vireblc(this.PRFMEN,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAPM.ACTRLREF(this,"PRFMEN",this.PRFMEN,this.PRFMEN,0,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PRFMEN<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_PRFMEN
this.isReadonly = 0
[L]CURPRO = "PRFMEN"
Gosub _LNKPRO_PRFMEN
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRFMEN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PRFMEN"
$_LNKPRO_PRFMEN
If vireblc(this.PRFMEN,2)<>""
 # Link APROFIL
 Local File APROFIL [WAPF]
 Read [F:WAPF]APF1 = this.PRFMEN;0
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="APROFIL" & ZONE="INTPRF" & IDENT1="0" & IDENT2=[F:WAPF]CODPRF & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PRFMEN","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAPF]
Endif
Return


####################################################################
# 16 : PRFFCT Function profile ( Field AFT 5)
####################################################################

$SET_PRFFCT
If [L]_AOLDVAL<>this.PRFFCT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRFFCT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRFFCT
 Gosub PROPAGATE_PRFFCT
Endif
Return

$INIT_PRFFCT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PRFFCT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRFFCT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PRFFCT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRFFCT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRFFCT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRFFCT
[L]CURPRO = "PRFFCT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRFFCT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRFFCT
[L]CURPRO = "PRFFCT"
If vireblc(this.PRFFCT,2)<>vireblc(format$("K:5c",this.PRFFCT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRFFCT
[L]CURPRO = "PRFFCT"
If vireblc(this.PRFFCT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAFT.ACTRLREF(this,"PRFFCT",this.PRFFCT,this.PRFFCT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PRFFCT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRFFCT
[L]CURPRO = "PRFFCT"
Return

$PROPAGATE_PRFFCT
this.isReadonly = 0
[L]CURPRO = "PRFFCT"
Gosub _LNKPRO_PRFFCT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRFFCT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "PRFFCT"
$_LNKPRO_PRFFCT
If vireblc(this.PRFFCT,2)<>""
 # Link AFCTFCT
 Local File AFCTFCT [WAFT]
 Read [F:WAFT]AFT0 = this.PRFFCT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AFCTFCT" & ZONE="INTPRF" & IDENT1=[F:WAFT]PRFCOD & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PRFFCT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAFT]
Endif
Return


####################################################################
# 17 : ADDEML Email address ( Field MAI 80)
####################################################################

$SET_ADDEML
If [L]_AOLDVAL<>this.ADDEML
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADDEML
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADDEML
 Gosub PROPAGATE_ADDEML
Endif
Return

$INIT_ADDEML
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ADDEML"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADDEML
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ADDEML"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADDEML                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADDEML                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADDEML
[L]CURPRO = "ADDEML"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ADDEML,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADDEML
[L]CURPRO = "ADDEML"
If vireblc(this.ADDEML,2)<>vireblc(format$("K:80X",this.ADDEML),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ADDEML
[L]CURPRO = "ADDEML"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADDEML
[L]CURPRO = "ADDEML"
Return

$PROPAGATE_ADDEML
this.isReadonly = 0
[L]CURPRO = "ADDEML"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADDEML
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ADDEML"
$_LNKPRO_ADDEML
Return


####################################################################
# 18 : LOGIN Login ( Field ALO 20)
####################################################################

$SET_LOGIN
If [L]_AOLDVAL<>this.LOGIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOGIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOGIN
 Gosub PROPAGATE_LOGIN
Endif
Return

$INIT_LOGIN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "LOGIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LOGIN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "LOGIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOGIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOGIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOGIN
[L]CURPRO = "LOGIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LOGIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOGIN
[L]CURPRO = "LOGIN"
If vireblc(this.LOGIN,2)<>vireblc(format$("K:20X",this.LOGIN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LOGIN
[L]CURPRO = "LOGIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOGIN
[L]CURPRO = "LOGIN"
Return

$PROPAGATE_LOGIN
this.isReadonly = 0
[L]CURPRO = "LOGIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOGIN
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "LOGIN"
$_LNKPRO_LOGIN
Return


####################################################################
# 19 : USRBI BI user ( Field AIU 5)
####################################################################

$SET_USRBI
If [L]_AOLDVAL<>this.USRBI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRBI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRBI
 Gosub PROPAGATE_USRBI
Endif
Return

$INIT_USRBI
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRBI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USRBI
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRBI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRBI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRBI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRBI
[L]CURPRO = "USRBI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USRBI,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRBI
[L]CURPRO = "USRBI"
If vireblc(this.USRBI,2)<>vireblc(format$("K:5B",this.USRBI),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USRBI
[L]CURPRO = "USRBI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRBI
[L]CURPRO = "USRBI"
Return

$PROPAGATE_USRBI
this.isReadonly = 0
[L]CURPRO = "USRBI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRBI
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRBI"
$_LNKPRO_USRBI
Return


####################################################################
# 20 : NBFNC No. ( Field C 4)
####################################################################

$SET_NBFNC
If [L]_AOLDVAL<>this.NBFNC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NBFNC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NBFNC
 Gosub PROPAGATE_NBFNC
Endif
Return

$INIT_NBFNC
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NBFNC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NBFNC
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NBFNC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NBFNC                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NBFNC                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NBFNC
[L]CURPRO = "NBFNC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NBFNC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NBFNC
[L]CURPRO = "NBFNC"
Return

$_AOTHERS_NBFNC
[L]CURPRO = "NBFNC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NBFNC
[L]CURPRO = "NBFNC"
Return

$PROPAGATE_NBFNC
this.isReadonly = 0
[L]CURPRO = "NBFNC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NBFNC
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "NBFNC"
$_LNKPRO_NBFNC
Return


####################################################################
# 21 : CREUSR Creation user ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 22 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 23 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 24 : UPDUSR Change user ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 25 : ALLACS All access codes ( Field Local menu number 1)
####################################################################

$SET_ALLACS
If [L]_AOLDVAL<>this.ALLACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLACS
 Gosub PROPAGATE_ALLACS
Endif
Return

$INIT_ALLACS
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ALLACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALLACS=0 and fmet this.AGETATTRIBUTE("ALLACS","$isMandatory")="true"
 this.ALLACS = 1
Endif
Return
 
$CONTROL_ALLACS
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ALLACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLACS
[L]CURPRO = "ALLACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLACS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLACS
[L]CURPRO = "ALLACS"
If this.ALLACS<0 or this.ALLACS>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ALLACS)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ALLACS
[L]CURPRO = "ALLACS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLACS
[L]CURPRO = "ALLACS"
Return

$PROPAGATE_ALLACS
this.isReadonly = 0
[L]CURPRO = "ALLACS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLACS
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "ALLACS"
$_LNKPRO_ALLACS
Return


####################################################################
# 26 : USREXT External user ( Field Local menu number 1)
####################################################################

$SET_USREXT
If [L]_AOLDVAL<>this.USREXT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USREXT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USREXT
 Gosub PROPAGATE_USREXT
Endif
Return

$INIT_USREXT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USREXT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USREXT=0 and fmet this.AGETATTRIBUTE("USREXT","$isMandatory")="true"
 this.USREXT = 1
Endif
Return
 
$CONTROL_USREXT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USREXT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USREXT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USREXT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USREXT
[L]CURPRO = "USREXT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USREXT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USREXT
[L]CURPRO = "USREXT"
If this.USREXT<0 or this.USREXT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.USREXT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_USREXT
[L]CURPRO = "USREXT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USREXT
[L]CURPRO = "USREXT"
Return

$PROPAGATE_USREXT
this.isReadonly = 0
[L]CURPRO = "USREXT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USREXT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USREXT"
$_LNKPRO_USREXT
Return


####################################################################
# 27 : CHGDAT Date change ( Field Local menu number 1)
####################################################################

$SET_CHGDAT
If [L]_AOLDVAL<>this.CHGDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CHGDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CHGDAT
 Gosub PROPAGATE_CHGDAT
Endif
Return

$INIT_CHGDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CHGDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CHGDAT=0 and fmet this.AGETATTRIBUTE("CHGDAT","$isMandatory")="true"
 this.CHGDAT = 1
Endif
Return
 
$CONTROL_CHGDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CHGDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CHGDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CHGDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CHGDAT
[L]CURPRO = "CHGDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CHGDAT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CHGDAT
[L]CURPRO = "CHGDAT"
If this.CHGDAT<0 or this.CHGDAT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CHGDAT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CHGDAT
[L]CURPRO = "CHGDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CHGDAT
[L]CURPRO = "CHGDAT"
Return

$PROPAGATE_CHGDAT
this.isReadonly = 0
[L]CURPRO = "CHGDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CHGDAT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "CHGDAT"
$_LNKPRO_CHGDAT
Return


####################################################################
# 28 : REPNUM Sales rep code ( Field A 10)
####################################################################

$SET_REPNUM
If [L]_AOLDVAL<>this.REPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REPNUM
 Gosub PROPAGATE_REPNUM
Endif
Return

$INIT_REPNUM
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "REPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REPNUM
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "REPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REPNUM
[L]CURPRO = "REPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.REPNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REPNUM
[L]CURPRO = "REPNUM"
Return

$_AOTHERS_REPNUM
[L]CURPRO = "REPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REPNUM
[L]CURPRO = "REPNUM"
Return

$PROPAGATE_REPNUM
this.isReadonly = 0
[L]CURPRO = "REPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REPNUM
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "REPNUM"
$_LNKPRO_REPNUM
Return


####################################################################
# 29 : USRCONNECT X3 connection ( Field Local menu number 1)
####################################################################

$SET_USRCONNECT
If [L]_AOLDVAL<>this.USRCONNECT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRCONNECT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRCONNECT
 Gosub PROPAGATE_USRCONNECT
Endif
Return

$INIT_USRCONNECT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRCONNECT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USRCONNECT=0 and fmet this.AGETATTRIBUTE("USRCONNECT","$isMandatory")="true"
 this.USRCONNECT = 1
Endif
Return
 
$CONTROL_USRCONNECT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRCONNECT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRCONNECT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRCONNECT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRCONNECT
[L]CURPRO = "USRCONNECT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USRCONNECT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRCONNECT
[L]CURPRO = "USRCONNECT"
If this.USRCONNECT<0 or this.USRCONNECT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.USRCONNECT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_USRCONNECT
[L]CURPRO = "USRCONNECT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRCONNECT
[L]CURPRO = "USRCONNECT"
Return

$PROPAGATE_USRCONNECT
this.isReadonly = 0
[L]CURPRO = "USRCONNECT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRCONNECT
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRCONNECT"
$_LNKPRO_USRCONNECT
Return


####################################################################
# 30 : USRCONXTD Web services connect. ( Field Local menu number 1)
####################################################################

$SET_USRCONXTD
If [L]_AOLDVAL<>this.USRCONXTD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRCONXTD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRCONXTD
 Gosub PROPAGATE_USRCONXTD
Endif
Return

$INIT_USRCONXTD
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRCONXTD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USRCONXTD=0 and fmet this.AGETATTRIBUTE("USRCONXTD","$isMandatory")="true"
 this.USRCONXTD = 1
Endif
Return
 
$CONTROL_USRCONXTD
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRCONXTD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRCONXTD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRCONXTD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRCONXTD
[L]CURPRO = "USRCONXTD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USRCONXTD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRCONXTD
[L]CURPRO = "USRCONXTD"
If this.USRCONXTD<0 or this.USRCONXTD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.USRCONXTD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_USRCONXTD
[L]CURPRO = "USRCONXTD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRCONXTD
[L]CURPRO = "USRCONXTD"
Return

$PROPAGATE_USRCONXTD
this.isReadonly = 0
[L]CURPRO = "USRCONXTD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRCONXTD
Gosub DECLARE_VAR From WMC0AUTILIS
[L]CURPRO = "USRCONXTD"
$_LNKPRO_USRCONXTD
Return




