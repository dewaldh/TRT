#<AdxTL>@(#)0.0.0.0 $Revision$Class Signed quotes
# Supervisor
## ACLA-CLASSE ## TCWSQHSIGM_SIG
# 2018-08-27 13:44:59 610

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : SIG_POS Position ( Field C 4)
####################################################################
 
$SET_SIG_POS
If [L]_AOLDVAL<>this.SIG_POS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIG_POS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIG_POS
 Gosub PROPAGATE_SIG_POS
Endif
Return

$INIT_SIG_POS
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_POS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIG_POS
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_POS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIG_POS               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIG_POS               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIG_POS
[L]CURPRO = "SIG_POS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SIG_POS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIG_POS
[L]CURPRO = "SIG_POS"
Return

$_AOTHERS_SIG_POS
[L]CURPRO = "SIG_POS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIG_POS
[L]CURPRO = "SIG_POS"
Return

$PROPAGATE_SIG_POS
this.isReadonly = 0
[L]CURPRO = "SIG_POS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIG_POS
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_POS"
$_LNKPRO_SIG_POS
Return


####################################################################
# 2 : SIG_NAM Signer ( Field AUS 5)
####################################################################
 
$SET_SIG_NAM
If [L]_AOLDVAL<>this.SIG_NAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIG_NAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIG_NAM
 Gosub PROPAGATE_SIG_NAM
Endif
Return

$INIT_SIG_NAM
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_NAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIG_NAM
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_NAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIG_NAM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIG_NAM               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIG_NAM
[L]CURPRO = "SIG_NAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SIG_NAM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIG_NAM
[L]CURPRO = "SIG_NAM"
If vireblc(this.SIG_NAM,2)<>vireblc(format$("K:5B",this.SIG_NAM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SIG_NAM
[L]CURPRO = "SIG_NAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIG_NAM
[L]CURPRO = "SIG_NAM"
Return

$PROPAGATE_SIG_NAM
this.isReadonly = 0
[L]CURPRO = "SIG_NAM"
Gosub _LNKPRO_SIG_NAM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIG_NAM
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_NAM"
$_LNKPRO_SIG_NAM
If vireblc(this.SIG_NAM,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.SIG_NAM
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SIG_NAM","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SIG_NAM","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 3 : SIG_LEV Level ( Field A 1)
####################################################################
 
$SET_SIG_LEV
If [L]_AOLDVAL<>this.SIG_LEV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SIG_LEV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SIG_LEV
 Gosub PROPAGATE_SIG_LEV
Endif
Return

$INIT_SIG_LEV
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_LEV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SIG_LEV
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_LEV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SIG_LEV               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SIG_LEV               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SIG_LEV
[L]CURPRO = "SIG_LEV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SIG_LEV,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SIG_LEV
[L]CURPRO = "SIG_LEV"
Return

$_AOTHERS_SIG_LEV
[L]CURPRO = "SIG_LEV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SIG_LEV
[L]CURPRO = "SIG_LEV"
Return

$PROPAGATE_SIG_LEV
this.isReadonly = 0
[L]CURPRO = "SIG_LEV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SIG_LEV
Gosub DECLARE_VAR From WMR0TCWSQHSIGM_SIG
[L]CURPRO = "SIG_LEV"
$_LNKPRO_SIG_LEV
Return




