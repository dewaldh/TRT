#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PATCH 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:06:42"
A_USER  = "ADMIN"
A_STAMP = "20180828000642"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBDOS"
  If [M]NBDOS=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PATCH [DIA]
Gosub HORODAT
Local Inpbox "PATCH" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]10
Grizo [DIA]15
Grizo [DIA]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=12 : X2(0)=101 : Y1(0)=6 : Y2(0)=8
X1(1)=12 : X2(1)=101 : Y1(1)=9 : Y2(1)=11
X1(2)=12 : X2(2)=101 : Y1(2)=12 : Y2(2)=22
Return

$ON_TYPEXP
Onevent BEFORE_INPUT Call AS_TYPEXP(zc) From W1PATCH
Onevent CONTROL Call C_TYPEXP(zc) From W1PATCH
Onevent AFTER_CHANGE Gosub AMM_TYPEXP From W1PATCH
Onevent INIT_AREA Call D_TYPEXP(zc) From W1PATCH
Return

Subprog D_TYPEXP(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPEXP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPEXP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_TYPEXP(VALEUR) From PATCH
If mkstat=2
 [M]TYPEXP(INDIC) = VALEUR
 Affzo TYPEXP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
If !mkstat
 ## Action STD
 Call C_TYPEXP(VALEUR) From PATCH
 If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
Endif
Gosub _AFF
End

$AMM_TYPEXP
Call AM_TYPEXP(zc)
If !mkstat & GOBJET
 zoncou = "TYPEXP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYPEXP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TYPEXP(VALEUR) From PATCH
If mkstat : GERR = 1 : GZONE = "TYPEXP" : GZNUM = 32516 : Endif
Gosub _AFF
End

$ON_FICHIER
Return

$ON_VOLFIL
Onevent CONTROL Call C_VOLFIL(zc) From W1PATCH
Onevent BEFORE_INPUT Call AS_VOLFIL(zc) From W1PATCH
Return

Subprog AS_VOLFIL(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VOLFIL(zc) From W1PATCH
Gosub _AFF
End

Subprog C_VOLFIL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VOLFIL(VALEUR) From PATCH
If mkstat : GERR = 1 : GZONE = "VOLFIL" : GZNUM = 11702 : Endif
Gosub _AFF
End

Subprog S_VOLFIL(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFICREP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFICREP"
 PARMSK(1) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"DFICREP","SELFICREP","XWDFICREP") From GSAISIE
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_INTEG
Onevent AFTER_CHANGE Gosub AMM_INTEG From W1PATCH
Onevent INIT_AREA Call D_INTEG(zc) From W1PATCH
Onevent BEFORE_INPUT Call AS_INTEG(zc) From W1PATCH
Return

Subprog D_INTEG(VALEUR)
Variable Integer VALEUR
If varinit([M]INTEG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INTEG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_INTEG
Call AM_INTEG(zc)
If !mkstat & GOBJET
 zoncou = "INTEG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INTEG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_INTEG(VALEUR) From PATCH
If mkstat : GERR = 1 : GZONE = "INTEG" : GZNUM = 11923 : Endif
Gosub _AFF
End

$ON_REM
Onevent INIT_AREA Call D_REM(zc) From W1PATCH
Onevent BEFORE_INPUT Call AS_REM(zc) From W1PATCH
Return

Subprog D_REM(VALEUR)
Variable Integer VALEUR
If varinit([M]REM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GLANGUE <> "FRA")
 Affzo REM : mkstat = 2
Endif
If !mkstat
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_FULLMOD
Onevent INIT_AREA Call D_FULLMOD(zc) From W1PATCH
Return

Subprog D_FULLMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]FULLMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AVALDIF
Onevent BEFORE_AREA Gosub AV_AVALDIF From W1PATCH
Onevent INIT_AREA Call D_AVALDIF(zc) From W1PATCH
Onevent AFTER_CHANGE Gosub AMM_AVALDIF From W1PATCH
Onevent BEFORE_INPUT Call AS_AVALDIF(zc) From W1PATCH
Return

$AV_AVALDIF
## Action STD
Call AV_AVALDIF(zc) From PATCH
Gosub _AFF
Return

Subprog D_AVALDIF(VALEUR)
Variable Integer VALEUR
If varinit([M]AVALDIF,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_AVALDIF(VALEUR) From PATCH
Endif
Gosub _AFF
End

Subprog AS_AVALDIF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_AVALDIF
Call AM_AVALDIF(zc)
If !mkstat & GOBJET
 zoncou = "AVALDIF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_AVALDIF(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_AVALDIF(VALEUR) From PATCH
If mkstat : GERR = 1 : GZONE = "AVALDIF" : GZNUM = 48617 : Endif
Gosub _AFF
End

$ON_ALNKSYNC
Onevent INIT_AREA Call D_ALNKSYNC(zc) From W1PATCH
Onevent BEFORE_INPUT Call AS_ALNKSYNC(zc) From W1PATCH
Return

Subprog D_ALNKSYNC(VALEUR)
Variable Integer VALEUR
If varinit([M]ALNKSYNC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALNKSYNC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AFLGSYNCH
Onevent BEFORE_AREA Gosub AV_AFLGSYNCH From W1PATCH
Onevent BEFORE_INPUT Call AS_AFLGSYNCH(zc) From W1PATCH
Onevent INIT_AREA Call D_AFLGSYNCH(zc) From W1PATCH
Return

$AV_AFLGSYNCH
## Action STD
Call AV_AFLGSYNCH(zc) From PATCH
Gosub _AFF
Return

Subprog D_AFLGSYNCH(VALEUR)
Variable Integer VALEUR
If varinit([M]AFLGSYNCH,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AFLGSYNCH(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AFLGSYNCH(VALEUR) From PATCH
If mkstat=2
 [M]AFLGSYNCH(INDIC) = VALEUR
 Affzo AFLGSYNCH(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DOSSIER
Onevent AFTER_CHANGE Gosub AMM_DOSSIER From W1PATCH
Onevent CONTROL Call C_DOSSIER(zc) From W1PATCH
Onevent BEFORE_INPUT Call AS_DOSSIER(zc) From W1PATCH
Return

Subprog AS_DOSSIER(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_DOSSIER(zc) From W1PATCH
Onkey 144 Titled GBOUTP Call P_DOSSIER(zc) From W1PATCH
Onkey 146 Titled GBOUTA Call SA_DOSSIER(zc) From W1PATCH
Gosub _AFF
End

Subprog C_DOSSIER(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DOSSIER" : GZNUM = 10035 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADS","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "DOSSIER" : GZNUM = 10035 : Endif
 If !mkstat
  ## Action STD
  Call C_DOSSIER(VALEUR) From PATCH
  If mkstat : GERR = 1 : GZONE = "DOSSIER" : GZNUM = 10035 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_DOSSIER
Call AM_DOSSIER(zc)
If !mkstat & GOBJET
 zoncou = "DOSSIER" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DOSSIER(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action APASSWD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "APASSWD"
 PARMSK(1) = ""
 PARMSK(2) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"APASSWD","APASSWD","SPEPASSWD") From GSAISIE
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "DOSSIER" : GZNUM = 10035 : Endif
Endif
If !mkstat
 ## Action STD
 Call AM_DOSSIER(VALEUR) From PATCH
 If mkstat : GERR = 1 : GZONE = "DOSSIER" : GZNUM = 10035 : Endif
 If !mkstat & evalue("dim("+clanam([M])+"ZDOSSIER)")>indice
  [M]DOSSIER(indice) = VALEUR
  Affzo ZDOSSIER(indice)
 Endif
Endif
Gosub _AFF
End

Subprog S_DOSSIER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ADS"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_DOSSIER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_DOSSIER(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ADS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZDOSSIER
Onevent BEFORE_AREA Gosub AV_ZDOSSIER From W1PATCH
Return

$AV_ZDOSSIER
If clalev([F:ADS])=0 : Local File ADOSSIER [ADS] : Endif
Call LECTURE("ADS",num$([M]DOSSIER(indice)),"") From CONTOBJ
zc = [F:ADS]NOMDOS
Gosub _AFF
Return

$ON_NEWVER
Onevent BEFORE_AREA Gosub AV_NEWVER From W1PATCH
Return

$AV_NEWVER
zc = func ABOUT_CSTD.NEWVER([M]VERSION(indice),[M]PATCH(indice))
Gosub _AFF
Return

$ON_SYRFLGUPD
Onevent INIT_AREA Call D_SYRFLGUPD(zc) From W1PATCH
Return

Subprog D_SYRFLGUPD(VALEUR)
Variable Integer VALEUR
If varinit([M]SYRFLGUPD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SYRSTAMAINT
Onevent INIT_AREA Call D_SYRSTAMAINT(zc) From W1PATCH
Return

Subprog D_SYRSTAMAINT(VALEUR)
Variable Integer VALEUR
If varinit([M]SYRSTAMAINT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


