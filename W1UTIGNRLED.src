#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management UTIGNRLED 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:17:33"
A_USER  = "ADMIN"
A_STAMP = "20180828001733"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask UTIGNRLED [DIA]
Gosub HORODAT
Local Inpbox "UTIGNRLED" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Grizo [DIA]10
Grizo [DIA]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=24 : X2(0)=89 : Y1(0)=9 : Y2(0)=15
X1(1)=24 : X2(1)=89 : Y1(1)=16 : Y2(1)=17
X1(2)=24 : X2(2)=89 : Y1(2)=18 : Y2(2)=19
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1UTIGNRLED
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1UTIGNRLED
Onevent AFTER_CHANGE Gosub AMM_CPY From W1UTIGNRLED
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1UTIGNRLED
Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1UTIGNRLED
Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1UTIGNRLED
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action ACONTCPY
 Call CONTSOC(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CPY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  If !mkstat
   ## Action STD
   Call C_CPY(VALEUR) From UTIGNRLED
   If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPY
Call AM_CPY(zc)
If !mkstat & GOBJET
 zoncou = "CPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCPY)")>indice
 [M]CPY(indice) = VALEUR
 Affzo ZCPY(indice)
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1UTIGNRLED
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_LEDTYP
Onevent BEFORE_INPUT Call AS_LEDTYP(zc) From W1UTIGNRLED
Onevent CONTROL Call C_LEDTYP(zc) From W1UTIGNRLED
Onevent INIT_AREA Call D_LEDTYP(zc) From W1UTIGNRLED
Return

Subprog D_LEDTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]LEDTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LEDTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2644) From COMBOS
## Action STD
Call AS_LEDTYP(VALEUR) From UTIGNRLED
If mkstat=2
 [M]LEDTYP(INDIC) = VALEUR
 Affzo LEDTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2644,1))))
Endif
If !mkstat
 Discombo 0 From LEDTYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LEDTYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LEDTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "LEDTYP" : GZNUM = 27525 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action STD
 Call C_LEDTYP(VALEUR) From UTIGNRLED
 If mkstat : GERR = 1 : GZONE = "LEDTYP" : GZNUM = 27525 : Endif
Endif
Gosub _AFF
End

$ON_ALLTYP
Onevent CONTROL Call C_ALLTYP(zc) From W1UTIGNRLED
Onevent INIT_AREA Call D_ALLTYP(zc) From W1UTIGNRLED
Onevent BEFORE_INPUT Call AS_ALLTYP(zc) From W1UTIGNRLED
Return

Subprog D_ALLTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLTYP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ALLTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ALLTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_ALLTYP(VALEUR) From UTIGNRLED
If mkstat : GERR = 1 : GZONE = "ALLTYP" : GZNUM = 6054 : Endif
Gosub _AFF
End

$ON_TYP
Onevent CONTROL Call C_TYP(zc) From W1UTIGNRLED
Onevent BEFORE_INPUT Call AS_TYP(zc) From W1UTIGNRLED
Onevent AFTER_CHANGE Gosub AMM_TYP From W1UTIGNRLED
Return

Subprog AS_TYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(5152,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_TYP(VALEUR) From UTIGNRLED
If mkstat=2
 [M]TYP(INDIC) = VALEUR
 Affzo TYP(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_TYP(zc) From W1UTIGNRLED
Onkey   2 Titled GBOUTS Call S_TYP(zc) From W1UTIGNRLED
Onkey 144 Titled GBOUTP Call P_TYP(zc) From W1UTIGNRLED
Onkey 146 Titled GBOUTA Call SA_TYP(zc) From W1UTIGNRLED
Gosub _AFF
End

Subprog C_TYP(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 436 : Endif
If !mkstat
 ## Action CONTGTE
 Call CONTGTE(VALEUR,"","") From SUBGTE
 If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 436 : Endif
 If !mkstat
  ## Action CONTOBJN
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "CONTOBJN"
  Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 436 : Endif
  If !mkstat
   ## Action STD
   Call C_TYP(VALEUR) From UTIGNRLED
   If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 436 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_TYP
Call AM_TYP(zc)
If !mkstat & GOBJET
 zoncou = "TYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYP(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZTYP)")>indice
 [M]TYP(indice) = VALEUR
 Affzo ZTYP(indice)
Endif
Gosub _AFF
End

Subprog S_TYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELGTE
 Call SELGTE(VALEUR,"",[M]LEDTYP,"") From SUBGTE
Endif
Gosub _AFF
End

Subprog B1_TYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNGTE
 Call TUNGTE(VALEUR,"") From SUBGTE
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_TYP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "GTE"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TYP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("GTE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZTYP
Onevent BEFORE_AREA Gosub AV_ZTYP From W1UTIGNRLED
Return

$AV_ZTYP
Call LECTEXTRA(zc,"GTYPACCENT","DESTRA",num$([M]TYP(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_STRDAT
Onevent BEFORE_INPUT Call AS_STRDAT(zc) From W1UTIGNRLED
Onevent CONTROL Call C_STRDAT(zc) From W1UTIGNRLED
Onevent BEFORE_AREA Gosub AV_STRDAT From W1UTIGNRLED
Return

$AV_STRDAT
Chgfmt [M]STRDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog AS_STRDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_STRDAT(VALEUR) From UTIGNRLED
If mkstat=2
 [M]STRDAT(INDIC) = VALEUR
 Affzo STRDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_STRDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STRDAT" : GZNUM = 1805 : Endif
Gosub _AFF
End

$ON_ENDDAT
Onevent CONTROL Call C_ENDDAT(zc) From W1UTIGNRLED
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1UTIGNRLED
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog C_ENDDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ENDDAT" : GZNUM = 1806 : Endif
If !mkstat
 ## Action DATDEBFIN
 Call DATDEBFIN(VALEUR,[M]STRDAT) From EXEFNC
 If mkstat : GERR = 1 : GZONE = "ENDDAT" : GZNUM = 1806 : Endif
Endif
Gosub _AFF
End

$ON_FLGAMT
Onevent CONTROL Call C_FLGAMT(zc) From W1UTIGNRLED
Onevent INIT_AREA Call D_FLGAMT(zc) From W1UTIGNRLED
Onevent BEFORE_INPUT Call AS_FLGAMT(zc) From W1UTIGNRLED
Return

Subprog D_FLGAMT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGAMT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGAMT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_FLGAMT(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_FLGAMT(VALEUR) From UTIGNRLED
If mkstat : GERR = 1 : GZONE = "FLGAMT" : GZNUM = 54076 : Endif
Gosub _AFF
End

$ON_LEDTYPAMT
Onevent BEFORE_INPUT Call AS_LEDTYPAMT(zc) From W1UTIGNRLED
Onevent INIT_AREA Call D_LEDTYPAMT(zc) From W1UTIGNRLED
Onevent CONTROL Call C_LEDTYPAMT(zc) From W1UTIGNRLED
Return

Subprog D_LEDTYPAMT(VALEUR)
Variable Integer VALEUR
If varinit([M]LEDTYPAMT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LEDTYPAMT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2644) From COMBOS
## Action STD
Call AS_LEDTYPAMT(VALEUR) From UTIGNRLED
If mkstat=2
 [M]LEDTYPAMT(INDIC) = VALEUR
 Affzo LEDTYPAMT(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2644,1))))
Endif
If !mkstat
 Discombo 0 From LEDTYPAMT(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LEDTYPAMT(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LEDTYPAMT(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SIM
Onevent INIT_AREA Call D_SIM(zc) From W1UTIGNRLED
Onevent BEFORE_INPUT Call AS_SIM(zc) From W1UTIGNRLED
Return

Subprog D_SIM(VALEUR)
Variable Integer VALEUR
If varinit([M]SIM,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_SIM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


