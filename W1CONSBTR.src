#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CONSBTR 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:55:53"
A_USER  = "ADMIN"
A_STAMP = "20180827235553"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CONSBTR [BTR0]
Gosub HORODAT
Local Inpbox "CONSBTR" From GFONCTION At A_STAMP With A_WINDPREV Mask [BTR0] As [SIM_]
Grizo [BTR0]5
Grizo [BTR0]15
Grizo [BTR0]20
Grizo [BTR0]25
Grizo [BTR0]30
Grizo [BTR0]35
Grizo [BTR0]40
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BTR0]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=71 : Y1(0)=1 : Y2(0)=5
X1(1)=72 : X2(1)=93 : Y1(1)=1 : Y2(1)=5
X1(2)=94 : X2(2)=135 : Y1(2)=1 : Y2(2)=5
X1(3)=136 : X2(3)=169 : Y1(3)=1 : Y2(3)=5
X1(4)=1 : X2(4)=71 : Y1(4)=6 : Y2(4)=11
X1(5)=72 : X2(5)=93 : Y1(5)=6 : Y2(5)=11
X1(6)=94 : X2(6)=135 : Y1(6)=6 : Y2(6)=11
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1CONSBTR
Onevent AFTER_CHANGE Gosub AMM_CPY From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1CONSBTR
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3529,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CPY(zc) From W1CONSBTR
Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1CONSBTR
Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1CONSBTR
Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1CONSBTR
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action ACONTCPY
 Call CONTSOC(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CPY","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPY
Call AM_CPY(zc)
If !mkstat & GOBJET
 zoncou = "CPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CPY(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZCPY)")>indice
 [M]CPY(indice) = VALEUR
 Affzo ZCPY(indice)
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPY(VALEUR)
Variable Char    VALEUR()
Call OBJET("CPY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1CONSBTR
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1CONSBTR
Onevent AFTER_CHANGE Gosub AMM_FCY From W1CONSBTR
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1CONSBTR
Return

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1CONSBTR
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1CONSBTR
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1CONSBTR
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1CONSBTR
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!C",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !GWEBSERV
  If !mkstat
   ## Action CONTFCYCPY
   Call CONTFCYCPY(VALEUR,[M]CPY) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFCY
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFCY"
 PARMSK(1) = "[M]CPY='' | [F]LEGCPY=[M]CPY"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELFCY","SUBFCY","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1CONSBTR
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_GRPBAN
Onevent CONTROL Call C_GRPBAN(zc) From W1CONSBTR
Onevent AFTER_CHANGE Gosub AMM_GRPBAN From W1CONSBTR
Onevent BEFORE_INPUT Call AS_GRPBAN(zc) From W1CONSBTR
Return

Subprog AS_GRPBAN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(51761,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_GRPBAN(zc) From W1CONSBTR
Onkey   2 Titled GBOUTS Call S_GRPBAN(zc) From W1CONSBTR
Onkey 144 Titled GBOUTP Call P_GRPBAN(zc) From W1CONSBTR
Onkey 146 Titled GBOUTA Call SA_GRPBAN(zc) From W1CONSBTR
Gosub _AFF
End

Subprog C_GRPBAN(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("BGR","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "GRPBAN" : GZNUM = 51761 : Endif
If !mkstat
 ## Action STD
 Call C_GRPBAN(VALEUR) From CNSBTRSTD
 If mkstat : GERR = 1 : GZONE = "GRPBAN" : GZNUM = 51761 : Endif
Endif
Gosub _AFF
End

$AMM_GRPBAN
Call AM_GRPBAN(zc)
If !mkstat & GOBJET
 zoncou = "GRPBAN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GRPBAN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_GRPBAN(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "GRPBAN" : GZNUM = 51761 : Endif
Gosub _AFF
End

Subprog S_GRPBAN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJ1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJ1"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AS_GRPBAN" : PROGSUB = "CNSBTRSTD" : PROGSPE = "CNSBTRSPE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "BGR"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 ACTION = "BS_GRPBAN" : PROGSUB = "CNSBTRSTD" : PROGSPE = "CNSBTRSPE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_GRPBAN(VALEUR)
Variable Char    VALEUR()
Call OBJET("BGR",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_GRPBAN(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BGR"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_GRPBAN(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BGR",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_BANK
Onevent BEFORE_AREA Gosub AV_BANK From W1CONSBTR
Onevent CONTROL Call C_BANK(zc) From W1CONSBTR
Onevent AFTER_CHANGE Gosub AMM_BANK From W1CONSBTR
Onevent BEFORE_INPUT Call AS_BANK(zc) From W1CONSBTR
Return

$AV_BANK
## Action STD
Call AV_BANK(zc) From CNSBTRSTD
Gosub _AFF
Return

Subprog AS_BANK(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(7396,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BANK(zc) From W1CONSBTR
Onkey   2 Titled GBOUTS Call S_BANK(zc) From W1CONSBTR
Onkey 144 Titled GBOUTP Call P_BANK(zc) From W1CONSBTR
Onkey 146 Titled GBOUTA Call SA_BANK(zc) From W1CONSBTR
Gosub _AFF
End

Subprog C_BANK(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("BAN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "BANK" : GZNUM = 7475 : Endif
If !mkstat
 ## Action STD
 Call C_BANK(VALEUR) From CNSBTRSTD
 If mkstat : GERR = 1 : GZONE = "BANK" : GZNUM = 7475 : Endif
Endif
Gosub _AFF
End

$AMM_BANK
Call AM_BANK(zc)
If !mkstat & GOBJET
 zoncou = "BANK" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BANK(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_BANK(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "BANK" : GZNUM = 7475 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZBANK)")>indice
 [M]BANK(indice) = VALEUR
 Affzo ZBANK(indice)
Endif
Gosub _AFF
End

Subprog S_BANK(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "BANK"
 PARMSK(2) = "CNSBTRSTD"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_BANK(VALEUR)
Variable Char    VALEUR()
Call OBJET("BAN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BANK(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BAN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BANK(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BAN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBANK
Onevent BEFORE_AREA Gosub AV_ZBANK From W1CONSBTR
Return

$AV_ZBANK
If clalev([F:BAN])=0 : Local File BANK [BAN] : Endif
Call LECTURE("BAN",num$([M]BANK(indice)),"") From CONTOBJ
zc = [F:BAN]DES
Gosub _AFF
Return

$ON_LEVELA
Onevent AFTER_CHANGE Gosub AMM_LEVELA From W1CONSBTR
Onevent INIT_AREA Call D_LEVELA(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_LEVELA(zc) From W1CONSBTR
Return

Subprog D_LEVELA(VALEUR)
Variable Integer VALEUR
If varinit([M]LEVELA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LEVELA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_LEVELA
Call AM_LEVELA(zc)
If !mkstat & GOBJET
 zoncou = "LEVELA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LEVELA(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LEVELA(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "LEVELA" : GZNUM = 51766 : Endif
Gosub _AFF
End

$ON_LEVELD
Onevent AFTER_CHANGE Gosub AMM_LEVELD From W1CONSBTR
Onevent INIT_AREA Call D_LEVELD(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_LEVELD(zc) From W1CONSBTR
Return

Subprog D_LEVELD(VALEUR)
Variable Integer VALEUR
If varinit([M]LEVELD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LEVELD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_LEVELD
Call AM_LEVELD(zc)
If !mkstat & GOBJET
 zoncou = "LEVELD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LEVELD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LEVELD(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "LEVELD" : GZNUM = 6232 : Endif
Gosub _AFF
End

$ON_INIDAT
Onevent CONTROL Call C_INIDAT(zc) From W1CONSBTR
Onevent AFTER_CHANGE Gosub AMM_INIDAT From W1CONSBTR
Onevent BEFORE_AREA Gosub AV_INIDAT From W1CONSBTR
Return

$AV_INIDAT
Chgfmt [M]INIDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog C_INIDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "INIDAT" : GZNUM = 1805 : Endif
If !mkstat
 ## Action STD
 Call C_INIDAT(VALEUR) From CNSBTRSTD
 If mkstat : GERR = 1 : GZONE = "INIDAT" : GZNUM = 1805 : Endif
Endif
Gosub _AFF
End

$AMM_INIDAT
Call AM_INIDAT(zc)
If !mkstat & GOBJET
 zoncou = "INIDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INIDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_INIDAT(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "INIDAT" : GZNUM = 1805 : Endif
Gosub _AFF
End

$ON_ENDDAT
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1CONSBTR
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_PERCOD
Onevent AFTER_CHANGE Gosub AMM_PERCOD From W1CONSBTR
Onevent INIT_AREA Call D_PERCOD(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_PERCOD(zc) From W1CONSBTR
Return

Subprog D_PERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_PERCOD
Call AM_PERCOD(zc)
If !mkstat & GOBJET
 zoncou = "PERCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PERCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_PERCOD(VALEUR) From CNSBTRSTD
If mkstat : GERR = 1 : GZONE = "PERCOD" : GZNUM = 33921 : Endif
Gosub _AFF
End

$ON_CUR
Onevent CONTROL Call C_CUR(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CUR(zc) From W1CONSBTR
Onevent AFTER_CHANGE Gosub AMM_CUR From W1CONSBTR
Return

Subprog AS_CUR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3837,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CUR(zc) From W1CONSBTR
Onkey   2 Titled GBOUTS Call S_CUR(zc) From W1CONSBTR
Onkey 144 Titled GBOUTP Call P_CUR(zc) From W1CONSBTR
Onkey 146 Titled GBOUTA Call SA_CUR(zc) From W1CONSBTR
Gosub _AFF
End

Subprog C_CUR(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TCU","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 323 : Endif
Gosub _AFF
End

$AMM_CUR
Call AM_CUR(zc)
If !mkstat & GOBJET
 zoncou = "CUR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CUR(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCUR)")>indice
 [M]CUR(indice) = VALEUR
 Affzo ZCUR(indice)
Endif
Gosub _AFF
End

Subprog S_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TCU"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CUR(VALEUR)
Variable Char    VALEUR()
Call OBJET("TCU",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TCU"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TCU",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCUR
Onevent BEFORE_AREA Gosub AV_ZCUR From W1CONSBTR
Return

$AV_ZCUR
Call LECTEXTRA(zc,"TABCUR","INTDES",num$([M]CUR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_TYPRAT
Onevent INIT_AREA Call D_TYPRAT(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_TYPRAT(zc) From W1CONSBTR
Return

Subprog D_TYPRAT(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPRAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPRAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CURCPY
Return

$ON_TYPGAC
Onevent INIT_AREA Call D_TYPGAC(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_TYPGAC(zc) From W1CONSBTR
Return

Subprog D_TYPGAC(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPGAC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TYPGAC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPDUD
Onevent INIT_AREA Call D_TYPDUD(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_TYPDUD(zc) From W1CONSBTR
Return

Subprog D_TYPDUD(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPDUD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TYPDUD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOLEA
Onevent INIT_AREA Call D_CFOLEA(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOLEA(zc) From W1CONSBTR
Return

Subprog D_CFOLEA(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOLEA,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOLEA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOME
Onevent INIT_AREA Call D_CFOME(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOME(zc) From W1CONSBTR
Return

Subprog D_CFOME(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOME,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOME(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOPQ
Onevent INIT_AREA Call D_CFOPQ(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOPQ(zc) From W1CONSBTR
Return

Subprog D_CFOPQ(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOPQ,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOPQ(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOPO
Onevent INIT_AREA Call D_CFOPO(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOPO(zc) From W1CONSBTR
Return

Subprog D_CFOPO(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOPO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOPO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOPC
Onevent INIT_AREA Call D_CFOPC(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOPC(zc) From W1CONSBTR
Return

Subprog D_CFOPC(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOPC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOPC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFORN
Onevent INIT_AREA Call D_CFORN(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFORN(zc) From W1CONSBTR
Return

Subprog D_CFORN(VALEUR)
Variable Integer VALEUR
If varinit([M]CFORN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFORN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOSQ
Onevent INIT_AREA Call D_CFOSQ(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOSQ(zc) From W1CONSBTR
Return

Subprog D_CFOSQ(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOSQ,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOSQ(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOSO
Onevent INIT_AREA Call D_CFOSO(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOSO(zc) From W1CONSBTR
Return

Subprog D_CFOSO(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOSO,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOSO(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOSC
Onevent INIT_AREA Call D_CFOSC(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOSC(zc) From W1CONSBTR
Return

Subprog D_CFOSC(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOSC,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOSC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFODN
Onevent INIT_AREA Call D_CFODN(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFODN(zc) From W1CONSBTR
Return

Subprog D_CFODN(VALEUR)
Variable Integer VALEUR
If varinit([M]CFODN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFODN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFOCM
Onevent INIT_AREA Call D_CFOCM(zc) From W1CONSBTR
Onevent BEFORE_INPUT Call AS_CFOCM(zc) From W1CONSBTR
Return

Subprog D_CFOCM(VALEUR)
Variable Integer VALEUR
If varinit([M]CFOCM,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CFOCM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


