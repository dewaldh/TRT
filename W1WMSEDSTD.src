#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WMSEDSTD 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:24:51"
A_USER  = "ADMIN"
A_STAMP = "20180828002451"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WMSEDSTD [SED2]
Gosub HORODAT
Local Inpbox "WMSEDSTD" From GFONCTION At A_STAMP With A_WINDPREV Mask [SED2] As [SIM_]
Grizo [SED2]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SED2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=25
Return

$ON_NBLIG
Onevent BEFORE_INPUT Call AS_NBLIG From W1WMSEDSTD
Return

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12972,GBOUT1) From OBJDIV
Call TEXTE(11651,GBOUT2) From OBJDIV
Call TEXTE(13005,GBOUT3) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WMSEDSTD
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WMSEDSTD
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WMSEDSTD
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action VISUITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUITF"
 PARMSK(1) = [M:SED1]FCY
 PARMSK(2) = [M]ITMREF(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"IVISUITF","VISUITF","XWIVISUITF") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action VISUUOM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUUOM"
 PARMSK(1) = [M:SED1]FCY
 PARMSK(2) = [M]ITMREF(nolign-1)
 PARMSK(3) = ""
 PARMSK(4) = ""
 Call SAISIE_NUM(BASPAG,PARMSK,"IVISUUOM","VISUUOM","XWIVISUUOM") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action VISUSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUSTA"
 PARMSK(1) = [M:SED1]FCY
 PARMSK(2) = [M]ITMREF(nolign-1)
 PARMSK(3) = ""
 PARMSK(4) = ""
 Call SAISIE_NUM(BASPAG,PARMSK,"IVISUSTA","VISUSTA","XWIVISUSTA") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WRH
Onevent CONTROL Call C_WRH(zc) From W1WMSEDSTD
Onevent BEFORE_INPUT Call AS_WRH(zc) From W1WMSEDSTD
Return

Subprog AS_WRH(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WRH(zc) From W1WMSEDSTD
Onkey 144 Titled GBOUTP Call P_WRH(zc) From W1WMSEDSTD
Onkey 146 Titled GBOUTA Call SA_WRH(zc) From W1WMSEDSTD
Gosub _AFF
End

Subprog C_WRH(VALEUR)
Variable Char    VALEUR()
## Action WRHCTL
Call WRHCTL(VALEUR,"","") From STKWRH
If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("WRH","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "WRH" : GZNUM = 281 : Endif
Endif
Gosub _AFF
End

Subprog S_WRH(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action WRHSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "WRHSEL"
 PARMSK(1) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"WRHSEL","STKWRH","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_WRH(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "WRH"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WRH(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("WRH",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_LOCTYP
Return

$ON_LOC
Return

$ON_ITMREF
Return

$ON_STU
Return

$ON_LOCCAT
Onevent INIT_AREA Call D_LOCCAT(zc) From W1WMSEDSTD
Return

Subprog D_LOCCAT(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MONITMFLG
Onevent INIT_AREA Call D_MONITMFLG(zc) From W1WMSEDSTD
Return

Subprog D_MONITMFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MONITMFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REAFLG
Onevent INIT_AREA Call D_REAFLG(zc) From W1WMSEDSTD
Return

Subprog D_REAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]REAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REOTSD
Onevent BEFORE_AREA Gosub AV_REOTSD From W1WMSEDSTD
Return

$AV_REOTSD
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]REOTSD(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_MAXSTO
Onevent BEFORE_AREA Gosub AV_MAXSTO From W1WMSEDSTD
Return

$AV_MAXSTO
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]MAXSTO(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_FILMGTFLG
Onevent INIT_AREA Call D_FILMGTFLG(zc) From W1WMSEDSTD
Return

Subprog D_FILMGTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]FILMGTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOKSTA
Onevent INIT_AREA Call D_LOKSTA(zc) From W1WMSEDSTD
Return

Subprog D_LOKSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]LOKSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CUNLOKFLG
Onevent INIT_AREA Call D_CUNLOKFLG(zc) From W1WMSEDSTD
Return

Subprog D_CUNLOKFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CUNLOKFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEDFLG
Onevent INIT_AREA Call D_DEDFLG(zc) From W1WMSEDSTD
Return

Subprog D_DEDFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DEDFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


