#<AdxTL>@(#)0.0.0.0 $Revision$Class Customers
# Supervisor
## ACLA-CLASSE ## BPCUSTOMER_C_INVDTAAMT
# 2018-08-27 12:25:44 852


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : INVDTA Invoicing element ( Field SFI 0)
####################################################################

$SET_INVDTA
If [L]_AOLDVAL<>this.INVDTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTA
 Gosub PROPAGATE_INVDTA
Endif
Return

$INIT_INVDTA
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTA
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTA
[L]CURPRO = "INVDTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTA
[L]CURPRO = "INVDTA"
Return

$_AOTHERS_INVDTA
[L]CURPRO = "INVDTA"
If this.INVDTA<>0
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPSFI.ACTRLREF(this,"INVDTA",this.INVDTA,this.INVDTA,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.INVDTA<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTA
[L]CURPRO = "INVDTA"
Return

$PROPAGATE_INVDTA
this.isReadonly = 0
[L]CURPRO = "INVDTA"
Gosub _LNKPRO_INVDTA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTA
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTA"
$_LNKPRO_INVDTA
If this.INVDTA<>0
 # Link SFOOTINV
 Local File SFOOTINV [WSFI]
 Read [F:WSFI]SFI0 = this.INVDTA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="SFOOTINV" & ZONE="SHOAXX" & IDENT1=num$([F:WSFI]SFINUM) & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="SFOOTINV" & ZONE="DESAXX" & IDENT1=num$([F:WSFI]SFINUM) & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WSFI]
Endif
Return


####################################################################
# 2 : INVDTADES Description ( Field AX1)
####################################################################

$GET_INVDTADES
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTADES"
this.INVDTADES = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INVDTADES
If [L]_AOLDVAL<>this.INVDTADES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTADES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTADES
 Gosub PROPAGATE_INVDTADES
Endif
Return

$INIT_INVDTADES
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTADES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTADES
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTADES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTADES             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTADES             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTADES
[L]CURPRO = "INVDTADES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INVDTADES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTADES
[L]CURPRO = "INVDTADES"
If vireblc(fmet this.AGETTEXTRA("INVDTADES"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("INVDTADES")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INVDTADES
[L]CURPRO = "INVDTADES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTADES
[L]CURPRO = "INVDTADES"
Return

$PROPAGATE_INVDTADES
this.isReadonly = 0
[L]CURPRO = "INVDTADES"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.INVDTADES)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTADES
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTADES"
$_LNKPRO_INVDTADES
Return


####################################################################
# 3 : INVDTAAMT % or amt inv el ( Field DCB 11)
####################################################################

$SET_INVDTAAMT
If [L]_AOLDVAL<>this.INVDTAAMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTAAMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTAAMT
 Gosub PROPAGATE_INVDTAAMT
Endif
Return

$INIT_INVDTAAMT
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTAAMT
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTAAMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTAAMT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDTAAMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
Return

$_AOTHERS_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
Return

$PROPAGATE_INVDTAAMT
this.isReadonly = 0
[L]CURPRO = "INVDTAAMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTAAMT
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTAAMT"
$_LNKPRO_INVDTAAMT
Return


####################################################################
# 4 : INVDTATYP Type ( Field Local menu number 2227)
####################################################################

$SET_INVDTATYP
If [L]_AOLDVAL<>this.INVDTATYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTATYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTATYP
 Gosub PROPAGATE_INVDTATYP
Endif
Return

$INIT_INVDTATYP
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTATYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVDTATYP=0 and fmet this.AGETATTRIBUTE("INVDTATYP","$isMandatory")="true"
 this.INVDTATYP = 1
Endif
Return
 
$CONTROL_INVDTATYP
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTATYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTATYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTATYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTATYP
[L]CURPRO = "INVDTATYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDTATYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTATYP
[L]CURPRO = "INVDTATYP"
If this.INVDTATYP<0 or this.INVDTATYP>len(mess(0,2227,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2227 ->"-num$(this.INVDTATYP)-mess(99,123,1)):  Return : # Local menu "2227 -> Invalid option
Endif
Return

$_AOTHERS_INVDTATYP
[L]CURPRO = "INVDTATYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTATYP
[L]CURPRO = "INVDTATYP"
Return

$PROPAGATE_INVDTATYP
this.isReadonly = 0
[L]CURPRO = "INVDTATYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTATYP
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTATYP"
$_LNKPRO_INVDTATYP
Return


####################################################################
# 5 : INVDTAAMTCOD Amount code ( Field Local menu number 269)
####################################################################

$SET_INVDTAAMTCOD
If [L]_AOLDVAL<>this.INVDTAAMTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTAAMTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTAAMTCOD
 Gosub PROPAGATE_INVDTAAMTCOD
Endif
Return

$INIT_INVDTAAMTCOD
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTAAMTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVDTAAMTCOD=0 and fmet this.AGETATTRIBUTE("INVDTAAMTCOD","$isMandatory")="true"
 this.INVDTAAMTCOD = 1
Endif
Return
 
$CONTROL_INVDTAAMTCOD
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTAAMTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTAAMTCOD          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTAAMTCOD          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTAAMTCOD
[L]CURPRO = "INVDTAAMTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDTAAMTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTAAMTCOD
[L]CURPRO = "INVDTAAMTCOD"
If this.INVDTAAMTCOD<0 or this.INVDTAAMTCOD>len(mess(0,269,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"269 ->"-num$(this.INVDTAAMTCOD)-mess(99,123,1)):  Return : # Local menu "269 -> Invalid option
Endif
Return

$_AOTHERS_INVDTAAMTCOD
[L]CURPRO = "INVDTAAMTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTAAMTCOD
[L]CURPRO = "INVDTAAMTCOD"
Return

$PROPAGATE_INVDTAAMTCOD
this.isReadonly = 0
[L]CURPRO = "INVDTAAMTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTAAMTCOD
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTAAMTCOD"
$_LNKPRO_INVDTAAMTCOD
Return


####################################################################
# 6 : INVDTACUR Currency ( Field CUR 3)
####################################################################

$SET_INVDTACUR
If [L]_AOLDVAL<>this.INVDTACUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTACUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTACUR
 Gosub PROPAGATE_INVDTACUR
Endif
Return

$INIT_INVDTACUR
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTACUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTACUR
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTACUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTACUR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTACUR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTACUR
[L]CURPRO = "INVDTACUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INVDTACUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTACUR
[L]CURPRO = "INVDTACUR"
If vireblc(this.INVDTACUR,2)<>vireblc(format$("K:3c",this.INVDTACUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INVDTACUR
[L]CURPRO = "INVDTACUR"
If vireblc(this.INVDTACUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"INVDTACUR",this.INVDTACUR,this.INVDTACUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.INVDTACUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTACUR
[L]CURPRO = "INVDTACUR"
Return

$PROPAGATE_INVDTACUR
this.isReadonly = 0
[L]CURPRO = "INVDTACUR"
Gosub _LNKPRO_INVDTACUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTACUR
Gosub DECLARE_VAR From WMC0BPCUSTOMER_C_INVDTAAMT
[L]CURPRO = "INVDTACUR"
$_LNKPRO_INVDTACUR
If vireblc(this.INVDTACUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.INVDTACUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTACUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTACUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTACUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTACUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTACUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return




