#<AdxTL>@(#)0.0.0.0 $Revision$Class Bin assignment
# Supervisor
## CRUD-CLASSE ## STOLOCAFF
# 2018-08-27 12:50:11 809


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File STOLOCAFF [STF_]

If !SILENCE : Call TRACE("2 --> Local Instance C_STOLOCAFF") From ASYRCOM : Endif
Local Instance STOLOCAFF Using C_STOLOCAFF

If !SILENCE : Call TRACE("3 --> New Instance C_STOLOCAFF") From ASYRCOM : Endif
STOLOCAFF = NewInstance C_STOLOCAFF AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [STF_]STF0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of STOLOCAFF") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF.AREAD([STF_]STOFCY,[STF_]LOC,[STF_]ITMREF))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("STOLOCAFF.STOFCY ="-num$(STOLOCAFF.STOFCY)) From ASYRCOM
 Call TRACE("STOLOCAFF.LOC ="-num$(STOLOCAFF.LOC)) From ASYRCOM
 Call TRACE("STOLOCAFF.ITMREF ="-num$(STOLOCAFF.ITMREF)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(STOLOCAFF.AKEYS)
  Call TRACE("-"-num$(I)-":"-STOLOCAFF.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [STF_]
FreeGroup STOLOCAFF
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(STOLOCAFF,ACLE,ASTATUS,_ETAG)
Variable Instance STOLOCAFF Using C_STOLOCAFF
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _STOFCY(5)
Local Char _LOC(10)
Local Char _ITMREF(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LOC = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ITMREF = num$([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File STOLOCAFF [STF]
Default File [F:STF]
Read [F:STF]STF0 = [L]_STOFCY;[L]_LOC;[L]_ITMREF
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:STF]UPDTICK)>0
 [L]_ETAG = num$([F:STF]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(STOLOCAFF,ACLE,ASTATUS)
Variable Instance STOLOCAFF Using C_STOLOCAFF
Value Char ACLE
Variable Integer ASTATUS
Local Char _STOFCY(5)
Local Char _LOC(10)
Local Char _ITMREF(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_STOFCY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LOC = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ITMREF = num$([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF.AREAD([L]_STOFCY,[L]_LOC,[L]_ITMREF))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(STOLOCAFF,_STOFCY,_LOC,_ITMREF,ASTATUS)
Variable Instance STOLOCAFF Using C_STOLOCAFF
Value Char _STOFCY
Value Char _LOC
Value Char _ITMREF
Variable Integer ASTATUS

If STOLOCAFF = null : End : Endif

Gosub AVARIABLES From WMC00STOLOCAFF
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If STOLOCAFF.APARENT=null
 [L]A_I = STOLOCAFF.freeSnapshot
 STOLOCAFF.snapshotEnabled = 0
 STOLOCAFF.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & STOLOCAFF.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If STOLOCAFF.APARENT=null
 STOLOCAFF.snapshotEnabled = 1
 STOLOCAFF.setAccessorEnabled = 1
Endif
LogicClose File [STF] ,[ITM]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF._ACTION_PARAM("AREAD_BEFORE",[L]_STOFCY,[L]_LOC,[L]_ITMREF))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:STF]
Read [F:STF]STF0 = [L]_STOFCY;[L]_LOC;[L]_ITMREF
If fstat
[L]A_ERROR = [L]_STOFCY+"~"+[L]_LOC+"~"+[L]_ITMREF
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(STOLOCAFF,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:STF]AUUID)>0 & [F:STF]AUUID=NullUuid
 [F:STF]AUUID = getUuid
Endif
SetInstance STOLOCAFF With [F:STF]
STOLOCAFF.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:ITM]
 [L]A_N2=1
 Read [F:ITM]ITM0 = [F:STF]ITMREF
 If !fstat
  Callmet STOLOCAFF.ITM(A_N2).AREAD([F:ITM]ITMREF)
  STOLOCAFF.ITM(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF.ITM(A_N2).ASETATTRIBUTE("ITMREF","$isDisabled","true"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF.ITM(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"ITM")+" : "+num$([F:STF]ITMREF)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"ITMMASTER"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet STOLOCAFF.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



