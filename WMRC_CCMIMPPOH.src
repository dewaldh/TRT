#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Purchases
# Supervisor
## CRUD-CLASSE ## CCMIMPPOH
# 2018-08-27 13:11:45 164


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(CCMIMPPOH,ASTATUS)
Variable Instance CCMIMPPOH Using R_CCMIMPPOH
Variable Integer ASTATUS

If CCMIMPPOH = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPPOH
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet CCMIMPPOH.ACTX.AGETAFCRIGHT(CCMIMPPOH,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet CCMIMPPOH.ACTX.AGETAFCRIGHTC(CCMIMPPOH,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_CCMIMPPOH
Else
 Gosub AINSERT_CCMIMPPOH
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = CCMIMPPOH.freeSnapshot
CCMIMPPOH.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
CCMIMPPOH.ASTALIN = [V]CST_ANEW
CCMIMPPOH.CCMIPOH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPPOH._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPPOH._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPPOH._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If CCMIMPPOH.CCMIPOH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPPOH.CCMIPOH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.CCMIPOH.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.CCMIPOH.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_CCMIMPPOH
Trbegin [F:CCMIPOH]
 Gosub AINSERT_CCMIMPPOH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(CCMIMPPOH.CCMIPOH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMIMPPOH.CCMIPOH.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_CCMIMPPOH
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.CCMIPOH._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPPOH.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If CCMIMPPOH.snapshotEnabled=1
 [L]A_RETIK = CCMIMPPOH.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMIMPPOH.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



