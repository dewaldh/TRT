#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Supervisor
## CRUD-CLASSE ## AUTILIS
# 2018-08-27 13:03:46 241


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(AUTILIS,ASTATUS)
Variable Instance AUTILIS Using R_AUTILIS
Variable Integer ASTATUS

If AUTILIS = null : End : Endif

Gosub AVARIABLES From WMR00AUTILIS
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet AUTILIS.ACTX.AGETAFCRIGHT(AUTILIS,"GESAUS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet AUTILIS.ACTX.AGETAFCRIGHTD(AUTILIS,"GESAUS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif
If fmet AUTILIS.ACTX.AGETACSRIGHTM(AUTILIS,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto ADELETE_END
  Endif
  
  Gosub AREPCONTROL_ADELETE
  If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif
  
If !adxlog
 Gosub ADELETE_TR_AUTILIS
Else
 Gosub ADELETE_AUTILIS
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
AUTILIS.ASTALIN = [V]CST_ADEL
AUTILIS.AUS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(AUTILIS.AUS,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If AUTILIS.AUS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AUTILIS.AUS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.AUS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AUTILIS.AUS.FNCCOL)
 If AUTILIS.AUS.FNCCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.AUS.FNCCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If AUTILIS.AUS.BPA(A_N2) <> null
& and AUTILIS.AUS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AUTILIS.AUS.BID) : # BID -- 3
 If AUTILIS.AUS.BID(A_N2) <> null
& and AUTILIS.AUS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
A_N2=1
If AUTILIS.AUS.BPA(A_N2) <> null
& and AUTILIS.AUS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AUTILIS.AUS.BID) : # BID -- 3
 If AUTILIS.AUS.BID(A_N2) <> null
& and AUTILIS.AUS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(AUTILIS.AUS.FNCCOL)
 If AUTILIS.AUS.FNCCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.AUS.FNCCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.AUS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_AUTILIS
Trbegin [F:AUS]
 Gosub ADELETE_AUTILIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_AUTILIS
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.AUS._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If AUTILIS.snapshotEnabled=1
 [L]A_RETIK = AUTILIS.revertUpdTick
Endif
[L]ASTATUS = max(fmet AUTILIS.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



