#<AdxTL>@(#)0.0.0.0 $Revision$Class Land purchases
# Supervisor
## CRUD-CLASSE ## YLNDPUR
# 2018-11-14 00:35:23 379


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(YLNDPUR,ASTATUS)
Variable Instance YLNDPUR Using R_YLNDPUR
Variable Integer ASTATUS

If YLNDPUR = null : End : Endif

Gosub AVARIABLES From WMR00YLNDPUR
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet YLNDPUR.ACTX.AGETAFCRIGHT(YLNDPUR,"GESYLDP",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet YLNDPUR.ACTX.AGETAFCRIGHTD(YLNDPUR,"GESYLDP",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_YLNDPUR
Else
 Gosub ADELETE_YLNDPUR
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
YLNDPUR.ASTALIN = [V]CST_ADEL
YLNDPUR.YLDP.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(YLNDPUR.YLDP,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If YLNDPUR.YLDP.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YLNDPUR.YLDP.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLNDPUR.YLDP.YLDS) : # YLDS -- 2
 If YLNDPUR.YLDP.YLDS(A_N2) <> null
& and YLNDPUR.YLDP.YLDS(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If YLNDPUR.YLDP.YLDS(A_N2).ASTALIN<>[V]CST_ANEW
   YLNDPUR.YLDP.YLDS(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.YLDS(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLNDPUR.YLDP.YLDM) : # YLDM -- 3
 If YLNDPUR.YLDP.YLDM(A_N2) <> null
& and YLNDPUR.YLDP.YLDM(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If YLNDPUR.YLDP.YLDM(A_N2).ASTALIN<>[V]CST_ANEW
   YLNDPUR.YLDP.YLDM(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.YLDM(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLNDPUR.YLDP.YRMA) : # YRMA -- 4
 If YLNDPUR.YLDP.YRMA(A_N2) <> null
& and YLNDPUR.YLDP.YRMA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If YLNDPUR.YLDP.YRMA(A_N2).ASTALIN<>[V]CST_ANEW
   YLNDPUR.YLDP.YRMA(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.YRMA(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(YLNDPUR.YLDP.YLDS) : # YLDS -- 2
 If YLNDPUR.YLDP.YLDS(A_N2) <> null
& and YLNDPUR.YLDP.YLDS(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.YLDS(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLNDPUR.YLDP.YLDM) : # YLDM -- 3
 If YLNDPUR.YLDP.YLDM(A_N2) <> null
& and YLNDPUR.YLDP.YLDM(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.YLDM(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLNDPUR.YLDP.YRMA) : # YRMA -- 4
 If YLNDPUR.YLDP.YRMA(A_N2) <> null
& and YLNDPUR.YLDP.YRMA(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.YRMA(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_YLNDPUR
Trbegin [F:YLDP]
 Gosub ADELETE_YLNDPUR
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_YLNDPUR
[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.YLDP._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If YLNDPUR.snapshotEnabled=1
 [L]A_RETIK = YLNDPUR.revertUpdTick
Endif
[L]ASTATUS = max(fmet YLNDPUR.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



