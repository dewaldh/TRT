#<AdxTL>@(#)0.0.0.0 $Revision$Class POs quantities
# Supervisor
## CRUD-CLASSE ## PORDERQ
# 2018-08-27 12:41:41 325


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PORDERQ [POQ_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PORDERQ") From ASYRCOM : Endif
Local Instance PORDERQ Using C_PORDERQ

If !SILENCE : Call TRACE("3 --> New Instance C_PORDERQ") From ASYRCOM : Endif
PORDERQ = NewInstance C_PORDERQ AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [POQ_]POQ0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PORDERQ") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PORDERQ.AREAD([POQ_]POHNUM,[POQ_]POPLIN,[POQ_]POQSEQ))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PORDERQ.POHNUM ="-num$(PORDERQ.POHNUM)) From ASYRCOM
 Call TRACE("PORDERQ.POPLIN ="-num$(PORDERQ.POPLIN)) From ASYRCOM
 Call TRACE("PORDERQ.POQSEQ ="-num$(PORDERQ.POQSEQ)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PORDERQ.AKEYS)
  Call TRACE("-"-num$(I)-":"-PORDERQ.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [POQ_]
FreeGroup PORDERQ
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PORDERQ,ACLE,ASTATUS,_ETAG)
Variable Instance PORDERQ Using C_PORDERQ
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _POHNUM(20)
Local Integer _POPLIN
Local Integer _POQSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_POHNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_POPLIN = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_POQSEQ = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File PORDERQ [POQ]
Default File [F:POQ]
Read [F:POQ]POQ0 = [L]_POHNUM;[L]_POPLIN;[L]_POQSEQ
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:POQ]UPDTICK)>0
 [L]_ETAG = num$([F:POQ]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PORDERQ,ACLE,ASTATUS)
Variable Instance PORDERQ Using C_PORDERQ
Value Char ACLE
Variable Integer ASTATUS
Local Char _POHNUM(20)
Local Integer _POPLIN
Local Integer _POQSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_POHNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_POPLIN = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_POQSEQ = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PORDERQ.AREAD([L]_POHNUM,[L]_POPLIN,[L]_POQSEQ))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PORDERQ,_POHNUM,_POPLIN,_POQSEQ,ASTATUS)
Variable Instance PORDERQ Using C_PORDERQ
Value Char _POHNUM
Value Integer _POPLIN
Value Integer _POQSEQ
Variable Integer ASTATUS

If PORDERQ = null : End : Endif

Gosub AVARIABLES From WMC00PORDERQ
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PORDERQ.APARENT=null
 [L]A_I = PORDERQ.freeSnapshot
 PORDERQ.snapshotEnabled = 0
 PORDERQ.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PORDERQ.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PORDERQ._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PORDERQ.APARENT=null
 PORDERQ.snapshotEnabled = 1
 PORDERQ.setAccessorEnabled = 1
Endif
LogicClose File [POQ]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PORDERQ._ACTION_PARAM("AREAD_BEFORE",[L]_POHNUM,[L]_POPLIN,[L]_POQSEQ))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:POQ]
Read [F:POQ]POQ0 = [L]_POHNUM;[L]_POPLIN;[L]_POQSEQ
If fstat
[L]A_ERROR = [L]_POHNUM+"~"+num$([L]_POPLIN)+"~"+num$([L]_POQSEQ)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PORDERQ,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:POQ]AUUID)>0 & [F:POQ]AUUID=NullUuid
 [F:POQ]AUUID = getUuid
Endif
If dim([F:POQ]TEXTE)>0: Raz [F:POQ]TEXTE: Endif
SetInstance PORDERQ With [F:POQ]
PORDERQ.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PORDERQ.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



