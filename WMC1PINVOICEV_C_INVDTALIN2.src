#<AdxTL>@(#)0.0.0.0 $Revision$Class Costing purchase invoices
# Supervisor
## ACLA-CLASSE ## PINVOICEV_C_INVDTALIN2
# 2018-08-27 12:39:31 610


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : INVDTALIN2 Invoice line allocation elemen ( Field PFI 0)
####################################################################

$SET_INVDTALIN2
If [L]_AOLDVAL<>this.INVDTALIN2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTALIN2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTALIN2
 Gosub PROPAGATE_INVDTALIN2
Endif
Return

$INIT_INVDTALIN2
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTALIN2
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTALIN2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTALIN2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDTALIN2=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
Return

$_AOTHERS_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
If this.INVDTALIN2<>0
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPPFI.ACTRLREF(this,"INVDTALIN2",this.INVDTALIN2,this.INVDTALIN2,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.INVDTALIN2<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
Return

$PROPAGATE_INVDTALIN2
this.isReadonly = 0
[L]CURPRO = "INVDTALIN2"
Gosub _LNKPRO_INVDTALIN2
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTALIN2
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "INVDTALIN2"
$_LNKPRO_INVDTALIN2
If this.INVDTALIN2<>0
 # Link PFOOTINV
 Local File PFOOTINV [WPFI]
 Read [F:WPFI]PFI0 = this.INVDTALIN2
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="PFOOTINV" & ZONE="SHOAXX" & IDENT1=num$([F:WPFI]PFINUM) & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTALIN2","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="PFOOTINV" & ZONE="DESAXX" & IDENT1=num$([F:WPFI]PFINUM) & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTALIN2","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WPFI]
Endif
Return


####################################################################
# 2 : INVDTAVAT2 Distribution line tax ( Field VAT 5)
####################################################################

$SET_INVDTAVAT2
If [L]_AOLDVAL<>this.INVDTAVAT2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDTAVAT2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDTAVAT2
 Gosub PROPAGATE_INVDTAVAT2
Endif
Return

$INIT_INVDTAVAT2
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "INVDTAVAT2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDTAVAT2
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "INVDTAVAT2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDTAVAT2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDTAVAT2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDTAVAT2
[L]CURPRO = "INVDTAVAT2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INVDTAVAT2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDTAVAT2
[L]CURPRO = "INVDTAVAT2"
If vireblc(this.INVDTAVAT2,2)<>vireblc(format$("K:5c",this.INVDTAVAT2),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INVDTAVAT2
[L]CURPRO = "INVDTAVAT2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDTAVAT2
[L]CURPRO = "INVDTAVAT2"
If vireblc(this.INVDTAVAT2,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPVAT.ACTRLREF(this,"INVDTAVAT2",this.INVDTAVAT2,this.INVDTAVAT2,this.VAT2_LEG,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.INVDTAVAT2<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_INVDTAVAT2
this.isReadonly = 0
[L]CURPRO = "INVDTAVAT2"
Gosub _LNKPRO_INVDTAVAT2
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDTAVAT2
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "INVDTAVAT2"
$_LNKPRO_INVDTAVAT2
If vireblc(this.INVDTAVAT2,2)<>""
 # Link TABVAT
 Local File TABVAT [WTVT]
 Read [F:WTVT]TVT0 = this.INVDTAVAT2;this.VAT2_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVAT" & ZONE="SHOAXX" & IDENT1=[F:WTVT]vat & IDENT2=[F:WTVT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTAVAT2","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABVAT" & ZONE="DESAXX" & IDENT1=[F:WTVT]vat & IDENT2=[F:WTVT]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("INVDTAVAT2","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTVT]
Endif
Return


####################################################################
# 3 : VAT2_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_VAT2_LEG
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "VAT2_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_VAT2_LEG
If [L]_AOLDVAL<>this.VAT2_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VAT2_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VAT2_LEG
 Gosub PROPAGATE_VAT2_LEG
Endif
Return

$INIT_VAT2_LEG
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "VAT2_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"VAT2_LEG",this.VAT2_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VAT2_LEG
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "VAT2_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VAT2_LEG              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VAT2_LEG              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VAT2_LEG
[L]CURPRO = "VAT2_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VAT2_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VAT2_LEG
[L]CURPRO = "VAT2_LEG"
If vireblc(this.VAT2_LEG,2)<>vireblc(format$("K:20B",this.VAT2_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VAT2_LEG
[L]CURPRO = "VAT2_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"VAT2_LEG",this.VAT2_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VAT2_LEG
[L]CURPRO = "VAT2_LEG"
Return

$PROPAGATE_VAT2_LEG
this.isReadonly = 0
[L]CURPRO = "VAT2_LEG"
Gosub _LNKPRO_VAT2_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VAT2_LEG
Gosub DECLARE_VAR From WMC0PINVOICEV_C_INVDTALIN2
[L]CURPRO = "VAT2_LEG"
$_LNKPRO_VAT2_LEG
If vireblc(this.VAT2_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.VAT2_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VAT2_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("VAT2_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return




