#<AdxTL>@(#)0.0.0.0 $Revision$Class Merge data
# Supervisor
## CRUD-CLASSE ## OMMRESULT
# 2018-08-27 12:36:18 429


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File OMMRESULT [MRE_]

If !SILENCE : Call TRACE("2 --> Local Instance C_OMMRESULT") From ASYRCOM : Endif
Local Instance OMMRESULT Using C_OMMRESULT

If !SILENCE : Call TRACE("3 --> New Instance C_OMMRESULT") From ASYRCOM : Endif
OMMRESULT = NewInstance C_OMMRESULT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [MRE_]MRE0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of OMMRESULT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet OMMRESULT.AREAD([MRE_]OPGNUM,[MRE_]MRENUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("OMMRESULT.OPGNUM ="-num$(OMMRESULT.OPGNUM)) From ASYRCOM
 Call TRACE("OMMRESULT.MRENUM ="-num$(OMMRESULT.MRENUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(OMMRESULT.AKEYS)
  Call TRACE("-"-num$(I)-":"-OMMRESULT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [MRE_]
FreeGroup OMMRESULT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(OMMRESULT,ACLE,ASTATUS,_ETAG)
Variable Instance OMMRESULT Using C_OMMRESULT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPGNUM(20)
Local Char _MRENUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPGNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_MRENUM = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File OMMRESULT [MRE]
Default File [F:MRE]
Read [F:MRE]MRE0 = [L]_OPGNUM;[L]_MRENUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:MRE]UPDTICK)>0
 [L]_ETAG = num$([F:MRE]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(OMMRESULT,ACLE,ASTATUS)
Variable Instance OMMRESULT Using C_OMMRESULT
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPGNUM(20)
Local Char _MRENUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPGNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_MRENUM = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet OMMRESULT.AREAD([L]_OPGNUM,[L]_MRENUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(OMMRESULT,_OPGNUM,_MRENUM,ASTATUS)
Variable Instance OMMRESULT Using C_OMMRESULT
Value Char _OPGNUM
Value Char _MRENUM
Variable Integer ASTATUS

If OMMRESULT = null : End : Endif

Gosub AVARIABLES From WMC00OMMRESULT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If OMMRESULT.APARENT=null
 [L]A_I = OMMRESULT.freeSnapshot
 OMMRESULT.snapshotEnabled = 0
 OMMRESULT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & OMMRESULT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet OMMRESULT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If OMMRESULT.APARENT=null
 OMMRESULT.snapshotEnabled = 1
 OMMRESULT.setAccessorEnabled = 1
Endif
LogicClose File [MRE]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet OMMRESULT._ACTION_PARAM("AREAD_BEFORE",[L]_OPGNUM,[L]_MRENUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:MRE]
Read [F:MRE]MRE0 = [L]_OPGNUM;[L]_MRENUM
If fstat
[L]A_ERROR = [L]_OPGNUM+"~"+[L]_MRENUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(OMMRESULT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:MRE]AUUID)>0 & [F:MRE]AUUID=NullUuid
 [F:MRE]AUUID = getUuid
Endif
SetInstance OMMRESULT With [F:MRE]
OMMRESULT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet OMMRESULT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



