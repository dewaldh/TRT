#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoice number definition
# Supervisor
## CRUD-CLASSE ## BSIINVDIO
# 2018-08-27 12:27:12 911


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BSIINVDIO [BSIIND_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BSIINVDIO") From ASYRCOM : Endif
Local Instance BSIINVDIO Using C_BSIINVDIO

If !SILENCE : Call TRACE("3 --> New Instance C_BSIINVDIO") From ASYRCOM : Endif
BSIINVDIO = NewInstance C_BSIINVDIO AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BSIIND_]BSIIND0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BSIINVDIO") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.AREAD([BSIIND_]CPY,[BSIIND_]FCY,[BSIIND_]FILFMT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BSIINVDIO.CPY ="-num$(BSIINVDIO.CPY)) From ASYRCOM
 Call TRACE("BSIINVDIO.FCY ="-num$(BSIINVDIO.FCY)) From ASYRCOM
 Call TRACE("BSIINVDIO.FILFMT ="-num$(BSIINVDIO.FILFMT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BSIINVDIO.AKEYS)
  Call TRACE("-"-num$(I)-":"-BSIINVDIO.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BSIIND_]
FreeGroup BSIINVDIO
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BSIINVDIO,ACLE,ASTATUS,_ETAG)
Variable Instance BSIINVDIO Using C_BSIINVDIO
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CPY(5)
Local Char _FCY(5)
Local Char _FILFMT(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CPY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_FCY = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FILFMT = num$([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File BSIINVDIO [BSIIND]
Default File [F:BSIIND]
Read [F:BSIIND]BSIIND0 = [L]_CPY;[L]_FCY;[L]_FILFMT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BSIIND]UPDTICK)>0
 [L]_ETAG = num$([F:BSIIND]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BSIINVDIO,ACLE,ASTATUS)
Variable Instance BSIINVDIO Using C_BSIINVDIO
Value Char ACLE
Variable Integer ASTATUS
Local Char _CPY(5)
Local Char _FCY(5)
Local Char _FILFMT(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CPY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_FCY = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FILFMT = num$([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.AREAD([L]_CPY,[L]_FCY,[L]_FILFMT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BSIINVDIO,_CPY,_FCY,_FILFMT,ASTATUS)
Variable Instance BSIINVDIO Using C_BSIINVDIO
Value Char _CPY
Value Char _FCY
Value Char _FILFMT
Variable Integer ASTATUS

If BSIINVDIO = null : End : Endif

Gosub AVARIABLES From WMC00BSIINVDIO
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BSIINVDIO.APARENT=null
 [L]A_I = BSIINVDIO.freeSnapshot
 BSIINVDIO.snapshotEnabled = 0
 BSIINVDIO.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BSIINVDIO.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BSIINVDIO.APARENT=null
 BSIINVDIO.snapshotEnabled = 1
 BSIINVDIO.setAccessorEnabled = 1
Endif
LogicClose File [BSIIND] ,[BSIINDD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO._ACTION_PARAM("AREAD_BEFORE",[L]_CPY,[L]_FCY,[L]_FILFMT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BSIIND]
Read [F:BSIIND]BSIIND0 = [L]_CPY;[L]_FCY;[L]_FILFMT
If fstat
[L]A_ERROR = [L]_CPY+"~"+[L]_FCY+"~"+[L]_FILFMT
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BSIINVDIO,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:BSIIND]AUUID)>0 & [F:BSIIND]AUUID=NullUuid
 [F:BSIIND]AUUID = getUuid
Endif
SetInstance BSIINVDIO With [F:BSIIND]
BSIINVDIO.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:BSIINDD]
 [L]A_N2=0
 For [F:BSIINDD]BSIIND0 Where CPY=[F:BSIIND]CPY & FCY=[F:BSIIND]FCY & FILFMT=[F:BSIIND]FILFMT
  [L]A_N2 +=1
  BSIINVDIO.LINES(A_N2) = NewInstance  C_BSIINVDIOD(BSIINVDIO.ACTX,NullUuid,[L]A_N2,BSIINVDIO,"LINES") AllocGroup BSIINVDIO
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ADDINSTANCE_BOUND)
  If dim([F:BSIINDD]AUUID)>0 & [F:BSIINDD]AUUID=NullUuid
   [F:BSIINDD]AUUID = getUuid
  Endif
  SetInstance BSIINVDIO.LINES(A_N2) With [F:BSIINDD]
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  BSIINVDIO.LINES(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ASETATTRIBUTE("CPY","$namProParent","CPY"))
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ASETATTRIBUTE("FCY","$namProParent","FCY"))
  [L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.LINES(A_N2).ASETATTRIBUTE("FILFMT","$namProParent","FILFMT"))
 Next BSIINDD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet BSIINVDIO.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="BSIINVDIO" & ZONE="DESAXX" & IDENT1=BSIINVDIO.CPYFCY & IDENT2=BSIINVDIO.FILFMT
 Call ASETTEXTRA(BSIINVDIO.AXX,BSIINVDIO.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 BSIINVDIO.AXX(maxtab(BSIINVDIO.AXX)).FLG = 0
Next AXX
If !len(fmet BSIINVDIO.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(BSIINVDIO.AXX,BSIINVDIO.AllocGrp(),"DESAXX",
& fmet BSIINVDIO.AGETTEXTRALAN("DESAXX",BSIINVDIO.ACTX.AFOLD.ALANGDEF),
& BSIINVDIO.ACTX.LAN) From ASYRSUB
Endif

Return



