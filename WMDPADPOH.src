#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PADPOH

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".PORDER" : If clalev([F:POH])=0 : Local File =OUVTAB [POH] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = "Link [POH]"
Link [POH] With
& [CPY]CPY0 = [F:POH]CPY
& As [LNK_]
& Order By Key CLE = [POH]POHNUM
FILTRE = ""
Return

$FERME
If clalev([F:POH]) : Close local File [POH] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..1)
Local Integer DTYP(1..1)
Local Integer NBDCLE
NBDCLE = 1
DCLE(1) = "POHNUM"
DTYP(1) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]POHNUM)>0
 [F:AAA_]POHNUM = [F:POH]POHNUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]POHNUM=[F:POH]POHNUM"

End

$MAJFLD
### POHNUM
[L]FLD="POHNUM"
[L]FORMULE='[F:POH]POHNUM'
If dim([F:AAA_]POHNUM)>0
 [F:AAA_]POHNUM = [F:POH]POHNUM
Endif

### POHNUMLNK
[L]FLD="POHNUMLNK"
[L]FORMULE='[F:POH]POHNUM'
If dim([F:AAA_]POHNUMLNK)>0
 [F:AAA_]POHNUMLNK = [F:POH]POHNUM
Endif

### POHTYP
[L]FLD="POHTYP"
[L]FORMULE='[F:POH]POHTYP'
If dim([F:AAA_]POHTYP)>0
 [F:AAA_]POHTYP = [F:POH]POHTYP
Endif

### ORDDAT
[L]FLD="ORDDAT"
[L]FORMULE='[F:POH]ORDDAT'
If dim([F:AAA_]ORDDAT)>0
 [F:AAA_]ORDDAT = [F:POH]ORDDAT
Endif

### REVNUM
[L]FLD="REVNUM"
[L]FORMULE='[F:POH]REVNUM'
If dim([F:AAA_]REVNUM)>0
 [F:AAA_]REVNUM = [F:POH]REVNUM
Endif

### APPFLG
[L]FLD="APPFLG"
[L]FORMULE='[F:POH]APPFLG'
If dim([F:AAA_]APPFLG)>0
 [F:AAA_]APPFLG = [F:POH]APPFLG
Endif

### MDL
[L]FLD="MDL"
[L]FORMULE='[F:POH]MDL'
If dim([F:AAA_]MDL)>0
 [F:AAA_]MDL = [F:POH]MDL
Endif

### EECICT
[L]FLD="EECICT"
[L]FORMULE='[F:POH]EECICT'
If dim([F:AAA_]EECICT)>0
 [F:AAA_]EECICT = [F:POH]EECICT
Endif

### BPTNUM
[L]FLD="BPTNUM"
[L]FORMULE='[F:POH]BPTNUM'
If dim([F:AAA_]BPTNUM)>0
 [F:AAA_]BPTNUM = [F:POH]BPTNUM
Endif

### FFWNUM
[L]FLD="FFWNUM"
[L]FORMULE='[F:POH]FFWNUM'
If dim([F:AAA_]FFWNUM)>0
 [F:AAA_]FFWNUM = [F:POH]FFWNUM
Endif

### VACBPR
[L]FLD="VACBPR"
[L]FORMULE='[F:POH]VACBPR'
If dim([F:AAA_]VACBPR)>0
 [F:AAA_]VACBPR = [F:POH]VACBPR
Endif

### VACBPR_LEG
[L]FLD="VACBPR_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)'
If dim([F:AAA_]VACBPR_LEG)>0
 [F:AAA_]VACBPR_LEG = func TRTX3BITC.GETLEG_VACBPR([F:AAA_]VACBPR,[F:CPY]LEG)
Endif

### PTE
[L]FLD="PTE"
[L]FORMULE='[F:POH]PTE'
If dim([F:AAA_]PTE)>0
 [F:AAA_]PTE = [F:POH]PTE
Endif

### PTE_LEG
[L]FLD="PTE_LEG"
[L]FORMULE='func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)'
If dim([F:AAA_]PTE_LEG)>0
 [F:AAA_]PTE_LEG = func TRTX3BITC.GETLEG_PTE([F:AAA_]PTE,[F:CPY]LEG)
Endif

### BPRNAM
[L]FLD="BPRNAM"
[L]FORMULE='[F:POH]BPRNAM'
If dim([F:AAA_]BPRNAM)>0
 [F:AAA_]BPRNAM = [F:POH]BPRNAM
Endif

### POSCOD
[L]FLD="POSCOD"
[L]FORMULE='vireblc([F:POH]POSCOD,1)'
If dim([F:AAA_]POSCOD)>0
 [F:AAA_]POSCOD = vireblc([F:POH]POSCOD,1)
Endif

### CTY
[L]FLD="CTY"
[L]FORMULE='[F:POH]CTY'
If dim([F:AAA_]CTY)>0
 [F:AAA_]CTY = [F:POH]CTY
Endif

### CRY
[L]FLD="CRY"
[L]FORMULE='[F:POH]CRY'
If dim([F:AAA_]CRY)>0
 [F:AAA_]CRY = [F:POH]CRY
Endif

### BPONAM
[L]FLD="BPONAM"
[L]FORMULE='[F:POH]BPONAM'
If dim([F:AAA_]BPONAM)>0
 [F:AAA_]BPONAM = [F:POH]BPONAM
Endif

### BPOPOSCOD
[L]FLD="BPOPOSCOD"
[L]FORMULE='vireblc([F:POH]BPOPOSCOD,1)'
If dim([F:AAA_]BPOPOSCOD)>0
 [F:AAA_]BPOPOSCOD = vireblc([F:POH]BPOPOSCOD,1)
Endif

### BPOCTY
[L]FLD="BPOCTY"
[L]FORMULE='[F:POH]BPOCTY'
If dim([F:AAA_]BPOCTY)>0
 [F:AAA_]BPOCTY = [F:POH]BPOCTY
Endif

### BPOCRY
[L]FLD="BPOCRY"
[L]FORMULE='[F:POH]BPOCRY'
If dim([F:AAA_]BPOCRY)>0
 [F:AAA_]BPOCRY = [F:POH]BPOCRY
Endif


Return

