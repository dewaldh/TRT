#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment balance decl details
# Supervisor
## CRUD-CLASSE ## PBDGEND
# 2018-08-27 12:37:44 527


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PBDGEND [PBDGEND_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PBDGEND") From ASYRCOM : Endif
Local Instance PBDGEND Using C_PBDGEND

If !SILENCE : Call TRACE("3 --> New Instance C_PBDGEND") From ASYRCOM : Endif
PBDGEND = NewInstance C_PBDGEND AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PBDGEND_]PBDGEND0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PBDGEND") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PBDGEND.AREAD([PBDGEND_]CODE,[PBDGEND_]LEG,[PBDGEND_]ISDETAIL,[PBDGEND_]ISOITEM,[PBDGEND_]LINE))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PBDGEND.CODE ="-num$(PBDGEND.CODE)) From ASYRCOM
 Call TRACE("PBDGEND.LEG ="-num$(PBDGEND.LEG)) From ASYRCOM
 Call TRACE("PBDGEND.ISDETAIL ="-num$(PBDGEND.ISDETAIL)) From ASYRCOM
 Call TRACE("PBDGEND.ISOITEM ="-num$(PBDGEND.ISOITEM)) From ASYRCOM
 Call TRACE("PBDGEND.LINE ="-num$(PBDGEND.LINE)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PBDGEND.AKEYS)
  Call TRACE("-"-num$(I)-":"-PBDGEND.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PBDGEND_]
FreeGroup PBDGEND
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PBDGEND,ACLE,ASTATUS,_ETAG)
Variable Instance PBDGEND Using C_PBDGEND
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODE(20)
Local Char _LEG(20)
Local Tinyint _ISDETAIL
Local Tinyint _ISOITEM
Local Shortint _LINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ISDETAIL = val([L]CLE(3)) : Endif
If [L]CLE(3)="false" : [L]_ISDETAIL = 1 : Endif
If [L]CLE(3)="true" : [L]_ISDETAIL = 2 : Endif
If [L]CLE(4)<>"" : [L]_ISOITEM = val([L]CLE(4)) : Endif
If [L]CLE(4)="false" : [L]_ISOITEM = 1 : Endif
If [L]CLE(4)="true" : [L]_ISOITEM = 2 : Endif
If [L]CLE(5)<>"" : [L]_LINE = val([L]CLE(5)) : Endif
Raz [L]_ETAG
Local File PBDGEND [PBDGEND]
Default File [F:PBDGEND]
Read [F:PBDGEND]PBDGEND0 = [L]_CODE;[L]_LEG;[L]_ISDETAIL;[L]_ISOITEM;[L]_LINE
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PBDGEND]UPDTICK)>0
 [L]_ETAG = num$([F:PBDGEND]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PBDGEND,ACLE,ASTATUS)
Variable Instance PBDGEND Using C_PBDGEND
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODE(20)
Local Char _LEG(20)
Local Tinyint _ISDETAIL
Local Tinyint _ISOITEM
Local Shortint _LINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_ISDETAIL = val([L]CLE(3)) : Endif
If [L]CLE(3)="false" : [L]_ISDETAIL = 1 : Endif
If [L]CLE(3)="true" : [L]_ISDETAIL = 2 : Endif
If [L]CLE(4)<>"" : [L]_ISOITEM = val([L]CLE(4)) : Endif
If [L]CLE(4)="false" : [L]_ISOITEM = 1 : Endif
If [L]CLE(4)="true" : [L]_ISOITEM = 2 : Endif
If [L]CLE(5)<>"" : [L]_LINE = val([L]CLE(5)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PBDGEND.AREAD([L]_CODE,[L]_LEG,[L]_ISDETAIL,[L]_ISOITEM,[L]_LINE))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PBDGEND,_CODE,_LEG,_ISDETAIL,_ISOITEM,_LINE,ASTATUS)
Variable Instance PBDGEND Using C_PBDGEND
Value Char _CODE
Value Char _LEG
Value Tinyint _ISDETAIL
Value Tinyint _ISOITEM
Value Shortint _LINE
Variable Integer ASTATUS

If PBDGEND = null : End : Endif

Gosub AVARIABLES From WMC00PBDGEND
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PBDGEND.APARENT=null
 [L]A_I = PBDGEND.freeSnapshot
 PBDGEND.snapshotEnabled = 0
 PBDGEND.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PBDGEND.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PBDGEND._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PBDGEND.APARENT=null
 PBDGEND.snapshotEnabled = 1
 PBDGEND.setAccessorEnabled = 1
Endif
LogicClose File [PBDGEND]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PBDGEND._ACTION_PARAM("AREAD_BEFORE",[L]_CODE,[L]_LEG,[L]_ISDETAIL,[L]_ISOITEM,[L]_LINE))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PBDGEND]
Read [F:PBDGEND]PBDGEND0 = [L]_CODE;[L]_LEG;[L]_ISDETAIL;[L]_ISOITEM;[L]_LINE
If fstat
[L]A_ERROR = [L]_CODE+"~"+[L]_LEG+"~"+num$([L]_ISDETAIL)+"~"+num$([L]_ISOITEM)+"~"+num$([L]_LINE)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PBDGEND,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PBDGEND]AUUID)>0 & [F:PBDGEND]AUUID=NullUuid
 [F:PBDGEND]AUUID = getUuid
Endif
SetInstance PBDGEND With [F:PBDGEND]
PBDGEND.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PBDGEND.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



