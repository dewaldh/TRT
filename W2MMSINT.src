#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management MMSINT 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_ZSTJPIT
Onevent BEFORE_AREA Gosub AV_ZSTJPIT From W2MMSINT
Return

$AV_ZSTJPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]STJPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGSTJPIT
Onevent BEFORE_INPUT Call AS_FLGSTJPIT(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGSTJPIT(zc) From W2MMSINT
Return

Subprog D_FLGSTJPIT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGSTJPIT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGSTJPIT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGSTJPIT(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGSTJPIT(INDIC) = VALEUR
 Affzo FLGSTJPIT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STJENDDAT
Onevent CONTROL Call C_STJENDDAT(zc) From W2MMSINT
Onevent AFTER_CHANGE Gosub AMM_STJENDDAT From W2MMSINT
Onevent INIT_AREA Call D_STJENDDAT(zc) From W2MMSINT
Onevent BEFORE_AREA Gosub AV_STJENDDAT From W2MMSINT
Return

$AV_STJENDDAT
Chgfmt [M]STJENDDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_STJENDDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]STJENDDAT,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

Subprog C_STJENDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_STJENDDAT(VALEUR) From SUBMMSINT
If mkstat : GERR = 1 : GZONE = "STJENDDAT" : GZNUM = 1806 : Endif
Gosub _AFF
End

$AMM_STJENDDAT
Call AM_STJENDDAT(zc)
If !mkstat & GOBJET
 zoncou = "STJENDDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STJENDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_STJENDDAT(VALEUR) From SUBMMSINT
If mkstat : GERR = 1 : GZONE = "STJENDDAT" : GZNUM = 1806 : Endif
Gosub _AFF
End

$ON_STJEDTFLG
Onevent AFTER_CHANGE Gosub AMM_STJEDTFLG From W2MMSINT
Onevent INIT_AREA Call D_STJEDTFLG(zc) From W2MMSINT
Onevent BEFORE_INPUT Call AS_STJEDTFLG(zc) From W2MMSINT
Return

Subprog D_STJEDTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]STJEDTFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_STJEDTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_STJEDTFLG
Call AM_STJEDTFLG(zc)
If !mkstat & GOBJET
 zoncou = "STJEDTFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STJEDTFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STJEDTFLG(VALEUR) From SUBMMSINT
If mkstat : GERR = 1 : GZONE = "STJEDTFLG" : GZNUM = 8531 : Endif
Gosub _AFF
End

$ON_STJMMSFLG
Onevent INIT_AREA Call D_STJMMSFLG(zc) From W2MMSINT
Onevent BEFORE_INPUT Call AS_STJMMSFLG(zc) From W2MMSINT
Return

Subprog D_STJMMSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]STJMMSFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_STJMMSFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STJSTRDAT
Onevent AFTER_CHANGE Gosub AMM_STJSTRDAT From W2MMSINT
Onevent INIT_AREA Call D_STJSTRDAT(zc) From W2MMSINT
Onevent BEFORE_AREA Gosub AV_STJSTRDAT From W2MMSINT
Return

$AV_STJSTRDAT
Chgfmt [M]STJSTRDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_STJSTRDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]STJSTRDAT,indice)=0
 VALEUR = date$-10
Endif
Gosub _AFF
End

$AMM_STJSTRDAT
Call AM_STJSTRDAT(zc)
If !mkstat & GOBJET
 zoncou = "STJSTRDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STJSTRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_STJSTRDAT(VALEUR) From SUBMMSINT
If mkstat : GERR = 1 : GZONE = "STJSTRDAT" : GZNUM = 1805 : Endif
Gosub _AFF
End

$ON_STJNDSTR
Onevent AFTER_CHANGE Gosub AMM_STJNDSTR From W2MMSINT
Onevent CONTROL Call C_STJNDSTR(zc) From W2MMSINT
Return

Subprog C_STJNDSTR(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_STJNDSTR
Call AM_STJNDSTR(zc)
If !mkstat & GOBJET
 zoncou = "STJNDSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STJNDSTR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_STJNDSTR(VALEUR) From SUBMMSINT
If mkstat : GERR = 1 : GZONE = "STJNDSTR" : GZNUM = 41627 : Endif
Gosub _AFF
End

$ON_BPSPIT
Return

$ON_ZBPSPIT
Onevent BEFORE_AREA Gosub AV_ZBPSPIT From W2MMSINT
Return

$AV_ZBPSPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]BPSPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGBPSPIT
Onevent BEFORE_INPUT Call AS_FLGBPSPIT(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGBPSPIT(zc) From W2MMSINT
Return

Subprog D_FLGBPSPIT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGBPSPIT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGBPSPIT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGBPSPIT(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGBPSPIT(INDIC) = VALEUR
 Affzo FLGBPSPIT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPSFOR
Onevent CONTROL Call C_BPSFOR(zc) From W2MMSINT
Onevent BEFORE_INPUT Call AS_BPSFOR(zc) From W2MMSINT
Onevent AFTER_CHANGE Gosub AMM_BPSFOR From W2MMSINT
Return

Subprog AS_BPSFOR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4574,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BPSFOR(zc) From W2MMSINT
Onkey   2 Titled GBOUTS Call S_BPSFOR(zc) From W2MMSINT
Onkey 144 Titled GBOUTP Call P_BPSFOR(zc) From W2MMSINT
Onkey 146 Titled GBOUTA Call SA_BPSFOR(zc) From W2MMSINT
Gosub _AFF
End

Subprog C_BPSFOR(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TFO","!",VALEUR,"50",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "BPSFOR" : GZNUM = 12877 : Endif
Gosub _AFF
End

$AMM_BPSFOR
Call AM_BPSFOR(zc)
If !mkstat & GOBJET
 zoncou = "BPSFOR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPSFOR(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZBPSFOR)")>indice
 [M]BPSFOR(indice) = VALEUR
 Affzo ZBPSFOR(indice)
Endif
Gosub _AFF
End

Subprog S_BPSFOR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TFO"
PARMSK(2) = "!"
PARMSK(3) = "50"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BPSFOR(VALEUR)
Variable Char    VALEUR()
Call OBJET("TFO",VALEUR,"50") From GOBJET
Gosub _AFF
End

Subprog SA_BPSFOR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TFO"
PARMSK(2) = "50"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BPSFOR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "50"
Call VISU("TFO",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBPSFOR
Onevent BEFORE_AREA Gosub AV_ZBPSFOR From W2MMSINT
Return

$AV_ZBPSFOR
Call LECTEXTRA(zc,"TABFOR","DES","50",num$([M]BPSFOR(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_CNTBPSPIT
Return

$ON_ZCNTBPSPIT
Onevent BEFORE_AREA Gosub AV_ZCNTBPSPIT From W2MMSINT
Return

$AV_ZCNTBPSPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]CNTBPSPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGCNTBPSP
Onevent BEFORE_INPUT Call AS_FLGCNTBPSP(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGCNTBPSP(zc) From W2MMSINT
Return

Subprog D_FLGCNTBPSP(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGCNTBPSP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGCNTBPSP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGCNTBPSP(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGCNTBPSP(INDIC) = VALEUR
 Affzo FLGCNTBPSP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CLSBPSPIT
Return

$ON_ZCLSBPSPIT
Onevent BEFORE_AREA Gosub AV_ZCLSBPSPIT From W2MMSINT
Return

$AV_ZCLSBPSPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]CLSBPSPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGCLSBPSP
Onevent BEFORE_INPUT Call AS_FLGCLSBPSP(zc) From W2MMSINT
Onevent CONTROL Call C_FLGCLSBPSP(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGCLSBPSP(zc) From W2MMSINT
Return

Subprog D_FLGCLSBPSP(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGCLSBPSP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGCLSBPSP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGCLSBPSP(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGCLSBPSP(INDIC) = VALEUR
 Affzo FLGCLSBPSP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_FLGCLSBPSP(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_FLGCLSBPSP(VALEUR) From SUBMMSINT
If mkstat : GERR = 1 : GZONE = "FLGCLSBPSP" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_ITMBPSPIT
Return

$ON_ZITMBPSPIT
Onevent BEFORE_AREA Gosub AV_ZITMBPSPIT From W2MMSINT
Return

$AV_ZITMBPSPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]ITMBPSPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGITMBPSP
Onevent BEFORE_INPUT Call AS_FLGITMBPSP(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGITMBPSP(zc) From W2MMSINT
Return

Subprog D_FLGITMBPSP(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGITMBPSP,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGITMBPSP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGITMBPSP(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGITMBPSP(INDIC) = VALEUR
 Affzo FLGITMBPSP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PJTPIT
Return

$ON_ZPJTPIT
Onevent BEFORE_AREA Gosub AV_ZPJTPIT From W2MMSINT
Return

$AV_ZPJTPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]PJTPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGPJTPIT
Onevent BEFORE_INPUT Call AS_FLGPJTPIT(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGPJTPIT(zc) From W2MMSINT
Return

Subprog D_FLGPJTPIT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGPJTPIT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGPJTPIT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGPJTPIT(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGPJTPIT(INDIC) = VALEUR
 Affzo FLGPJTPIT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STUPIT
Return

$ON_ZSTUPIT
Onevent BEFORE_AREA Gosub AV_ZSTUPIT From W2MMSINT
Return

$AV_ZSTUPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]STUPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGSTUPIT
Onevent BEFORE_INPUT Call AS_FLGSTUPIT(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGSTUPIT(zc) From W2MMSINT
Return

Subprog D_FLGSTUPIT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGSTUPIT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGSTUPIT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGSTUPIT(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGSTUPIT(INDIC) = VALEUR
 Affzo FLGSTUPIT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TCOPIT
Return

$ON_ZTCOPIT
Onevent BEFORE_AREA Gosub AV_ZTCOPIT From W2MMSINT
Return

$AV_ZTCOPIT
If clalev([F:PIT])=0 : Local File PIVOTS [PIT] : Endif
Call LECTURE("PIT",num$([M]TCOPIT(indice)),"") From CONTOBJ
zc = [F:PIT]INTIT
Gosub _AFF
Return

$ON_FLGTCOPIT
Onevent BEFORE_INPUT Call AS_FLGTCOPIT(zc) From W2MMSINT
Onevent INIT_AREA Call D_FLGTCOPIT(zc) From W2MMSINT
Return

Subprog D_FLGTCOPIT(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGTCOPIT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_FLGTCOPIT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGTCOPIT(VALEUR) From SUBMMSINT
If mkstat=2
 [M]FLGTCOPIT(INDIC) = VALEUR
 Affzo FLGTCOPIT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_USRPIT
Return

$TIT_COL
Gosub TIT_COL From W3MMSINT
Return


