#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management AMK4 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:48:59"
A_USER  = "ADMIN"
A_STAMP = "20180827234859"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask AMK4 [AMK4]
Gosub HORODAT
Local Inpbox "AMK4" From GFONCTION At A_STAMP With A_WINDPREV Mask [AMK4] As [SIM_]
Grizo [AMK4]5
Grizo [AMK4]10
Grizo [AMK4]30
Grizo [AMK4]50
Grizo [AMK4]55
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [AMK4]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=20 : X2(0)=59 : Y1(0)=6 : Y2(0)=9
X1(1)=20 : X2(1)=59 : Y1(1)=10 : Y2(1)=12
X1(2)=20 : X2(2)=93 : Y1(2)=13 : Y2(2)=15
X1(3)=60 : X2(3)=93 : Y1(3)=6 : Y2(3)=12
X1(4)=20 : X2(4)=93 : Y1(4)=16 : Y2(4)=23
Return

$ON_TYPEG
Onevent BEFORE_INPUT Call AS_TYPEG(zc) From W1AMK4
Onevent AFTER_AREA Call AP_TYPEG(zc) From W1AMK4
Onevent INIT_AREA Call D_TYPEG(zc) From W1AMK4
Onevent CONTROL Call C_TYPEG(zc) From W1AMK4
Return

Subprog D_TYPEG(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPEG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPEG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2932) From COMBOS
## Action STD
Call AS_TYPEG(VALEUR) From SUBAMK4
If mkstat=2
 [M]TYPEG(INDIC) = VALEUR
 Affzo TYPEG(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2932,1))))
Endif
If !mkstat
 Discombo 0 From TYPEG(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From TYPEG(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_TYPEG(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_TYPEG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_TYPEG(VALEUR) From SUBAMK4
If mkstat : GERR = 1 : GZONE = "TYPEG" : GZNUM = 25726 : Endif
Gosub _AFF
End

$ON_POSITION
Onevent BEFORE_AREA Gosub AV_POSITION From W1AMK4
Onevent INIT_AREA Call D_POSITION(zc) From W1AMK4
Onevent BEFORE_INPUT Call AS_POSITION(zc) From W1AMK4
Return

$AV_POSITION
## Action STD
Call AV_POSITION(zc) From SUBAMK4
Gosub _AFF
Return

Subprog D_POSITION(VALEUR)
Variable Integer VALEUR
If varinit([M]POSITION,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_POSITION(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_POSDEF
Onevent BEFORE_AREA Gosub AV_POSDEF From W1AMK4
Onevent INIT_AREA Call D_POSDEF(zc) From W1AMK4
Onevent BEFORE_INPUT Call AS_POSDEF(zc) From W1AMK4
Return

$AV_POSDEF
## Action STD
Call AV_POSDEF(zc) From SUBAMK4
Gosub _AFF
Return

Subprog D_POSDEF(VALEUR)
Variable Integer VALEUR
If varinit([M]POSDEF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_POSDEF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AFFDEF
Onevent BEFORE_INPUT Call AS_AFFDEF(zc) From W1AMK4
Onevent AFTER_AREA Call AP_AFFDEF(zc) From W1AMK4
Onevent INIT_AREA Call D_AFFDEF(zc) From W1AMK4
Onevent CONTROL Call C_AFFDEF(zc) From W1AMK4
Return

Subprog D_AFFDEF(VALEUR)
Variable Integer VALEUR
If varinit([M]AFFDEF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AFFDEF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2933) From COMBOS
## Action STD
Call AS_AFFDEF(VALEUR) From SUBAMK4
If mkstat=2
 [M]AFFDEF(INDIC) = VALEUR
 Affzo AFFDEF(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2933,1))))
Endif
If !mkstat
 Discombo 0 From AFFDEF(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From AFFDEF(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_AFFDEF(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_AFFDEF(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_AFFDEF(VALEUR) From SUBAMK4
If mkstat : GERR = 1 : GZONE = "AFFDEF" : GZNUM = 27006 : Endif
Gosub _AFF
End

$ON_REPD
Onevent BEFORE_INPUT Call AS_REPD(zc) From W1AMK4
Onevent AFTER_AREA Call AP_REPD(zc) From W1AMK4
Onevent INIT_AREA Call D_REPD(zc) From W1AMK4
Onevent CONTROL Call C_REPD(zc) From W1AMK4
Return

Subprog D_REPD(VALEUR)
Variable Integer VALEUR
If varinit([M]REPD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REPD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2939) From COMBOS
## Action STD
Call AS_REPD(VALEUR) From SUBAMK4
If mkstat=2
 [M]REPD(INDIC) = VALEUR
 Affzo REPD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2939,1))))
Endif
If !mkstat
 Discombo 0 From REPD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From REPD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_REPD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_REPD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_REPD(VALEUR) From SUBAMK4
If mkstat : GERR = 1 : GZONE = "REPD" : GZNUM = 27009 : Endif
Gosub _AFF
End

$ON_ICH
Onevent INIT_AREA Call D_ICH(zc) From W1AMK4
Return

Subprog D_ICH(VALEUR)
Variable Char    VALEUR()
If varinit([M]ICH,indice)=0
 VALEUR = mess(36,124,1)
Endif
Gosub _AFF
End

$ON_IXSL
Onevent INIT_AREA Call D_IXSL(zc) From W1AMK4
Return

Subprog D_IXSL(VALEUR)
Variable Char    VALEUR()
If varinit([M]IXSL,indice)=0
 VALEUR = mess(231,123,1)
Endif
Gosub _AFF
End

$ON_CHPAR1
Onevent AFTER_CHANGE Gosub AMM_CHPAR1 From W1AMK4
Return

$AMM_CHPAR1
Call AM_CHPAR1(zc)
If !mkstat & GOBJET
 zoncou = "CHPAR1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CHPAR1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CHPAR1(VALEUR) From SUBAMK4
If mkstat : GERR = 1 : GZONE = "CHPAR1" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_CODURL1
Onevent AFTER_CHANGE Gosub AMM_CODURL1 From W1AMK4
Onevent CONTROL Call C_CODURL1(zc) From W1AMK4
Onevent BEFORE_INPUT Call AS_CODURL1(zc) From W1AMK4
Return

Subprog AS_CODURL1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(30684,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CODURL1(zc) From W1AMK4
Onkey   2 Titled GBOUTS Call S_CODURL1(zc) From W1AMK4
Onkey 144 Titled GBOUTP Call P_CODURL1(zc) From W1AMK4
Onkey 146 Titled GBOUTA Call SA_CODURL1(zc) From W1AMK4
Gosub _AFF
End

Subprog C_CODURL1(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("AUR","!B",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "CODURL1" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_CODURL1
Call AM_CODURL1(zc)
If !mkstat & GOBJET
 zoncou = "CODURL1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODURL1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CODURL1(VALEUR) From SUBAMK4
If mkstat : GERR = 1 : GZONE = "CODURL1" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_CODURL1(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AUR"
PARMSK(2) = "!B"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CODURL1(VALEUR)
Variable Char    VALEUR()
Call OBJET("AUR",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CODURL1(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AUR"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODURL1(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AUR",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_CHPAR2
Return

$ON_CODURL2
Return

$ON_WPARCOD
Onevent INIT_AREA Call D_WPARCOD(zc) From W1AMK4
Return

Subprog D_WPARCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]WPARCOD,indice)=0
 VALEUR = mess(37,100,1)
Endif
Gosub _AFF
End

$ON_WPARLIB
Onevent INIT_AREA Call D_WPARLIB(zc) From W1AMK4
Return

Subprog D_WPARLIB(VALEUR)
Variable Char    VALEUR()
If varinit([M]WPARLIB,indice)=0
 VALEUR = mess(5,9110,1)
Endif
Gosub _AFF
End

$ON_WPARDEF
Onevent INIT_AREA Call D_WPARDEF(zc) From W1AMK4
Return

Subprog D_WPARDEF(VALEUR)
Variable Char    VALEUR()
If varinit([M]WPARDEF,indice)=0
 VALEUR = mess(61,137,1)
Endif
Gosub _AFF
End

$ON_WPARVAL
Onevent INIT_AREA Call D_WPARVAL(zc) From W1AMK4
Return

Subprog D_WPARVAL(VALEUR)
Variable Char    VALEUR()
If varinit([M]WPARVAL,indice)=0
 VALEUR = mess(43,139,1)
Endif
Gosub _AFF
End

$ON_UPARVAL
Onevent BEFORE_AREA Gosub AV_UPARVAL From W1AMK4
Onevent CONTROL Call C_UPARVAL(zc) From W1AMK4
Return

$AV_UPARVAL
## Action STD
Call AV_UPARVAL(zc) From SUBAMK4
Gosub _AFF
Return

Subprog C_UPARVAL(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_UPARVAL(VALEUR) From SUBAMK4
If mkstat : GERR = 1 : GZONE = "UPARVAL" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_UPARMEN
Onevent INIT_AREA Call D_UPARMEN(zc) From W1AMK4
Return

Subprog D_UPARMEN(VALEUR)
Variable Integer VALEUR
If varinit([M]UPARMEN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


