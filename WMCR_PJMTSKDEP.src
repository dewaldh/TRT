#<AdxTL>@(#)0.0.0.0 $Revision$Class Dependencies
# Supervisor
## CRUD-CLASSE ## PJMTSKDEP
# 2018-08-27 12:40:43 204


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMTSKDEP [PKD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMTSKDEP") From ASYRCOM : Endif
Local Instance PJMTSKDEP Using C_PJMTSKDEP

If !SILENCE : Call TRACE("3 --> New Instance C_PJMTSKDEP") From ASYRCOM : Endif
PJMTSKDEP = NewInstance C_PJMTSKDEP AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PKD_]PKD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMTSKDEP") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKDEP.AREAD([PKD_]OPPNUM,[PKD_]TASCOD,[PKD_]OPENUM,[PKD_]ITTSEQ))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMTSKDEP.OPPNUM ="-num$(PJMTSKDEP.OPPNUM)) From ASYRCOM
 Call TRACE("PJMTSKDEP.TASCOD ="-num$(PJMTSKDEP.TASCOD)) From ASYRCOM
 Call TRACE("PJMTSKDEP.OPENUM ="-num$(PJMTSKDEP.OPENUM)) From ASYRCOM
 Call TRACE("PJMTSKDEP.ITTSEQ ="-num$(PJMTSKDEP.ITTSEQ)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMTSKDEP.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMTSKDEP.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PKD_]
FreeGroup PJMTSKDEP
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMTSKDEP,ACLE,ASTATUS,_ETAG)
Variable Instance PJMTSKDEP Using C_PJMTSKDEP
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Shortint _OPENUM
Local Integer _ITTSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPENUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_ITTSEQ = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File PJMTSKDEP [PKD]
Default File [F:PKD]
Read [F:PKD]PKD0 = [L]_OPPNUM;[L]_TASCOD;[L]_OPENUM;[L]_ITTSEQ
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PKD]UPDTICK)>0
 [L]_ETAG = num$([F:PKD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMTSKDEP,ACLE,ASTATUS)
Variable Instance PJMTSKDEP Using C_PJMTSKDEP
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Shortint _OPENUM
Local Integer _ITTSEQ
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPENUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_ITTSEQ = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKDEP.AREAD([L]_OPPNUM,[L]_TASCOD,[L]_OPENUM,[L]_ITTSEQ))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMTSKDEP,_OPPNUM,_TASCOD,_OPENUM,_ITTSEQ,ASTATUS)
Variable Instance PJMTSKDEP Using C_PJMTSKDEP
Value Char _OPPNUM
Value Char _TASCOD
Value Shortint _OPENUM
Value Integer _ITTSEQ
Variable Integer ASTATUS

If PJMTSKDEP = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSKDEP
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMTSKDEP.APARENT=null
 [L]A_I = PJMTSKDEP.freeSnapshot
 PJMTSKDEP.snapshotEnabled = 0
 PJMTSKDEP.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMTSKDEP.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKDEP._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMTSKDEP.APARENT=null
 PJMTSKDEP.snapshotEnabled = 1
 PJMTSKDEP.setAccessorEnabled = 1
Endif
LogicClose File [PKD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKDEP._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_TASCOD,[L]_OPENUM,[L]_ITTSEQ))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PKD]
Read [F:PKD]PKD0 = [L]_OPPNUM;[L]_TASCOD;[L]_OPENUM;[L]_ITTSEQ
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_TASCOD+"~"+num$([L]_OPENUM)+"~"+num$([L]_ITTSEQ)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTSKDEP,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PKD]AUUID)>0 & [F:PKD]AUUID=NullUuid
 [F:PKD]AUUID = getUuid
Endif
SetInstance PJMTSKDEP With [F:PKD]
PJMTSKDEP.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKDEP.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



