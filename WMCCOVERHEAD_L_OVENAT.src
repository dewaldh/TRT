#<AdxTL>@(#)0.0.0.0 $Revision$Class Overheads codes
# Supervisor
## ACLA-CLASSE ## OVERHEAD_L_OVENAT
# 2018-08-27 12:36:50 180

####################################################################
# _ACONTROL
####################################################################

$_ACONTROL
Gosub _AMANDATORY     : [L]ASTATUS = max([L]ASTATUS,[L]ALLSTAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AFORMAT        : [L]ASTATUS = max([L]ASTATUS,[L]ALLSTAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS        : [L]ASTATUS = max([L]ASTATUS,[L]ALLSTAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

####################################################################
# MANDATORY
####################################################################

$_AMANDATORY
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
Local Integer ALLSTAT
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_OVENAT From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_VCRTRG From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FORCODA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FORCODB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FORCODC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FORCODD From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FXDOVEA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FXDOVEB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FXDOVEC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AMANDATORY_FXDOVED From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
Return

####################################################################
# FORMAT
####################################################################

$_AFORMAT
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
Local Integer ALLSTAT
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_OVENAT From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_VCRTRG From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FORCODA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FORCODB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FORCODC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FORCODD From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FXDOVEA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FXDOVEB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FXDOVEC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AFORMAT_FXDOVED From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
Return

####################################################################
# OTHERS
####################################################################

$_AOTHERS
Gosub DECLARE_VAR From WMC0OVERHEAD_L_OVENAT
Local Integer ALLSTAT
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_OVENAT From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_OVENAT From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_VCRTRG From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_VCRTRG From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FORCODA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FORCODA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FORCODB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FORCODB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FORCODC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FORCODC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FORCODD From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FORCODD From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FXDOVEA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FXDOVEA From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FXDOVEB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FXDOVEB From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FXDOVEC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FXDOVEC From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
If !find(this.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) : Gosub _AOTHERS_FXDOVED From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT : Gosub _AOTHERS_REF_FXDOVED From WMC1OVERHEAD_L_OVENAT : Gosub TESTALLSTAT :  Endif
[L]ASTATUS = fmet this.ACONTROL
[L]ALLSTAT = max([L]ALLSTAT,[L]ASTATUS)
Return

$TESTALLSTAT
[L]ALLSTAT = max([L]ALLSTAT,[L]ASTATUS)
Return



