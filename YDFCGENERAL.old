#<AdxTL>@(#)0.0.0.0 $Revision$
#------------------------------------------------------------------------------------#
#Get the Char of accounts based on dimension
#------------------------------------------------------------------------------------#
Funprog GETCOA(YDIM)

# Variables
Value Char YDIM
Local Char YVAL(250)
Local Char REQUEST(255)(3)

#debug message variable
Local Char YMSG(250)(5)

#
REQUEST(0) = "SELECT COA_0 "
REQUEST(0) += "From GLED "
REQUEST(1) += "WHERE DIE_0 = '" + YDIM + "' or DIE_1 = '" + YDIM + "' or DIE_2 = '" + YDIM + "' or DIE_3 = '" + YDIM + "' or DIE_4 = '"
REQUEST(2) = YDIM + "' or DIE_5 = '" + YDIM + "' or DIE_6 = '" + YDIM + "' or DIE_7 = '" + YDIM + "' or DIE_8 = '" + YDIM + "'"

#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  YMSG(0) = "Current Function: GETCOA, Dimension: " + YDIM
  YMSG(1) = "Request: " + REQUEST(0)
  YMSG(2) = "Request: " + REQUEST(1)
  YMSG(3) = "Request: " + REQUEST(2)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

#get all of the chart of accounts linked to the dimension.
For (Char YCOA) From "5" Sql REQUEST As [YLNK]
   YVAL += "'" + [F:YLNK]YCOA + "',"
Next


#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  Raz YMSG
  YMSG(0) = "Function: GETCOA "
  YMSG(1) = "Chart of Accounts: " + left$(YVAL,len(YVAL)-1)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

End left$(YVAL,len(YVAL)-1)

#------------------------------------------------------------------------------------#
#Get the ledgers based on dimension
#------------------------------------------------------------------------------------#
Funprog GETLED(YDIM)

# Variables
Value Char YDIM
Local Char YVAL(250)
Local Char REQUEST(255)(3)

#debug message variable
Local Char YMSG(250)(5)

Local Integer LED_END, I
LED_END = 1000
I = 0
Local Char LED_LIST(10)(0..LED_END)

#
REQUEST(0) = "SELECT LED_0 "
REQUEST(0) += "From GLED "
REQUEST(1) += "WHERE DIE_0 = '" + YDIM + "' or DIE_1 = '" + YDIM + "' or DIE_2 = '" + YDIM + "' or DIE_3 = '" + YDIM + "' or DIE_4 = '"
REQUEST(2) = YDIM + "' or DIE_5 = '" + YDIM + "' or DIE_6 = '" + YDIM + "' or DIE_7 = '" + YDIM + "' or DIE_8 = '" + YDIM + "'"

#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  YMSG(0) = "Current Function: GETLED, Dimension: " + YDIM
  YMSG(1) = "Request: " + REQUEST(0)
  YMSG(2) = "Request: " + REQUEST(1)
  YMSG(3) = "Request: " + REQUEST(2)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

#get all of the chart of accounts linked to the dimension.
For (Char YLED) From "5" Sql REQUEST As [YLNK]
#   YVAL += "'" + [F:YLNK]YCOA + "',"
  LED_LIST(I) = [F:YLNK]YLED
  I+=1
Next


#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  Raz YMSG
  YMSG(0) = "Function: GETLED "
  YMSG(1) = "Chart of Accounts: " + left$(YVAL,len(YVAL)-1)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

End LED_LIST(0..LED_END)

#------------------------------------------------------------------------------------#
#Get the Char of accounts based on dimension
#------------------------------------------------------------------------------------#
Funprog GETCOA1(YDIM)

# Variables
Value Char YDIM
Local Char YVAL(250)
Local Char REQUEST(255)(3)

#debug message variable
Local Char YMSG(250)(5)

Local Integer PCC_END, I
PCC_END = 10000
Local Char COA_LIST(10)(PCC_END)

#
REQUEST(0) = "SELECT COA_0 "
REQUEST(0) += "From GLED "
REQUEST(1) += "WHERE DIE_0 = '" + YDIM + "' or DIE_1 = '" + YDIM + "' or DIE_2 = '" + YDIM + "' or DIE_3 = '" + YDIM + "' or DIE_4 = '"
REQUEST(2) = YDIM + "' or DIE_5 = '" + YDIM + "' or DIE_6 = '" + YDIM + "' or DIE_7 = '" + YDIM + "' or DIE_8 = '" + YDIM + "'"

#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  YMSG(0) = "Current Function: GETCOA, Dimension: " + YDIM
  YMSG(1) = "Request: " + REQUEST(0)
  YMSG(2) = "Request: " + REQUEST(1)
  YMSG(3) = "Request: " + REQUEST(2)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

I = 0
#get all of the chart of accounts linked to the dimension.
For (Char YCOA) From "5" Sql REQUEST As [YLNK]
   #YVAL += "'" + [F:YLNK]YCOA + "',"

   COA_LIST(I) = [F:YLNK]YCOA

   I =+ 1


Next


#debug message
If val(func AFNC.PARAM("YDBMSG", "")) = 2
  Raz YMSG
  YMSG(0) = "Function: GETCOA "
  YMSG(1) = "Chart of Accounts: " + left$(YVAL,len(YVAL)-1)
  Call YDBMSG(YMSG) From YDFCGENERAL
Endif

End COA_LIST


#------------------------------------------------------------------------------------#
#Display array of debug messages
#------------------------------------------------------------------------------------#
Subprog YDBMSG(YMSG)
Value Char YMSG()()

  Infbox "Field: " + zoncou , "Mask: " + maskcou, "Process File: " + trtcou ,YMSG(0),YMSG(1),YMSG(2),YMSG(3),YMSG(4)

End

#------------------------------------------------------------------------------------#
#Display single debug message
#------------------------------------------------------------------------------------#
Subprog YDBMSG1(YMSG)
Value Char YMSG

  Infbox "Process File: " + trtcou ,YMSG(0)

End

#------------------------------------------------------------------------------------#
#Open log file
#------------------------------------------------------------------------------------#
Subprog YOPENLOG(YFILENAME)
Value Char YFILENAME
  Openo filpath('tmp',YFILENAME,'') Using [YYY]
End

#------------------------------------------------------------------------------------#
#Close log file
#------------------------------------------------------------------------------------#
Subprog YCLOSELOG()
  Openo Using [YYY]
End


#------------------------------------------------------------------------------------#
#Write to log file
#------------------------------------------------------------------------------------#
Subprog YWRITELOG(YMSG)
Value Char YMSG()()

  Wrseq "Field: " + zoncou Using [YYY]
  Wrseq "Mask: " + maskcou Using [YYY]
  Wrseq "Process File: " + trtcou Using [YYY]

  Wrseq YMSG(0) Using [YYY]
  Wrseq YMSG(1) Using [YYY]
  Wrseq YMSG(2) Using [YYY]
  Wrseq YMSG(3) Using [YYY]
  Wrseq YMSG(4) Using [YYY]

End


#------------------------------------------------------------------------------------#
#validate PJM account value
#------------------------------------------------------------------------------------#
Funprog VAL_PJM(YACC)
Value Char YACC
Local Integer YPRJ

YPRJ = 1
If clalev([F:YGAC]) = 0 : Local File GACCOUNT[YGAC] : Endif

Filter [F:YGAC] Where ACC = [L]YACC
  For [F:YGAC]

  If [F:YGAC]YPJM = 2
    YPRJ = 2
    Break
  Endif

  Next
  Filter [F:YGAC]


End YPRJ

