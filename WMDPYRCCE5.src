#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PYRCCE5

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GCCEPYMPRT" : If clalev([F:CYP])=0 : Local File =OUVTAB [CYP] : Endif
OUVTAB = GDOSSIER+".GCCEPYM" : If clalev([F:CYM])=0 : Local File =OUVTAB [CYM] : Endif
OUVTAB = GDOSSIER+".GCCEGRUPYM" : If clalev([F:CRY])=0 : Local File =OUVTAB [CRY] : Endif
OUVTAB = "Link [CYP]"
Link [CYP] With
& [CYM]CYM0 = [F:CYP]PYM,
& [CRY]CRY0 = [F:CYP]PYM;[F:CYP]GRU(indice);1
& As [LNK_]
& Order By Key CLE = [CYP]DIE;[CYP]PYM;[CYP]CCE
FILTRE = '[F:CYP]DIE=func AFNC.PARAM("BIDIE05","")'
Return

$FERME
If clalev([F:CYP]) : Close local File [CYP] : Endif
If clalev([F:CYM]) : Close local File [CYM] : Endif
If clalev([F:CRY]) : Close local File [CRY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "CCE"
DTYP(1) =  7
DCLE(2) = "PYM"
DTYP(2) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]CCE)>0
 [F:AAA_]CCE = [F:CYP]CCE
Endif
If dim([F:AAA_]PYM)>0
 [F:AAA_]PYM = [F:CYP]PYM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### PYM
[L]FLD="PYM"
[L]FORMULE='[F:CYP]PYM'
If dim([F:AAA_]PYM)>0
 [F:AAA_]PYM = [F:CYP]PYM
Endif

### DESPYM
[L]FLD="DESPYM"
[L]FORMULE='func BICPT.GETPYRDES(2,[F:CYP]PYM)'
If dim([F:AAA_]DESPYM)>0
 [F:AAA_]DESPYM = func BICPT.GETPYRDES(2,[F:CYP]PYM)
Endif

### CCE
[L]FLD="CCE"
[L]FORMULE='[F:CYP]CCE'
If dim([F:AAA_]CCE)>0
 [F:AAA_]CCE = [F:CYP]CCE
Endif

### GRP1
[L]FLD="GRP1"
[L]FORMULE='[F:CYP]GRU(0)'
If dim([F:AAA_]GRP1)>0
 [F:AAA_]GRP1 = [F:CYP]GRU(0)
Endif

### DESGRP1
[L]FLD="DESGRP1"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(0))'
If dim([F:AAA_]DESGRP1)>0
 [F:AAA_]DESGRP1 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(0))
Endif

### GRP2
[L]FLD="GRP2"
[L]FORMULE='[F:CYP]GRU(1)'
If dim([F:AAA_]GRP2)>0
 [F:AAA_]GRP2 = [F:CYP]GRU(1)
Endif

### DESGRP2
[L]FLD="DESGRP2"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(1))'
If dim([F:AAA_]DESGRP2)>0
 [F:AAA_]DESGRP2 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(1))
Endif

### GRP3
[L]FLD="GRP3"
[L]FORMULE='[F:CYP]GRU(2)'
If dim([F:AAA_]GRP3)>0
 [F:AAA_]GRP3 = [F:CYP]GRU(2)
Endif

### DESGRP3
[L]FLD="DESGRP3"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(2))'
If dim([F:AAA_]DESGRP3)>0
 [F:AAA_]DESGRP3 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(2))
Endif

### GRP4
[L]FLD="GRP4"
[L]FORMULE='[F:CYP]GRU(3)'
If dim([F:AAA_]GRP4)>0
 [F:AAA_]GRP4 = [F:CYP]GRU(3)
Endif

### DESGRP4
[L]FLD="DESGRP4"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(3))'
If dim([F:AAA_]DESGRP4)>0
 [F:AAA_]DESGRP4 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(3))
Endif

### GRP5
[L]FLD="GRP5"
[L]FORMULE='[F:CYP]GRU(4)'
If dim([F:AAA_]GRP5)>0
 [F:AAA_]GRP5 = [F:CYP]GRU(4)
Endif

### DESGRP5
[L]FLD="DESGRP5"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(4))'
If dim([F:AAA_]DESGRP5)>0
 [F:AAA_]DESGRP5 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(4))
Endif

### GRP6
[L]FLD="GRP6"
[L]FORMULE='[F:CYP]GRU(5)'
If dim([F:AAA_]GRP6)>0
 [F:AAA_]GRP6 = [F:CYP]GRU(5)
Endif

### DESGRP6
[L]FLD="DESGRP6"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(5))'
If dim([F:AAA_]DESGRP6)>0
 [F:AAA_]DESGRP6 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(5))
Endif

### GRP7
[L]FLD="GRP7"
[L]FORMULE='[F:CYP]GRU(6)'
If dim([F:AAA_]GRP7)>0
 [F:AAA_]GRP7 = [F:CYP]GRU(6)
Endif

### DESGRP7
[L]FLD="DESGRP7"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(6))'
If dim([F:AAA_]DESGRP7)>0
 [F:AAA_]DESGRP7 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(6))
Endif

### GRP8
[L]FLD="GRP8"
[L]FORMULE='[F:CYP]GRU(7)'
If dim([F:AAA_]GRP8)>0
 [F:AAA_]GRP8 = [F:CYP]GRU(7)
Endif

### DESGRP8
[L]FLD="DESGRP8"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(7))'
If dim([F:AAA_]DESGRP8)>0
 [F:AAA_]DESGRP8 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(7))
Endif

### GRP9
[L]FLD="GRP9"
[L]FORMULE='[F:CYP]GRU(8)'
If dim([F:AAA_]GRP9)>0
 [F:AAA_]GRP9 = [F:CYP]GRU(8)
Endif

### DESGRP9
[L]FLD="DESGRP9"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(8))'
If dim([F:AAA_]DESGRP9)>0
 [F:AAA_]DESGRP9 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(8))
Endif

### GRP10
[L]FLD="GRP10"
[L]FORMULE='[F:CYP]GRU(9)'
If dim([F:AAA_]GRP10)>0
 [F:AAA_]GRP10 = [F:CYP]GRU(9)
Endif

### DESGRP10
[L]FLD="DESGRP10"
[L]FORMULE='func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(9))'
If dim([F:AAA_]DESGRP10)>0
 [F:AAA_]DESGRP10 = func BICPT.GETGRPDES(2,[F:CYP]PYM,[F:CYP]GRU(9))
Endif


Return

