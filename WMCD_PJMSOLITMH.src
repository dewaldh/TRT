#<AdxTL>@(#)0.0.0.0 $Revision$Class Sold product list
# Supervisor
## CRUD-CLASSE ## PJMSOLITMH
# 2018-08-27 12:40:21 489


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMSOLITMH,ASTATUS)
Variable Instance PJMSOLITMH Using C_PJMSOLITMH
Variable Integer ASTATUS

If PJMSOLITMH = null : End : Endif

Gosub _AVARIABLES From WMC00PJMSOLITMH

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMSOLITMH

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMSOLITMH,ASTATUS)
Variable Instance PJMSOLITMH Using C_PJMSOLITMH
Variable Integer ASTATUS

If PJMSOLITMH = null : End : Endif

Gosub AVARIABLES From WMC00PJMSOLITMH
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMSOLITMH
Else
 Gosub ADELETE_PJMSOLITMH
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMSOLITMH,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMSOLITMH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMSOLITMH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMSOLITMH.SPLD) : # PJMSOLITMD -- 2
 If PJMSOLITMH.SPLD(A_N2) <> null
& and PJMSOLITMH.SPLD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMSOLITMH.SPLD(A_N2).ASTALIN<>[V]CST_ANEW
   PJMSOLITMH.SPLD(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLD(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMSOLITMH.SPLO) : # PJMSOLITMO -- 3
 If PJMSOLITMH.SPLO(A_N2) <> null
& and PJMSOLITMH.SPLO(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMSOLITMH.SPLO(A_N2).ASTALIN<>[V]CST_ANEW
   PJMSOLITMH.SPLO(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(PJMSOLITMH.SPLD) : # PJMSOLITMD -- 2
 If PJMSOLITMH.SPLD(A_N2) <> null
& and PJMSOLITMH.SPLD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLD(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMSOLITMH.SPLO) : # PJMSOLITMO -- 3
 If PJMSOLITMH.SPLO(A_N2) <> null
& and PJMSOLITMH.SPLO(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMSOLITMH
Trbegin [F:PSOH]
 Gosub ADELETE_PJMSOLITMH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMSOLITMH
[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(PJMSOLITMH.SPLD)
 If PJMSOLITMH.SPLD(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLD(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(PJMSOLITMH.SPLO)
 If PJMSOLITMH.SPLO(A_N2) <> null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2)._ADELETE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMSOLITMH,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00PJMSOLITMH._MAJSQL_PJMSOLITMH(PJMSOLITMH))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMSOLITMH.snapshotEnabled=1
 [L]A_RETIK = PJMSOLITMH.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMSOLITMH.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



