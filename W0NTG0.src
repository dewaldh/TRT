#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management NTG0 

Subprog SAIMSK(IMPFIC,ACTION,IMPTRT)
Value Char IMPFIC
Value Char ACTION
Value Char IMPTRT

Gosub DEFVAR

####################################
## Bloc liste 1
####################################
IMPTBL = 0

## Zone NTGCOD
mkstat = 0
zoncou = "NTGCOD"
indice = 0
If varmode([M]NTGCOD,indice)=0
 If !mkstat
  IMPMOD = 0 : IMPZON = "NTGCOD" : Gosub ACTION From =IMPTRT
 Endif
 If vireblc([M]NTGCOD,2)=""
  mkstat = 1 : GMESSAGE = mess(10,123,1)
 Endif
 If mkstat : GERR = 1 : GZONE = "NTGCOD" : GZNUM = 707 : Endif
 Gosub AFF From GSAISIE
 If mkstat : End : Endif
Endif

## Zone NTGDESAXX
mkstat = 0
zoncou = "NTGDESAXX"
indice = 0
If varinit([M]NTGDESAXX,indice)=0
 SAVACT = GACTION : GACTION = "LECTEXTRA"
 Call LECTEXTRA([M]NTGDESAXX,"NOTCATEG","NTGDESAXX",num$([M:NTG0]NTGTYP),[M:NTG0]NTGCOD) From ATEXTRA
 GACTION = SAVACT
Endif
If !mkstat
 If varmode([M]NTGDESAXX,indice)=0
  If !mkstat
   IMPMOD = 0 : IMPZON = "NTGDESAXX" : Gosub ACTION From =IMPTRT
  Endif
  If vireblc([M]NTGDESAXX,2)=""
   mkstat = 1 : GMESSAGE = mess(10,123,1)
  Endif
  If mkstat : GERR = 1 : GZONE = "NTGDESAXX" : GZNUM = 282 : Endif
  Gosub AFF From GSAISIE
  If mkstat : End : Endif
 Endif
Endif

## Zone NTGSHOAXX
mkstat = 0
zoncou = "NTGSHOAXX"
indice = 0
If varinit([M]NTGSHOAXX,indice)=0
 SAVACT = GACTION : GACTION = "LECTEXTRA"
 Call LECTEXTRA([M]NTGSHOAXX,"NOTCATEG","NTGSHOAXX",num$([M:NTG0]NTGTYP),[M:NTG0]NTGCOD) From ATEXTRA
 GACTION = SAVACT
Endif
If !mkstat
 If varmode([M]NTGSHOAXX,indice)=0
  If !mkstat
   IMPMOD = 0 : IMPZON = "NTGSHOAXX" : Gosub ACTION From =IMPTRT
  Endif
  If vireblc([M]NTGSHOAXX,2)=""
   mkstat = 1 : GMESSAGE = mess(10,123,1)
  Endif
  If mkstat : GERR = 1 : GZONE = "NTGSHOAXX" : GZNUM = 4010 : Endif
  Gosub AFF From GSAISIE
  If mkstat : End : Endif
 Endif
Endif

## Zone NTGTYP
mkstat = 0
zoncou = "NTGTYP"
indice = 0
IMPENT = [M]NTGTYP
WNUM = IMPENT
If varinit([M]NTGTYP,indice)=0
 IMPENT = 1
Endif
If varmode([M]NTGTYP,indice)=0
 [M]NTGTYP(indice) = IMPENT
 If !mkstat
  IMPMOD = 0 : IMPZON = "NTGTYP" : Gosub ACTION From =IMPTRT
  IMPENT = [M]NTGTYP(indice)
 Endif
 If WNUM<>IMPENT or IMPMOD
  SAVACT = GACTION : GACTION = "STD"
  Call AM_NTGTYP(IMPENT) From SUBNTG
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "NTGTYP" : GZNUM = 9518 : Endif
  Gosub AFF From GSAISIE
  If mkstat : End : Endif
 Endif
Endif
[M]NTGTYP = IMPENT

####################################
## Bloc tableau 2
####################################
IMPTBL = 1

## Zone NBLIG
mkstat = 0
zoncou = "NBLIG"
indice = 0
status = 1
zoncou = "NBLIG"
If varmode([M]NBLIG,indice)=0
 If !mkstat
  IMPMOD = 0 : IMPZON = "NBLIG" : Gosub ACTION From =IMPTRT
 Endif
 If !mkstat
  NBLIG = [M]NBLIG
  For nolign=1 To NBLIG
   indice = nolign-1
   [M]NBLIG = nolign
   status = 75
   Call SAI_NBLIG(IMPFIC,ACTION,IMPTRT)
   If mkstat : Break : Endif
  Next nolign
  If mkstat : End : Endif
  indice = 0
 Endif
Endif

mkstat = 0

End

####################################
## Bloc tableau 2
####################################
Subprog SAI_NBLIG(IMPFIC,ACTION,IMPTRT)
Value Char IMPFIC
Value Char ACTION
Value Char IMPTRT

Gosub DEFVAR

IMPTBL = 1

## Zone NBLIG
mkstat = 0
zoncou = "NBLIG"

## Zone FIE
mkstat = 0
zoncou = "FIE"
IMPENT = [M]FIE(indice)
If varinit([M]FIE,indice)=0
 IMPENT = 1
Endif
If varmode([M]FIE,indice)=0
 [M]FIE(indice) = IMPENT
 If !mkstat
  IMPMOD = 0 : IMPZON = "FIE" : Gosub ACTION From =IMPTRT
  IMPENT = [M]FIE(indice)
 Endif
Endif
[M]FIE(indice) = IMPENT

## Zone VCRTYP
mkstat = 0
zoncou = "VCRTYP"
IMPENT = [M]VCRTYP(indice)
If varinit([M]VCRTYP,indice)=0
 IMPENT = 1
Endif
[M]VCRTYP(indice) = IMPENT

## Zone NBLIG
mkstat = 0
zoncou = "NBLIG"

End

$DEFVAR
Local Integer I , J , K , XOK , NOL , IMPENT , IMPMOD , IMPTBL , NBLIG
Local Char    IMPMSK(GLONAMK) , IMPZON(GLONAVA) , NOMZONE(40)
Local Char    PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
Local Char    PARAM(250)(1..20) , SAVACT(20)
Local Char    WCHAR(255)
Local Decimal WNUM
Local Date    WDATE
Local Clbfile WCLOB(9)

IMPMSK = "NTG0"
Return

