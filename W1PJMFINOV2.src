#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PJMFINOV2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:07:56"
A_USER  = "ADMIN"
A_STAMP = "20180828000756"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If func PJMFINOV0.COLGETFMT(3)<>""
    Chgfmt COLUMN6 With func PJMFINOV0.COLGETFMT(3)
   Else
    Chgfmt COLUMN6 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(4)<>""
    Chgfmt COLUMN7 With func PJMFINOV0.COLGETFMT(4)
   Else
    Chgfmt COLUMN7 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(5)<>""
    Chgfmt COLUMN8 With func PJMFINOV0.COLGETFMT(5)
   Else
    Chgfmt COLUMN8 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(6)<>""
    Chgfmt COLUMN9 With func PJMFINOV0.COLGETFMT(6)
   Else
    Chgfmt COLUMN9 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(7)<>""
    Chgfmt COLUMN10 With func PJMFINOV0.COLGETFMT(7)
   Else
    Chgfmt COLUMN10 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(8)<>""
    Chgfmt COLUMN11 With func PJMFINOV0.COLGETFMT(8)
   Else
    Chgfmt COLUMN11 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(9)<>""
    Chgfmt COLUMN12 With func PJMFINOV0.COLGETFMT(9)
   Else
    Chgfmt COLUMN12 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(10)<>""
    Chgfmt COLUMN13 With func PJMFINOV0.COLGETFMT(10)
   Else
    Chgfmt COLUMN13 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(11)<>""
    Chgfmt COLUMN14 With func PJMFINOV0.COLGETFMT(11)
   Else
    Chgfmt COLUMN14 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(12)<>""
    Chgfmt COLUMN15 With func PJMFINOV0.COLGETFMT(12)
   Else
    Chgfmt COLUMN15 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(13)<>""
    Chgfmt COLUMN16 With func PJMFINOV0.COLGETFMT(13)
   Else
    Chgfmt COLUMN16 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(14)<>""
    Chgfmt COLUMN17 With func PJMFINOV0.COLGETFMT(14)
   Else
    Chgfmt COLUMN17 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(15)<>""
    Chgfmt COLUMN18 With func PJMFINOV0.COLGETFMT(15)
   Else
    Chgfmt COLUMN18 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(16)<>""
    Chgfmt COLUMN19 With func PJMFINOV0.COLGETFMT(16)
   Else
    Chgfmt COLUMN19 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(17)<>""
    Chgfmt COLUMN20 With func PJMFINOV0.COLGETFMT(17)
   Else
    Chgfmt COLUMN20 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(18)<>""
    Chgfmt COLUMN21 With func PJMFINOV0.COLGETFMT(18)
   Else
    Chgfmt COLUMN21 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(19)<>""
    Chgfmt COLUMN22 With func PJMFINOV0.COLGETFMT(19)
   Else
    Chgfmt COLUMN22 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(20)<>""
    Chgfmt COLUMN23 With func PJMFINOV0.COLGETFMT(20)
   Else
    Chgfmt COLUMN23 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(21)<>""
    Chgfmt COLUMN24 With func PJMFINOV0.COLGETFMT(21)
   Else
    Chgfmt COLUMN24 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(22)<>""
    Chgfmt COLUMN25 With func PJMFINOV0.COLGETFMT(22)
   Else
    Chgfmt COLUMN25 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(23)<>""
    Chgfmt COLUMN26 With func PJMFINOV0.COLGETFMT(23)
   Else
    Chgfmt COLUMN26 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(24)<>""
    Chgfmt COLUMN27 With func PJMFINOV0.COLGETFMT(24)
   Else
    Chgfmt COLUMN27 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(25)<>""
    Chgfmt COLUMN28 With func PJMFINOV0.COLGETFMT(25)
   Else
    Chgfmt COLUMN28 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(26)<>""
    Chgfmt COLUMN29 With func PJMFINOV0.COLGETFMT(26)
   Else
    Chgfmt COLUMN29 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(27)<>""
    Chgfmt COLUMN30 With func PJMFINOV0.COLGETFMT(27)
   Else
    Chgfmt COLUMN30 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(28)<>""
    Chgfmt COLUMN31 With func PJMFINOV0.COLGETFMT(28)
   Else
    Chgfmt COLUMN31 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(29)<>""
    Chgfmt COLUMN32 With func PJMFINOV0.COLGETFMT(29)
   Else
    Chgfmt COLUMN32 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(30)<>""
    Chgfmt COLUMN33 With func PJMFINOV0.COLGETFMT(30)
   Else
    Chgfmt COLUMN33 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(31)<>""
    Chgfmt COLUMN34 With func PJMFINOV0.COLGETFMT(31)
   Else
    Chgfmt COLUMN34 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(32)<>""
    Chgfmt COLUMN35 With func PJMFINOV0.COLGETFMT(32)
   Else
    Chgfmt COLUMN35 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(33)<>""
    Chgfmt COLUMN36 With func PJMFINOV0.COLGETFMT(33)
   Else
    Chgfmt COLUMN36 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(34)<>""
    Chgfmt COLUMN37 With func PJMFINOV0.COLGETFMT(34)
   Else
    Chgfmt COLUMN37 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(35)<>""
    Chgfmt COLUMN38 With func PJMFINOV0.COLGETFMT(35)
   Else
    Chgfmt COLUMN38 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(36)<>""
    Chgfmt COLUMN39 With func PJMFINOV0.COLGETFMT(36)
   Else
    Chgfmt COLUMN39 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(37)<>""
    Chgfmt COLUMN40 With func PJMFINOV0.COLGETFMT(37)
   Else
    Chgfmt COLUMN40 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(38)<>""
    Chgfmt COLUMN41 With func PJMFINOV0.COLGETFMT(38)
   Else
    Chgfmt COLUMN41 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(39)<>""
    Chgfmt COLUMN42 With func PJMFINOV0.COLGETFMT(39)
   Else
    Chgfmt COLUMN42 With "-K:1X"
   Endif
   If func PJMFINOV0.COLGETFMT(40)<>""
    Chgfmt COLUMN43 With func PJMFINOV0.COLGETFMT(40)
   Else
    Chgfmt COLUMN43 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PJMFINOV2 [PFOV2]
Gosub HORODAT
Local Inpbox "PJMFINOV2" From GFONCTION At A_STAMP With A_WINDPREV Mask [PFOV2] As [SIM_]
Grizo [PFOV2]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PFOV2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=100 : Y1(0)=1 : Y2(0)=20
X1(1)=1 : X2(1)=-2 : Y1(1)=1 : Y2(1)=0
Return

$ON_NBLIG
Onevent BEFORE_INPUT Call AS_NBLIG From W1PJMFINOV2
Onevent BEFORE_AREA Call AV_NBLIG From W1PJMFINOV2
Return

Subprog IB_NBLIG
Local Decimal BASPAG
## Action STD
Call IB_NBLIG From PJMFINOV0
Gosub _AFF
End

Subprog AV_NBLIG
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBLIG" : Gosub TIT_COL From W2PJMFINOV2
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(54893,GBOUT1) From OBJDIV
Call TEXTE(56446,GBOUT2) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1PJMFINOV2
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1PJMFINOV2
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action PJMAUTBUD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJMAUTBUD"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "PJMFINOV0" : PROGSPE = "SPESOV0" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = TECFINOVE.OPPNUM
 PARMSK(2) = [M:PFOV2]BUDCOD(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"OPJMAUTBUD","PJMAUTBUD","") From GSAISIE
 ACTION = "BB1_NBLIG" : PROGSUB = "PJMFINOV0" : PROGSPE = "SPESOV0" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action PJMBUD1T
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "PJMBUD1T"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB2_NBLIG" : PROGSUB = "PJMFINOV0" : PROGSPE = "SPESOV0" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:PFOV2]BUDCOD(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"OPJMBUD1T","SUBPJBU1T","SPEPJBU1T") From GSAISIE
 ACTION = "BB2_NBLIG" : PROGSUB = "PJMFINOV0" : PROGSPE = "SPESOV0" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ICO
Onevent INIT_AREA Call D_ICO(zc) From W1PJMFINOV2
Return

Subprog D_ICO(VALEUR)
Variable Char    VALEUR()
If varinit([M]ICO,indice)=0
 VALEUR = "Folder.GIF"
Endif
Gosub _AFF
End

$ON_EXPFLG
Onevent INIT_AREA Call D_EXPFLG(zc) From W1PJMFINOV2
Return

Subprog D_EXPFLG(VALEUR)
Variable Decimal VALEUR
If varinit([M]EXPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_COLUMN3
Onevent BEFORE_AREA Gosub AV_COLUMN3 From W1PJMFINOV2
Return

$AV_COLUMN3
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:PFOV]SHOCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_COLUMN4
Onevent BEFORE_AREA Gosub AV_COLUMN4 From W1PJMFINOV2
Return

$AV_COLUMN4
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:PFOV]SHOCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_COLUMN5
Onevent BEFORE_AREA Gosub AV_COLUMN5 From W1PJMFINOV2
Return

$AV_COLUMN5
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:PFOV]SHOCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_COLUMN6
Onevent BEFORE_AREA Gosub AV_COLUMN6 From W1PJMFINOV2
Return

$AV_COLUMN6
If func PJMFINOV0.COLGETFMT(3)<>""
 Chgfmt [M]COLUMN6(indice) With func PJMFINOV0.COLGETFMT(3)
Else
 Chgfmt [M]COLUMN6(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN7
Onevent BEFORE_AREA Gosub AV_COLUMN7 From W1PJMFINOV2
Return

$AV_COLUMN7
If func PJMFINOV0.COLGETFMT(4)<>""
 Chgfmt [M]COLUMN7(indice) With func PJMFINOV0.COLGETFMT(4)
Else
 Chgfmt [M]COLUMN7(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN8
Onevent BEFORE_AREA Gosub AV_COLUMN8 From W1PJMFINOV2
Return

$AV_COLUMN8
If func PJMFINOV0.COLGETFMT(5)<>""
 Chgfmt [M]COLUMN8(indice) With func PJMFINOV0.COLGETFMT(5)
Else
 Chgfmt [M]COLUMN8(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN9
Onevent BEFORE_AREA Gosub AV_COLUMN9 From W1PJMFINOV2
Return

$AV_COLUMN9
If func PJMFINOV0.COLGETFMT(6)<>""
 Chgfmt [M]COLUMN9(indice) With func PJMFINOV0.COLGETFMT(6)
Else
 Chgfmt [M]COLUMN9(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN10
Onevent BEFORE_AREA Gosub AV_COLUMN10 From W1PJMFINOV2
Return

$AV_COLUMN10
If func PJMFINOV0.COLGETFMT(7)<>""
 Chgfmt [M]COLUMN10(indice) With func PJMFINOV0.COLGETFMT(7)
Else
 Chgfmt [M]COLUMN10(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN11
Onevent BEFORE_AREA Gosub AV_COLUMN11 From W1PJMFINOV2
Return

$AV_COLUMN11
If func PJMFINOV0.COLGETFMT(8)<>""
 Chgfmt [M]COLUMN11(indice) With func PJMFINOV0.COLGETFMT(8)
Else
 Chgfmt [M]COLUMN11(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN12
Onevent BEFORE_AREA Gosub AV_COLUMN12 From W1PJMFINOV2
Return

$AV_COLUMN12
If func PJMFINOV0.COLGETFMT(9)<>""
 Chgfmt [M]COLUMN12(indice) With func PJMFINOV0.COLGETFMT(9)
Else
 Chgfmt [M]COLUMN12(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN13
Onevent BEFORE_AREA Gosub AV_COLUMN13 From W1PJMFINOV2
Return

$AV_COLUMN13
If func PJMFINOV0.COLGETFMT(10)<>""
 Chgfmt [M]COLUMN13(indice) With func PJMFINOV0.COLGETFMT(10)
Else
 Chgfmt [M]COLUMN13(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN14
Onevent BEFORE_AREA Gosub AV_COLUMN14 From W1PJMFINOV2
Return

$AV_COLUMN14
If func PJMFINOV0.COLGETFMT(11)<>""
 Chgfmt [M]COLUMN14(indice) With func PJMFINOV0.COLGETFMT(11)
Else
 Chgfmt [M]COLUMN14(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN15
Onevent BEFORE_AREA Gosub AV_COLUMN15 From W1PJMFINOV2
Return

$AV_COLUMN15
If func PJMFINOV0.COLGETFMT(12)<>""
 Chgfmt [M]COLUMN15(indice) With func PJMFINOV0.COLGETFMT(12)
Else
 Chgfmt [M]COLUMN15(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN16
Onevent BEFORE_AREA Gosub AV_COLUMN16 From W1PJMFINOV2
Return

$AV_COLUMN16
If func PJMFINOV0.COLGETFMT(13)<>""
 Chgfmt [M]COLUMN16(indice) With func PJMFINOV0.COLGETFMT(13)
Else
 Chgfmt [M]COLUMN16(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN17
Onevent BEFORE_AREA Gosub AV_COLUMN17 From W1PJMFINOV2
Return

$AV_COLUMN17
If func PJMFINOV0.COLGETFMT(14)<>""
 Chgfmt [M]COLUMN17(indice) With func PJMFINOV0.COLGETFMT(14)
Else
 Chgfmt [M]COLUMN17(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN18
Onevent BEFORE_AREA Gosub AV_COLUMN18 From W1PJMFINOV2
Return

$AV_COLUMN18
If func PJMFINOV0.COLGETFMT(15)<>""
 Chgfmt [M]COLUMN18(indice) With func PJMFINOV0.COLGETFMT(15)
Else
 Chgfmt [M]COLUMN18(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN19
Onevent BEFORE_AREA Gosub AV_COLUMN19 From W1PJMFINOV2
Return

$AV_COLUMN19
If func PJMFINOV0.COLGETFMT(16)<>""
 Chgfmt [M]COLUMN19(indice) With func PJMFINOV0.COLGETFMT(16)
Else
 Chgfmt [M]COLUMN19(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN20
Onevent BEFORE_AREA Gosub AV_COLUMN20 From W1PJMFINOV2
Return

$AV_COLUMN20
If func PJMFINOV0.COLGETFMT(17)<>""
 Chgfmt [M]COLUMN20(indice) With func PJMFINOV0.COLGETFMT(17)
Else
 Chgfmt [M]COLUMN20(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN21
Onevent BEFORE_AREA Gosub AV_COLUMN21 From W1PJMFINOV2
Return

$AV_COLUMN21
If func PJMFINOV0.COLGETFMT(18)<>""
 Chgfmt [M]COLUMN21(indice) With func PJMFINOV0.COLGETFMT(18)
Else
 Chgfmt [M]COLUMN21(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN22
Onevent BEFORE_AREA Gosub AV_COLUMN22 From W1PJMFINOV2
Return

$AV_COLUMN22
If func PJMFINOV0.COLGETFMT(19)<>""
 Chgfmt [M]COLUMN22(indice) With func PJMFINOV0.COLGETFMT(19)
Else
 Chgfmt [M]COLUMN22(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN23
Onevent BEFORE_AREA Gosub AV_COLUMN23 From W1PJMFINOV2
Return

$AV_COLUMN23
If func PJMFINOV0.COLGETFMT(20)<>""
 Chgfmt [M]COLUMN23(indice) With func PJMFINOV0.COLGETFMT(20)
Else
 Chgfmt [M]COLUMN23(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN24
Onevent BEFORE_AREA Gosub AV_COLUMN24 From W1PJMFINOV2
Return

$AV_COLUMN24
If func PJMFINOV0.COLGETFMT(21)<>""
 Chgfmt [M]COLUMN24(indice) With func PJMFINOV0.COLGETFMT(21)
Else
 Chgfmt [M]COLUMN24(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN25
Onevent BEFORE_AREA Gosub AV_COLUMN25 From W1PJMFINOV2
Return

$AV_COLUMN25
If func PJMFINOV0.COLGETFMT(22)<>""
 Chgfmt [M]COLUMN25(indice) With func PJMFINOV0.COLGETFMT(22)
Else
 Chgfmt [M]COLUMN25(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN26
Onevent BEFORE_AREA Gosub AV_COLUMN26 From W1PJMFINOV2
Return

$AV_COLUMN26
If func PJMFINOV0.COLGETFMT(23)<>""
 Chgfmt [M]COLUMN26(indice) With func PJMFINOV0.COLGETFMT(23)
Else
 Chgfmt [M]COLUMN26(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN27
Onevent BEFORE_AREA Gosub AV_COLUMN27 From W1PJMFINOV2
Return

$AV_COLUMN27
If func PJMFINOV0.COLGETFMT(24)<>""
 Chgfmt [M]COLUMN27(indice) With func PJMFINOV0.COLGETFMT(24)
Else
 Chgfmt [M]COLUMN27(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN28
Onevent BEFORE_AREA Gosub AV_COLUMN28 From W1PJMFINOV2
Return

$AV_COLUMN28
If func PJMFINOV0.COLGETFMT(25)<>""
 Chgfmt [M]COLUMN28(indice) With func PJMFINOV0.COLGETFMT(25)
Else
 Chgfmt [M]COLUMN28(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_COLUMN29
Onevent BEFORE_AREA Gosub AV_COLUMN29 From W1PJMFINOV2
Return

$AV_COLUMN29
If func PJMFINOV0.COLGETFMT(26)<>""
 Chgfmt [M]COLUMN29(indice) With func PJMFINOV0.COLGETFMT(26)
Else
 Chgfmt [M]COLUMN29(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2PJMFINOV2
Return

$TIT_COL
Gosub TIT_COL From W2PJMFINOV2
Return


