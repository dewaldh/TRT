#<AdxTL>@(#)0.0.0.0 $Revision$Class Table of units of measure
# Supervisor
## CRUD-CLASSE ## TABUNIT
# 2018-08-27 12:52:54 959

Gosub TEST From WMCR_TABUNIT : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,UOM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TABUNIT : TABUNIT
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TABUNIT._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TABUNIT.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TABUNIT.ACTX.AFOLDER,nomap,"")>0
 Local File TABUNIT [TUN]
 Local File TABUNIT [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =TABUNIT.ACTX.AFOLDER+".TABUNIT" [TUN]
 Local File =TABUNIT.ACTX.AFOLDER+".TABUNIT" [AAA_]
 Local File =TABUNIT.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TABUNIT.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [TUN] With
& [AAA_]TUN0 = UOM
& As [LNK_]
Return

############################################################################################
### TABUNIT(WTUN)
############################################################################################
Funprog  _MAJSQL_TABUNIT(WTUN)
Variable Instance WTUN Using C_TABUNIT
Local Integer ASTATUS,A_I,A_J
Default File [F:TUN]
If WTUN.ASTALIN=[V]CST_ANEW
 Call INICRE(WTUN) From ASYRSUB
 SetInstance [F:TUN] With WTUN
 For J=1 To maxtab(WTUN.AXX)
  If WTUN.AXX(J)<>null & WTUN.AXX(J).PRO= "DES" & WTUN.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTUN,WTUN.AXX(J).TEX,"TABUNIT","DES",WTUN.AXX(J).LAN,WTUN.UOM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTUN.AXX)
  If WTUN.AXX(J)<>null & WTUN.AXX(J).PRO= "DESSHO" & WTUN.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTUN,WTUN.AXX(J).TEX,"TABUNIT","DESSHO",WTUN.AXX(J).LAN,WTUN.UOM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TUN]
 If fstat
  Call FSTA("TUN",WTUN,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTUN.updTick = [F:TUN]updTick
Elsif WTUN.ASTALIN=[V]CST_ALL or WTUN.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTUN) From ASYRSUB
 SetInstance [F:TUN] With WTUN
 For J=1 To maxtab(WTUN.AXX)
  If WTUN.AXX(J)<>null & WTUN.AXX(J).PRO= "DES" & WTUN.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTUN,WTUN.AXX(J).TEX,"TABUNIT","DES",WTUN.AXX(J).LAN,WTUN.UOM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTUN.AXX)
  If WTUN.AXX(J)<>null & WTUN.AXX(J).PRO= "DESSHO" & WTUN.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTUN,WTUN.AXX(J).TEX,"TABUNIT","DESSHO",WTUN.AXX(J).LAN,WTUN.UOM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTUN,"TABUNIT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TUN]TUN0 = [F:TUN]UOM
 If fstat
  Call FSTA("TUN",WTUN,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTUN.updTick = [F:TUN]updTick
Elsif WTUN.ASTALIN=[V]CST_ADEL
 SetInstance [F:TUN] With WTUN
 For J=1 To maxtab(WTUN.AXX)
  If WTUN.AXX(J)<>null & WTUN.AXX(J).PRO= "DES"
   Call SUPTEXTRA(WTUN,WTUN.AXX(J).TEX,"TABUNIT","DES",WTUN.AXX(J).LAN,WTUN.UOM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WTUN.AXX)
  If WTUN.AXX(J)<>null & WTUN.AXX(J).PRO= "DESSHO"
   Call SUPTEXTRA(WTUN,WTUN.AXX(J).TEX,"TABUNIT","DESSHO",WTUN.AXX(J).LAN,WTUN.UOM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTUN,"TABUNIT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TUN]TUN0 = [F:TUN]UOM
 If fstat
  Call FSTA("TUN",WTUN,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



