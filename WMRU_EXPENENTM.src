#<AdxTL>@(#)0.0.0.0 $Revision$Class Expenses not approved
# Supervisor
## CRUD-CLASSE ## EXPENENTM
# 2018-08-27 13:14:30 152


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(EXPENENTM,ASTATUS)
Variable Instance EXPENENTM Using R_EXPENENTM
Variable Integer ASTATUS

If EXPENENTM = null : End : Endif

Gosub AVARIABLES From WMR00EXPENENTM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet EXPENENTM.ACTX.AGETAFCRIGHT(EXPENENTM,"GESEXS",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet EXPENENTM.ACTX.AGETAFCRIGHTU(EXPENENTM,"GESEXS",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_EXPENENTM
Else
 Gosub AUPDATE_EXPENENTM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = EXPENENTM.freeSnapshot
EXPENENTM.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
EXPENENTM.ASTALIN = [V]CST_AUPD
EXPENENTM.EXS.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = EXPENENTM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = EXPENENTM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet EXPENENTM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet EXPENENTM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet EXPENENTM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If EXPENENTM.EXS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
EXPENENTM.EXS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(EXPENENTM.EXS.ASTALIN)<>""
 [L]A_ASTALIN = EXPENENTM.EXS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.CODEXPENS)
 If EXPENENTM.EXS.CODEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.CODEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.CODEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.DIMCEN)
 If EXPENENTM.EXS.DIMCEN([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.DIMCEN([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.DIMCEN([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.LNKRATLED)
 If EXPENENTM.EXS.LNKRATLED([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.LNKRATLED([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.LNKRATLED([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.RATEXPENS)
 If EXPENENTM.EXS.RATEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.RATEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.RATEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

For [L]A_I=1 To maxtab(EXPENENTM.EXS.CODEXPENS)
 If EXPENENTM.EXS.CODEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.CODEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.CODEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.DIMCEN)
 If EXPENENTM.EXS.DIMCEN([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.DIMCEN([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.DIMCEN([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.LNKRATLED)
 If EXPENENTM.EXS.LNKRATLED([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.LNKRATLED([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.LNKRATLED([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.RATEXPENS)
 If EXPENENTM.EXS.RATEXPENS([L]A_I)<>null
  [L]A_ASTALIN = EXPENENTM.EXS.RATEXPENS([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.RATEXPENS([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(EXPENENTM.EXS.ASTALIN)<>""
 [L]A_ASTALIN = EXPENENTM.EXS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_EXPENENTM
Trbegin [F:EXS]
 Gosub AUPDATE_EXPENENTM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(EXPENENTM.EXS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 EXPENENTM.EXS.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.CODEXPENS)
 If EXPENENTM.EXS.CODEXPENS([L]A_I)<>null
  If EXPENENTM.EXS.CODEXPENS([L]A_I).ASTALIN=[V]CST_ADEL or EXPENENTM.EXS.CODEXPENS([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENENTM.EXS.CODEXPENS([L]A_I)
   EXPENENTM.EXS.CODEXPENS([L]A_I) = null
  Elsif EXPENENTM.EXS.CODEXPENS([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENENTM.EXS.CODEXPENS([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.DIMCEN)
 If EXPENENTM.EXS.DIMCEN([L]A_I)<>null
  If EXPENENTM.EXS.DIMCEN([L]A_I).ASTALIN=[V]CST_ADEL or EXPENENTM.EXS.DIMCEN([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENENTM.EXS.DIMCEN([L]A_I)
   EXPENENTM.EXS.DIMCEN([L]A_I) = null
  Elsif EXPENENTM.EXS.DIMCEN([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENENTM.EXS.DIMCEN([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.LNKRATLED)
 If EXPENENTM.EXS.LNKRATLED([L]A_I)<>null
  If EXPENENTM.EXS.LNKRATLED([L]A_I).ASTALIN=[V]CST_ADEL or EXPENENTM.EXS.LNKRATLED([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENENTM.EXS.LNKRATLED([L]A_I)
   EXPENENTM.EXS.LNKRATLED([L]A_I) = null
  Elsif EXPENENTM.EXS.LNKRATLED([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENENTM.EXS.LNKRATLED([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
For [L]A_I=1 To maxtab(EXPENENTM.EXS.RATEXPENS)
 If EXPENENTM.EXS.RATEXPENS([L]A_I)<>null
  If EXPENENTM.EXS.RATEXPENS([L]A_I).ASTALIN=[V]CST_ADEL or EXPENENTM.EXS.RATEXPENS([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance EXPENENTM.EXS.RATEXPENS([L]A_I)
   EXPENENTM.EXS.RATEXPENS([L]A_I) = null
  Elsif EXPENENTM.EXS.RATEXPENS([L]A_I).ASTALIN <> [V]CST_ALL
   EXPENENTM.EXS.RATEXPENS([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Return

#-----------------------------------------------------#
$AUPDATE_EXPENENTM
[L]A_ASTALIN = EXPENENTM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.EXS._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = EXPENENTM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet EXPENENTM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If EXPENENTM.snapshotEnabled=1
 [L]A_RETIK = EXPENENTM.revertUpdTick
Endif

[L]ASTATUS = max(fmet EXPENENTM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



