#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import segment
# Supervisor
## CRUD-CLASSE ## BSISCT
# 2018-08-27 12:27:21 362


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(BSISCT,ASTATUS)
Variable Instance BSISCT Using C_BSISCT
Variable Integer ASTATUS

If BSISCT = null : End : Endif

Gosub _AVARIABLES From WMC00BSISCT

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_BSISCT

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSISCT,ASTATUS)
Variable Instance BSISCT Using C_BSISCT
Variable Integer ASTATUS

If BSISCT = null : End : Endif

Gosub AVARIABLES From WMC00BSISCT
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
BSISCT.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSISCT
Else
 Gosub AUPDATE_BSISCT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSISCT.freeSnapshot
BSISCT.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSISCT._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSISCT._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSISCT._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSISCT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISCT.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSISCT.ASTALIN)<>""
 [L]A_ASTALIN = BSISCT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(BSISCT.LINES) : # BSISCTD -- 2
 If BSISCT.LINES(A_N2) <> null
& and BSISCT.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If BSISCT.LINES(A_N2).ASTALIN<>[V]CST_ANEW & BSISCT.ASTALIN=[V]CST_ADEL
   BSISCT.LINES(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If BSISCT.LINES(A_N2).ASTALIN=[V]CST_ANEW & find(BSISCT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   BSISCT.LINES(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(BSISCT.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSISCT.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(BSISCT.LINES) : # BSISCTD -- 2
 If BSISCT.LINES(A_N2) <> null
& and BSISCT.LINES(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(BSISCT.LINES(A_N2).ASTALIN)<>""
   [L]A_ASTALIN = BSISCT.LINES(A_N2).ASTALIN
   [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(BSISCT.ASTALIN)<>""
 [L]A_ASTALIN = BSISCT.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSISCT
Trbegin [F:BSISCT]
 Gosub AUPDATE_BSISCT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_BSISCT
[L]A_ASTALIN = BSISCT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISCT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00BSISCT._MAJSQL_BSISCT(BSISCT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(BSISCT.LINES)
  If BSISCT.LINES(A_N2) <> null and
& (BSISCT.LINES(A_N2).ASTALIN=[L]A_TYPMAJ or
& BSISCT.LINES(A_N2).ASTALIN=[V]CST_ALL)
   If BSISCT.LINES(A_N2).ASTALIN=[L]A_TYPMAJ
    If [V]CST_ASTALIN(BSISCT.LINES(A_N2).ASTALIN)<>""
     [L]A_ASTALIN = BSISCT.LINES(A_N2).ASTALIN
     [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Endif
    [L]ASTATUS = func WMC00BSISCT._MAJSQL_BSISCTD(BSISCT.LINES(A_N2))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    If [V]CST_ASTALIN(BSISCT.LINES(A_N2).ASTALIN)<>""
     [L]A_ASTALIN = BSISCT.LINES(A_N2).ASTALIN
     [L]ASTATUS = max([L]ASTATUS,fmet BSISCT.LINES(A_N2).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
     If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSISCT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISCT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If BSISCT.snapshotEnabled=1
 [L]A_RETIK = BSISCT.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISCT.LINES)
 If BSISCT.LINES(A_N2) <> null
  If BSISCT.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   BSISCT.LINES(A_N2).ASTALIN = [V]CST_ANEW
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet BSISCT.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSISCT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSISCT.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(BSISCT.LINES)
 If BSISCT.LINES(A_N2) <> null
  If BSISCT.LINES(A_N2).ASTALIN=[V]CST_ADEL or BSISCT.LINES(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance BSISCT.LINES(A_N2)
   BSISCT.LINES(A_N2) = null
  Elsif BSISCT.LINES(A_N2).ASTALIN <> [V]CST_ALL
   BSISCT.LINES(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



