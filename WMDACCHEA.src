#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule ACCHEA

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GACCENTRY" : If clalev([F:HAE])=0 : Local File =OUVTAB [HAE] : Endif
OUVTAB = GDOSSIER+".COMPANY" : If clalev([F:CPY])=0 : Local File =OUVTAB [CPY] : Endif
OUVTAB = GDOSSIER+".LEGGTESEL" : If clalev([F:GTES])=0 : Local File =OUVTAB [GTES] : Endif
OUVTAB = GDOSSIER+".GTYPACCENT" : If clalev([F:GTE])=0 : Local File =OUVTAB [GTE] : Endif
OUVTAB = GDOSSIER+".LEGJOUSEL" : If clalev([F:JOUS])=0 : Local File =OUVTAB [JOUS] : Endif
OUVTAB = GDOSSIER+".GJOURNAL" : If clalev([F:JOU])=0 : Local File =OUVTAB [JOU] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AXX])=0 : Local File =OUVTAB [AXX] : Endif
OUVTAB = GDOSSIER+".ATEXTRA" : If clalev([F:AXY])=0 : Local File =OUVTAB [AXY] : Endif
OUVTAB = "Link [HAE]"
Link [HAE] With
& [CPY]CPY0 = [F:HAE]CPY,
& [GTES]GTE1 ~= [F:HAE]TYP;[F:CPY]LEG,
& [GTE]GTE0 = [F:GTES]TYP;[F:GTES]LEG,
& [JOUS]JOU1 ~= [F:HAE]JOU;[F:CPY]LEG,
& [JOU]JOU0 = [F:JOUS]JOU;[F:JOUS]LEG,
& [AXX]AXX0 = "GTYPACCENT";"DESTRA";GLANGUE;[F:GTE]TYP;[F:GTE]LEG,
& [AXY]AXX0 = "GJOURNAL";"DESTRA";GLANGUE;[F:JOU]JOU;[F:JOU]LEG
& As [LNK_]
& Order By Key CLE = [HAE]TYP;[HAE]NUM
FILTRE = ""
Return

$FERME
If clalev([F:HAE]) : Close local File [HAE] : Endif
If clalev([F:CPY]) : Close local File [CPY] : Endif
If clalev([F:GTES]) : Close local File [GTES] : Endif
If clalev([F:GTE]) : Close local File [GTE] : Endif
If clalev([F:JOUS]) : Close local File [JOUS] : Endif
If clalev([F:JOU]) : Close local File [JOU] : Endif
If clalev([F:AXX]) : Close local File [AXX] : Endif
If clalev([F:AXY]) : Close local File [AXY] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "TYP"
DTYP(1) =  7
DCLE(2) = "NUM"
DTYP(2) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]TYP)>0
 [F:AAA_]TYP = [F:HAE]TYP
Endif
If dim([F:AAA_]NUM)>0
 [F:AAA_]NUM = [F:HAE]NUM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
PFLT = "1=1"
Append PFLT, " & [F:AAA_]TYP=[F:HAE]TYP"
Append PFLT, " & [F:AAA_]NUM=[F:HAE]NUM"

End

$MAJFLD
### TYP
[L]FLD="TYP"
[L]FORMULE='[F:HAE]TYP'
If dim([F:AAA_]TYP)>0
 [F:AAA_]TYP = [F:HAE]TYP
Endif

### DESTYP
[L]FLD="DESTYP"
[L]FORMULE='[F:AXX]TEXTE'
If dim([F:AAA_]DESTYP)>0
 [F:AAA_]DESTYP = [F:AXX]TEXTE
Endif

### PERTYP
[L]FLD="PERTYP"
[L]FORMULE='num$([F:GTE]PER)-"-"-mess([F:GTE]PER,621,1)'
If dim([F:AAA_]PERTYP)>0
 [F:AAA_]PERTYP = num$([F:GTE]PER)-"-"-mess([F:GTE]PER,621,1)
Endif

### NUM
[L]FLD="NUM"
[L]FORMULE='[F:HAE]NUM'
If dim([F:AAA_]NUM)>0
 [F:AAA_]NUM = [F:HAE]NUM
Endif

### ORIMOD
[L]FLD="ORIMOD"
[L]FORMULE='num$([F:HAE]ORIMOD)-"-"-mess([F:HAE]ORIMOD,14,1)'
If dim([F:AAA_]ORIMOD)>0
 [F:AAA_]ORIMOD = num$([F:HAE]ORIMOD)-"-"-mess([F:HAE]ORIMOD,14,1)
Endif

### REF
[L]FLD="REF"
[L]FORMULE='[F:HAE]REF'
If dim([F:AAA_]REF)>0
 [F:AAA_]REF = [F:HAE]REF
Endif

### CUR
[L]FLD="CUR"
[L]FORMULE='[F:HAE]CUR'
If dim([F:AAA_]CUR)>0
 [F:AAA_]CUR = [F:HAE]CUR
Endif

### CAT
[L]FLD="CAT"
[L]FORMULE='num$([F:HAE]CAT)-"-"-mess([F:HAE]CAT,618,1)'
If dim([F:AAA_]CAT)>0
 [F:AAA_]CAT = num$([F:HAE]CAT)-"-"-mess([F:HAE]CAT,618,1)
Endif

### STA
[L]FLD="STA"
[L]FORMULE='num$([F:HAE]STA)-"-"-mess([F:HAE]STA,617,1)'
If dim([F:AAA_]STA)>0
 [F:AAA_]STA = num$([F:HAE]STA)-"-"-mess([F:HAE]STA,617,1)
Endif

### ACCDAT
[L]FLD="ACCDAT"
[L]FORMULE='[F:HAE]ACCDAT'
If dim([F:AAA_]ACCDAT)>0
 [F:AAA_]ACCDAT = [F:HAE]ACCDAT
Endif

### ENTDAT
[L]FLD="ENTDAT"
[L]FORMULE='[F:HAE]ENTDAT'
If dim([F:AAA_]ENTDAT)>0
 [F:AAA_]ENTDAT = [F:HAE]ENTDAT
Endif

### VALDAT
[L]FLD="VALDAT"
[L]FORMULE='[F:HAE]VALDAT'
If dim([F:AAA_]VALDAT)>0
 [F:AAA_]VALDAT = [F:HAE]VALDAT
Endif

### DUDAT
[L]FLD="DUDAT"
[L]FORMULE='[F:HAE]DUDDAT'
If dim([F:AAA_]DUDAT)>0
 [F:AAA_]DUDAT = [F:HAE]DUDDAT
Endif

### JOU
[L]FLD="JOU"
[L]FORMULE='[F:HAE]JOU'
If dim([F:AAA_]JOU)>0
 [F:AAA_]JOU = [F:HAE]JOU
Endif

### DES
[L]FLD="DES"
[L]FORMULE='[F:AXY]TEXTE'
If dim([F:AAA_]DES)>0
 [F:AAA_]DES = [F:AXY]TEXTE
Endif

### TYPJOU
[L]FLD="TYPJOU"
[L]FORMULE='num$([F:JOU]TYP)-"-"-mess([F:JOU]TYP,613,1)'
If dim([F:AAA_]TYPJOU)>0
 [F:AAA_]TYPJOU = num$([F:JOU]TYP)-"-"-mess([F:JOU]TYP,613,1)
Endif

### BPRDATVCR
[L]FLD="BPRDATVCR"
[L]FORMULE='[F:HAE]BPRDATVCR'
If dim([F:AAA_]BPRDATVCR)>0
 [F:AAA_]BPRDATVCR = [F:HAE]BPRDATVCR
Endif

### BPRVCR
[L]FLD="BPRVCR"
[L]FORMULE='[F:HAE]BPRVCR'
If dim([F:AAA_]BPRVCR)>0
 [F:AAA_]BPRVCR = [F:HAE]BPRVCR
Endif

### DESVCR
[L]FLD="DESVCR"
[L]FORMULE='[F:HAE]DESVCR'
If dim([F:AAA_]DESVCR)>0
 [F:AAA_]DESVCR = [F:HAE]DESVCR
Endif

### FLGDAS
[L]FLD="FLGDAS"
[L]FORMULE='num$([F:HAE]FLGDAS)-"-"-mess([F:HAE]FLGDAS,1,1)'
If dim([F:AAA_]FLGDAS)>0
 [F:AAA_]FLGDAS = num$([F:HAE]FLGDAS)-"-"-mess([F:HAE]FLGDAS,1,1)
Endif

### FLGFUP
[L]FLD="FLGFUP"
[L]FORMULE='num$([F:HAE]FLGFUP)-"-"-mess([F:HAE]FLGFUP,1,1)'
If dim([F:AAA_]FLGFUP)>0
 [F:AAA_]FLGFUP = num$([F:HAE]FLGFUP)-"-"-mess([F:HAE]FLGFUP,1,1)
Endif

### RVS
[L]FLD="RVS"
[L]FORMULE='num$([F:HAE]RVS)-"-"-mess([F:HAE]RVS,1,1)'
If dim([F:AAA_]RVS)>0
 [F:AAA_]RVS = num$([F:HAE]RVS)-"-"-mess([F:HAE]RVS,1,1)
Endif

### RVSDAT
[L]FLD="RVSDAT"
[L]FORMULE='[F:HAE]RVSDAT'
If dim([F:AAA_]RVSDAT)>0
 [F:AAA_]RVSDAT = [F:HAE]RVSDAT
Endif

### CREUSR
[L]FLD="CREUSR"
[L]FORMULE='[F:HAE]CREUSR'
If dim([F:AAA_]CREUSR)>0
 [F:AAA_]CREUSR = [F:HAE]CREUSR
Endif


Return

