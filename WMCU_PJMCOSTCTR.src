#<AdxTL>@(#)0.0.0.0 $Revision$Class Cost type
# Supervisor
## CRUD-CLASSE ## PJMCOSTCTR
# 2018-08-27 12:40:04 306


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(PJMCOSTCTR,ASTATUS)
Variable Instance PJMCOSTCTR Using C_PJMCOSTCTR
Variable Integer ASTATUS

If PJMCOSTCTR = null : End : Endif

Gosub _AVARIABLES From WMC00PJMCOSTCTR

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_PJMCOSTCTR

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PJMCOSTCTR,ASTATUS)
Variable Instance PJMCOSTCTR Using C_PJMCOSTCTR
Variable Integer ASTATUS

If PJMCOSTCTR = null : End : Endif

Gosub AVARIABLES From WMC00PJMCOSTCTR
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
PJMCOSTCTR.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PJMCOSTCTR
Else
 Gosub AUPDATE_PJMCOSTCTR
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PJMCOSTCTR.freeSnapshot
PJMCOSTCTR.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PJMCOSTCTR._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PJMCOSTCTR._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PJMCOSTCTR._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PJMCOSTCTR.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMCOSTCTR.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PJMCOSTCTR.ASTALIN)<>""
 [L]A_ASTALIN = PJMCOSTCTR.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For [L]A_I=1 To maxtab(PJMCOSTCTR.CDIE)
 If PJMCOSTCTR.CDIE([L]A_I)<>null
  [L]A_ASTALIN = PJMCOSTCTR.CDIE([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.CDIE([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMCOSTCTR.DATRATE) : # PJMCOSTDAT -- 2
 If PJMCOSTCTR.DATRATE(A_N2) <> null
& and PJMCOSTCTR.DATRATE(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMCOSTCTR.DATRATE(A_N2).ASTALIN<>[V]CST_ANEW & PJMCOSTCTR.ASTALIN=[V]CST_ADEL
   PJMCOSTCTR.DATRATE(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[V]CST_ANEW & find(PJMCOSTCTR.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   PJMCOSTCTR.DATRATE(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(PJMCOSTCTR.DATRATE(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMCOSTCTR.DATRATE(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(PJMCOSTCTR.DATRATE) : # PJMCOSTDAT -- 2
 If PJMCOSTCTR.DATRATE(A_N2) <> null
& and PJMCOSTCTR.DATRATE(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(PJMCOSTCTR.DATRATE(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(PJMCOSTCTR.DATRATE(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(PJMCOSTCTR.CDIE)
 If PJMCOSTCTR.CDIE([L]A_I)<>null
  [L]A_ASTALIN = PJMCOSTCTR.CDIE([L]A_I).ASTALIN
  [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.CDIE([L]A_I).ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [V]CST_ASTALIN(PJMCOSTCTR.ASTALIN)<>""
 [L]A_ASTALIN = PJMCOSTCTR.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PJMCOSTCTR
Trbegin [F:PJCC]
 Gosub AUPDATE_PJMCOSTCTR
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_PJMCOSTCTR
[L]A_ASTALIN = PJMCOSTCTR.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00PJMCOSTCTR._MAJSQL_PJMCOSTCTR(PJMCOSTCTR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_TYPMAJ=[V]CST_ADEL,[V]CST_AUPD,[V]CST_ANEW
 #-----------------------#
 For A_N2=1 To maxtab(PJMCOSTCTR.DATRATE)
  If PJMCOSTCTR.DATRATE(A_N2) <> null and
& (PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[L]A_TYPMAJ or
& PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[V]CST_ALL)
   If PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[L]A_TYPMAJ
    Case PJMCOSTCTR.DATRATE(A_N2).ASTALIN
     When [V]CST_AUPD  : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._AUPDATE)
     When [V]CST_ANEW : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._AINSERT)
     When [V]CST_ADEL  : [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.DATRATE(A_N2)._ADELETE)
    Endcase
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Endif
  If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
 Next A_N2
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 #-----------------------#
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = PJMCOSTCTR.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PJMCOSTCTR.snapshotEnabled=1
 [L]A_RETIK = PJMCOSTCTR.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMCOSTCTR.DATRATE)
 If PJMCOSTCTR.DATRATE(A_N2) <> null
  [L]ASTATUS2 = fmet PJMCOSTCTR.DATRATE(A_N2)._AUPDATE_ABORT
  If PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[V]CST_ADEL or PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMCOSTCTR.DATRATE(A_N2)
   PJMCOSTCTR.DATRATE(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet PJMCOSTCTR.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PJMCOSTCTR.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PJMCOSTCTR.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(PJMCOSTCTR.CDIE)
 If PJMCOSTCTR.CDIE([L]A_I)<>null
  If PJMCOSTCTR.CDIE([L]A_I).ASTALIN=[V]CST_ADEL or PJMCOSTCTR.CDIE([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMCOSTCTR.CDIE([L]A_I)
   PJMCOSTCTR.CDIE([L]A_I) = null
  Elsif PJMCOSTCTR.CDIE([L]A_I).ASTALIN <> [V]CST_ALL
   PJMCOSTCTR.CDIE([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(PJMCOSTCTR.DATRATE)
 If PJMCOSTCTR.DATRATE(A_N2) <> null
  [L]ASTATUS2 = fmet PJMCOSTCTR.DATRATE(A_N2)._AUPDATE_AFTER
  If PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[V]CST_ADEL or PJMCOSTCTR.DATRATE(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance PJMCOSTCTR.DATRATE(A_N2)
   PJMCOSTCTR.DATRATE(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



