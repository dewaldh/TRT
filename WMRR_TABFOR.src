#<AdxTL>@(#)0.0.0.0 $Revision$Class Formula table  
# Supervisor
## CRUD-CLASSE ## TABFOR
# 2018-08-27 13:37:31 943


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABFOR [TFO_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABFOR") From ASYRCOM : Endif
Local Instance TABFOR Using R_TABFOR

If !SILENCE : Call TRACE("3 --> New Instance R_TABFOR") From ASYRCOM : Endif
TABFOR = NewInstance R_TABFOR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TFO_]TFO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABFOR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABFOR.AREAD([TFO_]FORTYP,[TFO_]FORCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABFOR.TFO.FORTYP ="-num$(TABFOR.TFO.FORTYP)) From ASYRCOM
 Call TRACE("TABFOR.TFO.FORCOD ="-num$(TABFOR.TFO.FORCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABFOR.TFO.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABFOR.TFO.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TFO_]
FreeGroup TABFOR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABFOR,ACLE,ASTATUS,_ETAG)
Variable Instance TABFOR Using R_TABFOR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _FORTYP
Local Char _FORCOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FORTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_FORCOD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABFOR [TFO]
Default File [F:TFO]
Read [F:TFO]TFO0 = [L]_FORTYP;[L]_FORCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TFO]UPDTICK)>0
 [L]_ETAG = num$([F:TFO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABFOR,ACLE,ASTATUS)
Variable Instance TABFOR Using R_TABFOR
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _FORTYP
Local Char _FORCOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_FORTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_FORCOD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABFOR.AREAD([L]_FORTYP,[L]_FORCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABFOR,_FORTYP,_FORCOD,ASTATUS)
Variable Instance TABFOR Using R_TABFOR
Value Tinyint _FORTYP
Value Char _FORCOD
Variable Integer ASTATUS

If TABFOR = null : End : Endif

Gosub AVARIABLES From WMR00TABFOR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABFOR.APARENT=null
 [L]A_I = TABFOR.freeSnapshot
 TABFOR.snapshotEnabled = 0
 TABFOR.setAccessorEnabled = 0
Endif

If fmet TABFOR.ACTX.AGETAFCRIGHT(TABFOR,"GESTFO",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TFO]
Read [F:TFO]TFO0 = [L]_FORTYP;[L]_FORCOD
If fstat
[L]A_ERROR = num$([L]_FORTYP)+"~"+[L]_FORCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABFOR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABFOR.ACTX.AGETAFCRIGHTR(TABFOR,"GESTFO",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABFOR.ACTX.ASTACRITROLE(TABFOR,num$([L]_FORTYP)+"~"+[L]_FORCOD
& ,"TFO","TFO",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABFOR.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABFOR.TFO.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABFOR.TFO.AREAD([L]_FORTYP,[L]_FORCOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABFOR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABFOR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABFOR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABFOR.APARENT=null
 TABFOR.snapshotEnabled = 1
 TABFOR.setAccessorEnabled = 1
Endif
LogicClose File [TFO]
End



