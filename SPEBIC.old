#<AdxTL>@(#)0.0.0.0 $Revision$
#------------------------------------------------------------------------------------#
#Actions
#------------------------------------------------------------------------------------#
$ACTION
Case ACTION
  When "OUVRE"      : Gosub OUVRE
  When "INICRE"     : Gosub INICRE
  When "RAZCRE"     : Gosub RAZCRE
  When "RAZDUP"     : Gosub RAZDUP
  When "VERIF_MOD"  : Gosub VERIF_MOD
  When "STYLE"      : Gosub STYLE
  When "SETBOUT"    : Gosub SETBOUT
  When Default
Endcase
Return

#------------------------------------------------------------------------------------#
#
#------------------------------------------------------------------------------------#
Subprog AM_PJTH(VALEUR)
Variable Char    VALEUR()

End


#------------------------------------------------------------------------------------#
#Do validations before create
#------------------------------------------------------------------------------------#
$INICRE
  Gosub VALIDATEPJM
Return

#------------------------------------------------------------------------------------#
#Do validations before modifications
#------------------------------------------------------------------------------------#
$VERIF_MOD
  Gosub VALIDATEPJM
Return


#------------------------------------------------------------------------------------#
#Do validations before create
#------------------------------------------------------------------------------------#
$RAZCRE
  #DFCX1-71 - Disable the Job Number, Stage Number, and Supress Statement Printing for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1
    Diszo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
Return


#------------------------------------------------------------------------------------#
#Do validations before duplication
#------------------------------------------------------------------------------------#
$RAZDUP
  #DFCX1-71 - Disable the Job Number, Stage Number, and Supress Statement Printing for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1

    Raz [M:BIC0]YJBNR,YSTANBR,YSTASUPP

    If [M:BIC0]SIVTYP = "HINV" or [M:BIC0]SIVTYP = "HCRN"
      Actzo [M:BIC0]YJBNR,YSTANBR
    Else
      Diszo [M:BIC0]YJBNR,YSTANBR
    Endif

    Diszo [M:BIC0]YSTASUPP
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
Return

#------------------------------------------------------------------------------------#
#Set Buttons
#------------------------------------------------------------------------------------#
$SETBOUT
  #DFCX1-72 - Disable the Delete link for Housing Job Invoices and Credit Notes
  If func AFNC.ACTIV("YHOU") = 1
    #Hide Delete button if its not a Web Service
    If GWEBSERV = 0
      If [M:BIC0]SIVTYP = "HINV"
        Call VIREBOUT(CHAINE,"A") From GOBJET
      Endif
      If [M:BIC0]SIVTYP = "HCRN" and [M:BIC1]STA = 3
        Call VIREBOUT(CHAINE,"A") From GOBJET
      Endif
    Endif
  Endif
Return


#------------------------------------------------------------------------------------#
#Do validations after record is displayed
#------------------------------------------------------------------------------------#
$STYLE
  #DFCX1-71 - Disable the Job Number and Stage Number fields for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1
    Diszo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
Return


#------------------------------------------------------------------------------------#
#Perform SINVTYP validation After Change
#------------------------------------------------------------------------------------#
Subprog AM_SIVTYP(VALEUR)
Variable Char    VALEUR
  #DFCX1-71 - Disable the Job Number and Stage Number fields for Housing Jobs
  If func AFNC.ACTIV("YHOU") = 1
    If VALEUR = "HINV" or VALEUR = "HCRN"
      Actzo [M:BIC0]YJBNR,YSTANBR
    Else
      Raz [M:BIC0]YJBNR,YSTANBR
      Diszo [M:BIC0]YJBNR,YSTANBR
    Endif
    #Enable the Supress printing field if its web services to enable editing value
    If GWEBSERV = 0
      Diszo [M:BIC0]YSTASUPP
    Else
      Actzo [M:BIC0]YSTASUPP
    Endif
    Affzo [M:BIC0]YJBNR,YSTANBR,YSTASUPP
  Endif
End


#------------------------------------------------------------------------------------#
#Perform YJBNR validation Control - DFCX1-71
#------------------------------------------------------------------------------------#
Subprog C_YJBNR(VALEUR)
Variable Char    VALEUR
If func AFNC.ACTIV("YHOU") = 1
  If VALEUR <> ''

    Local Integer I : I = 0
    Local Char REQUEST(255)

    REQUEST(0) = "SELECT t0.YJBNR_0, t0.YJBTYP_0, t0.YHOUTYP_0 FROM YHOUJDET t0"
    REQUEST(0) -= "JOIN CACCE t1 ON t0.YJBNR_0 = t1.CCE_0 AND t1.DIE_0 = 'HJB' AND t1.ENAFLG_0 = 2"
    REQUEST(0) -= "WHERE UPPER(t0.YJBNR_0) = UPPER('" + VALEUR + "') AND t0.YCUSNO_0 = '" + [M:BIC0]BPR + "'"

    For (Char YJOBNUM(15), Char YJOBTYP(20), Char YHOUTYP(50)) From "5" Sql REQUEST As [YLNK]
      I += 1
      Break
    Next

    If I = 0
      #No record found
      Call ERRTIT(func AFNC.MES1(mess(6,6251,1), "Housing Job Number"), "Mandatory field") From GESECRAN
      Raz [M:BIC0]YJBNR
      Affzo [M:BIC0]YJBNR
    Endif

  Endif
Endif
End


#------------------------------------------------------------------------------------#
#Perform YSTANBR validation Control - DFCX1-71
#------------------------------------------------------------------------------------#
Subprog C_YSTANBR(VALEUR)
Variable Decimal    VALEUR
If func AFNC.ACTIV("YHOU") = 1
  If VALEUR <> 0

    Local Integer I : I = 0
    Local Char REQUEST(255)(1..2)

    REQUEST(1) = "SELECT t0.YSTANBR_0, t0.YSTAGENAM_0, t0.YINVNUM_0 FROM YHOUJSTA t0"
    REQUEST(1) -= "JOIN CACCE t1 ON t0.YJBNR_0 = t1.CCE_0 AND t1.DIE_0 = 'HJB' AND t1.ENAFLG_0 = 2"
    REQUEST(1) -= "WHERE t0.YSTANBR_0 = " + num$(VALEUR)

    If [M:BIC0]SIVTYP = "HINV"
      REQUEST(2) -= "AND t0.YDATCLM_0 = '1753-01-01' and t0.YINVNUM_0 = '' and t0.YAMTCLM_0 = 0 and t0.YACTCMPDAT_0 <> '1753-01-01'"
    Elsif [M:BIC0]SIVTYP = "HCRN"
      REQUEST(2) -= "AND t0.YINVNUM_0 <> ''"
    Endif
    REQUEST(2) -= "ORDER BY 1"

    For (Integer YSTAGE, Char YSTAGNAME(50), Char YINVNO(50)) From "5" Sql REQUEST As [YLNK]
      I += 1
      [M:BIC1]INVNUM = [YLNK]YINVNO
      Affzo [M:BIC1]INVNUM
      Break
    Next

    If I = 0
      #No record found
      Call ERRTIT(func AFNC.MES1(mess(6,6251,1), "Housing Job Stage"), "Mandatory field") From GESECRAN
      Raz [M:BIC0]YSTANBR
      Affzo [M:BIC0]YSTANBR
    Endif

  Endif
Endif
End


#------------------------------------------------------------------------------------#
#Open needed tables
#------------------------------------------------------------------------------------#
$OUVRE

If clalev([F:YGAC]) = 0 : Local File GACCOUNT[YGAC] : Endif
If clalev([F:YCCE]) = 0 : Local File CACCE[YCCE] : Endif

Return
#------------------------------------------------------------------------------------#
#
#------------------------------------------------------------------------------------#
Subprog AM_DIE(VALEUR)
Variable Char    VALEUR()
End


#------------------------------------------------------------------------------------#
#
#------------------------------------------------------------------------------------#
Subprog AM_ACC1(VALEUR)
Variable Char    VALEUR()


End


#------------------------------------------------------------------------------------#
#Do PJM validations on accounts
#------------------------------------------------------------------------------------#
Subprog AP_PJTLIN(VALEUR)
Variable Char    VALEUR()

Local Integer YVAL
Local Char YAMT1

If VALEUR = ''
  YVAL = func YDFCGENERAL.VAL_PJM([M:BIC3]ACC1(nolign-1))
  If YVAL = 2
#    Infbox mess(1,6201,1)
    Call ERRTIT( mess(1,6201,1),"Mandatory field") From GESECRAN
    mkstat = 2
  Endif
Else
  If instr(1,VALEUR,":") > 0
    YAMT1 = seg$(VALEUR,instr(1,VALEUR,":")+1,len(VALEUR))
    [M:BIC3]YBUDAMT(nolign-1) =  val( YAMT1)
    Affzo [M:BIC3]YBUDAMT(nolign-1)
    VALEUR = left$(VALEUR,instr(1,VALEUR,":")-1)
  Endif

  #get the amount remaining.
  Local Char ZSQL(255)(3)
  Local Decimal YSPENT
  ZSQL(0) = "select SUM(L.AMTNOTLIN_0 * H.SNS_0) as [amount spent] FROM BPCINVLIG L "
  ZSQL(1) = "LEFT OUTER JOIN PINVOICE H on H.NUM_0 = L.NUM_0 where PJTLIN_0 = '" + VALEUR + "' AND H.STA_0 = 3"

For (Decimal YAMT) From "5" Sql ZSQL As [YLNK]

  [M:BIC3]YALLOCAMT(nolign-1) = [F:YLNK]YAMT
  Affzo [M:BIC3]YALLOCAMT(nolign-1)

  [M:BIC3]YRMNAMT(nolign-1) = [M:BIC3]YBUDAMT(nolign-1) - [M:BIC3]YALLOCAMT(nolign-1)
  Affzo [M:BIC3]YRMNAMT(nolign-1)

  If [M:BIC3]AMTNOTLIN(nolign-1) > [M:BIC3]YRMNAMT(nolign-1)
    GMESSAGE = "The invoice amount before tax is more than the remaining budgeted amount."
    GERR = 1
    zonsui = "[M:BIC3]AMTATILIN(" + num$(nolign - 1) + ")"
  Endif
Next

Endif
End


#------------------------------------------------------------------------------------#
#After line action, do validations
#------------------------------------------------------------------------------------#
Subprog APRES_NBLIG

Local Integer YVAL

    YVAL = func YDFCGENERAL.VAL_PJM([M:BIC3]ACC1(nolign-1)) #From DFCGENERAL
    If YVAL = 2 and [M:BIC3]PJTLIN(nolign-1) = ""
      Call ERRTIT( mess(1,6201,1),"Mandatory field") From GESECRAN
      zonsui = "[M:BIS3]PJTLIN(" + num$(nolign-1) + ")"
      End
    Endif

If [M:BIC3]YRMNAMT(nolign-1) > 0

  If [M:BIC3]AMTNOTLIN(nolign-1) > [M:BIC3]YRMNAMT(nolign-1)
      GMESSAGE = "The invoice amount before tax is more than the remaining budgeted amount."
      GERR = 1
      zonsui = "[M:BIC3]AMTATILIN(" + num$(nolign - 1) + ")"
      End
    Endif
Endif
End



#------------------------------------------------------------------------------------#
#Perform PJM account link validations
#------------------------------------------------------------------------------------#
$VALIDATEPJM

Local Char YMSG(250)

  For I = 0 To [M:BIC3]NBLIG-1

  Filter [F:YGAC] Where ACC = [M:BIC3]ACC1(I)
  For [F:YGAC]

  If [F:YGAC]YPJM = 2 and [M:BIC3]PJTLIN(I) = ""
    YMSG += num$(I + 1) + ", "
  Endif

  Next
  Filter [F:YGAC]

  Next

  If len(YMSG) > 0
    GMESSAGE = mess(2,6201,1) + left$(YMSG,len(YMSG)-2) # "Please enter a project code on the following lines: " + ZMSG
    GERR = 1
    GOK = 0
  Endif

Return

#------------------------------------------------------------------------------------#
#After field validations
#------------------------------------------------------------------------------------#
Subprog AM_CCE1(VALEUR)
Variable Char    VALEUR()
  If func YVALDIE(VALEUR,[M]DIE(0)) = 1
    GMESSAGE = "Invalid value"
    GERR = 1
    mkstat = 2
  Endif
End

Subprog AM_CCE2(VALEUR)
Variable Char    VALEUR()
  If func YVALDIE(VALEUR,[M]DIE(1)) = 1
    GMESSAGE = "Invalid value"
    GERR = 1
    mkstat = 2
  Endif
End

Subprog AM_CCE3(VALEUR)
Variable Char    VALEUR()
  If func YVALDIE(VALEUR,[M]DIE(2)) = 1
    GMESSAGE = "Invalid value"
    GERR = 1
    mkstat = 2
  Endif
End

Subprog AM_CCE4(VALEUR)
Variable Char    VALEUR()
  If func YVALDIE(VALEUR,[M]DIE(3)) = 1
    GMESSAGE = "Invalid value"
    GERR = 1
    mkstat = 2
  Endif
End

Subprog AM_CCE5(VALEUR)
Variable Char    VALEUR()
  If func YVALDIE(VALEUR,[M]DIE(4)) = 1
    GMESSAGE = "Invalid value"
    GERR = 1
    mkstat = 2
  Endif
End


#------------------------------------------------------------------------------------#
#Perform dimension value validations
#------------------------------------------------------------------------------------#
Funprog YVALDIE(YCCE,YDIE)
Value Char YCCE,YDIE
Local Integer YVALID

YVALID = 2

Read[F:YCCE]CCE0 = YDIE;YCCE
If fstat <> 0
  YVALID = 1
Endif

End YVALID

#------------------------------------------------------------------------------------#
#Section automatically added (screen BIC0) 11/07/2018 15:23:25 (DEWAL)
#------------------------------------------------------------------------------------#
Subprog C_BPR(VALEUR)
Variable Char    VALEUR()
  Call C_BPRSEL(VALEUR) From YSELBPC
End

