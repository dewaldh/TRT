#<AdxTL>@(#)0.0.0.0 $Revision$Class Workflow tracking archive
# Sage X3 supervisor
## ACLA-CLASSE ## TCWSOH
# 2018-06-20 07:06:35 615


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : KEYNUM Order no. ( Field A 100)
####################################################################

$SET_KEYNUM
If [L]_AOLDVAL<>this.KEYNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_KEYNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.KEYNUM
 Gosub PROPAGATE_KEYNUM
Endif
Return

$INIT_KEYNUM
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "KEYNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_KEYNUM
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "KEYNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_KEYNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_KEYNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_KEYNUM
[L]CURPRO = "KEYNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.KEYNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_KEYNUM
[L]CURPRO = "KEYNUM"
Return

$_AOTHERS_KEYNUM
[L]CURPRO = "KEYNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_KEYNUM
[L]CURPRO = "KEYNUM"
Return

$PROPAGATE_KEYNUM
this.isReadonly = 0
[L]CURPRO = "KEYNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_KEYNUM
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "KEYNUM"
$_LNKPRO_KEYNUM
Return


####################################################################
# 2 : KEYLIN Line no. ( Field L 8)
####################################################################

$SET_KEYLIN
If [L]_AOLDVAL<>this.KEYLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_KEYLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.KEYLIN
 Gosub PROPAGATE_KEYLIN
Endif
Return

$INIT_KEYLIN
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "KEYLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_KEYLIN
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "KEYLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_KEYLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_KEYLIN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_KEYLIN
[L]CURPRO = "KEYLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.KEYLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_KEYLIN
[L]CURPRO = "KEYLIN"
Return

$_AOTHERS_KEYLIN
[L]CURPRO = "KEYLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_KEYLIN
[L]CURPRO = "KEYLIN"
Return

$PROPAGATE_KEYLIN
this.isReadonly = 0
[L]CURPRO = "KEYLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_KEYLIN
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "KEYLIN"
$_LNKPRO_KEYLIN
Return


####################################################################
# 3 : CHRONO Sequence no. ( Field VCR 20)
####################################################################

$SET_CHRONO
If [L]_AOLDVAL<>this.CHRONO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CHRONO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CHRONO
 Gosub PROPAGATE_CHRONO
Endif
Return

$INIT_CHRONO
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CHRONO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CHRONO
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CHRONO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CHRONO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CHRONO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CHRONO
[L]CURPRO = "CHRONO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CHRONO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CHRONO
[L]CURPRO = "CHRONO"
If vireblc(this.CHRONO,2)<>vireblc(format$("K:20X",this.CHRONO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CHRONO
[L]CURPRO = "CHRONO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CHRONO
[L]CURPRO = "CHRONO"
Return

$PROPAGATE_CHRONO
this.isReadonly = 0
[L]CURPRO = "CHRONO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CHRONO
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CHRONO"
$_LNKPRO_CHRONO
Return


####################################################################
# 4 : DEST Recipient ( Field AUS 5)
####################################################################

$SET_DEST
If [L]_AOLDVAL<>this.DEST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEST
 Gosub PROPAGATE_DEST
Endif
Return

$INIT_DEST
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DEST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEST
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DEST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEST                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEST                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEST
[L]CURPRO = "DEST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEST,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEST
[L]CURPRO = "DEST"
If vireblc(this.DEST,2)<>vireblc(format$("K:5B",this.DEST),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEST
[L]CURPRO = "DEST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEST
[L]CURPRO = "DEST"
Return

$PROPAGATE_DEST
this.isReadonly = 0
[L]CURPRO = "DEST"
Gosub _LNKPRO_DEST
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEST
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DEST"
$_LNKPRO_DEST
If vireblc(this.DEST,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.DEST
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEST","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEST","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 5 : EMAIL Recipient e-mail ( Field MAI 80)
####################################################################

$SET_EMAIL
If [L]_AOLDVAL<>this.EMAIL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EMAIL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EMAIL
 Gosub PROPAGATE_EMAIL
Endif
Return

$INIT_EMAIL
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "EMAIL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EMAIL
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "EMAIL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EMAIL                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EMAIL                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EMAIL
[L]CURPRO = "EMAIL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.EMAIL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EMAIL
[L]CURPRO = "EMAIL"
If vireblc(this.EMAIL,2)<>vireblc(format$("K:80X",this.EMAIL),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_EMAIL
[L]CURPRO = "EMAIL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EMAIL
[L]CURPRO = "EMAIL"
Return

$PROPAGATE_EMAIL
this.isReadonly = 0
[L]CURPRO = "EMAIL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EMAIL
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "EMAIL"
$_LNKPRO_EMAIL
Return


####################################################################
# 6 : NUMGRP Workflow no. ( Field VCR 20)
####################################################################

$SET_NUMGRP
If [L]_AOLDVAL<>this.NUMGRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NUMGRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NUMGRP
 Gosub PROPAGATE_NUMGRP
Endif
Return

$INIT_NUMGRP
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "NUMGRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NUMGRP
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "NUMGRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NUMGRP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NUMGRP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NUMGRP
[L]CURPRO = "NUMGRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NUMGRP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NUMGRP
[L]CURPRO = "NUMGRP"
If vireblc(this.NUMGRP,2)<>vireblc(format$("K:20X",this.NUMGRP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_NUMGRP
[L]CURPRO = "NUMGRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NUMGRP
[L]CURPRO = "NUMGRP"
Return

$PROPAGATE_NUMGRP
this.isReadonly = 0
[L]CURPRO = "NUMGRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NUMGRP
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "NUMGRP"
$_LNKPRO_NUMGRP
Return


####################################################################
# 7 : CPY Company ( Field CPY 5)
####################################################################

$SET_CPY
If [L]_AOLDVAL<>this.CPY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPY
 Gosub PROPAGATE_CPY
Endif
Return

$INIT_CPY
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CPY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPY
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CPY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPY
[L]CURPRO = "CPY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CPY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>vireblc(format$("K:5c",this.CPY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCPY.ACTRLREF(this,"CPY",this.CPY,this.CPY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CPY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPY
[L]CURPRO = "CPY"
Return

$PROPAGATE_CPY
this.isReadonly = 0
[L]CURPRO = "CPY"
Gosub _LNKPRO_CPY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPY
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CPY"
$_LNKPRO_CPY
If vireblc(this.CPY,2)<>""
 # Link COMPANY
 Local File COMPANY [WCPY]
 Read [F:WCPY]CPY0 = this.CPY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$title",[F:WCPY]CPYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$description",[F:WCPY]CPYNAM)
 Endif
 LogicClose File [WCPY]
Endif
Return


####################################################################
# 8 : DELEGUE Delegate ( Field Local menu number 1)
####################################################################

$SET_DELEGUE
If [L]_AOLDVAL<>this.DELEGUE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DELEGUE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DELEGUE
 Gosub PROPAGATE_DELEGUE
Endif
Return

$INIT_DELEGUE
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DELEGUE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DELEGUE=0 and fmet this.AGETATTRIBUTE("DELEGUE","$isMandatory")="true"
 this.DELEGUE = 1
Endif
Return
 
$CONTROL_DELEGUE
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DELEGUE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DELEGUE               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DELEGUE               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DELEGUE
[L]CURPRO = "DELEGUE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DELEGUE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DELEGUE
[L]CURPRO = "DELEGUE"
If this.DELEGUE<0 or this.DELEGUE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DELEGUE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DELEGUE
[L]CURPRO = "DELEGUE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DELEGUE
[L]CURPRO = "DELEGUE"
Return

$PROPAGATE_DELEGUE
this.isReadonly = 0
[L]CURPRO = "DELEGUE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DELEGUE
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DELEGUE"
$_LNKPRO_DELEGUE
Return


####################################################################
# 9 : ENVOI Send mail ( Field Local menu number 2919)
####################################################################

$SET_ENVOI
If [L]_AOLDVAL<>this.ENVOI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ENVOI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ENVOI
 Gosub PROPAGATE_ENVOI
Endif
Return

$INIT_ENVOI
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "ENVOI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ENVOI=0 and fmet this.AGETATTRIBUTE("ENVOI","$isMandatory")="true"
 this.ENVOI = 1
Endif
Return
 
$CONTROL_ENVOI
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "ENVOI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ENVOI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ENVOI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ENVOI
[L]CURPRO = "ENVOI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ENVOI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ENVOI
[L]CURPRO = "ENVOI"
If this.ENVOI<0 or this.ENVOI>len(mess(0,2919,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2919 ->"-num$(this.ENVOI)-mess(99,123,1)):  Return : # Local menu "2919 -> Invalid option
Endif
Return

$_AOTHERS_ENVOI
[L]CURPRO = "ENVOI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ENVOI
[L]CURPRO = "ENVOI"
Return

$PROPAGATE_ENVOI
this.isReadonly = 0
[L]CURPRO = "ENVOI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ENVOI
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "ENVOI"
$_LNKPRO_ENVOI
Return


####################################################################
# 10 : EMETTEUR Sender ( Field AUS 5)
####################################################################

$SET_EMETTEUR
If [L]_AOLDVAL<>this.EMETTEUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EMETTEUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EMETTEUR
 Gosub PROPAGATE_EMETTEUR
Endif
Return

$INIT_EMETTEUR
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "EMETTEUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EMETTEUR
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "EMETTEUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EMETTEUR              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EMETTEUR              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EMETTEUR
[L]CURPRO = "EMETTEUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.EMETTEUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EMETTEUR
[L]CURPRO = "EMETTEUR"
If vireblc(this.EMETTEUR,2)<>vireblc(format$("K:5B",this.EMETTEUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_EMETTEUR
[L]CURPRO = "EMETTEUR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EMETTEUR
[L]CURPRO = "EMETTEUR"
Return

$PROPAGATE_EMETTEUR
this.isReadonly = 0
[L]CURPRO = "EMETTEUR"
Gosub _LNKPRO_EMETTEUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EMETTEUR
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "EMETTEUR"
$_LNKPRO_EMETTEUR
If vireblc(this.EMETTEUR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.EMETTEUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("EMETTEUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("EMETTEUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 11 : MAIENV Email transmission ( Field MAI 80)
####################################################################

$SET_MAIENV
If [L]_AOLDVAL<>this.MAIENV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MAIENV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MAIENV
 Gosub PROPAGATE_MAIENV
Endif
Return

$INIT_MAIENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "MAIENV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MAIENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "MAIENV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MAIENV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MAIENV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MAIENV
[L]CURPRO = "MAIENV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MAIENV,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MAIENV
[L]CURPRO = "MAIENV"
If vireblc(this.MAIENV,2)<>vireblc(format$("K:80X",this.MAIENV),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MAIENV
[L]CURPRO = "MAIENV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MAIENV
[L]CURPRO = "MAIENV"
Return

$PROPAGATE_MAIENV
this.isReadonly = 0
[L]CURPRO = "MAIENV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MAIENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "MAIENV"
$_LNKPRO_MAIENV
Return


####################################################################
# 12 : DATENV Issue date ( Field D)
####################################################################

$SET_DATENV
If [L]_AOLDVAL<>this.DATENV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DATENV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DATENV
 Gosub PROPAGATE_DATENV
Endif
Return

$INIT_DATENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATENV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DATENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATENV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DATENV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DATENV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DATENV
[L]CURPRO = "DATENV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DATENV=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DATENV
[L]CURPRO = "DATENV"
Return

$_AOTHERS_DATENV
[L]CURPRO = "DATENV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DATENV
[L]CURPRO = "DATENV"
Return

$PROPAGATE_DATENV
this.isReadonly = 0
[L]CURPRO = "DATENV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DATENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATENV"
$_LNKPRO_DATENV
Return


####################################################################
# 13 : TIMENV Issue time ( Field HS 8)
####################################################################

$SET_TIMENV
If [L]_AOLDVAL<>this.TIMENV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TIMENV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TIMENV
 Gosub PROPAGATE_TIMENV
Endif
Return

$INIT_TIMENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TIMENV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TIMENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TIMENV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TIMENV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TIMENV                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TIMENV
[L]CURPRO = "TIMENV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TIMENV,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TIMENV
[L]CURPRO = "TIMENV"
If vireblc(this.TIMENV,2)<>vireblc(format$("Kz:8X",this.TIMENV),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TIMENV
[L]CURPRO = "TIMENV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TIMENV
[L]CURPRO = "TIMENV"
Return

$PROPAGATE_TIMENV
this.isReadonly = 0
[L]CURPRO = "TIMENV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TIMENV
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TIMENV"
$_LNKPRO_TIMENV
Return


####################################################################
# 14 : NATURE Type of workflow ( Field Miscellaneous table number)
####################################################################

$SET_NATURE
If [L]_AOLDVAL<>this.NATURE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NATURE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NATURE
 Gosub PROPAGATE_NATURE
Endif
Return

$INIT_NATURE
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "NATURE"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"NATURE",this.NATURE,50)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NATURE
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "NATURE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NATURE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NATURE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NATURE
[L]CURPRO = "NATURE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NATURE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NATURE
[L]CURPRO = "NATURE"
If vireblc(this.NATURE,2)<>vireblc(format$("K:20B",this.NATURE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_NATURE
[L]CURPRO = "NATURE"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"NATURE",this.NATURE,50,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NATURE
[L]CURPRO = "NATURE"
Return

$PROPAGATE_NATURE
this.isReadonly = 0
[L]CURPRO = "NATURE"
Gosub _LNKPRO_NATURE
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NATURE
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "NATURE"
$_LNKPRO_NATURE
If vireblc(this.NATURE,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 50;this.NATURE
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("NATURE","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("NATURE","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 15 : TEXSUI Tracked text ( Field A 250)
####################################################################

$SET_TEXSUI
If [L]_AOLDVAL<>this.TEXSUI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TEXSUI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TEXSUI
 Gosub PROPAGATE_TEXSUI
Endif
Return

$INIT_TEXSUI
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TEXSUI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TEXSUI
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TEXSUI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TEXSUI                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TEXSUI                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TEXSUI
[L]CURPRO = "TEXSUI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TEXSUI,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TEXSUI
[L]CURPRO = "TEXSUI"
Return

$_AOTHERS_TEXSUI
[L]CURPRO = "TEXSUI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TEXSUI
[L]CURPRO = "TEXSUI"
Return

$PROPAGATE_TEXSUI
this.isReadonly = 0
[L]CURPRO = "TEXSUI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TEXSUI
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TEXSUI"
$_LNKPRO_TEXSUI
Return


####################################################################
# 16 : TYPEVT Event type ( Field Local menu number 988)
####################################################################

$SET_TYPEVT
If [L]_AOLDVAL<>this.TYPEVT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPEVT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPEVT
 Gosub PROPAGATE_TYPEVT
Endif
Return

$INIT_TYPEVT
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TYPEVT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPEVT=0 and fmet this.AGETATTRIBUTE("TYPEVT","$isMandatory")="true"
 this.TYPEVT = 1
Endif
Return
 
$CONTROL_TYPEVT
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TYPEVT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPEVT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPEVT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPEVT
[L]CURPRO = "TYPEVT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPEVT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPEVT
[L]CURPRO = "TYPEVT"
If this.TYPEVT<0 or this.TYPEVT>len(mess(0,988,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"988 ->"-num$(this.TYPEVT)-mess(99,123,1)):  Return : # Local menu "988 -> Invalid option
Endif
Return

$_AOTHERS_TYPEVT
[L]CURPRO = "TYPEVT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPEVT
[L]CURPRO = "TYPEVT"
Return

$PROPAGATE_TYPEVT
this.isReadonly = 0
[L]CURPRO = "TYPEVT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPEVT
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TYPEVT"
$_LNKPRO_TYPEVT
Return


####################################################################
# 17 : CODEVT Event code ( Field A 15)
####################################################################

$SET_CODEVT
If [L]_AOLDVAL<>this.CODEVT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODEVT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODEVT
 Gosub PROPAGATE_CODEVT
Endif
Return

$INIT_CODEVT
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CODEVT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODEVT
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CODEVT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODEVT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODEVT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODEVT
[L]CURPRO = "CODEVT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODEVT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODEVT
[L]CURPRO = "CODEVT"
Return

$_AOTHERS_CODEVT
[L]CURPRO = "CODEVT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODEVT
[L]CURPRO = "CODEVT"
Return

$PROPAGATE_CODEVT
this.isReadonly = 0
[L]CURPRO = "CODEVT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODEVT
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CODEVT"
$_LNKPRO_CODEVT
Return


####################################################################
# 18 : CODWRK Workflow code ( Field AWA 10)
####################################################################

$SET_CODWRK
If [L]_AOLDVAL<>this.CODWRK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODWRK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODWRK
 Gosub PROPAGATE_CODWRK
Endif
Return

$INIT_CODWRK
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CODWRK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODWRK
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CODWRK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODWRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODWRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODWRK
[L]CURPRO = "CODWRK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODWRK,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODWRK
[L]CURPRO = "CODWRK"
If vireblc(this.CODWRK,2)<>vireblc(format$("K:10c",this.CODWRK),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODWRK
[L]CURPRO = "CODWRK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODWRK
[L]CURPRO = "CODWRK"
Return

$PROPAGATE_CODWRK
this.isReadonly = 0
[L]CURPRO = "CODWRK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODWRK
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "CODWRK"
$_LNKPRO_CODWRK
Return


####################################################################
# 19 : OPERATION Action on ( Field A 20)
####################################################################

$SET_OPERATION
If [L]_AOLDVAL<>this.OPERATION
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OPERATION
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OPERATION
 Gosub PROPAGATE_OPERATION
Endif
Return

$INIT_OPERATION
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "OPERATION"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OPERATION
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "OPERATION"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OPERATION             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OPERATION             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OPERATION
[L]CURPRO = "OPERATION"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.OPERATION,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OPERATION
[L]CURPRO = "OPERATION"
Return

$_AOTHERS_OPERATION
[L]CURPRO = "OPERATION"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OPERATION
[L]CURPRO = "OPERATION"
Return

$PROPAGATE_OPERATION
this.isReadonly = 0
[L]CURPRO = "OPERATION"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OPERATION
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "OPERATION"
$_LNKPRO_OPERATION
Return


####################################################################
# 20 : DATMAXSIG Signature date limit ( Field D)
####################################################################

$SET_DATMAXSIG
If [L]_AOLDVAL<>this.DATMAXSIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DATMAXSIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DATMAXSIG
 Gosub PROPAGATE_DATMAXSIG
Endif
Return

$INIT_DATMAXSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATMAXSIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DATMAXSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATMAXSIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DATMAXSIG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DATMAXSIG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DATMAXSIG
[L]CURPRO = "DATMAXSIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DATMAXSIG=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DATMAXSIG
[L]CURPRO = "DATMAXSIG"
Return

$_AOTHERS_DATMAXSIG
[L]CURPRO = "DATMAXSIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DATMAXSIG
[L]CURPRO = "DATMAXSIG"
Return

$PROPAGATE_DATMAXSIG
this.isReadonly = 0
[L]CURPRO = "DATMAXSIG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DATMAXSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATMAXSIG"
$_LNKPRO_DATMAXSIG
Return


####################################################################
# 21 : FLGSIG Signature flag ( Field Local menu number 2922)
####################################################################

$SET_FLGSIG
If [L]_AOLDVAL<>this.FLGSIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGSIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGSIG
 Gosub PROPAGATE_FLGSIG
Endif
Return

$INIT_FLGSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "FLGSIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGSIG=0 and fmet this.AGETATTRIBUTE("FLGSIG","$isMandatory")="true"
 this.FLGSIG = 1
Endif
Return
 
$CONTROL_FLGSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "FLGSIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGSIG
[L]CURPRO = "FLGSIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGSIG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGSIG
[L]CURPRO = "FLGSIG"
If this.FLGSIG<0 or this.FLGSIG>len(mess(0,2922,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2922 ->"-num$(this.FLGSIG)-mess(99,123,1)):  Return : # Local menu "2922 -> Invalid option
Endif
Return

$_AOTHERS_FLGSIG
[L]CURPRO = "FLGSIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGSIG
[L]CURPRO = "FLGSIG"
Return

$PROPAGATE_FLGSIG
this.isReadonly = 0
[L]CURPRO = "FLGSIG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "FLGSIG"
$_LNKPRO_FLGSIG
Return


####################################################################
# 22 : USRTOP First recipient ( Field AUS 5)
####################################################################

$SET_USRTOP
If [L]_AOLDVAL<>this.USRTOP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRTOP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRTOP
 Gosub PROPAGATE_USRTOP
Endif
Return

$INIT_USRTOP
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "USRTOP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USRTOP
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "USRTOP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRTOP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRTOP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRTOP
[L]CURPRO = "USRTOP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USRTOP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRTOP
[L]CURPRO = "USRTOP"
If vireblc(this.USRTOP,2)<>vireblc(format$("K:5B",this.USRTOP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USRTOP
[L]CURPRO = "USRTOP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRTOP
[L]CURPRO = "USRTOP"
Return

$PROPAGATE_USRTOP
this.isReadonly = 0
[L]CURPRO = "USRTOP"
Gosub _LNKPRO_USRTOP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRTOP
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "USRTOP"
$_LNKPRO_USRTOP
If vireblc(this.USRTOP,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.USRTOP
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USRTOP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USRTOP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 23 : ACTSIG Answer ( Field Miscellaneous table number)
####################################################################

$SET_ACTSIG
If [L]_AOLDVAL<>this.ACTSIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACTSIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACTSIG
 Gosub PROPAGATE_ACTSIG
Endif
Return

$INIT_ACTSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "ACTSIG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"ACTSIG",this.ACTSIG,54)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACTSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "ACTSIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACTSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACTSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACTSIG
[L]CURPRO = "ACTSIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACTSIG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACTSIG
[L]CURPRO = "ACTSIG"
If vireblc(this.ACTSIG,2)<>vireblc(format$("K:20B",this.ACTSIG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACTSIG
[L]CURPRO = "ACTSIG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"ACTSIG",this.ACTSIG,54,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACTSIG
[L]CURPRO = "ACTSIG"
Return

$PROPAGATE_ACTSIG
this.isReadonly = 0
[L]CURPRO = "ACTSIG"
Gosub _LNKPRO_ACTSIG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACTSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "ACTSIG"
$_LNKPRO_ACTSIG
If vireblc(this.ACTSIG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 54;this.ACTSIG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACTSIG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACTSIG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 24 : USRSIG Signatory user ( Field AUS 5)
####################################################################

$SET_USRSIG
If [L]_AOLDVAL<>this.USRSIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRSIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRSIG
 Gosub PROPAGATE_USRSIG
Endif
Return

$INIT_USRSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "USRSIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USRSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "USRSIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRSIG
[L]CURPRO = "USRSIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USRSIG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRSIG
[L]CURPRO = "USRSIG"
If vireblc(this.USRSIG,2)<>vireblc(format$("K:5B",this.USRSIG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USRSIG
[L]CURPRO = "USRSIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRSIG
[L]CURPRO = "USRSIG"
Return

$PROPAGATE_USRSIG
this.isReadonly = 0
[L]CURPRO = "USRSIG"
Gosub _LNKPRO_USRSIG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "USRSIG"
$_LNKPRO_USRSIG
If vireblc(this.USRSIG,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.USRSIG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USRSIG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USRSIG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 25 : MAISIG Email signature ( Field MAI 80)
####################################################################

$SET_MAISIG
If [L]_AOLDVAL<>this.MAISIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MAISIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MAISIG
 Gosub PROPAGATE_MAISIG
Endif
Return

$INIT_MAISIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "MAISIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MAISIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "MAISIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MAISIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MAISIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MAISIG
[L]CURPRO = "MAISIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MAISIG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MAISIG
[L]CURPRO = "MAISIG"
If vireblc(this.MAISIG,2)<>vireblc(format$("K:80X",this.MAISIG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MAISIG
[L]CURPRO = "MAISIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MAISIG
[L]CURPRO = "MAISIG"
Return

$PROPAGATE_MAISIG
this.isReadonly = 0
[L]CURPRO = "MAISIG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MAISIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "MAISIG"
$_LNKPRO_MAISIG
Return


####################################################################
# 26 : DATSIG Signature date ( Field D)
####################################################################

$SET_DATSIG
If [L]_AOLDVAL<>this.DATSIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DATSIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DATSIG
 Gosub PROPAGATE_DATSIG
Endif
Return

$INIT_DATSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATSIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DATSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATSIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DATSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DATSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DATSIG
[L]CURPRO = "DATSIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DATSIG=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DATSIG
[L]CURPRO = "DATSIG"
Return

$_AOTHERS_DATSIG
[L]CURPRO = "DATSIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DATSIG
[L]CURPRO = "DATSIG"
Return

$PROPAGATE_DATSIG
this.isReadonly = 0
[L]CURPRO = "DATSIG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DATSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "DATSIG"
$_LNKPRO_DATSIG
Return


####################################################################
# 27 : TIMSIG Signature time ( Field HS 8)
####################################################################

$SET_TIMSIG
If [L]_AOLDVAL<>this.TIMSIG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TIMSIG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TIMSIG
 Gosub PROPAGATE_TIMSIG
Endif
Return

$INIT_TIMSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TIMSIG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TIMSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TIMSIG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TIMSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TIMSIG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TIMSIG
[L]CURPRO = "TIMSIG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TIMSIG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TIMSIG
[L]CURPRO = "TIMSIG"
If vireblc(this.TIMSIG,2)<>vireblc(format$("Kz:8X",this.TIMSIG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TIMSIG
[L]CURPRO = "TIMSIG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TIMSIG
[L]CURPRO = "TIMSIG"
Return

$PROPAGATE_TIMSIG
this.isReadonly = 0
[L]CURPRO = "TIMSIG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TIMSIG
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "TIMSIG"
$_LNKPRO_TIMSIG
Return


####################################################################
# 28 : REASON Response reason ( Field DES 30)
####################################################################

$SET_REASON
If [L]_AOLDVAL<>this.REASON
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REASON
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REASON
 Gosub PROPAGATE_REASON
Endif
Return

$INIT_REASON
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REASON"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REASON
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REASON"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REASON                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REASON                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REASON
[L]CURPRO = "REASON"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.REASON,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REASON
[L]CURPRO = "REASON"
If vireblc(this.REASON,2)<>vireblc(format$("K:30X",this.REASON),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_REASON
[L]CURPRO = "REASON"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REASON
[L]CURPRO = "REASON"
Return

$PROPAGATE_REASON
this.isReadonly = 0
[L]CURPRO = "REASON"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REASON
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REASON"
$_LNKPRO_REASON
Return


####################################################################
# 29 : REANUM Reason no. ( Field ADV 0)
####################################################################

$SET_REANUM
If [L]_AOLDVAL<>this.REANUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REANUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REANUM
 Gosub PROPAGATE_REANUM
Endif
Return

$INIT_REANUM
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REANUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REANUM
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REANUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REANUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REANUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REANUM
[L]CURPRO = "REANUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.REANUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REANUM
[L]CURPRO = "REANUM"
Return

$_AOTHERS_REANUM
[L]CURPRO = "REANUM"
If this.REANUM<>0
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPADV.ACTRLREF(this,"REANUM",this.REANUM,this.REANUM,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.REANUM<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REANUM
[L]CURPRO = "REANUM"
Return

$PROPAGATE_REANUM
this.isReadonly = 0
[L]CURPRO = "REANUM"
Gosub _LNKPRO_REANUM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REANUM
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REANUM"
$_LNKPRO_REANUM
If this.REANUM<>0
 # Link ATABTAB
 Local File ATABTAB [WADV]
 Read [F:WADV]CODE = this.REANUM
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABTAB" & ZONE="SHODES" & IDENT1=[F:WADV]NUMCAR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("REANUM","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABTAB" & ZONE="LNGDES" & IDENT1=[F:WADV]NUMCAR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("REANUM","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADV]
Endif
Return


####################################################################
# 30 : REACOD Reason code ( Field Miscellaneous table number)
####################################################################

$SET_REACOD
If [L]_AOLDVAL<>this.REACOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_REACOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.REACOD
 Gosub PROPAGATE_REACOD
Endif
Return

$INIT_REACOD
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REACOD"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"REACOD",this.REACOD,this.REANUM)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_REACOD
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REACOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_REACOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_REACOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_REACOD
[L]CURPRO = "REACOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.REACOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_REACOD
[L]CURPRO = "REACOD"
If vireblc(this.REACOD,2)<>vireblc(format$("K:20B",this.REACOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_REACOD
[L]CURPRO = "REACOD"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"REACOD",this.REACOD,this.REANUM,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_REACOD
[L]CURPRO = "REACOD"
Return

$PROPAGATE_REACOD
this.isReadonly = 0
[L]CURPRO = "REACOD"
Gosub _LNKPRO_REACOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_REACOD
Gosub DECLARE_VAR From WMC0TCWSOH
[L]CURPRO = "REACOD"
$_LNKPRO_REACOD
If vireblc(this.REACOD,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = this.REANUM;this.REACOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("REACOD","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("REACOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return




