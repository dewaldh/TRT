#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Routing
# Supervisor
## CRUD-CLASSE ## CCMIMPROH
# 2018-08-27 12:29:21 724


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(CCMIMPROH,ASTATUS)
Variable Instance CCMIMPROH Using C_CCMIMPROH
Variable Integer ASTATUS

If CCMIMPROH = null : End : Endif

Gosub _AVARIABLES From WMC00CCMIMPROH

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CCMIMPROH

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(CCMIMPROH,ASTATUS)
Variable Instance CCMIMPROH Using C_CCMIMPROH
Variable Integer ASTATUS

If CCMIMPROH = null : End : Endif

Gosub AVARIABLES From WMC00CCMIMPROH
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_CCMIMPROH
Else
 Gosub AINSERT_CCMIMPROH
Endif

Gosub _AINSERT_AFTER
[L]A_I = CCMIMPROH.freeSnapshot
CCMIMPROH.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPROH._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPROH._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPROH._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If CCMIMPROH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPROH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_CCMIMPROH
Trbegin [F:CCMROH]
 Gosub AINSERT_CCMIMPROH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_CCMIMPROH
Raz [F:CCMROH]
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00CCMIMPROH._MAJSQL_CCMIMPROH(CCMIMPROH))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROH.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If CCMIMPROH.snapshotEnabled=1
 [L]A_RETIK = CCMIMPROH.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMIMPROH.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(CCMIMPROH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMIMPROH.ASTALIN = [V]CST_ALL
Endif
Return



