#<AdxTL>@(#)0.0.0.0 $Revision$Class Constants
# Supervisor
## ACLA-CLASSE ## ACONSTANT
# 2018-08-27 12:19:07 024


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CODVAR Variable code ( Field ACST 30)
####################################################################

$GET_CODVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODVAR"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_CODVAR
If [L]_AOLDVAL<>this.CODVAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODVAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODVAR
 Gosub PROPAGATE_CODVAR
Endif
Return

$INIT_CODVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODVAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODVAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODVAR
[L]CURPRO = "CODVAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODVAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODVAR
[L]CURPRO = "CODVAR"
If vireblc(this.CODVAR,2)<>vireblc(format$("KTD:A11u",this.CODVAR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODVAR
[L]CURPRO = "CODVAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODVAR
[L]CURPRO = "CODVAR"
Return

$PROPAGATE_CODVAR
this.isReadonly = 0
[L]CURPRO = "CODVAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODVAR"
$_LNKPRO_CODVAR
Return

$_ALOADATTRIBUTE_CODVAR
[L]ASTATUS = fmet this.ASETATTRIBUTE("CODVAR","$isMandatory","true")
Return


####################################################################
# 2 : INTIT Description ( Field ATX)
####################################################################

$GET_INTIT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "INTIT"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTIT
If [L]_AOLDVAL<>this.INTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTIT
 Gosub PROPAGATE_INTIT
Endif
Return

$INIT_INTIT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "INTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTIT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "INTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTIT
[L]CURPRO = "INTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTIT
[L]CURPRO = "INTIT"
Return

$_AOTHERS_INTIT
[L]CURPRO = "INTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTIT
[L]CURPRO = "INTIT"
Return

$PROPAGATE_INTIT
this.isReadonly = 0
[L]CURPRO = "INTIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTIT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "INTIT"
$_LNKPRO_INTIT
Return

$_ALOADATTRIBUTE_INTIT
[L]ASTATUS = fmet this.ASETATTRIBUTE("INTIT","$isMandatory","true")
Return


####################################################################
# 3 : ACONST Constant ( Field A 20)
####################################################################

$SET_ACONST
If [L]_AOLDVAL<>this.ACONST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACONST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACONST
 Gosub PROPAGATE_ACONST
Endif
Return

$INIT_ACONST
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "ACONST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACONST
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "ACONST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACONST                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACONST                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACONST
[L]CURPRO = "ACONST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACONST,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACONST
[L]CURPRO = "ACONST"
Return

$_AOTHERS_ACONST
[L]CURPRO = "ACONST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACONST
[L]CURPRO = "ACONST"
Return

$PROPAGATE_ACONST
this.isReadonly = 0
[L]CURPRO = "ACONST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACONST
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "ACONST"
$_LNKPRO_ACONST
Return


####################################################################
# 4 : MODULE Module ( Field Local menu number 14)
####################################################################

$SET_MODULE
If [L]_AOLDVAL<>this.MODULE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODULE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODULE
 Gosub PROPAGATE_MODULE
Endif
Return

$INIT_MODULE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "MODULE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MODULE=0 and fmet this.AGETATTRIBUTE("MODULE","$isMandatory")="true"
 this.MODULE = 1
Endif
Return
 
$CONTROL_MODULE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "MODULE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODULE
[L]CURPRO = "MODULE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODULE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODULE
[L]CURPRO = "MODULE"
If this.MODULE<0 or this.MODULE>len(mess(0,14,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"14 ->"-num$(this.MODULE)-mess(99,123,1)):  Return : # Local menu "14 -> Invalid option
Endif
Return

$_AOTHERS_MODULE
[L]CURPRO = "MODULE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODULE
[L]CURPRO = "MODULE"
Return

$PROPAGATE_MODULE
this.isReadonly = 0
[L]CURPRO = "MODULE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODULE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "MODULE"
$_LNKPRO_MODULE
Return


####################################################################
# 5 : CODACT Activity code ( Field ACV 5)
####################################################################

$SET_CODACT
If [L]_AOLDVAL<>this.CODACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODACT
 Gosub PROPAGATE_CODACT
Endif
Return

$INIT_CODACT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODACT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODACT
[L]CURPRO = "CODACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODACT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>vireblc(format$("KTD:5B",this.CODACT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACV.ACTRLREF(this,"CODACT",this.CODACT,this.CODACT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODACT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODACT
[L]CURPRO = "CODACT"
Return

$PROPAGATE_CODACT
this.isReadonly = 0
[L]CURPRO = "CODACT"
Gosub _LNKPRO_CODACT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODACT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CODACT"
$_LNKPRO_CODACT
If vireblc(this.CODACT,2)<>""
 # Link ACTIV
 Local File ACTIV [WACV]
 Read [F:WACV]CODACT = this.CODACT
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WACV]LIBACT & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODACT","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WACV]
Endif
Return


####################################################################
# 6 : TYPVAR Type ( Field Local menu number 7882)
####################################################################

$SET_TYPVAR
If [L]_AOLDVAL<>this.TYPVAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYPVAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYPVAR
 Gosub PROPAGATE_TYPVAR
Endif
Return

$INIT_TYPVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TYPVAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYPVAR=0 and fmet this.AGETATTRIBUTE("TYPVAR","$isMandatory")="true"
 this.TYPVAR = 1
Endif
Return
 
$CONTROL_TYPVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TYPVAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYPVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYPVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYPVAR
[L]CURPRO = "TYPVAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYPVAR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYPVAR
[L]CURPRO = "TYPVAR"
If this.TYPVAR<0 or this.TYPVAR>len(mess(0,7882,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"7882 ->"-num$(this.TYPVAR)-mess(99,123,1)):  Return : # Local menu "7882 -> Invalid option
Endif
Return

$_AOTHERS_TYPVAR
[L]CURPRO = "TYPVAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYPVAR
[L]CURPRO = "TYPVAR"
Return

$PROPAGATE_TYPVAR
this.isReadonly = 0
[L]CURPRO = "TYPVAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYPVAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TYPVAR"
$_LNKPRO_TYPVAR
Return


####################################################################
# 7 : VALCHAR Value ( Field A 250)
####################################################################

$SET_VALCHAR
If [L]_AOLDVAL<>this.VALCHAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALCHAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALCHAR
 Gosub PROPAGATE_VALCHAR
Endif
Return

$INIT_VALCHAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALCHAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VALCHAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALCHAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALCHAR               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALCHAR               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALCHAR
[L]CURPRO = "VALCHAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VALCHAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALCHAR
[L]CURPRO = "VALCHAR"
Return

$_AOTHERS_VALCHAR
[L]CURPRO = "VALCHAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALCHAR
[L]CURPRO = "VALCHAR"
Return

$PROPAGATE_VALCHAR
this.isReadonly = 0
[L]CURPRO = "VALCHAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALCHAR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALCHAR"
$_LNKPRO_VALCHAR
Return


####################################################################
# 8 : VALINT Value ( Field C 4)
####################################################################

$SET_VALINT
If [L]_AOLDVAL<>this.VALINT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALINT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALINT
 Gosub PROPAGATE_VALINT
Endif
Return

$INIT_VALINT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALINT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VALINT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALINT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALINT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALINT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALINT
[L]CURPRO = "VALINT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VALINT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALINT
[L]CURPRO = "VALINT"
Return

$_AOTHERS_VALINT
[L]CURPRO = "VALINT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALINT
[L]CURPRO = "VALINT"
Return

$PROPAGATE_VALINT
this.isReadonly = 0
[L]CURPRO = "VALINT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALINT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALINT"
$_LNKPRO_VALINT
Return


####################################################################
# 9 : VALDEC Value ( Field DCB 15)
####################################################################

$SET_VALDEC
If [L]_AOLDVAL<>this.VALDEC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALDEC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALDEC
 Gosub PROPAGATE_VALDEC
Endif
Return

$INIT_VALDEC
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALDEC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VALDEC
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALDEC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALDEC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALDEC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALDEC
[L]CURPRO = "VALDEC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VALDEC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALDEC
[L]CURPRO = "VALDEC"
Return

$_AOTHERS_VALDEC
[L]CURPRO = "VALDEC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALDEC
[L]CURPRO = "VALDEC"
Return

$PROPAGATE_VALDEC
this.isReadonly = 0
[L]CURPRO = "VALDEC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALDEC
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALDEC"
$_LNKPRO_VALDEC
Return


####################################################################
# 10 : VALDAT Value ( Field D)
####################################################################

$SET_VALDAT
If [L]_AOLDVAL<>this.VALDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALDAT
 Gosub PROPAGATE_VALDAT
Endif
Return

$INIT_VALDAT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VALDAT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALDAT
[L]CURPRO = "VALDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VALDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALDAT
[L]CURPRO = "VALDAT"
Return

$_AOTHERS_VALDAT
[L]CURPRO = "VALDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALDAT
[L]CURPRO = "VALDAT"
Return

$PROPAGATE_VALDAT
this.isReadonly = 0
[L]CURPRO = "VALDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALDAT
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "VALDAT"
$_LNKPRO_VALDAT
Return


####################################################################
# 11 : FLGSUP Supervisor ( Field Local menu number 1)
####################################################################

$SET_FLGSUP
If [L]_AOLDVAL<>this.FLGSUP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGSUP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGSUP
 Gosub PROPAGATE_FLGSUP
Endif
Return

$INIT_FLGSUP
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "FLGSUP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGSUP=0 and fmet this.AGETATTRIBUTE("FLGSUP","$isMandatory")="true"
 this.FLGSUP = 1
Endif
Return
 
$CONTROL_FLGSUP
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "FLGSUP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGSUP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGSUP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGSUP
[L]CURPRO = "FLGSUP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGSUP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGSUP
[L]CURPRO = "FLGSUP"
If this.FLGSUP<0 or this.FLGSUP>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGSUP)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGSUP
[L]CURPRO = "FLGSUP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGSUP
[L]CURPRO = "FLGSUP"
Return

$PROPAGATE_FLGSUP
this.isReadonly = 0
[L]CURPRO = "FLGSUP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGSUP
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "FLGSUP"
$_LNKPRO_FLGSUP
Return


####################################################################
# 12 : CATEG Category ( Field A 12)
####################################################################

$SET_CATEG
If [L]_AOLDVAL<>this.CATEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CATEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CATEG
 Gosub PROPAGATE_CATEG
Endif
Return

$INIT_CATEG
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CATEG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CATEG
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CATEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CATEG                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CATEG                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CATEG
[L]CURPRO = "CATEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CATEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CATEG
[L]CURPRO = "CATEG"
Return

$_AOTHERS_CATEG
[L]CURPRO = "CATEG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CATEG
[L]CURPRO = "CATEG"
Return

$PROPAGATE_CATEG
this.isReadonly = 0
[L]CURPRO = "CATEG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CATEG
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CATEG"
$_LNKPRO_CATEG
Return


####################################################################
# 13 : CREUSR Creation user ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 14 : UPDUSR Change user ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 15 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 16 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 17 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 18 : TEXTE Description ( Field ACD 1)
####################################################################

$GET_TEXTE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TEXTE"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_CLB("TEXTE",
& this.ACTX.LAN
& +[V]CST_AURLSEPLOB+"ACST"
& +[V]CST_AURLSEPLOB+this.CODVAR
& +[V]CST_AURLSEPLOB+num$(10)
& +[V]CST_AURLSEPLOB+num$(20)
& ,[L]_CNT,this.TEXTE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_TEXTE
If fmet this.AGETATTRIBUTE("TEXTE","$isLoaded")<>"true" or [L]_AOLDVAL<>this.TEXTE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TEXTE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("TEXTE","$isLoaded")<>"true" or [L]_AOLDVAL<>this.TEXTE
 Gosub PROPAGATE_TEXTE
Endif
Return

$INIT_TEXTE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TEXTE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TEXTE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TEXTE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TEXTE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TEXTE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TEXTE
[L]CURPRO = "TEXTE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.TEXTE)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TEXTE
[L]CURPRO = "TEXTE"
Return

$_AOTHERS_TEXTE
[L]CURPRO = "TEXTE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TEXTE
[L]CURPRO = "TEXTE"
Return

$PROPAGATE_TEXTE
this.isReadonly = 0
[L]CURPRO = "TEXTE"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TEXTE
Gosub DECLARE_VAR From WMC0ACONSTANT
[L]CURPRO = "TEXTE"
$_LNKPRO_TEXTE
Local Tinyint _EXI : [L]_EXI=1
Gosub READ_EXI_TEXTE From WMC0ACONSTANT
[L]ASTATUS = fmet this.ASETATTRIBUTE("TEXTE","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Return




