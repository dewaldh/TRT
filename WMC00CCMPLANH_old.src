#<AdxTL>@(#)0.0.0.0 $Revision$Class Change request plan header
# Sage X3 supervisor
## CRUD-CLASSE ## CCMPLANH
# 2018-06-20 06:41:17 996

Gosub TEST From WMCR_CCMPLANH : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CRID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# CCMPLANH : CCMPLANH
# CCMPLAND : CCMPLANH CCMPLAND
# CCMPSTATUS : CCMPLANH CCMPSTATUS
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet CCMPLANH._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = CCMPLANH.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(CCMPLANH.ACTX.AFOLDER,nomap,"")>0
 Local File CCMPLANH [CCMPH]
 Local File CCMPLAND [CCMPD]
 Local File CCMPSTATUS [CCMPS]
Else
 Local File =CCMPLANH.ACTX.AFOLDER+".CCMPLANH" [CCMPH]
 Local File =CCMPLANH.ACTX.AFOLDER+".CCMPLAND" [CCMPD]
 Local File =CCMPLANH.ACTX.AFOLDER+".CCMPSTATUS" [CCMPS]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANH.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [CCMPH] With
& [CCMPD]CCMPD_0 = [F:CCMPH]CRID,
& [CCMPS]CCMPS0 = [F:CCMPH]CRID
& As [LNK_]
Return

############################################################################################
### CCMPLANH(WCCMPH)
############################################################################################
Funprog  _MAJSQL_CCMPLANH(WCCMPH)
Variable Instance WCCMPH Using C_CCMPLANH
Local Integer ASTATUS,A_I,A_J
Default File [F:CCMPH]
If WCCMPH.ASTALIN=[V]CST_ANEW
 Call INICRE(WCCMPH) From ASYRSUB
 SetInstance [F:CCMPH] With WCCMPH
 Write [F:CCMPH]
 If fstat
  Call FSTA("CCMPH",WCCMPH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMPH.updTick = [F:CCMPH]updTick
Elsif WCCMPH.ASTALIN=[V]CST_ALL or WCCMPH.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCCMPH) From ASYRSUB
 SetInstance [F:CCMPH] With WCCMPH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMPH,"CCMPLANH")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CCMPH]CCMPH_0 = [F:CCMPH]CRID
 If fstat
  Call FSTA("CCMPH",WCCMPH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMPH.updTick = [F:CCMPH]updTick
Elsif WCCMPH.ASTALIN=[V]CST_ADEL
 SetInstance [F:CCMPH] With WCCMPH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMPH,"CCMPLANH")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CCMPH]CCMPH_0 = [F:CCMPH]CRID
 If fstat
  Call FSTA("CCMPH",WCCMPH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### CCMPLAND(WCCMPD)
############################################################################################
Funprog  _MAJSQL_CCMPLAND(WCCMPD)
Variable Instance WCCMPD Using C_CCMPLAND
Local Integer ASTATUS,A_I,A_J
Default File [F:CCMPD]
If WCCMPD.ASTALIN=[V]CST_ANEW
 Call INICRE(WCCMPD) From ASYRSUB
 SetInstance [F:CCMPD] With WCCMPD
 Write [F:CCMPD]
 If fstat
  Call FSTA("CCMPD",WCCMPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMPD.updTick = [F:CCMPD]updTick
Elsif WCCMPD.ASTALIN=[V]CST_ALL or WCCMPD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCCMPD) From ASYRSUB
 SetInstance [F:CCMPD] With WCCMPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMPD,"CCMPLAND")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CCMPD]CCMPD_0 = [F:CCMPD]CRID;[F:CCMPD]LINENO
 If fstat
  Call FSTA("CCMPD",WCCMPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMPD.updTick = [F:CCMPD]updTick
Elsif WCCMPD.ASTALIN=[V]CST_ADEL
 SetInstance [F:CCMPD] With WCCMPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMPD,"CCMPLAND")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CCMPD]CCMPD_0 = [F:CCMPD]CRID;[F:CCMPD]LINENO
 If fstat
  Call FSTA("CCMPD",WCCMPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### CCMPSTATUS(WCCMPS)
############################################################################################
Funprog  _MAJSQL_CCMPSTATUS(WCCMPS)
Variable Instance WCCMPS Using C_CCMPSTATUS
Local Integer ASTATUS,A_I,A_J
Default File [F:CCMPS]
If WCCMPS.ASTALIN=[V]CST_ANEW
 Call INICRE(WCCMPS) From ASYRSUB
 SetInstance [F:CCMPS] With WCCMPS
 Write [F:CCMPS]
 If fstat
  Call FSTA("CCMPS",WCCMPS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMPS.updTick = [F:CCMPS]updTick
Elsif WCCMPS.ASTALIN=[V]CST_ALL or WCCMPS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCCMPS) From ASYRSUB
 SetInstance [F:CCMPS] With WCCMPS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMPS,"CCMPSTATUS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CCMPS]CCMPS0 = [F:CCMPS]COL1;[F:CCMPS]SEQ;[F:CCMPS]COL2
 If fstat
  Call FSTA("CCMPS",WCCMPS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMPS.updTick = [F:CCMPS]updTick
Elsif WCCMPS.ASTALIN=[V]CST_ADEL
 SetInstance [F:CCMPS] With WCCMPS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMPS,"CCMPSTATUS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CCMPS]CCMPS0 = [F:CCMPS]COL1;[F:CCMPS]SEQ;[F:CCMPS]COL2
 If fstat
  Call FSTA("CCMPS",WCCMPS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



