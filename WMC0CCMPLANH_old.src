#<AdxTL>@(#)0.0.0.0 $Revision$Class Change request plan header
# Sage X3 supervisor
## ACLA-CLASSE ## CCMPLANH
# 2018-06-20 06:41:17 160

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMCM_CCMPLANH"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "CCMPLANH_CSTD"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Determine plan status
$DETERMINE_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DETERMINE_PLAN_STATUS" : [L]ACTION = "DETERMINE_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Set attributes
$SET_ATTRIBUTES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_ATTRIBUTES" : [L]ACTION = "SET_ATTRIBUTES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Set attributes
$SET_ATTRIBUTES_IMPLEMENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_ATTRIBUTES_IMPLEMENT" : [L]ACTION = "SET_ATTRIBUTES_IMPLEMENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update plan status
$UPDATE_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "UPDATE_PLAN_STATUS" : [L]ACTION = "UPDATE_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod High level plan status
$HIGH_LEVEL_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "HIGH_LEVEL_PLAN_STATUS" : [L]ACTION = "HIGH_LEVEL_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Validate implement
$VALIDATE_IMPLEMENT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "VALIDATE_IMPLEMENT" : [L]ACTION = "VALIDATE_IMPLEMENT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

####################################################################
# Operations of the class
####################################################################
# Fmethod Sales order plan status
$SALES_ORDER_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "SALES_ORDER_PLAN_STATUS" : [L]ACTION = "SALES_ORDER_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sales quotes plan status
$SALES_QUOTES_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "SALES_QUOTES_PLAN_STATUS" : [L]ACTION = "SALES_QUOTES_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Purchase orders plan status
$PURCHASE_ORDER_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "PURCHASE_ORDER_PLAN_STATUS" : [L]ACTION = "PURCHASE_ORDER_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Work orders plan status
$WORK_ORDER_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "WORK_ORDER_PLAN_STATUS" : [L]ACTION = "WORK_ORDER_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Forecast plan status
$FORECAST_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "FORECAST_PLAN_STATUS" : [L]ACTION = "FORECAST_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Purchase request plan status
$PURCHASE_REQUEST_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "PURCHASE_REQUEST_PLAN_STATUS" : [L]ACTION = "PURCHASE_REQUEST_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Stock plan status
$STOCK_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "STOCK_PLAN_STATUS" : [L]ACTION = "STOCK_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod BOM plan status
$BOM_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "BOM_PLAN_STATUS" : [L]ACTION = "BOM_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Routing plan status
$ROUTING_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "ROUTING_PLAN_STATUS" : [L]ACTION = "ROUTING_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Subcontract plan status
$SUB_CONTRACT_PLAN_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_ANO
[L]AOPERATION = "SUB_CONTRACT_PLAN_STATUS" : [L]ACTION = "SUB_CONTRACT_PLAN_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0CCMPLANH
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To maxtab(this.CCMPLAND)
 If this.CCMPLAND(AINDCLA)<>null
  [L]ASTATUS = fmet this.CCMPLAND(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.CCMPSTATUS)
 If this.CCMPSTATUS(AINDCLA)<>null
  [L]ASTATUS = fmet this.CCMPSTATUS(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0CCMPLANH
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To maxtab(this.CCMPLAND)
 If this.CCMPLAND(AINDCLA)<>null
  [L]ASTATUS = fmet this.CCMPLAND(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.CCMPSTATUS)
 If this.CCMPSTATUS(AINDCLA)<>null
  [L]ASTATUS = fmet this.CCMPSTATUS(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0CCMPLANH
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To maxtab(this.CCMPLAND)
 If this.CCMPLAND(AINDCLA)<>null
  [L]ASTATUS = fmet this.CCMPLAND(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'CCMPLAND('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.CCMPSTATUS)
 If this.CCMPSTATUS(AINDCLA)<>null
  [L]ASTATUS = fmet this.CCMPSTATUS(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'CCMPSTATUS('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0CCMPLANH
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "CCMPLAND"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"CCMPLAND",this)
 When "CCMPSTATUS"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"CCMPSTATUS",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "CCMPLAND"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"CCMPLAND","C_CCMPLAND",this)
 When "CCMPSTATUS"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"CCMPSTATUS","C_CCMPSTATUS",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "CCMPLAND"
  [L]_ALINE = 0
 When "CCMPSTATUS"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "CCMPLAND"
  [L]_ALINE = 1
 When "CCMPSTATUS"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "CRID"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



