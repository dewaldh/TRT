#<AdxTL>@(#)0.0.0.0 $Revision$Class Tasks - Operations
# Sage X3 supervisor
## CRUD-CLASSE ## PJMTSKOPE
# 2018-06-20 06:53:00 531


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMTSKOPE [PTKO_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMTSKOPE") From ASYRCOM : Endif
Local Instance PJMTSKOPE Using C_PJMTSKOPE

If !SILENCE : Call TRACE("3 --> New Instance C_PJMTSKOPE") From ASYRCOM : Endif
PJMTSKOPE = NewInstance C_PJMTSKOPE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PTKO_]PTKO0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMTSKOPE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.AREAD([PTKO_]OPPNUM,[PTKO_]TASCOD,[PTKO_]OPENUM,[PTKO_]OPESPLNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMTSKOPE.OPPNUM ="-num$(PJMTSKOPE.OPPNUM)) From ASYRCOM
 Call TRACE("PJMTSKOPE.TASCOD ="-num$(PJMTSKOPE.TASCOD)) From ASYRCOM
 Call TRACE("PJMTSKOPE.OPENUM ="-num$(PJMTSKOPE.OPENUM)) From ASYRCOM
 Call TRACE("PJMTSKOPE.OPESPLNUM ="-num$(PJMTSKOPE.OPESPLNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMTSKOPE.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMTSKOPE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PTKO_]
FreeGroup PJMTSKOPE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMTSKOPE,ACLE,ASTATUS,_ETAG)
Variable Instance PJMTSKOPE Using C_PJMTSKOPE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Shortint _OPENUM
Local Shortint _OPESPLNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPENUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_OPESPLNUM = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File PJMTSKOPE [PTKO]
Default File [F:PTKO]
Read [F:PTKO]PTKO0 = [L]_OPPNUM;[L]_TASCOD;[L]_OPENUM;[L]_OPESPLNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PTKO]UPDTICK)>0
 [L]_ETAG = num$([F:PTKO]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMTSKOPE,ACLE,ASTATUS)
Variable Instance PJMTSKOPE Using C_PJMTSKOPE
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _TASCOD(15)
Local Shortint _OPENUM
Local Shortint _OPESPLNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TASCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_OPENUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_OPESPLNUM = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.AREAD([L]_OPPNUM,[L]_TASCOD,[L]_OPENUM,[L]_OPESPLNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMTSKOPE,_OPPNUM,_TASCOD,_OPENUM,_OPESPLNUM,ASTATUS)
Variable Instance PJMTSKOPE Using C_PJMTSKOPE
Value Char _OPPNUM
Value Char _TASCOD
Value Shortint _OPENUM
Value Shortint _OPESPLNUM
Variable Integer ASTATUS

If PJMTSKOPE = null : End : Endif

Gosub AVARIABLES From WMC00PJMTSKOPE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMTSKOPE.APARENT=null
 [L]A_I = PJMTSKOPE.freeSnapshot
 PJMTSKOPE.snapshotEnabled = 0
 PJMTSKOPE.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMTSKOPE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMTSKOPE.APARENT=null
 PJMTSKOPE.snapshotEnabled = 1
 PJMTSKOPE.setAccessorEnabled = 1
Endif
LogicClose File [PTKO] ,[POA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_TASCOD,[L]_OPENUM,[L]_OPESPLNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PTKO]
Read [F:PTKO]PTKO0 = [L]_OPPNUM;[L]_TASCOD;[L]_OPENUM;[L]_OPESPLNUM
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_TASCOD+"~"+num$([L]_OPENUM)+"~"+num$([L]_OPESPLNUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTSKOPE,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PTKO]AUUID)>0 & [F:PTKO]AUUID=NullUuid
 [F:PTKO]AUUID = getUuid
Endif
If dim([F:PTKO]OPEDESTEX)>0: Raz [F:PTKO]OPEDESTEX: Endif
If dim([F:PTKO]OPECOMTEX)>0: Raz [F:PTKO]OPECOMTEX: Endif
SetInstance PJMTSKOPE With [F:PTKO]
PJMTSKOPE.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:POA]
 [L]A_N2=0
 For [F:POA]PJOA0 Where OPPNUM=[F:PTKO]OPPNUM & TASCOD=[F:PTKO]TASCOD & OPENUM=[F:PTKO]OPENUM
  [L]A_N2 +=1
  PJMTSKOPE.RAFFT(A_N2) = NewInstance  C_PJMOPEAFF(PJMTSKOPE.ACTX,NullUuid,[L]A_N2,PJMTSKOPE,"RAFFT") AllocGroup PJMTSKOPE
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.RAFFT(A_N2).ADDINSTANCE_BOUND)
  Callmet PJMTSKOPE.RAFFT(A_N2).AREAD([F:POA]OPPNUM,[F:POA]TASCOD,[F:POA]OPENUM,[F:POA]OPESPLNUM,[F:POA]POANUM)
  PJMTSKOPE.RAFFT(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.RAFFT(A_N2).ASETATTRIBUTE("OPPNUM","$namProParent","OPPNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.RAFFT(A_N2).ASETATTRIBUTE("TASCOD","$namProParent","TASCOD"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.RAFFT(A_N2).ASETATTRIBUTE("OPENUM","$namProParent","OPENUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.RAFFT(A_N2).ASETATTRIBUTE("OPESPLNUM","$namProParent","OPESPLNUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.RAFFT(A_N2).ASETATTRIBUTE("POANUM","$isDisabled","true"))
 Next POA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet PJMTSKOPE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="PJMTSKOPE" & ZONE="ROODESAXX" & IDENT1=PJMTSKOPE.KEYCONCAT & IDENT2=""
 Call ASETTEXTRA(PJMTSKOPE.AXX,PJMTSKOPE.AllocGrp(),"ROODESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 PJMTSKOPE.AXX(maxtab(PJMTSKOPE.AXX)).FLG = 0
Next AXX
If !len(fmet PJMTSKOPE.AGETTEXTRA("ROODESAXX"))
 Call ASETTEXTRA(PJMTSKOPE.AXX,PJMTSKOPE.AllocGrp(),"ROODESAXX",
& fmet PJMTSKOPE.AGETTEXTRALAN("ROODESAXX",PJMTSKOPE.ACTX.AFOLD.ALANGDEF),
& PJMTSKOPE.ACTX.LAN) From ASYRSUB
Endif

Return



