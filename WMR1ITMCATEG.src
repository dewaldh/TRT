#<AdxTL>@(#)0.0.0.0 $Revision$Class Product category
# Supervisor
## ACLA-CLASSE ## ITMCATEG
# 2018-08-27 13:17:34 857

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : CONCATKEYE Keys ( Field A 5)
####################################################################
 
$SET_CONCATKEYE
If [L]_AOLDVAL<>this.CONCATKEYE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CONCATKEYE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CONCATKEYE
 Gosub PROPAGATE_CONCATKEYE
Endif
Return

$INIT_CONCATKEYE
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "CONCATKEYE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CONCATKEYE
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "CONCATKEYE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CONCATKEYE            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CONCATKEYE            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CONCATKEYE
[L]CURPRO = "CONCATKEYE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CONCATKEYE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CONCATKEYE
[L]CURPRO = "CONCATKEYE"
Return

$_AOTHERS_CONCATKEYE
[L]CURPRO = "CONCATKEYE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CONCATKEYE
[L]CURPRO = "CONCATKEYE"
Return

$PROPAGATE_CONCATKEYE
this.isReadonly = 0
[L]CURPRO = "CONCATKEYE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CONCATKEYE
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "CONCATKEYE"
$_LNKPRO_CONCATKEYE
Return


####################################################################
# 2 : CONCATKEYS Keys ( Field A 5)
####################################################################
 
$SET_CONCATKEYS
If [L]_AOLDVAL<>this.CONCATKEYS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CONCATKEYS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CONCATKEYS
 Gosub PROPAGATE_CONCATKEYS
Endif
Return

$INIT_CONCATKEYS
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "CONCATKEYS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CONCATKEYS
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "CONCATKEYS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CONCATKEYS            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CONCATKEYS            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CONCATKEYS
[L]CURPRO = "CONCATKEYS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CONCATKEYS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CONCATKEYS
[L]CURPRO = "CONCATKEYS"
Return

$_AOTHERS_CONCATKEYS
[L]CURPRO = "CONCATKEYS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CONCATKEYS
[L]CURPRO = "CONCATKEYS"
Return

$PROPAGATE_CONCATKEYS
this.isReadonly = 0
[L]CURPRO = "CONCATKEYS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CONCATKEYS
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "CONCATKEYS"
$_LNKPRO_CONCATKEYS
Return


####################################################################
# 3 : ITMPUU Purchase unit ( Field UOM 3)
####################################################################
 
$SET_ITMPUU
If [L]_AOLDVAL<>this.ITMPUU
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ITMPUU
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ITMPUU
 Gosub PROPAGATE_ITMPUU
Endif
Return

$INIT_ITMPUU
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "ITMPUU"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ITMPUU
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "ITMPUU"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ITMPUU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ITMPUU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ITMPUU
[L]CURPRO = "ITMPUU"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ITMPUU,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ITMPUU
[L]CURPRO = "ITMPUU"
If vireblc(this.ITMPUU,2)<>vireblc(format$("K:3X",this.ITMPUU),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ITMPUU
[L]CURPRO = "ITMPUU"
If vireblc(this.ITMPUU,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPUOM.ACTRLREF(this,"ITMPUU",this.ITMPUU,this.ITMPUU,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ITMPUU<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ITMPUU
[L]CURPRO = "ITMPUU"
Return

$PROPAGATE_ITMPUU
this.isReadonly = 0
[L]CURPRO = "ITMPUU"
Gosub _LNKPRO_ITMPUU
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ITMPUU
Gosub DECLARE_VAR From WMR0ITMCATEG
[L]CURPRO = "ITMPUU"
$_LNKPRO_ITMPUU
If vireblc(this.ITMPUU,2)<>""
 # Link TABUNIT
 Local File TABUNIT [WTUN]
 Read [F:WTUN]TUN0 = this.ITMPUU
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ITMPUU","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ITMPUU","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("ITMPUU","$symbol",[F:WTUN]UOMSYM)
  If int([WTUN]UOMDEC)>0
   Local Char WSCALE(10)
   WSCALE=num$([F:WTUN]UOMDEC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("ITMPUU","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTUN]
Endif
Return




