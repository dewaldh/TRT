#<AdxTL>@(#)0.0.0.0 $Revision$Class Accounts
# Supervisor
## ACLA-CLASSE ## GACCOUNT_COAGAC
# 2018-08-27 12:32:34 051


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : OTHCOA Other COA ( Field COA 3)
####################################################################

$SET_OTHCOA
If [L]_AOLDVAL<>this.OTHCOA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OTHCOA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OTHCOA
 Gosub PROPAGATE_OTHCOA
Endif
Return

$INIT_OTHCOA
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "OTHCOA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OTHCOA
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "OTHCOA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OTHCOA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OTHCOA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OTHCOA
[L]CURPRO = "OTHCOA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.OTHCOA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OTHCOA
[L]CURPRO = "OTHCOA"
If vireblc(this.OTHCOA,2)<>vireblc(format$("K:3c",this.OTHCOA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_OTHCOA
[L]CURPRO = "OTHCOA"
If vireblc(this.OTHCOA,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCOA.ACTRLREF(this,"OTHCOA",this.OTHCOA,this.OTHCOA,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.OTHCOA<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OTHCOA
[L]CURPRO = "OTHCOA"
Return

$PROPAGATE_OTHCOA
this.isReadonly = 0
[L]CURPRO = "OTHCOA"
Gosub _LNKPRO_OTHCOA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OTHCOA
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "OTHCOA"
$_LNKPRO_OTHCOA
If vireblc(this.OTHCOA,2)<>""
 # Link GCOA
 Local File GCOA [WCOA]
 Read [F:WCOA]COA0 = this.OTHCOA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="SHOTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("OTHCOA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="DESTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("OTHCOA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCOA]
Endif
Return


####################################################################
# 2 : DEFACC Default account ( Field GAC 15)
####################################################################

$SET_DEFACC
If [L]_AOLDVAL<>this.DEFACC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEFACC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEFACC
 Gosub PROPAGATE_DEFACC
Endif
Return

$INIT_DEFACC
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "DEFACC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEFACC
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "DEFACC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEFACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEFACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEFACC
[L]CURPRO = "DEFACC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEFACC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEFACC
[L]CURPRO = "DEFACC"
If vireblc(this.DEFACC,2)<>vireblc(format$("K:15X",this.DEFACC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEFACC
[L]CURPRO = "DEFACC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEFACC
[L]CURPRO = "DEFACC"
If vireblc(this.DEFACC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGAC.ACTRLREF(this,"DEFACC",this.DEFACC,this.OTHCOA,this.DEFACC,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DEFACC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_DEFACC
this.isReadonly = 0
[L]CURPRO = "DEFACC"
Gosub _LNKPRO_DEFACC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEFACC
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "DEFACC"
$_LNKPRO_DEFACC
If vireblc(this.DEFACC,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.OTHCOA;this.DEFACC
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEFACC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEFACC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return


####################################################################
# 3 : SCRACC Account screening ( Field A 15)
####################################################################

$SET_SCRACC
If [L]_AOLDVAL<>this.SCRACC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCRACC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCRACC
 Gosub PROPAGATE_SCRACC
Endif
Return

$INIT_SCRACC
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "SCRACC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SCRACC
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "SCRACC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCRACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCRACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCRACC
[L]CURPRO = "SCRACC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SCRACC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCRACC
[L]CURPRO = "SCRACC"
Return

$_AOTHERS_SCRACC
[L]CURPRO = "SCRACC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCRACC
[L]CURPRO = "SCRACC"
Return

$PROPAGATE_SCRACC
this.isReadonly = 0
[L]CURPRO = "SCRACC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCRACC
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "SCRACC"
$_LNKPRO_SCRACC
Return


####################################################################
# 4 : OBYIPT Mandatory allocation ( Field Local menu number 1)
####################################################################

$SET_OBYIPT
If [L]_AOLDVAL<>this.OBYIPT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OBYIPT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OBYIPT
 Gosub PROPAGATE_OBYIPT
Endif
Return

$INIT_OBYIPT
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "OBYIPT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.OBYIPT=0 and fmet this.AGETATTRIBUTE("OBYIPT","$isMandatory")="true"
 this.OBYIPT = 1
Endif
Return
 
$CONTROL_OBYIPT
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "OBYIPT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OBYIPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OBYIPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OBYIPT
[L]CURPRO = "OBYIPT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OBYIPT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OBYIPT
[L]CURPRO = "OBYIPT"
If this.OBYIPT<0 or this.OBYIPT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.OBYIPT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_OBYIPT
[L]CURPRO = "OBYIPT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OBYIPT
[L]CURPRO = "OBYIPT"
Return

$PROPAGATE_OBYIPT
this.isReadonly = 0
[L]CURPRO = "OBYIPT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OBYIPT
Gosub DECLARE_VAR From WMC0GACCOUNT_COAGAC
[L]CURPRO = "OBYIPT"
$_LNKPRO_OBYIPT
Return




