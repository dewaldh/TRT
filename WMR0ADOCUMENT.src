#<AdxTL>@(#)0.0.0.0 $Revision$Class Documentation
# Supervisor
## ACLA-CLASSE ## ADOCUMENT
# 2018-08-27 13:01:04 426


####################################################################
# Actions
####################################################################

$ACTION
Local    Char     CURSTR(30) , CODTRT(30)(1..16)
Local    Integer  TYPTRT(1..16) , NBRTRT , INDTRT
[L]CURSTR = "ADOCUMENT"

Gosub ACTION From ASYRSUB
Return

####################################################################
# Traitments
####################################################################
$_ADDTRT
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMR0ADOCUMENT
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
If this.ADO<>null
 [L]ASTATUS = fmet this.ADO._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMR0ADOCUMENT
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
If this.ADO<>null
 [L]ASTATUS = fmet this.ADO._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "TEXTE"
  If fmet this.AGETATTRIBUTE("TEXTE","$isLoaded")<>"true"
   Gosub READ_CLB_TEXTE
  Else
   [L]_CLB = this.TEXTE
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("TEXTE","$contentType","text/html")
   [L]_CNT = "text/html"
  Endif
Endcase
Return

$READ_CLB_TEXTE
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File ADOCCLB [WADH]
Else
Local File =this.ACTX.AFOLDER+".ADOCCLB" [WADH]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WADH]LAN = [L]_KEYVALTAB(1)
[F:WADH]TYP = [L]_KEYVALTAB(2)
[F:WADH]COD = [L]_KEYVALTAB(3)
[F:WADH]LEV = val([L]_KEYVALTAB(4))
[F:WADH]SUBLEV = val([L]_KEYVALTAB(5))
Read [WADH] =
If !fstat
 [L]_CLB = [F:WADH]TEXTE
Endif
LogicClose File [WADH]
Return

$READ_EXI_TEXTE
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File ADOCCLB [WADH]
Else
Local File =this.ACTX.AFOLDER+".ADOCCLB" [WADH]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WADH]LAN = this.ADO.LAN
[F:WADH]TYP = this.ADO.TYP
[F:WADH]COD = this.ADO.COD
[F:WADH]LEV = this.ADO.LEV
[F:WADH]SUBLEV = this.ADO.SUBLEV
Look [WADH] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WADH]
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# EXEC OPERATION
####################################################################
Subprog EXE_OPERATION(WCLA,_OPERATION,ACLBRETURN,ACLE,ATBPAR,TBVAL)
Variable Instance WCLA Using OBJECT
Value    Char _OPERATION
Variable Clbfile ACLBRETURN
Value    Char ACLE
Variable Char ATBPAR()(1..)
Variable Char TBVAL()(1..)
Local Integer ASTATUS
Case [L]_OPERATION
 When Default
Endcase 
End

####################################################################
# EXEC METHOD
####################################################################
Subprog EXE_METHOD(WCLA,_METHOD,NAME_INSTANCE,ATBPAR,TBVAL)
Variable Instance WCLA Using OBJECT
Value    Char  NAME_INSTANCE
Value    Char _METHOD
Variable Char ATBPAR()(1..)
Variable Char TBVAL()(1..)
Local Integer ASTATUS
Case [L]_METHOD
 When Default
Endcase 
End

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.ADO = NewInstance C_ADOCUMENT(this.ACTX,NullUuid,0,this,"ADO") AllocGroup this
this.ADO.ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.ADO.ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



