#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import format definition
# Supervisor
## CRUD-CLASSE ## BSIFILFMT
# 2018-08-27 12:26:48 343

Gosub TEST From WMCR_BSIFILFMT : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CODBFF)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# BSIFILFMT : BSIFILFMT
# BSIFILFMTD : BSIFILFMT BSIFILFMTD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet BSIFILFMT._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = BSIFILFMT.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(BSIFILFMT.ACTX.AFOLDER,nomap,"")>0
 Local File BSIFILFMT [BSIFFM]
 Local File BSIFILFMTD [BSIFFD]
 Local File ATEXTRA [AXX]
Else
 Local File =BSIFILFMT.ACTX.AFOLDER+".BSIFILFMT" [BSIFFM]
 Local File =BSIFILFMT.ACTX.AFOLDER+".BSIFILFMTD" [BSIFFD]
 Local File =BSIFILFMT.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet BSIFILFMT.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [BSIFFM] With
& [BSIFFD]BSIFFD0 = [BSIFFM]CODBFF
& As [LNK_]
Return

############################################################################################
### BSIFILFMT(WBSIFFM)
############################################################################################
Funprog  _MAJSQL_BSIFILFMT(WBSIFFM)
Variable Instance WBSIFFM Using C_BSIFILFMT
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIFFM]
If WBSIFFM.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIFFM) From ASYRSUB
 SetInstance [F:BSIFFM] With WBSIFFM
 For J=1 To maxtab(WBSIFFM.AXX)
  If WBSIFFM.AXX(J)<>null & WBSIFFM.AXX(J).PRO= "DESAXX" & WBSIFFM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WBSIFFM,WBSIFFM.AXX(J).TEX,"BSIFILFMT","DESAXX",WBSIFFM.AXX(J).LAN,WBSIFFM.CODBFF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BSIFFM]
 If fstat
  Call FSTA("BSIFFM",WBSIFFM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIFFM.updTick = [F:BSIFFM]updTick
Elsif WBSIFFM.ASTALIN=[V]CST_ALL or WBSIFFM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIFFM) From ASYRSUB
 SetInstance [F:BSIFFM] With WBSIFFM
 For J=1 To maxtab(WBSIFFM.AXX)
  If WBSIFFM.AXX(J)<>null & WBSIFFM.AXX(J).PRO= "DESAXX" & WBSIFFM.AXX(J).FLG>0
   Call MAJTEXTRALAN(WBSIFFM,WBSIFFM.AXX(J).TEX,"BSIFILFMT","DESAXX",WBSIFFM.AXX(J).LAN,WBSIFFM.CODBFF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIFFM,"BSIFILFMT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIFFM]BSIFFM0 = [F:BSIFFM]CODBFF
 If fstat
  Call FSTA("BSIFFM",WBSIFFM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIFFM.updTick = [F:BSIFFM]updTick
Elsif WBSIFFM.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIFFM] With WBSIFFM
 For J=1 To maxtab(WBSIFFM.AXX)
  If WBSIFFM.AXX(J)<>null & WBSIFFM.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WBSIFFM,WBSIFFM.AXX(J).TEX,"BSIFILFMT","DESAXX",WBSIFFM.AXX(J).LAN,WBSIFFM.CODBFF,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIFFM,"BSIFILFMT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIFFM]BSIFFM0 = [F:BSIFFM]CODBFF
 If fstat
  Call FSTA("BSIFFM",WBSIFFM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BSIFILFMTD(WBSIFFD)
############################################################################################
Funprog  _MAJSQL_BSIFILFMTD(WBSIFFD)
Variable Instance WBSIFFD Using C_BSIFILFMTD
Local Integer ASTATUS,A_I,A_J
Default File [F:BSIFFD]
If WBSIFFD.ASTALIN=[V]CST_ANEW
 Call INICRE(WBSIFFD) From ASYRSUB
 SetInstance [F:BSIFFD] With WBSIFFD
 Write [F:BSIFFD]
 If fstat
  Call FSTA("BSIFFD",WBSIFFD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIFFD.updTick = [F:BSIFFD]updTick
Elsif WBSIFFD.ASTALIN=[V]CST_ALL or WBSIFFD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBSIFFD) From ASYRSUB
 SetInstance [F:BSIFFD] With WBSIFFD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIFFD,"BSIFILFMTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BSIFFD]BSIFFD0 = [F:BSIFFD]CODBFF;[F:BSIFFD]LIN
 If fstat
  Call FSTA("BSIFFD",WBSIFFD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBSIFFD.updTick = [F:BSIFFD]updTick
Elsif WBSIFFD.ASTALIN=[V]CST_ADEL
 SetInstance [F:BSIFFD] With WBSIFFD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBSIFFD,"BSIFILFMTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BSIFFD]BSIFFD0 = [F:BSIFFD]CODBFF;[F:BSIFFD]LIN
 If fstat
  Call FSTA("BSIFFD",WBSIFFD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



