#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT52LAM1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:29:30"
A_USER  = "ADMIN"
A_STAMP = "20180828002930"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT52LAM1 [MGD]
Gosub HORODAT
Local Inpbox "WT52LAM1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MGD] As [SIM_]
Grizo [MGD]5
Grizo [MGD]10
Grizo [MGD]15
Grizo [MGD]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MGD]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=30 : Y1(0)=1 : Y2(0)=4
X1(1)=31 : X2(1)=131 : Y1(1)=1 : Y2(1)=4
X1(2)=1 : X2(2)=131 : Y1(2)=5 : Y2(2)=6
X1(3)=1 : X2(3)=131 : Y1(3)=7 : Y2(3)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1WT52LAM1
Onevent AFTER_CHANGE Gosub AMM_FCY From W1WT52LAM1
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1WT52LAM1
Return

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1WT52LAM1
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1WT52LAM1
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1WT52LAM1
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1WT52LAM1
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action CTLFCYAUZ
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "CTLFCYAUZ"
  Call S_AFF_CHAR(VALEUR,PARMSK,"CTLFCYAUZ","CONTX3","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From FUNDBENCH
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1WT52LAM1
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_PLANNER
Return

$ON_MSTDAT
Onevent BEFORE_AREA Gosub AV_MSTDAT From W1WT52LAM1
Return

$AV_MSTDAT
Chgfmt [M]MSTDAT(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

$ON_PARWIPTYP
Onevent INIT_AREA Call D_PARWIPTYP(zc) From W1WT52LAM1
Return

Subprog D_PARWIPTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PARWIPTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1WT52LAM1
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1WT52LAM1
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1WT52LAM1
Return

Subprog IB_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREF(VALEUR)
Onkey 170 Titled GBOUT13 Call B13_ITMREF(zc) From W1WT52LAM1
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1WT52LAM1
Onkey 144 Titled GBOUTP Call P_ITMREF(zc) From W1WT52LAM1
Onkey 146 Titled GBOUTA Call SA_ITMREF(zc) From W1WT52LAM1
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  If !mkstat
   ## Action STD
   Call C_ITMREF(VALEUR) From FUNDBENCH
   If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREF(VALEUR) From FUNDBENCH
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3651 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZITMREF)")>indice
 [M]ITMREF(indice) = VALEUR
 Affzo ZITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELITF
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELITF"
 PARMSK(1) = [M]FCY
 PARMSK(2) = [M]ITMCAT
 PARMSK(3) = "1"
 PARMSK(4) = "1234"
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = [M]ITMFILTER
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELITF","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B13_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1WT52LAM1
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_IECCVALMAJ
Onevent CONTROL Call C_IECCVALMAJ(zc) From W1WT52LAM1
Onevent BEFORE_INPUT Call AS_IECCVALMAJ(zc) From W1WT52LAM1
Return

Subprog AS_IECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_IECCVALMAJ(zc) From W1WT52LAM1
Gosub _AFF
End

Subprog C_IECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_IECCVALMAJ(VALEUR) From FUNDBENCH
If mkstat : GERR = 1 : GZONE = "IECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_IECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELECCVAL"
 PARMSK(1) = [M:MGD]ITMREF
 PARMSK(2) = VALEUR
 PARMSK(3) = "[M:MGD]IECCVALMIN"
 PARMSK(4) = "4"
 PARMSK(5) = [0/0/0]
 PARMSK(6) = "MGD"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELECCVAL","ECCLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_IECCVALMIN
Onevent BEFORE_INPUT Call AS_IECCVALMIN(zc) From W1WT52LAM1
Onevent CONTROL Call C_IECCVALMIN(zc) From W1WT52LAM1
Return

Subprog AS_IECCVALMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_IECCVALMIN(VALEUR) From FUNDBENCH
If mkstat=2
 [M]IECCVALMIN(INDIC) = VALEUR
 Affzo IECCVALMIN(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_IECCVALMIN(zc) From W1WT52LAM1
Gosub _AFF
End

Subprog C_IECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_IECCVALMIN(VALEUR) From FUNDBENCH
If mkstat : GERR = 1 : GZONE = "IECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

Subprog S_IECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELECCVAL"
 PARMSK(1) = [M:MGD]ITMREF
 PARMSK(2) = [M:MGD]IECCVALMAJ
 PARMSK(3) = ""
 PARMSK(4) = "4"
 PARMSK(5) = [0/0/0]
 PARMSK(6) = "MGD"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELECCVAL","ECCLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1WT52LAM1
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_SAFSTO
Onevent BEFORE_AREA Gosub AV_SAFSTO From W1WT52LAM1
Return

$AV_SAFSTO
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]SAFSTO(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_REOMINQTY
Onevent BEFORE_AREA Gosub AV_REOMINQTY From W1WT52LAM1
Return

$AV_REOMINQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]REOMINQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_PLHUOT
Onevent INIT_AREA Call D_PLHUOT(zc) From W1WT52LAM1
Return

Subprog D_PLHUOT(VALEUR)
Variable Integer VALEUR
If varinit([M]PLHUOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PLHDAT
Onevent BEFORE_AREA Gosub AV_PLHDAT From W1WT52LAM1
Return

$AV_PLHDAT
Chgfmt [M]PLHDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_FOHUOT
Onevent INIT_AREA Call D_FOHUOT(zc) From W1WT52LAM1
Return

Subprog D_FOHUOT(VALEUR)
Variable Integer VALEUR
If varinit([M]FOHUOT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FOHDAT
Onevent BEFORE_AREA Gosub AV_FOHDAT From W1WT52LAM1
Return

$AV_FOHDAT
Chgfmt [M]FOHDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_PURFLG
Onevent INIT_AREA Call D_PURFLG(zc) From W1WT52LAM1
Return

Subprog D_PURFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PURFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MFGFLG
Onevent INIT_AREA Call D_MFGFLG(zc) From W1WT52LAM1
Return

Subprog D_MFGFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCPFLG
Onevent INIT_AREA Call D_SCPFLG(zc) From W1WT52LAM1
Return

Subprog D_SCPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCSFLG
Onevent INIT_AREA Call D_SCSFLG(zc) From W1WT52LAM1
Return

Subprog D_SCSFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SCSFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PHAFLG
Onevent INIT_AREA Call D_PHAFLG(zc) From W1WT52LAM1
Return

Subprog D_PHAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PHAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GENFLG
Onevent INIT_AREA Call D_GENFLG(zc) From W1WT52LAM1
Return

Subprog D_GENFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]GENFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TOOFLG
Onevent INIT_AREA Call D_TOOFLG(zc) From W1WT52LAM1
Return

Subprog D_TOOFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TOOFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DLVFLG
Onevent INIT_AREA Call D_DLVFLG(zc) From W1WT52LAM1
Return

Subprog D_DLVFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DLVFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SALFLG
Onevent INIT_AREA Call D_SALFLG(zc) From W1WT52LAM1
Return

Subprog D_SALFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SALFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INTFLG
Onevent INIT_AREA Call D_INTFLG(zc) From W1WT52LAM1
Return

Subprog D_INTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]INTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WAICOD
Onevent INIT_AREA Call D_WAICOD(zc) From W1WT52LAM1
Return

Subprog D_WAICOD(VALEUR)
Variable Integer VALEUR
If varinit([M]WAICOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SOSCOD
Onevent INIT_AREA Call D_SOSCOD(zc) From W1WT52LAM1
Return

Subprog D_SOSCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SOSCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CTLCOD
Onevent INIT_AREA Call D_CTLCOD(zc) From W1WT52LAM1
Return

Subprog D_CTLCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]CTLCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SHRFLG
Onevent INIT_AREA Call D_SHRFLG(zc) From W1WT52LAM1
Return

Subprog D_SHRFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]SHRFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MRPFLG
Onevent INIT_AREA Call D_MRPFLG(zc) From W1WT52LAM1
Return

Subprog D_MRPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MRPFLG,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

$ON_REACT
Onevent INIT_AREA Call D_REACT(zc) From W1WT52LAM1
Return

Subprog D_REACT(VALEUR)
Variable Integer VALEUR
If varinit([M]REACT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FORMULE
Return

$ON_SRTCOD
Onevent INIT_AREA Call D_SRTCOD(zc) From W1WT52LAM1
Return

Subprog D_SRTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SRTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MEMO
Return

$ON_NBLIG
Onevent BEFORE_AREA Call AV_NBLIG From W1WT52LAM1
Onevent AFTER_AREA Call AP_NBLIG From W1WT52LAM1
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT52LAM1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From FUNDBENCH
Endif
Gosub _AFF
End

Subprog AV_NBLIG
Local Decimal BASPAG
GUNT1(1) = "EUR"
GUNT1(1) = [M]STU
Gosub SETDEV From TRTDIV
## Action STD
Call AV_NBLIG From FUNDBENCH
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(17078,GBOUT1) From OBJDIV
Call TEXTE(17059,GBOUT2) From OBJDIV
Call TEXTE(29893,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(454,GBOUT5) From OBJDIV
Call TEXTE(17031,GBOUT6) From OBJDIV
Call TEXTE(454,GBOUT7) From OBJDIV
Call TEXTE(10704,GBOUT8) From OBJDIV
Call TEXTE(18114,GBOUT9) From OBJDIV
Call TEXTE(7974,GBOUT10) From OBJDIV
Call TEXTE(7974,GBOUT11) From OBJDIV
Call TEXTE(18050,GBOUT12) From OBJDIV
Call TEXTE(2378,GBOUT13) From OBJDIV
Call TEXTE(17087,GBOUT14) From OBJDIV
Call TEXTE(16848,GBOUT15) From OBJDIV
Call TEXTE(12225,GBOUT16) From OBJDIV
Call TEXTE(16408,GBOUT17) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT52LAM1
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WT52LAM1
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WT52LAM1
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1WT52LAM1
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1WT52LAM1
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1WT52LAM1
Onkey 135 Titled GBOUT7 Call B7_NBLIG From W1WT52LAM1
Onkey 136 Titled GBOUT8 Call B8_NBLIG From W1WT52LAM1
Onkey 137 Titled GBOUT9 Call B9_NBLIG From W1WT52LAM1
Onkey 138 Titled GBOUT10 Call B10_NBLIG From W1WT52LAM1
Onkey 139 Titled GBOUT11 Call B11_NBLIG From W1WT52LAM1
Onkey 140 Titled GBOUT12 Call B12_NBLIG From W1WT52LAM1
Onkey 170 Titled GBOUT13 Call B13_NBLIG From W1WT52LAM1
Onkey 171 Titled GBOUT14 Call B14_NBLIG From W1WT52LAM1
Onkey 172 Titled GBOUT15 Call B15_NBLIG From W1WT52LAM1
Onkey 173 Titled GBOUT16 Call B16_NBLIG From W1WT52LAM1
Onkey 174 Titled GBOUT17 Call B17_NBLIG From W1WT52LAM1
Gosub _AFF
End

Subprog AP_NBLIG
Local Decimal BASPAG
## Action STD
Call AP_NBLIG From FUNDBENCH
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMODPOX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMODPOX"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGD]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(5) = [M:MGD]ITMREF
 PARMSK(6) = num$([M:MGD]APPHAB)
 PARMSK(7) = num$([M:MGD]INTHAB)
 PARMSK(8) = [M:MGD]PLANNER
 PARMSK(9) = num$([M:MGD]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMODPOF","BENCHLIBP","XYZBENCHLIBP") From GSAISIE
 [M:MGD]REACT = val(PARMSK(9))
 ACTION = "BB1_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMODWOX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMODWOX"
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGD]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(5) = [M:MGD]ITMREF
 PARMSK(6) = num$([M:MGD]PLNHAB)
 PARMSK(7) = num$([M:MGD]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMODWOX","BENCHLIB","XYZBENCHLIB") From GSAISIE
 [M:MGD]REACT = val(PARMSK(7))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMODEOX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMODEOX"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB3_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGD]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(5) = [M:MGD]ITMREF
 PARMSK(6) = num$([M:MGD]SCOHAB)
 PARMSK(7) = num$([M:MGD]INTHAB)
 PARMSK(8) = [M:MGD]PLANNER
 PARMSK(9) = num$([M:MGD]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMODEOX","BENCHLIBS","ZBENCHLIBS") From GSAISIE
 [M:MGD]REACT = val(PARMSK(9))
 ACTION = "BB3_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB4_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MGD]CODCLE(nolign-1)
 Call OBJET_CHAR(OBJCLE,[M:MGD]CODOBJ(nolign-1),[M:MGD]CODCLE2(nolign-1)) From GOBJET
 ACTION = "BB4_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FWIPZOOM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FWIPZOOM"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB5_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(2) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(3) = [M:MGD]FCY
 Call S_TAB_NUM(BASPAG,PARMSK,"","BENCHLIB","XYZBENCHLIB") From GACTION
 ACTION = "BB5_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FDISPNOW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FDISPNOW"
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(3) = num$([M:MGD]WIPSTA(nolign-1))
 PARMSK(4) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(5) = [M:MGD]STU
 PARMSK(6) = num$([M:MGD]RMNEXTQTY(nolign-1))
 PARMSK(7) = num$([M:MGD]RMNEXTQTY(nolign-1))
 Call SAISIE_NUM(BASPAG,PARMSK,"IDISPNOW","BENCHLIB","XYZBENCHLIB") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B7_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B7_NBLIG From FUNDBENCH
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B8_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action CONSOPX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSOPX"
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = [M:MGD]PJT(nolign-1)
 PARMSK(5) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(6) = ""
 PARMSK(7) = [M:MGD]ENDDAT(nolign-1)
 PARMSK(8) = num$([M:MGD]BOMOPE(nolign-1))
 PARMSK(9) = "15"
 PARMSK(10) = "1"
 Call CONSULT_NUM(BASPAG,"OPX",PARMSK) From GCONSULT
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B9_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action TRTMULTIWX
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "TRTMULTIWX"
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = [M:MGD]ITMREF
 PARMSK(3) = "1"
 PARMSK(4) = num$([M:MGD]EXTQTY(nolign-1)-[M:MGD]ALLQTY(nolign-1)-[M:MGD]MTOQTY(nolign-1))
 PARMSK(5) = [M:MGD]ENDDAT(nolign-1)
 PARMSK(6) = num$([M:MGD]VCRTYP(nolign-1))
 PARMSK(7) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(8) = num$([M:MGD]VCRLIN(nolign-1))
 PARMSK(9) = num$([M:MGD]VCRSEQ(nolign-1))
 PARMSK(10) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(11) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(12) = "D"
 PARMSK(13) = [M:MGD]PJT(nolign-1)
 PARMSK(14) = [M:MGD]MTOREF(nolign-1)
 PARMSK(15) = ""
 PARMSK(16) = [M:MGD]PLANNER
 PARMSK(17) = func TRTX3FNC.VALFLD_C("[M:MGD]ECCVALMAJ(nolign-1)")
 PARMSK(18) = func TRTX3FNC.VALFLD_C("[M:MGD]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMULTIWOX","TRTMULTIWX","DMULTIWOX",3,"XYTRTMULTIWX") From GTRAITE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B10_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMFGALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMFGALL"
 PARMSK(1) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(2) = num$([M:MGD]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMFGALL","MFGALL","XYZMFGALL") From GSAISIE
 [M:MGD]REACT = val(PARMSK(2))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B11_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISCOALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISCOALL"
 PARMSK(1) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(2) = num$([M:MGD]VCRLIN(nolign-1))
 PARMSK(3) = num$([M:MGD]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DSCOALL","SCOALL","XYZSCOALL") From GSAISIE
 [M:MGD]REACT = val(PARMSK(3))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B12_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISTOALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISTOALL"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB12_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "MFGD"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = [M:MGD]ITMREF
 PARMSK(4) = [M:MGD]FCY
 PARMSK(5) = num$([M:MGD]VCRTYP(nolign-1))
 Call TRAITE_NUM(BASPAG,PARMSK,"ISTOALL","TRTSTOALL","",1,"XYTRTSTOALL") From GTRAITE
 ACTION = "BB12_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B13_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIMFGSCD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIMFGSCD"
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = [M:MGD]VCRNUM(nolign-1)
 PARMSK(3) = num$([M:MGD]REACT)
 Call SAISIE_NUM(BASPAG,PARMSK,"DMFGSCD","MFGSCD","XYZMFGSCD") From GSAISIE
 [M:MGD]REACT = val(PARMSK(3))
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B14_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FWIPZOOM3
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FWIPZOOM3"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB14_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(2) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(3) = [M:MGD]ITMREF
 Call S_TAB_NUM(BASPAG,PARMSK,"","BENCHLIB","XYZBENCHLIB") From GACTION
 ACTION = "BB14_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B15_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FMLKB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FMLKB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB15_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGD]FCY
 PARMSK(2) = [M:MGD]PLANNER
 PARMSK(3) = ""
 PARMSK(4) = [M:MGD]ITMREF
 PARMSK(5) = ""
 PARMSK(6) = "D"
 PARMSK(7) = ""
 PARMSK(8) = num$([M:MGD]REACT)
 PARMSK(9) = func TRTX3FNC.VALFLD_C("[M:MGD]ECCVALMAJ(nolign-1)")
 PARMSK(10) = func TRTX3FNC.VALFLD_C("[M:MGD]ECCVALMIN(nolign-1)")
 Call TRAITE_NUM(BASPAG,PARMSK,"FMLKB","FUNMLINK","FMLINKB",5,"XYZFUNMLINK") From GTRAITE
 [M:MGD]REACT = val(PARMSK(8))
 ACTION = "BB15_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B16_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B16_NBLIG From FUNDBENCH
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B17_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action FWIPZOOM4
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "FWIPZOOM4"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB17_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MGD]WIPNUM(nolign-1)
 PARMSK(2) = num$([M:MGD]WIPTYP(nolign-1))
 PARMSK(3) = [M:MGD]ITMREF
 Call S_TAB_NUM(BASPAG,PARMSK,"","BENCHLIB","XYZBENCHLIB") From GACTION
 ACTION = "BB17_NBLIG" : PROGSUB = "FUNDBENCH" : PROGSPE = "SPEDBENCH" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WIPTYP
Onevent INIT_AREA Call D_WIPTYP(zc) From W1WT52LAM1
Return

Subprog D_WIPTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]WIPTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WIPSTA
Onevent INIT_AREA Call D_WIPSTA(zc) From W1WT52LAM1
Return

Subprog D_WIPSTA(VALEUR)
Variable Integer VALEUR
If varinit([M]WIPSTA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MRPMES
Onevent INIT_AREA Call D_MRPMES(zc) From W1WT52LAM1
Return

Subprog D_MRPMES(VALEUR)
Variable Integer VALEUR
If varinit([M]MRPMES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STRDAT
Onevent BEFORE_AREA Gosub AV_STRDAT From W1WT52LAM1
Return

$AV_STRDAT
Chgfmt [M]STRDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_ENDDAT
Onevent BEFORE_AREA Gosub AV_ENDDAT From W1WT52LAM1
Return

$AV_ENDDAT
Chgfmt [M]ENDDAT(indice) With "DPZ:"+GFMDAT
Gosub _AFF
Return

$ON_RMNEXTQTY
Onevent BEFORE_AREA Gosub AV_RMNEXTQTY From W1WT52LAM1
Return

$AV_RMNEXTQTY
Chgfmt [M]RMNEXTQTY(indice) With "NPz:"+GUNTFM1(1)
Gosub _AFF
Return

$ON_EXTSTO
Onevent BEFORE_AREA Gosub AV_EXTSTO From W1WT52LAM1
Return

$AV_EXTSTO
Chgfmt [M]EXTSTO(indice) With "NPz:"+GUNTFM1(1)
Gosub _AFF
Return

$ON_ORIFCY
Return

$ON_BOMOPE
Return

$ON_BUY
Return

$ON_CUR
Return

$ON_ITMREFORI
Return

$ON_NETPRI
Onevent BEFORE_AREA Gosub AV_NETPRI From W1WT52LAM1
Return

$AV_NETPRI
## Action PARDEV
Gosub _AFF
Return

$ON_OPTFLG
Onevent INIT_AREA Call D_OPTFLG(zc) From W1WT52LAM1
Return

Subprog D_OPTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]OPTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORI
Onevent INIT_AREA Call D_ORI(zc) From W1WT52LAM1
Return

Subprog D_ORI(VALEUR)
Variable Integer VALEUR
If varinit([M]ORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PLANNER2
Return

$ON_UOM
Return

$ON_BPRNUM
Return

$ON_FMI
Onevent INIT_AREA Call D_FMI(zc) From W1WT52LAM1
Return

Subprog D_FMI(VALEUR)
Variable Integer VALEUR
If varinit([M]FMI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PIO
Onevent INIT_AREA Call D_PIO(zc) From W1WT52LAM1
Return

Subprog D_PIO(VALEUR)
Variable Integer VALEUR
If varinit([M]PIO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MTOREF
Return

$ON_VCRTYPORI
Onevent INIT_AREA Call D_VCRTYPORI(zc) From W1WT52LAM1
Return

Subprog D_VCRTYPORI(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRTYPORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRNUMORI
Return

$CHG_STY
Gosub CHG_STY From W2WT52LAM1
Return

$TIT_COL
Gosub TIT_COL From W2WT52LAM1
Return


