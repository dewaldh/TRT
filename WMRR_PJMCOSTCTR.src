#<AdxTL>@(#)0.0.0.0 $Revision$Class Cost type
# Supervisor
## CRUD-CLASSE ## PJMCOSTCTR
# 2018-08-27 13:23:34 252


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMCOSTCTR [PJCC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_PJMCOSTCTR") From ASYRCOM : Endif
Local Instance PJMCOSTCTR Using R_PJMCOSTCTR

If !SILENCE : Call TRACE("3 --> New Instance R_PJMCOSTCTR") From ASYRCOM : Endif
PJMCOSTCTR = NewInstance R_PJMCOSTCTR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PJCC_]PCC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMCOSTCTR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.AREAD([PJCC_]PCCCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMCOSTCTR.PJCC.PCCCOD ="-num$(PJMCOSTCTR.PJCC.PCCCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMCOSTCTR.PJCC.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMCOSTCTR.PJCC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PJCC_]
FreeGroup PJMCOSTCTR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMCOSTCTR,ACLE,ASTATUS,_ETAG)
Variable Instance PJMCOSTCTR Using R_PJMCOSTCTR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PCCCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PCCCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PJMCOSTCTR [PJCC]
Default File [F:PJCC]
Read [F:PJCC]PCC0 = [L]_PCCCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PJCC]UPDTICK)>0
 [L]_ETAG = num$([F:PJCC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMCOSTCTR,ACLE,ASTATUS)
Variable Instance PJMCOSTCTR Using R_PJMCOSTCTR
Value Char ACLE
Variable Integer ASTATUS
Local Char _PCCCOD(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PCCCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.AREAD([L]_PCCCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMCOSTCTR,_PCCCOD,ASTATUS)
Variable Instance PJMCOSTCTR Using R_PJMCOSTCTR
Value Char _PCCCOD
Variable Integer ASTATUS

If PJMCOSTCTR = null : End : Endif

Gosub AVARIABLES From WMR00PJMCOSTCTR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMCOSTCTR.APARENT=null
 [L]A_I = PJMCOSTCTR.freeSnapshot
 PJMCOSTCTR.snapshotEnabled = 0
 PJMCOSTCTR.setAccessorEnabled = 0
Endif

If fmet PJMCOSTCTR.ACTX.AGETAFCRIGHT(PJMCOSTCTR,"GESPJCC",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:PJCC]
Read [F:PJCC]PCC0 = [L]_PCCCOD
If fstat
[L]A_ERROR = [L]_PCCCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMCOSTCTR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet PJMCOSTCTR.ACTX.AGETAFCRIGHTR(PJMCOSTCTR,"GESPJCC",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet PJMCOSTCTR.ACTX.ASTACRITROLE(PJMCOSTCTR,[L]_PCCCOD
& ,"PJCC","PJCC",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

PJMCOSTCTR.PJCC.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.AREAD([L]_PCCCOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMCOSTCTR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMCOSTCTR.APARENT=null
 PJMCOSTCTR.snapshotEnabled = 1
 PJMCOSTCTR.setAccessorEnabled = 1
Endif
LogicClose File [PJCC] ,[DATRATE]
End



