#<AdxTL>@(#)0.0.0.0 $Revision$Class Petty cash
# Supervisor
## WMREP REPRESENTATION ## CAI
# 2018-08-27 13:09:06 758

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:BAN])=0 : Local File BANK [BAN] : Endif
If clalev([F:A_])=0 : Local File BANK [A_] : Endif
If clalev([F:AFF])=0 : Local File AFCTFCY [AFF] : Endif
If clalev([F:ACC])=0 : Local File ACCES [ACC] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [BAN]
LogicClose File [A_]
LogicClose File [AFF]
LogicClose File [ACC]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
If GACTX.ALLACS=[V]CST_AYES
 Gosub AQUERY_JOIN_ALL 
Else
 Local Char ACRITROLE(250)(1..)
 [L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CAI","BAN",ACRITROLE,[V]CST_AFALSE)
 Link [BAN] With
& [AFF]AFF0~= [F:BAN]FCY;GACTX.APRFCOD;[L]_AFCRIGHT,
& [ACC]CODACC~= GACTX.USER;[F:BAN]ACS
& As [LNK_]
& Where ( (1=1)
& and ([F:ACC]CONSUL=2)
& and (evalue([L]ACRITROLE))
&  )
Endif
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN_ALL
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CAI","BAN",ACRITROLE,[V]CST_AFALSE)
Link [BAN] With
& [AFF]AFF0~= [F:BAN]FCY;GACTX.APRFCOD;[L]_AFCRIGHT
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"CAI","BAN",ACRITROLE,[V]CST_AFALSE)
Link [BAN] With
& [AFF]AFF0~= [F:BAN]FCY;GACTX.APRFCOD;[L]_AFCRIGHT,
& [ACC]CODACC~= GACTX.USER;[F:BAN]ACS
& As [LNK_]
& Where ( (1=1)
& and ([F:ACC]CONSUL=2)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# CAI --- BANK(BAN)
QRY(NBREP) = NewInstance R_CAI AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:BAN]AUUID)>0 & [F:BAN]AUUID=NullUuid
 [F:BAN]AUUID = getUuid
Endif
SetInstance QRY(NBREP).CAI With [F:BAN]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# CAI --- BANK(BAN)
QRY = NewInstance R_CAI AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:BAN]AUUID)>0 & [F:BAN]AUUID=NullUuid
 [F:BAN]AUUID = getUuid
Endif
SetInstance QRY.CAI With [F:BAN]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0CAI
CURQRY = "R_CAI"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).CAI.CPY.LNKPRO
Callmet QRY(NBREP).CAI.CUR.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.CAI.CPY.LNKPRO
Callmet QRY.CAI.CUR.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "BAN" : TBFIL(NBPRO) = "[F:BAN]BAN"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CAI.BAN"
NBPRO += 1 : TBPRO(NBPRO) = "DES" : TBFIL(NBPRO) = "[F:BAN]DES"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CAI.DES"
NBPRO += 1 : TBPRO(NBPRO) = "BANCSH" : TBFIL(NBPRO) = "[F:BAN]BANCSH"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "CAI.BANCSH"
NBPRO += 1 : TBPRO(NBPRO) = "CPY" : TBFIL(NBPRO) = "[F:BAN]CPY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CAI.CPY"
NBPRO += 1 : TBPRO(NBPRO) = "CUR" : TBFIL(NBPRO) = "[F:BAN]CUR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "CAI.CUR"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:BAN]BAN"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From CAI_RSTD
Gosub EVENTS From CAI_RSTD
Return
 


