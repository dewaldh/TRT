#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment
# Supervisor
## CRUD-CLASSE ## SHIPMENT
# 2018-08-27 13:28:41 022


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(SHIPMENT,ASTATUS)
Variable Instance SHIPMENT Using R_SHIPMENT
Variable Integer ASTATUS

If SHIPMENT = null : End : Endif

Gosub AVARIABLES From WMR00SHIPMENT
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_SHIPMENT
Else
 Gosub AUPDATE_SHIPMENT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = SHIPMENT.freeSnapshot
SHIPMENT.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
SHIPMENT.ASTALIN = [V]CST_AUPD
SHIPMENT.SHH.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = SHIPMENT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = SHIPMENT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPMENT._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPMENT._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet SHIPMENT._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If SHIPMENT.SHH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
SHIPMENT.SHH.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(SHIPMENT.SHH.ASTALIN)<>""
 [L]A_ASTALIN = SHIPMENT.SHH.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(SHIPMENT.SHH.SHD) : # SHIPMENTD -- 2
 If SHIPMENT.SHH.SHD(A_N2) <> null
& and SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ANEW & SHIPMENT.SHH.ASTALIN=[V]CST_ADEL
   SHIPMENT.SHH.SHD(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If SHIPMENT.SHH.SHD(A_N2).ASTALIN=[V]CST_ANEW & find(SHIPMENT.SHH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   SHIPMENT.SHH.SHD(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(SHIPMENT.SHH.SHD(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(SHIPMENT.SHH.SHD(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHD(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHD(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHD(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
For A_N2=1 to maxtab(SHIPMENT.SHH.SHD)
 If SHIPMENT.SHH.SHD(A_N2)<>null
  If SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ADEL & SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ANEWDEL
   [L]A_OK1 = 1 : Break
  Endif
 Endif
Next
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SHIPMENT.SHH,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"SHIPMENTD:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPD) : # SHIPDOC -- 3
 If SHIPMENT.SHH.SHIPD(A_N2) <> null
& and SHIPMENT.SHH.SHIPD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If SHIPMENT.SHH.SHIPD(A_N2).ASTALIN<>[V]CST_ANEW & SHIPMENT.SHH.ASTALIN=[V]CST_ADEL
   SHIPMENT.SHH.SHIPD(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If SHIPMENT.SHH.SHIPD(A_N2).ASTALIN=[V]CST_ANEW & find(SHIPMENT.SHH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   SHIPMENT.SHH.SHIPD(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(SHIPMENT.SHH.SHIPD(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(SHIPMENT.SHH.SHIPD(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPD(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPD(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPD(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPT) : # SHIPTRACK -- 4
 If SHIPMENT.SHH.SHIPT(A_N2) <> null
& and SHIPMENT.SHH.SHIPT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If SHIPMENT.SHH.SHIPT(A_N2).ASTALIN<>[V]CST_ANEW & SHIPMENT.SHH.ASTALIN=[V]CST_ADEL
   SHIPMENT.SHH.SHIPT(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If SHIPMENT.SHH.SHIPT(A_N2).ASTALIN=[V]CST_ANEW & find(SHIPMENT.SHH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   SHIPMENT.SHH.SHIPT(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(SHIPMENT.SHH.SHIPT(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(SHIPMENT.SHH.SHIPT(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPT(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPT(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPT(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(SHIPMENT.SHH.SHD) : # SHIPMENTD -- 2
 If SHIPMENT.SHH.SHD(A_N2) <> null
& and SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(SHIPMENT.SHH.SHD(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(SHIPMENT.SHH.SHD(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHD(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHD(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHD(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Local Integer A_OK1
For A_N2=1 to maxtab(SHIPMENT.SHH.SHD)
 If SHIPMENT.SHH.SHD(A_N2)<>null
  If SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ADEL & SHIPMENT.SHH.SHD(A_N2).ASTALIN<>[V]CST_ANEWDEL
   [L]A_OK1 = 1 : Break
  Endif
 Endif
Next
If [L]A_OK1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SHIPMENT.SHH,"",0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,"SHIPMENTD:"-mess(70,126,1)) : # Mandatory link
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPD) : # SHIPDOC -- 3
 If SHIPMENT.SHH.SHIPD(A_N2) <> null
& and SHIPMENT.SHH.SHIPD(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(SHIPMENT.SHH.SHIPD(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(SHIPMENT.SHH.SHIPD(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPD(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPD(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPD(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPT) : # SHIPTRACK -- 4
 If SHIPMENT.SHH.SHIPT(A_N2) <> null
& and SHIPMENT.SHH.SHIPT(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(SHIPMENT.SHH.SHIPT(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(SHIPMENT.SHH.SHIPT(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPT(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPT(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.SHIPT(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(SHIPMENT.SHH.ASTALIN)<>""
 [L]A_ASTALIN = SHIPMENT.SHH.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_SHIPMENT
Trbegin [F:SHH]
 Gosub AUPDATE_SHIPMENT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(SHIPMENT.SHH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 SHIPMENT.SHH.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(SHIPMENT.SHH.SHD)
 If SHIPMENT.SHH.SHD(A_N2) <> null
  [L]ASTATUS2 = fmet SHIPMENT.SHH.SHD(A_N2)._AUPDATE_AFTER
  If SHIPMENT.SHH.SHD(A_N2).ASTALIN=[V]CST_ADEL or SHIPMENT.SHH.SHD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance SHIPMENT.SHH.SHD(A_N2)
   SHIPMENT.SHH.SHD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPD)
 If SHIPMENT.SHH.SHIPD(A_N2) <> null
  [L]ASTATUS2 = fmet SHIPMENT.SHH.SHIPD(A_N2)._AUPDATE_AFTER
  If SHIPMENT.SHH.SHIPD(A_N2).ASTALIN=[V]CST_ADEL or SHIPMENT.SHH.SHIPD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance SHIPMENT.SHH.SHIPD(A_N2)
   SHIPMENT.SHH.SHIPD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPT)
 If SHIPMENT.SHH.SHIPT(A_N2) <> null
  [L]ASTATUS2 = fmet SHIPMENT.SHH.SHIPT(A_N2)._AUPDATE_AFTER
  If SHIPMENT.SHH.SHIPT(A_N2).ASTALIN=[V]CST_ADEL or SHIPMENT.SHH.SHIPT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance SHIPMENT.SHH.SHIPT(A_N2)
   SHIPMENT.SHH.SHIPT(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_SHIPMENT
[L]A_ASTALIN = SHIPMENT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.SHH._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = SHIPMENT.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If SHIPMENT.snapshotEnabled=1
 [L]A_RETIK = SHIPMENT.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(SHIPMENT.SHH.SHD)
 If SHIPMENT.SHH.SHD(A_N2) <> null
  [L]ASTATUS2 = fmet SHIPMENT.SHH.SHD(A_N2)._AUPDATE_ABORT
  If SHIPMENT.SHH.SHD(A_N2).ASTALIN=[V]CST_ADEL or SHIPMENT.SHH.SHD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance SHIPMENT.SHH.SHD(A_N2)
   SHIPMENT.SHH.SHD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPD)
 If SHIPMENT.SHH.SHIPD(A_N2) <> null
  [L]ASTATUS2 = fmet SHIPMENT.SHH.SHIPD(A_N2)._AUPDATE_ABORT
  If SHIPMENT.SHH.SHIPD(A_N2).ASTALIN=[V]CST_ADEL or SHIPMENT.SHH.SHIPD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance SHIPMENT.SHH.SHIPD(A_N2)
   SHIPMENT.SHH.SHIPD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(SHIPMENT.SHH.SHIPT)
 If SHIPMENT.SHH.SHIPT(A_N2) <> null
  [L]ASTATUS2 = fmet SHIPMENT.SHH.SHIPT(A_N2)._AUPDATE_ABORT
  If SHIPMENT.SHH.SHIPT(A_N2).ASTALIN=[V]CST_ADEL or SHIPMENT.SHH.SHIPT(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance SHIPMENT.SHH.SHIPT(A_N2)
   SHIPMENT.SHH.SHIPT(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet SHIPMENT.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



