#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment terms
# Supervisor
## CRUD-CLASSE ## TABPAYTERM
# 2018-08-27 12:52:10 886


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABPAYTERM [TPT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABPAYTERM") From ASYRCOM : Endif
Local Instance TABPAYTERM Using C_TABPAYTERM

If !SILENCE : Call TRACE("3 --> New Instance C_TABPAYTERM") From ASYRCOM : Endif
TABPAYTERM = NewInstance C_TABPAYTERM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TPT_]TPT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABPAYTERM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM.AREAD([TPT_]PTE,[TPT_]LEG,[TPT_]PTELIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABPAYTERM.PTE ="-num$(TABPAYTERM.PTE)) From ASYRCOM
 Call TRACE("TABPAYTERM.LEG ="-num$(TABPAYTERM.LEG)) From ASYRCOM
 Call TRACE("TABPAYTERM.PTELIN ="-num$(TABPAYTERM.PTELIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABPAYTERM.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABPAYTERM.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TPT_]
FreeGroup TABPAYTERM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABPAYTERM,ACLE,ASTATUS,_ETAG)
Variable Instance TABPAYTERM Using C_TABPAYTERM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PTE(15)
Local Char _LEG(20)
Local Shortint _PTELIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PTE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PTELIN = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File TABPAYTERM [TPT]
Default File [F:TPT]
Read [F:TPT]TPT0 = [L]_PTE;[L]_LEG;[L]_PTELIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TPT]UPDTICK)>0
 [L]_ETAG = num$([F:TPT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABPAYTERM,ACLE,ASTATUS)
Variable Instance TABPAYTERM Using C_TABPAYTERM
Value Char ACLE
Variable Integer ASTATUS
Local Char _PTE(15)
Local Char _LEG(20)
Local Shortint _PTELIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PTE = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_PTELIN = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM.AREAD([L]_PTE,[L]_LEG,[L]_PTELIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABPAYTERM,_PTE,_LEG,_PTELIN,ASTATUS)
Variable Instance TABPAYTERM Using C_TABPAYTERM
Value Char _PTE
Value Char _LEG
Value Shortint _PTELIN
Variable Integer ASTATUS

If TABPAYTERM = null : End : Endif

Gosub AVARIABLES From WMC00TABPAYTERM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABPAYTERM.APARENT=null
 [L]A_I = TABPAYTERM.freeSnapshot
 TABPAYTERM.snapshotEnabled = 0
 TABPAYTERM.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABPAYTERM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABPAYTERM.APARENT=null
 TABPAYTERM.snapshotEnabled = 1
 TABPAYTERM.setAccessorEnabled = 1
Endif
LogicClose File [TPT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM._ACTION_PARAM("AREAD_BEFORE",[L]_PTE,[L]_LEG,[L]_PTELIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TPT]
Read [F:TPT]TPT0 = [L]_PTE;[L]_LEG;[L]_PTELIN
If fstat
[L]A_ERROR = [L]_PTE+"~"+[L]_LEG+"~"+num$([L]_PTELIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABPAYTERM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TPT]AUUID)>0 & [F:TPT]AUUID=NullUuid
 [F:TPT]AUUID = getUuid
Endif
SetInstance TABPAYTERM With [F:TPT]
TABPAYTERM.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 6
 If ([F:TPT]DAYMON([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  TABPAYTERM.C_DAYMON(A_NEWCOL) = NewInstance  C_TABPAYTERM_C_DAYMON(TABPAYTERM.ACTX,NullUuid,[L]A_I,TABPAYTERM,"C_DAYMON") AllocGroup TABPAYTERM
  TABPAYTERM.C_DAYMON(A_NEWCOL).DAYMON = [F:TPT]DAYMON([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM.C_DAYMON(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 7
 If ([F:TPT]FBDDAYFLG([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  TABPAYTERM.C_FBDDAYFLG(A_NEWCOL) = NewInstance  C_TABPAYTERM_C_FBDDAYFLG(TABPAYTERM.ACTX,NullUuid,[L]A_I,TABPAYTERM,"C_FBDDAYFLG") AllocGroup TABPAYTERM
  TABPAYTERM.C_FBDDAYFLG(A_NEWCOL).FBDDAYFLG = [F:TPT]FBDDAYFLG([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM.C_FBDDAYFLG(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet TABPAYTERM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABPAYTERM" & ZONE="DESAXX" & IDENT1=TABPAYTERM.PTE & IDENT2=TABPAYTERM.LEG
 Call ASETTEXTRA(TABPAYTERM.AXX,TABPAYTERM.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABPAYTERM.AXX(maxtab(TABPAYTERM.AXX)).FLG = 0
Next AXX
If !len(fmet TABPAYTERM.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TABPAYTERM.AXX,TABPAYTERM.AllocGrp(),"DESAXX",
& fmet TABPAYTERM.AGETTEXTRALAN("DESAXX",TABPAYTERM.ACTX.AFOLD.ALANGDEF),
& TABPAYTERM.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABPAYTERM" & ZONE="SHOAXX" & IDENT1=TABPAYTERM.PTE & IDENT2=TABPAYTERM.LEG
 Call ASETTEXTRA(TABPAYTERM.AXX,TABPAYTERM.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABPAYTERM.AXX(maxtab(TABPAYTERM.AXX)).FLG = 0
Next AXX
If !len(fmet TABPAYTERM.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(TABPAYTERM.AXX,TABPAYTERM.AllocGrp(),"SHOAXX",
& fmet TABPAYTERM.AGETTEXTRALAN("SHOAXX",TABPAYTERM.ACTX.AFOLD.ALANGDEF),
& TABPAYTERM.ACTX.LAN) From ASYRSUB
Endif

Return



