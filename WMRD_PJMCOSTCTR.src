#<AdxTL>@(#)0.0.0.0 $Revision$Class Cost type
# Supervisor
## CRUD-CLASSE ## PJMCOSTCTR
# 2018-08-27 13:23:34 148


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMCOSTCTR,ASTATUS)
Variable Instance PJMCOSTCTR Using R_PJMCOSTCTR
Variable Integer ASTATUS

If PJMCOSTCTR = null : End : Endif

Gosub AVARIABLES From WMR00PJMCOSTCTR
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet PJMCOSTCTR.ACTX.AGETAFCRIGHT(PJMCOSTCTR,"GESPJCC",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet PJMCOSTCTR.ACTX.AGETAFCRIGHTD(PJMCOSTCTR,"GESPJCC",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMCOSTCTR
Else
 Gosub ADELETE_PJMCOSTCTR
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
PJMCOSTCTR.ASTALIN = [V]CST_ADEL
PJMCOSTCTR.PJCC.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMCOSTCTR.PJCC,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMCOSTCTR.PJCC.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMCOSTCTR.PJCC.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(PJMCOSTCTR.PJCC.CDIE)
 If PJMCOSTCTR.PJCC.CDIE([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.CDIE([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(PJMCOSTCTR.PJCC.DATRATE) : # PJMCOSTDAT -- 2
 If PJMCOSTCTR.PJCC.DATRATE(A_N2) <> null
& and PJMCOSTCTR.PJCC.DATRATE(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If PJMCOSTCTR.PJCC.DATRATE(A_N2).ASTALIN<>[V]CST_ANEW
   PJMCOSTCTR.PJCC.DATRATE(A_N2).ASTALIN = [V]CST_ADEL
   [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.DATRATE(A_N2)._ADELETE_CONTROL_BEFORE)
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(PJMCOSTCTR.PJCC.DATRATE) : # PJMCOSTDAT -- 2
 If PJMCOSTCTR.PJCC.DATRATE(A_N2) <> null
& and PJMCOSTCTR.PJCC.DATRATE(A_N2).ASTALIN<>[V]CST_ANEWDEL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.DATRATE(A_N2)._ADELETE_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(PJMCOSTCTR.PJCC.CDIE)
 If PJMCOSTCTR.PJCC.CDIE([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.CDIE([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMCOSTCTR
Trbegin [F:PJCC]
 Gosub ADELETE_PJMCOSTCTR
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_PJMCOSTCTR
[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.PJCC._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMCOSTCTR.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMCOSTCTR.snapshotEnabled=1
 [L]A_RETIK = PJMCOSTCTR.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMCOSTCTR.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



