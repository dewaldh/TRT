#<AdxTL>@(#)0.0.0.0 $Revision$Class Purchase invoices
# Supervisor
## ACLA-CLASSE ## PINVOICE
# 2018-08-27 12:39:18 616

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "PINVOICE_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0PINVOICE
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 10
 If this.C_LED(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_LED(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_DES(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DES(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_TAX(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TAX(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_DIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DIE(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPRNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPRNAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPAADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPAADDLIG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPYNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPYNAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPYADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPYADDLIG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 10
 If this.C_RITCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_RITCOD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 15
 If this.COL_COSTS(AINDCLA)<>null
  [L]ASTATUS = fmet this.COL_COSTS(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.PIV<>null
 [L]ASTATUS = fmet this.PIV._AERROR(_CTX,_SUPP)
Endif
For AINDCLA=1 To maxtab(this.PVV)
 If this.PVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVV(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PID)
 If this.PID(AINDCLA)<>null
  [L]ASTATUS = fmet this.PID(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PVF)
 If this.PVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVF(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PVF2)
 If this.PVF2(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVF2(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.PIV2<>null
 [L]ASTATUS = fmet this.PIV2._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0PINVOICE
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 10
 If this.C_LED(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_LED(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_DES(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DES(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_TAX(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TAX(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_DIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DIE(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPRNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPRNAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPAADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPAADDLIG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPYNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPYNAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPYADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPYADDLIG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 10
 If this.C_RITCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_RITCOD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 15
 If this.COL_COSTS(AINDCLA)<>null
  [L]ASTATUS = fmet this.COL_COSTS(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.PIV<>null
 [L]ASTATUS = fmet this.PIV._ADELERRORS(_APARAM)
Endif
For AINDCLA=1 To maxtab(this.PVV)
 If this.PVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVV(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PID)
 If this.PID(AINDCLA)<>null
  [L]ASTATUS = fmet this.PID(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PVF)
 If this.PVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVF(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PVF2)
 If this.PVF2(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVF2(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.PIV2<>null
 [L]ASTATUS = fmet this.PIV2._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0PINVOICE
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 10
 If this.C_LED(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_LED(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_LED('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 5
 If this.C_DES(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DES(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DES('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_TAX(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_TAX(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_TAX('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_DIE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DIE(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DIE('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPRNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPRNAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPRNAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPAADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPAADDLIG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPAADDLIG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPYNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPYNAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPYNAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPYADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPYADDLIG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPYADDLIG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 10
 If this.C_RITCOD(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_RITCOD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_RITCOD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 15
 If this.COL_COSTS(AINDCLA)<>null
  [L]ASTATUS = fmet this.COL_COSTS(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'COL_COSTS('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.PIV<>null
 [L]ASTATUS = fmet this.PIV._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PIV')
Endif
For AINDCLA=1 To maxtab(this.PVV)
 If this.PVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVV(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PVV('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PID)
 If this.PID(AINDCLA)<>null
  [L]ASTATUS = fmet this.PID(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PID('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PVF)
 If this.PVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVF(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PVF('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PVF2)
 If this.PVF2(AINDCLA)<>null
  [L]ASTATUS = fmet this.PVF2(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PVF2('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.PIV2<>null
 [L]ASTATUS = fmet this.PIV2._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PIV2')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0PINVOICE
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "COL_COSTS"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"COL_COSTS",this)
 When "C_BPAADDLIG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPAADDLIG",this)
 When "C_BPRNAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPRNAM",this)
 When "C_BPYADDLIG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPYADDLIG",this)
 When "C_BPYNAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPYNAM",this)
 When "C_DES"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DES",this)
 When "C_DIE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DIE",this)
 When "C_LED"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_LED",this)
 When "C_RITCOD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_RITCOD",this)
 When "C_TAX"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_TAX",this)
 When "PID"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PID",this)
 When "PIV"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PIV",this)
 When "PIV2"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PIV2",this)
 When "PVF"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PVF",this)
 When "PVF2"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PVF2",this)
 When "PVV"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PVV",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "COL_COSTS"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"COL_COSTS","C_PINVOICE_COL_COSTS",this)
 When "C_BPAADDLIG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPAADDLIG","C_PINVOICE_C_BPAADDLIG",this)
 When "C_BPRNAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPRNAM","C_PINVOICE_C_BPRNAM",this)
 When "C_BPYADDLIG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPYADDLIG","C_PINVOICE_C_BPYADDLIG",this)
 When "C_BPYNAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPYNAM","C_PINVOICE_C_BPYNAM",this)
 When "C_DES"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DES","C_PINVOICE_C_DES",this)
 When "C_DIE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DIE","C_PINVOICE_C_DIE",this)
 When "C_LED"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_LED","C_PINVOICE_C_LED",this)
 When "C_RITCOD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_RITCOD","C_PINVOICE_C_RITCOD",this)
 When "C_TAX"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_TAX","C_PINVOICE_C_TAX",this)
 When "PID"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PID","C_PINVOICED",this)
 When "PIV"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PIV","C_PINVOICEV",this)
 When "PIV2"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PIV2","C_PINVOICEV",this)
 When "PVF"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PVF","C_PVCRFOOT",this)
 When "PVF2"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PVF2","C_PVCRFOOT",this)
 When "PVV"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PVV","C_PVCRVAT",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "COL_COSTS"
  [L]_ALINE = 15
 When "C_BPAADDLIG"
  [L]_ALINE = 3
 When "C_BPRNAM"
  [L]_ALINE = 2
 When "C_BPYADDLIG"
  [L]_ALINE = 3
 When "C_BPYNAM"
  [L]_ALINE = 2
 When "C_DES"
  [L]_ALINE = 5
 When "C_DIE"
  [L]_ALINE = 20
 When "C_LED"
  [L]_ALINE = 10
 When "C_RITCOD"
  [L]_ALINE = 10
 When "C_TAX"
  [L]_ALINE = 20
 When "PID"
  [L]_ALINE = 0
 When "PIV"
  [L]_ALINE = 1
 When "PIV2"
  [L]_ALINE = 1
 When "PVF"
  [L]_ALINE = 0
 When "PVF2"
  [L]_ALINE = 0
 When "PVV"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "COL_COSTS"
  [L]_ALINE = 2
 When "C_BPAADDLIG"
  [L]_ALINE = 2
 When "C_BPRNAM"
  [L]_ALINE = 2
 When "C_BPYADDLIG"
  [L]_ALINE = 2
 When "C_BPYNAM"
  [L]_ALINE = 2
 When "C_DES"
  [L]_ALINE = 2
 When "C_DIE"
  [L]_ALINE = 1
 When "C_LED"
  [L]_ALINE = 2
 When "C_RITCOD"
  [L]_ALINE = 2
 When "C_TAX"
  [L]_ALINE = 2
 When "PID"
  [L]_ALINE = 1
 When "PIV"
  [L]_ALINE = 2
 When "PIV2"
  [L]_ALINE = 2
 When "PVF"
  [L]_ALINE = 1
 When "PVF2"
  [L]_ALINE = 1
 When "PVV"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "NUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.PIV(1) = NewInstance C_PINVOICEV(this.ACTX,NullUuid,1,this,"PIV") AllocGroup this
this.PIV(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PIV(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.PIV2(1) = NewInstance C_PINVOICEV(this.ACTX,NullUuid,1,this,"PIV2") AllocGroup this
this.PIV2(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PIV2(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



