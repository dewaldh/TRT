#<AdxTL>@(#)0.0.0.0 $Revision$Class Commercial BOMs
# Supervisor
## ACLA-CLASSE ## BODC
# 2018-08-27 12:24:42 415


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : ITMREF Parent product ( Field ITM 20)
####################################################################

$SET_ITMREF
If [L]_AOLDVAL<>this.ITMREF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ITMREF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ITMREF
 Gosub PROPAGATE_ITMREF
Endif
Return

$INIT_ITMREF
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "ITMREF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ITMREF
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "ITMREF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ITMREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ITMREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ITMREF
[L]CURPRO = "ITMREF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ITMREF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ITMREF
[L]CURPRO = "ITMREF"
If vireblc(this.ITMREF,2)<>vireblc(format$("K:20c",this.ITMREF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ITMREF
[L]CURPRO = "ITMREF"
If vireblc(this.ITMREF,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPITM.ACTRLREF(this,"ITMREF",this.ITMREF,this.ITMREF,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ITMREF<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ITMREF
[L]CURPRO = "ITMREF"
Return

$PROPAGATE_ITMREF
this.isReadonly = 0
[L]CURPRO = "ITMREF"
Gosub _LNKPRO_ITMREF
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ITMREF
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "ITMREF"
$_LNKPRO_ITMREF
If vireblc(this.ITMREF,2)<>""
 # Link ITMMASTER
 Local File ITMMASTER [WITM]
 Read [F:WITM]ITM0 = this.ITMREF
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ITMMASTER" & ZONE="DES1AXX" & IDENT1=[F:WITM]ITMREF & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ITMREF","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WITM]
Endif
Return

$_ALOADATTRIBUTE_ITMREF
[L]ASTATUS = fmet this.ASETATTRIBUTE("ITMREF","$isMandatory","true")
Return


####################################################################
# 2 : BOMALT BOM code ( Field TBO 0)
####################################################################

$SET_BOMALT
If [L]_AOLDVAL<>this.BOMALT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMALT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMALT
 Gosub PROPAGATE_BOMALT
Endif
Return

$INIT_BOMALT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMALT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOMALT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMALT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMALT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMALT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMALT
[L]CURPRO = "BOMALT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOMALT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMALT
[L]CURPRO = "BOMALT"
Return

$_AOTHERS_BOMALT
[L]CURPRO = "BOMALT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMALT
[L]CURPRO = "BOMALT"
If this.BOMALT<>0
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTBO.ACTRLREF(this,"BOMALT",this.BOMALT,1,this.BOMALT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BOMALT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_BOMALT
this.isReadonly = 0
[L]CURPRO = "BOMALT"
Gosub _LNKPRO_BOMALT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMALT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMALT"
$_LNKPRO_BOMALT
If this.BOMALT<>0
 # Link TABBOMALT
 Local File TABBOMALT [WTBO]
 Read [F:WTBO]TBO0 = 1;this.BOMALT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABBOMALT" & ZONE="TBOSHOAXX" & IDENT1=num$([F:WTBO]BOMALTTYP) & IDENT2=num$([F:WTBO]BOMALT) & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BOMALT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABBOMALT" & ZONE="TBODESAXX" & IDENT1=num$([F:WTBO]BOMALTTYP) & IDENT2=num$([F:WTBO]BOMALT) & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("BOMALT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTBO]
Endif
Return

$_ALOADATTRIBUTE_BOMALT
[L]ASTATUS = fmet this.ASETATTRIBUTE("BOMALT","$isMandatory","true")
Return


####################################################################
# 3 : BOMDESAXX Header title ( Field AX3)
####################################################################

$GET_BOMDESAXX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMDESAXX"
this.BOMDESAXX = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_BOMDESAXX
If [L]_AOLDVAL<>this.BOMDESAXX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMDESAXX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMDESAXX
 Gosub PROPAGATE_BOMDESAXX
Endif
Return

$INIT_BOMDESAXX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMDESAXX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOMDESAXX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMDESAXX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMDESAXX             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMDESAXX             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMDESAXX
[L]CURPRO = "BOMDESAXX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BOMDESAXX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMDESAXX
[L]CURPRO = "BOMDESAXX"
If vireblc(fmet this.AGETTEXTRA("BOMDESAXX"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("BOMDESAXX")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BOMDESAXX
[L]CURPRO = "BOMDESAXX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMDESAXX
[L]CURPRO = "BOMDESAXX"
Return

$PROPAGATE_BOMDESAXX
this.isReadonly = 0
[L]CURPRO = "BOMDESAXX"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.BOMDESAXX)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMDESAXX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMDESAXX"
$_LNKPRO_BOMDESAXX
Return


####################################################################
# 4 : IDENT1 Identifier 1 ( Field ID1 80)
####################################################################

$SET_IDENT1
If [L]_AOLDVAL<>this.IDENT1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IDENT1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IDENT1
 Gosub PROPAGATE_IDENT1
Endif
Return

$INIT_IDENT1
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "IDENT1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_IDENT1
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "IDENT1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IDENT1                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IDENT1                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IDENT1
[L]CURPRO = "IDENT1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.IDENT1,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IDENT1
[L]CURPRO = "IDENT1"
If vireblc(this.IDENT1,2)<>vireblc(format$("K:80X",this.IDENT1),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_IDENT1
[L]CURPRO = "IDENT1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IDENT1
[L]CURPRO = "IDENT1"
Return

$PROPAGATE_IDENT1
this.isReadonly = 0
[L]CURPRO = "IDENT1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IDENT1
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "IDENT1"
$_LNKPRO_IDENT1
Return


####################################################################
# 5 : USESTA Use status ( Field Local menu number 240)
####################################################################

$SET_USESTA
If [L]_AOLDVAL<>this.USESTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USESTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USESTA
 Gosub PROPAGATE_USESTA
Endif
Return

$INIT_USESTA
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "USESTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USESTA=0 and fmet this.AGETATTRIBUTE("USESTA","$isMandatory")="true"
 this.USESTA = 1
Endif
Return
 
$CONTROL_USESTA
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "USESTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USESTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USESTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USESTA
[L]CURPRO = "USESTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USESTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USESTA
[L]CURPRO = "USESTA"
If this.USESTA<0 or this.USESTA>len(mess(0,240,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"240 ->"-num$(this.USESTA)-mess(99,123,1)):  Return : # Local menu "240 -> Invalid option
Endif
Return

$_AOTHERS_USESTA
[L]CURPRO = "USESTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USESTA
[L]CURPRO = "USESTA"
Return

$PROPAGATE_USESTA
this.isReadonly = 0
[L]CURPRO = "USESTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USESTA
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "USESTA"
$_LNKPRO_USESTA
Return


####################################################################
# 6 : BOHSTRDAT Validity start date ( Field D)
####################################################################

$SET_BOHSTRDAT
If [L]_AOLDVAL<>this.BOHSTRDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOHSTRDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOHSTRDAT
 Gosub PROPAGATE_BOHSTRDAT
Endif
Return

$INIT_BOHSTRDAT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOHSTRDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOHSTRDAT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOHSTRDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOHSTRDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOHSTRDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOHSTRDAT
[L]CURPRO = "BOHSTRDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOHSTRDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOHSTRDAT
[L]CURPRO = "BOHSTRDAT"
Return

$_AOTHERS_BOHSTRDAT
[L]CURPRO = "BOHSTRDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOHSTRDAT
[L]CURPRO = "BOHSTRDAT"
Return

$PROPAGATE_BOHSTRDAT
this.isReadonly = 0
[L]CURPRO = "BOHSTRDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOHSTRDAT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOHSTRDAT"
$_LNKPRO_BOHSTRDAT
Return


####################################################################
# 7 : BOHENDDAT Validity end date ( Field D)
####################################################################

$SET_BOHENDDAT
If [L]_AOLDVAL<>this.BOHENDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOHENDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOHENDDAT
 Gosub PROPAGATE_BOHENDDAT
Endif
Return

$INIT_BOHENDDAT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOHENDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOHENDDAT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOHENDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOHENDDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOHENDDAT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOHENDDAT
[L]CURPRO = "BOHENDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOHENDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOHENDDAT
[L]CURPRO = "BOHENDDAT"
Return

$_AOTHERS_BOHENDDAT
[L]CURPRO = "BOHENDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOHENDDAT
[L]CURPRO = "BOHENDDAT"
Return

$PROPAGATE_BOHENDDAT
this.isReadonly = 0
[L]CURPRO = "BOHENDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOHENDDAT
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOHENDDAT"
$_LNKPRO_BOHENDDAT
Return


####################################################################
# 8 : BOMRLE Review level ( Field A 10)
####################################################################

$SET_BOMRLE
If [L]_AOLDVAL<>this.BOMRLE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMRLE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMRLE
 Gosub PROPAGATE_BOMRLE
Endif
Return

$INIT_BOMRLE
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMRLE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BOMRLE
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMRLE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMRLE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMRLE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMRLE
[L]CURPRO = "BOMRLE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BOMRLE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMRLE
[L]CURPRO = "BOMRLE"
Return

$_AOTHERS_BOMRLE
[L]CURPRO = "BOMRLE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMRLE
[L]CURPRO = "BOMRLE"
Return

$PROPAGATE_BOMRLE
this.isReadonly = 0
[L]CURPRO = "BOMRLE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMRLE
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMRLE"
$_LNKPRO_BOMRLE
Return


####################################################################
# 9 : BASQTY Base quantity ( Field QTY 0)
####################################################################

$SET_BASQTY
If [L]_AOLDVAL<>this.BASQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BASQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BASQTY
 Gosub PROPAGATE_BASQTY
Endif
Return

$INIT_BASQTY
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BASQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BASQTY
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BASQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BASQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BASQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BASQTY
[L]CURPRO = "BASQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BASQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BASQTY
[L]CURPRO = "BASQTY"
Return

$_AOTHERS_BASQTY
[L]CURPRO = "BASQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BASQTY
[L]CURPRO = "BASQTY"
Return

$PROPAGATE_BASQTY
this.isReadonly = 0
[L]CURPRO = "BASQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BASQTY
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BASQTY"
$_LNKPRO_BASQTY
Return


####################################################################
# 10 : QTYCOD Management unit ( Field Local menu number 225)
####################################################################

$SET_QTYCOD
If [L]_AOLDVAL<>this.QTYCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_QTYCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.QTYCOD
 Gosub PROPAGATE_QTYCOD
Endif
Return

$INIT_QTYCOD
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "QTYCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.QTYCOD=0 and fmet this.AGETATTRIBUTE("QTYCOD","$isMandatory")="true"
 this.QTYCOD = 1
Endif
Return
 
$CONTROL_QTYCOD
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "QTYCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_QTYCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_QTYCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_QTYCOD
[L]CURPRO = "QTYCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.QTYCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_QTYCOD
[L]CURPRO = "QTYCOD"
If this.QTYCOD<0 or this.QTYCOD>len(mess(0,225,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"225 ->"-num$(this.QTYCOD)-mess(99,123,1)):  Return : # Local menu "225 -> Invalid option
Endif
Return

$_AOTHERS_QTYCOD
[L]CURPRO = "QTYCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_QTYCOD
[L]CURPRO = "QTYCOD"
Return

$PROPAGATE_QTYCOD
this.isReadonly = 0
[L]CURPRO = "QTYCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_QTYCOD
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "QTYCOD"
$_LNKPRO_QTYCOD
Return


####################################################################
# 11 : HEATEX Header text ( Field TXC 12)
####################################################################

$SET_HEATEX
If [L]_AOLDVAL<>this.HEATEX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HEATEX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HEATEX
 Gosub PROPAGATE_HEATEX
Endif
Return

$INIT_HEATEX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "HEATEX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HEATEX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "HEATEX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HEATEX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HEATEX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HEATEX
[L]CURPRO = "HEATEX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HEATEX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HEATEX
[L]CURPRO = "HEATEX"
If vireblc(this.HEATEX,2)<>vireblc(format$("K:12X",this.HEATEX),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HEATEX
[L]CURPRO = "HEATEX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HEATEX
[L]CURPRO = "HEATEX"
Return

$PROPAGATE_HEATEX
this.isReadonly = 0
[L]CURPRO = "HEATEX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HEATEX
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "HEATEX"
$_LNKPRO_HEATEX
Return


####################################################################
# 12 : BOMALTTYP BOM code type ( Field Local menu number 224)
####################################################################

$SET_BOMALTTYP
If [L]_AOLDVAL<>this.BOMALTTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BOMALTTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BOMALTTYP
 Gosub PROPAGATE_BOMALTTYP
Endif
Return

$INIT_BOMALTTYP
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMALTTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BOMALTTYP=0 and fmet this.AGETATTRIBUTE("BOMALTTYP","$isMandatory")="true"
 this.BOMALTTYP = 1
Endif
Return
 
$CONTROL_BOMALTTYP
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMALTTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BOMALTTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BOMALTTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BOMALTTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
If this.BOMALTTYP<0 or this.BOMALTTYP>len(mess(0,224,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"224 ->"-num$(this.BOMALTTYP)-mess(99,123,1)):  Return : # Local menu "224 -> Invalid option
Endif
Return

$_AOTHERS_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BOMALTTYP
[L]CURPRO = "BOMALTTYP"
Return

$PROPAGATE_BOMALTTYP
this.isReadonly = 0
[L]CURPRO = "BOMALTTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BOMALTTYP
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "BOMALTTYP"
$_LNKPRO_BOMALTTYP
Return


####################################################################
# 13 : ACSCOD Access code ( Field ACS 10)
####################################################################

$SET_ACSCOD
If [L]_AOLDVAL<>this.ACSCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACSCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACSCOD
 Gosub PROPAGATE_ACSCOD
Endif
Return

$INIT_ACSCOD
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "ACSCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACSCOD
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "ACSCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACSCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACSCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACSCOD
[L]CURPRO = "ACSCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACSCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACSCOD
[L]CURPRO = "ACSCOD"
If vireblc(this.ACSCOD,2)<>vireblc(format$("KTD:10B",this.ACSCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACSCOD
[L]CURPRO = "ACSCOD"
If vireblc(this.ACSCOD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACS.ACTRLREF(this,"ACSCOD",this.ACSCOD,this.ACSCOD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACSCOD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACSCOD
[L]CURPRO = "ACSCOD"
Return

$PROPAGATE_ACSCOD
this.isReadonly = 0
[L]CURPRO = "ACSCOD"
Gosub _LNKPRO_ACSCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACSCOD
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "ACSCOD"
$_LNKPRO_ACSCOD
If vireblc(this.ACSCOD,2)<>""
 # Link ACCCOD
 Local File ACCCOD [WACS]
 Read [F:WACS]ACS0 = this.ACSCOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ACCCOD" & ZONE="DESACC" & IDENT1=[F:WACS]CODACC & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACSCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WACS]
Endif
Return


####################################################################
# 14 : PLMATTURL Linked documents ( Field A 250)
####################################################################

$SET_PLMATTURL
If [L]_AOLDVAL<>this.PLMATTURL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLMATTURL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLMATTURL
 Gosub PROPAGATE_PLMATTURL
Endif
Return

$INIT_PLMATTURL
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "PLMATTURL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLMATTURL
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "PLMATTURL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLMATTURL             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLMATTURL             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLMATTURL
[L]CURPRO = "PLMATTURL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLMATTURL,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLMATTURL
[L]CURPRO = "PLMATTURL"
Return

$_AOTHERS_PLMATTURL
[L]CURPRO = "PLMATTURL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLMATTURL
[L]CURPRO = "PLMATTURL"
Return

$PROPAGATE_PLMATTURL
this.isReadonly = 0
[L]CURPRO = "PLMATTURL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLMATTURL
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "PLMATTURL"
$_LNKPRO_PLMATTURL
Return


####################################################################
# 17 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 18 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 19 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 20 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 21 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0BODC
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




