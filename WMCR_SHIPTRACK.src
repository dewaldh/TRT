#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment logistical tracking
# Supervisor
## CRUD-CLASSE ## SHIPTRACK
# 2018-08-27 12:45:53 356


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SHIPTRACK [SHIPT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SHIPTRACK") From ASYRCOM : Endif
Local Instance SHIPTRACK Using C_SHIPTRACK

If !SILENCE : Call TRACE("3 --> New Instance C_SHIPTRACK") From ASYRCOM : Endif
SHIPTRACK = NewInstance C_SHIPTRACK AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SHIPT_]SHIPT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SHIPTRACK") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.AREAD([SHIPT_]VCRNUM,[SHIPT_]VCRTYP,[SHIPT_]STLIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SHIPTRACK.VCRNUM ="-num$(SHIPTRACK.VCRNUM)) From ASYRCOM
 Call TRACE("SHIPTRACK.VCRTYP ="-num$(SHIPTRACK.VCRTYP)) From ASYRCOM
 Call TRACE("SHIPTRACK.STLIN ="-num$(SHIPTRACK.STLIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SHIPTRACK.AKEYS)
  Call TRACE("-"-num$(I)-":"-SHIPTRACK.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SHIPT_]
FreeGroup SHIPTRACK
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SHIPTRACK,ACLE,ASTATUS,_ETAG)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VCRNUM(20)
Local Tinyint _VCRTYP
Local Integer _STLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_STLIN = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File SHIPTRACK [SHIPT]
Default File [F:SHIPT]
Read [F:SHIPT]SHIPT0 = [L]_VCRNUM;[L]_VCRTYP;[L]_STLIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SHIPT]UPDTICK)>0
 [L]_ETAG = num$([F:SHIPT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SHIPTRACK,ACLE,ASTATUS)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Value Char ACLE
Variable Integer ASTATUS
Local Char _VCRNUM(20)
Local Tinyint _VCRTYP
Local Integer _STLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_STLIN = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.AREAD([L]_VCRNUM,[L]_VCRTYP,[L]_STLIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SHIPTRACK,_VCRNUM,_VCRTYP,_STLIN,ASTATUS)
Variable Instance SHIPTRACK Using C_SHIPTRACK
Value Char _VCRNUM
Value Tinyint _VCRTYP
Value Integer _STLIN
Variable Integer ASTATUS

If SHIPTRACK = null : End : Endif

Gosub AVARIABLES From WMC00SHIPTRACK
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SHIPTRACK.APARENT=null
 [L]A_I = SHIPTRACK.freeSnapshot
 SHIPTRACK.snapshotEnabled = 0
 SHIPTRACK.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SHIPTRACK.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SHIPTRACK.APARENT=null
 SHIPTRACK.snapshotEnabled = 1
 SHIPTRACK.setAccessorEnabled = 1
Endif
LogicClose File [SHIPT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK._ACTION_PARAM("AREAD_BEFORE",[L]_VCRNUM,[L]_VCRTYP,[L]_STLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:SHIPT]
Read [F:SHIPT]SHIPT0 = [L]_VCRNUM;[L]_VCRTYP;[L]_STLIN
If fstat
[L]A_ERROR = [L]_VCRNUM+"~"+num$([L]_VCRTYP)+"~"+num$([L]_STLIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SHIPTRACK,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:SHIPT]AUUID)>0 & [F:SHIPT]AUUID=NullUuid
 [F:SHIPT]AUUID = getUuid
Endif
SetInstance SHIPTRACK With [F:SHIPT]
SHIPTRACK.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet SHIPTRACK.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



