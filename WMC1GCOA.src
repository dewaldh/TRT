#<AdxTL>@(#)0.0.0.0 $Revision$Class Chart of accounts
# Supervisor
## ACLA-CLASSE ## GCOA
# 2018-08-27 12:32:56 642


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : COA Chart code ( Field COA 3)
####################################################################

$SET_COA
If [L]_AOLDVAL<>this.COA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COA
 Gosub PROPAGATE_COA
Endif
Return

$INIT_COA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COA
[L]CURPRO = "COA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>vireblc(format$("K:3c",this.COA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COA
[L]CURPRO = "COA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COA
[L]CURPRO = "COA"
Return

$PROPAGATE_COA
this.isReadonly = 0
[L]CURPRO = "COA"
Gosub _LNKPRO_COA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COA"
$_LNKPRO_COA
If vireblc(this.COA,2)<>""
 # Link GCOA
 Local File GCOA [WCOA]
 Read [F:WCOA]COA0 = this.COA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="SHOTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="DESTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCOA]
Endif
Return

$_ALOADATTRIBUTE_COA
[L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field DES 30)
####################################################################

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(this.DES,2)<>vireblc(format$("K:30X",this.DES),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : DESSHO Short description ( Field SHO 10)
####################################################################

$SET_DESSHO
If [L]_AOLDVAL<>this.DESSHO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESSHO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESSHO
 Gosub PROPAGATE_DESSHO
Endif
Return

$INIT_DESSHO
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESSHO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESSHO
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESSHO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESSHO
[L]CURPRO = "DESSHO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESSHO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESSHO
[L]CURPRO = "DESSHO"
If vireblc(this.DESSHO,2)<>vireblc(format$("K:10X",this.DESSHO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESSHO
[L]CURPRO = "DESSHO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESSHO
[L]CURPRO = "DESSHO"
Return

$PROPAGATE_DESSHO
this.isReadonly = 0
[L]CURPRO = "DESSHO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESSHO
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESSHO"
$_LNKPRO_DESSHO
Return


####################################################################
# 4 : DESTRA Description ( Field AX3)
####################################################################

$GET_DESTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESTRA"
this.DESTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESTRA
If [L]_AOLDVAL<>this.DESTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESTRA
 Gosub PROPAGATE_DESTRA
Endif
Return

$INIT_DESTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESTRA
[L]CURPRO = "DESTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESTRA
[L]CURPRO = "DESTRA"
If vireblc(fmet this.AGETTEXTRA("DESTRA"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESTRA
[L]CURPRO = "DESTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESTRA
[L]CURPRO = "DESTRA"
Return

$PROPAGATE_DESTRA
this.isReadonly = 0
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "DESTRA"
$_LNKPRO_DESTRA
Return


####################################################################
# 5 : SHOTRA Short description ( Field AX1)
####################################################################

$GET_SHOTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "SHOTRA"
this.SHOTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SHOTRA
If [L]_AOLDVAL<>this.SHOTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHOTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHOTRA
 Gosub PROPAGATE_SHOTRA
Endif
Return

$INIT_SHOTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "SHOTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHOTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHOTRA
[L]CURPRO = "SHOTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHOTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHOTRA
[L]CURPRO = "SHOTRA"
If vireblc(fmet this.AGETTEXTRA("SHOTRA"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("SHOTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SHOTRA
[L]CURPRO = "SHOTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHOTRA
[L]CURPRO = "SHOTRA"
Return

$PROPAGATE_SHOTRA
this.isReadonly = 0
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.SHOTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHOTRA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "SHOTRA"
$_LNKPRO_SHOTRA
Return


####################################################################
# 6 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 7 : LEGCLS Legislation class ( Field Miscellaneous table number)
####################################################################

$SET_LEGCLS
If [L]_AOLDVAL<>this.LEGCLS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEGCLS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEGCLS
 Gosub PROPAGATE_LEGCLS
Endif
Return

$INIT_LEGCLS
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "LEGCLS"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEGCLS",this.LEGCLS,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEGCLS
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "LEGCLS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEGCLS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEGCLS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEGCLS
[L]CURPRO = "LEGCLS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEGCLS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEGCLS
[L]CURPRO = "LEGCLS"
If vireblc(this.LEGCLS,2)<>vireblc(format$("K:20B",this.LEGCLS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEGCLS
[L]CURPRO = "LEGCLS"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEGCLS",this.LEGCLS,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEGCLS
[L]CURPRO = "LEGCLS"
Return

$PROPAGATE_LEGCLS
this.isReadonly = 0
[L]CURPRO = "LEGCLS"
Gosub _LNKPRO_LEGCLS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEGCLS
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "LEGCLS"
$_LNKPRO_LEGCLS
If vireblc(this.LEGCLS,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEGCLS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEGCLS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEGCLS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return

$_ALOADATTRIBUTE_LEGCLS
[L]ASTATUS = fmet this.ASETATTRIBUTE("LEGCLS","$isMandatory","true")
Return


####################################################################
# 8 : ACS Access code ( Field ACS 10)
####################################################################

$SET_ACS
If [L]_AOLDVAL<>this.ACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACS
 Gosub PROPAGATE_ACS
Endif
Return

$INIT_ACS
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACS
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACS
[L]CURPRO = "ACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>vireblc(format$("KTD:10B",this.ACS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACS.ACTRLREF(this,"ACS",this.ACS,this.ACS,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACS
[L]CURPRO = "ACS"
Return

$PROPAGATE_ACS
this.isReadonly = 0
[L]CURPRO = "ACS"
Gosub _LNKPRO_ACS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACS
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACS"
$_LNKPRO_ACS
If vireblc(this.ACS,2)<>""
 # Link ACCCOD
 Local File ACCCOD [WACS]
 Read [F:WACS]ACS0 = this.ACS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ACCCOD" & ZONE="DESACC" & IDENT1=[F:WACS]CODACC & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WACS]
Endif
Return


####################################################################
# 9 : COLHEA Column header ( Field AX1)
####################################################################

$GET_COLHEA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COLHEA"
this.COLHEA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_COLHEA
If [L]_AOLDVAL<>this.COLHEA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COLHEA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COLHEA
 Gosub PROPAGATE_COLHEA
Endif
Return

$INIT_COLHEA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COLHEA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COLHEA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COLHEA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COLHEA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COLHEA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COLHEA
[L]CURPRO = "COLHEA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COLHEA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COLHEA
[L]CURPRO = "COLHEA"
If vireblc(fmet this.AGETTEXTRA("COLHEA"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("COLHEA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COLHEA
[L]CURPRO = "COLHEA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COLHEA
[L]CURPRO = "COLHEA"
Return

$PROPAGATE_COLHEA
this.isReadonly = 0
[L]CURPRO = "COLHEA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.COLHEA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COLHEA
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "COLHEA"
$_LNKPRO_COLHEA
Return


####################################################################
# 10 : GENTRK General tracking ( Field Local menu number 1)
####################################################################

$SET_GENTRK
If [L]_AOLDVAL<>this.GENTRK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GENTRK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GENTRK
 Gosub PROPAGATE_GENTRK
Endif
Return

$INIT_GENTRK
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "GENTRK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GENTRK=0 and fmet this.AGETATTRIBUTE("GENTRK","$isMandatory")="true"
 this.GENTRK = 1
Endif
Return
 
$CONTROL_GENTRK
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "GENTRK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GENTRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GENTRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GENTRK
[L]CURPRO = "GENTRK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GENTRK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GENTRK
[L]CURPRO = "GENTRK"
If this.GENTRK<0 or this.GENTRK>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.GENTRK)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_GENTRK
[L]CURPRO = "GENTRK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GENTRK
[L]CURPRO = "GENTRK"
Return

$PROPAGATE_GENTRK
this.isReadonly = 0
[L]CURPRO = "GENTRK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GENTRK
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "GENTRK"
$_LNKPRO_GENTRK
Return


####################################################################
# 11 : ANATRK Analytical tracking ( Field Local menu number 1)
####################################################################

$SET_ANATRK
If [L]_AOLDVAL<>this.ANATRK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ANATRK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ANATRK
 Gosub PROPAGATE_ANATRK
Endif
Return

$INIT_ANATRK
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ANATRK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ANATRK=0 and fmet this.AGETATTRIBUTE("ANATRK","$isMandatory")="true"
 this.ANATRK = 1
Endif
Return
 
$CONTROL_ANATRK
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ANATRK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ANATRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ANATRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ANATRK
[L]CURPRO = "ANATRK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ANATRK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ANATRK
[L]CURPRO = "ANATRK"
If this.ANATRK<0 or this.ANATRK>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ANATRK)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ANATRK
[L]CURPRO = "ANATRK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ANATRK
[L]CURPRO = "ANATRK"
Return

$PROPAGATE_ANATRK
this.isReadonly = 0
[L]CURPRO = "ANATRK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ANATRK
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ANATRK"
$_LNKPRO_ANATRK
Return


####################################################################
# 12 : AUX Ctrl account ( Field Local menu number 1)
####################################################################

$SET_AUX
If [L]_AOLDVAL<>this.AUX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUX
 Gosub PROPAGATE_AUX
Endif
Return

$INIT_AUX
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "AUX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AUX=0 and fmet this.AGETATTRIBUTE("AUX","$isMandatory")="true"
 this.AUX = 1
Endif
Return
 
$CONTROL_AUX
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "AUX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUX
[L]CURPRO = "AUX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUX
[L]CURPRO = "AUX"
If this.AUX<0 or this.AUX>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AUX)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AUX
[L]CURPRO = "AUX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUX
[L]CURPRO = "AUX"
Return

$PROPAGATE_AUX
this.isReadonly = 0
[L]CURPRO = "AUX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUX
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "AUX"
$_LNKPRO_AUX
Return


####################################################################
# 13 : TAXMGT Tax management ( Field Local menu number 1)
####################################################################

$SET_TAXMGT
If [L]_AOLDVAL<>this.TAXMGT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TAXMGT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TAXMGT
 Gosub PROPAGATE_TAXMGT
Endif
Return

$INIT_TAXMGT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "TAXMGT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TAXMGT=0 and fmet this.AGETATTRIBUTE("TAXMGT","$isMandatory")="true"
 this.TAXMGT = 1
Endif
Return
 
$CONTROL_TAXMGT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "TAXMGT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TAXMGT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TAXMGT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TAXMGT
[L]CURPRO = "TAXMGT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TAXMGT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TAXMGT
[L]CURPRO = "TAXMGT"
If this.TAXMGT<0 or this.TAXMGT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.TAXMGT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_TAXMGT
[L]CURPRO = "TAXMGT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TAXMGT
[L]CURPRO = "TAXMGT"
Return

$PROPAGATE_TAXMGT
this.isReadonly = 0
[L]CURPRO = "TAXMGT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TAXMGT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "TAXMGT"
$_LNKPRO_TAXMGT
Return


####################################################################
# 14 : FXDLEN Fixed length ( Field Local menu number 1)
####################################################################

$SET_FXDLEN
If [L]_AOLDVAL<>this.FXDLEN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FXDLEN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FXDLEN
 Gosub PROPAGATE_FXDLEN
Endif
Return

$INIT_FXDLEN
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "FXDLEN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FXDLEN=0 and fmet this.AGETATTRIBUTE("FXDLEN","$isMandatory")="true"
 this.FXDLEN = 1
Endif
Return
 
$CONTROL_FXDLEN
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "FXDLEN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FXDLEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FXDLEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FXDLEN
[L]CURPRO = "FXDLEN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FXDLEN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FXDLEN
[L]CURPRO = "FXDLEN"
If this.FXDLEN<0 or this.FXDLEN>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FXDLEN)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FXDLEN
[L]CURPRO = "FXDLEN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FXDLEN
[L]CURPRO = "FXDLEN"
Return

$PROPAGATE_FXDLEN
this.isReadonly = 0
[L]CURPRO = "FXDLEN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FXDLEN
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "FXDLEN"
$_LNKPRO_FXDLEN
Return


####################################################################
# 15 : ACCLEN Length ( Field C 2)
####################################################################

$SET_ACCLEN
If [L]_AOLDVAL<>this.ACCLEN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCLEN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCLEN
 Gosub PROPAGATE_ACCLEN
Endif
Return

$INIT_ACCLEN
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACCLEN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCLEN
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACCLEN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCLEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCLEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCLEN
[L]CURPRO = "ACCLEN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACCLEN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCLEN
[L]CURPRO = "ACCLEN"
Return

$_AOTHERS_ACCLEN
[L]CURPRO = "ACCLEN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCLEN
[L]CURPRO = "ACCLEN"
Return

$PROPAGATE_ACCLEN
this.isReadonly = 0
[L]CURPRO = "ACCLEN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCLEN
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACCLEN"
$_LNKPRO_ACCLEN
Return


####################################################################
# 16 : PFXNBR Number of prefixes ( Field C 2)
####################################################################

$SET_PFXNBR
If [L]_AOLDVAL<>this.PFXNBR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PFXNBR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PFXNBR
 Gosub PROPAGATE_PFXNBR
Endif
Return

$INIT_PFXNBR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PFXNBR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PFXNBR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PFXNBR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PFXNBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PFXNBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PFXNBR
[L]CURPRO = "PFXNBR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PFXNBR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PFXNBR
[L]CURPRO = "PFXNBR"
Return

$_AOTHERS_PFXNBR
[L]CURPRO = "PFXNBR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PFXNBR
[L]CURPRO = "PFXNBR"
Return

$PROPAGATE_PFXNBR
this.isReadonly = 0
[L]CURPRO = "PFXNBR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PFXNBR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PFXNBR"
$_LNKPRO_PFXNBR
Return


####################################################################
# 18 : ACCFMT Account format ( Field A 15)
####################################################################

$SET_ACCFMT
If [L]_AOLDVAL<>this.ACCFMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCFMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCFMT
 Gosub PROPAGATE_ACCFMT
Endif
Return

$INIT_ACCFMT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACCFMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCFMT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACCFMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCFMT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCFMT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCFMT
[L]CURPRO = "ACCFMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCFMT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCFMT
[L]CURPRO = "ACCFMT"
Return

$_AOTHERS_ACCFMT
[L]CURPRO = "ACCFMT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCFMT
[L]CURPRO = "ACCFMT"
Return

$PROPAGATE_ACCFMT
this.isReadonly = 0
[L]CURPRO = "ACCFMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCFMT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "ACCFMT"
$_LNKPRO_ACCFMT
Return

$_ALOADATTRIBUTE_ACCFMT
[L]ASTATUS = fmet this.ASETATTRIBUTE("ACCFMT","$isMandatory","true")
Return


####################################################################
# 19 : CREAUT Automatic creation ( Field Local menu number 1)
####################################################################

$SET_CREAUT
If [L]_AOLDVAL<>this.CREAUT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREAUT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREAUT
 Gosub PROPAGATE_CREAUT
Endif
Return

$INIT_CREAUT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREAUT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CREAUT=0 and fmet this.AGETATTRIBUTE("CREAUT","$isMandatory")="true"
 this.CREAUT = 1
Endif
Return
 
$CONTROL_CREAUT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREAUT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREAUT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREAUT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREAUT
[L]CURPRO = "CREAUT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREAUT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREAUT
[L]CURPRO = "CREAUT"
If this.CREAUT<0 or this.CREAUT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CREAUT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CREAUT
[L]CURPRO = "CREAUT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREAUT
[L]CURPRO = "CREAUT"
Return

$PROPAGATE_CREAUT
this.isReadonly = 0
[L]CURPRO = "CREAUT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREAUT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREAUT"
$_LNKPRO_CREAUT
Return


####################################################################
# 21 : PYR BI pyramid ( Field GYM 5)
####################################################################

$SET_PYR
If [L]_AOLDVAL<>this.PYR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PYR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PYR
 Gosub PROPAGATE_PYR
Endif
Return

$INIT_PYR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PYR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PYR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PYR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PYR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PYR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PYR
[L]CURPRO = "PYR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PYR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PYR
[L]CURPRO = "PYR"
If vireblc(this.PYR,2)<>vireblc(format$("K:5c",this.PYR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PYR
[L]CURPRO = "PYR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PYR
[L]CURPRO = "PYR"
Return

$PROPAGATE_PYR
this.isReadonly = 0
[L]CURPRO = "PYR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PYR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PYR"
$_LNKPRO_PYR
Return


####################################################################
# 22 : PYRREF Reference pyramid ( Field GYM 5)
####################################################################

$SET_PYRREF
If [L]_AOLDVAL<>this.PYRREF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PYRREF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PYRREF
 Gosub PROPAGATE_PYRREF
Endif
Return

$INIT_PYRREF
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PYRREF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PYRREF
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PYRREF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PYRREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PYRREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PYRREF
[L]CURPRO = "PYRREF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PYRREF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PYRREF
[L]CURPRO = "PYRREF"
If vireblc(this.PYRREF,2)<>vireblc(format$("K:5c",this.PYRREF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PYRREF
[L]CURPRO = "PYRREF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PYRREF
[L]CURPRO = "PYRREF"
Return

$PROPAGATE_PYRREF
this.isReadonly = 0
[L]CURPRO = "PYRREF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PYRREF
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "PYRREF"
$_LNKPRO_PYRREF
Return


####################################################################
# 23 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 24 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 25 : UPDUSR Change user ( Field A 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
Return


####################################################################
# 26 : CREUSR Creation user ( Field A 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
Return


####################################################################
# 27 : UPDTIM Time ( Field L 8)
####################################################################

$SET_UPDTIM
If [L]_AOLDVAL<>this.UPDTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDTIM
 Gosub PROPAGATE_UPDTIM
Endif
Return

$INIT_UPDTIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDTIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDTIM
[L]CURPRO = "UPDTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDTIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$_AOTHERS_UPDTIM
[L]CURPRO = "UPDTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$PROPAGATE_UPDTIM
this.isReadonly = 0
[L]CURPRO = "UPDTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDTIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "UPDTIM"
$_LNKPRO_UPDTIM
Return


####################################################################
# 28 : CRETIM Time ( Field L 8)
####################################################################

$SET_CRETIM
If [L]_AOLDVAL<>this.CRETIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRETIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRETIM
 Gosub PROPAGATE_CRETIM
Endif
Return

$INIT_CRETIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CRETIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CRETIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CRETIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRETIM
[L]CURPRO = "CRETIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRETIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRETIM
[L]CURPRO = "CRETIM"
Return

$_AOTHERS_CRETIM
[L]CURPRO = "CRETIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRETIM
[L]CURPRO = "CRETIM"
Return

$PROPAGATE_CRETIM
this.isReadonly = 0
[L]CURPRO = "CRETIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRETIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CRETIM"
$_LNKPRO_CRETIM
Return


####################################################################
# 29 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return


####################################################################
# 30 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0GCOA
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return




