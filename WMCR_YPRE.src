#<AdxTL>@(#)0.0.0.0 $Revision$Class Precinct
# Supervisor
## CRUD-CLASSE ## YPRE
# 2018-08-29 01:27:26 280


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YPRECINT [YPRC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YPRE") From ASYRCOM : Endif
Local Instance YPRE Using C_YPRE

If !SILENCE : Call TRACE("3 --> New Instance C_YPRE") From ASYRCOM : Endif
YPRE = NewInstance C_YPRE AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YPRC_]YPRC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YPRE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YPRE.AREAD([YPRC_]YESTID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YPRE.YESTID ="-num$(YPRE.YESTID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YPRE.AKEYS)
  Call TRACE("-"-num$(I)-":"-YPRE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YPRC_]
FreeGroup YPRE
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YPRE,ACLE,ASTATUS,_ETAG)
Variable Instance YPRE Using C_YPRE
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Shortint _YESTID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YESTID = val([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YPRECINT [YPRC]
Default File [F:YPRC]
Read [F:YPRC]YPRC0 = [L]_YESTID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YPRC]UPDTICK)>0
 [L]_ETAG = num$([F:YPRC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YPRE,ACLE,ASTATUS)
Variable Instance YPRE Using C_YPRE
Value Char ACLE
Variable Integer ASTATUS
Local Shortint _YESTID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YESTID = val([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YPRE.AREAD([L]_YESTID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YPRE,_YESTID,ASTATUS)
Variable Instance YPRE Using C_YPRE
Value Shortint _YESTID
Variable Integer ASTATUS

If YPRE = null : End : Endif

Gosub AVARIABLES From WMC00YPRE
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YPRE.APARENT=null
 [L]A_I = YPRE.freeSnapshot
 YPRE.snapshotEnabled = 0
 YPRE.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YPRE.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YPRE._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YPRE.APARENT=null
 YPRE.snapshotEnabled = 1
 YPRE.setAccessorEnabled = 1
Endif
LogicClose File [YPRC] ,[YSTG] ,[YGGN] ,[YRMA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YPRE._ACTION_PARAM("AREAD_BEFORE",[L]_YESTID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YPRC]
Read [F:YPRC]YPRC0 = [L]_YESTID
If fstat
[L]A_ERROR = num$([L]_YESTID)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YPRE,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YPRC]AUUID)>0 & [F:YPRC]AUUID=NullUuid
 [F:YPRC]AUUID = getUuid
Endif
SetInstance YPRE With [F:YPRC]
YPRE.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YSTG]
 [L]A_N2=0
 For [F:YSTG]YSTG2 Where YESTID=[F:YPRC]YESTID
  [L]A_N2 +=1
  YPRE.YSTA(A_N2) = NewInstance  C_YSTA(YPRE.ACTX,NullUuid,[L]A_N2,YPRE,"YSTA") AllocGroup YPRE
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YSTA(A_N2).ADDINSTANCE_BOUND)
  Callmet YPRE.YSTA(A_N2).AREAD([F:YSTG]YSTAID)
  YPRE.YSTA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YSTA(A_N2).ASETATTRIBUTE("YESTID","$isDisabled","true"))
 Next YSTG
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YGGN]
 [L]A_N2=0
 For [F:YGGN]YGGN2 Where YESTID=[F:YPRC]YESTID
  [L]A_N2 +=1
  YPRE.YGSC(A_N2) = NewInstance  C_YGSC(YPRE.ACTX,NullUuid,[L]A_N2,YPRE,"YGSC") AllocGroup YPRE
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YGSC(A_N2).ADDINSTANCE_BOUND)
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YGSC(A_N2).ACTION("AREAD"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  YPRE.YGSC(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YGSC(A_N2).ASETATTRIBUTE("YESTID","$isDisabled","true"))
 Next YGGN
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YRMA]
 [L]A_N2=0
 For [F:YRMA]YRMA0 Where YGUID=[F:YPRC]YGUID
  [L]A_N2 +=1
  YPRE.YREL(A_N2) = NewInstance  C_YREL(YPRE.ACTX,NullUuid,[L]A_N2,YPRE,"YREL") AllocGroup YPRE
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YREL(A_N2).ADDINSTANCE_BOUND)
  Callmet YPRE.YREL(A_N2).AREAD([F:YRMA]YGUID)
  YPRE.YREL(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YPRE.YREL(A_N2).ASETATTRIBUTE("YGUID","$isDisabled","true"))
 Next YRMA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YPRE.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



