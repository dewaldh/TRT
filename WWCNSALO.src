#<AdxTL>@(#)%I%
# Supervisor
# Inquiry ALO

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:50:05"
A_USER  = "ADMIN"
A_STAMP = "20180828005005"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(26961,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSALOSTD"
PROGSPE    = "CNSALOSPE"
CBOITE     = "DCRITALO"
BOITE      = "FCNSALO"
NOMMSK(0)  = "CONSALO1"
ABMSK(0)   = "CAL1"
NOMMSK(1)  = "CONSALO2"
ABMSK(1)   = "CAL2"
CMEMO      = "alo"
CNOMMSK    = "CRITALO"
CABMSK     = "CALO"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:ALO])=0 : Local File ALOGIN       [ALO] : Endif
If clalev([F:AUS])=0 : Local File AUTILIS      [AUS] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CALO]
 When  0 : Local Mask =NOMMSK(0) [CAL1]
 When  1 : Local Mask =NOMMSK(1) [CAL2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CALO]
 When  0 : Grizo [CAL1]
 When  1 : Grizo [CAL2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CALO]STRDAT)>0
 Grizo [CALO]STRDAT
Endif
If dim([M:CALO]ENDDAT)>0
 Grizo [CALO]ENDDAT
Endif
If dim([M:CALO]USER)>0
 Grizo [CALO]USER
Endif
If dim([M:CALO]LOGIN)>0
 Grizo [CALO]LOGIN
Endif
If dim([M:CALO]ERR)>0
 Grizo [CALO]ERR
Endif
If dim([M:CALO]TOUS)>0
 Grizo [CALO]TOUS
Endif
If dim([M:CALO]STAT)>0
 Grizo [CALO]STAT
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CALO])>0 : Close Local Mask [CALO] : Endif
 When  0 : If clalev([M:CAL1])>0 : Close Local Mask [CAL1] : Endif
 When  1 : If clalev([M:CAL2])>0 : Close Local Mask [CAL2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CALO]
 When  0 : Default Mask [CAL1]
 When  1 : Default Mask [CAL2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CALO]
 When  0 : Raz [M:CAL1]
 When  1 : Raz [M:CAL2]
Endcase
Return

$CRITENT
If dim([M:CALO]STRDAT)>0 & dim([M:CAL1]STRDAT)>0
 [M:CALO]STRDAT = [M:CAL1]STRDAT
Endif
If dim([M:CALO]ENDDAT)>0 & dim([M:CAL1]ENDDAT)>0
 [M:CALO]ENDDAT = [M:CAL1]ENDDAT
Endif
If dim([M:CALO]USER)>0 & dim([M:CAL1]USER)>0
 [M:CALO]USER = [M:CAL1]USER
Endif
If dim([M:CALO]LOGIN)>0 & dim([M:CAL1]LOGIN)>0
 [M:CALO]LOGIN = [M:CAL1]LOGIN
Endif
If dim([M:CALO]ERR)>0 & dim([M:CAL1]ERR)>0
 [M:CALO]ERR = [M:CAL1]ERR
Endif
If dim([M:CALO]TOUS)>0 & dim([M:CAL1]TOUS)>0
 [M:CALO]TOUS = [M:CAL1]TOUS
Endif
If dim([M:CALO]STAT)>0 & dim([M:CAL1]STAT)>0
 [M:CALO]STAT = [M:CAL1]STAT
Endif
Return

$ENTCRIT
If dim([M:CALO]STRDAT)>0 & dim([M:CAL1]STRDAT)>0
[M:CAL1]STRDAT = [M:CALO]STRDAT
Endif
If dim([M:CALO]ENDDAT)>0 & dim([M:CAL1]ENDDAT)>0
[M:CAL1]ENDDAT = [M:CALO]ENDDAT
Endif
If dim([M:CALO]USER)>0 & dim([M:CAL1]USER)>0
[M:CAL1]USER = [M:CALO]USER
Endif
If dim([M:CALO]LOGIN)>0 & dim([M:CAL1]LOGIN)>0
[M:CAL1]LOGIN = [M:CALO]LOGIN
Endif
If dim([M:CALO]ERR)>0 & dim([M:CAL1]ERR)>0
[M:CAL1]ERR = [M:CALO]ERR
Endif
If dim([M:CALO]TOUS)>0 & dim([M:CAL1]TOUS)>0
[M:CAL1]TOUS = [M:CALO]TOUS
Endif
If dim([M:CALO]STAT)>0 & dim([M:CAL1]STAT)>0
[M:CAL1]STAT = [M:CALO]STAT
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
If find("LOGIN",[M:CALO]PARPLAG(0..100))
 Chgstl [M:CAL1]LOGIN With 'APARPLAG'
Else
 Chgstl [M:CAL1]LOGIN With ''
Endif
If find("USER",[M:CALO]PARPLAG(0..100))
 Chgstl [M:CAL1]USER With 'APARPLAG'
Else
 Chgstl [M:CAL1]USER With ''
Endif
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
NBBOUT = 0
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Case BOUT
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


