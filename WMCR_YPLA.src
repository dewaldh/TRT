#<AdxTL>@(#)0.0.0.0 $Revision$Class Planning App
# Supervisor
## CRUD-CLASSE ## YPLA
# 2019-03-05 02:14:00 776


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YPLAGEN [YPLN_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YPLA") From ASYRCOM : Endif
Local Instance YPLA Using C_YPLA

If !SILENCE : Call TRACE("3 --> New Instance C_YPLA") From ASYRCOM : Endif
YPLA = NewInstance C_YPLA AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YPLN_]YPLN0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YPLA") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YPLA.AREAD([YPLN_]YPLLID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YPLA.YPLLID ="-num$(YPLA.YPLLID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YPLA.AKEYS)
  Call TRACE("-"-num$(I)-":"-YPLA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YPLN_]
FreeGroup YPLA
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YPLA,ACLE,ASTATUS,_ETAG)
Variable Instance YPLA Using C_YPLA
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YPLLID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YPLLID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YPLAGEN [YPLN]
Default File [F:YPLN]
Read [F:YPLN]YPLN0 = [L]_YPLLID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YPLN]UPDTICK)>0
 [L]_ETAG = num$([F:YPLN]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YPLA,ACLE,ASTATUS)
Variable Instance YPLA Using C_YPLA
Value Char ACLE
Variable Integer ASTATUS
Local Char _YPLLID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YPLLID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YPLA.AREAD([L]_YPLLID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YPLA,_YPLLID,ASTATUS)
Variable Instance YPLA Using C_YPLA
Value Char _YPLLID
Variable Integer ASTATUS

If YPLA = null : End : Endif

Gosub AVARIABLES From WMC00YPLA
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YPLA.APARENT=null
 [L]A_I = YPLA.freeSnapshot
 YPLA.snapshotEnabled = 0
 YPLA.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YPLA.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YPLA._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YPLA.APARENT=null
 YPLA.snapshotEnabled = 1
 YPLA.setAccessorEnabled = 1
Endif
LogicClose File [YPLN] ,[YPLL] ,[YRMA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YPLA._ACTION_PARAM("AREAD_BEFORE",[L]_YPLLID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YPLN]
Read [F:YPLN]YPLN0 = [L]_YPLLID
If fstat
[L]A_ERROR = [L]_YPLLID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YPLA,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YPLN]AUUID)>0 & [F:YPLN]AUUID=NullUuid
 [F:YPLN]AUUID = getUuid
Endif
SetInstance YPLA With [F:YPLN]
YPLA.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YPLL]
 [L]A_N2=0
 For [F:YPLL]YPLL0 Where YPLLID=[F:YPLN]YPLLID
  [L]A_N2 +=1
  YPLA.YPLL(A_N2) = NewInstance  C_YPLL(YPLA.ACTX,NullUuid,[L]A_N2,YPLA,"YPLL") AllocGroup YPLA
  [L]ASTATUS = max([L]ASTATUS,fmet YPLA.YPLL(A_N2).ADDINSTANCE_BOUND)
  Callmet YPLA.YPLL(A_N2).AREAD([F:YPLL]YPLLID)
  YPLA.YPLL(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YPLA.YPLL(A_N2).ASETATTRIBUTE("YPLLID","$isDisabled","true"))
 Next YPLL
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YRMA]
 [L]A_N2=0
 For [F:YRMA]YRMA0 Where YGUID=[F:YPLN]YGUID
  [L]A_N2 +=1
  YPLA.YRMA(A_N2) = NewInstance  C_YRMA(YPLA.ACTX,NullUuid,[L]A_N2,YPLA,"YRMA") AllocGroup YPLA
  [L]ASTATUS = max([L]ASTATUS,fmet YPLA.YRMA(A_N2).ADDINSTANCE_BOUND)
  Callmet YPLA.YRMA(A_N2).AREAD([F:YRMA]YGUID,[F:YRMA]YLIGID)
  YPLA.YRMA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YPLA.YRMA(A_N2).ASETATTRIBUTE("YGUID","$namProParent","YGUID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YPLA.YRMA(A_N2).ASETATTRIBUTE("YLIGID","$isDisabled","true"))
 Next YRMA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YPLA.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



