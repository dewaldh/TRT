#<AdxTL>@(#)0.0.0.0 $Revision$Class Question
# Supervisor
## CRUD-CLASSE ## QLYCRDQST
# 2018-08-27 13:27:34 902


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File QLYCRDQST [QLQ_]

If !SILENCE : Call TRACE("2 --> Local Instance R_QLYCRDQST") From ASYRCOM : Endif
Local Instance QLYCRDQST Using R_QLYCRDQST

If !SILENCE : Call TRACE("3 --> New Instance R_QLYCRDQST") From ASYRCOM : Endif
QLYCRDQST = NewInstance R_QLYCRDQST AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [QLQ_]QLQ0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of QLYCRDQST") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet QLYCRDQST.AREAD([QLQ_]QSTNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("QLYCRDQST.QLQ.QSTNUM ="-num$(QLYCRDQST.QLQ.QSTNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(QLYCRDQST.QLQ.AKEYS)
  Call TRACE("-"-num$(I)-":"-QLYCRDQST.QLQ.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [QLQ_]
FreeGroup QLYCRDQST
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(QLYCRDQST,ACLE,ASTATUS,_ETAG)
Variable Instance QLYCRDQST Using R_QLYCRDQST
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _QSTNUM(8)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_QSTNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File QLYCRDQST [QLQ]
Default File [F:QLQ]
Read [F:QLQ]QLQ0 = [L]_QSTNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:QLQ]UPDTICK)>0
 [L]_ETAG = num$([F:QLQ]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(QLYCRDQST,ACLE,ASTATUS)
Variable Instance QLYCRDQST Using R_QLYCRDQST
Value Char ACLE
Variable Integer ASTATUS
Local Char _QSTNUM(8)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_QSTNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDQST.AREAD([L]_QSTNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(QLYCRDQST,_QSTNUM,ASTATUS)
Variable Instance QLYCRDQST Using R_QLYCRDQST
Value Char _QSTNUM
Variable Integer ASTATUS

If QLYCRDQST = null : End : Endif

Gosub AVARIABLES From WMR00QLYCRDQST
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If QLYCRDQST.APARENT=null
 [L]A_I = QLYCRDQST.freeSnapshot
 QLYCRDQST.snapshotEnabled = 0
 QLYCRDQST.setAccessorEnabled = 0
Endif

If fmet QLYCRDQST.ACTX.AGETAFCRIGHT(QLYCRDQST,"GESQST",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:QLQ]
Read [F:QLQ]QLQ0 = [L]_QSTNUM
If fstat
[L]A_ERROR = [L]_QSTNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(QLYCRDQST,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet QLYCRDQST.ACTX.AGETAFCRIGHTR(QLYCRDQST,"GESQST",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet QLYCRDQST.ACTX.ASTACRITROLE(QLYCRDQST,[L]_QSTNUM
& ,"QST","QLQ",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDQST.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

QLYCRDQST.QLQ.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDQST.QLQ.AREAD([L]_QSTNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDQST.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & QLYCRDQST.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet QLYCRDQST._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If QLYCRDQST.APARENT=null
 QLYCRDQST.snapshotEnabled = 1
 QLYCRDQST.setAccessorEnabled = 1
Endif
LogicClose File [QLQ]
End



