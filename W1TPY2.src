#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management TPY2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:16:40"
A_USER  = "ADMIN"
A_STAMP = "20180828001640"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBRSUP"
  If [M]NBRSUP=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask TPY2 [TPY2]
Gosub HORODAT
Local Inpbox "TPY2" From GFONCTION At A_STAMP With A_WINDPREV Mask [TPY2] As [SIM_]
Grizo [TPY2]5
Grizo [TPY2]10
Grizo [TPY2]12
Grizo [TPY2]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [TPY2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=28 : Y1(0)=1 : Y2(0)=24
X1(1)=29 : X2(1)=74 : Y1(1)=1 : Y2(1)=10
X1(2)=29 : X2(2)=74 : Y1(2)=11 : Y2(2)=12
X1(3)=29 : X2(3)=74 : Y1(3)=13 : Y2(3)=24
Return

$ON_DACBAN
Onevent BEFORE_INPUT Call AS_DACBAN(zc) From W1TPY2
Onevent INIT_AREA Call D_DACBAN(zc) From W1TPY2
Return

Subprog D_DACBAN(VALEUR)
Variable Integer VALEUR
If varinit([M]DACBAN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACBAN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACBAN(VALEUR) From SUBTPY
If mkstat=2
 [M]DACBAN(INDIC) = VALEUR
 Affzo DACBAN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BANOBL
Onevent BEFORE_INPUT Call AS_BANOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_BANOBL(zc) From W1TPY2
Return

Subprog D_BANOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]BANOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BANOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BANOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]BANOBL(INDIC) = VALEUR
 Affzo BANOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACCPY
Onevent INIT_AREA Call D_DACCPY(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACCPY(zc) From W1TPY2
Return

Subprog D_DACCPY(VALEUR)
Variable Integer VALEUR
If varinit([M]DACCPY,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACCPY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACREF
Onevent INIT_AREA Call D_DACREF(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACREF(zc) From W1TPY2
Return

Subprog D_DACREF(VALEUR)
Variable Integer VALEUR
If varinit([M]DACREF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACREF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REFOBL
Onevent BEFORE_INPUT Call AS_REFOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_REFOBL(zc) From W1TPY2
Return

Subprog D_REFOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]REFOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REFOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_REFOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]REFOBL(INDIC) = VALEUR
 Affzo REFOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACFRMREF
Onevent INIT_AREA Call D_DACFRMREF(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACFRMREF(zc) From W1TPY2
Return

Subprog D_DACFRMREF(VALEUR)
Variable Integer VALEUR
If varinit([M]DACFRMREF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACFRMREF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FRMREFOBL
Onevent BEFORE_INPUT Call AS_FRMREFOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_FRMREFOBL(zc) From W1TPY2
Return

Subprog D_FRMREFOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]FRMREFOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FRMREFOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FRMREFOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]FRMREFOBL(INDIC) = VALEUR
 Affzo FRMREFOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACFRMTYP
Onevent INIT_AREA Call D_DACFRMTYP(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACFRMTYP(zc) From W1TPY2
Return

Subprog D_DACFRMTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DACFRMTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACFRMTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACDES
Onevent INIT_AREA Call D_DACDES(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACDES(zc) From W1TPY2
Return

Subprog D_DACDES(VALEUR)
Variable Integer VALEUR
If varinit([M]DACDES,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACDES(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DESOBL
Onevent BEFORE_INPUT Call AS_DESOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_DESOBL(zc) From W1TPY2
Return

Subprog D_DESOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]DESOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DESOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]DESOBL(INDIC) = VALEUR
 Affzo DESOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACDESLIN
Onevent INIT_AREA Call D_DACDESLIN(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACDESLIN(zc) From W1TPY2
Return

Subprog D_DACDESLIN(VALEUR)
Variable Integer VALEUR
If varinit([M]DACDESLIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACDESLIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DESLINOBL
Onevent BEFORE_INPUT Call AS_DESLINOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_DESLINOBL(zc) From W1TPY2
Return

Subprog D_DESLINOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]DESLINOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DESLINOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESLINOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]DESLINOBL(INDIC) = VALEUR
 Affzo DESLINOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACPAM
Onevent INIT_AREA Call D_DACPAM(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACPAM(zc) From W1TPY2
Return

Subprog D_DACPAM(VALEUR)
Variable Integer VALEUR
If varinit([M]DACPAM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACPAM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACORIDAT
Onevent INIT_AREA Call D_DACORIDAT(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACORIDAT(zc) From W1TPY2
Return

Subprog D_DACORIDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]DACORIDAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACORIDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORIDATOBL
Onevent BEFORE_INPUT Call AS_ORIDATOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_ORIDATOBL(zc) From W1TPY2
Return

Subprog D_ORIDATOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]ORIDATOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORIDATOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ORIDATOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]ORIDATOBL(INDIC) = VALEUR
 Affzo ORIDATOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACDUDDAT
Onevent INIT_AREA Call D_DACDUDDAT(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACDUDDAT(zc) From W1TPY2
Return

Subprog D_DACDUDDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]DACDUDDAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACDUDDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DUDDATOBL
Onevent BEFORE_INPUT Call AS_DUDDATOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_DUDDATOBL(zc) From W1TPY2
Return

Subprog D_DUDDATOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]DUDDATOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DUDDATOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DUDDATOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]DUDDATOBL(INDIC) = VALEUR
 Affzo DUDDATOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACVALDAT
Onevent INIT_AREA Call D_DACVALDAT(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACVALDAT(zc) From W1TPY2
Return

Subprog D_DACVALDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]DACVALDAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACVALDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VALDATOBL
Onevent BEFORE_INPUT Call AS_VALDATOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_VALDATOBL(zc) From W1TPY2
Return

Subprog D_VALDATOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]VALDATOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VALDATOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_VALDATOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]VALDATOBL(INDIC) = VALEUR
 Affzo VALDATOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACBILDAT
Onevent INIT_AREA Call D_DACBILDAT(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACBILDAT(zc) From W1TPY2
Return

Subprog D_DACBILDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]DACBILDAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACBILDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BILDATOBL
Onevent BEFORE_INPUT Call AS_BILDATOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_BILDATOBL(zc) From W1TPY2
Return

Subprog D_BILDATOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]BILDATOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BILDATOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BILDATOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]BILDATOBL(INDIC) = VALEUR
 Affzo BILDATOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACBID
Onevent INIT_AREA Call D_DACBID(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACBID(zc) From W1TPY2
Return

Subprog D_DACBID(VALEUR)
Variable Integer VALEUR
If varinit([M]DACBID,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACBID(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BIDOBL
Onevent BEFORE_INPUT Call AS_BIDOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_BIDOBL(zc) From W1TPY2
Return

Subprog D_BIDOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]BIDOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BIDOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BIDOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]BIDOBL(INDIC) = VALEUR
 Affzo BIDOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACPAB1
Onevent INIT_AREA Call D_DACPAB1(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACPAB1(zc) From W1TPY2
Return

Subprog D_DACPAB1(VALEUR)
Variable Integer VALEUR
If varinit([M]DACPAB1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACPAB1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PAB1OBL
Onevent BEFORE_INPUT Call AS_PAB1OBL(zc) From W1TPY2
Onevent INIT_AREA Call D_PAB1OBL(zc) From W1TPY2
Return

Subprog D_PAB1OBL(VALEUR)
Variable Integer VALEUR
If varinit([M]PAB1OBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PAB1OBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PAB1OBL(VALEUR) From SUBTPY
If mkstat=2
 [M]PAB1OBL(INDIC) = VALEUR
 Affzo PAB1OBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACPAB2
Onevent INIT_AREA Call D_DACPAB2(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACPAB2(zc) From W1TPY2
Return

Subprog D_DACPAB2(VALEUR)
Variable Integer VALEUR
If varinit([M]DACPAB2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACPAB2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PAB2OBL
Onevent BEFORE_INPUT Call AS_PAB2OBL(zc) From W1TPY2
Onevent INIT_AREA Call D_PAB2OBL(zc) From W1TPY2
Return

Subprog D_PAB2OBL(VALEUR)
Variable Integer VALEUR
If varinit([M]PAB2OBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PAB2OBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PAB2OBL(VALEUR) From SUBTPY
If mkstat=2
 [M]PAB2OBL(INDIC) = VALEUR
 Affzo PAB2OBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACBPRREF
Onevent INIT_AREA Call D_DACBPRREF(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACBPRREF(zc) From W1TPY2
Return

Subprog D_DACBPRREF(VALEUR)
Variable Integer VALEUR
If varinit([M]DACBPRREF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACBPRREF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPRREFOBL
Onevent BEFORE_INPUT Call AS_BPRREFOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_BPRREFOBL(zc) From W1TPY2
Return

Subprog D_BPRREFOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]BPRREFOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPRREFOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BPRREFOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]BPRREFOBL(INDIC) = VALEUR
 Affzo BPRREFOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACCHQTYP
Onevent INIT_AREA Call D_DACCHQTYP(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACCHQTYP(zc) From W1TPY2
Return

Subprog D_DACCHQTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DACCHQTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACCHQTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACCHQNUM
Onevent INIT_AREA Call D_DACCHQNUM(zc) From W1TPY2
Onevent BEFORE_INPUT Call AS_DACCHQNUM(zc) From W1TPY2
Return

Subprog D_DACCHQNUM(VALEUR)
Variable Integer VALEUR
If varinit([M]DACCHQNUM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACCHQNUM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CHQNUMOBL
Onevent BEFORE_INPUT Call AS_CHQNUMOBL(zc) From W1TPY2
Onevent INIT_AREA Call D_CHQNUMOBL(zc) From W1TPY2
Return

Subprog D_CHQNUMOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]CHQNUMOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CHQNUMOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CHQNUMOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]CHQNUMOBL(INDIC) = VALEUR
 Affzo CHQNUMOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2TPY2
Return

$TIT_COL
Gosub TIT_COL From W2TPY2
Return


