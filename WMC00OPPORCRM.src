#<AdxTL>@(#)0.0.0.0 $Revision$Class CRM project
# Supervisor
## CRUD-CLASSE ## OPPORCRM
# 2018-08-27 12:36:27 439

Gosub TEST From WMCR_OPPORCRM : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,OPPNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# OPPORCRM : OPPORCRM
# OPPORSTB : OPPORCRM OPPORSTB
# OPPORSTA : OPPORCRM OPPORSTA
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet OPPORCRM._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = OPPORCRM.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(OPPORCRM.ACTX.AFOLDER,nomap,"")>0
 Local File OPPORCRM [OPPCRM]
 Local File OPPORSTB [STB]
 Local File OPPORSTA [STA]
Else
 Local File =OPPORCRM.ACTX.AFOLDER+".OPPORCRM" [OPPCRM]
 Local File =OPPORCRM.ACTX.AFOLDER+".OPPORSTB" [STB]
 Local File =OPPORCRM.ACTX.AFOLDER+".OPPORSTA" [STA]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet OPPORCRM.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [OPPCRM] With
& [STB]OSB0 = [F:OPPCRM]OPPNUM,
& [STA]OSA0 = [F:OPPCRM]OPPNUM
& As [LNK_]
Return

############################################################################################
### OPPORCRM(WOPPCRM)
############################################################################################
Funprog  _MAJSQL_OPPORCRM(WOPPCRM)
Variable Instance WOPPCRM Using C_OPPORCRM
Local Integer ASTATUS,A_I,A_J
Default File [F:OPPCRM]
If WOPPCRM.ASTALIN=[V]CST_ANEW
 Call INICRE(WOPPCRM) From ASYRSUB
 SetInstance [F:OPPCRM] With WOPPCRM
 Write [F:OPPCRM]
 If fstat
  Call FSTA("OPPCRM",WOPPCRM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WOPPCRM.updTick = [F:OPPCRM]updTick
Elsif WOPPCRM.ASTALIN=[V]CST_ALL or WOPPCRM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WOPPCRM) From ASYRSUB
 SetInstance [F:OPPCRM] With WOPPCRM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WOPPCRM,"OPPORCRM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:OPPCRM]OPPCRM0 = [F:OPPCRM]OPPNUM
 If fstat
  Call FSTA("OPPCRM",WOPPCRM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WOPPCRM.updTick = [F:OPPCRM]updTick
Elsif WOPPCRM.ASTALIN=[V]CST_ADEL
 SetInstance [F:OPPCRM] With WOPPCRM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WOPPCRM,"OPPORCRM")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:OPPCRM]OPPCRM0 = [F:OPPCRM]OPPNUM
 If fstat
  Call FSTA("OPPCRM",WOPPCRM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### OPPORSTB(WSTB)
############################################################################################
Funprog  _MAJSQL_OPPORSTB(WSTB)
Variable Instance WSTB Using C_OPPORSTB
Local Integer ASTATUS,A_I,A_J
Default File [F:STB]
If WSTB.ASTALIN=[V]CST_ANEW
 Call INICRE(WSTB) From ASYRSUB
 SetInstance [F:STB] With WSTB
 Write [F:STB]
 If fstat
  Call FSTA("STB",WSTB,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSTB.updTick = [F:STB]updTick
Elsif WSTB.ASTALIN=[V]CST_ALL or WSTB.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSTB) From ASYRSUB
 SetInstance [F:STB] With WSTB
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSTB,"OPPORSTB")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:STB]OSB0 = [F:STB]OPPNUM;[F:STB]STELIN
 If fstat
  Call FSTA("STB",WSTB,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSTB.updTick = [F:STB]updTick
Elsif WSTB.ASTALIN=[V]CST_ADEL
 SetInstance [F:STB] With WSTB
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSTB,"OPPORSTB")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:STB]OSB0 = [F:STB]OPPNUM;[F:STB]STELIN
 If fstat
  Call FSTA("STB",WSTB,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### OPPORSTA(WSTA)
############################################################################################
Funprog  _MAJSQL_OPPORSTA(WSTA)
Variable Instance WSTA Using C_OPPORSTA
Local Integer ASTATUS,A_I,A_J
Default File [F:STA]
If WSTA.ASTALIN=[V]CST_ANEW
 Call INICRE(WSTA) From ASYRSUB
 SetInstance [F:STA] With WSTA
 Write [F:STA]
 If fstat
  Call FSTA("STA",WSTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSTA.updTick = [F:STA]updTick
Elsif WSTA.ASTALIN=[V]CST_ALL or WSTA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSTA) From ASYRSUB
 SetInstance [F:STA] With WSTA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSTA,"OPPORSTA")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:STA]OSA0 = [F:STA]OPPNUM;[F:STA]STELINX
 If fstat
  Call FSTA("STA",WSTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSTA.updTick = [F:STA]updTick
Elsif WSTA.ASTALIN=[V]CST_ADEL
 SetInstance [F:STA] With WSTA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSTA,"OPPORSTA")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:STA]OSA0 = [F:STA]OPPNUM;[F:STA]STELINX
 If fstat
  Call FSTA("STA",WSTA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



