#<AdxTL>@(#)0.0.0.0 $Revision$
#------------------------------------------------------------------------------------#
#Action
#------------------------------------------------------------------------------------#
$ACTION
  Case ACTION
    When Default
  Endcase
Return



#------------------------------------------------------------------------------------#
#
#------------------------------------------------------------------------------------#
Subprog IB_NBLIG
End


#------------------------------------------------------------------------------------#
#Store original amount
#------------------------------------------------------------------------------------#
Subprog AM_PLBAMT(VALEUR)
Variable Decimal VALEUR
If [M:PJBU1]YORIAMT(nolign-1) = 0 and [M:PJBU1]PLBAMT(nolign-1) <> 0
  # ---------------------------
  GZINSPJM.PJM(1).BUD([M:PJBU0]LINBUD).BUDLIG([M:PJBU1]COLLIN(nolign-1)).YORIAMT = [M:PJBU1]PLBAMT(0)
  # ---------------------------
  Call RECOVERS_ERROR_IN_CLASSIC(GZINSPJM) From SUBPJMA
  If GERR = 1 Then
    GERR = 1
    mkstat = 2
    End
  Else
    Call SHOW_BUDGET_LINE([M:PJBU1]COLLIN(nolign-1)) From PJMACTBUD
    Affzo [M:PJBU1]10
  Endif
Endif
End

#------------------------------------------------------------------------------------#
#Store original amount
#------------------------------------------------------------------------------------#
Subprog AS_PLBAMT(VALEUR)
Variable Decimal VALEUR

If [M:PJBU1]YORIAMT(nolign-1) = 0 and [M:PJBU1]PLBAMT(nolign-1) <> 0
  # ---------------------------
  GZINSPJM.PJM(1).BUD([M:PJBU0]LINBUD).BUDLIG([M:PJBU1]COLLIN(nolign-1)).YORIAMT = [M:PJBU1]PLBAMT(0)
  # ---------------------------
  Call RECOVERS_ERROR_IN_CLASSIC(GZINSPJM) From SUBPJMA
  If GERR = 1 Then
    GERR = 1
    mkstat = 2
    End
  Else
    Call SHOW_BUDGET_LINE([M:PJBU1]COLLIN(nolign-1)) From PJMACTBUD
    Affzo [M:PJBU1]10
  Endif
Endif

End


#------------------------------------------------------------------------------------#
#After change - PCCCOD
#------------------------------------------------------------------------------------#
Subprog AM_PCCCOD(VALEUR)
Variable Char    VALEUR()

If VALEUR <> "" and [M:PJM1]OPPTYP <> ""

  Local Char REQUEST(255)(5)

  REQUEST(0) =  "SELECT C.PCCCOD_0, A.TEXTE_0 FROM YPRJCSTGRP H"
  REQUEST(1) -= "INNER JOIN YPRJCSTGRPD D ON H.YPRJCTC_0 = D.YPRJCTC_0"
  REQUEST(2) -= "INNER JOIN PJMCOSTCTR C ON C.PCCGRP_0 = D.YCSTGRP_0 INNER JOIN ATEXTRA A ON A.IDENT1_0 = C.PCCCOD_0"
  REQUEST(3) -= "AND CODFIC_0 = 'PJMCOSTCTR' AND LANGUE_0 = 'ENG' AND ZONE_0 = 'DESAXX'"
  REQUEST(4) -= "WHERE H.YPRJCAT_0 = '" + [M:PJM1]OPPTYP + "' AND C.PCCCOD_0='" + VALEUR + "'"

  Local Integer I : I = 0
  For (Char YCST, Char YDES) From "5" Sql REQUEST As [YLNK]
    I = 1
    Break
  Next

  If I=0
    Call ERRTIT( "No cost type defined for the category selected.","Cost type error") From GESECRAN
    mkstat=2
  Endif

Endif

End

