#<AdxTL>@(#)0.0.0.0 $Revision$Class Chart of accounts
# Supervisor
## ACLA-CLASSE ## GCOA
# 2018-08-27 12:32:56 283

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "GCOA_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0GCOA
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 30
 If this.PFX1(AINDCLA)<>null
  [L]ASTATUS = fmet this.PFX1(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 50
 If this.MISACC(AINDCLA)<>null
  [L]ASTATUS = fmet this.MISACC(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.TCK)
 If this.TCK(AINDCLA)<>null
  [L]ASTATUS = fmet this.TCK(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PBS)
 If this.PBS(AINDCLA)<>null
  [L]ASTATUS = fmet this.PBS(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GCF)
 If this.GCF(AINDCLA)<>null
  [L]ASTATUS = fmet this.GCF(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GCD)
 If this.GCD(AINDCLA)<>null
  [L]ASTATUS = fmet this.GCD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GT2)
 If this.GT2(AINDCLA)<>null
  [L]ASTATUS = fmet this.GT2(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0GCOA
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 30
 If this.PFX1(AINDCLA)<>null
  [L]ASTATUS = fmet this.PFX1(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 50
 If this.MISACC(AINDCLA)<>null
  [L]ASTATUS = fmet this.MISACC(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.TCK)
 If this.TCK(AINDCLA)<>null
  [L]ASTATUS = fmet this.TCK(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PBS)
 If this.PBS(AINDCLA)<>null
  [L]ASTATUS = fmet this.PBS(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GCF)
 If this.GCF(AINDCLA)<>null
  [L]ASTATUS = fmet this.GCF(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GCD)
 If this.GCD(AINDCLA)<>null
  [L]ASTATUS = fmet this.GCD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GT2)
 If this.GT2(AINDCLA)<>null
  [L]ASTATUS = fmet this.GT2(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0GCOA
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 30
 If this.PFX1(AINDCLA)<>null
  [L]ASTATUS = fmet this.PFX1(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PFX1('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 50
 If this.MISACC(AINDCLA)<>null
  [L]ASTATUS = fmet this.MISACC(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'MISACC('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.TCK)
 If this.TCK(AINDCLA)<>null
  [L]ASTATUS = fmet this.TCK(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'TCK('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.PBS)
 If this.PBS(AINDCLA)<>null
  [L]ASTATUS = fmet this.PBS(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PBS('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GCF)
 If this.GCF(AINDCLA)<>null
  [L]ASTATUS = fmet this.GCF(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'GCF('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GCD)
 If this.GCD(AINDCLA)<>null
  [L]ASTATUS = fmet this.GCD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'GCD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.GT2)
 If this.GT2(AINDCLA)<>null
  [L]ASTATUS = fmet this.GT2(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'GT2('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0GCOA
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "GCD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"GCD",this)
 When "GCF"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"GCF",this)
 When "GT2"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"GT2",this)
 When "MISACC"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"MISACC",this)
 When "PBS"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PBS",this)
 When "PFX1"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PFX1",this)
  If [L]_ALINE<>[V]CST_ANOTDEFINED : this.PFXNBR -= 1 : Endif
 When "TCK"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"TCK",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "GCD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"GCD","C_GACCDIM",this)
 When "GCF"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"GCF","C_GACCDEF",this)
 When "GT2"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"GT2","C_GTABACC2",this)
 When "MISACC"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"MISACC","C_GCOA_MISACC",this)
 When "PBS"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PBS","C_GAPARBSE",this)
 When "PFX1"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PFX1","C_GCOA_PFX1",this)
  If [L]_ALINE<>[V]CST_ANOTDEFINED : this.PFXNBR += 1 : Endif
 When "TCK"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"TCK","C_TABACCLIK",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "GCD"
  [L]_ALINE = 0
 When "GCF"
  [L]_ALINE = 0
 When "GT2"
  [L]_ALINE = 0
 When "MISACC"
  [L]_ALINE = 50
 When "PBS"
  [L]_ALINE = 0
 When "PFX1"
  [L]_ALINE = 30
 When "TCK"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "GCD"
  [L]_ALINE = 1
 When "GCF"
  [L]_ALINE = 1
 When "GT2"
  [L]_ALINE = 1
 When "MISACC"
  [L]_ALINE = 2
 When "PBS"
  [L]_ALINE = 1
 When "PFX1"
  [L]_ALINE = 1
 When "TCK"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "COA"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



