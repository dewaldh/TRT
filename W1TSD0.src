#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management TSD0 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:16:51"
A_USER  = "ADMIN"
A_STAMP = "20180828001651"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBRCHA"
  If [M]NBRCHA=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask TSD0 [TSD0]
Gosub HORODAT
Local Inpbox "TSD0" From GFONCTION At A_STAMP With A_WINDPREV Mask [TSD0] As [SIM_]
Grizo [TSD0]5
Grizo [TSD0]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [TSD0]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=74 : Y1(1)=4 : Y2(1)=28
Return

$ON_REFOBJ
Onevent INIT_AREA Call D_REFOBJ(zc) From W1TSD0
Return

Subprog D_REFOBJ(VALEUR)
Variable Integer VALEUR
If varinit([M]REFOBJ,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CODMSK
Return

$ON_ZCODMSK
Onevent BEFORE_AREA Gosub AV_ZCODMSK From W1TSD0
Return

$AV_ZCODMSK
If clalev([F:AMK])=0 : Local File AMSK [AMK] : Endif
Call LECTURE("AMK",[M]CODMSK(indice),"") From CONTOBJ
Call TEXTE([F:AMK]INTMSK,zc) From OBJDIV
Gosub _AFF
Return

$ON_CODTYP
Return

$ON_ZINTIT
Onevent AFTER_AREA Call AP_ZINTIT(zc) From W1TSD0
Onevent BEFORE_AREA Gosub AV_ZINTIT From W1TSD0
Return

$AV_ZINTIT
If !GWEBSERV
 ## Action STD
 Call AV_ZINTIT(zc) From SUBTSI
Endif
Gosub _AFF
Return

Subprog AP_ZINTIT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TXTCONT
 Call TXTCONT(VALEUR,[M]ZINTIT(nolign-1),[M]INTIT(nolign-1),30,2,[M:TSD0]CODMSK,"#INT"+num$(nolign)) From OBJDIV
 If mkstat : GERR = 1 : GZONE = "ZINTIT" : GZNUM = 8 : Endif
Endif
Gosub _AFF
End

$ON_SAIAFF
Onevent BEFORE_INPUT Call AS_SAIAFF(zc) From W1TSD0
Onevent AFTER_CHANGE Gosub AMM_SAIAFF From W1TSD0
Onevent INIT_AREA Call D_SAIAFF(zc) From W1TSD0
Onevent CONTROL Call C_SAIAFF(zc) From W1TSD0
Return

Subprog D_SAIAFF(VALEUR)
Variable Integer VALEUR
If varinit([M]SAIAFF,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SAIAFF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(936) From COMBOS
## Action STD
Call AS_SAIAFF(VALEUR) From SUBTSI
If mkstat=2
 [M]SAIAFF(INDIC) = VALEUR
 Affzo SAIAFF(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,936,1))))
Endif
If !mkstat
 Discombo 0 From SAIAFF(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SAIAFF(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SAIAFF(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_SAIAFF
Call AM_SAIAFF(zc)
If !mkstat & GOBJET
 zoncou = "SAIAFF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SAIAFF(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SAIAFF(VALEUR) From SUBTSI
If mkstat : GERR = 1 : GZONE = "SAIAFF" : GZNUM = 84 : Endif
Gosub _AFF
End

$ON_MODE
Onevent BEFORE_INPUT Call AS_MODE(zc) From W1TSD0
Onevent INIT_AREA Call D_MODE(zc) From W1TSD0
Return

Subprog D_MODE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MODE(VALEUR) From SUBTSI
If mkstat=2
 [M]MODE(INDIC) = VALEUR
 Affzo MODE(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OBLIG
Onevent BEFORE_INPUT Call AS_OBLIG(zc) From W1TSD0
Onevent INIT_AREA Call D_OBLIG(zc) From W1TSD0
Onevent CONTROL Call C_OBLIG(zc) From W1TSD0
Return

Subprog D_OBLIG(VALEUR)
Variable Integer VALEUR
If varinit([M]OBLIG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OBLIG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(1) From COMBOS
## Action STD
Call AS_OBLIG(VALEUR) From SUBTSI
If mkstat=2
 [M]OBLIG(INDIC) = VALEUR
 Affzo OBLIG(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,1,1))))
Endif
If !mkstat
 Discombo 0 From OBLIG(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From OBLIG(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_OBLIG(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_VALDEF
Onevent BEFORE_INPUT Call AS_VALDEF(zc) From W1TSD0
Return

Subprog AS_VALDEF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1484,GBOUT1) From OBJDIV
## Action STD
Call AS_VALDEF(VALEUR) From SUBTSI
If mkstat=2
 [M]VALDEF(INDIC) = VALEUR
 Affzo VALDEF(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_VALDEF(zc) From W1TSD0
Gosub _AFF
End

Subprog B1_VALDEF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFRB1
 Call B1_FORMULE(VALEUR,"","","","","") From AFORMULE
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_SAIAFFORI
Onevent INIT_AREA Call D_SAIAFFORI(zc) From W1TSD0
Return

Subprog D_SAIAFFORI(VALEUR)
Variable Integer VALEUR
If varinit([M]SAIAFFORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MODEORI
Onevent INIT_AREA Call D_MODEORI(zc) From W1TSD0
Return

Subprog D_MODEORI(VALEUR)
Variable Integer VALEUR
If varinit([M]MODEORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OBLIGORI
Onevent INIT_AREA Call D_OBLIGORI(zc) From W1TSD0
Return

Subprog D_OBLIGORI(VALEUR)
Variable Integer VALEUR
If varinit([M]OBLIGORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MODFLG
Onevent BEFORE_AREA Gosub AV_MODFLG From W1TSD0
Onevent INIT_AREA Call D_MODFLG(zc) From W1TSD0
Return

$AV_MODFLG
## Action STD
Call AV_MODFLG(zc) From SUBTSI
Gosub _AFF
Return

Subprog D_MODFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MODFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


