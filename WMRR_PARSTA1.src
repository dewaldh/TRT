#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical triggers
# Supervisor
## CRUD-CLASSE ## PARSTA1
# 2018-08-27 13:20:43 976


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PARSTA1 [PS1_]

If !SILENCE : Call TRACE("2 --> Local Instance R_PARSTA1") From ASYRCOM : Endif
Local Instance PARSTA1 Using R_PARSTA1

If !SILENCE : Call TRACE("3 --> New Instance R_PARSTA1") From ASYRCOM : Endif
PARSTA1 = NewInstance R_PARSTA1 AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PS1_]PS10 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PARSTA1") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.AREAD([PS1_]COD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PARSTA1.PS1.COD ="-num$(PARSTA1.PS1.COD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PARSTA1.PS1.AKEYS)
  Call TRACE("-"-num$(I)-":"-PARSTA1.PS1.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PS1_]
FreeGroup PARSTA1
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PARSTA1,ACLE,ASTATUS,_ETAG)
Variable Instance PARSTA1 Using R_PARSTA1
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PARSTA1 [PS1]
Default File [F:PS1]
Read [F:PS1]PS10 = [L]_COD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PS1]UPDTICK)>0
 [L]_ETAG = num$([F:PS1]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PARSTA1,ACLE,ASTATUS)
Variable Instance PARSTA1 Using R_PARSTA1
Value Char ACLE
Variable Integer ASTATUS
Local Char _COD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.AREAD([L]_COD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PARSTA1,_COD,ASTATUS)
Variable Instance PARSTA1 Using R_PARSTA1
Value Char _COD
Variable Integer ASTATUS

If PARSTA1 = null : End : Endif

Gosub AVARIABLES From WMR00PARSTA1
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PARSTA1.APARENT=null
 [L]A_I = PARSTA1.freeSnapshot
 PARSTA1.snapshotEnabled = 0
 PARSTA1.setAccessorEnabled = 0
Endif

If fmet PARSTA1.ACTX.AGETAFCRIGHT(PARSTA1,"GESPS1",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:PS1]
Read [F:PS1]PS10 = [L]_COD
If fstat
[L]A_ERROR = [L]_COD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PARSTA1,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet PARSTA1.ACTX.AGETAFCRIGHTR(PARSTA1,"GESPS1",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet PARSTA1.ACTX.ASTACRITROLE(PARSTA1,[L]_COD
& ,"PS1","PS1",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

PARSTA1.PS1.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.PS1.AREAD([L]_COD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PARSTA1.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PARSTA1.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA1._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PARSTA1.APARENT=null
 PARSTA1.snapshotEnabled = 1
 PARSTA1.setAccessorEnabled = 1
Endif
LogicClose File [PS1]
End



