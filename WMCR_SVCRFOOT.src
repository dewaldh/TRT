#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales document - footer el.
# Supervisor
## CRUD-CLASSE ## SVCRFOOT
# 2018-08-27 12:50:21 634


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SVCRFOOT [SVF_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SVCRFOOT") From ASYRCOM : Endif
Local Instance SVCRFOOT Using C_SVCRFOOT

If !SILENCE : Call TRACE("3 --> New Instance C_SVCRFOOT") From ASYRCOM : Endif
SVCRFOOT = NewInstance C_SVCRFOOT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SVF_]SVF0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SVCRFOOT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT.AREAD([SVF_]VCRNUM,[SVF_]VCRTYP,[SVF_]DTA))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SVCRFOOT.VCRNUM ="-num$(SVCRFOOT.VCRNUM)) From ASYRCOM
 Call TRACE("SVCRFOOT.VCRTYP ="-num$(SVCRFOOT.VCRTYP)) From ASYRCOM
 Call TRACE("SVCRFOOT.DTA ="-num$(SVCRFOOT.DTA)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SVCRFOOT.AKEYS)
  Call TRACE("-"-num$(I)-":"-SVCRFOOT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SVF_]
FreeGroup SVCRFOOT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SVCRFOOT,ACLE,ASTATUS,_ETAG)
Variable Instance SVCRFOOT Using C_SVCRFOOT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VCRNUM(20)
Local Tinyint _VCRTYP
Local Shortint _DTA
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_DTA = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File SVCRFOOT [SVF]
Default File [F:SVF]
Read [F:SVF]SVF0 = [L]_VCRNUM;[L]_VCRTYP;[L]_DTA
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SVF]UPDTICK)>0
 [L]_ETAG = num$([F:SVF]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SVCRFOOT,ACLE,ASTATUS)
Variable Instance SVCRFOOT Using C_SVCRFOOT
Value Char ACLE
Variable Integer ASTATUS
Local Char _VCRNUM(20)
Local Tinyint _VCRTYP
Local Shortint _DTA
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_DTA = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT.AREAD([L]_VCRNUM,[L]_VCRTYP,[L]_DTA))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SVCRFOOT,_VCRNUM,_VCRTYP,_DTA,ASTATUS)
Variable Instance SVCRFOOT Using C_SVCRFOOT
Value Char _VCRNUM
Value Tinyint _VCRTYP
Value Shortint _DTA
Variable Integer ASTATUS

If SVCRFOOT = null : End : Endif

Gosub AVARIABLES From WMC00SVCRFOOT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SVCRFOOT.APARENT=null
 [L]A_I = SVCRFOOT.freeSnapshot
 SVCRFOOT.snapshotEnabled = 0
 SVCRFOOT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SVCRFOOT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SVCRFOOT.APARENT=null
 SVCRFOOT.snapshotEnabled = 1
 SVCRFOOT.setAccessorEnabled = 1
Endif
LogicClose File [SVF]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT._ACTION_PARAM("AREAD_BEFORE",[L]_VCRNUM,[L]_VCRTYP,[L]_DTA))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT._ACTION_PARAM("AREAD",[L]_VCRNUM,[L]_VCRTYP,[L]_DTA))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
SVCRFOOT.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 10
 If ([F:SVF]DTAVATNOT([L]A_I-1)<>0 or [F:SVF]DTANET([L]A_I-1)<>0 or [F:SVF]DTAVAT([L]A_I-1)<>"" or [F:SVF]DTAVATRAT([L]A_I-1)<>0
& or [F:SVF]DTAVATAMT([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  SVCRFOOT.C_DTAVAT(A_NEWCOL) = NewInstance  C_SVCRFOOT_C_DTAVAT(SVCRFOOT.ACTX,NullUuid,[L]A_I,SVCRFOOT,"C_DTAVAT") AllocGroup SVCRFOOT
  SVCRFOOT.C_DTAVAT(A_NEWCOL).DTAVATNOT = [F:SVF]DTAVATNOT([L]A_I-1)
  SVCRFOOT.C_DTAVAT(A_NEWCOL).DTANET = [F:SVF]DTANET([L]A_I-1)
  SVCRFOOT.C_DTAVAT(A_NEWCOL).DTAVAT = [F:SVF]DTAVAT([L]A_I-1)
  SVCRFOOT.C_DTAVAT(A_NEWCOL).DTAVATRAT = [F:SVF]DTAVATRAT([L]A_I-1)
  SVCRFOOT.C_DTAVAT(A_NEWCOL).DTAVATAMT = [F:SVF]DTAVATAMT([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT.C_DTAVAT(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet SVCRFOOT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="SFOOTINV" & ZONE="SHOAXX" & IDENT1=num$(SVCRFOOT.DTA) & IDENT2=""
 Call ASETTEXTRA(SVCRFOOT.AXX,SVCRFOOT.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 SVCRFOOT.AXX(maxtab(SVCRFOOT.AXX)).FLG = 0
Next AXX
If !len(fmet SVCRFOOT.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(SVCRFOOT.AXX,SVCRFOOT.AllocGrp(),"SHOAXX",
& fmet SVCRFOOT.AGETTEXTRALAN("SHOAXX",SVCRFOOT.ACTX.AFOLD.ALANGDEF),
& SVCRFOOT.ACTX.LAN) From ASYRSUB
Endif

Return



