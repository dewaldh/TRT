#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management WT60VT1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [16/04/2018]
A_HEURE = "14:37:07"
A_USER  = "ADMIN"
A_STAMP = "20180416143707"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If GFMTDIE(1)<>""
    Chgfmt CCE1 With GFMTDIE(1)
   Else
    Chgfmt CCE1 With "-K:1X"
   Endif
   If GFMTDIE(2)<>""
    Chgfmt CCE2 With GFMTDIE(2)
   Else
    Chgfmt CCE2 With "-K:1X"
   Endif
   If GFMTDIE(3)<>""
    Chgfmt CCE3 With GFMTDIE(3)
   Else
    Chgfmt CCE3 With "-K:1X"
   Endif
   If GFMTDIE(4)<>""
    Chgfmt CCE4 With GFMTDIE(4)
   Else
    Chgfmt CCE4 With "-K:1X"
   Endif
   If GFMTDIE(5)<>""
    Chgfmt CCE5 With GFMTDIE(5)
   Else
    Chgfmt CCE5 With "-K:1X"
   Endif
   If GFMTDIE(6)<>""
    Chgfmt CCE6 With GFMTDIE(6)
   Else
    Chgfmt CCE6 With "-K:1X"
   Endif
   If GFMTDIE(7)<>""
    Chgfmt CCE7 With GFMTDIE(7)
   Else
    Chgfmt CCE7 With "-K:1X"
   Endif
   If GFMTDIE(8)<>""
    Chgfmt CCE8 With GFMTDIE(8)
   Else
    Chgfmt CCE8 With "-K:1X"
   Endif
   If GFMTDIE(9)<>""
    Chgfmt CCE9 With GFMTDIE(9)
   Else
    Chgfmt CCE9 With "-K:1X"
   Endif
   If GFMTDIE(10)<>""
    Chgfmt CCE10 With GFMTDIE(10)
   Else
    Chgfmt CCE10 With "-K:1X"
   Endif
   If GFMTDIE(11)<>""
    Chgfmt CCE11 With GFMTDIE(11)
   Else
    Chgfmt CCE11 With "-K:1X"
   Endif
   If GFMTDIE(12)<>""
    Chgfmt CCE12 With GFMTDIE(12)
   Else
    Chgfmt CCE12 With "-K:1X"
   Endif
   If GFMTDIE(13)<>""
    Chgfmt CCE13 With GFMTDIE(13)
   Else
    Chgfmt CCE13 With "-K:1X"
   Endif
   If GFMTDIE(14)<>""
    Chgfmt CCE14 With GFMTDIE(14)
   Else
    Chgfmt CCE14 With "-K:1X"
   Endif
   If GFMTDIE(15)<>""
    Chgfmt CCE15 With GFMTDIE(15)
   Else
    Chgfmt CCE15 With "-K:1X"
   Endif
   If GFMTDIE(16)<>""
    Chgfmt CCE16 With GFMTDIE(16)
   Else
    Chgfmt CCE16 With "-K:1X"
   Endif
   If GFMTDIE(17)<>""
    Chgfmt CCE17 With GFMTDIE(17)
   Else
    Chgfmt CCE17 With "-K:1X"
   Endif
   If GFMTDIE(18)<>""
    Chgfmt CCE18 With GFMTDIE(18)
   Else
    Chgfmt CCE18 With "-K:1X"
   Endif
   If GFMTDIE(19)<>""
    Chgfmt CCE19 With GFMTDIE(19)
   Else
    Chgfmt CCE19 With "-K:1X"
   Endif
   If GFMTDIE(20)<>""
    Chgfmt CCE20 With GFMTDIE(20)
   Else
    Chgfmt CCE20 With "-K:1X"
   Endif
   If GFMTDIE(1)<>""
    Chgfmt LABCCE1 With GFMTDIE(1)
   Else
    Chgfmt LABCCE1 With "-K:1X"
   Endif
   If GFMTDIE(2)<>""
    Chgfmt LABCCE2 With GFMTDIE(2)
   Else
    Chgfmt LABCCE2 With "-K:1X"
   Endif
   If GFMTDIE(3)<>""
    Chgfmt LABCCE3 With GFMTDIE(3)
   Else
    Chgfmt LABCCE3 With "-K:1X"
   Endif
   If GFMTDIE(4)<>""
    Chgfmt LABCCE4 With GFMTDIE(4)
   Else
    Chgfmt LABCCE4 With "-K:1X"
   Endif
   If GFMTDIE(5)<>""
    Chgfmt LABCCE5 With GFMTDIE(5)
   Else
    Chgfmt LABCCE5 With "-K:1X"
   Endif
   If GFMTDIE(6)<>""
    Chgfmt LABCCE6 With GFMTDIE(6)
   Else
    Chgfmt LABCCE6 With "-K:1X"
   Endif
   If GFMTDIE(7)<>""
    Chgfmt LABCCE7 With GFMTDIE(7)
   Else
    Chgfmt LABCCE7 With "-K:1X"
   Endif
   If GFMTDIE(8)<>""
    Chgfmt LABCCE8 With GFMTDIE(8)
   Else
    Chgfmt LABCCE8 With "-K:1X"
   Endif
   If GFMTDIE(9)<>""
    Chgfmt LABCCE9 With GFMTDIE(9)
   Else
    Chgfmt LABCCE9 With "-K:1X"
   Endif
   If GFMTDIE(10)<>""
    Chgfmt LABCCE10 With GFMTDIE(10)
   Else
    Chgfmt LABCCE10 With "-K:1X"
   Endif
   If GFMTDIE(11)<>""
    Chgfmt LABCCE11 With GFMTDIE(11)
   Else
    Chgfmt LABCCE11 With "-K:1X"
   Endif
   If GFMTDIE(12)<>""
    Chgfmt LABCCE12 With GFMTDIE(12)
   Else
    Chgfmt LABCCE12 With "-K:1X"
   Endif
   If GFMTDIE(13)<>""
    Chgfmt LABCCE13 With GFMTDIE(13)
   Else
    Chgfmt LABCCE13 With "-K:1X"
   Endif
   If GFMTDIE(14)<>""
    Chgfmt LABCCE14 With GFMTDIE(14)
   Else
    Chgfmt LABCCE14 With "-K:1X"
   Endif
   If GFMTDIE(15)<>""
    Chgfmt LABCCE15 With GFMTDIE(15)
   Else
    Chgfmt LABCCE15 With "-K:1X"
   Endif
   If GFMTDIE(16)<>""
    Chgfmt LABCCE16 With GFMTDIE(16)
   Else
    Chgfmt LABCCE16 With "-K:1X"
   Endif
   If GFMTDIE(17)<>""
    Chgfmt LABCCE17 With GFMTDIE(17)
   Else
    Chgfmt LABCCE17 With "-K:1X"
   Endif
   If GFMTDIE(18)<>""
    Chgfmt LABCCE18 With GFMTDIE(18)
   Else
    Chgfmt LABCCE18 With "-K:1X"
   Endif
   If GFMTDIE(19)<>""
    Chgfmt LABCCE19 With GFMTDIE(19)
   Else
    Chgfmt LABCCE19 With "-K:1X"
   Endif
   If GFMTDIE(20)<>""
    Chgfmt LABCCE20 With GFMTDIE(20)
   Else
    Chgfmt LABCCE20 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WT60VT1 [MBO]
Gosub HORODAT
Local Inpbox "WT60VT1" From GFONCTION At A_STAMP With A_WINDPREV Mask [MBO] As [SIM_]
Grizo [MBO]5
Grizo [MBO]7
Grizo [MBO]10
Grizo [MBO]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [MBO]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=40 : Y1(0)=1 : Y2(0)=5
X1(1)=1 : X2(1)=40 : Y1(1)=6 : Y2(1)=8
X1(2)=41 : X2(2)=130 : Y1(2)=1 : Y2(2)=8
X1(3)=1 : X2(3)=130 : Y1(3)=9 : Y2(3)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_FCY From W1WT60VT1
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1WT60VT1
Onevent INIT_AREA Call D_FCY(zc) From W1WT60VT1
Return

Subprog IB_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call IB_FCY From FUNBENCHO
Gosub _AFF
End

Subprog D_FCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]FCY,indice)=0
 VALEUR = GFCYDEF(8)
Endif
Gosub _AFF
End

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_FCY(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1WT60VT1
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","E",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "E"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1WT60VT1
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYNAM
Gosub _AFF
Return

$ON_WEMPNUM
Onevent CONTROL Call C_WEMPNUM(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WEMPNUM From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WEMPNUM(zc) From W1WT60VT1
Return

Subprog AS_WEMPNUM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WEMPNUM(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WEMPNUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_WEMPNUM(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WEMPNUM" : GZNUM = 10793 : Endif
Gosub _AFF
End

$AMM_WEMPNUM
Call AM_WEMPNUM(zc)
If !mkstat & GOBJET
 zoncou = "WEMPNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WEMPNUM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WEMPNUM(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WEMPNUM" : GZNUM = 10793 : Endif
Gosub _AFF
End

Subprog S_WEMPNUM(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELEMPNUM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELEMPNUM"
 Call S_TAB_NUM(VALEUR,PARMSK,"SELEMPNUM","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ENDDATSTR
Onevent BEFORE_AREA Gosub AV_ENDDATSTR From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_ENDDATSTR From W1WT60VT1
Onevent BEFORE_INPUT Call AS_ENDDATSTR(zc) From W1WT60VT1
Return

$AV_ENDDATSTR
## Action ADATRELI
Call INIDAT(zc,[M]ENDDATSTRF) From ADATREL
Chgfmt [M]ENDDATSTR(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDATSTR(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDDATSTR(zc) From W1WT60VT1
Gosub _AFF
End

$AMM_ENDDATSTR
Call AM_ENDDATSTR(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATSTR(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]ENDDATSTRF) From ADATREL
If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 1806 : Endif
If !mkstat
 ## Action STD
 Call AM_ENDDATSTR(VALEUR) From FUNBENCHO
 If mkstat : GERR = 1 : GZONE = "ENDDATSTR" : GZNUM = 1806 : Endif
Endif
Gosub _AFF
End

Subprog B1_ENDDATSTR(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]ENDDATSTRF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]ENDDATSTRF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ENDDATEND
Onevent BEFORE_AREA Gosub AV_ENDDATEND From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_ENDDATEND From W1WT60VT1
Onevent CONTROL Call C_ENDDATEND(zc) From W1WT60VT1
Onevent AFTER_AREA Call AP_ENDDATEND(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_ENDDATEND(zc) From W1WT60VT1
Return

$AV_ENDDATEND
## Action ADATRELI
Call INIDAT(zc,[M]ENDDATENDF) From ADATREL
Chgfmt [M]ENDDATEND(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog AS_ENDDATEND(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ENDDATEND(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_ENDDATEND(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog AP_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action STD
Call AP_ENDDATEND(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_ENDDATEND
Call AM_ENDDATEND(zc)
If !mkstat & GOBJET
 zoncou = "ENDDATEND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ENDDATEND(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M]ENDDATENDF) From ADATREL
If mkstat : GERR = 1 : GZONE = "ENDDATEND" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_ENDDATEND(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M]ENDDATENDF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M]ENDDATENDF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_FILTOPE
Onevent INIT_AREA Call D_FILTOPE(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_FILTOPE(zc) From W1WT60VT1
Return

Subprog D_FILTOPE(VALEUR)
Variable Integer VALEUR
If varinit([M]FILTOPE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FILTOPE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CPLTIMGLO
Onevent BEFORE_INPUT Call AS_CPLTIMGLO(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_CPLTIMGLO From W1WT60VT1
Onevent CONTROL Call C_CPLTIMGLO(zc) From W1WT60VT1
Return

Subprog AS_CPLTIMGLO(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CPLTIMGLO(VALEUR) From FUNBENCHO
If mkstat=2
 [M]CPLTIMGLO(INDIC) = VALEUR
 Affzo CPLTIMGLO(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_CPLTIMGLO(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_CPLTIMGLO
Call AM_CPLTIMGLO(zc)
If !mkstat & GOBJET
 zoncou = "CPLTIMGLO" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPLTIMGLO(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_CPLTIMGLO(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "CPLTIMGLO" : GZNUM = 19425 : Endif
Gosub _AFF
End

$ON_CPLUOMCOD
Onevent BEFORE_INPUT Call AS_CPLUOMCOD(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_CPLUOMCOD From W1WT60VT1
Onevent INIT_AREA Call D_CPLUOMCOD(zc) From W1WT60VT1
Return

Subprog D_CPLUOMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]CPLUOMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CPLUOMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CPLUOMCOD(VALEUR) From FUNBENCHO
If mkstat=2
 [M]CPLUOMCOD(INDIC) = VALEUR
 Affzo CPLUOMCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_CPLUOMCOD
Call AM_CPLUOMCOD(zc)
If !mkstat & GOBJET
 zoncou = "CPLUOMCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPLUOMCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CPLUOMCOD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "CPLUOMCOD" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WRHE
Onevent INIT_AREA Call D_WRHE(zc) From W1WT60VT1
Return

Subprog D_WRHE(VALEUR)
Variable Char    VALEUR()
If varinit([M]WRHE,indice)=0
 ## Action WRHINIT2
 Call WRHINIT2(VALEUR,[M]FCY,2) From STKWRH
Endif
Gosub _AFF
End

$ON_WMFGNUMD
Onevent CONTROL Call C_WMFGNUMD(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WMFGNUMD(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WMFGNUMD From W1WT60VT1
Return

Subprog AS_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WMFGNUMD(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WMFGNUMD(INDIC) = VALEUR
 Affzo WMFGNUMD(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WMFGNUMD(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Endif
Gosub _AFF
End

$AMM_WMFGNUMD
Call AM_WMFGNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WMFGNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WMFGNUMD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WMFGNUMD" : GZNUM = 9595 : Endif
Gosub _AFF
End

Subprog S_WMFGNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "2"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUMF
Onevent CONTROL Call C_WMFGNUMF(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WMFGNUMF(zc) From W1WT60VT1
Return

Subprog AS_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WMFGNUMF(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WMFGNUMF(INDIC) = VALEUR
 Affzo WMFGNUMF(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_WMFGNUMF(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_WMFGNUMF(VALEUR) From FUNBENCHO
 If mkstat : GERR = 1 : GZONE = "WMFGNUMF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_WMFGNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "2"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WOPENUMD
Onevent BEFORE_INPUT Call AS_WOPENUMD(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WOPENUMD From W1WT60VT1
Onevent CONTROL Call C_WOPENUMD(zc) From W1WT60VT1
Return

Subprog AS_WOPENUMD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WOPENUMD(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WOPENUMD(INDIC) = VALEUR
 Affzo WOPENUMD(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_WOPENUMD(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_WOPENUMD
Call AM_WOPENUMD(zc)
If !mkstat & GOBJET
 zoncou = "WOPENUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WOPENUMD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WOPENUMD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WOPENUMD" : GZNUM = 2296 : Endif
Gosub _AFF
End

$ON_WOPENUMF
Onevent BEFORE_INPUT Call AS_WOPENUMF(zc) From W1WT60VT1
Onevent CONTROL Call C_WOPENUMF(zc) From W1WT60VT1
Return

Subprog AS_WOPENUMF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WOPENUMF(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WOPENUMF(INDIC) = VALEUR
 Affzo WOPENUMF(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_WOPENUMF(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_WOPENUMF(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WOPENUMF" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WITMREFD
Onevent CONTROL Call C_WITMREFD(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WITMREFD(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WITMREFD From W1WT60VT1
Return

Subprog IB_WITMREFD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WITMREFD(VALEUR)
## Action STD
Call AS_WITMREFD(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WITMREFD(INDIC) = VALEUR
 Affzo WITMREFD(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WITMREFD(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_WITMREFD(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_WITMREFD(zc) From W1WT60VT1
Onkey 146 Titled GBOUTA Call SA_WITMREFD(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WITMREFD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11093 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11093 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!CI",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11093 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WITMREFD
Call AM_WITMREFD(zc)
If !mkstat & GOBJET
 zoncou = "WITMREFD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WITMREFD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WITMREFD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WITMREFD" : GZNUM = 11093 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWITMREFD)")>indice
 [M]WITMREFD(indice) = VALEUR
 Affzo ZWITMREFD(indice)
Endif
Gosub _AFF
End

Subprog S_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!CI"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WITMREFD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WITMREFD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWITMREFD
Onevent BEFORE_AREA Gosub AV_ZWITMREFD From W1WT60VT1
Return

$AV_ZWITMREFD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WITMREFD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WITMREFF
Onevent CONTROL Call C_WITMREFF(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WITMREFF(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WITMREFF From W1WT60VT1
Return

Subprog IB_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WITMREFF(VALEUR)
## Action STD
Call AS_WITMREFF(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WITMREFF(INDIC) = VALEUR
 Affzo WITMREFF(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WITMREFF(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_WITMREFF(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_WITMREFF(zc) From W1WT60VT1
Onkey 146 Titled GBOUTA Call SA_WITMREFF(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WITMREFF(VALEUR) From FUNBENCHO
   If mkstat : GERR = 1 : GZONE = "WITMREFF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WITMREFF
Call AM_WITMREFF(zc)
If !mkstat & GOBJET
 zoncou = "WITMREFF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWITMREFF)")>indice
 [M]WITMREFF(indice) = VALEUR
 Affzo ZWITMREFF(indice)
Endif
Gosub _AFF
End

Subprog S_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WITMREFF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WITMREFF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWITMREFF
Onevent BEFORE_AREA Gosub AV_ZWITMREFF From W1WT60VT1
Return

$AV_ZWITMREFF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WITMREFF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUNUMD
Onevent CONTROL Call C_WROUNUMD(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WROUNUMD(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WROUNUMD From W1WT60VT1
Return

Subprog IB_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WROUNUMD(VALEUR)
## Action STD
Call AS_WROUNUMD(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WROUNUMD(INDIC) = VALEUR
 Affzo WROUNUMD(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WROUNUMD(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_WROUNUMD(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_WROUNUMD(zc) From W1WT60VT1
Onkey 146 Titled GBOUTA Call SA_WROUNUMD(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WROUNUMD
Call AM_WROUNUMD(zc)
If !mkstat & GOBJET
 zoncou = "WROUNUMD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUNUMD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WROUNUMD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WROUNUMD" : GZNUM = 3817 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWROUNUMD)")>indice
 [M]WROUNUMD(indice) = VALEUR
 Affzo ZWROUNUMD(indice)
Endif
Gosub _AFF
End

Subprog S_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WROUNUMD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WROUNUMD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUNUMD
Onevent BEFORE_AREA Gosub AV_ZWROUNUMD From W1WT60VT1
Return

$AV_ZWROUNUMD
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WROUNUMD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUNUMF
Onevent CONTROL Call C_WROUNUMF(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WROUNUMF(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WROUNUMF From W1WT60VT1
Return

Subprog IB_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_WROUNUMF(VALEUR)
## Action STD
Call AS_WROUNUMF(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WROUNUMF(INDIC) = VALEUR
 Affzo WROUNUMF(INDIC) : mkstat = 2
Endif
Onkey 170 Titled GBOUT13 Call B13_WROUNUMF(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_WROUNUMF(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_WROUNUMF(zc) From W1WT60VT1
Onkey 146 Titled GBOUTA Call SA_WROUNUMF(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_WROUNUMF(VALEUR) From FUNBENCHO
   If mkstat : GERR = 1 : GZONE = "WROUNUMF" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_WROUNUMF
Call AM_WROUNUMF(zc)
If !mkstat & GOBJET
 zoncou = "WROUNUMF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZWROUNUMF)")>indice
 [M]WROUNUMF(indice) = VALEUR
 Affzo ZWROUNUMF(indice)
Endif
Gosub _AFF
End

Subprog S_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B13_WROUNUMF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_WROUNUMF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUNUMF
Onevent BEFORE_AREA Gosub AV_ZWROUNUMF From W1WT60VT1
Return

$AV_ZWROUNUMF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]WROUNUMF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUALTD
Onevent BEFORE_INPUT Call AS_WROUALTD(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WROUALTD From W1WT60VT1
Onevent CONTROL Call C_WROUALTD(zc) From W1WT60VT1
Return

Subprog AS_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6276,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
## Action STD
Call AS_WROUALTD(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WROUALTD(INDIC) = VALEUR
 Affzo WROUALTD(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_WROUALTD(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_WROUALTD(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_WROUALTD(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WROUALTD(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TRO","!A",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WROUALTD" : GZNUM = 3964 : Endif
Gosub _AFF
End

$AMM_WROUALTD
Call AM_WROUALTD(zc)
If !mkstat & GOBJET
 zoncou = "WROUALTD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUALTD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WROUALTD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WROUALTD" : GZNUM = 3964 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZWROUALTD)")>indice
 [M]WROUALTD(indice) = VALEUR
 Affzo ZWROUALTD(indice)
Endif
Gosub _AFF
End

Subprog S_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRO"
PARMSK(2) = "!A"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TRO",VALCHAR,"") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_WROUALTD(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUALTD
Onevent BEFORE_AREA Gosub AV_ZWROUALTD From W1WT60VT1
Return

$AV_ZWROUALTD
Call LECTEXTRA(zc,"TABROUALT","TROSHOAXX",num$([M]WROUALTD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WROUALTF
Onevent BEFORE_INPUT Call AS_WROUALTF(zc) From W1WT60VT1
Onevent CONTROL Call C_WROUALTF(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_WROUALTF From W1WT60VT1
Return

Subprog AS_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6276,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
## Action STD
Call AS_WROUALTF(VALEUR) From FUNBENCHO
If mkstat=2
 [M]WROUALTF(INDIC) = VALEUR
 Affzo WROUALTF(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_WROUALTF(zc) From W1WT60VT1
Onkey   2 Titled GBOUTS Call S_WROUALTF(zc) From W1WT60VT1
Onkey 144 Titled GBOUTP Call P_WROUALTF(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WROUALTF(VALEUR)
Variable Decimal VALEUR
## Action %CNTOBJ
Call CONTNUM("TRO","!A",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "WROUALTF" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_WROUALTF(VALEUR) From FUNBENCHO
 If mkstat : GERR = 1 : GZONE = "WROUALTF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_WROUALTF
Call AM_WROUALTF(zc)
If !mkstat & GOBJET
 zoncou = "WROUALTF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WROUALTF(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZWROUALTF)")>indice
 [M]WROUALTF(indice) = VALEUR
 Affzo ZWROUALTF(indice)
Endif
Gosub _AFF
End

Subprog S_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TRO"
PARMSK(2) = "!A"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char VALCHAR(20)
VALCHAR = num$(VALEUR)
Call OBJET("TRO",VALCHAR,"") From GOBJET
VALEUR = val(VALCHAR)
Gosub _AFF
End

Subprog P_WROUALTF(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TRO",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZWROUALTF
Onevent BEFORE_AREA Gosub AV_ZWROUALTF From W1WT60VT1
Return

$AV_ZWROUALTF
Call LECTEXTRA(zc,"TABROUALT","TROSHOAXX",num$([M]WROUALTF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_WWSTD
Onevent AFTER_CHANGE Gosub AMM_WWSTD From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WWSTD(zc) From W1WT60VT1
Return

Subprog AS_WWSTD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WWSTD(zc) From W1WT60VT1
Gosub _AFF
End

$AMM_WWSTD
Call AM_WWSTD(zc)
If !mkstat & GOBJET
 zoncou = "WWSTD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WWSTD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WWSTD(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WWSTD" : GZNUM = 5964 : Endif
Gosub _AFF
End

Subprog S_WWSTD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SWST
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SWST"
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SWST","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WWSTF
Onevent CONTROL Call C_WWSTF(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_WWSTF(zc) From W1WT60VT1
Return

Subprog AS_WWSTF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_WWSTF(zc) From W1WT60VT1
Gosub _AFF
End

Subprog C_WWSTF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_WWSTF(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "WWSTF" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_WWSTF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SWST
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SWST"
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SWST","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WCDED
Return

$ON_WCDEF
Return

$ON_WPJTD
Return

$ON_WPJTF
Return

$ON_FORMULE
Return

$ON_MEMO
Return

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1WT60VT1
Onevent BEFORE_LINE Call AVANT_NBLIG From W1WT60VT1
Onevent BEFORE_INPUT Call AS_NBLIG From W1WT60VT1
Onevent BEFORE_AREA Call AV_NBLIG From W1WT60VT1
Return

Subprog IB_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call IB_NBLIG From FUNBENCHO
Endif
Gosub _AFF
End

Subprog AV_NBLIG
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBLIG" : Gosub TIT_COL From W4WT60VT1
Endif
Gosub _AFF
End

Subprog AS_NBLIG
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(454,GBOUT1) From OBJDIV
Call TEXTE(87,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(22739,GBOUT5) From OBJDIV
Call TEXTE(15281,GBOUT6) From OBJDIV
Call TEXTE(454,GBOUT8) From OBJDIV
Call TEXTE(735,GBOUT11) From OBJDIV
Call TEXTE(735,GBOUT12) From OBJDIV
Call IB_NBLIG
Onkey 129 Titled GBOUT1 Call B1_NBLIG From W1WT60VT1
Onkey 130 Titled GBOUT2 Call B2_NBLIG From W1WT60VT1
Onkey 131 Titled GBOUT3 Call B3_NBLIG From W1WT60VT1
Onkey 132 Titled GBOUT4 Call B4_NBLIG From W1WT60VT1
Onkey 133 Titled GBOUT5 Call B5_NBLIG From W1WT60VT1
Onkey 134 Titled GBOUT6 Call B6_NBLIG From W1WT60VT1
Onkey 136 Titled GBOUT8 Call B8_NBLIG From W1WT60VT1
Onkey 139 Titled GBOUT11 Call B11_NBLIG From W1WT60VT1
Onkey 140 Titled GBOUT12 Call B12_NBLIG From W1WT60VT1
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B1_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAITECCRD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAITECCRD"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MBO]TECCRD(nolign-1)
 PARMSK(2) = num$([M:MBO]OPENUM(nolign-1))
 PARMSK(3) = [M:MBO]IPTDAT(nolign-1)
 PARMSK(4) = num$([M:MBO]WLINUM(nolign-1))
 PARMSK(5) = "1"
 PARMSK(6) = ""
 PARMSK(7) = [M:MBO]MFGNUM(nolign-1)
 PARMSK(8) = "0"
 PARMSK(9) = "MBO"
 PARMSK(10) = num$([M:MBO]OPESPLNUM(nolign-1))
 PARMSK(11) = num$(nolign-1)
 Call TRAITE_NUM(BASPAG,PARMSK,"IQLYCRD","CRDLIB","",1,"") From GTRAITE
 ACTION = "BB1_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC7A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC7A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB2_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MBO]MFGNUM(nolign-1)
 Call OBJET_CHAR(OBJCLE,"MFG","") From GOBJET
 ACTION = "BB2_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action MFOFICHMTK
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MFOFICHMTK"
 PARMSK(1) = [M:MBO]MFGNUM(nolign-1)
 PARMSK(2) = num$([M:MBO]OPENUM(nolign-1))
 PARMSK(3) = num$([M:MBO]OPESPLNUM(nolign-1))
 Call SAISIE_NUM(BASPAG,PARMSK,"IMFOW","MFGWINLIB","XWIMFOW") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action MFOTRKSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "MFOTRKSTA"
 PARMSK(1) = num$(nolign-1)
 PARMSK(2) = "MBO"
 Call SAISIE_NUM(BASPAG,PARMSK,"IMFOQTY","MFGWINLIB","XWIMFOQTY") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From FUNBENCHO
If mkstat : End : Endif
Gosub _AFF
End

Subprog B5_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIBENCHM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIBENCHM"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB5_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = string$(GWRHACT-1,num$(sigma(1,dim([M:MBO]WRHE),[M:MBO]WRHE)))
 PARMSK(3) = [M:MBO]MFGNUM(nolign-1)
 PARMSK(4) = num$([M:MBO]OPENUM(nolign-1))
 PARMSK(5) = "0"
 PARMSK(6) = [M:MBO]BOMNUM(nolign-1)
 PARMSK(7) = num$([M:MBO]BOMALT(nolign-1))
 PARMSK(8) = num$([M:MBO]MFGMST(nolign-1))
 PARMSK(9) = "MBO"
 PARMSK(10) = ""
 PARMSK(11) = num$(WCONSMAT)
 PARMSK(12) = num$(WCOEFF)
 PARMSK(13) = num$([M:MBO]WMATOK(nolign-1))
 PARMSK(14) = "0"
 Call TRAITE_NUM(BASPAG,PARMSK,"IMBM","FUNBENCHM","",5,"XYBENHCM") From GTRAITE
 [M:MBO]WMATOK(nolign-1) = val(PARMSK(13))
 ACTION = "BB5_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAIBENCHI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIBENCHI"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB6_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = string$(GWRHACT-1,num$(sigma(1,dim([M:MBO]WRHE),[M:MBO]WRHE)))
 PARMSK(3) = [M:MBO]MFGNUM(nolign-1)
 PARMSK(4) = [M:MBO]BOMNUM(nolign-1)
 PARMSK(5) = num$([M:MBO]BOMALT(nolign-1))
 PARMSK(6) = "MBO"
 PARMSK(7) = ""
 PARMSK(8) = num$([M:MBO]WITMOK(nolign-1))
 PARMSK(9) = num$(WCOEFF)
 Call TRAITE_NUM(BASPAG,PARMSK,"IMBI","FUNBENCHI","",5,"XYBENHCI") From GTRAITE
 [M:MBO]WITMOK(nolign-1) = val(PARMSK(8))
 ACTION = "BB6_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B8_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action ACLOB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ACLOB"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB8_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = [M:MBO]MKOTEX(nolign-1)
 PARMSK(2) = "MKO"
 PARMSK(3) = "TRTX3TEX"
 PARMSK(4) = "MBO"
 PARMSK(5) = num$(nolign)
 PARMSK(6) = "1"
 Call TRAITE_NUM(BASPAG,PARMSK,"","ACLOB","ACLOB",3,"XYACLOB") From GTRAITE
 [M:MBO]MKOTEX(nolign-1) = PARMSK(1)
 ACTION = "BB8_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B11_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB11_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = WCLE2
 Call OBJET_CHAR(OBJCLE,"ROU",WCLE1) From GOBJET
 ACTION = "BB11_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B12_NBLIG
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC6A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC6A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB12_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:MBO]FCY
 Call OBJET_CHAR(OBJCLE,"MWS",[M:MBO]CPLWST(nolign-1)) From GOBJET
 ACTION = "BB12_NBLIG" : PROGSUB = "FUNBENCHO" : PROGSPE = "SPEBENCHO" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_IPTDAT
Onevent BEFORE_AREA Gosub AV_IPTDAT From W1WT60VT1
Onevent CONTROL Call C_IPTDAT(zc) From W1WT60VT1
Onevent INIT_AREA Call D_IPTDAT(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_IPTDAT(zc) From W1WT60VT1
Return

$AV_IPTDAT
## Action STD
Call AV_IPTDAT(zc) From FUNBENCHO
Chgfmt [M]IPTDAT(indice) With "DZc:"+GFMDAT
Gosub _AFF
Return

Subprog D_IPTDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]IPTDAT,indice)=0
 VALEUR = date$
Endif
Gosub _AFF
End

Subprog AS_IPTDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !(GMODIF = 2)
 Affzo IPTDAT : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

Subprog C_IPTDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
If !mkstat
 ## Action CONTPER
 Call CONTPER(VALEUR,1,[M:MBO]FCY) From CPTSUB
 If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
 If !mkstat
  ## Action STD
  Call C_IPTDAT(VALEUR) From FUNBENCHO
  If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
  If !mkstat
   ## Action STKCTRIPT
   Call STKCTRIPT(VALEUR,[M:MBO]FCY,"1") From STKLIB
   If mkstat : GERR = 1 : GZONE = "IPTDAT" : GZNUM = 212 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$ON_TIMTYP
Onevent BEFORE_INPUT Call AS_TIMTYP(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_TIMTYP From W1WT60VT1
Onevent INIT_AREA Call D_TIMTYP(zc) From W1WT60VT1
Onevent CONTROL Call C_TIMTYP(zc) From W1WT60VT1
Return

Subprog D_TIMTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TIMTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TIMTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M]WINDIC(nolign-1) = 0 & GMODIF = 2)
 Affzo TIMTYP : mkstat = 2
Endif
If !mkstat
 Call INICOMBO(399) From COMBOS
 ## Action STD
 Call AS_TIMTYP(VALEUR) From FUNBENCHO
 If mkstat=2
  [M]TIMTYP(INDIC) = VALEUR
  Affzo TIMTYP(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,399,1))))
 Endif
 If !mkstat
  Discombo 0 From TIMTYP(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From TIMTYP(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_TIMTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TIMTYP" : GZNUM = 10884 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_TIMTYP
Call AM_TIMTYP(zc)
If !mkstat & GOBJET
 zoncou = "TIMTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TIMTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TIMTYP(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "TIMTYP" : GZNUM = 10884 : Endif
Gosub _AFF
End

$ON_MFGNUM
Onevent CONTROL Call C_MFGNUM(zc) From W1WT60VT1
Onevent BEFORE_INPUT Call AS_MFGNUM(zc) From W1WT60VT1
Onevent AFTER_CHANGE Gosub AMM_MFGNUM From W1WT60VT1
Return

Subprog AS_MFGNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
If !([M]TIMTYP(nolign-1) = 1 & [M]WINDIC(nolign-1) = 0 & GMODIF = 2)
 Affzo MFGNUM : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_MFGNUM(VALEUR) From FUNBENCHO
 If mkstat=2
  [M]MFGNUM(INDIC) = VALEUR
  Affzo MFGNUM(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_MFGNUM(zc) From W1WT60VT1
Endif
Gosub _AFF
End

Subprog C_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 4420 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_MFGNUM(VALEUR) From FUNBENCHO
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 4420 : Endif
Endif
Gosub _AFF
End

$AMM_MFGNUM
Call AM_MFGNUM(zc)
If !mkstat & GOBJET
 zoncou = "MFGNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MFGNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_MFGNUM(VALEUR) From FUNBENCHO
If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 4420 : Endif
Gosub _AFF
End

Subprog S_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M:MBO]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "2"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W4WT60VT1
Return

$TIT_COL
Gosub TIT_COL From W4WT60VT1
Return


