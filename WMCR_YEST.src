#<AdxTL>@(#)0.0.0.0 $Revision$Class Estate
# Supervisor
## CRUD-CLASSE ## YEST
# 2019-05-14 13:53:04 861


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YESTA [YEST_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YEST") From ASYRCOM : Endif
Local Instance YEST Using C_YEST

If !SILENCE : Call TRACE("3 --> New Instance C_YEST") From ASYRCOM : Endif
YEST = NewInstance C_YEST AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YEST_]YEST0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YEST") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YEST.AREAD([YEST_]YESTID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YEST.YESTID ="-num$(YEST.YESTID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YEST.AKEYS)
  Call TRACE("-"-num$(I)-":"-YEST.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YEST_]
FreeGroup YEST
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YEST,ACLE,ASTATUS,_ETAG)
Variable Instance YEST Using C_YEST
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Shortint _YESTID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YESTID = val([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YESTA [YEST]
Default File [F:YEST]
Read [F:YEST]YEST0 = [L]_YESTID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YEST]UPDTICK)>0
 [L]_ETAG = num$([F:YEST]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YEST,ACLE,ASTATUS)
Variable Instance YEST Using C_YEST
Value Char ACLE
Variable Integer ASTATUS
Local Shortint _YESTID
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YESTID = val([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YEST.AREAD([L]_YESTID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YEST,_YESTID,ASTATUS)
Variable Instance YEST Using C_YEST
Value Shortint _YESTID
Variable Integer ASTATUS

If YEST = null : End : Endif

Gosub AVARIABLES From WMC00YEST
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YEST.APARENT=null
 [L]A_I = YEST.freeSnapshot
 YEST.snapshotEnabled = 0
 YEST.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YEST.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YEST._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YEST.APARENT=null
 YEST.snapshotEnabled = 1
 YEST.setAccessorEnabled = 1
Endif
LogicClose File [YEST] ,[YRMA] ,[YLDP] ,[YSTG] ,[YPRC]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YEST._ACTION_PARAM("AREAD_BEFORE",[L]_YESTID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YEST]
Read [F:YEST]YEST0 = [L]_YESTID
If fstat
[L]A_ERROR = num$([L]_YESTID)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YEST,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:YEST]YACCESS
If dim([F:YEST]AUUID)>0 & [F:YEST]AUUID=NullUuid
 [F:YEST]AUUID = getUuid
Endif
SetInstance YEST With [F:YEST]
YEST.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YRMA]
 [L]A_N2=0
 For [F:YRMA]YRMA0 Where YGUID=[F:YEST]YGUID
  [L]A_N2 +=1
  YEST.YRMA(A_N2) = NewInstance  C_YRMA(YEST.ACTX,NullUuid,[L]A_N2,YEST,"YRMA") AllocGroup YEST
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YRMA(A_N2).ADDINSTANCE_BOUND)
  Callmet YEST.YRMA(A_N2).AREAD([F:YRMA]YGUID,[F:YRMA]YLIGID)
  YEST.YRMA(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YRMA(A_N2).ASETATTRIBUTE("YGUID","$namProParent","YGUID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YRMA(A_N2).ASETATTRIBUTE("YLIGID","$isDisabled","true"))
 Next YRMA
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YLDP]
 [L]A_N2=0
 For [F:YLDP]YLDP4 Where YESTID=[F:YEST]YESTID
  [L]A_N2 +=1
  YEST.YLDP(A_N2) = NewInstance  C_YLNDPUR(YEST.ACTX,NullUuid,[L]A_N2,YEST,"YLDP") AllocGroup YEST
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YLDP(A_N2).ADDINSTANCE_BOUND)
  Callmet YEST.YLDP(A_N2).AREAD([F:YLDP]YLNDPURID)
  YEST.YLDP(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YLDP(A_N2).ASETATTRIBUTE("YESTID","$namProParent","YESTID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YLDP(A_N2).ASETATTRIBUTE("YLNDPURID","$isDisabled","true"))
 Next YLDP
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YSTG]
 [L]A_N2=0
 For [F:YSTG]YSTG4 Where YESTID=[F:YEST]YESTID
  [L]A_N2 +=1
  YEST.YSTAGE(A_N2) = NewInstance  C_YSTAVIW(YEST.ACTX,NullUuid,[L]A_N2,YEST,"YSTAGE") AllocGroup YEST
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YSTAGE(A_N2).ADDINSTANCE_BOUND)
  Callmet YEST.YSTAGE(A_N2).AREAD([F:YSTG]YSTAID)
  YEST.YSTAGE(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YSTAGE(A_N2).ASETATTRIBUTE("YESTID","$namProParent","YESTID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YSTAGE(A_N2).ASETATTRIBUTE("YSTAID","$isDisabled","true"))
 Next YSTG
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:YPRC]
 [L]A_N2=0
 For [F:YPRC]YPRC4 Where YESTID=[F:YEST]YESTID
  [L]A_N2 +=1
  YEST.YPRE(A_N2) = NewInstance  C_YPREVIW(YEST.ACTX,NullUuid,[L]A_N2,YEST,"YPRE") AllocGroup YEST
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YPRE(A_N2).ADDINSTANCE_BOUND)
  Callmet YEST.YPRE(A_N2).AREAD([F:YPRC]YPREID)
  YEST.YPRE(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YPRE(A_N2).ASETATTRIBUTE("YESTID","$namProParent","YESTID"))
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YPRE(A_N2).ASETATTRIBUTE("YPREID","$isDisabled","true"))
 Next YPRC
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet YEST.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



