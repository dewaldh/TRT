#<AdxTL>@(#)0.0.0.0 $Revision$Class Import/export templates
# Supervisor
## CRUD-CLASSE ## AOBJEXT
# 2018-08-27 12:21:34 640

Gosub TEST From WMCR_AOBJEXT : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,EXT)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# AOBJEXT : AOBJEXT
# AOBJEXTD : AOBJEXT AOBJEXTD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet AOBJEXT._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = AOBJEXT.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(AOBJEXT.ACTX.AFOLDER,nomap,"")>0
 Local File AOBJEXT [AOE]
 Local File AOBJEXTD [AOD]
 Local File ATEXTRA [AXX]
Else
 Local File =AOBJEXT.ACTX.AFOLDER+".AOBJEXT" [AOE]
 Local File =AOBJEXT.ACTX.AFOLDER+".AOBJEXTD" [AOD]
 Local File =AOBJEXT.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [AOE] With
& [AOD]AOD0 ~= [AOE]EXT
& As [LNK_]
Return

############################################################################################
### AOBJEXT(WAOE)
############################################################################################
Funprog  _MAJSQL_AOBJEXT(WAOE)
Variable Instance WAOE Using C_AOBJEXT
Local Integer ASTATUS,A_I,A_J
Default File [F:AOE]
If WAOE.ASTALIN=[V]CST_ANEW
 Call INICRE(WAOE) From ASYRSUB
 SetInstance [F:AOE] With WAOE
 For J=1 To maxtab(WAOE.AXX)
  If WAOE.AXX(J)<>null & WAOE.AXX(J).PRO= "INTIT" & WAOE.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOE,WAOE.AXX(J).TEX,"AOBJEXT","INTIT",WAOE.AXX(J).LAN,WAOE.EXT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WAOE.FILCOL)
   If WAOE.FILCOL([L]A_I)<>null & !find(WAOE.FILCOL([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WAOE.FILCOL([L]A_I).AORDER=[L]A_J
    [F:AOE]FIL([L]A_J-1) = WAOE.FILCOL([L]A_I).FIL
    [F:AOE]FLGEXP([L]A_J-1) = WAOE.FILCOL([L]A_I).FLGEXP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 8
  For [L]A_I=1 To maxtab(WAOE.FLGCOL)
   If WAOE.FLGCOL([L]A_I)<>null & !find(WAOE.FLGCOL([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WAOE.FLGCOL([L]A_I).AORDER=[L]A_J
    [F:AOE]FLGLEV([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGLEV
    [F:AOE]FLGREC([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGREC
    [F:AOE]FLGFIL([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGFIL
    [F:AOE]FLGKEY([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGKEY
    [F:AOE]FLGLNK([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGLNK
    [F:AOE]RECLEN([L]A_J-1) = WAOE.FLGCOL([L]A_I).RECLEN
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:AOE]
 If fstat
  Call FSTA("AOE",WAOE,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAOE.updTick = [F:AOE]updTick
Elsif WAOE.ASTALIN=[V]CST_ALL or WAOE.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAOE) From ASYRSUB
 SetInstance [F:AOE] With WAOE
 For J=1 To maxtab(WAOE.AXX)
  If WAOE.AXX(J)<>null & WAOE.AXX(J).PRO= "INTIT" & WAOE.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOE,WAOE.AXX(J).TEX,"AOBJEXT","INTIT",WAOE.AXX(J).LAN,WAOE.EXT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WAOE.FILCOL)
   If WAOE.FILCOL([L]A_I)<>null & !find(WAOE.FILCOL([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WAOE.FILCOL([L]A_I).AORDER=[L]A_J
    [F:AOE]FIL([L]A_J-1) = WAOE.FILCOL([L]A_I).FIL
    [F:AOE]FLGEXP([L]A_J-1) = WAOE.FILCOL([L]A_I).FLGEXP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 8
  For [L]A_I=1 To maxtab(WAOE.FLGCOL)
   If WAOE.FLGCOL([L]A_I)<>null & !find(WAOE.FLGCOL([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WAOE.FLGCOL([L]A_I).AORDER=[L]A_J
    [F:AOE]FLGLEV([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGLEV
    [F:AOE]FLGREC([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGREC
    [F:AOE]FLGFIL([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGFIL
    [F:AOE]FLGKEY([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGKEY
    [F:AOE]FLGLNK([L]A_J-1) = WAOE.FLGCOL([L]A_I).FLGLNK
    [F:AOE]RECLEN([L]A_J-1) = WAOE.FLGCOL([L]A_I).RECLEN
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAOE,"AOBJEXT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AOE]AOE0 = [F:AOE]EXT
 If fstat
  Call FSTA("AOE",WAOE,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAOE.updTick = [F:AOE]updTick
Elsif WAOE.ASTALIN=[V]CST_ADEL
 SetInstance [F:AOE] With WAOE
 For J=1 To maxtab(WAOE.AXX)
  If WAOE.AXX(J)<>null & WAOE.AXX(J).PRO= "INTIT"
   Call SUPTEXTRA(WAOE,WAOE.AXX(J).TEX,"AOBJEXT","INTIT",WAOE.AXX(J).LAN,WAOE.EXT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAOE,"AOBJEXT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AOE]AOE0 = [F:AOE]EXT
 If fstat
  Call FSTA("AOE",WAOE,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### AOBJEXTD(WAOD)
############################################################################################
Funprog  _MAJSQL_AOBJEXTD(WAOD)
Variable Instance WAOD Using C_AOBJEXTD
Local Integer ASTATUS,A_I,A_J
Default File [F:AOD]
If WAOD.ASTALIN=[V]CST_ANEW
 Call INICRE(WAOD) From ASYRSUB
 SetInstance [F:AOD] With WAOD
 For J=1 To maxtab(WAOD.AXX)
  If WAOD.AXX(J)<>null & WAOD.AXX(J).PRO= "INTFLD" & WAOD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOD,WAOD.AXX(J).TEX,"AOBJEXTD","INTFLD",WAOD.AXX(J).LAN,WAOD.EXT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:AOD]
 If fstat
  Call FSTA("AOD",WAOD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAOD.updTick = [F:AOD]updTick
Elsif WAOD.ASTALIN=[V]CST_ALL or WAOD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAOD) From ASYRSUB
 SetInstance [F:AOD] With WAOD
 For J=1 To maxtab(WAOD.AXX)
  If WAOD.AXX(J)<>null & WAOD.AXX(J).PRO= "INTFLD" & WAOD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WAOD,WAOD.AXX(J).TEX,"AOBJEXTD","INTFLD",WAOD.AXX(J).LAN,WAOD.EXT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAOD,"AOBJEXTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AOD]AOD0 = [F:AOD]EXT;[F:AOD]NUMLIG
 If fstat
  Call FSTA("AOD",WAOD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAOD.updTick = [F:AOD]updTick
Elsif WAOD.ASTALIN=[V]CST_ADEL
 SetInstance [F:AOD] With WAOD
 For J=1 To maxtab(WAOD.AXX)
  If WAOD.AXX(J)<>null & WAOD.AXX(J).PRO= "INTFLD"
   Call SUPTEXTRA(WAOD,WAOD.AXX(J).TEX,"AOBJEXTD","INTFLD",WAOD.AXX(J).LAN,WAOD.EXT,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAOD,"AOBJEXTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AOD]AOD0 = [F:AOD]EXT;[F:AOD]NUMLIG
 If fstat
  Call FSTA("AOD",WAOD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



