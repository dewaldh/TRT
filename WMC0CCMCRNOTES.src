#<AdxTL>@(#)0.0.0.0 $Revision$Class Change request attachments
# Supervisor
## ACLA-CLASSE ## CCMCRNOTES
# 2018-08-27 12:28:21 086

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "CCMCRNOTES_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

# Method AINSERT
$AINSERT
Gosub DECLARE_VAR
[L]AEVENT = "AINSERT" : [L]ACTION = "AINSERT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

# Method ADELETE
$ADELETE
Gosub DECLARE_VAR
[L]AEVENT = "ADELETE" : [L]ACTION = "ADELETE" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

# Method AREAD
$AREAD
Gosub DECLARE_VAR
[L]AEVENT = "AREAD" : [L]ACTION = "AREAD" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

# Method AUPDATE
$AUPDATE
Gosub DECLARE_VAR
[L]AEVENT = "AUPDATE" : [L]ACTION = "AUPDATE" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0CCMCRNOTES
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0CCMCRNOTES
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0CCMCRNOTES
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0CCMCRNOTES
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_BLB
Case [L]_PRONAME
 When "CRNOTES"
  If fmet this.AGETATTRIBUTE("CRNOTES","$isLoaded")<>"true"
   Gosub READ_BLB_CRNOTES
   If [L]_CNT<>''
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CRNOTES","$contentType",[L]_CNT)
   Else
    [L]_CNT = fmet this.AGETATTRIBUTE("CRNOTES","$contentType")
   Endif
  Else
   [L]_BLB = this.CRNOTES
   [L]_CNT = fmet this.AGETATTRIBUTE("CRNOTES","$contentType")
  Endif
Endcase
Return

$READ_BLB_CRNOTES
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File CCMCRNOTES [WCCMCRN]
Else
Local File =this.ACTX.AFOLDER+".CCMCRNOTES" [WCCMCRN]
Endif
Raz [L]_BLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WCCMCRN]CRID = [L]_KEYVALTAB(1)
[F:WCCMCRN]NOTELINE = val([L]_KEYVALTAB(2))
Read [WCCMCRN] =
If !fstat
 [L]_BLB = [F:WCCMCRN]CRNOTES
 If [F:WCCMCRN]DOCTYPE<>''
  [L]_CNT = fmet this.ACTX.ACACHE.ATYPPRO.AGETVALCHAR([F:WCCMCRN]DOCTYPE,"PROTYP")
 Endif
Endif
LogicClose File [WCCMCRN]
Return

$READ_CNT_CRNOTES
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File CCMCRNOTES [WCCMCRN]
Else
Local File =this.ACTX.AFOLDER+".CCMCRNOTES" [WCCMCRN]
Endif
Local Tinyint WLOBTROUVE : [L]WLOBTROUVE=0
Local Tinyint _EXI            : [L]_EXI=1
Local Char _CNT(100)        : [L]_CNT=""
Columns [WCCMCRN](DOCTYPE)
For [WCCMCRN] Where CRID=this.CRID
&    & NOTELINE=this.NOTELINE
 [L]WLOBTROUVE=1
 [L]_CNT = fmet this.ACTX.ACACHE.ATYPPRO.AGETVALCHAR([F:WCCMCRN]DOCTYPE,"PROTYP")
 Break
Next
If [L]WLOBTROUVE=0 : [L]_EXI=0 : Endif 
Columns [WCCMCRN]
LogicClose File [WCCMCRN]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



