#<AdxTL>@(#)%I%
# Supervisor
# Inquiry CSD

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [05/03/2019]
A_HEURE = "13:33:49"
A_USER  = "MAJID"
A_STAMP = "20190305133349"
Return

$DEFAUT
Default File [BPC]
Return

$OUVFIC
Local File BPCUSTOMER [BPC]
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(3826,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSCSDSTD"
PROGSPE    = "CNSCSDSPE"
CBOITE     = "DCNSCSD"
BOITE      = "FCNSCSD"
NOMMSK(0)  = "CONSCSD1"
ABMSK(0)   = "CSD1"
NOMMSK(1)  = "CONSCSD2"
ABMSK(1)   = "CSD2"
CMEMO      = "csd"
CNOMMSK    = "CRITCSD"
CABMSK     = "CCSD"
NOMFIC     = "BPCUSTOMER"
ABFIC      = "BPC"
CODMSKDEF  = "STD"
MAGNETO    = 2
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = "BPC0"
NBCMP = 1
CLECMP(0) = "BPCNUM"
CLEMSK(0) = "BPCORD"
Return

$OUVRE
If clalev([F:BPC])=0 : Local File BPCUSTOMER   [BPC] : Endif
If clalev([F:CPY])=0 : Local File COMPANY      [CPY] : Endif
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:BPC])=0 : Local File BPCUSTOMER   [BPC] : Endif
If clalev([F:SDH])=0 : Local File SDELIVERY    [SDH] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CCSD]
 When  0 : Local Mask =NOMMSK(0) [CSD1]
 When  1 : Local Mask =NOMMSK(1) [CSD2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CCSD]
 When  0 : Grizo [CSD1]
 When  1 : Grizo [CSD2]
Endcase
Return

$GRISE_CLE
Case MA
 When -1 : If dim([M:CCSD]BPCORD)>0 : Grizo [CCSD]BPCORD : Endif
 When  0 : If dim([M:CSD1]BPCORD)>0 : Grizo [CSD1]BPCORD : Endif
Endcase
Return

$GRISE_CRIT
If dim([M:CCSD]CPY)>0
 Grizo [CCSD]CPY
Endif
If dim([M:CCSD]CURS)>0
 Grizo [CCSD]CURS
Endif
If dim([M:CCSD]STOFCY)>0
 Grizo [CCSD]STOFCY
Endif
If dim([M:CCSD]BPCORD)>0
 Grizo [CCSD]BPCORD
Endif
If dim([M:CCSD]PJTDEB)>0
 Grizo [CCSD]PJTDEB
Endif
If dim([M:CCSD]PJTFIN)>0
 Grizo [CCSD]PJTFIN
Endif
If dim([M:CCSD]DLVDATDEB)>0
 Grizo [CCSD]DLVDATDEB
Endif
If dim([M:CCSD]DLVDATFIN)>0
 Grizo [CCSD]DLVDATFIN
Endif
If dim([M:CCSD]LNDN)>0
 Grizo [CCSD]LNDN
Endif
If dim([M:CCSD]DLVTYPNOR)>0
 Grizo [CCSD]DLVTYPNOR
Endif
If dim([M:CCSD]LNDO)>0
 Grizo [CCSD]LNDO
Endif
If dim([M:CCSD]DLVTYPLND)>0
 Grizo [CCSD]DLVTYPLND
Endif
If dim([M:CCSD]SCOFLG)>0
 Grizo [CCSD]SCOFLG
Endif
If dim([M:CCSD]DLVTYPSCO)>0
 Grizo [CCSD]DLVTYPSCO
Endif
If dim([M:CCSD]CFMFLGN)>0
 Grizo [CCSD]CFMFLGN
Endif
If dim([M:CCSD]CFMFLGO)>0
 Grizo [CCSD]CFMFLGO
Endif
If dim([M:CCSD]NONINV)>0
 Grizo [CCSD]NONINV
Endif
If dim([M:CCSD]DLVTYPNIN)>0
 Grizo [CCSD]DLVTYPNIN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CCSD])>0 : Close Local Mask [CCSD] : Endif
 When  0 : If clalev([M:CSD1])>0 : Close Local Mask [CSD1] : Endif
 When  1 : If clalev([M:CSD2])>0 : Close Local Mask [CSD2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CCSD]
 When  0 : Default Mask [CSD1]
 When  1 : Default Mask [CSD2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CCSD]
 When  0 : Raz [M:CSD1]
 When  1 : Raz [M:CSD2]
Endcase
Return

$CRITENT
If dim([M:CCSD]CPY)>0 & dim([M:CSD1]CPY)>0
 [M:CCSD]CPY = [M:CSD1]CPY
Endif
If dim([M:CCSD]CURS)>0 & dim([M:CSD1]CURS)>0
 [M:CCSD]CURS = [M:CSD1]CURS
Endif
If dim([M:CCSD]STOFCY)>0 & dim([M:CSD1]STOFCY)>0
 [M:CCSD]STOFCY = [M:CSD1]STOFCY
Endif
If dim([M:CCSD]BPCORD)>0 & dim([M:CSD1]BPCORD)>0
 [M:CCSD]BPCORD = [M:CSD1]BPCORD
Endif
If dim([M:CCSD]PJTDEB)>0 & dim([M:CSD1]PJTDEB)>0
 [M:CCSD]PJTDEB = [M:CSD1]PJTDEB
Endif
If dim([M:CCSD]PJTFIN)>0 & dim([M:CSD1]PJTFIN)>0
 [M:CCSD]PJTFIN = [M:CSD1]PJTFIN
Endif
If dim([M:CCSD]DLVDATDEB)>0 & dim([M:CSD1]DLVDATDEB)>0
 [M:CCSD]DLVDATDEB = [M:CSD1]DLVDATDEB
Endif
If dim([M:CCSD]DLVDATFIN)>0 & dim([M:CSD1]DLVDATFIN)>0
 [M:CCSD]DLVDATFIN = [M:CSD1]DLVDATFIN
Endif
If dim([M:CCSD]LNDN)>0 & dim([M:CSD1]LNDN)>0
 [M:CCSD]LNDN = [M:CSD1]LNDN
Endif
If dim([M:CCSD]DLVTYPNOR)>0 & dim([M:CSD1]DLVTYPNOR)>0
 [M:CCSD]DLVTYPNOR = [M:CSD1]DLVTYPNOR
Endif
If dim([M:CCSD]LNDO)>0 & dim([M:CSD1]LNDO)>0
 [M:CCSD]LNDO = [M:CSD1]LNDO
Endif
If dim([M:CCSD]DLVTYPLND)>0 & dim([M:CSD1]DLVTYPLND)>0
 [M:CCSD]DLVTYPLND = [M:CSD1]DLVTYPLND
Endif
If dim([M:CCSD]SCOFLG)>0 & dim([M:CSD1]SCOFLG)>0
 [M:CCSD]SCOFLG = [M:CSD1]SCOFLG
Endif
If dim([M:CCSD]DLVTYPSCO)>0 & dim([M:CSD1]DLVTYPSCO)>0
 [M:CCSD]DLVTYPSCO = [M:CSD1]DLVTYPSCO
Endif
If dim([M:CCSD]CFMFLGN)>0 & dim([M:CSD1]CFMFLGN)>0
 [M:CCSD]CFMFLGN = [M:CSD1]CFMFLGN
Endif
If dim([M:CCSD]CFMFLGO)>0 & dim([M:CSD1]CFMFLGO)>0
 [M:CCSD]CFMFLGO = [M:CSD1]CFMFLGO
Endif
If dim([M:CCSD]NONINV)>0 & dim([M:CSD1]NONINV)>0
 [M:CCSD]NONINV = [M:CSD1]NONINV
Endif
If dim([M:CCSD]DLVTYPNIN)>0 & dim([M:CSD1]DLVTYPNIN)>0
 [M:CCSD]DLVTYPNIN = [M:CSD1]DLVTYPNIN
Endif
Return

$ENTCRIT
If dim([M:CCSD]CPY)>0 & dim([M:CSD1]CPY)>0
[M:CSD1]CPY = [M:CCSD]CPY
Endif
If dim([M:CCSD]CURS)>0 & dim([M:CSD1]CURS)>0
[M:CSD1]CURS = [M:CCSD]CURS
Endif
If dim([M:CCSD]STOFCY)>0 & dim([M:CSD1]STOFCY)>0
[M:CSD1]STOFCY = [M:CCSD]STOFCY
Endif
If dim([M:CCSD]BPCORD)>0 & dim([M:CSD1]BPCORD)>0
[M:CSD1]BPCORD = [M:CCSD]BPCORD
Endif
If dim([M:CCSD]PJTDEB)>0 & dim([M:CSD1]PJTDEB)>0
[M:CSD1]PJTDEB = [M:CCSD]PJTDEB
Endif
If dim([M:CCSD]PJTFIN)>0 & dim([M:CSD1]PJTFIN)>0
[M:CSD1]PJTFIN = [M:CCSD]PJTFIN
Endif
If dim([M:CCSD]DLVDATDEB)>0 & dim([M:CSD1]DLVDATDEB)>0
[M:CSD1]DLVDATDEB = [M:CCSD]DLVDATDEB
Endif
If dim([M:CCSD]DLVDATFIN)>0 & dim([M:CSD1]DLVDATFIN)>0
[M:CSD1]DLVDATFIN = [M:CCSD]DLVDATFIN
Endif
If dim([M:CCSD]LNDN)>0 & dim([M:CSD1]LNDN)>0
[M:CSD1]LNDN = [M:CCSD]LNDN
Endif
If dim([M:CCSD]DLVTYPNOR)>0 & dim([M:CSD1]DLVTYPNOR)>0
[M:CSD1]DLVTYPNOR = [M:CCSD]DLVTYPNOR
Endif
If dim([M:CCSD]LNDO)>0 & dim([M:CSD1]LNDO)>0
[M:CSD1]LNDO = [M:CCSD]LNDO
Endif
If dim([M:CCSD]DLVTYPLND)>0 & dim([M:CSD1]DLVTYPLND)>0
[M:CSD1]DLVTYPLND = [M:CCSD]DLVTYPLND
Endif
If dim([M:CCSD]SCOFLG)>0 & dim([M:CSD1]SCOFLG)>0
[M:CSD1]SCOFLG = [M:CCSD]SCOFLG
Endif
If dim([M:CCSD]DLVTYPSCO)>0 & dim([M:CSD1]DLVTYPSCO)>0
[M:CSD1]DLVTYPSCO = [M:CCSD]DLVTYPSCO
Endif
If dim([M:CCSD]CFMFLGN)>0 & dim([M:CSD1]CFMFLGN)>0
[M:CSD1]CFMFLGN = [M:CCSD]CFMFLGN
Endif
If dim([M:CCSD]CFMFLGO)>0 & dim([M:CSD1]CFMFLGO)>0
[M:CSD1]CFMFLGO = [M:CCSD]CFMFLGO
Endif
If dim([M:CCSD]NONINV)>0 & dim([M:CSD1]NONINV)>0
[M:CSD1]NONINV = [M:CCSD]NONINV
Endif
If dim([M:CCSD]DLVTYPNIN)>0 & dim([M:CSD1]DLVTYPNIN)>0
[M:CSD1]DLVTYPNIN = [M:CCSD]DLVTYPNIN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "TRI" : CRITAFF2(1) = ""
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSCSD2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "CSD"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M]SDHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("SDH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "CSD"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("SDH","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M]SDHNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M]SDHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSCSD2"
 When "B2"
  Onerrgo RIEN
  Assign "[M]SDHNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSCSD2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


