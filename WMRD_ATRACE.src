#<AdxTL>@(#)0.0.0.0 $Revision$Class Log file
# Supervisor
## CRUD-CLASSE ## ATRACE
# 2018-08-27 13:03:25 891


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(ATRACE,ASTATUS)
Variable Instance ATRACE Using R_ATRACE
Variable Integer ASTATUS

If ATRACE = null : End : Endif

Gosub AVARIABLES From WMR00ATRACE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet ATRACE.ACTX.AGETAFCRIGHT(ATRACE,"LECTRACE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet ATRACE.ACTX.AGETAFCRIGHTD(ATRACE,"LECTRACE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_ATRACE
Else
 Gosub ADELETE_ATRACE
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
ATRACE.ASTALIN = [V]CST_ADEL
ATRACE.ATRACE.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If ATRACE.ATRACE.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATRACE.ATRACE.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ATRACE.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ATRACE.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_ATRACE
Gosub ADELETE_ATRACE
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_ATRACE
[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ATRACE._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATRACE.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If ATRACE.snapshotEnabled=1
 [L]A_RETIK = ATRACE.revertUpdTick
Endif
[L]ASTATUS = max(fmet ATRACE.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



