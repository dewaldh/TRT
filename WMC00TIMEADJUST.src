#<AdxTL>@(#)0.0.0.0 $Revision$Class Daylight saving time
# Supervisor
## CRUD-CLASSE ## TIMEADJUST
# 2018-08-27 12:54:13 094

Gosub TEST From WMCR_TIMEADJUST : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,COD,STRDAT)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TIMEADJUST : TIMEADJUST
# TIMETRANS : TIMEADJUST TIMETRANS
# TIMETRANS : TIMEADJUST TIMETRANS
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TIMEADJUST._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TIMEADJUST.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TIMEADJUST.ACTX.AFOLDER,nomap,"")>0
 Local File TIMEADJUST [TAD]
 Local File TIMETRANS [TTRS]
 Local File TIMETRANS [TTRE]
 Local File ATEXTRA [AXX]
Else
 Local File =TIMEADJUST.ACTX.AFOLDER+".TIMEADJUST" [TAD]
 Local File =TIMEADJUST.ACTX.AFOLDER+".TIMETRANS" [TTRS]
 Local File =TIMEADJUST.ACTX.AFOLDER+".TIMETRANS" [TTRE]
 Local File =TIMEADJUST.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TIMEADJUST.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [TAD] With
& [TTRS]TTR0 ~= [F:TAD]TTRCODSTR,
& [TTRE]TTR0 ~= [F:TAD]TTRCODEND
& As [LNK_]
Return

############################################################################################
### TIMEADJUST(WTAD)
############################################################################################
Funprog  _MAJSQL_TIMEADJUST(WTAD)
Variable Instance WTAD Using C_TIMEADJUST
Local Integer ASTATUS,A_I,A_J
Default File [F:TAD]
If WTAD.ASTALIN=[V]CST_ANEW
 Call INICRE(WTAD) From ASYRSUB
 SetInstance [F:TAD] With WTAD
 For J=1 To maxtab(WTAD.AXX)
  If WTAD.AXX(J)<>null & WTAD.AXX(J).PRO= "DES" & WTAD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTAD,WTAD.AXX(J).TEX,"TIMEADJUST","DES",WTAD.AXX(J).LAN,WTAD.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TAD]
 If fstat
  Call FSTA("TAD",WTAD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTAD.updTick = [F:TAD]updTick
Elsif WTAD.ASTALIN=[V]CST_ALL or WTAD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTAD) From ASYRSUB
 SetInstance [F:TAD] With WTAD
 For J=1 To maxtab(WTAD.AXX)
  If WTAD.AXX(J)<>null & WTAD.AXX(J).PRO= "DES" & WTAD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTAD,WTAD.AXX(J).TEX,"TIMEADJUST","DES",WTAD.AXX(J).LAN,WTAD.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTAD,"TIMEADJUST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TAD]TAD0 = [F:TAD]COD;[F:TAD]STRDAT
 If fstat
  Call FSTA("TAD",WTAD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTAD.updTick = [F:TAD]updTick
Elsif WTAD.ASTALIN=[V]CST_ADEL
 SetInstance [F:TAD] With WTAD
 For J=1 To maxtab(WTAD.AXX)
  If WTAD.AXX(J)<>null & WTAD.AXX(J).PRO= "DES"
   Call SUPTEXTRA(WTAD,WTAD.AXX(J).TEX,"TIMEADJUST","DES",WTAD.AXX(J).LAN,WTAD.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTAD,"TIMEADJUST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TAD]TAD0 = [F:TAD]COD;[F:TAD]STRDAT
 If fstat
  Call FSTA("TAD",WTAD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### TIMETRANS(WTTRS)
############################################################################################
Funprog  _MAJSQL_TIMETRANS(WTTRS)
Variable Instance WTTRS Using C_TIMETRANS
Local Integer ASTATUS,A_I,A_J
Default File [F:TTRS]
If WTTRS.ASTALIN=[V]CST_ANEW
 Call INICRE(WTTRS) From ASYRSUB
 SetInstance [F:TTRS] With WTTRS
 For J=1 To maxtab(WTTRS.AXX)
  If WTTRS.AXX(J)<>null & WTTRS.AXX(J).PRO= "DES" & WTTRS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTTRS,WTTRS.AXX(J).TEX,"TIMETRANS","DES",WTTRS.AXX(J).LAN,WTTRS.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TTRS]
 If fstat
  Call FSTA("TTRS",WTTRS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTTRS.updTick = [F:TTRS]updTick
Elsif WTTRS.ASTALIN=[V]CST_ALL or WTTRS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTTRS) From ASYRSUB
 SetInstance [F:TTRS] With WTTRS
 For J=1 To maxtab(WTTRS.AXX)
  If WTTRS.AXX(J)<>null & WTTRS.AXX(J).PRO= "DES" & WTTRS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTTRS,WTTRS.AXX(J).TEX,"TIMETRANS","DES",WTTRS.AXX(J).LAN,WTTRS.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTTRS,"TIMETRANS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TTRS]TTR0 = [F:TTRS]COD
 If fstat
  Call FSTA("TTRS",WTTRS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTTRS.updTick = [F:TTRS]updTick
Elsif WTTRS.ASTALIN=[V]CST_ADEL
 SetInstance [F:TTRS] With WTTRS
 For J=1 To maxtab(WTTRS.AXX)
  If WTTRS.AXX(J)<>null & WTTRS.AXX(J).PRO= "DES"
   Call SUPTEXTRA(WTTRS,WTTRS.AXX(J).TEX,"TIMETRANS","DES",WTTRS.AXX(J).LAN,WTTRS.COD,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTTRS,"TIMETRANS")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TTRS]TTR0 = [F:TTRS]COD
 If fstat
  Call FSTA("TTRS",WTTRS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



