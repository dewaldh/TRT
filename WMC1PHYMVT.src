#<AdxTL>@(#)0.0.0.0 $Revision$Class Movements
# Supervisor
## ACLA-CLASSE ## PHYMVT
# 2018-08-27 12:38:54 844


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : PHYREF Reference ( Field PHY 20)
####################################################################

$SET_PHYREF
If [L]_AOLDVAL<>this.PHYREF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PHYREF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PHYREF
 Gosub PROPAGATE_PHYREF
Endif
Return

$INIT_PHYREF
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "PHYREF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PHYREF
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "PHYREF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PHYREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PHYREF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PHYREF
[L]CURPRO = "PHYREF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PHYREF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PHYREF
[L]CURPRO = "PHYREF"
If vireblc(this.PHYREF,2)<>vireblc(format$("K:20c",this.PHYREF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PHYREF
[L]CURPRO = "PHYREF"
If vireblc(this.PHYREF,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPPHY.ACTRLREF(this,"PHYREF",this.PHYREF,this.PHYREF,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PHYREF<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PHYREF
[L]CURPRO = "PHYREF"
Return

$PROPAGATE_PHYREF
this.isReadonly = 0
[L]CURPRO = "PHYREF"
Gosub _LNKPRO_PHYREF
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PHYREF
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "PHYREF"
$_LNKPRO_PHYREF
If vireblc(this.PHYREF,2)<>""
 # Link PHYELT
 Local File PHYELT [WPHY]
 Read [F:WPHY]PHY0 = this.PHYREF
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("PHYREF","$title",[F:WPHY]PHYDES1)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("PHYREF","$description",[F:WPHY]PHYDES1)
 Endif
 LogicClose File [WPHY]
Endif
Return

$_ALOADATTRIBUTE_PHYREF
[L]ASTATUS = fmet this.ASETATTRIBUTE("PHYREF","$isMandatory","true")
Return


####################################################################
# 2 : NUM Order no. ( Field C 4)
####################################################################

$SET_NUM
If [L]_AOLDVAL<>this.NUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NUM
 Gosub PROPAGATE_NUM
Endif
Return

$INIT_NUM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "NUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NUM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "NUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NUM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NUM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NUM
[L]CURPRO = "NUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NUM
[L]CURPRO = "NUM"
Return

$_AOTHERS_NUM
[L]CURPRO = "NUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NUM
[L]CURPRO = "NUM"
Return

$PROPAGATE_NUM
this.isReadonly = 0
[L]CURPRO = "NUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NUM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "NUM"
$_LNKPRO_NUM
Return


####################################################################
# 3 : MVT Pending movements ( Field Local menu number 3275)
####################################################################

$SET_MVT
If [L]_AOLDVAL<>this.MVT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MVT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MVT
 Gosub PROPAGATE_MVT
Endif
Return

$INIT_MVT
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MVT=0 and fmet this.AGETATTRIBUTE("MVT","$isMandatory")="true"
 this.MVT = 1
Endif
Return
 
$CONTROL_MVT
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MVT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MVT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MVT
[L]CURPRO = "MVT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MVT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MVT
[L]CURPRO = "MVT"
If this.MVT<0 or this.MVT>len(mess(0,3275,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3275 ->"-num$(this.MVT)-mess(99,123,1)):  Return : # Local menu "3275 -> Invalid option
Endif
Return

$_AOTHERS_MVT
[L]CURPRO = "MVT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MVT
[L]CURPRO = "MVT"
Return

$PROPAGATE_MVT
this.isReadonly = 0
[L]CURPRO = "MVT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MVT
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVT"
$_LNKPRO_MVT
Return


####################################################################
# 4 : MVTDAT Movement date ( Field D4)
####################################################################

$SET_MVTDAT
If [L]_AOLDVAL<>this.MVTDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MVTDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MVTDAT
 Gosub PROPAGATE_MVTDAT
Endif
Return

$INIT_MVTDAT
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MVTDAT
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MVTDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MVTDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MVTDAT
[L]CURPRO = "MVTDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MVTDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MVTDAT
[L]CURPRO = "MVTDAT"
Return

$_AOTHERS_MVTDAT
[L]CURPRO = "MVTDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MVTDAT
[L]CURPRO = "MVTDAT"
Return

$PROPAGATE_MVTDAT
this.isReadonly = 0
[L]CURPRO = "MVTDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MVTDAT
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTDAT"
$_LNKPRO_MVTDAT
Return


####################################################################
# 5 : MVTISSTYP Disposal reason ( Field Local menu number 3175)
####################################################################

$SET_MVTISSTYP
If [L]_AOLDVAL<>this.MVTISSTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MVTISSTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MVTISSTYP
 Gosub PROPAGATE_MVTISSTYP
Endif
Return

$INIT_MVTISSTYP
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTISSTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MVTISSTYP=0 and fmet this.AGETATTRIBUTE("MVTISSTYP","$isMandatory")="true"
 this.MVTISSTYP = 1
Endif
Return
 
$CONTROL_MVTISSTYP
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTISSTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MVTISSTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MVTISSTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MVTISSTYP
[L]CURPRO = "MVTISSTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MVTISSTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MVTISSTYP
[L]CURPRO = "MVTISSTYP"
If this.MVTISSTYP<0 or this.MVTISSTYP>len(mess(0,3175,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3175 ->"-num$(this.MVTISSTYP)-mess(99,123,1)):  Return : # Local menu "3175 -> Invalid option
Endif
Return

$_AOTHERS_MVTISSTYP
[L]CURPRO = "MVTISSTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MVTISSTYP
[L]CURPRO = "MVTISSTYP"
Return

$PROPAGATE_MVTISSTYP
this.isReadonly = 0
[L]CURPRO = "MVTISSTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MVTISSTYP
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTISSTYP"
$_LNKPRO_MVTISSTYP
Return


####################################################################
# 6 : MVTTRANS Tansfer reason ( Field Miscellaneous table number)
####################################################################

$SET_MVTTRANS
If [L]_AOLDVAL<>this.MVTTRANS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MVTTRANS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MVTTRANS
 Gosub PROPAGATE_MVTTRANS
Endif
Return

$INIT_MVTTRANS
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTTRANS"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"MVTTRANS",this.MVTTRANS,612)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MVTTRANS
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTTRANS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MVTTRANS              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MVTTRANS              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MVTTRANS
[L]CURPRO = "MVTTRANS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MVTTRANS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MVTTRANS
[L]CURPRO = "MVTTRANS"
If vireblc(this.MVTTRANS,2)<>vireblc(format$("K:20B",this.MVTTRANS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MVTTRANS
[L]CURPRO = "MVTTRANS"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"MVTTRANS",this.MVTTRANS,612,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MVTTRANS
[L]CURPRO = "MVTTRANS"
Return

$PROPAGATE_MVTTRANS
this.isReadonly = 0
[L]CURPRO = "MVTTRANS"
Gosub _LNKPRO_MVTTRANS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MVTTRANS
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTTRANS"
$_LNKPRO_MVTTRANS
If vireblc(this.MVTTRANS,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 612;this.MVTTRANS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("MVTTRANS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("MVTTRANS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 7 : MVTFCY Dest. financial site ( Field FCY 5)
####################################################################

$SET_MVTFCY
If [L]_AOLDVAL<>this.MVTFCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MVTFCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MVTFCY
 Gosub PROPAGATE_MVTFCY
Endif
Return

$INIT_MVTFCY
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTFCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MVTFCY
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTFCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MVTFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MVTFCY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MVTFCY
[L]CURPRO = "MVTFCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MVTFCY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MVTFCY
[L]CURPRO = "MVTFCY"
If vireblc(this.MVTFCY,2)<>vireblc(format$("K:5c",this.MVTFCY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MVTFCY
[L]CURPRO = "MVTFCY"
If vireblc(this.MVTFCY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPFCY.ACTRLREF(this,"MVTFCY",this.MVTFCY,this.MVTFCY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.MVTFCY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MVTFCY
[L]CURPRO = "MVTFCY"
Return

$PROPAGATE_MVTFCY
this.isReadonly = 0
[L]CURPRO = "MVTFCY"
Gosub _LNKPRO_MVTFCY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MVTFCY
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTFCY"
$_LNKPRO_MVTFCY
If vireblc(this.MVTFCY,2)<>""
 # Link FACILITY
 Local File FACILITY [WFCY]
 Read [F:WFCY]FCY0 = this.MVTFCY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MVTFCY","$title",[F:WFCY]FCYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MVTFCY","$description",[F:WFCY]FCYNAM)
 Endif
 LogicClose File [WFCY]
Endif
Return


####################################################################
# 8 : MVTLCTCOD Dest. location ( Field LCT 30)
####################################################################

$SET_MVTLCTCOD
If [L]_AOLDVAL<>this.MVTLCTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MVTLCTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MVTLCTCOD
 Gosub PROPAGATE_MVTLCTCOD
Endif
Return

$INIT_MVTLCTCOD
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTLCTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MVTLCTCOD
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTLCTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MVTLCTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MVTLCTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MVTLCTCOD
[L]CURPRO = "MVTLCTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MVTLCTCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MVTLCTCOD
[L]CURPRO = "MVTLCTCOD"
If vireblc(this.MVTLCTCOD,2)<>vireblc(format$("K:30c",this.MVTLCTCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MVTLCTCOD
[L]CURPRO = "MVTLCTCOD"
If vireblc(this.MVTLCTCOD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPLCT.ACTRLREF(this,"MVTLCTCOD",this.MVTLCTCOD,this.MVTLCTCOD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.MVTLCTCOD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MVTLCTCOD
[L]CURPRO = "MVTLCTCOD"
Return

$PROPAGATE_MVTLCTCOD
this.isReadonly = 0
[L]CURPRO = "MVTLCTCOD"
Gosub _LNKPRO_MVTLCTCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MVTLCTCOD
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "MVTLCTCOD"
$_LNKPRO_MVTLCTCOD
If vireblc(this.MVTLCTCOD,2)<>""
 # Link PHYLCT
 Local File PHYLCT [WLCT]
 Read [F:WLCT]LCT0 = this.MVTLCTCOD
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MVTLCTCOD","$title",[F:WLCT]LCTDES)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MVTLCTCOD","$description",[F:WLCT]LCTDES)
 Endif
 LogicClose File [WLCT]
Endif
Return


####################################################################
# 9 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 10 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 11 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 12 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 13 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0PHYMVT
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




