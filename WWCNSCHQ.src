#<AdxTL>@(#)%I%
# Supervisor
# Inquiry CHQ

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [05/03/2019]
A_HEURE = "13:33:47"
A_USER  = "MAJID"
A_STAMP = "20190305133347"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(20909,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSCHQSTD"
PROGSPE    = "CNSCHQSPE"
CBOITE     = "DCNSCHQ"
BOITE      = "FCNSCHQ"
NOMMSK(0)  = "CONSCHQ1"
ABMSK(0)   = "CHQ1"
NOMMSK(1)  = "CONSCHQ2"
ABMSK(1)   = "CHQ2"
CMEMO      = "chq"
CNOMMSK    = "CRITCHQ"
CABMSK     = "CCHQ"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:CHN])=0 : Local File CHQNUM       [CHN] : Endif
If clalev([F:PYH])=0 : Local File PAYMENTH     [PYH] : Endif
If clalev([F:BPR])=0 : Local File BPARTNER     [BPR] : Endif
If clalev([F:BPS])=0 : Local File BPSUPPLIER   [BPS] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CCHQ]
 When  0 : Local Mask =NOMMSK(0) [CHQ1]
 When  1 : Local Mask =NOMMSK(1) [CHQ2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CCHQ]
 When  0 : Grizo [CHQ1]
 When  1 : Grizo [CHQ2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CCHQ]BAN)>0
 Grizo [CCHQ]BAN
Endif
If dim([M:CCHQ]PRNDAT)>0
 Grizo [CCHQ]PRNDAT
Endif
If dim([M:CCHQ]STAISSUED)>0
 Grizo [CCHQ]STAISSUED
Endif
If dim([M:CCHQ]STAUNISS)>0
 Grizo [CCHQ]STAUNISS
Endif
If dim([M:CCHQ]STAVOID)>0
 Grizo [CCHQ]STAVOID
Endif
If dim([M:CCHQ]STACLEAR)>0
 Grizo [CCHQ]STACLEAR
Endif
If dim([M:CCHQ]CHQTYPNOR)>0
 Grizo [CCHQ]CHQTYPNOR
Endif
If dim([M:CCHQ]CHQTYPMAN)>0
 Grizo [CCHQ]CHQTYPMAN
Endif
If dim([M:CCHQ]CHQNUMDEB)>0
 Grizo [CCHQ]CHQNUMDEB
Endif
If dim([M:CCHQ]CHQNUMFIN)>0
 Grizo [CCHQ]CHQNUMFIN
Endif
If dim([M:CCHQ]BPRDEB)>0
 Grizo [CCHQ]BPRDEB
Endif
If dim([M:CCHQ]BPRFIN)>0
 Grizo [CCHQ]BPRFIN
Endif
If dim([M:CCHQ]CPY)>0
 Grizo [CCHQ]CPY
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CCHQ])>0 : Close Local Mask [CCHQ] : Endif
 When  0 : If clalev([M:CHQ1])>0 : Close Local Mask [CHQ1] : Endif
 When  1 : If clalev([M:CHQ2])>0 : Close Local Mask [CHQ2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CCHQ]
 When  0 : Default Mask [CHQ1]
 When  1 : Default Mask [CHQ2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CCHQ]
 When  0 : Raz [M:CHQ1]
 When  1 : Raz [M:CHQ2]
Endcase
Return

$CRITENT
If dim([M:CCHQ]BAN)>0 & dim([M:CHQ1]BAN)>0
 [M:CCHQ]BAN = [M:CHQ1]BAN
Endif
If dim([M:CCHQ]PRNDAT)>0 & dim([M:CHQ1]PRNDAT)>0
 [M:CCHQ]PRNDAT = [M:CHQ1]PRNDAT
Endif
If dim([M:CCHQ]STAISSUED)>0 & dim([M:CHQ1]STAISSUED)>0
 [M:CCHQ]STAISSUED = [M:CHQ1]STAISSUED
Endif
If dim([M:CCHQ]STAUNISS)>0 & dim([M:CHQ1]STAUNISS)>0
 [M:CCHQ]STAUNISS = [M:CHQ1]STAUNISS
Endif
If dim([M:CCHQ]STAVOID)>0 & dim([M:CHQ1]STAVOID)>0
 [M:CCHQ]STAVOID = [M:CHQ1]STAVOID
Endif
If dim([M:CCHQ]STACLEAR)>0 & dim([M:CHQ1]STACLEAR)>0
 [M:CCHQ]STACLEAR = [M:CHQ1]STACLEAR
Endif
If dim([M:CCHQ]CHQTYPNOR)>0 & dim([M:CHQ1]CHQTYPNOR)>0
 [M:CCHQ]CHQTYPNOR = [M:CHQ1]CHQTYPNOR
Endif
If dim([M:CCHQ]CHQTYPMAN)>0 & dim([M:CHQ1]CHQTYPMAN)>0
 [M:CCHQ]CHQTYPMAN = [M:CHQ1]CHQTYPMAN
Endif
If dim([M:CCHQ]CHQNUMDEB)>0 & dim([M:CHQ1]CHQNUMDEB)>0
 [M:CCHQ]CHQNUMDEB = [M:CHQ1]CHQNUMDEB
Endif
If dim([M:CCHQ]CHQNUMFIN)>0 & dim([M:CHQ1]CHQNUMFIN)>0
 [M:CCHQ]CHQNUMFIN = [M:CHQ1]CHQNUMFIN
Endif
If dim([M:CCHQ]BPRDEB)>0 & dim([M:CHQ1]BPRDEB)>0
 [M:CCHQ]BPRDEB = [M:CHQ1]BPRDEB
Endif
If dim([M:CCHQ]BPRFIN)>0 & dim([M:CHQ1]BPRFIN)>0
 [M:CCHQ]BPRFIN = [M:CHQ1]BPRFIN
Endif
If dim([M:CCHQ]CPY)>0 & dim([M:CHQ1]CPY)>0
 [M:CCHQ]CPY = [M:CHQ1]CPY
Endif
Return

$ENTCRIT
If dim([M:CCHQ]BAN)>0 & dim([M:CHQ1]BAN)>0
[M:CHQ1]BAN = [M:CCHQ]BAN
Endif
If dim([M:CCHQ]PRNDAT)>0 & dim([M:CHQ1]PRNDAT)>0
[M:CHQ1]PRNDAT = [M:CCHQ]PRNDAT
Endif
If dim([M:CCHQ]STAISSUED)>0 & dim([M:CHQ1]STAISSUED)>0
[M:CHQ1]STAISSUED = [M:CCHQ]STAISSUED
Endif
If dim([M:CCHQ]STAUNISS)>0 & dim([M:CHQ1]STAUNISS)>0
[M:CHQ1]STAUNISS = [M:CCHQ]STAUNISS
Endif
If dim([M:CCHQ]STAVOID)>0 & dim([M:CHQ1]STAVOID)>0
[M:CHQ1]STAVOID = [M:CCHQ]STAVOID
Endif
If dim([M:CCHQ]STACLEAR)>0 & dim([M:CHQ1]STACLEAR)>0
[M:CHQ1]STACLEAR = [M:CCHQ]STACLEAR
Endif
If dim([M:CCHQ]CHQTYPNOR)>0 & dim([M:CHQ1]CHQTYPNOR)>0
[M:CHQ1]CHQTYPNOR = [M:CCHQ]CHQTYPNOR
Endif
If dim([M:CCHQ]CHQTYPMAN)>0 & dim([M:CHQ1]CHQTYPMAN)>0
[M:CHQ1]CHQTYPMAN = [M:CCHQ]CHQTYPMAN
Endif
If dim([M:CCHQ]CHQNUMDEB)>0 & dim([M:CHQ1]CHQNUMDEB)>0
[M:CHQ1]CHQNUMDEB = [M:CCHQ]CHQNUMDEB
Endif
If dim([M:CCHQ]CHQNUMFIN)>0 & dim([M:CHQ1]CHQNUMFIN)>0
[M:CHQ1]CHQNUMFIN = [M:CCHQ]CHQNUMFIN
Endif
If dim([M:CCHQ]BPRDEB)>0 & dim([M:CHQ1]BPRDEB)>0
[M:CHQ1]BPRDEB = [M:CCHQ]BPRDEB
Endif
If dim([M:CCHQ]BPRFIN)>0 & dim([M:CHQ1]BPRFIN)>0
[M:CHQ1]BPRFIN = [M:CCHQ]BPRFIN
Endif
If dim([M:CCHQ]CPY)>0 & dim([M:CHQ1]CPY)>0
[M:CHQ1]CPY = [M:CCHQ]CPY
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "TRI" : CRITAFF2(1) = ""
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSCHQ2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "CHQ"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:CHQ2]PAYNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("PAY","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:CHQ2]PAYNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSCHQ2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


