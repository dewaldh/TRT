#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Routing
# Supervisor
## CRUD-CLASSE ## CCMIMPROD
# 2018-08-27 12:29:19 021

Gosub TEST From WMCR_CCMIMPROD : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CRID,LINENO)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# CCMIMPROD : CCMIMPROD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet CCMIMPROD._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = CCMIMPROD.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(CCMIMPROD.ACTX.AFOLDER,nomap,"")>0
 Local File CCMIMPROD [CCMROD]
 Local File CCMIMPROD [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =CCMIMPROD.ACTX.AFOLDER+".CCMIMPROD" [CCMROD]
 Local File =CCMIMPROD.ACTX.AFOLDER+".CCMIMPROD" [AAA_]
 Local File =CCMIMPROD.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPROD.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [CCMROD] With
& [AAA_]CCMROD0 = CRID+LINENO
& As [LNK_]
Return

############################################################################################
### CCMIMPROD(WCCMROD)
############################################################################################
Funprog  _MAJSQL_CCMIMPROD(WCCMROD)
Variable Instance WCCMROD Using C_CCMIMPROD
Local Integer ASTATUS,A_I,A_J
Default File [F:CCMROD]
If WCCMROD.ASTALIN=[V]CST_ANEW
 Call INICRE(WCCMROD) From ASYRSUB
 SetInstance [F:CCMROD] With WCCMROD
 For J=1 To maxtab(WCCMROD.AXX)
  If WCCMROD.AXX(J)<>null & WCCMROD.AXX(J).PRO= "ROUDESAXX" & WCCMROD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WCCMROD,WCCMROD.AXX(J).TEX,"ROUDESAXX","ROUTING",WCCMROD.AXX(J).LAN,WCCMROD.IDENT1,WCCMROD.FCY,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:CCMROD]
 If fstat
  Call FSTA("CCMROD",WCCMROD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMROD.updTick = [F:CCMROD]updTick
Elsif WCCMROD.ASTALIN=[V]CST_ALL or WCCMROD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WCCMROD) From ASYRSUB
 SetInstance [F:CCMROD] With WCCMROD
 For J=1 To maxtab(WCCMROD.AXX)
  If WCCMROD.AXX(J)<>null & WCCMROD.AXX(J).PRO= "ROUDESAXX" & WCCMROD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WCCMROD,WCCMROD.AXX(J).TEX,"ROUDESAXX","ROUTING",WCCMROD.AXX(J).LAN,WCCMROD.IDENT1,WCCMROD.FCY,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMROD,"CCMIMPROD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:CCMROD]CCMROD0 = [F:CCMROD]CRID;[F:CCMROD]LINENO
 If fstat
  Call FSTA("CCMROD",WCCMROD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WCCMROD.updTick = [F:CCMROD]updTick
Elsif WCCMROD.ASTALIN=[V]CST_ADEL
 SetInstance [F:CCMROD] With WCCMROD
 For J=1 To maxtab(WCCMROD.AXX)
  If WCCMROD.AXX(J)<>null & WCCMROD.AXX(J).PRO= "ROUDESAXX"
   Call SUPTEXTRA(WCCMROD,WCCMROD.AXX(J).TEX,"ROUDESAXX","ROUTING",WCCMROD.AXX(J).LAN,WCCMROD.IDENT1,WCCMROD.FCY,[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WCCMROD,"CCMIMPROD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:CCMROD]CCMROD0 = [F:CCMROD]CRID;[F:CCMROD]LINENO
 If fstat
  Call FSTA("CCMROD",WCCMROD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



