#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################################
# Script            : SPEYPJMCRE                                                                                        #
# Creation date     : 27/09/2018                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : Majid (Leverage)                                                                                  #
# Module            : Land Development                                                                               #
# -------------------------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-79                                               #
# Description       : DFCX1-79 Land Development -  Stage                                                            #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
# DFCX1-169   Majid   Creation object rules
######################################################################################################################

$ACTION
Case ACTION
  When "EXEC"      :  Gosub EXEC
  When Default
Endcase
Return


#------------------------------------------------------------------------------------#
#Execute script
#------------------------------------------------------------------------------------#
$EXEC

If func AFNC.ACTIV("YLAND")

  Local Integer YESNO : YESNO = 2 :# Yes
  Call OUINON("Do you want to create Project in the PJM Module ?", YESNO) From GESECRAN
  If YESNO = 2

  # PARAM(1) = "DV" or "PM"
######################################################################
#Open Tables in order to Set the instance before AINSERT
    If !clalev([F:OPP]) : Local File OPPOR [OPP] : Endif
    If !clalev([F:YOPPPJM]) : Local File OPPORPJM [YOPPPJM] : Endif

    If !clalev([F:YEST3])     : Local File  YESTA [YEST3]     : Endif
    If !clalev([F:YFCY])      : Local File  FACILITY [YFCY]   : Endif
    If !clalev([YSTG2])       : Local File  YSTAGE [YSTG2]    : Endif

    Local Integer MY_STATUS
    Local Char YOPPNUM, YCUR

    Read [F:YEST3]YEST0 = [M:YSTA1]YESTID

    If    PARAM(1) = "DV" and [F:YEST3]YDEVFCY <> ""
      Read [F:YFCY]FCY0 = [F:YEST3]YDEVFCY
      YOPPNUM = [F:YFCY]LEGCPY + "-" + num$([M:YSTA]YSTAID)
    Elsif PARAM(1) = "PM" and [F:YEST3]YPJTFCY <> ""
      YOPPNUM = [F:YFCY]LEGCPY + "-" + num$([M:YSTA]YSTAID)
    Endif

    If YOPPNUM <> ""
      If GDEVISE <> ""  : YCUR = GDEVISE  : Else  : YCUR = "AUD"  : Endif

      Local Instance YPJM Using C_OPPOR
      YPJM = NewInstance C_OPPOR AllocGroup null
      MY_STATUS = fmet YPJM.AINIT
      If MY_STATUS <> [V]CST_AOK
        Infbox ("issue on AINIT PJM")
      Endif

      #Set Instance to Table
      SetInstance YPJM With [F:OPP]

      YPJM.TCHTOREAD = "PJM"
      YPJM.CPY = [F:YFCY]LEGCPY
      YPJM.SALFCY = [F:YFCY]FCY
      YPJM.OPPNUM = YOPPNUM
      YPJM.TCHISPJM = 2
      YPJM.CUR = YCUR
      YPJM.OPPTYP = "HPR"
      YPJM.CHGTYP = 1

      YPJM.PIMPL.PIMDESAXX = [M:YSTA]YSTADES
      YPJM.PIMPL.PIMDESAX1 = [M:YSTA]YSTADES
      YPJM.PIMPL.OPPSTATE = 1
      YPJM.PIMPL.PIMTYP = 2
      YPJM.PIMPL.PIMSTA = 1

      MY_STATUS = fmet YPJM.AINSERT()
      If [L]MY_STATUS = [V]CST_AOK Then

        # This section need to update and import by class
        Read [F:YSTG2]YSTG0 = [M:YSTA]YSTAID
        Trbegin [YOPPPJM]
          [F:YOPPPJM]OPPNUM = YOPPNUM
          [F:YOPPPJM]OPPSTATE = 2
          [F:YOPPPJM]CUROPP = YCUR
          [F:YOPPPJM]OPEDEFFCY = [F:YFCY]FCY
          [F:YOPPPJM]TASBUDAUT = 1
          [F:YOPPPJM]OPPIMPT = 1
          [F:YOPPPJM]OPPMOD = 1
          [F:YOPPPJM]DIE(0) = [F:YFCY]DIE(0)
          [F:YOPPPJM]DIE(1) = [F:YFCY]DIE(1)
          [F:YOPPPJM]DIE(2) = [F:YFCY]DIE(2)
          [F:YOPPPJM]DIE(3) = [F:YFCY]DIE(3)
          [F:YOPPPJM]DIE(4) = [F:YFCY]DIE(4)
          [F:YOPPPJM]DIE(5) = [F:YFCY]DIE(5)
          [F:YOPPPJM]DIE(6) = [F:YFCY]DIE(6)
          [F:YOPPPJM]DIE(7) = [F:YFCY]DIE(7)
          [F:YOPPPJM]DIE(8) = [F:YFCY]DIE(8)
          [F:YOPPPJM]DIE(9) = [F:YFCY]DIE(9)
          [F:YOPPPJM]DIE(10) = [F:YFCY]DIE(10)
          [F:YOPPPJM]DIE(11) = [F:YFCY]DIE(11)
          [F:YOPPPJM]DIE(12) = [F:YFCY]DIE(12)
          [F:YOPPPJM]DIE(13) = [F:YFCY]DIE(13)
          [F:YOPPPJM]DIE(14) = [F:YFCY]DIE(14)
          [F:YOPPPJM]DIE(15) = [F:YFCY]DIE(15)
          [F:YOPPPJM]DIE(16) = [F:YFCY]DIE(16)
          [F:YOPPPJM]DIE(17) = [F:YFCY]DIE(17)
          [F:YOPPPJM]DIE(18) = [F:YFCY]DIE(18)
          [F:YOPPPJM]DIE(19) = [F:YFCY]DIE(19)
          For I = 0 To 19
            If evalue("[F:YFCY]DIE("+num$(I)+")='"+func AFNC.PARAM ("YDEVDTY","")+"'")
              Assign ("[F:YOPPPJM]CCE("+num$(I)+")") With [M:YSTA]YJOBCOD
            Endif
          Next I
          Write [F:YOPPPJM]

          If    PARAM(1) = "DV"
            [F:YSTG2]YDEVNBRFLG = 2       #   PJM (DEV) activation flag
            [F:YSTG2]YDEVPJMNBR = YOPPNUM
          Elsif PARAM(1) = "PM"
            [F:YSTG2]YPRJMANFLG = 2       #   PJM (PM) activation flag
            [F:YSTG2]YPRJMANNBR = YOPPNUM
          Endif
          Rewrite [F:YSTG2]

          If !fstat
            Commit
          Else
            Rollback
            Call RECOVERS_ERROR_IN_CLASSIC(YPJM)
            If GMESSAGE = AVOID.ACHAR Then
              GMESSAGE = mess(16,6255,1)       # Issue on Project creation
              GERR = 2
            Endif
          Endif
          #Affzo [M:YSTA1]YDEVNBRFLG

      Else
        Call RECOVERS_ERROR_IN_CLASSIC(YPJM) From SUBPJMA
      Endif
      If MY_STATUS = [V]CST_AERROR Then
        Infbox "AERROR"-num$(MY_STATUS)
      Endif


      FreeGroup YPJM

    Endif     # YOPPNUM <> ""

  Endif

Endif

Return

#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(YOPP_INSTANCE)

  Variable Instance YOPP_INSTANCE Using C_OPPOR

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(YOPP_INSTANCE, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End

