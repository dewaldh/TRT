#<AdxTL>@(#)0.0.0.0 $Revision$Class Lines
# Supervisor
## ACLA-CLASSE ## TABINVCNDLIN
# 2018-08-27 12:51:42 173


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : INVCND Code ( Field A 20)
####################################################################

$SET_INVCND
If [L]_AOLDVAL<>this.INVCND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCND
 Gosub PROPAGATE_INVCND
Endif
Return

$INIT_INVCND
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCND
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCND
[L]CURPRO = "INVCND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INVCND,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCND
[L]CURPRO = "INVCND"
Return

$_AOTHERS_INVCND
[L]CURPRO = "INVCND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCND
[L]CURPRO = "INVCND"
Return

$PROPAGATE_INVCND
this.isReadonly = 0
[L]CURPRO = "INVCND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCND
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCND"
$_LNKPRO_INVCND
Return

$_ALOADATTRIBUTE_INVCND
[L]ASTATUS = fmet this.ASETATTRIBUTE("INVCND","$isMandatory","true")
Return


####################################################################
# 2 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;""
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 3 : INVCNDLIN Line number ( Field L 8)
####################################################################

$SET_INVCNDLIN
If [L]_AOLDVAL<>this.INVCNDLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDLIN
 Gosub PROPAGATE_INVCNDLIN
Endif
Return

$INIT_INVCNDLIN
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCNDLIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVCNDLIN
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCNDLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDLIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDLIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
Return

$_AOTHERS_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDLIN
[L]CURPRO = "INVCNDLIN"
Return

$PROPAGATE_INVCNDLIN
this.isReadonly = 0
[L]CURPRO = "INVCNDLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDLIN
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCNDLIN"
$_LNKPRO_INVCNDLIN
Return

$_ALOADATTRIBUTE_INVCNDLIN
[L]ASTATUS = fmet this.ASETATTRIBUTE("INVCNDLIN","$isMandatory","true")
Return


####################################################################
# 4 : INVCNDTYP Open item type ( Field Local menu number 2420)
####################################################################

$SET_INVCNDTYP
If [L]_AOLDVAL<>this.INVCNDTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVCNDTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVCNDTYP
 Gosub PROPAGATE_INVCNDTYP
Endif
Return

$INIT_INVCNDTYP
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCNDTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVCNDTYP=0 and fmet this.AGETATTRIBUTE("INVCNDTYP","$isMandatory")="true"
 this.INVCNDTYP = 1
Endif
Return
 
$CONTROL_INVCNDTYP
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCNDTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVCNDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVCNDTYP             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVCNDTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
If this.INVCNDTYP<0 or this.INVCNDTYP>len(mess(0,2420,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2420 ->"-num$(this.INVCNDTYP)-mess(99,123,1)):  Return : # Local menu "2420 -> Invalid option
Endif
Return

$_AOTHERS_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVCNDTYP
[L]CURPRO = "INVCNDTYP"
Return

$PROPAGATE_INVCNDTYP
this.isReadonly = 0
[L]CURPRO = "INVCNDTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVCNDTYP
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVCNDTYP"
$_LNKPRO_INVCNDTYP
Return

$_ALOADATTRIBUTE_INVCNDTYP
[L]ASTATUS = fmet this.ASETATTRIBUTE("INVCNDTYP","$isMandatory","true")
Return


####################################################################
# 5 : INVPERCENT Percentage ( Field RAT 0)
####################################################################

$SET_INVPERCENT
If [L]_AOLDVAL<>this.INVPERCENT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVPERCENT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVPERCENT
 Gosub PROPAGATE_INVPERCENT
Endif
Return

$INIT_INVPERCENT
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVPERCENT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVPERCENT
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVPERCENT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVPERCENT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVPERCENT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVPERCENT
[L]CURPRO = "INVPERCENT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVPERCENT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVPERCENT
[L]CURPRO = "INVPERCENT"
Return

$_AOTHERS_INVPERCENT
[L]CURPRO = "INVPERCENT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVPERCENT
[L]CURPRO = "INVPERCENT"
Return

$PROPAGATE_INVPERCENT
this.isReadonly = 0
[L]CURPRO = "INVPERCENT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVPERCENT
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVPERCENT"
$_LNKPRO_INVPERCENT
Return


####################################################################
# 6 : INVNBMONTHS Month ( Field C 2)
####################################################################

$SET_INVNBMONTHS
If [L]_AOLDVAL<>this.INVNBMONTHS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVNBMONTHS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVNBMONTHS
 Gosub PROPAGATE_INVNBMONTHS
Endif
Return

$INIT_INVNBMONTHS
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVNBMONTHS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVNBMONTHS
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVNBMONTHS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVNBMONTHS           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVNBMONTHS           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVNBMONTHS
[L]CURPRO = "INVNBMONTHS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVNBMONTHS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVNBMONTHS
[L]CURPRO = "INVNBMONTHS"
Return

$_AOTHERS_INVNBMONTHS
[L]CURPRO = "INVNBMONTHS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVNBMONTHS
[L]CURPRO = "INVNBMONTHS"
Return

$PROPAGATE_INVNBMONTHS
this.isReadonly = 0
[L]CURPRO = "INVNBMONTHS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVNBMONTHS
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVNBMONTHS"
$_LNKPRO_INVNBMONTHS
Return


####################################################################
# 7 : INVNBDAYS Number of days ( Field C 2)
####################################################################

$SET_INVNBDAYS
If [L]_AOLDVAL<>this.INVNBDAYS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVNBDAYS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVNBDAYS
 Gosub PROPAGATE_INVNBDAYS
Endif
Return

$INIT_INVNBDAYS
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVNBDAYS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVNBDAYS
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVNBDAYS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVNBDAYS             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVNBDAYS             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVNBDAYS
[L]CURPRO = "INVNBDAYS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVNBDAYS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVNBDAYS
[L]CURPRO = "INVNBDAYS"
Return

$_AOTHERS_INVNBDAYS
[L]CURPRO = "INVNBDAYS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVNBDAYS
[L]CURPRO = "INVNBDAYS"
Return

$PROPAGATE_INVNBDAYS
this.isReadonly = 0
[L]CURPRO = "INVNBDAYS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVNBDAYS
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVNBDAYS"
$_LNKPRO_INVNBDAYS
Return


####################################################################
# 8 : INVMONTHEND Month end ( Field Local menu number 2237)
####################################################################

$SET_INVMONTHEND
If [L]_AOLDVAL<>this.INVMONTHEND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVMONTHEND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVMONTHEND
 Gosub PROPAGATE_INVMONTHEND
Endif
Return

$INIT_INVMONTHEND
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVMONTHEND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVMONTHEND=0 and fmet this.AGETATTRIBUTE("INVMONTHEND","$isMandatory")="true"
 this.INVMONTHEND = 1
Endif
Return
 
$CONTROL_INVMONTHEND
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVMONTHEND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVMONTHEND           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVMONTHEND           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVMONTHEND
[L]CURPRO = "INVMONTHEND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVMONTHEND=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVMONTHEND
[L]CURPRO = "INVMONTHEND"
If this.INVMONTHEND<0 or this.INVMONTHEND>len(mess(0,2237,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2237 ->"-num$(this.INVMONTHEND)-mess(99,123,1)):  Return : # Local menu "2237 -> Invalid option
Endif
Return

$_AOTHERS_INVMONTHEND
[L]CURPRO = "INVMONTHEND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVMONTHEND
[L]CURPRO = "INVMONTHEND"
Return

$PROPAGATE_INVMONTHEND
this.isReadonly = 0
[L]CURPRO = "INVMONTHEND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVMONTHEND
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVMONTHEND"
$_LNKPRO_INVMONTHEND
Return


####################################################################
# 9 : INVDAYMON1 Day 1 ( Field C 2)
####################################################################

$SET_INVDAYMON1
If [L]_AOLDVAL<>this.INVDAYMON1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDAYMON1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDAYMON1
 Gosub PROPAGATE_INVDAYMON1
Endif
Return

$INIT_INVDAYMON1
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDAYMON1
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDAYMON1            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDAYMON1            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDAYMON1
[L]CURPRO = "INVDAYMON1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDAYMON1=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDAYMON1
[L]CURPRO = "INVDAYMON1"
Return

$_AOTHERS_INVDAYMON1
[L]CURPRO = "INVDAYMON1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDAYMON1
[L]CURPRO = "INVDAYMON1"
Return

$PROPAGATE_INVDAYMON1
this.isReadonly = 0
[L]CURPRO = "INVDAYMON1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDAYMON1
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON1"
$_LNKPRO_INVDAYMON1
Return


####################################################################
# 10 : INVDAYMON2 Day 2 ( Field C 2)
####################################################################

$SET_INVDAYMON2
If [L]_AOLDVAL<>this.INVDAYMON2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDAYMON2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDAYMON2
 Gosub PROPAGATE_INVDAYMON2
Endif
Return

$INIT_INVDAYMON2
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDAYMON2
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDAYMON2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDAYMON2            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDAYMON2
[L]CURPRO = "INVDAYMON2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDAYMON2=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDAYMON2
[L]CURPRO = "INVDAYMON2"
Return

$_AOTHERS_INVDAYMON2
[L]CURPRO = "INVDAYMON2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDAYMON2
[L]CURPRO = "INVDAYMON2"
Return

$PROPAGATE_INVDAYMON2
this.isReadonly = 0
[L]CURPRO = "INVDAYMON2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDAYMON2
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON2"
$_LNKPRO_INVDAYMON2
Return


####################################################################
# 11 : INVDAYMON3 Day 3 ( Field C 2)
####################################################################

$SET_INVDAYMON3
If [L]_AOLDVAL<>this.INVDAYMON3
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDAYMON3
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDAYMON3
 Gosub PROPAGATE_INVDAYMON3
Endif
Return

$INIT_INVDAYMON3
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON3"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDAYMON3
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON3"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDAYMON3            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDAYMON3            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDAYMON3
[L]CURPRO = "INVDAYMON3"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDAYMON3=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDAYMON3
[L]CURPRO = "INVDAYMON3"
Return

$_AOTHERS_INVDAYMON3
[L]CURPRO = "INVDAYMON3"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDAYMON3
[L]CURPRO = "INVDAYMON3"
Return

$PROPAGATE_INVDAYMON3
this.isReadonly = 0
[L]CURPRO = "INVDAYMON3"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDAYMON3
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON3"
$_LNKPRO_INVDAYMON3
Return


####################################################################
# 12 : INVDAYMON4 Day 4 ( Field C 2)
####################################################################

$SET_INVDAYMON4
If [L]_AOLDVAL<>this.INVDAYMON4
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDAYMON4
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDAYMON4
 Gosub PROPAGATE_INVDAYMON4
Endif
Return

$INIT_INVDAYMON4
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON4"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDAYMON4
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON4"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDAYMON4            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDAYMON4            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDAYMON4
[L]CURPRO = "INVDAYMON4"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDAYMON4=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDAYMON4
[L]CURPRO = "INVDAYMON4"
Return

$_AOTHERS_INVDAYMON4
[L]CURPRO = "INVDAYMON4"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDAYMON4
[L]CURPRO = "INVDAYMON4"
Return

$PROPAGATE_INVDAYMON4
this.isReadonly = 0
[L]CURPRO = "INVDAYMON4"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDAYMON4
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON4"
$_LNKPRO_INVDAYMON4
Return


####################################################################
# 13 : INVDAYMON5 Day 5 ( Field C 2)
####################################################################

$SET_INVDAYMON5
If [L]_AOLDVAL<>this.INVDAYMON5
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDAYMON5
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDAYMON5
 Gosub PROPAGATE_INVDAYMON5
Endif
Return

$INIT_INVDAYMON5
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON5"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDAYMON5
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON5"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDAYMON5            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDAYMON5            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDAYMON5
[L]CURPRO = "INVDAYMON5"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDAYMON5=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDAYMON5
[L]CURPRO = "INVDAYMON5"
Return

$_AOTHERS_INVDAYMON5
[L]CURPRO = "INVDAYMON5"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDAYMON5
[L]CURPRO = "INVDAYMON5"
Return

$PROPAGATE_INVDAYMON5
this.isReadonly = 0
[L]CURPRO = "INVDAYMON5"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDAYMON5
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON5"
$_LNKPRO_INVDAYMON5
Return


####################################################################
# 14 : INVDAYMON6 Day 6 ( Field C 2)
####################################################################

$SET_INVDAYMON6
If [L]_AOLDVAL<>this.INVDAYMON6
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVDAYMON6
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVDAYMON6
 Gosub PROPAGATE_INVDAYMON6
Endif
Return

$INIT_INVDAYMON6
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON6"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INVDAYMON6
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON6"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVDAYMON6            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVDAYMON6            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVDAYMON6
[L]CURPRO = "INVDAYMON6"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVDAYMON6=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVDAYMON6
[L]CURPRO = "INVDAYMON6"
Return

$_AOTHERS_INVDAYMON6
[L]CURPRO = "INVDAYMON6"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVDAYMON6
[L]CURPRO = "INVDAYMON6"
Return

$PROPAGATE_INVDAYMON6
this.isReadonly = 0
[L]CURPRO = "INVDAYMON6"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVDAYMON6
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "INVDAYMON6"
$_LNKPRO_INVDAYMON6
Return


####################################################################
# 15 : MINAMTNOT Minimum amount ( Field MD1 0)
####################################################################

$SET_MINAMTNOT
If [L]_AOLDVAL<>this.MINAMTNOT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MINAMTNOT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MINAMTNOT
 Gosub PROPAGATE_MINAMTNOT
Endif
Return

$INIT_MINAMTNOT
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "MINAMTNOT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MINAMTNOT
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "MINAMTNOT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MINAMTNOT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MINAMTNOT             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MINAMTNOT
[L]CURPRO = "MINAMTNOT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MINAMTNOT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MINAMTNOT
[L]CURPRO = "MINAMTNOT"
Return

$_AOTHERS_MINAMTNOT
[L]CURPRO = "MINAMTNOT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"MINAMTNOT",this.MINAMTNOT,this.MINAMTNOTCUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MINAMTNOT
[L]CURPRO = "MINAMTNOT"
Return

$PROPAGATE_MINAMTNOT
this.isReadonly = 0
[L]CURPRO = "MINAMTNOT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MINAMTNOT
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "MINAMTNOT"
$_LNKPRO_MINAMTNOT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"MINAMTNOT",this.MINAMTNOT,[L]AFORMAT,this.MINAMTNOTCUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("MINAMTNOT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 16 : MINAMTNOTCUR Currency ( Field CUR 3)
####################################################################

$SET_MINAMTNOTCUR
If [L]_AOLDVAL<>this.MINAMTNOTCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MINAMTNOTCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MINAMTNOTCUR
 Gosub PROPAGATE_MINAMTNOTCUR
Endif
Return

$INIT_MINAMTNOTCUR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "MINAMTNOTCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MINAMTNOTCUR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "MINAMTNOTCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MINAMTNOTCUR          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MINAMTNOTCUR          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MINAMTNOTCUR
[L]CURPRO = "MINAMTNOTCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MINAMTNOTCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MINAMTNOTCUR
[L]CURPRO = "MINAMTNOTCUR"
If vireblc(this.MINAMTNOTCUR,2)<>vireblc(format$("K:3c",this.MINAMTNOTCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MINAMTNOTCUR
[L]CURPRO = "MINAMTNOTCUR"
If vireblc(this.MINAMTNOTCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"MINAMTNOTCUR",this.MINAMTNOTCUR,this.MINAMTNOTCUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.MINAMTNOTCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MINAMTNOTCUR
[L]CURPRO = "MINAMTNOTCUR"
Return

$PROPAGATE_MINAMTNOTCUR
this.isReadonly = 0
[L]CURPRO = "MINAMTNOTCUR"
Gosub _LNKPRO_MINAMTNOTCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MINAMTNOTCUR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "MINAMTNOTCUR"
$_LNKPRO_MINAMTNOTCUR
If vireblc(this.MINAMTNOTCUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.MINAMTNOTCUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("MINAMTNOTCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("MINAMTNOTCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("MINAMTNOTCUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("MINAMTNOTCUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("MINAMTNOTCUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 17 : HASRIGHTHEAD Technical ( Field Local menu number 1)
####################################################################

$SET_HASRIGHTHEAD
If [L]_AOLDVAL<>this.HASRIGHTHEAD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HASRIGHTHEAD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HASRIGHTHEAD
 Gosub PROPAGATE_HASRIGHTHEAD
Endif
Return

$INIT_HASRIGHTHEAD
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "HASRIGHTHEAD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.HASRIGHTHEAD=0 and fmet this.AGETATTRIBUTE("HASRIGHTHEAD","$isMandatory")="true"
 this.HASRIGHTHEAD = 1
Endif
Return
 
$CONTROL_HASRIGHTHEAD
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "HASRIGHTHEAD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HASRIGHTHEAD          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HASRIGHTHEAD          : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HASRIGHTHEAD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
If this.HASRIGHTHEAD<0 or this.HASRIGHTHEAD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.HASRIGHTHEAD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HASRIGHTHEAD
[L]CURPRO = "HASRIGHTHEAD"
Return

$PROPAGATE_HASRIGHTHEAD
this.isReadonly = 0
[L]CURPRO = "HASRIGHTHEAD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HASRIGHTHEAD
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "HASRIGHTHEAD"
$_LNKPRO_HASRIGHTHEAD
Return


####################################################################
# 18 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 19 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 20 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 21 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 22 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0TABINVCNDLIN
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




