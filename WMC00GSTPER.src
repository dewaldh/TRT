#<AdxTL>@(#)0.0.0.0 $Revision$Class GST reporting periods
# Supervisor
## CRUD-CLASSE ## GSTPER
# 2018-08-27 12:33:40 466

Gosub TEST From WMCR_GSTPER : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CODGSTPER)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# GSTPER : GSTPER
# GSTPERD : GSTPER GSTPERD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet GSTPER._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = GSTPER.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(GSTPER.ACTX.AFOLDER,nomap,"")>0
 Local File GSTPER [GSTPH]
 Local File GSTPERD [GSTPD]
Else
 Local File =GSTPER.ACTX.AFOLDER+".GSTPER" [GSTPH]
 Local File =GSTPER.ACTX.AFOLDER+".GSTPERD" [GSTPD]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet GSTPER.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [GSTPH] With
& [GSTPD]GSTPD0 ~= [GSTPH]CODGSTPER
& As [LNK_]
Return

############################################################################################
### GSTPER(WGSTPH)
############################################################################################
Funprog  _MAJSQL_GSTPER(WGSTPH)
Variable Instance WGSTPH Using C_GSTPER
Local Integer ASTATUS,A_I,A_J
Default File [F:GSTPH]
If WGSTPH.ASTALIN=[V]CST_ANEW
 Call INICRE(WGSTPH) From ASYRSUB
 SetInstance [F:GSTPH] With WGSTPH
 Write [F:GSTPH]
 If fstat
  Call FSTA("GSTPH",WGSTPH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WGSTPH.updTick = [F:GSTPH]updTick
Elsif WGSTPH.ASTALIN=[V]CST_ALL or WGSTPH.ASTALIN=[V]CST_AUPD
 Call INIUPD(WGSTPH) From ASYRSUB
 SetInstance [F:GSTPH] With WGSTPH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WGSTPH,"GSTPER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:GSTPH]GSTPH0 = [F:GSTPH]CODGSTPER
 If fstat
  Call FSTA("GSTPH",WGSTPH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WGSTPH.updTick = [F:GSTPH]updTick
Elsif WGSTPH.ASTALIN=[V]CST_ADEL
 SetInstance [F:GSTPH] With WGSTPH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WGSTPH,"GSTPER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:GSTPH]GSTPH0 = [F:GSTPH]CODGSTPER
 If fstat
  Call FSTA("GSTPH",WGSTPH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### GSTPERD(WGSTPD)
############################################################################################
Funprog  _MAJSQL_GSTPERD(WGSTPD)
Variable Instance WGSTPD Using C_GSTPERD
Local Integer ASTATUS,A_I,A_J
Default File [F:GSTPD]
If WGSTPD.ASTALIN=[V]CST_ANEW
 Call INICRE(WGSTPD) From ASYRSUB
 SetInstance [F:GSTPD] With WGSTPD
 Write [F:GSTPD]
 If fstat
  Call FSTA("GSTPD",WGSTPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WGSTPD.updTick = [F:GSTPD]updTick
Elsif WGSTPD.ASTALIN=[V]CST_ALL or WGSTPD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WGSTPD) From ASYRSUB
 SetInstance [F:GSTPD] With WGSTPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WGSTPD,"GSTPERD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:GSTPD]GSTPD0 = [F:GSTPD]CODGSTPER;[F:GSTPD]LIN
 If fstat
  Call FSTA("GSTPD",WGSTPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WGSTPD.updTick = [F:GSTPD]updTick
Elsif WGSTPD.ASTALIN=[V]CST_ADEL
 SetInstance [F:GSTPD] With WGSTPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WGSTPD,"GSTPERD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:GSTPD]GSTPD0 = [F:GSTPD]CODGSTPER;[F:GSTPD]LIN
 If fstat
  Call FSTA("GSTPD",WGSTPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



