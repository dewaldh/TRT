#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## ACLA-CLASSE ## SVCRINVCND
# 2018-08-27 12:50:25 782

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : TOT_INV_QTY Invoiced quantity ( Field DCB 11)
####################################################################

$SET_TOT_INV_QTY
If [L]_AOLDVAL<>this.TOT_INV_QTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOT_INV_QTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOT_INV_QTY
 Gosub PROPAGATE_TOT_INV_QTY
Endif
Return

$INIT_TOT_INV_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_INV_QTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOT_INV_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_INV_QTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOT_INV_QTY           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOT_INV_QTY           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOT_INV_QTY
[L]CURPRO = "TOT_INV_QTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOT_INV_QTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOT_INV_QTY
[L]CURPRO = "TOT_INV_QTY"
Return

$_AOTHERS_TOT_INV_QTY
[L]CURPRO = "TOT_INV_QTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOT_INV_QTY
[L]CURPRO = "TOT_INV_QTY"
Return

$PROPAGATE_TOT_INV_QTY
this.isReadonly = 0
[L]CURPRO = "TOT_INV_QTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOT_INV_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_INV_QTY"
$_LNKPRO_TOT_INV_QTY
Return


####################################################################
# 32 : TOT_INV_AMT Amount invoiced ( Field MD1 0)
####################################################################

$SET_TOT_INV_AMT
If [L]_AOLDVAL<>this.TOT_INV_AMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOT_INV_AMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOT_INV_AMT
 Gosub PROPAGATE_TOT_INV_AMT
Endif
Return

$INIT_TOT_INV_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_INV_AMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOT_INV_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_INV_AMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOT_INV_AMT           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOT_INV_AMT           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOT_INV_AMT
[L]CURPRO = "TOT_INV_AMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOT_INV_AMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOT_INV_AMT
[L]CURPRO = "TOT_INV_AMT"
Return

$_AOTHERS_TOT_INV_AMT
[L]CURPRO = "TOT_INV_AMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"TOT_INV_AMT",this.TOT_INV_AMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOT_INV_AMT
[L]CURPRO = "TOT_INV_AMT"
Return

$PROPAGATE_TOT_INV_AMT
this.isReadonly = 0
[L]CURPRO = "TOT_INV_AMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOT_INV_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_INV_AMT"
$_LNKPRO_TOT_INV_AMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"TOT_INV_AMT",this.TOT_INV_AMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("TOT_INV_AMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 33 : TOT_EXT_QTY Quantities ( Field DCB 11)
####################################################################

$SET_TOT_EXT_QTY
If [L]_AOLDVAL<>this.TOT_EXT_QTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOT_EXT_QTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOT_EXT_QTY
 Gosub PROPAGATE_TOT_EXT_QTY
Endif
Return

$INIT_TOT_EXT_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_EXT_QTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOT_EXT_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_EXT_QTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOT_EXT_QTY           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOT_EXT_QTY           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOT_EXT_QTY
[L]CURPRO = "TOT_EXT_QTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOT_EXT_QTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOT_EXT_QTY
[L]CURPRO = "TOT_EXT_QTY"
Return

$_AOTHERS_TOT_EXT_QTY
[L]CURPRO = "TOT_EXT_QTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOT_EXT_QTY
[L]CURPRO = "TOT_EXT_QTY"
Return

$PROPAGATE_TOT_EXT_QTY
this.isReadonly = 0
[L]CURPRO = "TOT_EXT_QTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOT_EXT_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_EXT_QTY"
$_LNKPRO_TOT_EXT_QTY
Return


####################################################################
# 34 : TOT_EXT_AMT Amounts ( Field MD1 0)
####################################################################

$SET_TOT_EXT_AMT
If [L]_AOLDVAL<>this.TOT_EXT_AMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOT_EXT_AMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOT_EXT_AMT
 Gosub PROPAGATE_TOT_EXT_AMT
Endif
Return

$INIT_TOT_EXT_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_EXT_AMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOT_EXT_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_EXT_AMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOT_EXT_AMT           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOT_EXT_AMT           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOT_EXT_AMT
[L]CURPRO = "TOT_EXT_AMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOT_EXT_AMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOT_EXT_AMT
[L]CURPRO = "TOT_EXT_AMT"
Return

$_AOTHERS_TOT_EXT_AMT
[L]CURPRO = "TOT_EXT_AMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"TOT_EXT_AMT",this.TOT_EXT_AMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOT_EXT_AMT
[L]CURPRO = "TOT_EXT_AMT"
Return

$PROPAGATE_TOT_EXT_AMT
this.isReadonly = 0
[L]CURPRO = "TOT_EXT_AMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOT_EXT_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_EXT_AMT"
$_LNKPRO_TOT_EXT_AMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"TOT_EXT_AMT",this.TOT_EXT_AMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("TOT_EXT_AMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 35 : TOT_CN_QTY Credit quantity ( Field QTY 0)
####################################################################

$SET_TOT_CN_QTY
If [L]_AOLDVAL<>this.TOT_CN_QTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOT_CN_QTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOT_CN_QTY
 Gosub PROPAGATE_TOT_CN_QTY
Endif
Return

$INIT_TOT_CN_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_CN_QTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOT_CN_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_CN_QTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOT_CN_QTY            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOT_CN_QTY            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOT_CN_QTY
[L]CURPRO = "TOT_CN_QTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOT_CN_QTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOT_CN_QTY
[L]CURPRO = "TOT_CN_QTY"
Return

$_AOTHERS_TOT_CN_QTY
[L]CURPRO = "TOT_CN_QTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOT_CN_QTY
[L]CURPRO = "TOT_CN_QTY"
Return

$PROPAGATE_TOT_CN_QTY
this.isReadonly = 0
[L]CURPRO = "TOT_CN_QTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOT_CN_QTY
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_CN_QTY"
$_LNKPRO_TOT_CN_QTY
Return


####################################################################
# 36 : TOT_CN_AMT Credit memos invoiced amount ( Field MD1 0)
####################################################################

$SET_TOT_CN_AMT
If [L]_AOLDVAL<>this.TOT_CN_AMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TOT_CN_AMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TOT_CN_AMT
 Gosub PROPAGATE_TOT_CN_AMT
Endif
Return

$INIT_TOT_CN_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_CN_AMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TOT_CN_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_CN_AMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TOT_CN_AMT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TOT_CN_AMT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TOT_CN_AMT
[L]CURPRO = "TOT_CN_AMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TOT_CN_AMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TOT_CN_AMT
[L]CURPRO = "TOT_CN_AMT"
Return

$_AOTHERS_TOT_CN_AMT
[L]CURPRO = "TOT_CN_AMT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"TOT_CN_AMT",this.TOT_CN_AMT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TOT_CN_AMT
[L]CURPRO = "TOT_CN_AMT"
Return

$PROPAGATE_TOT_CN_AMT
this.isReadonly = 0
[L]CURPRO = "TOT_CN_AMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TOT_CN_AMT
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "TOT_CN_AMT"
$_LNKPRO_TOT_CN_AMT
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"TOT_CN_AMT",this.TOT_CN_AMT,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("TOT_CN_AMT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 38 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 39 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 40 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 41 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 42 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0SVCRINVCND
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




