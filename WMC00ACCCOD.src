#<AdxTL>@(#)0.0.0.0 $Revision$Class Access codes
# Supervisor
## CRUD-CLASSE ## ACCCOD
# 2018-08-27 12:18:56 521

Gosub TEST From WMCR_ACCCOD : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CODACC)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# ACCCOD : ACCCOD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet ACCCOD._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = ACCCOD.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(ACCCOD.ACTX.AFOLDER,nomap,"")>0
 Local File ACCCOD [ACS]
 Local File ACCCOD [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =ACCCOD.ACTX.AFOLDER+".ACCCOD" [ACS]
 Local File =ACCCOD.ACTX.AFOLDER+".ACCCOD" [AAA_]
 Local File =ACCCOD.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet ACCCOD.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [ACS] With
& [AAA_]ACS0 = CODACC
& As [LNK_]
Return

############################################################################################
### ACCCOD(WACS)
############################################################################################
Funprog  _MAJSQL_ACCCOD(WACS)
Variable Instance WACS Using C_ACCCOD
Local Integer ASTATUS,A_I,A_J
Default File [F:ACS]
If WACS.ASTALIN=[V]CST_ANEW
 Call INICRE(WACS) From ASYRSUB
 SetInstance [F:ACS] With WACS
 For J=1 To maxtab(WACS.AXX)
  If WACS.AXX(J)<>null & WACS.AXX(J).PRO= "DESACC" & WACS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WACS,WACS.AXX(J).TEX,"ACCCOD","DESACC",WACS.AXX(J).LAN,WACS.CODACC,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ACS]
 If fstat
  Call FSTA("ACS",WACS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WACS.updTick = [F:ACS]updTick
Elsif WACS.ASTALIN=[V]CST_ALL or WACS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WACS) From ASYRSUB
 SetInstance [F:ACS] With WACS
 For J=1 To maxtab(WACS.AXX)
  If WACS.AXX(J)<>null & WACS.AXX(J).PRO= "DESACC" & WACS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WACS,WACS.AXX(J).TEX,"ACCCOD","DESACC",WACS.AXX(J).LAN,WACS.CODACC,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WACS,"ACCCOD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ACS]ACS0 = [F:ACS]CODACC
 If fstat
  Call FSTA("ACS",WACS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WACS.updTick = [F:ACS]updTick
Elsif WACS.ASTALIN=[V]CST_ADEL
 SetInstance [F:ACS] With WACS
 For J=1 To maxtab(WACS.AXX)
  If WACS.AXX(J)<>null & WACS.AXX(J).PRO= "DESACC"
   Call SUPTEXTRA(WACS,WACS.AXX(J).TEX,"ACCCOD","DESACC",WACS.AXX(J).LAN,WACS.CODACC,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WACS,"ACCCOD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ACS]ACS0 = [F:ACS]CODACC
 If fstat
  Call FSTA("ACS",WACS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



