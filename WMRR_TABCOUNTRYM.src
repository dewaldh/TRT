#<AdxTL>@(#)0.0.0.0 $Revision$Class Country
# Supervisor
## CRUD-CLASSE ## TABCOUNTRYM
# 2018-08-27 13:36:59 597


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABCOUNTRY [TCY_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABCOUNTRYM") From ASYRCOM : Endif
Local Instance TABCOUNTRYM Using R_TABCOUNTRYM

If !SILENCE : Call TRACE("3 --> New Instance R_TABCOUNTRYM") From ASYRCOM : Endif
TABCOUNTRYM = NewInstance R_TABCOUNTRYM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TCY_]TCY0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABCOUNTRY") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRYM.AREAD([TCY_]CRY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABCOUNTRYM.TCY.CRY ="-num$(TABCOUNTRYM.TCY.CRY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABCOUNTRYM.TCY.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABCOUNTRYM.TCY.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TCY_]
FreeGroup TABCOUNTRYM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABCOUNTRYM,ACLE,ASTATUS,_ETAG)
Variable Instance TABCOUNTRYM Using R_TABCOUNTRYM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRY(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRY = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABCOUNTRY [TCY]
Default File [F:TCY]
Read [F:TCY]TCY0 = [L]_CRY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TCY]UPDTICK)>0
 [L]_ETAG = num$([F:TCY]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABCOUNTRYM,ACLE,ASTATUS)
Variable Instance TABCOUNTRYM Using R_TABCOUNTRYM
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRY(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRY = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRYM.AREAD([L]_CRY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABCOUNTRYM,_CRY,ASTATUS)
Variable Instance TABCOUNTRYM Using R_TABCOUNTRYM
Value Char _CRY
Variable Integer ASTATUS

If TABCOUNTRYM = null : End : Endif

Gosub AVARIABLES From WMR00TABCOUNTRYM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABCOUNTRYM.APARENT=null
 [L]A_I = TABCOUNTRYM.freeSnapshot
 TABCOUNTRYM.snapshotEnabled = 0
 TABCOUNTRYM.setAccessorEnabled = 0
Endif

If fmet TABCOUNTRYM.ACTX.AGETAFCRIGHT(TABCOUNTRYM,"GESTCY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TCY]
Read [F:TCY]TCY0 = [L]_CRY
If fstat
[L]A_ERROR = [L]_CRY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABCOUNTRYM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABCOUNTRYM.ACTX.AGETAFCRIGHTR(TABCOUNTRYM,"GESTCY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABCOUNTRYM.ACTX.ASTACRITROLE(TABCOUNTRYM,[L]_CRY
& ,"TCY","TCY",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRYM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABCOUNTRYM.TCY.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRYM.TCY.AREAD([L]_CRY))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRYM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABCOUNTRYM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOUNTRYM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABCOUNTRYM.APARENT=null
 TABCOUNTRYM.snapshotEnabled = 1
 TABCOUNTRYM.setAccessorEnabled = 1
Endif
LogicClose File [TCY]
End



