#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SOQ1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_ECCVALMAJ
Onevent BEFORE_INPUT Call AS_ECCVALMAJ(zc) From W2SOQ1
Onevent CONTROL Call C_ECCVALMAJ(zc) From W2SOQ1
Onevent AFTER_CHANGE Gosub AMM_ECCVALMAJ From W2SOQ1
Return

Subprog AS_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_ECCVALMAJ(VALEUR) From SUBSOQ
If mkstat=2
 [M]ECCVALMAJ(INDIC) = VALEUR
 Affzo ECCVALMAJ(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_ECCVALMAJ(zc) From W2SOQ1
Onkey   2 Titled GBOUTS Call S_ECCVALMAJ(zc) From W2SOQ1
Gosub _AFF
End

Subprog C_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ECCVALMAJ(VALEUR) From SUBSOQ
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

$AMM_ECCVALMAJ
Call AM_ECCVALMAJ(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMAJ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMAJ(VALEUR) From SUBSOQ
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELMAJS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELMAJS"
 PARMSK(1) = [M:SOQ1]DSTOFCY(nolign1)
 PARMSK(2) = [M:SOQ1]ITMREF
 PARMSK(3) = "4"
 PARMSK(4) = ""
 PARMSK(5) = "SOQ1"
 PARMSK(6) = num$(nolign-1)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELMAJS","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC0B
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0B"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_ECCVALMAJ" : PROGSUB = "SUBSOQ" : PROGSPE = "SPESOQ" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:SOQ1]ITMREF
 Call OBJET_CHAR(OBJCLE,"ECS",[M:SOQ1]ECCVALMAJ(nolign-1)) From GOBJET
 ACTION = "BB1_ECCVALMAJ" : PROGSUB = "SUBSOQ" : PROGSPE = "SPESOQ" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ECCVALMIN
Onevent BEFORE_INPUT Call AS_ECCVALMIN(zc) From W2SOQ1
Onevent CONTROL Call C_ECCVALMIN(zc) From W2SOQ1
Onevent AFTER_CHANGE Gosub AMM_ECCVALMIN From W2SOQ1
Return

Subprog AS_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(44284,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
If !GWEBSERV
 ## Action STKASMIN
 Call STKASMIN([M:SOQ1]ECCVALMAJ(nolign-1)) From STKACT
 If mkstat=2
  [M]ECCVALMIN(INDIC) = VALEUR
  Affzo ECCVALMIN(INDIC) : mkstat = 2
 Endif
Endif
If !mkstat
 ## Action STD
 Call AS_ECCVALMIN(VALEUR) From SUBSOQ
 If mkstat=2
  [M]ECCVALMIN(INDIC) = VALEUR
  Affzo ECCVALMIN(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_ECCVALMIN(zc) From W2SOQ1
 Onkey   2 Titled GBOUTS Call S_ECCVALMIN(zc) From W2SOQ1
Endif
Gosub _AFF
End

Subprog C_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STKCTRECC
Call STKCTRECC([M:SOQ1]ITMREF,[M:SOQ1]ECCVALMAJ(nolign-1),[M:SOQ1]ECCVALMIN(nolign-1),"",4) From STKACT
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

$AMM_ECCVALMIN
Call AM_ECCVALMIN(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMIN(VALEUR) From SUBSOQ
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Gosub _AFF
End

Subprog S_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELMIN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELMIN"
 PARMSK(1) = [M:SOQ1]ITMREF
 PARMSK(2) = [M:SOQ1]ECCVALMAJ(nolign-1)
 PARMSK(3) = "SOQ"
 PARMSK(4) = num$(nolign-1)
 PARMSK(5) = "4"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELMIN","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ECCVAL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ECCVAL"
 PARMSK(1) = [M:SOQ1]ITMREF
 PARMSK(2) = "4"
 PARMSK(3) = [M:SOQ1]ECCVALMAJ(nolign-1)
 Call SAISIE_CHAR(VALEUR,PARMSK,"FECCVAL","ECCVAL","SPEECCVAL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_QTY
Onevent BEFORE_AREA Gosub AV_QTY From W2SOQ1
Onevent CONTROL Call C_QTY(zc) From W2SOQ1
Onevent AFTER_CHANGE Gosub AMM_QTY From W2SOQ1
Onevent BEFORE_INPUT Call AS_QTY(zc) From W2SOQ1
Return

Subprog IB_QTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call IB_QTY From SUBSOQ
Endif
Gosub _AFF
End

$AV_QTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_QTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12817,GBOUT1) From OBJDIV
Call TEXTE(16982,GBOUT2) From OBJDIV
Call TEXTE(15286,GBOUT3) From OBJDIV
Call TEXTE(7977,GBOUT4) From OBJDIV
Call IB_QTY(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_QTY(zc) From W2SOQ1
Onkey 130 Titled GBOUT2 Call B2_QTY(zc) From W2SOQ1
Onkey 131 Titled GBOUT3 Call B3_QTY(zc) From W2SOQ1
Onkey 132 Titled GBOUT4 Call B4_QTY(zc) From W2SOQ1
Gosub _AFF
End

Subprog C_QTY(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "QTY" : GZNUM = 4620 : Endif
If !mkstat
 ## Action STD
 Call C_QTY(VALEUR) From SUBSOQ
 If mkstat : GERR = 1 : GZONE = "QTY" : GZNUM = 4620 : Endif
Endif
Gosub _AFF
End

$AMM_QTY
Call AM_QTY(zc)
If !mkstat & GOBJET
 zoncou = "QTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTY(VALEUR)
Variable Decimal VALEUR
## Action DIVCNVQTY
Call CNVQTY(VALEUR,[M]SAUSTUCOE,[M]STU,[M]QTYSTU(nolign-1)) From TRTVENQTE
If mkstat : GERR = 1 : GZONE = "QTY" : GZNUM = 4620 : Endif
If !mkstat
 ## Action STD
 Call AM_QTY(VALEUR) From SUBSOQ
 If mkstat : GERR = 1 : GZONE = "QTY" : GZNUM = 4620 : Endif
Endif
Gosub _AFF
End

Subprog B1_QTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action CONSSFC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSFC"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_QTY" : PROGSUB = "SUBSOQ" : PROGSPE = "SPESOQ" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "1"
 PARMSK(2) = [M]XSTOFCY
 PARMSK(3) = [M]ITMREF
 PARMSK(4) = ""
 Call CONSULT_NUM(VALEUR,"SFC",PARMSK) From GCONSULT
 ACTION = "BB1_QTY" : PROGSUB = "SUBSOQ" : PROGSPE = "SPESOQ" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_QTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SAIALLFIL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIALLFIL"
 PARMSK(1) = "SOQ1"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = [M]XSTOFCY
 PARMSK(4) = [M]ITMREF
 PARMSK(5) = [M]SOHNUM
 Call SAISIE_NUM(VALEUR,PARMSK,"IALLFIL","TRTALLFIL","XWIALLFIL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_QTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action VISUDETALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUDETALL"
 PARMSK(1) = "SOQ1"
 PARMSK(2) = [M]XSTOFCY
 PARMSK(3) = "2"
 PARMSK(4) = [M]SOHNUM
 PARMSK(5) = num$([M]SOPLIN)
 PARMSK(6) = num$([M]SOQSEQ(nolign-1))
 Call SAISIE_NUM(VALEUR,PARMSK,"IDETALL","TRTVENFEN","XWIDETALL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_QTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action CONSSDI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSDI"
 PARMSK(1) = "1"
 PARMSK(2) = [M]XSTOFCY
 PARMSK(3) = [M]ITMREF
 PARMSK(4) = ""
 Call CONSULT_NUM(VALEUR,"SDI",PARMSK) From GCONSULT
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ALLQTY
Onevent BEFORE_AREA Gosub AV_ALLQTY From W2SOQ1
Return

$AV_ALLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]ALLQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_SHTQTY
Onevent BEFORE_AREA Gosub AV_SHTQTY From W2SOQ1
Return

$AV_SHTQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]SHTQTY(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_WALLQTY
Onevent BEFORE_AREA Gosub AV_WALLQTY From W2SOQ1
Onevent BEFORE_INPUT Call AS_WALLQTY(zc) From W2SOQ1
Onevent AFTER_AREA Call AP_WALLQTY(zc) From W2SOQ1
Onevent AFTER_CHANGE Gosub AMM_WALLQTY From W2SOQ1
Onevent CONTROL Call C_WALLQTY(zc) From W2SOQ1
Return

Subprog IB_WALLQTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action STD
 Call IB_WALLQTY From SUBSOQ
Endif
Gosub _AFF
End

$AV_WALLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]WALLQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_WALLQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(12817,GBOUT1) From OBJDIV
Call TEXTE(16982,GBOUT2) From OBJDIV
Call TEXTE(15286,GBOUT3) From OBJDIV
Call TEXTE(7977,GBOUT4) From OBJDIV
Call IB_WALLQTY(VALEUR)
## Action STD
Call AS_WALLQTY(VALEUR) From SUBSOQ
If mkstat=2
 [M]WALLQTY(INDIC) = VALEUR
 Affzo WALLQTY(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_WALLQTY(zc) From W2SOQ1
Onkey 130 Titled GBOUT2 Call B2_WALLQTY(zc) From W2SOQ1
Onkey 131 Titled GBOUT3 Call B3_WALLQTY(zc) From W2SOQ1
Onkey 132 Titled GBOUT4 Call B4_WALLQTY(zc) From W2SOQ1
Gosub _AFF
End

Subprog C_WALLQTY(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

Subprog AP_WALLQTY(VALEUR)
Variable Decimal VALEUR
## Action DIVCNVQTY
Call CNVQTY(VALEUR,[M]SAUSTUCOE,[M]STU,[M]WALLQTYSTU(nolign-1)) From TRTVENQTE
If mkstat : GERR = 1 : GZONE = "WALLQTY" : GZNUM = 8566 : Endif
If !mkstat
 ## Action STD
 Call AP_WALLQTY(VALEUR) From SUBSOQ
 If mkstat : GERR = 1 : GZONE = "WALLQTY" : GZNUM = 8566 : Endif
Endif
Gosub _AFF
End

$AMM_WALLQTY
Call AM_WALLQTY(zc)
If !mkstat & GOBJET
 zoncou = "WALLQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WALLQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WALLQTY(VALEUR) From SUBSOQ
If mkstat : GERR = 1 : GZONE = "WALLQTY" : GZNUM = 8566 : Endif
Gosub _AFF
End

Subprog B1_WALLQTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action CONSSFC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSFC"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_WALLQTY" : PROGSUB = "SUBSOQ" : PROGSPE = "SPESOQ" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "1"
 PARMSK(2) = [M]XSTOFCY
 PARMSK(3) = [M]ITMREF
 PARMSK(4) = ""
 Call CONSULT_NUM(VALEUR,"SFC",PARMSK) From GCONSULT
 ACTION = "BB1_WALLQTY" : PROGSUB = "SUBSOQ" : PROGSPE = "SPESOQ" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_WALLQTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SAIALLFIL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIALLFIL"
 PARMSK(1) = "SOQ1"
 PARMSK(2) = num$(nolign-1)
 PARMSK(3) = [M]XSTOFCY
 PARMSK(4) = [M]ITMREF
 PARMSK(5) = [M]SOHNUM
 Call SAISIE_NUM(VALEUR,PARMSK,"IALLFIL","TRTALLFIL","XWIALLFIL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_WALLQTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action VISUDETALL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUDETALL"
 PARMSK(1) = "SOQ1"
 PARMSK(2) = [M]XSTOFCY
 PARMSK(3) = "2"
 PARMSK(4) = [M]SOHNUM
 PARMSK(5) = num$([M]SOPLIN)
 PARMSK(6) = num$([M]SOQSEQ(nolign-1))
 Call SAISIE_NUM(VALEUR,PARMSK,"IDETALL","TRTVENFEN","XWIDETALL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_WALLQTY(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action CONSSDI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSDI"
 PARMSK(1) = "1"
 PARMSK(2) = [M]XSTOFCY
 PARMSK(3) = [M]ITMREF
 PARMSK(4) = ""
 Call CONSULT_NUM(VALEUR,"SDI",PARMSK) From GCONSULT
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_ALLTYP
Onevent BEFORE_INPUT Call AS_ALLTYP(zc) From W2SOQ1
Onevent INIT_AREA Call D_ALLTYP(zc) From W2SOQ1
Return

Subprog D_ALLTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ALLTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ALLTYP(VALEUR) From SUBSOQ
If mkstat=2
 [M]ALLTYP(INDIC) = VALEUR
 Affzo ALLTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XCUMLIV
Onevent BEFORE_AREA Gosub AV_XCUMLIV From W2SOQ1
Return

$AV_XCUMLIV
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]XCUMLIV(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_XCUMATT
Onevent BEFORE_AREA Gosub AV_XCUMATT From W2SOQ1
Return

$AV_XCUMATT
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]XCUMATT(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_DPJT
Return

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W2SOQ1
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([F:SOC]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_ALLQTYSTU
Onevent BEFORE_AREA Gosub AV_ALLQTYSTU From W2SOQ1
Return

$AV_ALLQTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_SHTQTYSTU
Onevent BEFORE_AREA Gosub AV_SHTQTYSTU From W2SOQ1
Return

$AV_SHTQTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_WALLQTYSTU
Onevent BEFORE_AREA Gosub AV_WALLQTYSTU From W2SOQ1
Return

$AV_WALLQTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_ODLQTY
Onevent BEFORE_AREA Gosub AV_ODLQTY From W2SOQ1
Return

$AV_ODLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_DLVQTY
Onevent BEFORE_AREA Gosub AV_DLVQTY From W2SOQ1
Return

$AV_DLVQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]SAU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_LPRQTY
Onevent BEFORE_AREA Gosub AV_LPRQTY From W2SOQ1
Return

$AV_LPRQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_CAD
Onevent INIT_AREA Call D_CAD(zc) From W2SOQ1
Return

Subprog D_CAD(VALEUR)
Variable Integer VALEUR
If varinit([M]CAD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OPRQTY
Onevent BEFORE_AREA Gosub AV_OPRQTY From W2SOQ1
Return

$AV_OPRQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_PREQTY
Onevent BEFORE_AREA Gosub AV_PREQTY From W2SOQ1
Return

$AV_PREQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_INVQTY
Onevent BEFORE_AREA Gosub AV_INVQTY From W2SOQ1
Return

$AV_INVQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_DSTOFCY
Return

$ON_DSTOMGTCOD
Onevent INIT_AREA Call D_DSTOMGTCOD(zc) From W2SOQ1
Return

Subprog D_DSTOMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]DSTOMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPTNUM
Return

$ON_MDL
Return

$ON_DLVPIO
Onevent INIT_AREA Call D_DLVPIO(zc) From W2SOQ1
Return

Subprog D_DLVPIO(VALEUR)
Variable Integer VALEUR
If varinit([M]DLVPIO,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCK
Return

$ON_DRN
Onevent INIT_AREA Call D_DRN(zc) From W2SOQ1
Return

Subprog D_DRN(VALEUR)
Variable Integer VALEUR
If varinit([M]DRN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_YSTOFCY
Return

$ON_LOC
Return

$ON_LOC1
Return

$ON_LOC2
Return

$ON_LOC3
Return

$ON_RERBPCFLG
Onevent INIT_AREA Call D_RERBPCFLG(zc) From W2SOQ1
Return

Subprog D_RERBPCFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]RERBPCFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PJT
Return

$CHG_STY
Return


