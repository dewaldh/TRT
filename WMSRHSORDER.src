#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHSORDER SORDER
# 2018-08-27 12:48:01 194

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","SORDER","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SORDER [SOH]
If filinfo(filpath("FIL","SORDERP","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SORDERP [SOP]
If filinfo(filpath("FIL","SORDERQ","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SORDERQ [SOQ]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CALSOP]
If filinfo(filpath("FIL","SVCRVAT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SVCRVAT [SVV]
If filinfo(filpath("FIL","SVCRFOOT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SVCRFOOT [SVF]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CALSVF]
If filinfo(filpath("FIL","GACCDUDATE","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File GACCDUDATE [DUD]
Local File SORDER [SOH_]
Local Char KEY_SOH(120)(1..3)
Local Char KEY_SOP(120)(1..3)
Local Char KEY_SOQ(120)(1..3)
Local Char KEY_CALSOP(120)(1..3)
Local Char KEY_SVV(120)(1..3)
Local Char KEY_SVF(120)(1..3)
Local Char KEY_CALSVF(120)(1..3)
Local Char KEY_DUD(120)(1..3)
#Empty keys :
KEY_SOH(3) = ""
KEY_SOP(3) = "+0+0"
KEY_SOQ(3) = "+0+0"
KEY_CALSOP(3) = "+0++0+0++0"
KEY_SVV(3) = "0++"
KEY_SVF(3) = "0++0"
KEY_CALSVF(3) = "+0++0+0++0"
KEY_DUD(3) = "++0+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [SOH]
LogicClose File [SOP]
LogicClose File [SOQ]
LogicClose File [CALSOP]
LogicClose File [SVV]
LogicClose File [SVF]
LogicClose File [CALSVF]
LogicClose File [DUD]
LogicClose File [SOH_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [SOH] With
& [SOP]SOP0~=[F:SOH]SOHNUM,
& [SOQ]SOQ0=[F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ,
& [CALSOP]CAL0="SOP";0;[F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ;"";1,
& [SVV]SVV0=20;[F:SOH]SOHNUM,
& [SVF]SVF1=20;[F:SOH]SOHNUM,
& [CALSVF]CAL0="SVF";[F:SVF]VCRTYP;[F:SVF]VCRNUM;0;[F:SVF]DTA;"";1,
& [DUD]DUD0="*SO";[F:SOH]SOHNUM
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [SOH] With
& [SOP]SOP0~=[F:SOH]SOHNUM,
& [SOQ]SOQ0=[F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ,
& [CALSOP]CAL0="SOP";0;[F:SOP]SOHNUM;[F:SOP]SOPLIN;[F:SOP]SOPSEQ;"";1,
& [SVV]SVV0=20;[F:SOH]SOHNUM,
& [SVF]SVF1=20;[F:SOH]SOHNUM,
& [CALSVF]CAL0="SVF";[F:SVF]VCRTYP;[F:SVF]VCRNUM;0;[F:SVF]DTA;"";1,
& [DUD]DUD0="*SO";[F:SOH]SOHNUM
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_SOH(2) = [F:SOH]SOHNUM
KEY_SOP(2) = [F:SOP]SOHNUM+"+"+num$([F:SOP]SOPLIN)+"+"+num$([F:SOP]SOPSEQ)
KEY_SOQ(2) = [F:SOQ]SOHNUM+"+"+num$([F:SOQ]SOPLIN)+"+"+num$([F:SOQ]SOQSEQ)
KEY_CALSOP(2) = [F:CALSOP]ABRFIC+"+"+num$([F:CALSOP]VCRTYP)+"+"+[F:CALSOP]VCRNUM+"+"+num$([F:CALSOP]VCRLIN)+"+"+num$([F:CALSOP]VCRSEQ)+"+"+[F:CALSOP]CPLCLE+"+"+num$([F:CALSOP]ANALIG)
KEY_SVV(2) = num$([F:SVV]VCRTYP)+"+"+[F:SVV]VCRNUM+"+"+[F:SVV]VAT
KEY_SVF(2) = num$([F:SVF]VCRTYP)+"+"+[F:SVF]VCRNUM+"+"+num$([F:SVF]DTA)
KEY_CALSVF(2) = [F:CALSVF]ABRFIC+"+"+num$([F:CALSVF]VCRTYP)+"+"+[F:CALSVF]VCRNUM+"+"+num$([F:CALSVF]VCRLIN)+"+"+num$([F:CALSVF]VCRSEQ)+"+"+[F:CALSVF]CPLCLE+"+"+num$([F:CALSVF]ANALIG)
KEY_DUD(2) = [F:DUD]TYP+"+"+[F:DUD]NUM+"+"+num$([F:DUD]LIG)+"+"+num$([F:DUD]DUDLIG)

If (KEY_SOH(2) <> KEY_SOH(3)) & (KEY_SOH(1) <> KEY_SOH(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_SORDER(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:SOH]
FINS = 1
Local Integer BPCNAM_MAX:BPCNAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:SOH]BPCNAM)-1
 Break ([F:SOH]BPCNAM(CI1)="")
 BPCNAM_MAX+=1
 #Create a new instance
 INS.C_BPCNAM(CJ1) = NewInstance C_SORDER_C_BPCNAM(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_BPCNAM(CJ1).setaccessorEnabled = 0
 INS.C_BPCNAM(CJ1).BPCNAM=[F:SOH]BPCNAM(CI1)
 CJ1+=1
Next CI1
Local Integer BPDNAM_MAX:BPDNAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:SOH]BPDNAM)-1
 Break ([F:SOH]BPDNAM(CI1)="")
 BPDNAM_MAX+=1
 #Create a new instance
 INS.C_BPDNAM(CJ1) = NewInstance C_SORDER_C_BPDNAM(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_BPDNAM(CJ1).setaccessorEnabled = 0
 INS.C_BPDNAM(CJ1).BPDNAM=[F:SOH]BPDNAM(CI1)
 CJ1+=1
Next CI1
Local Integer BPINAM_MAX:BPINAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:SOH]BPINAM)-1
 Break ([F:SOH]BPINAM(CI1)="")
 BPINAM_MAX+=1
 #Create a new instance
 INS.C_BPINAM(CJ1) = NewInstance C_SORDER_C_BPINAM(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_BPINAM(CJ1).setaccessorEnabled = 0
 INS.C_BPINAM(CJ1).BPINAM=[F:SOH]BPINAM(CI1)
 CJ1+=1
Next CI1
Local Integer REP_MAX:REP_MAX0
CJ1=1
For CI1 = 0 To dim([F:SOH]REP)-1
 Break ([F:SOH]REP(CI1)="")
 REP_MAX+=1
 #Create a new instance
 INS.C_REP(CJ1) = NewInstance C_SORDER_C_REP(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_REP(CJ1).setaccessorEnabled = 0
 INS.C_REP(CJ1).REP=[F:SOH]REP(CI1)
 CJ1+=1
Next CI1
 KEY_SOH(1) = KEY_SOH(2)
Endif : # KEY_SOH(1) <> KEY_SOH(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"SOHNUM":'          +'"'+escJson(INS.SOHNUM)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"CPYCUR":'         +'"'+escJson(INS.CPYCUR)+'"'
Append ASND.DATA ,',"SALFCY":'         +'"'+escJson(INS.SALFCY)+'"'
Append ASND.DATA ,',"BPCORD":'         +'"'+escJson(INS.BPCORD)+'"'
Append ASND.DATA ,',"BPCINV":'         +'"'+escJson(INS.BPCINV)+'"'
Append ASND.DATA ,',"BPCPYR":'         +'"'+escJson(INS.BPCPYR)+'"'
Append ASND.DATA ,',"BPCGRU":'         +'"'+escJson(INS.BPCGRU)+'"'
Append ASND.DATA ,',"CUSORDREF":'      +'"'+escJson(INS.CUSORDREF)+'"'
Append ASND.DATA ,',"PJT":'            +'"'+escJson(INS.PJT)+'"'
Append ASND.DATA ,',"BPCPOSCOD":'      +'"'+escJson(INS.BPCPOSCOD)+'"'
Append ASND.DATA ,',"BPCCRY":'         +'"'+escJson(INS.BPCCRY)+'"'
Append ASND.DATA ,',"CNTNAM":'         +'"'+escJson(INS.CNTNAM)+'"'
Append ASND.DATA ,',"BPIPOSCOD":'      +'"'+escJson(INS.BPIPOSCOD)+'"'
Append ASND.DATA ,',"BPICRY":'         +'"'+escJson(INS.BPICRY)+'"'
Append ASND.DATA ,',"BPIEECNUM":'      +'"'+escJson(INS.BPIEECNUM)+'"'
Append ASND.DATA ,',"CNINAM":'         +'"'+escJson(INS.CNINAM)+'"'
Append ASND.DATA ,',"BPDPOSCOD":'      +'"'+escJson(INS.BPDPOSCOD)+'"'
Append ASND.DATA ,',"BPDCRY":'         +'"'+escJson(INS.BPDCRY)+'"'
Append ASND.DATA ,',"CNDNAM":'         +'"'+escJson(INS.CNDNAM)+'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"LAN":'            +'"'+escJson(INS.LAN)+'"'
Append ASND.DATA ,',"PTE":'            +'"'+escJson(INS.PTE)+'"'
Append ASND.DATA ,',"DEP":'            +'"'+escJson(INS.DEP)+'"'
Append ASND.DATA ,',"BPTNUM":'         +'"'+escJson(INS.BPTNUM)+'"'
Append ASND.DATA ,',"STOFCY":'         +'"'+escJson(INS.STOFCY)+'"'
Append ASND.DATA ,',"SQHNUM":'         +'"'+escJson(INS.SQHNUM)+'"'
Append ASND.DATA ,',"ORIFCY":'         +'"'+escJson(INS.ORIFCY)+'"'
Append ASND.DATA ,',"PRFNUM":'         +'"'+escJson(INS.PRFNUM)+'"'
Append ASND.DATA ,',"LASDLVNUM":'      +'"'+escJson(INS.LASDLVNUM)+'"'
Append ASND.DATA ,',"LASINVNUM":'      +'"'+escJson(INS.LASINVNUM)+'"'
Append ASND.DATA ,',"ICTCTY_POS":'     +'"'+escJson(INS.ICTCTY_POS)+'"'
Append ASND.DATA ,',"FFWNUM":'         +'"'+escJson(INS.FFWNUM)+'"'
Append ASND.DATA ,',"SRENUM":'         +'"'+escJson(INS.SRENUM)+'"'
Append ASND.DATA ,',"CMGNUM":'         +'"'+escJson(INS.CMGNUM)+'"'
Append ASND.DATA ,',"HLDUSR":'         +'"'+escJson(INS.HLDUSR)+'"'
Append ASND.DATA ,',"HLDUSRP":'        +'"'+escJson(INS.HLDUSRP)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"CREDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.CREDAT)
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,',"UPDDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.UPDDAT)
IS1=""
CJ1=1
Append ASND.DATA ,',"C_BPCNAM":['
For CI1=1 To BPCNAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPCNAM":'          +'"'+escJson(INS.C_BPCNAM(CJ1).BPCNAM)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"C_BPDNAM":['
For CI1=1 To BPDNAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPDNAM":'          +'"'+escJson(INS.C_BPDNAM(CJ1).BPDNAM)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"C_BPINAM":['
For CI1=1 To BPINAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPINAM":'          +'"'+escJson(INS.C_BPINAM(CJ1).BPINAM)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"C_REP":['
For CI1=1 To REP_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"REP":'             +'"'+escJson(INS.C_REP(CJ1).REP)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_SOH(1),KEY_SOP(1),KEY_SOQ(1),KEY_CALSOP(1),KEY_SVV(1),KEY_SVF(1),KEY_CALSVF(1),KEY_DUD(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:SOH]SOHNUM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From SORDER_CSTD
 Gosub METHODS From SORDER_CSTD
 Gosub METHODS From SORDER_CSTD
 Gosub METHODS From SORDER_CSTD
Gosub METHODS From SORDER_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="SORDER" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SORDER")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SORDER")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,6111)+'"'
Append WCLOB,',"$url":"{$baseUrl}/SORDER'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{SALFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6111)+' {$key}"'
Append WCLOB,',"$key":"{SOHNUM}"'
Append WCLOB,',"$url":"{$baseUrl}/SORDER('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'SORDER.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"SOHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2212)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CPYCUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,20394)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"SALFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5060)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPCORD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4430)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPCINV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1647)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPCPYR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6730)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPCGRU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1651)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CUSORDREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5692)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"PJT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1886)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"BPCPOSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7626)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPCCRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7630)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CNTNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,11974)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPIPOSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3035)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPICRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3038)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"BPIEECNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1584)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CNINAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14011)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPDPOSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4535)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPDCRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4469)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CNDNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,13958)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"LAN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1505)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"PTE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3624)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"DEP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1669)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPTNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1434)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"STOFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3676)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"SQHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3088)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"ORIFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8029)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PRFNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5922)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"LASDLVNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3089)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"LASINVNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3092)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"ICTCTY_POS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"FFWNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3718)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"SRENUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14603)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CMGNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14729)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"HLDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,48620)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"HLDUSRP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,48626)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1322)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1326)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"C_BPCNAM":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPCNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7622)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"C_BPDNAM":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPDNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2960)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"C_BPINAM":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPINAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4449)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"C_REP":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"REP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2929)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/SORDER('+"'"+'{$key}'+"'"+')?representation=SORDER.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHSORDERB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHSORDERB
End RES


