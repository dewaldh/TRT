#<AdxTL>@(#)0.0.0.0 $Revision$Class Settlement rule
# Supervisor
## CRUD-CLASSE ## YSETRUL
# 2019-03-22 06:02:15 059


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(YSETRUL,ASTATUS)
Variable Instance YSETRUL Using R_YSETRUL
Variable Integer ASTATUS

If YSETRUL = null : End : Endif

Gosub AVARIABLES From WMR00YSETRUL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet YSETRUL.ACTX.AGETAFCRIGHT(YSETRUL,"GESYSETRUL",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet YSETRUL.ACTX.AGETAFCRIGHTD(YSETRUL,"GESYSETRUL",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_YSETRUL
Else
 Gosub ADELETE_YSETRUL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
YSETRUL.ASTALIN = [V]CST_ADEL
YSETRUL.YSTR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(YSETRUL.YSTR,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If YSETRUL.YSTR.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YSETRUL.YSTR.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.YSTR.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If YSETRUL.YSTR.YSETRULTYP(A_N2) <> null
& and YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
A_N2=1
If YSETRUL.YSTR.YSETRULTYP(A_N2) <> null
& and YSETRUL.YSTR.YSETRULTYP(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.YSTR.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_YSETRUL
Trbegin [F:YSTR]
 Gosub ADELETE_YSETRUL
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_YSETRUL
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.YSTR._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If YSETRUL.snapshotEnabled=1
 [L]A_RETIK = YSETRUL.revertUpdTick
Endif
[L]ASTATUS = max(fmet YSETRUL.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



