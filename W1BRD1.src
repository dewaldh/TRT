#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management BRD1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:53:26"
A_USER  = "ADMIN"
A_STAMP = "20180827235326"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBVAL"
  If [M]NBVAL=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask BRD1 [BRD1]
Gosub HORODAT
Local Inpbox "BRD1" From GFONCTION At A_STAMP With A_WINDPREV Mask [BRD1] As [SIM_]
Grizo [BRD1]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BRD1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=88 : Y1(0)=1 : Y2(0)=20
Return

$ON_VALKEY
Onevent CONTROL Call C_VALKEY(zc) From W1BRD1
Onevent AFTER_AREA Call AP_VALKEY(zc) From W1BRD1
Onevent AFTER_CHANGE Gosub AMM_VALKEY From W1BRD1
Onevent BEFORE_INPUT Call AS_VALKEY(zc) From W1BRD1
Return

Subprog AS_VALKEY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VALKEY(zc) From W1BRD1
Gosub _AFF
End

Subprog C_VALKEY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "VALKEY" : GZNUM = 2943 : Endif
If !mkstat
 ## Action STD
 Call C_VALKEY(VALEUR) From SUBBRD
 If mkstat : GERR = 1 : GZONE = "VALKEY" : GZNUM = 2943 : Endif
Endif
Gosub _AFF
End

Subprog AP_VALKEY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_VALKEY(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VALKEY" : GZNUM = 2943 : Endif
Gosub _AFF
End

$AMM_VALKEY
Call AM_VALKEY(zc)
If !mkstat & GOBJET
 zoncou = "VALKEY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VALKEY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VALKEY(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VALKEY" : GZNUM = 2943 : Endif
Gosub _AFF
End

Subprog S_VALKEY(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELVALKEY
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELVALKEY"
 PARMSK(1) = num$([M:BRD0]DSPKEY)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELVALKEY","SUBBRD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_BRDPRC
Onevent CONTROL Call C_BRDPRC(zc) From W1BRD1
Return

Subprog C_BRDPRC(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_VAL1
Onevent CONTROL Call C_VAL1(zc) From W1BRD1
Onevent AFTER_CHANGE Gosub AMM_VAL1 From W1BRD1
Onevent BEFORE_INPUT Call AS_VAL1(zc) From W1BRD1
Return

Subprog AS_VAL1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VAL1(zc) From W1BRD1
Gosub _AFF
End

Subprog C_VAL1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VAL1(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VAL1" : GZNUM = 122 : Endif
Gosub _AFF
End

$AMM_VAL1
Call AM_VAL1(zc)
If !mkstat & GOBJET
 zoncou = "VAL1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VAL1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VAL1(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VAL1" : GZNUM = 122 : Endif
Gosub _AFF
End

Subprog S_VAL1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELVALCHP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELVALCHP"
 PARMSK(1) = num$([M:BRD0]CHAMP1)
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELVALCHP","SUBBRD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VAL2
Onevent CONTROL Call C_VAL2(zc) From W1BRD1
Onevent AFTER_CHANGE Gosub AMM_VAL2 From W1BRD1
Onevent BEFORE_INPUT Call AS_VAL2(zc) From W1BRD1
Return

Subprog AS_VAL2(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VAL2(zc) From W1BRD1
Gosub _AFF
End

Subprog C_VAL2(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VAL2(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VAL2" : GZNUM = 122 : Endif
Gosub _AFF
End

$AMM_VAL2
Call AM_VAL2(zc)
If !mkstat & GOBJET
 zoncou = "VAL2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VAL2(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VAL2(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VAL2" : GZNUM = 122 : Endif
Gosub _AFF
End

Subprog S_VAL2(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELVALCHP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELVALCHP"
 PARMSK(1) = ""
 PARMSK(2) = num$([M:BRD0]CHAMP2)
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELVALCHP","SUBBRD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VAL3
Onevent CONTROL Call C_VAL3(zc) From W1BRD1
Onevent AFTER_CHANGE Gosub AMM_VAL3 From W1BRD1
Onevent BEFORE_INPUT Call AS_VAL3(zc) From W1BRD1
Return

Subprog AS_VAL3(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VAL3(zc) From W1BRD1
Gosub _AFF
End

Subprog C_VAL3(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_VAL3(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VAL3" : GZNUM = 122 : Endif
Gosub _AFF
End

$AMM_VAL3
Call AM_VAL3(zc)
If !mkstat & GOBJET
 zoncou = "VAL3" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VAL3(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VAL3(VALEUR) From SUBBRD
If mkstat : GERR = 1 : GZONE = "VAL3" : GZNUM = 122 : Endif
Gosub _AFF
End

Subprog S_VAL3(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELVALCHP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELVALCHP"
 PARMSK(1) = ""
 PARMSK(2) = ""
 PARMSK(3) = num$([M:BRD0]CHAMP3)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELVALCHP","SUBBRD","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$CHG_STY
Return


