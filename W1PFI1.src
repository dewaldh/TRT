#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PFI1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:07:29"
A_USER  = "ADMIN"
A_STAMP = "20180828000729"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBAXE"
  If [M]NBAXE=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PFI1 [PFI1]
Gosub HORODAT
Local Inpbox "PFI1" From GFONCTION At A_STAMP With A_WINDPREV Mask [PFI1] As [SIM_]
Grizo [PFI1]5
Grizo [PFI1]10
Grizo [PFI1]15
Grizo [PFI1]20
Grizo [PFI1]25
Grizo [PFI1]30
Grizo [PFI1]35
Grizo [PFI1]40
Grizo [PFI1]45
Grizo [PFI1]50
Grizo [PFI1]55
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PFI1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=99 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=49 : Y1(1)=4 : Y2(1)=12
X1(2)=1 : X2(2)=49 : Y1(2)=13 : Y2(2)=16
X1(3)=1 : X2(3)=49 : Y1(3)=17 : Y2(3)=20
X1(4)=1 : X2(4)=25 : Y1(4)=21 : Y2(4)=26
X1(5)=26 : X2(5)=49 : Y1(5)=21 : Y2(5)=26
X1(6)=1 : X2(6)=49 : Y1(6)=27 : Y2(6)=28
X1(7)=50 : X2(7)=99 : Y1(7)=4 : Y2(7)=12
X1(8)=50 : X2(8)=99 : Y1(8)=13 : Y2(8)=16
X1(9)=50 : X2(9)=99 : Y1(9)=17 : Y2(9)=19
X1(10)=50 : X2(10)=99 : Y1(10)=20 : Y2(10)=28
Return

$ON_PFINUM
Onevent CONTROL Call C_PFINUM(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_PFINUM(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_PFINUM From W1PFI1
Return

Subprog AS_PFINUM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PFINUM(zc) From W1PFI1
Onkey 144 Titled GBOUTP Call P_PFINUM(zc) From W1PFI1
Gosub _AFF
End

Subprog C_PFINUM(VALEUR)
Variable Decimal VALEUR
## Action CONTOBJW
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CONTOBJW"
PARMSK(1) = "PFI"
Call S_AFF_NUM(VALEUR,PARMSK,"CONTOBJW","CONTOBJ","") From GACTION
GACTION = SAVACT
If mkstat : GERR = 1 : GZONE = "PFINUM" : GZNUM = 3660 : Endif
If !mkstat
 ## Action STD
 Call C_PFINUM(VALEUR) From SUBPFI
 If mkstat : GERR = 1 : GZONE = "PFINUM" : GZNUM = 3660 : Endif
Endif
Gosub _AFF
End

$AMM_PFINUM
Call AM_PFINUM(zc)
If !mkstat & GOBJET
 zoncou = "PFINUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PFINUM(VALEUR)
Variable Decimal VALEUR
If !mkstat & evalue("dim("+clanam([M])+"ZPFINUM)")>indice
 [M]PFINUM(indice) = VALEUR
 Affzo ZPFINUM(indice)
Endif
Gosub _AFF
End

Subprog S_PFINUM(VALEUR)
Variable Decimal VALEUR
Local Char PARMSK(250)(1..16)
PARMSK(1) = "PFI"
PARMSK(2) = "!$"
Call S_TAB_NUM(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog P_PFINUM(VALEUR)
Variable Decimal VALEUR
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("PFI",num$(VALEUR),PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPFINUM
Onevent BEFORE_AREA Gosub AV_ZPFINUM From W1PFI1
Return

$AV_ZPFINUM
Call LECTEXTRA(zc,"PFOOTINV","DESAXX",num$([M]PFINUM(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_DESAXX
Onevent INIT_AREA Call D_DESAXX(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_DESAXX(zc) From W1PFI1
Return

Subprog IB_DESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_DESAXX(VALEUR)
Variable Char    VALEUR()
If varinit([M]DESAXX,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"PFOOTINV","DESAXX",num$([M:PFI1]PFINUM),"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_DESAXX(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_DESAXX(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_DESAXX(zc) From W1PFI1
Gosub _AFF
End

Subprog B1_DESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_DESAXX" : PROGSUB = "SUBPFI" : PROGSPE = "SPEPFI" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "PFOOTINV"
 PARMSK(2) = "DESAXX"
 PARMSK(3) = num$([M:PFI1]PFINUM)
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_DESAXX" : PROGSUB = "SUBPFI" : PROGSPE = "SPEPFI" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_SHOAXX
Onevent INIT_AREA Call D_SHOAXX(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_SHOAXX(zc) From W1PFI1
Return

Subprog IB_SHOAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_SHOAXX(VALEUR)
Variable Char    VALEUR()
If varinit([M]SHOAXX,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"PFOOTINV","SHOAXX",num$([M:PFI1]PFINUM),"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_SHOAXX(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_SHOAXX(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_SHOAXX(zc) From W1PFI1
Gosub _AFF
End

Subprog B1_SHOAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_SHOAXX" : PROGSUB = "SUBPFI" : PROGSPE = "SPEPFI" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "PFOOTINV"
 PARMSK(2) = "SHOAXX"
 PARMSK(3) = num$([M:PFI1]PFINUM)
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_SHOAXX" : PROGSUB = "SUBPFI" : PROGSPE = "SPEPFI" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_SOC
Return

$ON_ITMREF
Onevent CONTROL Call C_ITMREF(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1PFI1
Return

Subprog IB_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_ITMREF(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_ITMREF(zc) From W1PFI1
Onkey 170 Titled GBOUT13 Call B13_ITMREF(zc) From W1PFI1
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1PFI1
Onkey 144 Titled GBOUTP Call P_ITMREF(zc) From W1PFI1
Onkey 146 Titled GBOUTA Call SA_ITMREF(zc) From W1PFI1
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ITMCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ITMCHOICE"
 Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3622 : Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3622 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","!J",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 3622 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZITMREF)")>indice
 [M]ITMREF(indice) = VALEUR
 Affzo ZITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = "!J"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_ITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZITMREF
Onevent BEFORE_AREA Gosub AV_ZITMREF From W1PFI1
Return

$AV_ZITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]ITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ENAFLG
Onevent INIT_AREA Call D_ENAFLG(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_ENAFLG(zc) From W1PFI1
Onevent CONTROL Call C_ENAFLG(zc) From W1PFI1
Return

Subprog D_ENAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ENAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ENAFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ENAFLG(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ENAFLG" : GZNUM = 188 : Endif
Gosub _AFF
End

$ON_DISVATFLG
Onevent AFTER_CHANGE Gosub AMM_DISVATFLG From W1PFI1
Onevent INIT_AREA Call D_DISVATFLG(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_DISVATFLG(zc) From W1PFI1
Return

Subprog D_DISVATFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DISVATFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DISVATFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_DISVATFLG
Call AM_DISVATFLG(zc)
If !mkstat & GOBJET
 zoncou = "DISVATFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DISVATFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DISVATFLG(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "DISVATFLG" : GZNUM = 33499 : Endif
Gosub _AFF
End

$ON_DEPFLG
Onevent INIT_AREA Call D_DEPFLG(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_DEPFLG(zc) From W1PFI1
Return

Subprog D_DEPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]DEPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DEPFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AMTCOD
Onevent AFTER_CHANGE Gosub AMM_AMTCOD From W1PFI1
Onevent INIT_AREA Call D_AMTCOD(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_AMTCOD(zc) From W1PFI1
Onevent CONTROL Call C_AMTCOD(zc) From W1PFI1
Return

Subprog D_AMTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]AMTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AMTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_AMTCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "AMTCOD" : GZNUM = 4029 : Endif
Gosub _AFF
End

$AMM_AMTCOD
Call AM_AMTCOD(zc)
If !mkstat & GOBJET
 zoncou = "AMTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_AMTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_AMTCOD(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "AMTCOD" : GZNUM = 4029 : Endif
Gosub _AFF
End

$ON_INCDCR
Onevent AFTER_CHANGE Gosub AMM_INCDCR From W1PFI1
Onevent INIT_AREA Call D_INCDCR(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_INCDCR(zc) From W1PFI1
Onevent CONTROL Call C_INCDCR(zc) From W1PFI1
Return

Subprog D_INCDCR(VALEUR)
Variable Integer VALEUR
If varinit([M]INCDCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INCDCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_INCDCR(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "INCDCR" : GZNUM = 1286 : Endif
Gosub _AFF
End

$AMM_INCDCR
Call AM_INCDCR(zc)
If !mkstat & GOBJET
 zoncou = "INCDCR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INCDCR(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_INCDCR(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "INCDCR" : GZNUM = 1286 : Endif
Gosub _AFF
End

$ON_BPSORI
Onevent INIT_AREA Call D_BPSORI(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_BPSORI(zc) From W1PFI1
Onevent CONTROL Call C_BPSORI(zc) From W1PFI1
Return

Subprog D_BPSORI(VALEUR)
Variable Integer VALEUR
If varinit([M]BPSORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPSORI(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_BPSORI(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BPSORI" : GZNUM = 169 : Endif
Gosub _AFF
End

$ON_DACLIN
Onevent BEFORE_INPUT Call AS_DACLIN(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_DACLIN From W1PFI1
Onevent INIT_AREA Call D_DACLIN(zc) From W1PFI1
Return

Subprog D_DACLIN(VALEUR)
Variable Integer VALEUR
If varinit([M]DACLIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACLIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACLIN(VALEUR) From SUBPFI
If mkstat=2
 [M]DACLIN(INDIC) = VALEUR
 Affzo DACLIN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_DACLIN
Call AM_DACLIN(zc)
If !mkstat & GOBJET
 zoncou = "DACLIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DACLIN(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DACLIN(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "DACLIN" : GZNUM = 3314 : Endif
Gosub _AFF
End

$ON_DACORD
Onevent BEFORE_INPUT Call AS_DACORD(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_DACORD From W1PFI1
Onevent INIT_AREA Call D_DACORD(zc) From W1PFI1
Return

Subprog D_DACORD(VALEUR)
Variable Integer VALEUR
If varinit([M]DACORD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACORD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACORD(VALEUR) From SUBPFI
If mkstat=2
 [M]DACORD(INDIC) = VALEUR
 Affzo DACORD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_DACORD
Call AM_DACORD(zc)
If !mkstat & GOBJET
 zoncou = "DACORD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DACORD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DACORD(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "DACORD" : GZNUM = 8683 : Endif
Gosub _AFF
End

$ON_TRFINV
Onevent BEFORE_INPUT Call AS_TRFINV(zc) From W1PFI1
Onevent INIT_AREA Call D_TRFINV(zc) From W1PFI1
Onevent CONTROL Call C_TRFINV(zc) From W1PFI1
Return

Subprog D_TRFINV(VALEUR)
Variable Integer VALEUR
If varinit([M]TRFINV,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRFINV(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(567) From COMBOS
## Action STD
Call AS_TRFINV(VALEUR) From SUBPFI
If mkstat=2
 [M]TRFINV(INDIC) = VALEUR
 Affzo TRFINV(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,567,1))))
Endif
If !mkstat
 Discombo 0 From TRFINV(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From TRFINV(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_TRFINV(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_DSPLIN
Onevent BEFORE_INPUT Call AS_DSPLIN(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_DSPLIN From W1PFI1
Onevent INIT_AREA Call D_DSPLIN(zc) From W1PFI1
Return

Subprog D_DSPLIN(VALEUR)
Variable Integer VALEUR
If varinit([M]DSPLIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DSPLIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DSPLIN(VALEUR) From SUBPFI
If mkstat=2
 [M]DSPLIN(INDIC) = VALEUR
 Affzo DSPLIN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_DSPLIN
Call AM_DSPLIN(zc)
If !mkstat & GOBJET
 zoncou = "DSPLIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DSPLIN(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DSPLIN(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "DSPLIN" : GZNUM = 4043 : Endif
Gosub _AFF
End

$ON_CLCDEB
Onevent INIT_AREA Call D_CLCDEB(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_CLCDEB(zc) From W1PFI1
Return

Subprog D_CLCDEB(VALEUR)
Variable Integer VALEUR
If varinit([M]CLCDEB,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CLCDEB(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NPRVLT
Onevent BEFORE_INPUT Call AS_NPRVLT(zc) From W1PFI1
Onevent INIT_AREA Call D_NPRVLT(zc) From W1PFI1
Return

Subprog D_NPRVLT(VALEUR)
Variable Integer VALEUR
If varinit([M]NPRVLT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_NPRVLT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NPRVLT(VALEUR) From SUBPFI
If mkstat=2
 [M]NPRVLT(INDIC) = VALEUR
 Affzo NPRVLT(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CLCBAS
Onevent BEFORE_INPUT Call AS_CLCBAS(zc) From W1PFI1
Onevent CONTROL Call C_CLCBAS(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_CLCBAS From W1PFI1
Onevent INIT_AREA Call D_CLCBAS(zc) From W1PFI1
Return

Subprog D_CLCBAS(VALEUR)
Variable Integer VALEUR
If varinit([M]CLCBAS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CLCBAS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(537) From COMBOS
## Action STD
Call AS_CLCBAS(VALEUR) From SUBPFI
If mkstat=2
 [M]CLCBAS(INDIC) = VALEUR
 Affzo CLCBAS(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,537,1))))
Endif
Gosub _AFF
End

Subprog C_CLCBAS(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_CLCBAS(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "CLCBAS" : GZNUM = 3757 : Endif
Gosub _AFF
End

$AMM_CLCBAS
Call AM_CLCBAS(zc)
If !mkstat & GOBJET
 zoncou = "CLCBAS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CLCBAS(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CLCBAS(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "CLCBAS" : GZNUM = 3757 : Endif
Gosub _AFF
End

$ON_VATRUL
Onevent BEFORE_INPUT Call AS_VATRUL(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_VATRUL From W1PFI1
Onevent INIT_AREA Call D_VATRUL(zc) From W1PFI1
Return

Subprog D_VATRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]VATRUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VATRUL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_VATRUL(VALEUR) From SUBPFI
If mkstat=2
 [M]VATRUL(INDIC) = VALEUR
 Affzo VATRUL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_VATRUL
Call AM_VATRUL(zc)
If !mkstat & GOBJET
 zoncou = "VATRUL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VATRUL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_VATRUL(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "VATRUL" : GZNUM = 3760 : Endif
Gosub _AFF
End

$ON_VACITM
Onevent CONTROL Call C_VACITM(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_VACITM(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_VACITM From W1PFI1
Return

Subprog IB_VACITM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBTUNLEG
 Call IBTUNLEG("") From TRTVENCTL
Endif
Gosub _AFF
End

Subprog AS_VACITM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(43290,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_VACITM(VALEUR)
## Action STD
Call AS_VACITM(VALEUR) From SUBPFI
If mkstat=2
 [M]VACITM(INDIC) = VALEUR
 Affzo VACITM(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_VACITM(zc) From W1PFI1
Onkey   2 Titled GBOUTS Call S_VACITM(zc) From W1PFI1
Onkey 144 Titled GBOUTP Call P_VACITM(zc) From W1PFI1
Onkey 146 Titled GBOUTA Call SA_VACITM(zc) From W1PFI1
Gosub _AFF
End

Subprog C_VACITM(VALEUR)
Variable Char    VALEUR()
## Action CONTTVI
Call CONTTVI(VALEUR,"","","","","","") From SUBTVI
If mkstat : GERR = 1 : GZONE = "VACITM" : GZNUM = 5938 : Endif
If !mkstat
 ## Action CONTOBJN
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONTOBJN"
 Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "VACITM" : GZNUM = 5938 : Endif
 If !mkstat
  ## Action STD
  Call C_VACITM(VALEUR) From SUBPFI
  If mkstat : GERR = 1 : GZONE = "VACITM" : GZNUM = 5938 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_VACITM
Call AM_VACITM(zc)
If !mkstat & GOBJET
 zoncou = "VACITM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VACITM(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZVACITM)")>indice
 [M]VACITM(indice) = VALEUR
 Affzo ZVACITM(indice)
Endif
Gosub _AFF
End

Subprog S_VACITM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELTVILEG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELTVILEG"
 PARMSK(1) = ""
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELTVI","SUBTVI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_VACITM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNTVI
 Call TUNTVI(VALEUR,"") From SUBTVI
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_VACITM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TVI"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_VACITM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TVI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZVACITM
Onevent BEFORE_AREA Gosub AV_ZVACITM From W1PFI1
Return

$AV_ZVACITM
Call LECTEXTRA(zc,"TABVACITM","SHOAXX",num$([M]VACITM(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ACCCOD
Onevent CONTROL Call C_ACCCOD(zc) From W1PFI1
Onevent INIT_AREA Call D_ACCCOD(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_ACCCOD(zc) From W1PFI1
Onevent AFTER_CHANGE Gosub AMM_ACCCOD From W1PFI1
Return

Subprog D_ACCCOD(VALEUR)
Variable Char    VALEUR()
If varinit([M]ACCCOD,indice)=0
 ## Action INITACCCOD
 Call INITACCCOD(VALEUR,16) From TRTX3
Endif
Gosub _AFF
End

Subprog AS_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3946,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_ACCCOD(zc) From W1PFI1
Onkey   2 Titled GBOUTS Call S_ACCCOD(zc) From W1PFI1
Onkey 144 Titled GBOUTP Call P_ACCCOD(zc) From W1PFI1
Onkey 146 Titled GBOUTA Call SA_ACCCOD(zc) From W1PFI1
Gosub _AFF
End

Subprog C_ACCCOD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
If !mkstat
 ## Action CONTCAC
 Call CONTCAC(VALEUR,"16") From SUBCAC
 If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CAC","",VALEUR,"16",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
  If !mkstat
   ## Action CONTACCCOD
   Call CONTACCCOD(VALEUR,16) From TRTX3
   If mkstat : GERR = 1 : GZONE = "ACCCOD" : GZNUM = 1687 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_ACCCOD
Call AM_ACCCOD(zc)
If !mkstat & GOBJET
 zoncou = "ACCCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZACCCOD)")>indice
 [M]ACCCOD(indice) = VALEUR
 Affzo ZACCCOD(indice)
Endif
Gosub _AFF
End

Subprog S_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELCAC
 Call SELCAC(VALEUR,"16") From SUBCAC
Endif
Gosub _AFF
End

Subprog B1_ACCCOD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNCAC
 Call TUNCAC(VALEUR,"16") From SUBCAC
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CAC"
PARMSK(2) = "16"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_ACCCOD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "16"
Call VISU("CAC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZACCCOD
Onevent BEFORE_AREA Gosub AV_ZACCCOD From W1PFI1
Return

$AV_ZACCCOD
Call LECTEXTRA(zc,"GACCCODE","SHOTRA","16",num$([M]ACCCOD(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_DSP
Onevent AFTER_CHANGE Gosub AMM_DSP From W1PFI1
Onevent CONTROL Call C_DSP(zc) From W1PFI1
Onevent BEFORE_INPUT Call AS_DSP(zc) From W1PFI1
Return

Subprog AS_DSP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4805,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DSP(zc) From W1PFI1
Onkey   2 Titled GBOUTS Call S_DSP(zc) From W1PFI1
Onkey 144 Titled GBOUTP Call P_DSP(zc) From W1PFI1
Onkey 146 Titled GBOUTA Call SA_DSP(zc) From W1PFI1
Gosub _AFF
End

Subprog C_DSP(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("DSP","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "DSP" : GZNUM = 3022 : Endif
Gosub _AFF
End

$AMM_DSP
Call AM_DSP(zc)
If !mkstat & GOBJET
 zoncou = "DSP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DSP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_DSP(VALEUR) From SUBPFI
If mkstat : GERR = 1 : GZONE = "DSP" : GZNUM = 3022 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZDSP)")>indice
 [M]DSP(indice) = VALEUR
 Affzo ZDSP(indice)
Endif
Gosub _AFF
End

Subprog S_DSP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "DSP"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_DSP(VALEUR)
Variable Char    VALEUR()
Call OBJET("DSP",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_DSP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "DSP"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_DSP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("DSP",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZDSP
Onevent BEFORE_AREA Gosub AV_ZDSP From W1PFI1
Return

$AV_ZDSP
Call LECTEXTRA(zc,"CADSP","SHOTRA",num$([M]DSP(indice)),"") From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2PFI1
Return

$TIT_COL
Gosub TIT_COL From W2PFI1
Return


