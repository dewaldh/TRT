#<AdxTL>@(#)0.0.0.0 $Revision$Class Lease contracts
# Supervisor
## CRUD-CLASSE ## SLEASE
# 2018-08-27 12:47:07 929


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(SLEASE,ASTATUS)
Variable Instance SLEASE Using C_SLEASE
Variable Integer ASTATUS

If SLEASE = null : End : Endif

Gosub _AVARIABLES From WMC00SLEASE

[L]A_STRSITE = SLEASE.FCY
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_SLEASE

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(SLEASE,ASTATUS)
Variable Instance SLEASE Using C_SLEASE
Variable Integer ASTATUS

If SLEASE = null : End : Endif

Gosub AVARIABLES From WMC00SLEASE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = SLEASE.FCY
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_SLEASE
Else
 Gosub ADELETE_SLEASE
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(SLEASE,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If SLEASE.ASTALIN = [V]CST_ANEWDEL : Return : Endif
SLEASE.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(SLEASE.ANA)
 If SLEASE.ANA([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ANA([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(SLEASE.LEABILBOOK) : # LEABILBOOK -- 2
 If SLEASE.LEABILBOOK(A_N2) <> null
& and SLEASE.LEABILBOOK(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(SLEASE.ASSETS) : # FXDASSETS -- 3
 If SLEASE.ASSETS(A_N2) <> null
& and SLEASE.ASSETS(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
For A_N2=1 To maxtab(SLEASE.LEABILBOOK) : # LEABILBOOK -- 2
 If SLEASE.LEABILBOOK(A_N2) <> null
& and SLEASE.LEABILBOOK(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(SLEASE.ASSETS) : # FXDASSETS -- 3
 If SLEASE.ASSETS(A_N2) <> null
& and SLEASE.ASSETS(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(SLEASE.ANA)
 If SLEASE.ANA([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ANA([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_SLEASE
Trbegin [F:LEA]
 Gosub ADELETE_SLEASE
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_SLEASE
[L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
For A_N2=1 To maxtab(SLEASE.LEABILBOOK)
 If SLEASE.LEABILBOOK(A_N2) <> null
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(SLEASE.ASSETS)
 If SLEASE.ASSETS(A_N2) <> null
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(SLEASE,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ACTION("ADELETE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SLEASE.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If SLEASE.snapshotEnabled=1
 [L]A_RETIK = SLEASE.revertUpdTick
Endif
[L]ASTATUS = max(fmet SLEASE.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



