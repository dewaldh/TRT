#<AdxTL>@(#)0.0.0.0 $Revision$Class Data types
# Supervisor
## CRUD-CLASSE ## ATYPE
# 2018-08-27 12:23:40 352

Gosub TEST From WMCR_ATYPE : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,CODTYP)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# ATYPE : ATYPE
# ATYPERUL : ATYPE ATYPERUL
# ATYPERPAR : ATYPERUL ATYPERPAR
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet ATYPE._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = ATYPE.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(ATYPE.ACTX.AFOLDER,nomap,"")>0
 Local File ATYPE [ATY]
 Local File ATYPERUL [ATYR]
 Local File ATYPERPAR [ATYRP]
 Local File ATEXTE [ATX]
Else
 Local File =ATYPE.ACTX.AFOLDER+".ATYPE" [ATY]
 Local File =ATYPE.ACTX.AFOLDER+".ATYPERUL" [ATYR]
 Local File =ATYPE.ACTX.AFOLDER+".ATYPERPAR" [ATYRP]
 Local File =ATYPE.ACTX.AFOLDER+".ATEXTE" [ATX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet ATYPE.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [ATY] With
& [ATYR]ATYR0 = [F:ATY]CODTYP,
& [ATYRP]ATYRP0 = [F:ATYR]CODTYP;[F:ATYR]TYPRUL;[F:ATYR]TRTRUL;[F:ATYR]PRGRUL
& As [LNK_]
Return

############################################################################################
### ATYPE(WATY)
############################################################################################
Funprog  _MAJSQL_ATYPE(WATY)
Variable Instance WATY Using C_ATYPE
Local Integer ASTATUS,A_I,A_J
Default File [F:ATY]
If WATY.ASTALIN=[V]CST_ANEW
 Call INICRE(WATY) From ASYRSUB
 SetInstance [F:ATY] With WATY
 Call NUMBER(fmet WATY.AGETTEXT("INTITTYP"),[F:ATY]INTITTYP,WATY) From ASYRDIV
 For [L]A_J=1 to 30
  For [L]A_I=1 To maxtab(WATY.ACOLACT)
   If WATY.ACOLACT([L]A_I)<>null & !find(WATY.ACOLACT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WATY.ACOLACT([L]A_I).AORDER=[L]A_J
    [F:ATY]ACTTYP([L]A_J-1) = WATY.ACOLACT([L]A_I).ACTTYP
    [F:ATY]EXEACT([L]A_J-1) = WATY.ACOLACT([L]A_I).EXEACT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ATY]
 If fstat
  Call FSTA("ATY",WATY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATY.updTick = [F:ATY]updTick
Elsif WATY.ASTALIN=[V]CST_ALL or WATY.ASTALIN=[V]CST_AUPD
 Call INIUPD(WATY) From ASYRSUB
 SetInstance [F:ATY] With WATY
 Call NUMBER(fmet WATY.AGETTEXT("INTITTYP"),[F:ATY]INTITTYP,WATY) From ASYRDIV
 For [L]A_J=1 to 30
  For [L]A_I=1 To maxtab(WATY.ACOLACT)
   If WATY.ACOLACT([L]A_I)<>null & !find(WATY.ACOLACT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WATY.ACOLACT([L]A_I).AORDER=[L]A_J
    [F:ATY]ACTTYP([L]A_J-1) = WATY.ACOLACT([L]A_I).ACTTYP
    [F:ATY]EXEACT([L]A_J-1) = WATY.ACOLACT([L]A_I).EXEACT
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATY,"ATYPE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ATY]CODTYP = [F:ATY]CODTYP
 If fstat
  Call FSTA("ATY",WATY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATY.updTick = [F:ATY]updTick
Elsif WATY.ASTALIN=[V]CST_ADEL
 SetInstance [F:ATY] With WATY
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATY,"ATYPE")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ATY]CODTYP = [F:ATY]CODTYP
 If fstat
  Call FSTA("ATY",WATY,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### ATYPERUL(WATYR)
############################################################################################
Funprog  _MAJSQL_ATYPERUL(WATYR)
Variable Instance WATYR Using C_ATYPERUL
Local Integer ASTATUS,A_I,A_J
Default File [F:ATYR]
If WATYR.ASTALIN=[V]CST_ANEW
 Call INICRE(WATYR) From ASYRSUB
 SetInstance [F:ATYR] With WATYR
 Write [F:ATYR]
 If fstat
  Call FSTA("ATYR",WATYR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATYR.updTick = [F:ATYR]updTick
Elsif WATYR.ASTALIN=[V]CST_ALL or WATYR.ASTALIN=[V]CST_AUPD
 Call INIUPD(WATYR) From ASYRSUB
 SetInstance [F:ATYR] With WATYR
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATYR,"ATYPERUL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ATYR]ATYR0 = [F:ATYR]CODTYP;[F:ATYR]TYPRUL;[F:ATYR]TRTRUL;[F:ATYR]PRGRUL
 If fstat
  Call FSTA("ATYR",WATYR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATYR.updTick = [F:ATYR]updTick
Elsif WATYR.ASTALIN=[V]CST_ADEL
 SetInstance [F:ATYR] With WATYR
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATYR,"ATYPERUL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ATYR]ATYR0 = [F:ATYR]CODTYP;[F:ATYR]TYPRUL;[F:ATYR]TRTRUL;[F:ATYR]PRGRUL
 If fstat
  Call FSTA("ATYR",WATYR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### ATYPERPAR(WATYRP)
############################################################################################
Funprog  _MAJSQL_ATYPERPAR(WATYRP)
Variable Instance WATYRP Using C_ATYPERPAR
Local Integer ASTATUS,A_I,A_J
Default File [F:ATYRP]
If WATYRP.ASTALIN=[V]CST_ANEW
 Call INICRE(WATYRP) From ASYRSUB
 SetInstance [F:ATYRP] With WATYRP
 Call NUMBER(fmet WATYRP.AGETTEXT("PARTIT"),[F:ATYRP]PARTIT,WATYRP) From ASYRDIV
 Write [F:ATYRP]
 If fstat
  Call FSTA("ATYRP",WATYRP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATYRP.updTick = [F:ATYRP]updTick
Elsif WATYRP.ASTALIN=[V]CST_ALL or WATYRP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WATYRP) From ASYRSUB
 SetInstance [F:ATYRP] With WATYRP
 Call NUMBER(fmet WATYRP.AGETTEXT("PARTIT"),[F:ATYRP]PARTIT,WATYRP) From ASYRDIV
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATYRP,"ATYPERPAR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ATYRP]ATYRP0 = [F:ATYRP]CODTYP;[F:ATYRP]TYPRUL;[F:ATYRP]TRTRUL;[F:ATYRP]PRGRUL;[F:ATYRP]PARCOD
 If fstat
  Call FSTA("ATYRP",WATYRP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WATYRP.updTick = [F:ATYRP]updTick
Elsif WATYRP.ASTALIN=[V]CST_ADEL
 SetInstance [F:ATYRP] With WATYRP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WATYRP,"ATYPERPAR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ATYRP]ATYRP0 = [F:ATYRP]CODTYP;[F:ATYRP]TYPRUL;[F:ATYRP]TRTRUL;[F:ATYRP]PRGRUL;[F:ATYRP]PARCOD
 If fstat
  Call FSTA("ATYRP",WATYRP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



