#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management ROT2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "12:59:25"
A_USER  = "ADMIN"
A_STAMP = "20180326125925"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ROT2 [ROT2]
Gosub HORODAT
Local Inpbox "ROT2" From GFONCTION At A_STAMP With A_WINDPREV Mask [ROT2] As [SIM_]
Grizo [ROT2]5
Grizo [ROT2]10
Grizo [ROT2]15
Grizo [ROT2]20
Grizo [ROT2]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ROT2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=80 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=48 : Y1(1)=4 : Y2(1)=24
X1(2)=49 : X2(2)=80 : Y1(2)=4 : Y2(2)=7
X1(3)=49 : X2(3)=80 : Y1(3)=8 : Y2(3)=12
X1(4)=49 : X2(4)=80 : Y1(4)=13 : Y2(4)=24
Return

$ON_WCR
Return

$ON_WSTTYP
Onevent INIT_AREA Call D_WSTTYP(zc) From W1ROT2
Return

Subprog D_WSTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]WSTTYP,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

$ON_WST
Onevent BEFORE_INPUT Call AS_WST(zc) From W1ROT2
Onevent CONTROL Call C_WST(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_WST From W1ROT2
Return

Subprog AS_WST(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(5972,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_WST(VALEUR) From SUBROT
If mkstat=2
 [M]WST(INDIC) = VALEUR
 Affzo WST(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_WST(zc) From W1ROT2
Onkey   2 Titled GBOUTS Call S_WST(zc) From W1ROT2
Gosub _AFF
End

Subprog C_WST(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "WST" : GZNUM = 0 : Endif
If !mkstat
 ## Action STD
 Call C_WST(VALEUR) From SUBROT
 If mkstat : GERR = 1 : GZONE = "WST" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_WST
Call AM_WST(zc)
If !mkstat & GOBJET
 zoncou = "WST" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WST(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_WST(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "WST" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_WST(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SWST
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SWST"
 PARMSK(1) = [M:ROT0]FCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SWST","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_WST(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_WST" : PROGSUB = "SUBROT" : PROGSPE = "SPEROT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:ROT0]FCY
 Call OBJET_CHAR(OBJCLE,"MWS",VALEUR) From GOBJET
 ACTION = "BB1_WST" : PROGSUB = "SUBROT" : PROGSPE = "SPEROT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_WSTNBR
Onevent AFTER_CHANGE Gosub AMM_WSTNBR From W1ROT2
Onevent INIT_AREA Call D_WSTNBR(zc) From W1ROT2
Onevent CONTROL Call C_WSTNBR(zc) From W1ROT2
Return

Subprog D_WSTNBR(VALEUR)
Variable Decimal VALEUR
If varinit([M]WSTNBR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_WSTNBR(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "WSTNBR" : GZNUM = 1120 : Endif
Gosub _AFF
End

$AMM_WSTNBR
Call AM_WSTNBR(zc)
If !mkstat & GOBJET
 zoncou = "WSTNBR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WSTNBR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WSTNBR(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "WSTNBR" : GZNUM = 1120 : Endif
Gosub _AFF
End

$ON_LABWCR
Return

$ON_LABWSTTYP
Onevent INIT_AREA Call D_LABWSTTYP(zc) From W1ROT2
Return

Subprog D_LABWSTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]LABWSTTYP,indice)=0
 VALEUR = 0
Endif
Gosub _AFF
End

$ON_LABWST
Onevent BEFORE_INPUT Call AS_LABWST(zc) From W1ROT2
Onevent CONTROL Call C_LABWST(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_LABWST From W1ROT2
Return

Subprog AS_LABWST(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(5972,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
If !([M:ROT1]SCOCOD <> 2)
 Affzo LABWST : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_LABWST(VALEUR) From SUBROT
 If mkstat=2
  [M]LABWST(INDIC) = VALEUR
  Affzo LABWST(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_LABWST(zc) From W1ROT2
 Onkey   2 Titled GBOUTS Call S_LABWST(zc) From W1ROT2
Endif
Gosub _AFF
End

Subprog C_LABWST(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_LABWST(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "LABWST" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_LABWST
Call AM_LABWST(zc)
If !mkstat & GOBJET
 zoncou = "LABWST" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LABWST(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LABWST(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "LABWST" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_LABWST(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SWST
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SWST"
 PARMSK(1) = [M:ROT0]FCY
 PARMSK(2) = ""
 PARMSK(3) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SWST","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LABWST(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC0A
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC0A"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_LABWST" : PROGSUB = "SUBROT" : PROGSPE = "SPEROT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Local Char    OBJCLE(30)
 OBJCLE = [M:ROT0]FCY
 Call OBJET_CHAR(OBJCLE,"MWS",VALEUR) From GOBJET
 ACTION = "BB1_LABWST" : PROGSUB = "SUBROT" : PROGSPE = "SPEROT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LABNBR
Onevent AFTER_CHANGE Gosub AMM_LABNBR From W1ROT2
Onevent CONTROL Call C_LABNBR(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_LABNBR(zc) From W1ROT2
Return

Subprog AS_LABNBR(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]LABWST <> "")
 Affzo LABNBR : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

Subprog C_LABNBR(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$AMM_LABNBR
Call AM_LABNBR(zc)
If !mkstat & GOBJET
 zoncou = "LABNBR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LABNBR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_LABNBR(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "LABNBR" : GZNUM = 1120 : Endif
Gosub _AFF
End

$ON_TIMUOMCOD
Onevent AFTER_CHANGE Gosub AMM_TIMUOMCOD From W1ROT2
Onevent INIT_AREA Call D_TIMUOMCOD(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_TIMUOMCOD(zc) From W1ROT2
Return

Subprog D_TIMUOMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TIMUOMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TIMUOMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_TIMUOMCOD
Call AM_TIMUOMCOD(zc)
If !mkstat & GOBJET
 zoncou = "TIMUOMCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TIMUOMCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TIMUOMCOD(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "TIMUOMCOD" : GZNUM = 2915 : Endif
Gosub _AFF
End

$ON_ROOTIMCOD
Onevent AFTER_CHANGE Gosub AMM_ROOTIMCOD From W1ROT2
Onevent INIT_AREA Call D_ROOTIMCOD(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_ROOTIMCOD(zc) From W1ROT2
Return

Subprog D_ROOTIMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ROOTIMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ROOTIMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_ROOTIMCOD
Call AM_ROOTIMCOD(zc)
If !mkstat & GOBJET
 zoncou = "ROOTIMCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ROOTIMCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_ROOTIMCOD(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "ROOTIMCOD" : GZNUM = 10884 : Endif
Gosub _AFF
End

$ON_SETTIM
Onevent BEFORE_INPUT Call AS_SETTIM(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_SETTIM From W1ROT2
Return

Subprog AS_SETTIM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SETTIM(VALEUR) From SUBROT
If mkstat=2
 [M]SETTIM(INDIC) = VALEUR
 Affzo SETTIM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_SETTIM
Call AM_SETTIM(zc)
If !mkstat & GOBJET
 zoncou = "SETTIM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SETTIM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_SETTIM(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "SETTIM" : GZNUM = 2400 : Endif
Gosub _AFF
End

$ON_TIMCOD
Onevent AFTER_CHANGE Gosub AMM_TIMCOD From W1ROT2
Onevent INIT_AREA Call D_TIMCOD(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_TIMCOD(zc) From W1ROT2
Return

Subprog D_TIMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TIMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TIMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]ROOTIMCOD=1)
 Affzo TIMCOD : mkstat = 2
Endif
If !mkstat
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$AMM_TIMCOD
Call AM_TIMCOD(zc)
If !mkstat & GOBJET
 zoncou = "TIMCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TIMCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TIMCOD(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "TIMCOD" : GZNUM = 1545 : Endif
Gosub _AFF
End

$ON_BASQTY
Onevent BEFORE_AREA Gosub AV_BASQTY From W1ROT2
Onevent CONTROL Call C_BASQTY(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_BASQTY(zc) From W1ROT2
Return

$AV_BASQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]OPEUOM,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]BASQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_BASQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]TIMCOD=4)
 Affzo BASQTY : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

Subprog C_BASQTY(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BASQTY" : GZNUM = 1543 : Endif
If !mkstat
 ## Action STD
 Call C_BASQTY(VALEUR) From SUBROT
 If mkstat : GERR = 1 : GZONE = "BASQTY" : GZNUM = 1543 : Endif
Endif
Gosub _AFF
End

$ON_OPETIM
Onevent BEFORE_INPUT Call AS_OPETIM(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_OPETIM From W1ROT2
Return

Subprog AS_OPETIM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]ROOTIMCOD <> 2)
 Affzo OPETIM : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_OPETIM(VALEUR) From SUBROT
 If mkstat=2
  [M]OPETIM(INDIC) = VALEUR
  Affzo OPETIM(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

$AMM_OPETIM
Call AM_OPETIM(zc)
If !mkstat & GOBJET
 zoncou = "OPETIM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_OPETIM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_OPETIM(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "OPETIM" : GZNUM = 2905 : Endif
Gosub _AFF
End

$ON_CAD
Onevent BEFORE_INPUT Call AS_CAD(zc) From W1ROT2
Onevent AFTER_AREA Call AP_CAD(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_CAD From W1ROT2
Return

Subprog AS_CAD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]ROOTIMCOD = 2)
 Affzo CAD : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CAD(VALEUR) From SUBROT
 If mkstat=2
  [M]CAD(INDIC) = VALEUR
  Affzo CAD(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog AP_CAD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_CAD(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "CAD" : GZNUM = 6031 : Endif
Gosub _AFF
End

$AMM_CAD
Call AM_CAD(zc)
If !mkstat & GOBJET
 zoncou = "CAD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CAD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_CAD(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "CAD" : GZNUM = 6031 : Endif
Gosub _AFF
End

$ON_EFF
Onevent INIT_AREA Call D_EFF(zc) From W1ROT2
Onevent CONTROL Call C_EFF(zc) From W1ROT2
Return

Subprog D_EFF(VALEUR)
Variable Decimal VALEUR
If varinit([M]EFF,indice)=0
 VALEUR = 100
Endif
Gosub _AFF
End

Subprog C_EFF(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_SHR
Onevent CONTROL Call C_SHR(zc) From W1ROT2
Return

Subprog C_SHR(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_SHR(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "SHR" : GZNUM = 17671 : Endif
Gosub _AFF
End

$ON_SETLABCOE
Onevent INIT_AREA Call D_SETLABCOE(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_SETLABCOE(zc) From W1ROT2
Return

Subprog D_SETLABCOE(VALEUR)
Variable Decimal VALEUR
If varinit([M]SETLABCOE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SETLABCOE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]LABWST <> "")
 Affzo SETLABCOE : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

$ON_OPELABCOE
Onevent INIT_AREA Call D_OPELABCOE(zc) From W1ROT2
Onevent BEFORE_INPUT Call AS_OPELABCOE(zc) From W1ROT2
Return

Subprog D_OPELABCOE(VALEUR)
Variable Decimal VALEUR
If varinit([M]OPELABCOE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OPELABCOE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M:ROT2]LABWST <> "")
 Affzo OPELABCOE : mkstat = 2
Endif
If !mkstat
Endif
Gosub _AFF
End

$ON_PRPTIM
Onevent BEFORE_INPUT Call AS_PRPTIM(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_PRPTIM From W1ROT2
Return

Subprog AS_PRPTIM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PRPTIM(VALEUR) From SUBROT
If mkstat=2
 [M]PRPTIM(INDIC) = VALEUR
 Affzo PRPTIM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_PRPTIM
Call AM_PRPTIM(zc)
If !mkstat & GOBJET
 zoncou = "PRPTIM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PRPTIM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PRPTIM(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "PRPTIM" : GZNUM = 10574 : Endif
Gosub _AFF
End

$ON_WAITIM
Onevent BEFORE_INPUT Call AS_WAITIM(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_WAITIM From W1ROT2
Return

Subprog AS_WAITIM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_WAITIM(VALEUR) From SUBROT
If mkstat=2
 [M]WAITIM(INDIC) = VALEUR
 Affzo WAITIM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_WAITIM
Call AM_WAITIM(zc)
If !mkstat & GOBJET
 zoncou = "WAITIM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_WAITIM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_WAITIM(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "WAITIM" : GZNUM = 10575 : Endif
Gosub _AFF
End

$ON_PSPTIM
Onevent BEFORE_INPUT Call AS_PSPTIM(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_PSPTIM From W1ROT2
Return

Subprog AS_PSPTIM(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PSPTIM(VALEUR) From SUBROT
If mkstat=2
 [M]PSPTIM(INDIC) = VALEUR
 Affzo PSPTIM(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$AMM_PSPTIM
Call AM_PSPTIM(zc)
If !mkstat & GOBJET
 zoncou = "PSPTIM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PSPTIM(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_PSPTIM(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "PSPTIM" : GZNUM = 10576 : Endif
Gosub _AFF
End

$ON_OPEUOM
Onevent CONTROL Call C_OPEUOM(zc) From W1ROT2
Onevent AFTER_CHANGE Gosub AMM_OPEUOM From W1ROT2
Onevent BEFORE_INPUT Call AS_OPEUOM(zc) From W1ROT2
Return

Subprog AS_OPEUOM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3612,GBOUT1) From OBJDIV
Call TEXTE(8255,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_OPEUOM(zc) From W1ROT2
Onkey   2 Titled GBOUTS Call S_OPEUOM(zc) From W1ROT2
Onkey 144 Titled GBOUTP Call P_OPEUOM(zc) From W1ROT2
Onkey 146 Titled GBOUTA Call SA_OPEUOM(zc) From W1ROT2
Gosub _AFF
End

Subprog C_OPEUOM(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TUN","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "OPEUOM" : GZNUM = 2348 : Endif
If !mkstat
 ## Action STD
 Call C_OPEUOM(VALEUR) From SUBROT
 If mkstat : GERR = 1 : GZONE = "OPEUOM" : GZNUM = 2348 : Endif
Endif
Gosub _AFF
End

$AMM_OPEUOM
Call AM_OPEUOM(zc)
If !mkstat & GOBJET
 zoncou = "OPEUOM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_OPEUOM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_OPEUOM(VALEUR) From SUBROT
If mkstat : GERR = 1 : GZONE = "OPEUOM" : GZNUM = 2348 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZOPEUOM)")>indice
 [M]OPEUOM(indice) = VALEUR
 Affzo ZOPEUOM(indice)
Endif
Gosub _AFF
End

Subprog S_OPEUOM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TUN"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_OPEUOM(VALEUR)
Variable Char    VALEUR()
Call OBJET("TUN",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_OPEUOM(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TUN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_OPEUOM(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TUN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZOPEUOM
Onevent BEFORE_AREA Gosub AV_ZOPEUOM From W1ROT2
Return

$AV_ZOPEUOM
Call LECTEXTRA(zc,"TABUNIT","DESSHO",num$([M]OPEUOM(indice)),"") From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Return


