#<AdxTL>@(#)0.0.0.0 $Revision$Class Work order - operations
# Sage X3 supervisor
## ACLA-CLASSE ## MFGOPE
# 2018-03-26 00:33:05 554

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 91 : FITCAPEND End finite capacity ( Field D)
####################################################################

$SET_FITCAPEND
If [L]_AOLDVAL<>this.FITCAPEND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FITCAPEND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FITCAPEND
 Gosub PROPAGATE_FITCAPEND
Endif
Return

$INIT_FITCAPEND
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "FITCAPEND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FITCAPEND
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "FITCAPEND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FITCAPEND             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FITCAPEND             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FITCAPEND
[L]CURPRO = "FITCAPEND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FITCAPEND=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FITCAPEND
[L]CURPRO = "FITCAPEND"
Return

$_AOTHERS_FITCAPEND
[L]CURPRO = "FITCAPEND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FITCAPEND
[L]CURPRO = "FITCAPEND"
Return

$PROPAGATE_FITCAPEND
this.isReadonly = 0
[L]CURPRO = "FITCAPEND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FITCAPEND
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "FITCAPEND"
$_LNKPRO_FITCAPEND
Return


####################################################################
# 92 : OPENUMLEV Operation suffix ( Field C 1)
####################################################################

$SET_OPENUMLEV
If [L]_AOLDVAL<>this.OPENUMLEV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OPENUMLEV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OPENUMLEV
 Gosub PROPAGATE_OPENUMLEV
Endif
Return

$INIT_OPENUMLEV
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "OPENUMLEV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OPENUMLEV
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "OPENUMLEV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OPENUMLEV             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OPENUMLEV             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OPENUMLEV
[L]CURPRO = "OPENUMLEV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.OPENUMLEV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OPENUMLEV
[L]CURPRO = "OPENUMLEV"
Return

$_AOTHERS_OPENUMLEV
[L]CURPRO = "OPENUMLEV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OPENUMLEV
[L]CURPRO = "OPENUMLEV"
Return

$PROPAGATE_OPENUMLEV
this.isReadonly = 0
[L]CURPRO = "OPENUMLEV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OPENUMLEV
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "OPENUMLEV"
$_LNKPRO_OPENUMLEV
Return


####################################################################
# 93 : ALTOPECOD Routing code ope. ( Field Local menu number 1)
####################################################################

$SET_ALTOPECOD
If [L]_AOLDVAL<>this.ALTOPECOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALTOPECOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALTOPECOD
 Gosub PROPAGATE_ALTOPECOD
Endif
Return

$INIT_ALTOPECOD
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "ALTOPECOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALTOPECOD=0 and fmet this.AGETATTRIBUTE("ALTOPECOD","$isMandatory")="true"
 this.ALTOPECOD = 1
Endif
Return
 
$CONTROL_ALTOPECOD
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "ALTOPECOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALTOPECOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALTOPECOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALTOPECOD
[L]CURPRO = "ALTOPECOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALTOPECOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALTOPECOD
[L]CURPRO = "ALTOPECOD"
If this.ALTOPECOD<0 or this.ALTOPECOD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ALTOPECOD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ALTOPECOD
[L]CURPRO = "ALTOPECOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALTOPECOD
[L]CURPRO = "ALTOPECOD"
Return

$PROPAGATE_ALTOPECOD
this.isReadonly = 0
[L]CURPRO = "ALTOPECOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALTOPECOD
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "ALTOPECOD"
$_LNKPRO_ALTOPECOD
Return


####################################################################
# 94 : RSTMAC Machine restriction ( Field A 5)
####################################################################

$SET_RSTMAC
If [L]_AOLDVAL<>this.RSTMAC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RSTMAC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RSTMAC
 Gosub PROPAGATE_RSTMAC
Endif
Return

$INIT_RSTMAC
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "RSTMAC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RSTMAC
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "RSTMAC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RSTMAC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RSTMAC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RSTMAC
[L]CURPRO = "RSTMAC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.RSTMAC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RSTMAC
[L]CURPRO = "RSTMAC"
Return

$_AOTHERS_RSTMAC
[L]CURPRO = "RSTMAC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RSTMAC
[L]CURPRO = "RSTMAC"
Return

$PROPAGATE_RSTMAC
this.isReadonly = 0
[L]CURPRO = "RSTMAC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RSTMAC
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "RSTMAC"
$_LNKPRO_RSTMAC
Return


####################################################################
# 95 : SCHGRP Grouping criterion ( Field A 15)
####################################################################

$SET_SCHGRP
If [L]_AOLDVAL<>this.SCHGRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCHGRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCHGRP
 Gosub PROPAGATE_SCHGRP
Endif
Return

$INIT_SCHGRP
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "SCHGRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SCHGRP
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "SCHGRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCHGRP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCHGRP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCHGRP
[L]CURPRO = "SCHGRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SCHGRP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCHGRP
[L]CURPRO = "SCHGRP"
Return

$_AOTHERS_SCHGRP
[L]CURPRO = "SCHGRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCHGRP
[L]CURPRO = "SCHGRP"
Return

$PROPAGATE_SCHGRP
this.isReadonly = 0
[L]CURPRO = "SCHGRP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCHGRP
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "SCHGRP"
$_LNKPRO_SCHGRP
Return


####################################################################
# 96 : SCHSBB Distinction criteria ( Field A 15)
####################################################################

$SET_SCHSBB
If [L]_AOLDVAL<>this.SCHSBB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCHSBB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCHSBB
 Gosub PROPAGATE_SCHSBB
Endif
Return

$INIT_SCHSBB
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "SCHSBB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SCHSBB
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "SCHSBB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCHSBB                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCHSBB                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCHSBB
[L]CURPRO = "SCHSBB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SCHSBB,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCHSBB
[L]CURPRO = "SCHSBB"
Return

$_AOTHERS_SCHSBB
[L]CURPRO = "SCHSBB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCHSBB
[L]CURPRO = "SCHSBB"
Return

$PROPAGATE_SCHSBB
this.isReadonly = 0
[L]CURPRO = "SCHSBB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCHSBB
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "SCHSBB"
$_LNKPRO_SCHSBB
Return


####################################################################
# 97 : GRPSETTIM Group setup time ( Field TIH 0)
####################################################################

$SET_GRPSETTIM
If [L]_AOLDVAL<>this.GRPSETTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GRPSETTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GRPSETTIM
 Gosub PROPAGATE_GRPSETTIM
Endif
Return

$INIT_GRPSETTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "GRPSETTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_GRPSETTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "GRPSETTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GRPSETTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GRPSETTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GRPSETTIM
[L]CURPRO = "GRPSETTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GRPSETTIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GRPSETTIM
[L]CURPRO = "GRPSETTIM"
Return

$_AOTHERS_GRPSETTIM
[L]CURPRO = "GRPSETTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GRPSETTIM
[L]CURPRO = "GRPSETTIM"
Return

$PROPAGATE_GRPSETTIM
this.isReadonly = 0
[L]CURPRO = "GRPSETTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GRPSETTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "GRPSETTIM"
$_LNKPRO_GRPSETTIM
Return


####################################################################
# 98 : MFGPIO Priority ( Field Local menu number 365)
####################################################################

$SET_MFGPIO
If [L]_AOLDVAL<>this.MFGPIO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFGPIO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFGPIO
 Gosub PROPAGATE_MFGPIO
Endif
Return

$INIT_MFGPIO
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFGPIO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFGPIO=0 and fmet this.AGETATTRIBUTE("MFGPIO","$isMandatory")="true"
 this.MFGPIO = 1
Endif
Return
 
$CONTROL_MFGPIO
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFGPIO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFGPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFGPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFGPIO
[L]CURPRO = "MFGPIO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFGPIO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFGPIO
[L]CURPRO = "MFGPIO"
If this.MFGPIO<0 or this.MFGPIO>len(mess(0,365,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"365 ->"-num$(this.MFGPIO)-mess(99,123,1)):  Return : # Local menu "365 -> Invalid option
Endif
Return

$_AOTHERS_MFGPIO
[L]CURPRO = "MFGPIO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFGPIO
[L]CURPRO = "MFGPIO"
Return

$PROPAGATE_MFGPIO
this.isReadonly = 0
[L]CURPRO = "MFGPIO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFGPIO
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFGPIO"
$_LNKPRO_MFGPIO
Return


####################################################################
# 99 : MFOTRKFLG Tracking flag ( Field Local menu number 339)
####################################################################

$SET_MFOTRKFLG
If [L]_AOLDVAL<>this.MFOTRKFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFOTRKFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFOTRKFLG
 Gosub PROPAGATE_MFOTRKFLG
Endif
Return

$INIT_MFOTRKFLG
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFOTRKFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFOTRKFLG=0 and fmet this.AGETATTRIBUTE("MFOTRKFLG","$isMandatory")="true"
 this.MFOTRKFLG = 1
Endif
Return
 
$CONTROL_MFOTRKFLG
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFOTRKFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFOTRKFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFOTRKFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFOTRKFLG
[L]CURPRO = "MFOTRKFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFOTRKFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFOTRKFLG
[L]CURPRO = "MFOTRKFLG"
If this.MFOTRKFLG<0 or this.MFOTRKFLG>len(mess(0,339,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"339 ->"-num$(this.MFOTRKFLG)-mess(99,123,1)):  Return : # Local menu "339 -> Invalid option
Endif
Return

$_AOTHERS_MFOTRKFLG
[L]CURPRO = "MFOTRKFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFOTRKFLG
[L]CURPRO = "MFOTRKFLG"
Return

$PROPAGATE_MFOTRKFLG
this.isReadonly = 0
[L]CURPRO = "MFOTRKFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFOTRKFLG
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFOTRKFLG"
$_LNKPRO_MFOTRKFLG
Return


####################################################################
# 100 : MFOTEX Text ( Field TXC 12)
####################################################################

$SET_MFOTEX
If [L]_AOLDVAL<>this.MFOTEX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFOTEX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFOTEX
 Gosub PROPAGATE_MFOTEX
Endif
Return

$INIT_MFOTEX
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFOTEX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_MFOTEX
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFOTEX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFOTEX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFOTEX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFOTEX
[L]CURPRO = "MFOTEX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.MFOTEX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFOTEX
[L]CURPRO = "MFOTEX"
If vireblc(this.MFOTEX,2)<>vireblc(format$("K:12X",this.MFOTEX),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_MFOTEX
[L]CURPRO = "MFOTEX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFOTEX
[L]CURPRO = "MFOTEX"
Return

$PROPAGATE_MFOTEX
this.isReadonly = 0
[L]CURPRO = "MFOTEX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFOTEX
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "MFOTEX"
$_LNKPRO_MFOTEX
Return


####################################################################
# 102 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 103 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 104 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 105 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 106 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0MFGOPE
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




