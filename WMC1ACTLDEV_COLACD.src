#<AdxTL>@(#)0.0.0.0 $Revision$Class Reserved brackets
# Supervisor
## ACLA-CLASSE ## ACTLDEV_COLACD
# 2018-08-27 12:19:28 229


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : TYP Bracket type ( Field Local menu number 7865)
####################################################################

$SET_TYP
If [L]_AOLDVAL<>this.TYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYP
 Gosub PROPAGATE_TYP
Endif
Return

$INIT_TYP
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "TYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYP=0 and fmet this.AGETATTRIBUTE("TYP","$isMandatory")="true"
 this.TYP = 1
Endif
Return
 
$CONTROL_TYP
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "TYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYP
[L]CURPRO = "TYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYP
[L]CURPRO = "TYP"
If this.TYP<0 or this.TYP>len(mess(0,7865,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"7865 ->"-num$(this.TYP)-mess(99,123,1)):  Return : # Local menu "7865 -> Invalid option
Endif
Return

$_AOTHERS_TYP
[L]CURPRO = "TYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYP
[L]CURPRO = "TYP"
Return

$PROPAGATE_TYP
this.isReadonly = 0
[L]CURPRO = "TYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYP
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "TYP"
$_LNKPRO_TYP
Return


####################################################################
# 2 : RAN Brackets ( Field A 20)
####################################################################

$SET_RAN
If [L]_AOLDVAL<>this.RAN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RAN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RAN
 Gosub PROPAGATE_RAN
Endif
Return

$INIT_RAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "RAN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "RAN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RAN
[L]CURPRO = "RAN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.RAN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RAN
[L]CURPRO = "RAN"
Return

$_AOTHERS_RAN
[L]CURPRO = "RAN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RAN
[L]CURPRO = "RAN"
Return

$PROPAGATE_RAN
this.isReadonly = 0
[L]CURPRO = "RAN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "RAN"
$_LNKPRO_RAN
Return


####################################################################
# 3 : INTRAN Comment ( Field AX3)
####################################################################

$GET_INTRAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRAN"
this.INTRAN = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTRAN
If [L]_AOLDVAL<>this.INTRAN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTRAN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTRAN
 Gosub PROPAGATE_INTRAN
Endif
Return

$INIT_INTRAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRAN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTRAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRAN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTRAN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTRAN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTRAN
[L]CURPRO = "INTRAN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTRAN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTRAN
[L]CURPRO = "INTRAN"
If vireblc(fmet this.AGETTEXTRA("INTRAN"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("INTRAN")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INTRAN
[L]CURPRO = "INTRAN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTRAN
[L]CURPRO = "INTRAN"
Return

$PROPAGATE_INTRAN
this.isReadonly = 0
[L]CURPRO = "INTRAN"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.INTRAN)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTRAN
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRAN"
$_LNKPRO_INTRAN
Return


####################################################################
# 4 : INTRANIDX Index ( Field C 2)
####################################################################

$SET_INTRANIDX
If [L]_AOLDVAL<>this.INTRANIDX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTRANIDX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTRANIDX
 Gosub PROPAGATE_INTRANIDX
Endif
Return

$INIT_INTRANIDX
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRANIDX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTRANIDX
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRANIDX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTRANIDX             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTRANIDX             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTRANIDX
[L]CURPRO = "INTRANIDX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INTRANIDX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTRANIDX
[L]CURPRO = "INTRANIDX"
Return

$_AOTHERS_INTRANIDX
[L]CURPRO = "INTRANIDX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTRANIDX
[L]CURPRO = "INTRANIDX"
Return

$PROPAGATE_INTRANIDX
this.isReadonly = 0
[L]CURPRO = "INTRANIDX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTRANIDX
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "INTRANIDX"
$_LNKPRO_INTRANIDX
Return


####################################################################
# 5 : DSPIDX Index ( Field C 2)
####################################################################

$SET_DSPIDX
If [L]_AOLDVAL<>this.DSPIDX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSPIDX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSPIDX
 Gosub PROPAGATE_DSPIDX
Endif
Return

$INIT_DSPIDX
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "DSPIDX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSPIDX
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "DSPIDX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSPIDX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSPIDX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSPIDX
[L]CURPRO = "DSPIDX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DSPIDX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSPIDX
[L]CURPRO = "DSPIDX"
Return

$_AOTHERS_DSPIDX
[L]CURPRO = "DSPIDX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSPIDX
[L]CURPRO = "DSPIDX"
Return

$PROPAGATE_DSPIDX
this.isReadonly = 0
[L]CURPRO = "DSPIDX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSPIDX
Gosub DECLARE_VAR From WMC0ACTLDEV_COLACD
[L]CURPRO = "DSPIDX"
$_LNKPRO_DSPIDX
Return




