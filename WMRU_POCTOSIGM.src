#<AdxTL>@(#)0.0.0.0 $Revision$Class Open orders to sign
# Supervisor
## CRUD-CLASSE ## POCTOSIGM
# 2018-08-27 13:24:02 679


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(POCTOSIGM,ASTATUS)
Variable Instance POCTOSIGM Using R_POCTOSIGM
Variable Integer ASTATUS

If POCTOSIGM = null : End : Endif

Gosub AVARIABLES From WMR00POCTOSIGM
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet POCTOSIGM.ACTX.AGETAFCRIGHT(POCTOSIGM,"SYRWRKPLN",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet POCTOSIGM.ACTX.AGETAFCRIGHTU(POCTOSIGM,"SYRWRKPLN",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_POCTOSIGM
Else
 Gosub AUPDATE_POCTOSIGM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = POCTOSIGM.freeSnapshot
POCTOSIGM.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
POCTOSIGM.ASTALIN = [V]CST_AUPD
POCTOSIGM.AWS.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = POCTOSIGM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = POCTOSIGM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet POCTOSIGM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet POCTOSIGM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet POCTOSIGM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If POCTOSIGM.AWS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
POCTOSIGM.AWS.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(POCTOSIGM.AWS.ASTALIN)<>""
 [L]A_ASTALIN = POCTOSIGM.AWS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.AWS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(POCTOSIGM.AWS.ASTALIN)<>""
 [L]A_ASTALIN = POCTOSIGM.AWS.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.AWS.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_POCTOSIGM
Trbegin [F:AWS]
 Gosub AUPDATE_POCTOSIGM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(POCTOSIGM.AWS.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 POCTOSIGM.AWS.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_POCTOSIGM
[L]A_ASTALIN = POCTOSIGM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.AWS._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = POCTOSIGM.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet POCTOSIGM.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If POCTOSIGM.snapshotEnabled=1
 [L]A_RETIK = POCTOSIGM.revertUpdTick
Endif

[L]ASTATUS = max(fmet POCTOSIGM.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



