#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PTN2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:09:51"
A_USER  = "ADMIN"
A_STAMP = "20180828000951"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PTN2 [PTN2]
Gosub HORODAT
Local Inpbox "PTN2" From GFONCTION At A_STAMP With A_WINDPREV Mask [PTN2] As [SIM_]
Grizo [PTN2]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PTN2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=24
Return

$ON_REFORICOD
Onevent AFTER_CHANGE Gosub AMM_REFORICOD From W1PTN2
Onevent INIT_AREA Call D_REFORICOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_REFORICOD(zc) From W1PTN2
Onevent CONTROL Call C_REFORICOD(zc) From W1PTN2
Return

Subprog D_REFORICOD(VALEUR)
Variable Integer VALEUR
If varinit([M]REFORICOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REFORICOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_REFORICOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "REFORICOD" : GZNUM = 20092 : Endif
Gosub _AFF
End

$AMM_REFORICOD
Call AM_REFORICOD(zc)
If !mkstat & GOBJET
 zoncou = "REFORICOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_REFORICOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "REFORICOD" : GZNUM = 20092 : Endif
Gosub _AFF
End

$ON_REFORISCR
Onevent INIT_AREA Call D_REFORISCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_REFORISCR(zc) From W1PTN2
Return

Subprog D_REFORISCR(VALEUR)
Variable Integer VALEUR
If varinit([M]REFORISCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REFORISCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_REFORIPOS
Onevent BEFORE_INPUT Call AS_REFORIPOS(zc) From W1PTN2
Onevent INIT_AREA Call D_REFORIPOS(zc) From W1PTN2
Onevent CONTROL Call C_REFORIPOS(zc) From W1PTN2
Return

Subprog D_REFORIPOS(VALEUR)
Variable Integer VALEUR
If varinit([M]REFORIPOS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_REFORIPOS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(556) From COMBOS
## Action STD
Call AS_REFORIPOS(VALEUR) From SUBPTN
If mkstat=2
 [M]REFORIPOS(INDIC) = VALEUR
 Affzo REFORIPOS(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,556,1))))
Endif
If !mkstat
 Discombo 0 From REFORIPOS(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From REFORIPOS(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_REFORIPOS(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ITMDESCOD
Onevent AFTER_CHANGE Gosub AMM_ITMDESCOD From W1PTN2
Onevent INIT_AREA Call D_ITMDESCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_ITMDESCOD(zc) From W1PTN2
Onevent CONTROL Call C_ITMDESCOD(zc) From W1PTN2
Return

Subprog D_ITMDESCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDESCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDESCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ITMDESCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ITMDESCOD" : GZNUM = 14917 : Endif
Gosub _AFF
End

$AMM_ITMDESCOD
Call AM_ITMDESCOD(zc)
If !mkstat & GOBJET
 zoncou = "ITMDESCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMDESCOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "ITMDESCOD" : GZNUM = 14917 : Endif
Gosub _AFF
End

$ON_ITMDESSCR
Onevent INIT_AREA Call D_ITMDESSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_ITMDESSCR(zc) From W1PTN2
Return

Subprog D_ITMDESSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDESSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDESSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ITMDES1COD
Onevent AFTER_CHANGE Gosub AMM_ITMDES1COD From W1PTN2
Onevent INIT_AREA Call D_ITMDES1COD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_ITMDES1COD(zc) From W1PTN2
Onevent CONTROL Call C_ITMDES1COD(zc) From W1PTN2
Return

Subprog D_ITMDES1COD(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDES1COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDES1COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ITMDES1COD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ITMDES1COD" : GZNUM = 14916 : Endif
Gosub _AFF
End

$AMM_ITMDES1COD
Call AM_ITMDES1COD(zc)
If !mkstat & GOBJET
 zoncou = "ITMDES1COD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMDES1COD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "ITMDES1COD" : GZNUM = 14916 : Endif
Gosub _AFF
End

$ON_ITMDES1SCR
Onevent INIT_AREA Call D_ITMDES1SCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_ITMDES1SCR(zc) From W1PTN2
Return

Subprog D_ITMDES1SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ITMDES1SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ITMDES1SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PJTCOD
Onevent AFTER_CHANGE Gosub AMM_PJTCOD From W1PTN2
Onevent INIT_AREA Call D_PJTCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_PJTCOD(zc) From W1PTN2
Onevent CONTROL Call C_PJTCOD(zc) From W1PTN2
Return

Subprog D_PJTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PJTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PJTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_PJTCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PJTCOD" : GZNUM = 1886 : Endif
Gosub _AFF
End

$AMM_PJTCOD
Call AM_PJTCOD(zc)
If !mkstat & GOBJET
 zoncou = "PJTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PJTCOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "PJTCOD" : GZNUM = 1886 : Endif
Gosub _AFF
End

$ON_PJTSCR
Onevent INIT_AREA Call D_PJTSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_PJTSCR(zc) From W1PTN2
Return

Subprog D_PJTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]PJTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PJTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_EECINCCOD
Onevent AFTER_CHANGE Gosub AMM_EECINCCOD From W1PTN2
Onevent INIT_AREA Call D_EECINCCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_EECINCCOD(zc) From W1PTN2
Onevent CONTROL Call C_EECINCCOD(zc) From W1PTN2
Return

Subprog D_EECINCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]EECINCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_EECINCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_EECINCCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "EECINCCOD" : GZNUM = 3698 : Endif
Gosub _AFF
End

$AMM_EECINCCOD
Call AM_EECINCCOD(zc)
If !mkstat & GOBJET
 zoncou = "EECINCCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EECINCCOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "EECINCCOD" : GZNUM = 3698 : Endif
Gosub _AFF
End

$ON_EECINCSCR
Onevent INIT_AREA Call D_EECINCSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_EECINCSCR(zc) From W1PTN2
Return

Subprog D_EECINCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]EECINCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_EECINCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ORICRYCOD
Onevent AFTER_CHANGE Gosub AMM_ORICRYCOD From W1PTN2
Onevent INIT_AREA Call D_ORICRYCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_ORICRYCOD(zc) From W1PTN2
Onevent CONTROL Call C_ORICRYCOD(zc) From W1PTN2
Return

Subprog D_ORICRYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ORICRYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORICRYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ORICRYCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ORICRYCOD" : GZNUM = 2735 : Endif
Gosub _AFF
End

$AMM_ORICRYCOD
Call AM_ORICRYCOD(zc)
If !mkstat & GOBJET
 zoncou = "ORICRYCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ORICRYCOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "ORICRYCOD" : GZNUM = 2735 : Endif
Gosub _AFF
End

$ON_ORICRYSCR
Onevent INIT_AREA Call D_ORICRYSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_ORICRYSCR(zc) From W1PTN2
Return

Subprog D_ORICRYSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ORICRYSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ORICRYSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VAT1COD
Onevent AFTER_CHANGE Gosub AMM_VAT1COD From W1PTN2
Onevent INIT_AREA Call D_VAT1COD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_VAT1COD(zc) From W1PTN2
Onevent CONTROL Call C_VAT1COD(zc) From W1PTN2
Return

Subprog D_VAT1COD(VALEUR)
Variable Integer VALEUR
If varinit([M]VAT1COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VAT1COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_VAT1COD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "VAT1COD" : GZNUM = 8869 : Endif
Gosub _AFF
End

$AMM_VAT1COD
Call AM_VAT1COD(zc)
If !mkstat & GOBJET
 zoncou = "VAT1COD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VAT1COD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "VAT1COD" : GZNUM = 8869 : Endif
Gosub _AFF
End

$ON_VAT1SCR
Onevent INIT_AREA Call D_VAT1SCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_VAT1SCR(zc) From W1PTN2
Return

Subprog D_VAT1SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]VAT1SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VAT1SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VAT2COD
Onevent AFTER_CHANGE Gosub AMM_VAT2COD From W1PTN2
Onevent INIT_AREA Call D_VAT2COD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_VAT2COD(zc) From W1PTN2
Onevent CONTROL Call C_VAT2COD(zc) From W1PTN2
Return

Subprog D_VAT2COD(VALEUR)
Variable Integer VALEUR
If varinit([M]VAT2COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VAT2COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_VAT2COD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "VAT2COD" : GZNUM = 8870 : Endif
Gosub _AFF
End

$AMM_VAT2COD
Call AM_VAT2COD(zc)
If !mkstat & GOBJET
 zoncou = "VAT2COD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VAT2COD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "VAT2COD" : GZNUM = 8870 : Endif
Gosub _AFF
End

$ON_VAT2SCR
Onevent INIT_AREA Call D_VAT2SCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_VAT2SCR(zc) From W1PTN2
Return

Subprog D_VAT2SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]VAT2SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VAT2SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VAT3COD
Onevent AFTER_CHANGE Gosub AMM_VAT3COD From W1PTN2
Onevent INIT_AREA Call D_VAT3COD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_VAT3COD(zc) From W1PTN2
Onevent CONTROL Call C_VAT3COD(zc) From W1PTN2
Return

Subprog D_VAT3COD(VALEUR)
Variable Integer VALEUR
If varinit([M]VAT3COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VAT3COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_VAT3COD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "VAT3COD" : GZNUM = 8871 : Endif
Gosub _AFF
End

$AMM_VAT3COD
Call AM_VAT3COD(zc)
If !mkstat & GOBJET
 zoncou = "VAT3COD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VAT3COD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "VAT3COD" : GZNUM = 8871 : Endif
Gosub _AFF
End

$ON_VAT3SCR
Onevent INIT_AREA Call D_VAT3SCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_VAT3SCR(zc) From W1PTN2
Return

Subprog D_VAT3SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]VAT3SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VAT3SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TAXRCPCOD
Onevent INIT_AREA Call D_TAXRCPCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXRCPCOD(zc) From W1PTN2
Onevent CONTROL Call C_TAXRCPCOD(zc) From W1PTN2
Return

Subprog D_TAXRCPCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXRCPCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXRCPCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TAXRCPCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TAXRCPCOD" : GZNUM = 26428 : Endif
Gosub _AFF
End

$ON_TAXRCPSCR
Onevent INIT_AREA Call D_TAXRCPSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXRCPSCR(zc) From W1PTN2
Return

Subprog D_TAXRCPSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXRCPSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXRCPSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TAXISSCOD
Onevent INIT_AREA Call D_TAXISSCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXISSCOD(zc) From W1PTN2
Onevent CONTROL Call C_TAXISSCOD(zc) From W1PTN2
Return

Subprog D_TAXISSCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXISSCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXISSCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TAXISSCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TAXISSCOD" : GZNUM = 26429 : Endif
Gosub _AFF
End

$ON_TAXISSSCR
Onevent INIT_AREA Call D_TAXISSSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXISSSCR(zc) From W1PTN2
Return

Subprog D_TAXISSSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXISSSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXISSSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TAXOTH1COD
Onevent INIT_AREA Call D_TAXOTH1COD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXOTH1COD(zc) From W1PTN2
Onevent CONTROL Call C_TAXOTH1COD(zc) From W1PTN2
Return

Subprog D_TAXOTH1COD(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXOTH1COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXOTH1COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TAXOTH1COD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TAXOTH1COD" : GZNUM = 26430 : Endif
Gosub _AFF
End

$ON_TAXOTH1SCR
Onevent INIT_AREA Call D_TAXOTH1SCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXOTH1SCR(zc) From W1PTN2
Return

Subprog D_TAXOTH1SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXOTH1SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXOTH1SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TAXOTH2COD
Onevent INIT_AREA Call D_TAXOTH2COD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXOTH2COD(zc) From W1PTN2
Onevent CONTROL Call C_TAXOTH2COD(zc) From W1PTN2
Return

Subprog D_TAXOTH2COD(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXOTH2COD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXOTH2COD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TAXOTH2COD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TAXOTH2COD" : GZNUM = 26431 : Endif
Gosub _AFF
End

$ON_TAXOTH2SCR
Onevent INIT_AREA Call D_TAXOTH2SCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TAXOTH2SCR(zc) From W1PTN2
Return

Subprog D_TAXOTH2SCR(VALEUR)
Variable Integer VALEUR
If varinit([M]TAXOTH2SCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TAXOTH2SCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRSFAMCOD
Onevent AFTER_CHANGE Gosub AMM_TRSFAMCOD From W1PTN2
Onevent INIT_AREA Call D_TRSFAMCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TRSFAMCOD(zc) From W1PTN2
Onevent CONTROL Call C_TRSFAMCOD(zc) From W1PTN2
Return

Subprog D_TRSFAMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSFAMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSFAMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TRSFAMCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TRSFAMCOD" : GZNUM = 53175 : Endif
Gosub _AFF
End

$AMM_TRSFAMCOD
Call AM_TRSFAMCOD(zc)
If !mkstat & GOBJET
 zoncou = "TRSFAMCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TRSFAMCOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "TRSFAMCOD" : GZNUM = 53175 : Endif
Gosub _AFF
End

$ON_TRSFAMSCR
Onevent INIT_AREA Call D_TRSFAMSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_TRSFAMSCR(zc) From W1PTN2
Return

Subprog D_TRSFAMSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSFAMSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRSFAMSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUCOD
Onevent AFTER_CHANGE Gosub AMM_QTYSTUCOD From W1PTN2
Onevent INIT_AREA Call D_QTYSTUCOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_QTYSTUCOD(zc) From W1PTN2
Onevent CONTROL Call C_QTYSTUCOD(zc) From W1PTN2
Return

Subprog D_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "QTYSTUCOD" : GZNUM = 2602 : Endif
Gosub _AFF
End

$AMM_QTYSTUCOD
Call AM_QTYSTUCOD(zc)
If !mkstat & GOBJET
 zoncou = "QTYSTUCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "QTYSTUCOD" : GZNUM = 2602 : Endif
Gosub _AFF
End

$ON_QTYSTUSCR
Onevent INIT_AREA Call D_QTYSTUSCR(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_QTYSTUSCR(zc) From W1PTN2
Return

Subprog D_QTYSTUSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_UOMCOECOD
Onevent AFTER_CHANGE Gosub AMM_UOMCOECOD From W1PTN2
Onevent INIT_AREA Call D_UOMCOECOD(zc) From W1PTN2
Onevent BEFORE_INPUT Call AS_UOMCOECOD(zc) From W1PTN2
Onevent CONTROL Call C_UOMCOECOD(zc) From W1PTN2
Return

Subprog D_UOMCOECOD(VALEUR)
Variable Integer VALEUR
If varinit([M]UOMCOECOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_UOMCOECOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_UOMCOECOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "UOMCOECOD" : GZNUM = 3377 : Endif
Gosub _AFF
End

$AMM_UOMCOECOD
Call AM_UOMCOECOD(zc)
If !mkstat & GOBJET
 zoncou = "UOMCOECOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_UOMCOECOD(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "UOMCOECOD" : GZNUM = 3377 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2PTN2
Return

$TIT_COL
Gosub TIT_COL From W2PTN2
Return


