#<AdxTL>@(#)0.0.0.0 $Revision$Class Activity codes
# Supervisor
## CRUD-CLASSE ## ADOSACT
# 2018-08-27 12:20:00 113


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ADOSACT [ADA_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ADOSACT") From ASYRCOM : Endif
Local Instance ADOSACT Using C_ADOSACT

If !SILENCE : Call TRACE("3 --> New Instance C_ADOSACT") From ASYRCOM : Endif
ADOSACT = NewInstance C_ADOSACT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ADA_]ADA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ADOSACT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ADOSACT.AREAD([ADA_]DOSSIER,[ADA_]CODACT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ADOSACT.DOSSIER ="-num$(ADOSACT.DOSSIER)) From ASYRCOM
 Call TRACE("ADOSACT.CODACT ="-num$(ADOSACT.CODACT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ADOSACT.AKEYS)
  Call TRACE("-"-num$(I)-":"-ADOSACT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ADA_]
FreeGroup ADOSACT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ADOSACT,ACLE,ASTATUS,_ETAG)
Variable Instance ADOSACT Using C_ADOSACT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _DOSSIER(10)
Local Char _CODACT(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_DOSSIER = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CODACT = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File ADOSACT [ADA]
Default File [F:ADA]
Read [F:ADA]ADA0 = [L]_DOSSIER;[L]_CODACT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ADA]UPDTICK)>0
 [L]_ETAG = num$([F:ADA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ADOSACT,ACLE,ASTATUS)
Variable Instance ADOSACT Using C_ADOSACT
Value Char ACLE
Variable Integer ASTATUS
Local Char _DOSSIER(10)
Local Char _CODACT(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_DOSSIER = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CODACT = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ADOSACT.AREAD([L]_DOSSIER,[L]_CODACT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ADOSACT,_DOSSIER,_CODACT,ASTATUS)
Variable Instance ADOSACT Using C_ADOSACT
Value Char _DOSSIER
Value Char _CODACT
Variable Integer ASTATUS

If ADOSACT = null : End : Endif

Gosub AVARIABLES From WMC00ADOSACT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ADOSACT.APARENT=null
 [L]A_I = ADOSACT.freeSnapshot
 ADOSACT.snapshotEnabled = 0
 ADOSACT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ADOSACT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ADOSACT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ADOSACT.APARENT=null
 ADOSACT.snapshotEnabled = 1
 ADOSACT.setAccessorEnabled = 1
Endif
LogicClose File [ADA]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ADOSACT._ACTION_PARAM("AREAD_BEFORE",[L]_DOSSIER,[L]_CODACT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:ADA]
Read [F:ADA]ADA0 = [L]_DOSSIER;[L]_CODACT
If fstat
[L]A_ERROR = [L]_DOSSIER+"~"+[L]_CODACT
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ADOSACT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:ADA]AUUID)>0 & [F:ADA]AUUID=NullUuid
 [F:ADA]AUUID = getUuid
Endif
SetInstance ADOSACT With [F:ADA]
ADOSACT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ADOSACT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



