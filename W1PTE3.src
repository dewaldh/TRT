#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PTE3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:09:40"
A_USER  = "ADMIN"
A_STAMP = "20180828000940"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PTE3 [PTE3]
Gosub HORODAT
Local Inpbox "PTE3" From GFONCTION At A_STAMP With A_WINDPREV Mask [PTE3] As [SIM_]
Grizo [PTE3]5
Grizo [PTE3]10
Grizo [PTE3]15
Grizo [PTE3]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PTE3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=80 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=80 : Y1(1)=3 : Y2(1)=9
X1(2)=1 : X2(2)=80 : Y1(2)=10 : Y2(2)=15
X1(3)=1 : X2(3)=80 : Y1(3)=16 : Y2(3)=20
Return

$ON_UOMSAIFLG1
Onevent AFTER_CHANGE Gosub AMM_UOMSAIFLG1 From W1PTE3
Onevent INIT_AREA Call D_UOMSAIFLG1(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_UOMSAIFLG1(zc) From W1PTE3
Return

Subprog D_UOMSAIFLG1(VALEUR)
Variable Integer VALEUR
If varinit([M]UOMSAIFLG1,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_UOMSAIFLG1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_UOMSAIFLG1
Call AM_UOMSAIFLG1(zc)
If !mkstat & GOBJET
 zoncou = "UOMSAIFLG1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_UOMSAIFLG1(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_UOMSAIFLG1(VALEUR) From SUBPTE
If mkstat : GERR = 1 : GZONE = "UOMSAIFLG1" : GZNUM = 30243 : Endif
Gosub _AFF
End

$ON_QTYPUUCOD
Onevent BEFORE_INPUT Call AS_QTYPUUCOD(zc) From W1PTE3
Onevent INIT_AREA Call D_QTYPUUCOD(zc) From W1PTE3
Onevent CONTROL Call C_QTYPUUCOD(zc) From W1PTE3
Return

Subprog D_QTYPUUCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYPUUCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_QTYPUUCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M]UOMSAIFLG1=2)
 Affzo QTYPUUCOD : mkstat = 2
Endif
If !mkstat
 Call INICOMBO(514) From COMBOS
 ## Action STD
 Call AS_QTYPUUCOD(VALEUR) From SUBPTE
 If mkstat=2
  [M]QTYPUUCOD(INDIC) = VALEUR
  Affzo QTYPUUCOD(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,514,1))))
 Endif
 If !mkstat
  Discombo 0 From QTYPUUCOD(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From QTYPUUCOD(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_QTYPUUCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_MFGFCYCOD
Onevent BEFORE_INPUT Call AS_MFGFCYCOD(zc) From W1PTE3
Onevent INIT_AREA Call D_MFGFCYCOD(zc) From W1PTE3
Onevent CONTROL Call C_MFGFCYCOD(zc) From W1PTE3
Return

Subprog D_MFGFCYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]MFGFCYCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_MFGFCYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
If !GWEBSERV
 ## Action STD
 Call AS_MFGFCYCOD(VALEUR) From SUBPTE
 If mkstat=2
  [M]MFGFCYCOD(INDIC) = VALEUR
  Affzo MFGFCYCOD(INDIC) : mkstat = 2
 Endif
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From MFGFCYCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From MFGFCYCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_MFGFCYCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SCOADDCOD
Onevent INIT_AREA Call D_SCOADDCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_SCOADDCOD(zc) From W1PTE3
Return

Subprog D_SCOADDCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SCOADDCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_SCOADDCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RCPFCYCOD
Onevent INIT_AREA Call D_RCPFCYCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_RCPFCYCOD(zc) From W1PTE3
Return

Subprog D_RCPFCYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]RCPFCYCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_RCPFCYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RCPADDCOD
Onevent INIT_AREA Call D_RCPADDCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_RCPADDCOD(zc) From W1PTE3
Return

Subprog D_RCPADDCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]RCPADDCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_RCPADDCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INVFCYCOD
Onevent BEFORE_INPUT Call AS_INVFCYCOD(zc) From W1PTE3
Onevent INIT_AREA Call D_INVFCYCOD(zc) From W1PTE3
Onevent CONTROL Call C_INVFCYCOD(zc) From W1PTE3
Return

Subprog D_INVFCYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]INVFCYCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_INVFCYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_INVFCYCOD(VALEUR) From SUBPTE
If mkstat=2
 [M]INVFCYCOD(INDIC) = VALEUR
 Affzo INVFCYCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From INVFCYCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From INVFCYCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_INVFCYCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_PJTCOD
Onevent INIT_AREA Call D_PJTCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_PJTCOD(zc) From W1PTE3
Return

Subprog D_PJTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PJTCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PJTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PIOCOD
Onevent INIT_AREA Call D_PIOCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_PIOCOD(zc) From W1PTE3
Return

Subprog D_PIOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PIOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PIOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STOFCYCOD
Onevent INIT_AREA Call D_STOFCYCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_STOFCYCOD(zc) From W1PTE3
Return

Subprog D_STOFCYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOFCYCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_STOFCYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STOFCYSCR
Onevent INIT_AREA Call D_STOFCYSCR(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_STOFCYSCR(zc) From W1PTE3
Return

Subprog D_STOFCYSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]STOFCYSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STOFCYSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M]STOFCYCOD<3)
 Affzo STOFCYSCR : mkstat = 2
Endif
If !mkstat
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_LOCCOD
Onevent INIT_AREA Call D_LOCCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_LOCCOD(zc) From W1PTE3
Return

Subprog D_LOCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_LOCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOCSCR
Onevent INIT_AREA Call D_LOCSCR(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_LOCSCR(zc) From W1PTE3
Return

Subprog D_LOCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M]LOCCOD<3)
 Affzo LOCSCR : mkstat = 2
Endif
If !mkstat
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_LOTCOD
Onevent INIT_AREA Call D_LOTCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1PTE3
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTSCR
Onevent INIT_AREA Call D_LOTSCR(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_LOTSCR(zc) From W1PTE3
Return

Subprog D_LOTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If !([M]LOTCOD<3)
 Affzo LOTSCR : mkstat = 2
Endif
If !mkstat
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_ECCCOD
Onevent INIT_AREA Call D_ECCCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_ECCCOD(zc) From W1PTE3
Return

Subprog D_ECCCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ECCCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ECCSCR
Onevent INIT_AREA Call D_ECCSCR(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_ECCSCR(zc) From W1PTE3
Return

Subprog D_ECCSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCSCR,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ECCSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ECCCODMIN
Onevent INIT_AREA Call D_ECCCODMIN(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_ECCCODMIN(zc) From W1PTE3
Onevent CONTROL Call C_ECCCODMIN(zc) From W1PTE3
Return

Subprog D_ECCCODMIN(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCCODMIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ECCCODMIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From ECCCODMIN(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ECCCODMIN(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ECCCODMIN(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ECCSCRMIN
Onevent INIT_AREA Call D_ECCSCRMIN(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_ECCSCRMIN(zc) From W1PTE3
Return

Subprog IB_ECCSCRMIN(VALEUR)
Variable Integer VALEUR
## Action STD
Call IB_ECCSCRMIN From SUBPTE
Gosub _AFF
End

Subprog D_ECCSCRMIN(VALEUR)
Variable Integer VALEUR
If varinit([M]ECCSCRMIN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ECCSCRMIN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call IB_ECCSCRMIN(VALEUR)
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCOLTICOD
Onevent INIT_AREA Call D_SCOLTICOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_SCOLTICOD(zc) From W1PTE3
Return

Subprog D_SCOLTICOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SCOLTICOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SCOLTICOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OPESTRCOD
Onevent INIT_AREA Call D_OPESTRCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_OPESTRCOD(zc) From W1PTE3
Return

Subprog D_OPESTRCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]OPESTRCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OPESTRCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OPEENDCOD
Onevent INIT_AREA Call D_OPEENDCOD(zc) From W1PTE3
Onevent BEFORE_INPUT Call AS_OPEENDCOD(zc) From W1PTE3
Return

Subprog D_OPEENDCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]OPEENDCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OPEENDCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


