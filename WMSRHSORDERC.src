#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHSORDERC SORDERC
# 2018-08-27 12:48:10 458

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","SORDERC","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SORDERC [SOC]
If filinfo(filpath("FIL","SORDERQ","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SORDERQ [SOQ]
Local File SORDERC [SOC_]
Local Char KEY_SOC(120)(1..3)
Local Char KEY_SOQ(120)(1..3)
#Empty keys :
KEY_SOC(3) = "+0"
KEY_SOQ(3) = "+0+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [SOC]
LogicClose File [SOQ]
LogicClose File [SOC_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [SOC] With
& [SOQ]SOQ0=[F:SOC]SOHNUM;[F:SOC]SOPLIN
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [SOC] With
& [SOQ]SOQ0=[F:SOC]SOHNUM;[F:SOC]SOPLIN
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_SOC(2) = [F:SOC]SOHNUM+"+"+num$([F:SOC]SOPLIN)
KEY_SOQ(2) = [F:SOQ]SOHNUM+"+"+num$([F:SOQ]SOPLIN)+"+"+num$([F:SOQ]SOQSEQ)

If (KEY_SOC(2) <> KEY_SOC(3)) & (KEY_SOC(1) <> KEY_SOC(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_SORDERC(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:SOC]
FINS = 1
Local Integer TSICOD_MAX:TSICOD_MAX0
CJ1=1
For CI1 = 0 To dim([F:SOC]TSICOD)-1
 Break ([F:SOC]TSICOD(CI1)="")
 TSICOD_MAX+=1
 #Create a new instance
 INS.C_TSICOD(CJ1) = NewInstance C_SORDERC_C_TSICOD(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_TSICOD(CJ1).setaccessorEnabled = 0
 INS.C_TSICOD(CJ1).TSICOD=[F:SOC]TSICOD(CI1)
 CJ1+=1
Next CI1
Local Integer VACITM_MAX:VACITM_MAX0
CJ1=1
For CI1 = 0 To dim([F:SOC]VACITM)-1
 Break ([F:SOC]VACITM(CI1)="" & [F:SOC]VAT(CI1)="")
 VACITM_MAX+=1
 #Create a new instance
 INS.C_VACITM(CJ1) = NewInstance C_SORDERC_C_VACITM(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_VACITM(CJ1).setaccessorEnabled = 0
 INS.C_VACITM(CJ1).VACITM=[F:SOC]VACITM(CI1)
 INS.C_VACITM(CJ1).VAT=[F:SOC]VAT(CI1)
 CJ1+=1
Next CI1
 KEY_SOC(1) = KEY_SOC(2)
Endif : # KEY_SOC(1) <> KEY_SOC(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"SOHNUM":'          +'"'+escJson(INS.SOHNUM)+'"'
Append ASND.DATA ,',"SOPLIN":'          + num$(INS.SOPLIN)
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"SALFCY":'         +'"'+escJson(INS.SALFCY)+'"'
Append ASND.DATA ,',"BPCORD":'         +'"'+escJson(INS.BPCORD)+'"'
Append ASND.DATA ,',"BPAADD":'         +'"'+escJson(INS.BPAADD)+'"'
Append ASND.DATA ,',"ITMREF":'         +'"'+escJson(INS.ITMREF)+'"'
Append ASND.DATA ,',"ITMDES1":'        +'"'+escJson(INS.ITMDES1)+'"'
Append ASND.DATA ,',"ITMDES":'         +'"'+escJson(INS.ITMDES)+'"'
Append ASND.DATA ,',"ITMREFBPC":'      +'"'+escJson(INS.ITMREFBPC)+'"'
Append ASND.DATA ,',"ITMDESBPC":'      +'"'+escJson(INS.ITMDESBPC)+'"'
Append ASND.DATA ,',"CUSORDREF":'      +'"'+escJson(INS.CUSORDREF)+'"'
Append ASND.DATA ,',"STOFCY":'         +'"'+escJson(INS.STOFCY)+'"'
Append ASND.DATA ,',"USEPLC":'         +'"'+escJson(INS.USEPLC)+'"'
Append ASND.DATA ,',"PLI":'            +'"'+escJson(INS.PLI)+'"'
Append ASND.DATA ,',"VACBPR":'         +'"'+escJson(INS.VACBPR)+'"'
Append ASND.DATA ,',"SAU":'            +'"'+escJson(INS.SAU)+'"'
Append ASND.DATA ,',"STU":'            +'"'+escJson(INS.STU)+'"'
Append ASND.DATA ,',"EARHOU":'         +'"'+escJson(INS.EARHOU)+'"'
Append ASND.DATA ,',"EARHOUCUS":'      +'"'+escJson(INS.EARHOUCUS)+'"'
Append ASND.DATA ,',"SOCTEX":'         +'"'+escJson(INS.SOCTEX)+'"'
Append ASND.DATA ,',"EECICT":'         +'"'+escJson(INS.EECICT)+'"'
Append ASND.DATA ,',"ICTCTY":'         +'"'+escJson(INS.ICTCTY)+'"'
Append ASND.DATA ,',"FFWNUM":'         +'"'+escJson(INS.FFWNUM)+'"'
Append ASND.DATA ,',"FFWADD":'         +'"'+escJson(INS.FFWADD)+'"'
Append ASND.DATA ,',"BPIEECNUM":'      +'"'+escJson(INS.BPIEECNUM)+'"'
Append ASND.DATA ,',"PJT":'            +'"'+escJson(INS.PJT)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"CREDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.CREDAT)
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,',"UPDDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.UPDDAT)
IS1=""
CJ1=1
Append ASND.DATA ,',"C_TSICOD":['
For CI1=1 To TSICOD_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"TSICOD":'          +'"'+escJson(INS.C_TSICOD(CJ1).TSICOD)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"C_VACITM":['
For CI1=1 To VACITM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"VACITM":'          +'"'+escJson(INS.C_VACITM(CJ1).VACITM)+'"'
 Append ASND.DATA ,',"VAT":'            +'"'+escJson(INS.C_VACITM(CJ1).VAT)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_SOC(1),KEY_SOQ(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:SOC]SOHNUM"
ASTDKEY += ";[F:SOC]SOPLIN"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From SORDERC_CSTD
 Gosub METHODS From SORDERC_CSTD
Gosub METHODS From SORDERC_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="SORDERC" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SORDERC")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SORDERC")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,6110)+'"'
Append WCLOB,',"$url":"{$baseUrl}/SORDERC'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{SALFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6110)+' {$key}"'
Append WCLOB,',"$key":"{SOHNUM}~{SOPLIN}"'
Append WCLOB,',"$url":"{$baseUrl}/SORDERC('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'SORDERC.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"SOHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2212)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"SOPLIN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,641)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-integer"'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"SALFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5060)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPCORD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4430)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPAADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1719)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ITMREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3651)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"ITMDES1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,282)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"ITMDES":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,282)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"ITMREFBPC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3774)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"ITMDESBPC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4839)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"CUSORDREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5692)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"STOFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3676)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"USEPLC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4617)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"PLI":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2652)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":6'
Append WCLOB,"}"
Append WCLOB,',"VACBPR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3673)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"SAU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2994)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"STU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2076)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"EARHOU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5762)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":6'
Append WCLOB,"}"
Append WCLOB,',"EARHOUCUS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5768)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":6'
Append WCLOB,"}"
Append WCLOB,',"SOCTEX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5776)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"EECICT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2523)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ICTCTY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26526)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"FFWNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3718)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"FFWADD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26527)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPIEECNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1584)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"PJT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1886)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1322)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1326)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"C_TSICOD":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":5'
Append WCLOB,',"$maxItems":5'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"TSICOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1674)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"C_VACITM":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":3'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"VACITM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3705)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"VAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2554)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHSORDERCB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHSORDERCB
End RES


