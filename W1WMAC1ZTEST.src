#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WMAC1ZTEST 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [25/03/2019]
A_HEURE = "11:29:35"
A_USER  = "RRL"
A_STAMP = "20190325112935"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If [M:HAEF]FMTSAC(0)<>""
    Chgfmt SAC1 With [M:HAEF]FMTSAC(0)
   Else
    Chgfmt SAC1 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(0)<>""
    Chgfmt ACC1 With [M:HAEF]FMTCOA(0)
   Else
    Chgfmt ACC1 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(1)<>""
    Chgfmt SAC2 With [M:HAEF]FMTSAC(1)
   Else
    Chgfmt SAC2 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(1)<>""
    Chgfmt ACC2 With [M:HAEF]FMTCOA(1)
   Else
    Chgfmt ACC2 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(2)<>""
    Chgfmt SAC3 With [M:HAEF]FMTSAC(2)
   Else
    Chgfmt SAC3 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(2)<>""
    Chgfmt ACC3 With [M:HAEF]FMTCOA(2)
   Else
    Chgfmt ACC3 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(3)<>""
    Chgfmt SAC4 With [M:HAEF]FMTSAC(3)
   Else
    Chgfmt SAC4 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(3)<>""
    Chgfmt ACC4 With [M:HAEF]FMTCOA(3)
   Else
    Chgfmt ACC4 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(4)<>""
    Chgfmt SAC5 With [M:HAEF]FMTSAC(4)
   Else
    Chgfmt SAC5 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(4)<>""
    Chgfmt ACC5 With [M:HAEF]FMTCOA(4)
   Else
    Chgfmt ACC5 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(5)<>""
    Chgfmt SAC6 With [M:HAEF]FMTSAC(5)
   Else
    Chgfmt SAC6 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(5)<>""
    Chgfmt ACC6 With [M:HAEF]FMTCOA(5)
   Else
    Chgfmt ACC6 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(6)<>""
    Chgfmt SAC7 With [M:HAEF]FMTSAC(6)
   Else
    Chgfmt SAC7 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(6)<>""
    Chgfmt ACC7 With [M:HAEF]FMTCOA(6)
   Else
    Chgfmt ACC7 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(7)<>""
    Chgfmt SAC8 With [M:HAEF]FMTSAC(7)
   Else
    Chgfmt SAC8 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(7)<>""
    Chgfmt ACC8 With [M:HAEF]FMTCOA(7)
   Else
    Chgfmt ACC8 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(8)<>""
    Chgfmt SAC9 With [M:HAEF]FMTSAC(8)
   Else
    Chgfmt SAC9 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(8)<>""
    Chgfmt ACC9 With [M:HAEF]FMTCOA(8)
   Else
    Chgfmt ACC9 With "-K:1X"
   Endif
   If [M:HAEF]FMTSAC(9)<>""
    Chgfmt SAC10 With [M:HAEF]FMTSAC(9)
   Else
    Chgfmt SAC10 With "-K:1X"
   Endif
   If [M:HAEF]FMTCOA(9)<>""
    Chgfmt ACC10 With [M:HAEF]FMTCOA(9)
   Else
    Chgfmt ACC10 With "-K:1X"
   Endif
   If [M:HAEF]FMTDOE<>""
    Chgfmt DOEPTR With [M:HAEF]FMTDOE
   Else
    Chgfmt DOEPTR With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(0)<>""
    Chgfmt CPA1 With [M:HAEF]FMTCPA(0)
   Else
    Chgfmt CPA1 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(1)<>""
    Chgfmt CPA2 With [M:HAEF]FMTCPA(1)
   Else
    Chgfmt CPA2 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(2)<>""
    Chgfmt CPA3 With [M:HAEF]FMTCPA(2)
   Else
    Chgfmt CPA3 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(3)<>""
    Chgfmt CPA4 With [M:HAEF]FMTCPA(3)
   Else
    Chgfmt CPA4 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(4)<>""
    Chgfmt CPA5 With [M:HAEF]FMTCPA(4)
   Else
    Chgfmt CPA5 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(5)<>""
    Chgfmt CPA6 With [M:HAEF]FMTCPA(5)
   Else
    Chgfmt CPA6 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(6)<>""
    Chgfmt CPA7 With [M:HAEF]FMTCPA(6)
   Else
    Chgfmt CPA7 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(7)<>""
    Chgfmt CPA8 With [M:HAEF]FMTCPA(7)
   Else
    Chgfmt CPA8 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(8)<>""
    Chgfmt CPA9 With [M:HAEF]FMTCPA(8)
   Else
    Chgfmt CPA9 With "-K:1X"
   Endif
   If [M:HAEF]FMTCPA(9)<>""
    Chgfmt CPA10 With [M:HAEF]FMTCPA(9)
   Else
    Chgfmt CPA10 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(0)<>""
    Chgfmt CCE1 With [M:HAEF]FMTDIE(0)
   Else
    Chgfmt CCE1 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(1)<>""
    Chgfmt CCE2 With [M:HAEF]FMTDIE(1)
   Else
    Chgfmt CCE2 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(2)<>""
    Chgfmt CCE3 With [M:HAEF]FMTDIE(2)
   Else
    Chgfmt CCE3 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(3)<>""
    Chgfmt CCE4 With [M:HAEF]FMTDIE(3)
   Else
    Chgfmt CCE4 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(4)<>""
    Chgfmt CCE5 With [M:HAEF]FMTDIE(4)
   Else
    Chgfmt CCE5 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(5)<>""
    Chgfmt CCE6 With [M:HAEF]FMTDIE(5)
   Else
    Chgfmt CCE6 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(6)<>""
    Chgfmt CCE7 With [M:HAEF]FMTDIE(6)
   Else
    Chgfmt CCE7 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(7)<>""
    Chgfmt CCE8 With [M:HAEF]FMTDIE(7)
   Else
    Chgfmt CCE8 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(8)<>""
    Chgfmt CCE9 With [M:HAEF]FMTDIE(8)
   Else
    Chgfmt CCE9 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(9)<>""
    Chgfmt CCE10 With [M:HAEF]FMTDIE(9)
   Else
    Chgfmt CCE10 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(10)<>""
    Chgfmt CCE11 With [M:HAEF]FMTDIE(10)
   Else
    Chgfmt CCE11 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(11)<>""
    Chgfmt CCE12 With [M:HAEF]FMTDIE(11)
   Else
    Chgfmt CCE12 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(12)<>""
    Chgfmt CCE13 With [M:HAEF]FMTDIE(12)
   Else
    Chgfmt CCE13 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(13)<>""
    Chgfmt CCE14 With [M:HAEF]FMTDIE(13)
   Else
    Chgfmt CCE14 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(14)<>""
    Chgfmt CCE15 With [M:HAEF]FMTDIE(14)
   Else
    Chgfmt CCE15 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(15)<>""
    Chgfmt CCE16 With [M:HAEF]FMTDIE(15)
   Else
    Chgfmt CCE16 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(16)<>""
    Chgfmt CCE17 With [M:HAEF]FMTDIE(16)
   Else
    Chgfmt CCE17 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(17)<>""
    Chgfmt CCE18 With [M:HAEF]FMTDIE(17)
   Else
    Chgfmt CCE18 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(18)<>""
    Chgfmt CCE19 With [M:HAEF]FMTDIE(18)
   Else
    Chgfmt CCE19 With "-K:1X"
   Endif
   If [M:HAEF]FMTDIE(19)<>""
    Chgfmt CCE20 With [M:HAEF]FMTDIE(19)
   Else
    Chgfmt CCE20 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WMAC1ZTEST [HAE1]
Gosub HORODAT
Local Inpbox "WMAC1ZTEST" From GFONCTION At A_STAMP With A_WINDPREV Mask [HAE1] As [SIM_]
Grizo [HAE1]10
Grizo [HAE1]20
Grizo [HAE1]30
Grizo [HAE1]40
Grizo [HAE1]50
Grizo [HAE1]60
Grizo [HAE1]65
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [HAE1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=44 : Y1(0)=1 : Y2(0)=4
X1(1)=45 : X2(1)=76 : Y1(1)=1 : Y2(1)=4
X1(2)=1 : X2(2)=44 : Y1(2)=5 : Y2(2)=14
X1(3)=45 : X2(3)=76 : Y1(3)=5 : Y2(3)=14
X1(5)=1 : X2(5)=76 : Y1(5)=15 : Y2(5)=25
X1(6)=1 : X2(6)=44 : Y1(6)=26 : Y2(6)=28
X1(7)=45 : X2(7)=76 : Y1(7)=26 : Y2(7)=28
Return

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1WMAC1ZTEST
Onevent INIT_AREA Call D_FCY(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_FCY From W1WMAC1ZTEST
Return

Subprog D_FCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]FCY,indice)=0
 VALEUR = GFCYDEF(2)
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"FCY") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action FLDAVTCAR
Call FLDAVTCAR(VALEUR,"FCY") From TRTGAS
If mkstat=2
 [M]FCY(INDIC) = VALEUR
 Affzo FCY(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action INIFCY
 Call INIFCY(VALEUR,"") From EXEFNC
 If mkstat=2
  [M]FCY(INDIC) = VALEUR
  Affzo FCY(INDIC) : mkstat = 2
 Endif
 If !mkstat
  ## Action STD
  Call AS_FCY(VALEUR) From SUBGA0
  If mkstat=2
   [M]FCY(INDIC) = VALEUR
   Affzo FCY(INDIC) : mkstat = 2
  Endif
  Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1WMAC1ZTEST
  Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1WMAC1ZTEST
  Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1WMAC1ZTEST
 Endif
Endif
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action ACONTFCY
 Call CONTSITE(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("FCY","C",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action FLDCTLCAR
   Call FLDCTLCAR(VALEUR,"FCY") From TRTGAS
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
   If !mkstat
    ## Action CONTFCY
    Call CONTFCY(VALEUR) From EXEFNC
    If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
    If !mkstat
     ## Action STD
     Call C_FCY(VALEUR) From SUBGA0
     If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
    Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_FCY
Call AM_FCY(zc)
If !mkstat & GOBJET
 zoncou = "FCY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_FCY(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZFCY)")>indice
 [M]FCY(indice) = VALEUR
 Affzo ZFCY(indice)
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "C"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZFCY
Onevent BEFORE_AREA Gosub AV_ZFCY From W1WMAC1ZTEST
Return

$AV_ZFCY
If clalev([F:FCY])=0 : Local File FACILITY [FCY] : Endif
Call LECTURE("FCY",num$([M]FCY(indice)),"") From CONTOBJ
zc = [F:FCY]FCYSHO
Gosub _AFF
Return

$ON_CPY
Onevent INIT_AREA Call D_CPY(zc) From W1WMAC1ZTEST
Return

Subprog D_CPY(VALEUR)
Variable Char    VALEUR()
If varinit([M]CPY,indice)=0
 ## Action STD
 Call D_CPY(VALEUR) From SUBGA0
Endif
Gosub _AFF
End

$ON_TYP
Onevent CONTROL Call C_TYP(zc) From W1WMAC1ZTEST
Onevent INIT_AREA Call D_TYP(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_TYP(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_TYP From W1WMAC1ZTEST
Return

Subprog D_TYP(VALEUR)
Variable Char    VALEUR()
If varinit([M]TYP,indice)=0
 VALEUR = GTYPPCE
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"TYP") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_TYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(5152,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action FLDAVTCAR
Call FLDAVTCAR(VALEUR,"TYP") From TRTGAS
If mkstat=2
 [M]TYP(INDIC) = VALEUR
 Affzo TYP(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_TYP(zc) From W1WMAC1ZTEST
Onkey   2 Titled GBOUTS Call S_TYP(zc) From W1WMAC1ZTEST
Onkey 144 Titled GBOUTP Call P_TYP(zc) From W1WMAC1ZTEST
Onkey 146 Titled GBOUTA Call SA_TYP(zc) From W1WMAC1ZTEST
Gosub _AFF
End

Subprog C_TYP(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 4969 : Endif
If !mkstat
 ## Action CONTGTE
 Call CONTGTE(VALEUR,GCURLEG,"") From SUBGTE
 If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 4969 : Endif
 If !mkstat
  ## Action CONTOBJN
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "CONTOBJN"
  Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 4969 : Endif
  If !mkstat
   ## Action FLDCTLCAR
   Call FLDCTLCAR(VALEUR,"TYP") From TRTGAS
   If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 4969 : Endif
   If !mkstat
    ## Action STD
    Call C_TYP(VALEUR) From SUBGA0
    If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 4969 : Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_TYP
Call AM_TYP(zc)
If !mkstat & GOBJET
 zoncou = "TYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_TYP(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "TYP" : GZNUM = 4969 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZTYP)")>indice
 [M]TYP(indice) = VALEUR
 Affzo ZTYP(indice)
Endif
Gosub _AFF
End

Subprog S_TYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELGTE
 Call SELGTE(VALEUR,GCURLEG,0,"") From SUBGTE
Endif
Gosub _AFF
End

Subprog B1_TYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNGTE
 Call TUNGTE(VALEUR,GCURLEG) From SUBGTE
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_TYP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "GTE"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_TYP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("GTE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZTYP
Onevent BEFORE_AREA Gosub AV_ZTYP From W1WMAC1ZTEST
Return

$AV_ZTYP
Call LECTEXTRA(zc,"GTYPACCENT","SHOTRA",num$([M]TYP(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_NUM
Onevent CONTROL Call C_NUM(zc) From W1WMAC1ZTEST
Onevent INIT_AREA Call D_NUM(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_NUM(zc) From W1WMAC1ZTEST
Onevent AFTER_AREA Call AP_NUM(zc) From W1WMAC1ZTEST
Return

Subprog D_NUM(VALEUR)
Variable Char    VALEUR()
If varinit([M]NUM,indice)=0
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"NUM") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_NUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action FLDAVTCAR
Call FLDAVTCAR(VALEUR,"NUM") From TRTGAS
If mkstat=2
 [M]NUM(INDIC) = VALEUR
 Affzo NUM(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_NUM(zc) From W1WMAC1ZTEST
Gosub _AFF
End

Subprog C_NUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "NUM" : GZNUM = 171 : Endif
Endif
If !mkstat
 ## Action FLDCTLCAR
 Call FLDCTLCAR(VALEUR,"NUM") From TRTGAS
 If mkstat : GERR = 1 : GZONE = "NUM" : GZNUM = 171 : Endif
 If !mkstat
  ## Action STD
  Call C_NUM(VALEUR) From SUBGA0
  If mkstat : GERR = 1 : GZONE = "NUM" : GZNUM = 171 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog AP_NUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_NUM(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "NUM" : GZNUM = 171 : Endif
Gosub _AFF
End

Subprog S_NUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJET"
 PARMSK(1) = "GAS"
 PARMSK(2) = "NUM"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJET","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ACCDAT
Onevent INIT_AREA Call D_ACCDAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_ACCDAT(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_ACCDAT(zc) From W1WMAC1ZTEST
Onevent AFTER_AREA Call AP_ACCDAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_AREA Gosub AV_ACCDAT From W1WMAC1ZTEST
Return

$AV_ACCDAT
Chgfmt [M]ACCDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog D_ACCDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]ACCDAT,indice)=0
 ## Action FLDDEFDAT
 Call FLDDEFDAT(VALEUR,"ACCDAT") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_ACCDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action FLDAVTDAT
Call FLDAVTDAT(VALEUR,"ACCDAT") From TRTGAS
If mkstat=2
 [M]ACCDAT(INDIC) = VALEUR
 Affzo ACCDAT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_ACCDAT(VALEUR) From SUBGA0
 If mkstat=2
  [M]ACCDAT(INDIC) = VALEUR
  Affzo ACCDAT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_ACCDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ACCDAT" : GZNUM = 212 : Endif
If !mkstat
 ## Action FLDCTLDAT
 Call FLDCTLDAT(VALEUR,"ACCDAT") From TRTGAS
 If mkstat : GERR = 1 : GZONE = "ACCDAT" : GZNUM = 212 : Endif
 If !mkstat
  ## Action STD
  Call C_ACCDAT(VALEUR) From SUBGA0
  If mkstat : GERR = 1 : GZONE = "ACCDAT" : GZNUM = 212 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog AP_ACCDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AP_ACCDAT(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "ACCDAT" : GZNUM = 212 : Endif
Gosub _AFF
End

$ON_JOU
Onevent CONTROL Call C_JOU(zc) From W1WMAC1ZTEST
Onevent INIT_AREA Call D_JOU(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_JOU(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_JOU From W1WMAC1ZTEST
Return

Subprog D_JOU(VALEUR)
Variable Char    VALEUR()
If varinit([M]JOU,indice)=0
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"JOU") From TRTGAS
 ## Action STD
 Call D_JOU(VALEUR) From SUBGA0
Endif
Gosub _AFF
End

Subprog AS_JOU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(4314,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action FLDAVTCAR
Call FLDAVTCAR(VALEUR,"JOU") From TRTGAS
If mkstat=2
 [M]JOU(INDIC) = VALEUR
 Affzo JOU(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_JOU(VALEUR) From SUBGA0
 If mkstat=2
  [M]JOU(INDIC) = VALEUR
  Affzo JOU(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_JOU(zc) From W1WMAC1ZTEST
 Onkey   2 Titled GBOUTS Call S_JOU(zc) From W1WMAC1ZTEST
 Onkey 144 Titled GBOUTP Call P_JOU(zc) From W1WMAC1ZTEST
 Onkey 146 Titled GBOUTA Call SA_JOU(zc) From W1WMAC1ZTEST
Endif
Gosub _AFF
End

Subprog C_JOU(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "JOU" : GZNUM = 4314 : Endif
If !mkstat
 ## Action CONTJOU
 Call CONTJOU(VALEUR,"","") From SUBJOU
 If mkstat : GERR = 1 : GZONE = "JOU" : GZNUM = 4314 : Endif
 If !mkstat
  ## Action CONTOBJN
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "CONTOBJN"
  Call S_AFF_CHAR(VALEUR,PARMSK,"CONTOBJN","CONTOBJ","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "JOU" : GZNUM = 4314 : Endif
  If !mkstat
   ## Action FLDCTLCAR
   Call FLDCTLCAR(VALEUR,"JOU") From TRTGAS
   If mkstat : GERR = 1 : GZONE = "JOU" : GZNUM = 4314 : Endif
   If !mkstat
    ## Action STD
    Call C_JOU(VALEUR) From SUBGA0
    If mkstat : GERR = 1 : GZONE = "JOU" : GZNUM = 4314 : Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_JOU
Call AM_JOU(zc)
If !mkstat & GOBJET
 zoncou = "JOU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_JOU(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZJOU)")>indice
 [M]JOU(indice) = VALEUR
 Affzo ZJOU(indice)
Endif
Gosub _AFF
End

Subprog S_JOU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELJOUGTE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELJOUGTE"
 PARMSK(1) = "[M]TYP"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELJOUGTE","CPTSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_JOU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action TUNJOU
 Call TUNJOU(VALEUR,"") From SUBJOU
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_JOU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "JOU"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_JOU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("JOU",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZJOU
Onevent BEFORE_AREA Gosub AV_ZJOU From W1WMAC1ZTEST
Return

$AV_ZJOU
Call LECTEXTRA(zc,"GJOURNAL","SHOTRA",num$([M]JOU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_DACDIA
Onevent INIT_AREA Call D_DACDIA(zc) From W1WMAC1ZTEST
Return

Subprog D_DACDIA(VALEUR)
Variable Char    VALEUR()
If varinit([M]DACDIA,indice)=0
 VALEUR = [F:GDE]DIA
Endif
Gosub _AFF
End

$ON_CAT
Onevent INIT_AREA Call D_CAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_CAT(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_CAT(zc) From W1WMAC1ZTEST
Return

Subprog D_CAT(VALEUR)
Variable Integer VALEUR
If varinit([M]CAT,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_CAT(VALEUR) From SUBGA0
 ## Action FLDDEFINT
 Call FLDDEFINT(VALEUR,"CAT") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_CAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(618) From COMBOS
## Action FLDAVTINT
Call FLDAVTINT(VALEUR,"CAT") From TRTGAS
If mkstat=2
 [M]CAT(INDIC) = VALEUR
 Affzo CAT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CAT(VALEUR) From SUBGA0
 If mkstat=2
  [M]CAT(INDIC) = VALEUR
  Affzo CAT(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,618,1))))
 Endif
 If !mkstat
  Discombo 0 From CAT(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From CAT(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_CAT(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CAT" : GZNUM = 707 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action FLDCTLINT
 Call FLDCTLINT(VALEUR,"CAT") From TRTGAS
 If mkstat : GERR = 1 : GZONE = "CAT" : GZNUM = 707 : Endif
 If !mkstat
  ## Action STD
  Call C_CAT(VALEUR) From SUBGA0
  If mkstat : GERR = 1 : GZONE = "CAT" : GZNUM = 707 : Endif
 Endif
Endif
Gosub _AFF
End

$ON_STA
Onevent BEFORE_AREA Gosub AV_STA From W1WMAC1ZTEST
Onevent INIT_AREA Call D_STA(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_STA(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_STA(zc) From W1WMAC1ZTEST
Return

$AV_STA
## Action STD
Call AV_STA(zc) From SUBGA0
Gosub _AFF
Return

Subprog D_STA(VALEUR)
Variable Integer VALEUR
If varinit([M]STA,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_STA(VALEUR) From SUBGA0
 ## Action FLDDEFINT
 Call FLDDEFINT(VALEUR,"STA") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_STA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(617) From COMBOS
## Action FLDAVTINT
Call FLDAVTINT(VALEUR,"STA") From TRTGAS
If mkstat=2
 [M]STA(INDIC) = VALEUR
 Affzo STA(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_STA(VALEUR) From SUBGA0
 If mkstat=2
  [M]STA(INDIC) = VALEUR
  Affzo STA(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,617,1))))
 Endif
 If !mkstat
  Discombo 0 From STA(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From STA(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1179 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action FLDCTLINT
 Call FLDCTLINT(VALEUR,"STA") From TRTGAS
 If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 1179 : Endif
Endif
Gosub _AFF
End

$ON_BPRVCR
Onevent INIT_AREA Call D_BPRVCR(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_BPRVCR(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_BPRVCR(zc) From W1WMAC1ZTEST
Return

Subprog D_BPRVCR(VALEUR)
Variable Char    VALEUR()
If varinit([M]BPRVCR,indice)=0
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"DOC") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_BPRVCR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PCEDEF
If [M]STA>1 & (GREP="M" | GREP="")  & func AFNC.PARAM("FRADGI",[M]CPY)="2": mkstat = 2  : Endif : # Définitif
If mkstat=2
 [M]BPRVCR(INDIC) = VALEUR
 Affzo BPRVCR(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action FLDAVTCAR
 Call FLDAVTCAR(VALEUR,"DOC") From TRTGAS
 If mkstat=2
  [M]BPRVCR(INDIC) = VALEUR
  Affzo BPRVCR(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_BPRVCR(VALEUR)
Variable Char    VALEUR()
## Action FLDCTLCAR
Call FLDCTLCAR(VALEUR,"DOC") From TRTGAS
If mkstat : GERR = 1 : GZONE = "BPRVCR" : GZNUM = 6516 : Endif
Gosub _AFF
End

$ON_BPRDATVCR
Onevent INIT_AREA Call D_BPRDATVCR(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_BPRDATVCR(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_BPRDATVCR(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_BPRDATVCR From W1WMAC1ZTEST
Onevent BEFORE_AREA Gosub AV_BPRDATVCR From W1WMAC1ZTEST
Return

$AV_BPRDATVCR
Chgfmt [M]BPRDATVCR(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_BPRDATVCR(VALEUR)
Variable Date    VALEUR
If varinit([M]BPRDATVCR,indice)=0
 ## Action FLDDEFDAT
 Call FLDDEFDAT(VALEUR,"DDOC") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_BPRDATVCR(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PCEDEF
If [M]STA>1 & (GREP="M" | GREP="")  & func AFNC.PARAM("FRADGI",[M]CPY)="2": mkstat = 2  : Endif : # Définitif
If mkstat=2
 [M]BPRDATVCR(INDIC) = VALEUR
 Affzo BPRDATVCR(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action FLDAVTDAT
 Call FLDAVTDAT(VALEUR,"DDOC") From TRTGAS
 If mkstat=2
  [M]BPRDATVCR(INDIC) = VALEUR
  Affzo BPRDATVCR(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_BPRDATVCR(VALEUR)
Variable Date    VALEUR
## Action FLDCTLDAT
Call FLDCTLDAT(VALEUR,"DDOC") From TRTGAS
If mkstat : GERR = 1 : GZONE = "BPRDATVCR" : GZNUM = 6517 : Endif
Gosub _AFF
End

$AMM_BPRDATVCR
Call AM_BPRDATVCR(zc)
If !mkstat & GOBJET
 zoncou = "BPRDATVCR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BPRDATVCR(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_BPRDATVCR(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "BPRDATVCR" : GZNUM = 6517 : Endif
Gosub _AFF
End

$ON_TYPRAT
Onevent INIT_AREA Call D_TYPRAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_TYPRAT(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_TYPRAT(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_TYPRAT From W1WMAC1ZTEST
Return

Subprog D_TYPRAT(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPRAT,indice)=0
 VALEUR = 1
 ## Action FLDDEFINT
 Call FLDDEFINT(VALEUR,"TRAT") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_TYPRAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action FLDAVTINT
Call FLDAVTINT(VALEUR,"TRAT") From TRTGAS
If mkstat=2
 [M]TYPRAT(INDIC) = VALEUR
 Affzo TYPRAT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_TYPRAT(VALEUR) From SUBGA0
 If mkstat=2
  [M]TYPRAT(INDIC) = VALEUR
  Affzo TYPRAT(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

Subprog C_TYPRAT(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TYPRAT" : GZNUM = 5153 : Endif
If !mkstat
 ## Action FLDCTLINT
 Call FLDCTLINT(VALEUR,"TRAT") From TRTGAS
 If mkstat : GERR = 1 : GZONE = "TYPRAT" : GZNUM = 5153 : Endif
Endif
Gosub _AFF
End

$AMM_TYPRAT
Call AM_TYPRAT(zc)
If !mkstat & GOBJET
 zoncou = "TYPRAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TYPRAT(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TYPRAT(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "TYPRAT" : GZNUM = 5153 : Endif
Gosub _AFF
End

$ON_CUR
Onevent BEFORE_AREA Gosub AV_CUR From W1WMAC1ZTEST
Onevent INIT_AREA Call D_CUR(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_CUR(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_CUR(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_CUR From W1WMAC1ZTEST
Return

$AV_CUR
## Action STD
Call AV_CUR(zc) From SUBGA0
Gosub _AFF
Return

Subprog D_CUR(VALEUR)
Variable Char    VALEUR()
If varinit([M]CUR,indice)=0
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"CUR") From TRTGAS
 ## Action STD
 Call D_CUR(VALEUR) From SUBGA0
Endif
Gosub _AFF
End

Subprog AS_CUR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3837,GBOUT1) From OBJDIV
Call TEXTE(17412,GBOUT2) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action FLDAVTCAR
Call FLDAVTCAR(VALEUR,"CUR") From TRTGAS
If mkstat=2
 [M]CUR(INDIC) = VALEUR
 Affzo CUR(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CUR(VALEUR) From SUBGA0
 If mkstat=2
  [M]CUR(INDIC) = VALEUR
  Affzo CUR(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_CUR(zc) From W1WMAC1ZTEST
 Onkey 130 Titled GBOUT2 Call B2_CUR(zc) From W1WMAC1ZTEST
 Onkey   2 Titled GBOUTS Call S_CUR(zc) From W1WMAC1ZTEST
 Onkey 144 Titled GBOUTP Call P_CUR(zc) From W1WMAC1ZTEST
 Onkey 146 Titled GBOUTA Call SA_CUR(zc) From W1WMAC1ZTEST
Endif
Gosub _AFF
End

Subprog C_CUR(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 323 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("TCU","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 323 : Endif
 If !mkstat
  ## Action FLDCTLCAR
  Call FLDCTLCAR(VALEUR,"CUR") From TRTGAS
  If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 323 : Endif
  If !mkstat
   ## Action STD
   Call C_CUR(VALEUR) From SUBGA0
   If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 323 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CUR
Call AM_CUR(zc)
If !mkstat & GOBJET
 zoncou = "CUR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CUR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CUR(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 323 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZCUR)")>indice
 [M]CUR(indice) = VALEUR
 Affzo ZCUR(indice)
Endif
Gosub _AFF
End

Subprog S_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TCU"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CUR(VALEUR)
Variable Char    VALEUR()
Call OBJET("TCU",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B2_CUR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIRATCUR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIRATCUR"
 PARMSK(1) = VALEUR
 PARMSK(2) = [M]CPY
 PARMSK(3) = num$([M]TYPRAT)
 PARMSK(4) = [M]RATDAT
 PARMSK(5) = "[M:HAEF]RATMLTC"
 PARMSK(6) = "[M:HAEF]RATDIVC"
 Call SAISIE_CHAR(VALEUR,PARMSK,"DSAICUR","SUBSCL","SPESCL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TCU"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TCU",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCUR
Onevent BEFORE_AREA Gosub AV_ZCUR From W1WMAC1ZTEST
Return

$AV_ZCUR
Call LECTEXTRA(zc,"TABCUR","INTSHO",num$([M]CUR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_RAT1
Onevent BEFORE_INPUT Call AS_RAT1(zc) From W1WMAC1ZTEST
Onevent INIT_AREA Call D_RAT1(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_RAT1(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_RAT1 From W1WMAC1ZTEST
Return

Subprog D_RAT1(VALEUR)
Variable Decimal VALEUR
If varinit([M]RAT1,indice)=0
 ## Action FLDDEFDCB
 Call FLDDEFDCB(VALEUR,"DIV"+num$(indice)) From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_RAT1(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(694,GBOUT2) From OBJDIV
Call TEXTE(17412,GBOUT3) From OBJDIV
If !GWEBSERV
 ## Action ARCUINI
 Call RCUINI(VALEUR,[M:HAE1]CURMLT(indice),[M:HAE1]CURDIV(indice)) From AINICOURS
 If mkstat=2
  [M]RAT1(INDIC) = VALEUR
  Affzo RAT1(INDIC) : mkstat = 2
 Endif
Endif
If !mkstat
 ## Action FLDAVTDCB
 Call FLDAVTDCB(VALEUR,"DIV"+num$(indice)) From TRTGAS
 If mkstat=2
  [M]RAT1(INDIC) = VALEUR
  Affzo RAT1(INDIC) : mkstat = 2
 Endif
 If !mkstat
  ## Action STD
  Call AS_RAT1(VALEUR) From SUBGA0
  If mkstat=2
   [M]RAT1(INDIC) = VALEUR
   Affzo RAT1(INDIC) : mkstat = 2
  Endif
  Onkey 130 Titled GBOUT2 Call B2_RAT1(zc) From W1WMAC1ZTEST
  Onkey 131 Titled GBOUT3 Call B3_RAT1(zc) From W1WMAC1ZTEST
 Endif
Endif
Gosub _AFF
End

Subprog C_RAT1(VALEUR)
Variable Decimal VALEUR
## Action FLDCTLDCB
Call FLDCTLDCB(VALEUR,"DIV"+num$(indice)) From TRTGAS
If mkstat : GERR = 1 : GZONE = "RAT1" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_RAT1
Call AM_RAT1(zc)
If !mkstat & GOBJET
 zoncou = "RAT1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RAT1(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_RAT1(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "RAT1" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B2_RAT1(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action AINICOURS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AINICOURS"
 PARMSK(1) = [M:HAE1]CURMLT(indice)
 PARMSK(2) = [M:HAE1]CURDIV(indice)
 PARMSK(3) = [M]CPY
 PARMSK(4) = num$([M:HAE1]TYPRAT)
 PARMSK(5) = [M:HAE1]RATDAT
 PARMSK(6) = "2"
 PARMSK(7) = "[M:HAE1]RAT2(indice)"
 Call S_AFF_NUM(VALEUR,PARMSK,"AINICOURS","AINICOURS","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_RAT1(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SAIRATCUR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIRATCUR"
 PARMSK(1) = [M]CUR
 PARMSK(2) = [M]CPY
 PARMSK(3) = num$([M]TYPRAT)
 PARMSK(4) = [M:HAE1]RATDAT
 PARMSK(5) = "[M:HAEF]RATMLTC"
 PARMSK(6) = "[M:HAEF]RATDIVC"
 Call SAISIE_NUM(VALEUR,PARMSK,"DSAICUR","SUBSCL","SPESCL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CURDIV
Return

$ON_RAT2
Onevent BEFORE_INPUT Call AS_RAT2(zc) From W1WMAC1ZTEST
Onevent INIT_AREA Call D_RAT2(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_RAT2(zc) From W1WMAC1ZTEST
Onevent AFTER_CHANGE Gosub AMM_RAT2 From W1WMAC1ZTEST
Return

Subprog D_RAT2(VALEUR)
Variable Decimal VALEUR
If varinit([M]RAT2,indice)=0
 ## Action FLDDEFDCB
 Call FLDDEFDCB(VALEUR,"MLT"+num$(indice)) From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_RAT2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(694,GBOUT2) From OBJDIV
Call TEXTE(17412,GBOUT3) From OBJDIV
If !GWEBSERV
 ## Action ARCUINI
 Call RCUINI(VALEUR,[M:HAE1]CURMLT(indice),[M:HAE1]CURDIV(indice)) From AINICOURS
 If mkstat=2
  [M]RAT2(INDIC) = VALEUR
  Affzo RAT2(INDIC) : mkstat = 2
 Endif
Endif
If !mkstat
 ## Action FLDAVTDCB
 Call FLDAVTDCB(VALEUR,"MLT"+num$(indice)) From TRTGAS
 If mkstat=2
  [M]RAT2(INDIC) = VALEUR
  Affzo RAT2(INDIC) : mkstat = 2
 Endif
 If !mkstat
  ## Action STD
  Call AS_RAT2(VALEUR) From SUBGA0
  If mkstat=2
   [M]RAT2(INDIC) = VALEUR
   Affzo RAT2(INDIC) : mkstat = 2
  Endif
  Onkey 130 Titled GBOUT2 Call B2_RAT2(zc) From W1WMAC1ZTEST
  Onkey 131 Titled GBOUT3 Call B3_RAT2(zc) From W1WMAC1ZTEST
 Endif
Endif
Gosub _AFF
End

Subprog C_RAT2(VALEUR)
Variable Decimal VALEUR
## Action FLDCTLDCB
Call FLDCTLDCB(VALEUR,"MLT"+num$(indice)) From TRTGAS
If mkstat : GERR = 1 : GZONE = "RAT2" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_RAT2
Call AM_RAT2(zc)
If !mkstat & GOBJET
 zoncou = "RAT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_RAT2(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_RAT2(VALEUR) From SUBGA0
If mkstat : GERR = 1 : GZONE = "RAT2" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog B2_RAT2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action AINICOURS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AINICOURS"
 PARMSK(1) = [M:HAE1]CURMLT(indice)
 PARMSK(2) = [M:HAE1]CURDIV(indice)
 PARMSK(3) = [M]CPY
 PARMSK(4) = num$([M:HAE1]TYPRAT)
 PARMSK(5) = [M:HAE1]RATDAT
 PARMSK(6) = "1"
 PARMSK(7) = "[M:HAE1]RAT1(indice)"
 Call S_AFF_NUM(VALEUR,PARMSK,"AINICOURS","AINICOURS","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_RAT2(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SAIRATCUR
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIRATCUR"
 PARMSK(1) = [M]CUR
 PARMSK(2) = [M]CPY
 PARMSK(3) = num$([M]TYPRAT)
 PARMSK(4) = [M:HAE1]RATDAT
 PARMSK(5) = "[M:HAEF]RATMLTC"
 PARMSK(6) = "[M:HAEF]RATDIVC"
 Call SAISIE_NUM(VALEUR,PARMSK,"DSAICUR","SUBSCL","SPESCL") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CURMLT
Return

$ON_DUDDAT
Onevent INIT_AREA Call D_DUDDAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_DUDDAT(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_DUDDAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_AREA Gosub AV_DUDDAT From W1WMAC1ZTEST
Return

$AV_DUDDAT
Chgfmt [M]DUDDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_DUDDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]DUDDAT,indice)=0
 ## Action FLDDEFDAT
 Call FLDDEFDAT(VALEUR,"DDUD") From TRTGAS
 ## Action STD
 Call D_DUDDAT(VALEUR) From SUBGA0
Endif
Gosub _AFF
End

Subprog AS_DUDDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PCEDEF
If [M]STA>1 & (GREP="M" | GREP="")  & func AFNC.PARAM("FRADGI",[M]CPY)="2": mkstat = 2  : Endif : # Définitif
If mkstat=2
 [M]DUDDAT(INDIC) = VALEUR
 Affzo DUDDAT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action FLDAVTDAT
 Call FLDAVTDAT(VALEUR,"DDUD") From TRTGAS
 If mkstat=2
  [M]DUDDAT(INDIC) = VALEUR
  Affzo DUDDAT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_DUDDAT(VALEUR)
Variable Date    VALEUR
## Action FLDCTLDAT
Call FLDCTLDAT(VALEUR,"DDUD") From TRTGAS
If mkstat : GERR = 1 : GZONE = "DUDDAT" : GZNUM = 24845 : Endif
Gosub _AFF
End

$ON_REF
Onevent INIT_AREA Call D_REF(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_REF(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_REF(zc) From W1WMAC1ZTEST
Return

Subprog D_REF(VALEUR)
Variable Char    VALEUR()
If varinit([M]REF,indice)=0
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"REF") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_REF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PCEDEF
If [M]STA>1 & (GREP="M" | GREP="")  & func AFNC.PARAM("FRADGI",[M]CPY)="2": mkstat = 2  : Endif : # Définitif
If mkstat=2
 [M]REF(INDIC) = VALEUR
 Affzo REF(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action FLDAVTCAR
 Call FLDAVTCAR(VALEUR,"REF") From TRTGAS
 If mkstat=2
  [M]REF(INDIC) = VALEUR
  Affzo REF(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_REF(VALEUR)
Variable Char    VALEUR()
## Action FLDCTLCAR
Call FLDCTLCAR(VALEUR,"REF") From TRTGAS
If mkstat : GERR = 1 : GZONE = "REF" : GZNUM = 1371 : Endif
Gosub _AFF
End

$ON_RVS
Onevent INIT_AREA Call D_RVS(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_RVS(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_RVS(zc) From W1WMAC1ZTEST
Return

Subprog D_RVS(VALEUR)
Variable Integer VALEUR
If varinit([M]RVS,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_RVS(VALEUR) From SUBGA0
 ## Action FLDDEFINT
 Call FLDDEFINT(VALEUR,"RVS") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_RVS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(619) From COMBOS
## Action FLDAVTINT
Call FLDAVTINT(VALEUR,"RVS") From TRTGAS
If mkstat=2
 [M]RVS(INDIC) = VALEUR
 Affzo RVS(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_RVS(VALEUR) From SUBGA0
 If mkstat=2
  [M]RVS(INDIC) = VALEUR
  Affzo RVS(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,619,1))))
 Endif
 If !mkstat
  Discombo 0 From RVS(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From RVS(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_RVS(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "RVS" : GZNUM = 4976 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action FLDCTLINT
 Call FLDCTLINT(VALEUR,"RVS") From TRTGAS
 If mkstat : GERR = 1 : GZONE = "RVS" : GZNUM = 4976 : Endif
 If !mkstat
  ## Action STD
  Call C_RVS(VALEUR) From SUBGA0
  If mkstat : GERR = 1 : GZONE = "RVS" : GZNUM = 4976 : Endif
 Endif
Endif
Gosub _AFF
End

$ON_RVSDAT
Onevent INIT_AREA Call D_RVSDAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_RVSDAT(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_RVSDAT(zc) From W1WMAC1ZTEST
Onevent BEFORE_AREA Gosub AV_RVSDAT From W1WMAC1ZTEST
Return

$AV_RVSDAT
Chgfmt [M]RVSDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_RVSDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]RVSDAT,indice)=0
 ## Action FLDDEFDAT
 Call FLDDEFDAT(VALEUR,"DRVS") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_RVSDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_RVSDAT(VALEUR) From SUBGA0
If mkstat=2
 [M]RVSDAT(INDIC) = VALEUR
 Affzo RVSDAT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action FLDAVTDAT
 Call FLDAVTDAT(VALEUR,"DRVS") From TRTGAS
 If mkstat=2
  [M]RVSDAT(INDIC) = VALEUR
  Affzo RVSDAT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_RVSDAT(VALEUR)
Variable Date    VALEUR
## Action FLDCTLDAT
Call FLDCTLDAT(VALEUR,"DRVS") From TRTGAS
If mkstat : GERR = 1 : GZONE = "RVSDAT" : GZNUM = 4977 : Endif
If !mkstat
 ## Action STD
 Call C_RVSDAT(VALEUR) From SUBGA0
 If mkstat : GERR = 1 : GZONE = "RVSDAT" : GZNUM = 4977 : Endif
Endif
Gosub _AFF
End

$ON_DESVCR
Onevent INIT_AREA Call D_DESVCR(zc) From W1WMAC1ZTEST
Onevent BEFORE_INPUT Call AS_DESVCR(zc) From W1WMAC1ZTEST
Onevent CONTROL Call C_DESVCR(zc) From W1WMAC1ZTEST
Return

Subprog D_DESVCR(VALEUR)
Variable Char    VALEUR()
If varinit([M]DESVCR,indice)=0
 ## Action FLDDEFCAR
 Call FLDDEFCAR(VALEUR,"LIB") From TRTGAS
Endif
Gosub _AFF
End

Subprog AS_DESVCR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PCEDEF
If [M]STA>1 & (GREP="M" | GREP="")  & func AFNC.PARAM("FRADGI",[M]CPY)="2": mkstat = 2  : Endif : # Définitif
If mkstat=2
 [M]DESVCR(INDIC) = VALEUR
 Affzo DESVCR(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action FLDAVTCAR
 Call FLDAVTCAR(VALEUR,"LIB") From TRTGAS
 If mkstat=2
  [M]DESVCR(INDIC) = VALEUR
  Affzo DESVCR(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_DESVCR(VALEUR)
Variable Char    VALEUR()
## Action FLDCTLCAR
Call FLDCTLCAR(VALEUR,"LIB") From TRTGAS
If mkstat : GERR = 1 : GZONE = "DESVCR" : GZNUM = 6469 : Endif
Gosub _AFF
End

$ON_FLGREP
Onevent INIT_AREA Call D_FLGREP(zc) From W1WMAC1ZTEST
Return

Subprog D_FLGREP(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGREP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPDUD
Onevent INIT_AREA Call D_TYPDUD(zc) From W1WMAC1ZTEST
Return

Subprog D_TYPDUD(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPDUD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LED
Return

$CHG_STY
Gosub CHG_STY From W7WMAC1ZTEST
Return

$TIT_COL
Gosub TIT_COL From W7WMAC1ZTEST
Return


