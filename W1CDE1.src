#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CDE1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:54:10"
A_USER  = "ADMIN"
A_STAMP = "20180827235410"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBRDIE"
  If [M]NBRDIE=0
  Endif
 When "NBLIG"
  If [M]NBLIG=0
   If [M]FMTCCE1<>""
    Chgfmt CCE1 With [M]FMTCCE1
   Else
    Chgfmt CCE1 With "-K:1X"
   Endif
   If [M]FMTCCE2<>""
    Chgfmt CCE2 With [M]FMTCCE2
   Else
    Chgfmt CCE2 With "-K:1X"
   Endif
   If [M]FMTCCE3<>""
    Chgfmt CCE3 With [M]FMTCCE3
   Else
    Chgfmt CCE3 With "-K:1X"
   Endif
   If [M]FMTCCE4<>""
    Chgfmt CCE4 With [M]FMTCCE4
   Else
    Chgfmt CCE4 With "-K:1X"
   Endif
   If [M]FMTCCE5<>""
    Chgfmt CCE5 With [M]FMTCCE5
   Else
    Chgfmt CCE5 With "-K:1X"
   Endif
   If [M]FMTCCE6<>""
    Chgfmt CCE6 With [M]FMTCCE6
   Else
    Chgfmt CCE6 With "-K:1X"
   Endif
   If [M]FMTCCE7<>""
    Chgfmt CCE7 With [M]FMTCCE7
   Else
    Chgfmt CCE7 With "-K:1X"
   Endif
   If [M]FMTCCE8<>""
    Chgfmt CCE8 With [M]FMTCCE8
   Else
    Chgfmt CCE8 With "-K:1X"
   Endif
   If [M]FMTCCE9<>""
    Chgfmt CCE9 With [M]FMTCCE9
   Else
    Chgfmt CCE9 With "-K:1X"
   Endif
   If [M]FMTCCE10<>""
    Chgfmt CCE10 With [M]FMTCCE10
   Else
    Chgfmt CCE10 With "-K:1X"
   Endif
   If [M]FMTCCE11<>""
    Chgfmt CCE11 With [M]FMTCCE11
   Else
    Chgfmt CCE11 With "-K:1X"
   Endif
   If [M]FMTCCE12<>""
    Chgfmt CCE12 With [M]FMTCCE12
   Else
    Chgfmt CCE12 With "-K:1X"
   Endif
   If [M]FMTCCE13<>""
    Chgfmt CCE13 With [M]FMTCCE13
   Else
    Chgfmt CCE13 With "-K:1X"
   Endif
   If [M]FMTCCE14<>""
    Chgfmt CCE14 With [M]FMTCCE14
   Else
    Chgfmt CCE14 With "-K:1X"
   Endif
   If [M]FMTCCE15<>""
    Chgfmt CCE15 With [M]FMTCCE15
   Else
    Chgfmt CCE15 With "-K:1X"
   Endif
   If [M]FMTCCE16<>""
    Chgfmt CCE16 With [M]FMTCCE16
   Else
    Chgfmt CCE16 With "-K:1X"
   Endif
   If [M]FMTCCE17<>""
    Chgfmt CCE17 With [M]FMTCCE17
   Else
    Chgfmt CCE17 With "-K:1X"
   Endif
   If [M]FMTCCE18<>""
    Chgfmt CCE18 With [M]FMTCCE18
   Else
    Chgfmt CCE18 With "-K:1X"
   Endif
   If [M]FMTCCE19<>""
    Chgfmt CCE19 With [M]FMTCCE19
   Else
    Chgfmt CCE19 With "-K:1X"
   Endif
   If [M]FMTCCE20<>""
    Chgfmt CCE20 With [M]FMTCCE20
   Else
    Chgfmt CCE20 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CDE1 [CDE1]
Gosub HORODAT
Local Inpbox "CDE1" From GFONCTION At A_STAMP With A_WINDPREV Mask [CDE1] As [SIM_]
Grizo [CDE1]5
Grizo [CDE1]10
Grizo [CDE1]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [CDE1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=24 : Y1(0)=1 : Y2(0)=11
X1(1)=25 : X2(1)=80 : Y1(1)=1 : Y2(1)=11
X1(2)=1 : X2(2)=80 : Y1(2)=12 : Y2(2)=22
Return

$ON_SHOTRA
Onevent INIT_AREA Call D_SHOTRA(zc) From W1CDE1
Onevent BEFORE_INPUT Call AS_SHOTRA(zc) From W1CDE1
Return

Subprog IB_SHOTRA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_SHOTRA(VALEUR)
Variable Char    VALEUR()
If varinit([M]SHOTRA,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"CACCEDEF","SHOTRA",[M:CDE0]COD,[M:CDE0]CPY) From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_SHOTRA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_SHOTRA(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_SHOTRA(zc) From W1CDE1
Gosub _AFF
End

Subprog B1_SHOTRA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_SHOTRA" : PROGSUB = "SUBCDE" : PROGSPE = "SPECDE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "CACCEDEF"
 PARMSK(2) = "SHOTRA"
 PARMSK(3) = [M:CDE0]COD
 PARMSK(4) = [M:CDE0]CPY
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_SHOTRA" : PROGSUB = "SUBCDE" : PROGSPE = "SPECDE" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_MODULE
Onevent INIT_AREA Call D_MODULE(zc) From W1CDE1
Onevent BEFORE_INPUT Call AS_MODULE(zc) From W1CDE1
Return

Subprog D_MODULE(VALEUR)
Variable Integer VALEUR
If varinit([M]MODULE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MODULE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBRDIE
Onevent BEFORE_LINE Call AVANT_NBRDIE From W1CDE1
Onevent AFTER_LINE Call APRES_NBRDIE From W1CDE1
Onevent BEFORE_INPUT Call AS_NBRDIE From W1CDE1
Return

Subprog AS_NBRDIE
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(29438,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_NBRDIE From W1CDE1
Gosub _AFF
End

Subprog B1_NBRDIE
Local Decimal BASPAG
If !GWEBSERV
 ## Action STD
 Call B1_NBRDIE From SUBCDE
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog AVANT_NBRDIE
Local Decimal BASPAG
## Action STD
Call AVANT_NBRDIE From SUBCDE
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBRDIE
Local Decimal BASPAG
## Action STD
Call APRES_NBRDIE From SUBCDE
If mkstat : End : Endif
Gosub _AFF
End

$ON_DIE
Onevent CONTROL Call C_DIE(zc) From W1CDE1
Onevent AFTER_CHANGE Gosub AMM_DIE From W1CDE1
Onevent BEFORE_INPUT Call AS_DIE(zc) From W1CDE1
Return

Subprog AS_DIE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(6829,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DIE(zc) From W1CDE1
Onkey   2 Titled GBOUTS Call S_DIE(zc) From W1CDE1
Onkey 144 Titled GBOUTP Call P_DIE(zc) From W1CDE1
Onkey 146 Titled GBOUTA Call SA_DIE(zc) From W1CDE1
Gosub _AFF
End

Subprog C_DIE(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DIE" : GZNUM = 3984 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("DIE","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "DIE" : GZNUM = 3984 : Endif
 If !mkstat
  ## Action STD
  Call C_DIE(VALEUR) From SUBCDE
  If mkstat : GERR = 1 : GZONE = "DIE" : GZNUM = 3984 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_DIE
Call AM_DIE(zc)
If !mkstat & GOBJET
 zoncou = "DIE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DIE(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_DIE(VALEUR) From SUBCDE
If mkstat : GERR = 1 : GZONE = "DIE" : GZNUM = 3984 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZDIE)")>indice
 [M]DIE(indice) = VALEUR
 Affzo ZDIE(indice)
Endif
Gosub _AFF
End

Subprog S_DIE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJCRIT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJCRIT"
 PARMSK(1) = "DIE"
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = "!find(DIE,[M]DIE(0..dim([M]DIE)-1))"
 PARMSK(5) = "([M]CPY='' | find(DIE,[M:CDE0]DIELIST(0..dim([M:CDE0]DIELIST)-1)))"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJCRIT","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_DIE(VALEUR)
Variable Char    VALEUR()
Call OBJET("DIE",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_DIE(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "DIE"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_DIE(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("DIE",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZDIE
Onevent BEFORE_AREA Gosub AV_ZDIE From W1CDE1
Return

$AV_ZDIE
Call LECTEXTRA(zc,"GDIE","DESTRA",num$([M]DIE(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_NUMLIG
Onevent BEFORE_AREA Gosub AV_NUMLIG From W1CDE1
Return

$AV_NUMLIG
zc = nolign
Gosub _AFF
Return

$ON_CCE1
Onevent BEFORE_INPUT Call AS_CCE1(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE1(zc) From W1CDE1
Onevent CONTROL Call C_CCE1(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE1 From W1CDE1
Return

$AV_CCE1
If [M]FMTCCE1<>""
 Chgfmt [M]CCE1(indice) With [M]FMTCCE1
Else
 Chgfmt [M]CCE1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE1(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE1(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE1(INDIC) = VALEUR
 Affzo CCE1(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE1(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE1(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE1(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE2
Onevent BEFORE_INPUT Call AS_CCE2(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE2(zc) From W1CDE1
Onevent CONTROL Call C_CCE2(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE2 From W1CDE1
Return

$AV_CCE2
If [M]FMTCCE2<>""
 Chgfmt [M]CCE2(indice) With [M]FMTCCE2
Else
 Chgfmt [M]CCE2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE2(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE2(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE2(INDIC) = VALEUR
 Affzo CCE2(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE2(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE2(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE2(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE3
Onevent BEFORE_INPUT Call AS_CCE3(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE3(zc) From W1CDE1
Onevent CONTROL Call C_CCE3(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE3 From W1CDE1
Return

$AV_CCE3
If [M]FMTCCE3<>""
 Chgfmt [M]CCE3(indice) With [M]FMTCCE3
Else
 Chgfmt [M]CCE3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE3(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE3,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE3(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE3(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE3(INDIC) = VALEUR
 Affzo CCE3(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE3(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE3(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE3(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE4
Onevent BEFORE_INPUT Call AS_CCE4(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE4(zc) From W1CDE1
Onevent CONTROL Call C_CCE4(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE4 From W1CDE1
Return

$AV_CCE4
If [M]FMTCCE4<>""
 Chgfmt [M]CCE4(indice) With [M]FMTCCE4
Else
 Chgfmt [M]CCE4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE4(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE4,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE4(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE4(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE4(INDIC) = VALEUR
 Affzo CCE4(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE4(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE4(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE4(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE5
Onevent BEFORE_INPUT Call AS_CCE5(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE5(zc) From W1CDE1
Onevent CONTROL Call C_CCE5(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE5 From W1CDE1
Return

$AV_CCE5
If [M]FMTCCE5<>""
 Chgfmt [M]CCE5(indice) With [M]FMTCCE5
Else
 Chgfmt [M]CCE5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE5(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE5,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE5(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE5(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE5(INDIC) = VALEUR
 Affzo CCE5(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE5(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE5(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE5(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE6
Onevent BEFORE_INPUT Call AS_CCE6(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE6(zc) From W1CDE1
Onevent CONTROL Call C_CCE6(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE6 From W1CDE1
Return

$AV_CCE6
If [M]FMTCCE6<>""
 Chgfmt [M]CCE6(indice) With [M]FMTCCE6
Else
 Chgfmt [M]CCE6(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE6(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE6,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE6(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE6(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE6(INDIC) = VALEUR
 Affzo CCE6(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE6(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE6(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE6(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE7
Onevent BEFORE_INPUT Call AS_CCE7(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE7(zc) From W1CDE1
Onevent CONTROL Call C_CCE7(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE7 From W1CDE1
Return

$AV_CCE7
If [M]FMTCCE7<>""
 Chgfmt [M]CCE7(indice) With [M]FMTCCE7
Else
 Chgfmt [M]CCE7(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE7(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE7,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE7(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE7(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE7(INDIC) = VALEUR
 Affzo CCE7(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE7(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE7(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE7(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE8
Onevent BEFORE_INPUT Call AS_CCE8(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE8(zc) From W1CDE1
Onevent CONTROL Call C_CCE8(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE8 From W1CDE1
Return

$AV_CCE8
If [M]FMTCCE8<>""
 Chgfmt [M]CCE8(indice) With [M]FMTCCE8
Else
 Chgfmt [M]CCE8(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE8(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE8,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE8(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE8(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE8(INDIC) = VALEUR
 Affzo CCE8(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE8(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE8(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE8(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE9
Onevent BEFORE_INPUT Call AS_CCE9(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE9(zc) From W1CDE1
Onevent CONTROL Call C_CCE9(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE9 From W1CDE1
Return

$AV_CCE9
If [M]FMTCCE9<>""
 Chgfmt [M]CCE9(indice) With [M]FMTCCE9
Else
 Chgfmt [M]CCE9(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE9(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE9,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE9(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE9(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE9(INDIC) = VALEUR
 Affzo CCE9(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE9(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE9(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE9(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE10
Onevent BEFORE_INPUT Call AS_CCE10(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE10(zc) From W1CDE1
Onevent CONTROL Call C_CCE10(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE10 From W1CDE1
Return

$AV_CCE10
If [M]FMTCCE10<>""
 Chgfmt [M]CCE10(indice) With [M]FMTCCE10
Else
 Chgfmt [M]CCE10(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE10(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE10,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE10(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE10(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE10(INDIC) = VALEUR
 Affzo CCE10(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE10(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE10(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE10(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE11
Onevent BEFORE_INPUT Call AS_CCE11(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE11(zc) From W1CDE1
Onevent CONTROL Call C_CCE11(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE11 From W1CDE1
Return

$AV_CCE11
If [M]FMTCCE11<>""
 Chgfmt [M]CCE11(indice) With [M]FMTCCE11
Else
 Chgfmt [M]CCE11(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE11(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE11,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE11(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE11(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE11(INDIC) = VALEUR
 Affzo CCE11(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE11(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE11(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE11(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE12
Onevent BEFORE_INPUT Call AS_CCE12(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE12(zc) From W1CDE1
Onevent CONTROL Call C_CCE12(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE12 From W1CDE1
Return

$AV_CCE12
If [M]FMTCCE12<>""
 Chgfmt [M]CCE12(indice) With [M]FMTCCE12
Else
 Chgfmt [M]CCE12(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE12(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE12,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE12(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE12(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE12(INDIC) = VALEUR
 Affzo CCE12(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE12(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE12(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE12(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE13
Onevent BEFORE_INPUT Call AS_CCE13(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE13(zc) From W1CDE1
Onevent CONTROL Call C_CCE13(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE13 From W1CDE1
Return

$AV_CCE13
If [M]FMTCCE13<>""
 Chgfmt [M]CCE13(indice) With [M]FMTCCE13
Else
 Chgfmt [M]CCE13(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE13(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE13,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE13(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE13(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE13(INDIC) = VALEUR
 Affzo CCE13(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE13(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE13(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE13(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE14
Onevent BEFORE_INPUT Call AS_CCE14(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE14(zc) From W1CDE1
Onevent CONTROL Call C_CCE14(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE14 From W1CDE1
Return

$AV_CCE14
If [M]FMTCCE14<>""
 Chgfmt [M]CCE14(indice) With [M]FMTCCE14
Else
 Chgfmt [M]CCE14(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE14(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE14,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE14(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE14(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE14(INDIC) = VALEUR
 Affzo CCE14(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE14(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE14(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE14(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE15
Onevent BEFORE_INPUT Call AS_CCE15(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE15(zc) From W1CDE1
Onevent CONTROL Call C_CCE15(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE15 From W1CDE1
Return

$AV_CCE15
If [M]FMTCCE15<>""
 Chgfmt [M]CCE15(indice) With [M]FMTCCE15
Else
 Chgfmt [M]CCE15(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE15(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE15,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE15(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE15(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE15(INDIC) = VALEUR
 Affzo CCE15(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE15(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE15(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE15(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE16
Onevent BEFORE_INPUT Call AS_CCE16(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE16(zc) From W1CDE1
Onevent CONTROL Call C_CCE16(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE16 From W1CDE1
Return

$AV_CCE16
If [M]FMTCCE16<>""
 Chgfmt [M]CCE16(indice) With [M]FMTCCE16
Else
 Chgfmt [M]CCE16(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE16(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE16,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE16(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE16(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE16(INDIC) = VALEUR
 Affzo CCE16(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE16(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE16(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE16(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE17
Onevent BEFORE_INPUT Call AS_CCE17(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE17(zc) From W1CDE1
Onevent CONTROL Call C_CCE17(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE17 From W1CDE1
Return

$AV_CCE17
If [M]FMTCCE17<>""
 Chgfmt [M]CCE17(indice) With [M]FMTCCE17
Else
 Chgfmt [M]CCE17(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE17(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE17,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE17(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE17(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE17(INDIC) = VALEUR
 Affzo CCE17(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE17(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE17(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE17(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE18
Onevent BEFORE_INPUT Call AS_CCE18(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE18(zc) From W1CDE1
Onevent CONTROL Call C_CCE18(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE18 From W1CDE1
Return

$AV_CCE18
If [M]FMTCCE18<>""
 Chgfmt [M]CCE18(indice) With [M]FMTCCE18
Else
 Chgfmt [M]CCE18(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE18(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE18,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE18(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE18(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE18(INDIC) = VALEUR
 Affzo CCE18(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE18(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE18(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE18(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE19
Onevent BEFORE_INPUT Call AS_CCE19(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE19(zc) From W1CDE1
Onevent CONTROL Call C_CCE19(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE19 From W1CDE1
Return

$AV_CCE19
If [M]FMTCCE19<>""
 Chgfmt [M]CCE19(indice) With [M]FMTCCE19
Else
 Chgfmt [M]CCE19(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE19(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE19,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE19(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE19(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE19(INDIC) = VALEUR
 Affzo CCE19(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE19(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE19(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE19(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_CCE20
Onevent BEFORE_INPUT Call AS_CCE20(zc) From W1CDE1
Onevent INIT_AREA Call D_CCE20(zc) From W1CDE1
Onevent CONTROL Call C_CCE20(zc) From W1CDE1
Onevent BEFORE_AREA Gosub AV_CCE20 From W1CDE1
Return

$AV_CCE20
If [M]FMTCCE20<>""
 Chgfmt [M]CCE20(indice) With [M]FMTCCE20
Else
 Chgfmt [M]CCE20(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog D_CCE20(VALEUR)
Variable Integer VALEUR
If varinit([M]CCE20,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CCE20(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(693) From COMBOS
## Action STD
Call AS_CCE20(VALEUR) From SUBCDE
If mkstat=2
 [M]CCE20(INDIC) = VALEUR
 Affzo CCE20(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,693,1))))
Endif
If !mkstat
 Discombo 0 From CCE20(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CCE20(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CCE20(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_ODIE
Return

$ON_FMTCCE1
Onevent INIT_AREA Call D_FMTCCE1(zc) From W1CDE1
Return

Subprog D_FMTCCE1(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE1,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE2
Onevent INIT_AREA Call D_FMTCCE2(zc) From W1CDE1
Return

Subprog D_FMTCCE2(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE2,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE3
Onevent INIT_AREA Call D_FMTCCE3(zc) From W1CDE1
Return

Subprog D_FMTCCE3(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE3,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE4
Onevent INIT_AREA Call D_FMTCCE4(zc) From W1CDE1
Return

Subprog D_FMTCCE4(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE4,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE5
Onevent INIT_AREA Call D_FMTCCE5(zc) From W1CDE1
Return

Subprog D_FMTCCE5(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE5,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE6
Onevent INIT_AREA Call D_FMTCCE6(zc) From W1CDE1
Return

Subprog D_FMTCCE6(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE6,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE7
Onevent INIT_AREA Call D_FMTCCE7(zc) From W1CDE1
Return

Subprog D_FMTCCE7(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE7,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE8
Onevent INIT_AREA Call D_FMTCCE8(zc) From W1CDE1
Return

Subprog D_FMTCCE8(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE8,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE9
Onevent INIT_AREA Call D_FMTCCE9(zc) From W1CDE1
Return

Subprog D_FMTCCE9(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE9,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE10
Onevent INIT_AREA Call D_FMTCCE10(zc) From W1CDE1
Return

Subprog D_FMTCCE10(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE10,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE11
Onevent INIT_AREA Call D_FMTCCE11(zc) From W1CDE1
Return

Subprog D_FMTCCE11(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE11,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE12
Onevent INIT_AREA Call D_FMTCCE12(zc) From W1CDE1
Return

Subprog D_FMTCCE12(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE12,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE13
Onevent INIT_AREA Call D_FMTCCE13(zc) From W1CDE1
Return

Subprog D_FMTCCE13(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE13,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE14
Onevent INIT_AREA Call D_FMTCCE14(zc) From W1CDE1
Return

Subprog D_FMTCCE14(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE14,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE15
Onevent INIT_AREA Call D_FMTCCE15(zc) From W1CDE1
Return

Subprog D_FMTCCE15(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE15,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE16
Onevent INIT_AREA Call D_FMTCCE16(zc) From W1CDE1
Return

Subprog D_FMTCCE16(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE16,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE17
Onevent INIT_AREA Call D_FMTCCE17(zc) From W1CDE1
Return

Subprog D_FMTCCE17(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE17,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE18
Onevent INIT_AREA Call D_FMTCCE18(zc) From W1CDE1
Return

Subprog D_FMTCCE18(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE18,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE19
Onevent INIT_AREA Call D_FMTCCE19(zc) From W1CDE1
Return

Subprog D_FMTCCE19(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE19,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$ON_FMTCCE20
Onevent INIT_AREA Call D_FMTCCE20(zc) From W1CDE1
Return

Subprog D_FMTCCE20(VALEUR)
Variable Char    VALEUR()
If varinit([M]FMTCCE20,indice)=0
 VALEUR = "-K:10X"
Endif
Gosub _AFF
End

$CHG_STY
Return


