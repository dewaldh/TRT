#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management IDP1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:03:13"
A_USER  = "ADMIN"
A_STAMP = "20180828000313"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBRLED"
  If [M]NBRLED=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask IDP1 [IDP1]
Gosub HORODAT
Local Inpbox "IDP1" From GFONCTION At A_STAMP With A_WINDPREV Mask [IDP1] As [SIM_]
Grizo [IDP1]10
Grizo [IDP1]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [IDP1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=74 : Y1(1)=4 : Y2(1)=28
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1IDP1
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1IDP1
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1IDP1
Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1IDP1
Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1IDP1
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action ACONTCPY
 Call CONTSOC(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CPY","A",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = "A"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_TYP
Onevent INIT_AREA Call D_TYP(zc) From W1IDP1
Onevent BEFORE_INPUT Call AS_TYP(zc) From W1IDP1
Return

Subprog D_TYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GCM
Return

$ON_LEDTYP
Onevent INIT_AREA Call D_LEDTYP(zc) From W1IDP1
Return

Subprog D_LEDTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]LEDTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ACCDACFLG
Onevent BEFORE_INPUT Call AS_ACCDACFLG(zc) From W1IDP1
Onevent INIT_AREA Call D_ACCDACFLG(zc) From W1IDP1
Return

Subprog D_ACCDACFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ACCDACFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ACCDACFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ACCDACFLG(VALEUR) From SUBIDP
If mkstat=2
 [M]ACCDACFLG(INDIC) = VALEUR
 Affzo ACCDACFLG(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DAC
Onevent BEFORE_INPUT Call AS_DAC(zc) From W1IDP1
Onevent CONTROL Call C_DAC(zc) From W1IDP1
Return

Subprog AS_DAC(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DAC(VALEUR) From SUBIDP
If mkstat=2
 [M]DAC(INDIC) = VALEUR
 Affzo DAC(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DAC(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DAC(VALEUR) From SUBIDP
If mkstat : GERR = 1 : GZONE = "DAC" : GZNUM = 5626 : Endif
Gosub _AFF
End

$CHG_STY
Return


