#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHSQUOTE SQUOTE
# 2018-08-27 12:49:19 123

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","SQUOTE","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SQUOTE [SQH]
If filinfo(filpath("FIL","SQUOTED","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SQUOTED [SQD]
If filinfo(filpath("FIL","SVCRVAT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SVCRVAT [SVV]
If filinfo(filpath("FIL","SVCRFOOT","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File SVCRFOOT [SVF]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CALSQD]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CALSVF]
Local File SQUOTE [SQH_]
Local Char KEY_SQH(120)(1..3)
Local Char KEY_SQD(120)(1..3)
Local Char KEY_SVV(120)(1..3)
Local Char KEY_SVF(120)(1..3)
Local Char KEY_CALSQD(120)(1..3)
Local Char KEY_CALSVF(120)(1..3)
#Empty keys :
KEY_SQH(3) = ""
KEY_SQD(3) = "+0"
KEY_SVV(3) = "0++"
KEY_SVF(3) = "0++0"
KEY_CALSQD(3) = "+0++0+0++0"
KEY_CALSVF(3) = "+0++0+0++0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [SQH]
LogicClose File [SQD]
LogicClose File [SVV]
LogicClose File [SVF]
LogicClose File [CALSQD]
LogicClose File [CALSVF]
LogicClose File [SQH_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [SQH] With
& [SQD]SQD0~=[F:SQH]SQHNUM,
& [SVV]SVV0=1;[F:SQH]SQHNUM,
& [SVF]SVF1=1;[F:SQH]SQHNUM,
& [CALSQD]CAL0="SQD";0;[F:SQD]SQHNUM;[F:SQD]SQDLIN;0;"";1,
& [CALSVF]CAL0="SVF";[F:SVF]VCRTYP;[F:SVF]VCRNUM;0;[F:SVF]DTA;"";1
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [SQH] With
& [SQD]SQD0~=[F:SQH]SQHNUM,
& [SVV]SVV0=1;[F:SQH]SQHNUM,
& [SVF]SVF1=1;[F:SQH]SQHNUM,
& [CALSQD]CAL0="SQD";0;[F:SQD]SQHNUM;[F:SQD]SQDLIN;0;"";1,
& [CALSVF]CAL0="SVF";[F:SVF]VCRTYP;[F:SVF]VCRNUM;0;[F:SVF]DTA;"";1
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_SQH(2) = [F:SQH]SQHNUM
KEY_SQD(2) = [F:SQD]SQHNUM+"+"+num$([F:SQD]SQDLIN)
KEY_SVV(2) = num$([F:SVV]VCRTYP)+"+"+[F:SVV]VCRNUM+"+"+[F:SVV]VAT
KEY_SVF(2) = num$([F:SVF]VCRTYP)+"+"+[F:SVF]VCRNUM+"+"+num$([F:SVF]DTA)
KEY_CALSQD(2) = [F:CALSQD]ABRFIC+"+"+num$([F:CALSQD]VCRTYP)+"+"+[F:CALSQD]VCRNUM+"+"+num$([F:CALSQD]VCRLIN)+"+"+num$([F:CALSQD]VCRSEQ)+"+"+[F:CALSQD]CPLCLE+"+"+num$([F:CALSQD]ANALIG)
KEY_CALSVF(2) = [F:CALSVF]ABRFIC+"+"+num$([F:CALSVF]VCRTYP)+"+"+[F:CALSVF]VCRNUM+"+"+num$([F:CALSVF]VCRLIN)+"+"+num$([F:CALSVF]VCRSEQ)+"+"+[F:CALSVF]CPLCLE+"+"+num$([F:CALSVF]ANALIG)

If (KEY_SQH(2) <> KEY_SQH(3)) & (KEY_SQH(1) <> KEY_SQH(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_SQUOTE(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:SQH]
FINS = 1
Local Integer BPCNAM_MAX:BPCNAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:SQH]BPCNAM)-1
 Break ([F:SQH]BPCNAM(CI1)="")
 BPCNAM_MAX+=1
 #Create a new instance
 INS.C_BPCNAM(CJ1) = NewInstance C_SQUOTE_C_BPCNAM(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_BPCNAM(CJ1).setaccessorEnabled = 0
 INS.C_BPCNAM(CJ1).BPCNAM=[F:SQH]BPCNAM(CI1)
 CJ1+=1
Next CI1
Local Integer BPDNAM_MAX:BPDNAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:SQH]BPDNAM)-1
 Break ([F:SQH]BPDNAM(CI1)="")
 BPDNAM_MAX+=1
 #Create a new instance
 INS.C_BPDNAM(CJ1) = NewInstance C_SQUOTE_C_BPDNAM(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_BPDNAM(CJ1).setaccessorEnabled = 0
 INS.C_BPDNAM(CJ1).BPDNAM=[F:SQH]BPDNAM(CI1)
 CJ1+=1
Next CI1
Local Integer REP_MAX:REP_MAX0
CJ1=1
For CI1 = 0 To dim([F:SQH]REP)-1
 Break ([F:SQH]REP(CI1)="")
 REP_MAX+=1
 #Create a new instance
 INS.C_REP(CJ1) = NewInstance C_SQUOTE_C_REP(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.C_REP(CJ1).setaccessorEnabled = 0
 INS.C_REP(CJ1).REP=[F:SQH]REP(CI1)
 CJ1+=1
Next CI1
 KEY_SQH(1) = KEY_SQH(2)
Endif : # KEY_SQH(1) <> KEY_SQH(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"SQHNUM":'          +'"'+escJson(INS.SQHNUM)+'"'
Append ASND.DATA ,',"SQHTYP":'         +'"'+escJson(INS.SQHTYP)+'"'
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"CPYCUR":'         +'"'+escJson(INS.CPYCUR)+'"'
Append ASND.DATA ,',"SALFCY":'         +'"'+escJson(INS.SALFCY)+'"'
Append ASND.DATA ,',"BPCORD":'         +'"'+escJson(INS.BPCORD)+'"'
Append ASND.DATA ,',"CUSQUOREF":'      +'"'+escJson(INS.CUSQUOREF)+'"'
Append ASND.DATA ,',"VLYDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.VLYDAT)
Append ASND.DATA ,',"BPCNAM1":'        +'"'+escJson(INS.BPCNAM1)+'"'
Append ASND.DATA ,',"BPCNAM2":'        +'"'+escJson(INS.BPCNAM2)+'"'
Append ASND.DATA ,',"BPCPOSCOD":'      +'"'+escJson(INS.BPCPOSCOD)+'"'
Append ASND.DATA ,',"BPCCRY":'         +'"'+escJson(INS.BPCCRY)+'"'
Append ASND.DATA ,',"CNCNAM":'         +'"'+escJson(INS.CNCNAM)+'"'
Append ASND.DATA ,',"BPDNAM1":'        +'"'+escJson(INS.BPDNAM1)+'"'
Append ASND.DATA ,',"BPDNAM2":'        +'"'+escJson(INS.BPDNAM2)+'"'
Append ASND.DATA ,',"BPDPOSCOD":'      +'"'+escJson(INS.BPDPOSCOD)+'"'
Append ASND.DATA ,',"BPDCRY":'         +'"'+escJson(INS.BPDCRY)+'"'
Append ASND.DATA ,',"CNDNAM":'         +'"'+escJson(INS.CNDNAM)+'"'
Append ASND.DATA ,',"BPIEECNUM":'      +'"'+escJson(INS.BPIEECNUM)+'"'
Append ASND.DATA ,',"REP1":'           +'"'+escJson(INS.REP1)+'"'
Append ASND.DATA ,',"REP2":'           +'"'+escJson(INS.REP2)+'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"PJT":'            +'"'+escJson(INS.PJT)+'"'
Append ASND.DATA ,',"LAN":'            +'"'+escJson(INS.LAN)+'"'
Append ASND.DATA ,',"STOFCY":'         +'"'+escJson(INS.STOFCY)+'"'
Append ASND.DATA ,',"DEP":'            +'"'+escJson(INS.DEP)+'"'
Append ASND.DATA ,',"DEP_LEG":'        +'"'+escJson(INS.DEP_LEG)+'"'
Append ASND.DATA ,',"PTE":'            +'"'+escJson(INS.PTE)+'"'
Append ASND.DATA ,',"SOHNUM":'         +'"'+escJson(INS.SOHNUM)+'"'

if(INS.QUOSTA) = 2
 Append ASND.DATA , ',"QUOSTA":'         +"true"
else
 Append ASND.DATA , ',"QUOSTA":'         +"false"
endif
Append ASND.DATA ,',"PRFNUM":'         +'"'+escJson(INS.PRFNUM)+'"'
Append ASND.DATA ,',"ICTCTY_POS":'     +'"'+escJson(INS.ICTCTY_POS)+'"'
Append ASND.DATA ,',"FFWNUM":'         +'"'+escJson(INS.FFWNUM)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"CREDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.CREDAT)
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,',"UPDDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.UPDDAT)
IS1=""
CJ1=1
Append ASND.DATA ,',"C_BPCNAM":['
For CI1=1 To BPCNAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPCNAM":'          +'"'+escJson(INS.C_BPCNAM(CJ1).BPCNAM)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"C_BPDNAM":['
For CI1=1 To BPDNAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"BPDNAM":'          +'"'+escJson(INS.C_BPDNAM(CJ1).BPDNAM)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"C_REP":['
For CI1=1 To REP_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"REP":'             +'"'+escJson(INS.C_REP(CJ1).REP)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_SQH(1),KEY_SQD(1),KEY_SVV(1),KEY_SVF(1),KEY_CALSQD(1),KEY_CALSVF(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:SQH]SQHNUM"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From SQUOTE_CSTD
 Gosub METHODS From SQUOTE_CSTD
 Gosub METHODS From SQUOTE_CSTD
Gosub METHODS From SQUOTE_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="SQUOTE" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SQUOTE")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"SQUOTE")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,3135)+'"'
Append WCLOB,',"$url":"{$baseUrl}/SQUOTE'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{SALFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3135)+' {$key}"'
Append WCLOB,',"$key":"{SQHNUM}"'
Append WCLOB,',"$url":"{$baseUrl}/SQUOTE('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'SQUOTE.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"SQHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3088)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"SQHTYP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3136)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CPYCUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,20394)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"SALFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5060)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"BPCORD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3662)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CUSQUOREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4368)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"VLYDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3143)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"BPCNAM1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3144)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"BPCNAM2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3144)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"BPCPOSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPCCRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,263)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CNCNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,13963)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPDNAM1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2960)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"BPDNAM2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2960)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,',"BPDPOSCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4535)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"BPDCRY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4469)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CNDNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,13958)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"BPIEECNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1584)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"REP1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2929)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"REP2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2929)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"PJT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1886)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"LAN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1505)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"STOFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3676)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"DEP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1669)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"DEP_LEG":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26213)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"PTE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3624)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"SOHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2212)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"QUOSTA":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3157)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-choice"'
Append WCLOB,',"$value":{'
Append WCLOB,'"$type":"application/x-integer"'
Append WCLOB,',"$enum":['
Append WCLOB,'{'
Append WCLOB,'"$value":1'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"430.1")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":2'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"430.2")+'"'
Append WCLOB,"}"
Append WCLOB,',{'
Append WCLOB,'"$value":3'
Append WCLOB,',"$title":"'+func GET_RES_MENU(ACTX.LAN,"430.3")+'"'
Append WCLOB,"}"
Append WCLOB,"]"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"PRFNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,5922)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"ICTCTY_POS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,210)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"FFWNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3718)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1322)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1326)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"C_BPCNAM":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPCNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3144)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"C_BPDNAM":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"BPDNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2960)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":35'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"C_REP":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":2'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"REP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2929)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/SQUOTE('+"'"+'{$key}'+"'"+')?representation=SQUOTE.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHSQUOTEB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHSQUOTEB
End RES


