#<AdxTL>@(#)0.0.0.0 $Revision$Class Time summary head
# Supervisor
## CRUD-CLASSE ## PJMTIMEMPH
# 2018-08-27 12:40:33 032


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMTIMEMPH [PTEH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMTIMEMPH") From ASYRCOM : Endif
Local Instance PJMTIMEMPH Using C_PJMTIMEMPH

If !SILENCE : Call TRACE("3 --> New Instance C_PJMTIMEMPH") From ASYRCOM : Endif
PJMTIMEMPH = NewInstance C_PJMTIMEMPH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PTEH_]PTEH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMTIMEMPH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.AREAD([PTEH_]CLB))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMTIMEMPH.CLB ="-num$(PJMTIMEMPH.CLB)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMTIMEMPH.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMTIMEMPH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PTEH_]
FreeGroup PJMTIMEMPH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMTIMEMPH,ACLE,ASTATUS,_ETAG)
Variable Instance PJMTIMEMPH Using C_PJMTIMEMPH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CLB(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CLB = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PJMTIMEMPH [PTEH]
Default File [F:PTEH]
Read [F:PTEH]PTEH0 = [L]_CLB
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PTEH]UPDTICK)>0
 [L]_ETAG = num$([F:PTEH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMTIMEMPH,ACLE,ASTATUS)
Variable Instance PJMTIMEMPH Using C_PJMTIMEMPH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CLB(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CLB = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.AREAD([L]_CLB))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMTIMEMPH,_CLB,ASTATUS)
Variable Instance PJMTIMEMPH Using C_PJMTIMEMPH
Value Char _CLB
Variable Integer ASTATUS

If PJMTIMEMPH = null : End : Endif

Gosub AVARIABLES From WMC00PJMTIMEMPH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMTIMEMPH.APARENT=null
 [L]A_I = PJMTIMEMPH.freeSnapshot
 PJMTIMEMPH.snapshotEnabled = 0
 PJMTIMEMPH.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMTIMEMPH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMTIMEMPH.APARENT=null
 PJMTIMEMPH.snapshotEnabled = 1
 PJMTIMEMPH.setAccessorEnabled = 1
Endif
LogicClose File [PTEH] ,[PTED]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH._ACTION_PARAM("AREAD_BEFORE",[L]_CLB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PTEH]
Read [F:PTEH]PTEH0 = [L]_CLB
If fstat
[L]A_ERROR = [L]_CLB
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMTIMEMPH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PTEH]AUUID)>0 & [F:PTEH]AUUID=NullUuid
 [F:PTEH]AUUID = getUuid
Endif
SetInstance PJMTIMEMPH With [F:PTEH]
PJMTIMEMPH.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:PTED]
 [L]A_N2=0
 For [F:PTED]PTE0 Where CLB=[F:PTEH]CLB
  [L]A_N2 +=1
  PJMTIMEMPH.TIMENT(A_N2) = NewInstance  C_PJMTIMEMP(PJMTIMEMPH.ACTX,NullUuid,[L]A_N2,PJMTIMEMPH,"TIMENT") AllocGroup PJMTIMEMPH
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2).ADDINSTANCE_BOUND)
  Callmet PJMTIMEMPH.TIMENT(A_N2).AREAD([F:PTED]CLB,[F:PTED]OPPNUM,[F:PTED]PTEDAT,[F:PTED]PTESEQ)
  PJMTIMEMPH.TIMENT(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2).ASETATTRIBUTE("CLB","$namProParent","CLB"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2).ASETATTRIBUTE("OPPNUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2).ASETATTRIBUTE("PTEDAT","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.TIMENT(A_N2).ASETATTRIBUTE("PTESEQ","$isDisabled","true"))
 Next PTED
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMPH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



