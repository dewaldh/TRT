#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ACT2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:47:19"
A_USER  = "ADMIN"
A_STAMP = "20180827234719"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBPAR"
  If [M]NBPAR=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ACT2 [ACT2]
Gosub HORODAT
Local Inpbox "ACT2" From GFONCTION At A_STAMP With A_WINDPREV Mask [ACT2] As [SIM_]
Grizo [ACT2]10
Grizo [ACT2]25
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ACT2]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=74 : Y1(1)=3 : Y2(1)=25
Return

$ON_TYPACT
Onevent INIT_AREA Call D_TYPACT(zc) From W1ACT2
Onevent BEFORE_INPUT Call AS_TYPACT(zc) From W1ACT2
Return

Subprog D_TYPACT(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPACT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TYPACT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PARAM6
Onevent INIT_AREA Call D_PARAM6(zc) From W1ACT2
Onevent BEFORE_INPUT Call AS_PARAM6(zc) From W1ACT2
Return

Subprog D_PARAM6(VALEUR)
Variable Integer VALEUR
If varinit([M]PARAM6,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PARAM6(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NUMLIG
Onevent BEFORE_AREA Gosub AV_NUMLIG From W1ACT2
Return

$AV_NUMLIG
zc = nolign
Gosub _AFF
Return

$ON_CODPAR
Onevent CONTROL Call C_CODPAR(zc) From W1ACT2
Onevent BEFORE_INPUT Call AS_CODPAR(zc) From W1ACT2
Onevent AFTER_CHANGE Gosub AMM_CODPAR From W1ACT2
Return

Subprog AS_CODPAR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(163,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_CODPAR(zc) From W1ACT2
Onkey   2 Titled GBOUTS Call S_CODPAR(zc) From W1ACT2
Onkey 144 Titled GBOUTP Call P_CODPAR(zc) From W1ACT2
Onkey 146 Titled GBOUTA Call SA_CODPAR(zc) From W1ACT2
Gosub _AFF
End

Subprog C_CODPAR(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CODPAR" : GZNUM = 5296 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("AAR","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CODPAR" : GZNUM = 5296 : Endif
 If !mkstat
  ## Action STD
  Call C_CODPAR(VALEUR) From SUBACT
  If mkstat : GERR = 1 : GZONE = "CODPAR" : GZNUM = 5296 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CODPAR
Call AM_CODPAR(zc)
If !mkstat & GOBJET
 zoncou = "CODPAR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CODPAR(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCODPAR)")>indice
 [M]CODPAR(indice) = VALEUR
 Affzo ZCODPAR(indice)
Endif
Gosub _AFF
End

Subprog S_CODPAR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AAR"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CODPAR(VALEUR)
Variable Char    VALEUR()
Call OBJET("AAR",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CODPAR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AAR"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CODPAR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AAR",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCODPAR
Onevent BEFORE_AREA Gosub AV_ZCODPAR From W1ACT2
Return

$AV_ZCODPAR
If clalev([F:AAR])=0 : Local File ACTCODPAR [AAR] : Endif
Call LECTURE("AAR",[M]CODPAR(indice),"") From CONTOBJ
Call TEXTE([F:AAR]INTITPAR,zc) From OBJDIV
Gosub _AFF
Return

$ON_TYPPAR
Onevent BEFORE_AREA Gosub AV_TYPPAR From W1ACT2
Onevent INIT_AREA Call D_TYPPAR(zc) From W1ACT2
Return

$AV_TYPPAR
## Action STD
Call AV_TYPPAR(zc) From SUBACT
Gosub _AFF
Return

Subprog D_TYPPAR(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPPAR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ADRVAL
Onevent BEFORE_INPUT Call AS_ADRVAL(zc) From W1ACT2
Onevent INIT_AREA Call D_ADRVAL(zc) From W1ACT2
Onevent CONTROL Call C_ADRVAL(zc) From W1ACT2
Return

Subprog D_ADRVAL(VALEUR)
Variable Integer VALEUR
If varinit([M]ADRVAL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ADRVAL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(34) From COMBOS
## Action STD
Call AS_ADRVAL(VALEUR) From SUBACT
If mkstat=2
 [M]ADRVAL(INDIC) = VALEUR
 Affzo ADRVAL(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,34,1))))
Endif
If !mkstat
 Discombo 0 From ADRVAL(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From ADRVAL(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_ADRVAL(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$CHG_STY
Return


