#<AdxTL>@(#)0.0.0.0 $Revision$Class User monitor
# Supervisor
## CRUD-CLASSE ## APSADX
# 2018-08-27 13:02:29 132


############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(APSADX,ACLE,ASTATUS,_ETAG)
Variable Instance APSADX Using R_APSADX
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Raz [L]_ETAG
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(APSADX,ACLE,ASTATUS)
Variable Instance APSADX Using R_APSADX
Value Char ACLE
Variable Integer ASTATUS
Local Char _ID(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet APSADX.AREAD([L]_ID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(APSADX,_ID,ASTATUS)
Variable Instance APSADX Using R_APSADX
Value Char _ID
Variable Integer ASTATUS

If APSADX = null : End : Endif

Gosub AVARIABLES From WMR00APSADX
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If APSADX.APARENT=null
 [L]A_I = APSADX.freeSnapshot
 APSADX.snapshotEnabled = 0
 APSADX.setAccessorEnabled = 0
Endif

If fmet APSADX.ACTX.AGETAFCRIGHT(APSADX,"PSADX",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
If fmet APSADX.ACTX.AGETAFCRIGHTR(APSADX,"PSADX",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif

[L]ASTATUS = max([L]ASTATUS,fmet APSADX.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

APSADX.APSADX.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet APSADX.APSADX.AREAD([L]_ID))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet APSADX.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & APSADX.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet APSADX._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If APSADX.APARENT=null
 APSADX.snapshotEnabled = 1
 APSADX.setAccessorEnabled = 1
Endif
End



