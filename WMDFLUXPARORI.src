#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule FLUXPARORI

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".PARFLUXDET" : If clalev([F:PFD])=0 : Local File =OUVTAB [PFD] : Endif
OUVTAB = GDOSSIER+".PARFLUX" : If clalev([F:PFL])=0 : Local File =OUVTAB [PFL] : Endif
OUVTAB = GDOSSIER+".GACCOUNT" : If clalev([F:GAC])=0 : Local File =OUVTAB [GAC] : Endif
OUVTAB = GDOSSIER+".GCOA" : If clalev([F:COA])=0 : Local File =OUVTAB [COA] : Endif
OUVTAB = "Link [PFD]"
Link [PFD] With
& [PFL]PFL0 = [F:PFD]CODTXS;[F:PFD]COA;[F:PFD]POSTXS,
& [GAC]GAC0 = [F:PFD]COA;[F:PFD]GAC,
& [COA]COA0 = [F:PFD]COA
& As [LNK_]
& Order By Key CLE = [PFD]CODTXS;[PFD]COA;[PFD]POSTXS;[PFD]GAC
FILTRE = ""
Return

$FERME
If clalev([F:PFD]) : Close local File [PFD] : Endif
If clalev([F:PFL]) : Close local File [PFL] : Endif
If clalev([F:GAC]) : Close local File [GAC] : Endif
If clalev([F:COA]) : Close local File [COA] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..3)
Local Integer DTYP(1..3)
Local Integer NBDCLE
NBDCLE = 3
DCLE(1) = "CODTXS"
DTYP(1) =  7
DCLE(2) = "COA"
DTYP(2) =  7
DCLE(3) = "GAC"
DTYP(3) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]CODTXS)>0
 [F:AAA_]CODTXS = [F:PFD]CODTXS
Endif
If dim([F:AAA_]COA)>0
 [F:AAA_]COA = [F:PFD]COA
Endif
If dim([F:AAA_]GAC)>0
 [F:AAA_]GAC = [F:PFD]GAC
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### CODTXS
[L]FLD="CODTXS"
[L]FORMULE='[F:PFD]CODTXS'
If dim([F:AAA_]CODTXS)>0
 [F:AAA_]CODTXS = [F:PFD]CODTXS
Endif

### POSTXS
[L]FLD="POSTXS"
[L]FORMULE='num$([F:PFD]POSTXS)'
If dim([F:AAA_]POSTXS)>0
 [F:AAA_]POSTXS = num$([F:PFD]POSTXS)
Endif

### DES
[L]FLD="DES"
[L]FORMULE='[F:PFL]DES'
If dim([F:AAA_]DES)>0
 [F:AAA_]DES = [F:PFL]DES
Endif

### COA
[L]FLD="COA"
[L]FORMULE='[F:PFD]COA'
If dim([F:AAA_]COA)>0
 [F:AAA_]COA = [F:PFD]COA
Endif

### COADES
[L]FLD="COADES"
[L]FORMULE='[F:COA]DES'
If dim([F:AAA_]COADES)>0
 [F:AAA_]COADES = [F:COA]DES
Endif

### COADESSHO
[L]FLD="COADESSHO"
[L]FORMULE='[F:COA]DESSHO'
If dim([F:AAA_]COADESSHO)>0
 [F:AAA_]COADESSHO = [F:COA]DESSHO
Endif

### CLATXS
[L]FLD="CLATXS"
[L]FORMULE='num$([F:PFL]CLATXS)-"-"-mess([F:PFL]CLATXS,3128,1)'
If dim([F:AAA_]CLATXS)>0
 [F:AAA_]CLATXS = num$([F:PFL]CLATXS)-"-"-mess([F:PFL]CLATXS,3128,1)
Endif

### OUTFUNDS
[L]FLD="OUTFUNDS"
[L]FORMULE='num$([F:PFL]OUTFUNDS)-"-"-mess([F:PFL]OUTFUNDS,1,1)'
If dim([F:AAA_]OUTFUNDS)>0
 [F:AAA_]OUTFUNDS = num$([F:PFL]OUTFUNDS)-"-"-mess([F:PFL]OUTFUNDS,1,1)
Endif

### GAC
[L]FLD="GAC"
[L]FORMULE='[F:PFD]GAC'
If dim([F:AAA_]GAC)>0
 [F:AAA_]GAC = [F:PFD]GAC
Endif

### GACDES
[L]FLD="GACDES"
[L]FORMULE='[F:GAC]DES'
If dim([F:AAA_]GACDES)>0
 [F:AAA_]GACDES = [F:GAC]DES
Endif


Return

