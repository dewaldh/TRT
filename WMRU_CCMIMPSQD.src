#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Sales quotes
# Supervisor
## CRUD-CLASSE ## CCMIMPSQD
# 2018-08-27 13:12:15 804


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(CCMIMPSQD,ASTATUS)
Variable Instance CCMIMPSQD Using R_CCMIMPSQD
Variable Integer ASTATUS

If CCMIMPSQD = null : End : Endif

Gosub AVARIABLES From WMR00CCMIMPSQD
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet CCMIMPSQD.ACTX.AGETAFCRIGHT(CCMIMPSQD,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet CCMIMPSQD.ACTX.AGETAFCRIGHTU(CCMIMPSQD,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_CCMIMPSQD
Else
 Gosub AUPDATE_CCMIMPSQD
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = CCMIMPSQD.freeSnapshot
CCMIMPSQD.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
CCMIMPSQD.ASTALIN = [V]CST_AUPD
CCMIMPSQD.CCMISQD.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = CCMIMPSQD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = CCMIMPSQD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPSQD._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPSQD._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMIMPSQD._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If CCMIMPSQD.CCMISQD.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPSQD.CCMISQD.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(CCMIMPSQD.CCMISQD.ASTALIN)<>""
 [L]A_ASTALIN = CCMIMPSQD.CCMISQD.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.CCMISQD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(CCMIMPSQD.CCMISQD.ASTALIN)<>""
 [L]A_ASTALIN = CCMIMPSQD.CCMISQD.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.CCMISQD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_CCMIMPSQD
Trbegin [F:CCMISQD]
 Gosub AUPDATE_CCMIMPSQD
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(CCMIMPSQD.CCMISQD.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMIMPSQD.CCMISQD.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_CCMIMPSQD
[L]A_ASTALIN = CCMIMPSQD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.CCMISQD._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = CCMIMPSQD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If CCMIMPSQD.snapshotEnabled=1
 [L]A_RETIK = CCMIMPSQD.revertUpdTick
Endif

[L]ASTATUS = max(fmet CCMIMPSQD.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



