#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################################
# Script            : SPEYELA                                                                                        #
# Creation date     : 29/01/2019                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : JR (Leverage)                                                                                  #
# Module            : Entity Loan Agreements                                                                         #
# -------------------------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DDP-1                                                  #
# Description       : DFCX1-25 Entity Loan Agreements                                                                #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
######################################################################################################################
$ACTION
Case ACTION
  When Default
Endcase
Return
#------------------------------------------------------------------------------------#
#After change - YENAFLG
#------------------------------------------------------------------------------------#
Subprog AM_YENAFLG(VALEUR)
Variable Integer VALEUR

  If VALEUR = 1 and [M:YELA0]YLONAGR <> ""

    #Open tables
    If !clalev ([F:YBAN])  : Local File BANK        [F:YBAN]  : Endif
    If !clalev ([F:YELAD]) : Local File YENTLOAAGR  [F:YELAD] : Endif

    Local Integer X : X = 0

    Filter [F:YBAN] Where [F:YBAN]YELA = [M:YELA0]YLONAGR
    For [F:YBAN]
      X+=1
      Break
    Next
    Filter [F:YBAN] #Reset filter

    If X > 0
      Call ERREURT("This loan is used in a shared bank account", 1) From GESECRAN
      VALEUR = 2
    Else

      #Check if ELA is mapped to a shared ELA
      Local Integer I : I = 0

      Filter [F:YELAD] Where [F:YELAD]YSRCLONAGR = [M:YELA0]YLONAGR
      For [F:YELAD]
        I+=1
        Break
      Next
      Filter [F:YELAD] #Reset filter

      If I > 0
        Call ERREURT("This loan is used in a shared Loan Agreement", 1) From GESECRAN
        VALEUR = 2
      Endif

    Endif

    #Close table
    If clalev([F:YBAN])  : Close Local File [F:YBAN]  : Endif
    If clalev([F:YELAD]) : Close Local File [F:YELAD] : Endif

    If [M:YELA2]YDEFFLG = 2
      Call ERREURT("Cannot deactivate a Loan Agreement when Default is set to Yes", 1) From GESECRAN
      VALEUR = 2
    Endif

  Endif

End
#------------------------------------------------------------------------------------#
#After change - YCPYPRO
#------------------------------------------------------------------------------------#
Subprog AM_YCPYPRO(VALEUR)
Variable Char    VALEUR()

  If VALEUR <> ""

    #Open tables
    If !clalev ([F:YCMP])  : Local File COMPANY     [F:YCMP]  : Endif

    #Check that company is active
    Read [F:YCMP]CPY0 = VALEUR

    If fstat = 0
      If [F:YCMP]YCPYACT <> 2
        Call ERREURT("This company is not active", 1) From GESECRAN
        mkstat=2
      Else
        #Check if Recipient Company is not equal to Provider company
        If VALEUR = [M:YELA2]YCPYREC
          VALEUR=""
          Call ERREURT("Provider company cannot be same as Recipient company", 1) From GESECRAN
          mkstat=2
        Endif
      Endif
    Endif

    #Close table
    If clalev([F:YCMP])  : Close Local File [F:YCMP]  : Endif

  Endif

  #Reset values
  [M:YELA1]YFCYPRO = ""
  [M:YELA1]YCOAPRO = ""
  [M:YELA1]YACCPRO = ""
  [M:YELA1]YPDIE0 = ""
  [M:YELA1]YPDIE1 = ""
  [M:YELA1]YPDIE2 = ""
  [M:YELA1]YPDIE3 = ""
  [M:YELA1]YPDIE4 = ""
  Affzo [M:YELA1]

  [M:YELA0]YSRCLONAGR = ""
  Affzo [M:YELA0]YSRCLONAGR

End
#------------------------------------------------------------------------------------#
#Control - YFCYPRO
#------------------------------------------------------------------------------------#
Subprog C_YFCYPRO(VALEUR)
Variable Char    VALEUR()

  #Selection of Dimension values
  Local Char REQUEST(255)(0..5)

  REQUEST(0) = "SELECT CPY.CPY_0, CPY.ACM_0, LED.LED_0, LED.COA_0, LED.DIE_0, LED.DIE_1, LED.DIE_2, LED.DIE_3, LED.DIE_4, CPY.YCPYACT_0"
  REQUEST(1) -= "From FACILITY FCY"
  REQUEST(2) -= "INNER JOIN COMPANY CPY ON CPY.MAIFCY_0 = FCY.FCY_0 and FCY.LEGCPY_0 = CPY.CPY_0"
  REQUEST(3) -= "INNER JOIN GACM GCM ON GCM.GCM_0 = CPY.ACM_0"
  REQUEST(4) -= "INNER JOIN GLED LED ON LED.LED_0 = GCM.LED_0"
  REQUEST(5) -= "Where FCY.FCY_0 = '" + VALEUR + "' AND CPY.CPY_0 = '" + [M:YELA1]YCPYPRO + "' AND CPY.YCPYACT_0 = 2"

  Local Integer I : I = 0
  For (Char CPY, Char ACM, Char LED, Char COA, Char DIE0, Char DIE1, Char DIE2, Char DIE3, Char DIE4, Integer CPYACT) From "5" Sql REQUEST As [YLNK]
    [M:YELA1]YCPYPRO = CPY
    [M:YELA1]YCOAPRO = COA
    [M:YELA1]YPDIE0 = DIE0
    [M:YELA1]YPDIE1 = DIE1
    [M:YELA1]YPDIE2 = DIE2
    [M:YELA1]YPDIE3 = DIE3
    [M:YELA1]YPDIE4 = DIE4
    I+=1
    Break
  Next

  If I=0
    GMESSAGE = "No active site found"
    GOK = 0
    GERR = 1
    mkstat=2
  Endif

End
#------------------------------------------------------------------------------------#
#After change - YACCPRO
#------------------------------------------------------------------------------------#
Subprog AM_YACCPRO(VALEUR)
  Variable Char    VALEUR()

  Local Char REQUEST(255)(0..)
  REQUEST(0) =  "SELECT ACC.ACC_0, ACC.DES_0, ACC.COA_0, ACC.DESSHO_0"
  REQUEST(1) -= "FROM COMPANY CPY"
  REQUEST(2) -= "JOIN GACM ON CPY.ACM_0 = GACM.GCM_0"
  REQUEST(3) -= "JOIN GLED ON GACM.LED_0 = GLED.LED_0"
  REQUEST(4) -= "JOIN GACCOUNT ACC ON GLED.COA_0 = ACC.COA_0"
  REQUEST(5) -= "WHERE CPY.CPY_0 = '" + [M:YELA1]YCPYPRO + "' AND ACC.ACC_0 = '" + VALEUR + "' AND ACC.SAC_0 = 1 AND ACC.ENAFLG_0 = 2 AND ACC.FLGVAT_0 <> 3"
  REQUEST(6) -= "ORDER BY ACC.ACC_0"

  Local Integer I
  For (Char YACC(15), Char YDES(30), Char YCOA(3), Char YDESSHO(10)) From "5" Sql REQUEST As [YLNK]
    I += 1
    Break
  Next

  If I=0
    GMESSAGE = "Not a valid account"
    GERR = 1
    mkstat = 2
  Else
    Local Char ENT(20) : ENT = "ACT"
    Call GET_DIM_P(VALEUR,ENT)
  Endif

End
#------------------------------------------------------------------------------------#
#After change - YPCCE0
#------------------------------------------------------------------------------------#
Subprog C_YPCCE0(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA1]YPDIE0
  Local Char DIEFLD(10) : DIEFLD = "DIE_0"
  Local Char CCEFIELD(10) : CCEFIELD = "YPCCE0"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_0"
  Local Char CPY(5) : CPY = [M:YELA1]YCPYPRO
  Local Char FCY(5) : FCY = [M:YELA1]YFCYPRO
  Local Char SCREEN(50) : SCREEN = "[M:YELA1]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA1]YPCCE0"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YPCCE1
#------------------------------------------------------------------------------------#
Subprog C_YPCCE1(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA1]YPDIE1
  Local Char DIEFLD(10) : DIEFLD = "DIE_1"
  Local Char CCEFIELD(10) : CCEFIELD = "YPCCE1"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_1"
  Local Char CPY(5) : CPY = [M:YELA1]YCPYPRO
  Local Char FCY(5) : FCY = [M:YELA1]YFCYPRO
  Local Char SCREEN(50) : SCREEN = "[M:YELA1]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA1]YPCCE1"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YPCCE2
#------------------------------------------------------------------------------------#
Subprog C_YPCCE2(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA1]YPDIE2
  Local Char DIEFLD(10) : DIEFLD = "DIE_2"
  Local Char CCEFIELD(10) : CCEFIELD = "YPCCE2"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_2"
  Local Char CPY(5) : CPY = [M:YELA1]YCPYPRO
  Local Char FCY(5) : FCY = [M:YELA1]YFCYPRO
  Local Char SCREEN(50) : SCREEN = "[M:YELA1]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA1]YPCCE2"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YPCCE3
#------------------------------------------------------------------------------------#
Subprog C_YPCCE3(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA1]YPDIE3
  Local Char DIEFLD(10) : DIEFLD = "DIE_3"
  Local Char CCEFIELD(10) : CCEFIELD = "YPCCE3"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_3"
  Local Char CPY(5) : CPY = [M:YELA1]YCPYPRO
  Local Char FCY(5) : FCY = [M:YELA1]YFCYPRO
  Local Char SCREEN(50) : SCREEN = "[M:YELA1]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA1]YPCCE3"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YPCCE4
#------------------------------------------------------------------------------------#
Subprog C_YPCCE4(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA1]YPDIE4
  Local Char DIEFLD(10) : DIEFLD = "DIE_4"
  Local Char CCEFIELD(10) : CCEFIELD = "YPCCE4"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_4"
  Local Char CPY(5) : CPY = [M:YELA1]YCPYPRO
  Local Char FCY(5) : FCY = [M:YELA1]YFCYPRO
  Local Char SCREEN(50) : SCREEN = "[M:YELA1]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA1]YPCCE4"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After field - YPCCE4
#------------------------------------------------------------------------------------#
Subprog AP_YPCCE4(VALEUR)
Variable Char    VALEUR()
  #Set focus to Recipient Company field
  #zonsui = "[M:YELA2]YCPYREC" #Disabled as it requires Save button to be clicked twice
End
#------------------------------------------------------------------------------------#
#After change - YCPYREC
#------------------------------------------------------------------------------------#
Subprog AM_YCPYREC(VALEUR)
Variable Char    VALEUR()

  If VALEUR <> ""

    #Open tables
    If !clalev ([F:YCMP])  : Local File COMPANY     [F:YCMP]  : Endif

    #Check that company is active
    Read [F:YCMP]CPY0 = VALEUR

    If fstat = 0
      If [F:YCMP]YCPYACT <> 2
        Call ERREURT("This company is not active", 1) From GESECRAN
        mkstat=2
      Else
        #Check if Recipient Company is not equal to Provider company
        If VALEUR = [M:YELA1]YCPYPRO
          Call ERREURT("Recipient company cannot be same as Provider company", 1) From GESECRAN
          VALEUR=""
          mkstat=2
        Endif
      Endif
    Endif

    #Close table
    If clalev([F:YCMP])  : Close Local File [F:YCMP]  : Endif

  Endif

  #Reset values
  [M:YELA2]YFCYREC = ""
  [M:YELA2]YCOAREC = ""
  [M:YELA2]YACCREC = ""
  [M:YELA2]YRDIE0 = ""
  [M:YELA2]YRDIE1 = ""
  [M:YELA2]YRDIE2 = ""
  [M:YELA2]YRDIE3 = ""
  [M:YELA2]YRDIE4 = ""
  Affzo [M:YELA2]

End
#------------------------------------------------------------------------------------#
#Control - YFCYREC
#------------------------------------------------------------------------------------#
Subprog C_YFCYREC(VALEUR)
Variable Char    VALEUR()

  #Selection of Dimension values
  Local Char REQUEST(255)(0..5)

  REQUEST(0) = "SELECT CPY.CPY_0, CPY.ACM_0, LED.LED_0, LED.COA_0, LED.DIE_0, LED.DIE_1, LED.DIE_2, LED.DIE_3, LED.DIE_4, CPY.YCPYACT_0"
  REQUEST(1) -= "From FACILITY FCY"
  REQUEST(2) -= "INNER JOIN COMPANY CPY ON CPY.MAIFCY_0 = FCY.FCY_0 and FCY.LEGCPY_0 = CPY.CPY_0"
  REQUEST(3) -= "INNER JOIN GACM GCM ON GCM.GCM_0 = CPY.ACM_0"
  REQUEST(4) -= "INNER JOIN GLED LED ON LED.LED_0 = GCM.LED_0"
  REQUEST(5) -= "Where FCY.FCY_0 = '" + VALEUR + "' AND CPY.CPY_0 = '" + [M:YELA2]YCPYREC + "' AND CPY.YCPYACT_0 = 2"

  Local Integer I : I = 0
  For (Char CPY, Char ACM, Char LED, Char COA, Char DIE0, Char DIE1, Char DIE2, Char DIE3, Char DIE4, Integer CPYACT) From "5" Sql REQUEST As [YLNK]
    [M:YELA2]YCPYREC = CPY
    [M:YELA2]YCOAREC = COA
    [M:YELA2]YRDIE0 = DIE0
    [M:YELA2]YRDIE1 = DIE1
    [M:YELA2]YRDIE2 = DIE2
    [M:YELA2]YRDIE3 = DIE3
    [M:YELA2]YRDIE4 = DIE4
    I+=1
    Break
  Next

  If I=0
    GMESSAGE = "No active site found"
    GOK = 0
    GERR = 1
    mkstat=2
  Endif

End
#------------------------------------------------------------------------------------#
#After change - YACCREC
#------------------------------------------------------------------------------------#
Subprog AM_YACCREC(VALEUR)
Variable Char    VALEUR()

  Local Char REQUEST(255)(0..)
  REQUEST(0) =  "SELECT ACC.ACC_0, ACC.DES_0, ACC.COA_0, ACC.DESSHO_0"
  REQUEST(1) -= "FROM COMPANY CPY"
  REQUEST(2) -= "JOIN GACM ON CPY.ACM_0 = GACM.GCM_0"
  REQUEST(3) -= "JOIN GLED ON GACM.LED_0 = GLED.LED_0"
  REQUEST(4) -= "JOIN GACCOUNT ACC ON GLED.COA_0 = ACC.COA_0"
  REQUEST(5) -= "WHERE CPY.CPY_0 = '" + [M:YELA1]YCPYREC + "' AND ACC.ACC_0 = '" + VALEUR + "' AND ACC.SAC_0 = 1 AND ACC.ENAFLG_0 = 2 AND ACC.FLGVAT_0 <> 3"
  REQUEST(6) -= "ORDER BY ACC.ACC_0"

  Local Integer I
  For (Char YACC(15), Char YDES(30), Char YCOA(3), Char YDESSHO(10)) From "5" Sql REQUEST As [YLNK]
    I += 1
    Break
  Next

  If I=0
    GMESSAGE = "Not a valid account"
    GERR = 1
    mkstat = 2
  Else
    Local Char ENT(20) : ENT = "ACT"
    Call GET_DIM_R(VALEUR,ENT)
  Endif
End
#------------------------------------------------------------------------------------#
#After change - YRCCE0
#------------------------------------------------------------------------------------#
Subprog C_YRCCE0(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA2]YRDIE0
  Local Char DIEFLD(10) : DIEFLD = "DIE_0"
  Local Char CCEFIELD(10) : CCEFIELD = "YRCCE0"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_0"
  Local Char CPY(5) : CPY = [M:YELA2]YCPYREC
  Local Char FCY(5) : FCY = [M:YELA2]YFCYREC
  Local Char SCREEN(50) : SCREEN = "[M:YELA2]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA2]YRCCE0"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YRCCE1
#------------------------------------------------------------------------------------#
Subprog C_YRCCE1(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA2]YRDIE1
  Local Char DIEFLD(10) : DIEFLD = "DIE_1"
  Local Char CCEFIELD(10) : CCEFIELD = "YRCCE1"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_1"
  Local Char CPY(5) : CPY = [M:YELA2]YCPYREC
  Local Char FCY(5) : FCY = [M:YELA2]YFCYREC
  Local Char SCREEN(50) : SCREEN = "[M:YELA2]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA2]YRCCE1"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YRCCE2
#------------------------------------------------------------------------------------#
Subprog C_YRCCE2(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA2]YRDIE2
  Local Char DIEFLD(10) : DIEFLD = "DIE_2"
  Local Char CCEFIELD(10) : CCEFIELD = "YRCCE2"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_2"
  Local Char CPY(5) : CPY = [M:YELA2]YCPYREC
  Local Char FCY(5) : FCY = [M:YELA2]YFCYREC
  Local Char SCREEN(50) : SCREEN = "[M:YELA2]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA2]YRCCE2"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YRCCE3
#------------------------------------------------------------------------------------#
Subprog C_YRCCE3(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA2]YRDIE3
  Local Char DIEFLD(10) : DIEFLD = "DIE_3"
  Local Char CCEFIELD(10) : CCEFIELD = "YRCCE3"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_3"
  Local Char CPY(5) : CPY = [M:YELA2]YCPYREC
  Local Char FCY(5) : FCY = [M:YELA2]YFCYREC
  Local Char SCREEN(50) : SCREEN = "[M:YELA2]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA2]YRCCE3"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YRCCE4
#------------------------------------------------------------------------------------#
Subprog C_YRCCE4(VALEUR)
Variable Char    VALEUR()

  Local Integer OBYDIE, REST
  Local Char DIE(5) : DIE = [M:YELA2]YRDIE4
  Local Char DIEFLD(10) : DIEFLD = "DIE_4"
  Local Char CCEFIELD(10) : CCEFIELD = "YRCCE4"
  Local Char OBFLD(10)  : OBFLD = "OBYDIE_4"
  Local Char CPY(5) : CPY = [M:YELA2]YCPYREC
  Local Char FCY(5) : FCY = [M:YELA2]YFCYREC
  Local Char SCREEN(50) : SCREEN = "[M:YELA2]"

  OBYDIE = func MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)
  If OBYDIE = 2 and VALEUR = "" Then
    GMESSAGE = mess(27,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YELA2]YRCCE4"
    End
  Endif

  REST = func RESTRICT_DIE(VALEUR, DIE, CCEFIELD, FCY, SCREEN)

End
#------------------------------------------------------------------------------------#
#After change - YDEFFLG
#------------------------------------------------------------------------------------#
Subprog AM_YDEFFLG(VALEUR)
Variable Integer VALEUR

  If VALEUR = 2 and [M:YELA2]YFCYREC <> ""

    #Check if Recipient Site does not have an existing active default ELA

    #Open table
    If !clalev ([F:YELAD]) : Local File YENTLOAAGR     [F:YELAD] : Endif

    Local Integer I : I = 0

    Filter [F:YELAD] Where [F:YELAD]YFCYREC = [M:YELA2]YFCYREC and [F:YELAD]YDEFFLG = 2
    For [F:YELAD]
      I+=1
      Break
    Next
    Filter [F:YELAD] #Reset filter

    #Close table
    If clalev([F:YELAD])  : Close Local File [F:YELAD]  : Endif

    If I > 0
      VALEUR = 1
      Call ERREURT("Default agreement already exists for this Recipient Site", 1) From GESECRAN
      mkstat=2
    Endif

  Endif

End
#------------------------------------------------------------------------------------#
#Check for mandatory dimensions
#------------------------------------------------------------------------------------#
Funprog MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)

  Variable Char DIE()
  Variable Char DIEFLD()
  Variable Char OBFLD()
  Variable Char CPY()

  #Selection of Dimension values
  Local Integer IRET : IRET = 0
  Local Char REQUEST(255)(0..5)

  REQUEST(0) = "SELECT "+OBFLD
  REQUEST(1) -= "From COMPANY"
  REQUEST(2) -= "Where CPY_0 = '"+CPY+"' and "+DIEFLD+" = '"+DIE+"'"
  For (Integer OBDIE) From "5" Sql REQUEST As [YLNK]
    IRET = OBDIE
  Next

End IRET
#------------------------------------------------------------------------------------#
#Restrict dimensions
#------------------------------------------------------------------------------------#
Funprog RESTRICT_DIE(CCE,DIE, FIELDVAL, FCY, SCREEN)

  Variable Char CCE()
  Variable Char DIE()
  Variable Char FIELDVAL()
  Variable Char FCY()
  Variable Char SCREEN()

  Local Integer RESTVAL : RESTVAL = 0
  Local Char CCEQRY(250)(0..)
  Local Char CPYRET(5)

  CCEQRY(0) = "select C.FCY_0, F.FCY_0"
  CCEQRY(1) -= "FROM CACCE C"
  CCEQRY(2) -= "LEFT OUTER JOIN FACGROUP F ON C.FCY_0 = F.CPY_0"
  CCEQRY(3) -= "WHERE C.CCE_0 = '"+CCE+"' AND C.DIE_0 = '"+DIE+"'"

  For (Char FCYA, Char FCYB) From "5" Sql CCEQRY As [YCCQ]
    If [F:YCCQ]FCYA = "" or [F:YCCQ]FCYB = FCY
      RESTVAL += 1
    Endif
  Next

  If RESTVAL = 0
    GMESSAGE = mess(45,6254,1)
    GOK = 0
    GERR = 1
    zonsui = SCREEN+FIELDVAL
  Endif

End RESTVAL
#------------------------------------------------------------------------------------#
#Get dimensions for Provider
#------------------------------------------------------------------------------------#
Subprog GET_DIM_P(VALEUR, ENT)
Variable Char VALEUR()
Variable Char ENT()

  #Disable all fields based on Account selection
  Diszo [M:YELA1]YPCCE0
  Diszo [M:YELA1]YPCCE1
  Diszo [M:YELA1]YPCCE2
  Diszo [M:YELA1]YPCCE3
  Diszo [M:YELA1]YPCCE4

  If ENT <> "LIENS"
    Raz [M:YELA1]YPCCE0
    Raz [M:YELA1]YPCCE1
    Raz [M:YELA1]YPCCE2
    Raz [M:YELA1]YPCCE3
    Raz [M:YELA1]YPCCE4
  Endif

  #Selection of Dimension values against the COA and ACC
  Local Integer DIENO, J
  J = 0 : DIENO = 0
  Local Char REQUEST(255)(0..5)
  Local Char DIE(10)(0..4)
  Local Char COA(10), ACC(10)
  DIE(0) = [M:YELA1]YPDIE0
  DIE(1) = [M:YELA1]YPDIE1
  DIE(2) = [M:YELA1]YPDIE2
  DIE(3) = [M:YELA1]YPDIE3
  DIE(4) = [M:YELA1]YPDIE4
  COA = [M:YELA1]YCOAPRO

  #Assgn each dimension to DIE type dynamically
  Integer DIM0_ACT, DIM1_ACT, DIM2_ACT, DIM3_ACT, DIM4_ACT

  DIM0_ACT=1
  DIM1_ACT=1
  DIM2_ACT=1
  DIM3_ACT=1
  DIM4_ACT=1

  For DIENO = 0 To 4
    For J = 0 To 4
      REQUEST(0) = "SELECT DIE_"+num$(DIENO)+" [DIE], "+num$(J)+" [NUM] From GACCOUNT Where COA_0 = '"+COA+"' and ACC_0 = '"+VALEUR+"'"
      REQUEST(1) = "and DIE_"+num$(DIENO)+" = '"+DIE(J)+"'"
      For (Char DIETYP, Integer NUM) From "5" Sql REQUEST As [YLNK]
        Assign "[M:YELA1]YPDIE"+num$(J)+"" With DIETYP
        If NUM = 0
          DIM0_ACT=2
          Actzo [M:YELA1]YPCCE0
        Elsif NUM = 1
          DIM1_ACT=2
          Actzo [M:YELA1]YPCCE1
        Elsif NUM = 2
          DIM2_ACT=2
          Actzo [M:YELA1]YPCCE2
        Elsif NUM = 3
          DIM3_ACT=2
          Actzo [M:YELA1]YPCCE3
        Elsif NUM = 4
          DIM4_ACT=2
          Actzo [M:YELA1]YPCCE4
        Endif
      Next
    Next
  Next DIENO

  If DIM0_ACT = 1 and [M:YELA1]YPCCE0 <> ""
    Raz [M:YELA1]YPCCE0
  Endif

  If DIM1_ACT = 1 and [M:YELA1]YPCCE1 <> ""
    Raz [M:YELA1]YPCCE1
  Endif

  If DIM2_ACT = 1 and [M:YELA1]YPCCE2 <> ""
    Raz [M:YELA1]YPCCE2
  Endif

  If DIM3_ACT = 1 and [M:YELA1]YPCCE3 <> ""
    Raz [M:YELA1]YPCCE3
  Endif

  If DIM4_ACT = 1 and [M:YELA1]YPCCE4 <> ""
    Raz [M:YELA1]YPCCE4
  Endif

  Affzo [M:YELA1]

End
#------------------------------------------------------------------------------------#
#Get dimensions for Recipient
#------------------------------------------------------------------------------------#
Subprog GET_DIM_R(VALEUR, ENT)
Variable Char VALEUR()
Variable Char ENT()

  #Disable all fields based on Account selection
  Diszo [M:YELA2]YRCCE0
  Diszo [M:YELA2]YRCCE1
  Diszo [M:YELA2]YRCCE2
  Diszo [M:YELA2]YRCCE3
  Diszo [M:YELA2]YRCCE4

  If ENT <> "LIENS"
    Raz [M:YELA2]YRCCE0
    Raz [M:YELA2]YRCCE1
    Raz [M:YELA2]YRCCE2
    Raz [M:YELA2]YRCCE3
    Raz [M:YELA2]YRCCE4
  Endif

  #Selection of Dimension values against the COA and ACC
  Local Integer DIENO, J
  J = 0 : DIENO = 0
  Local Char REQUEST(255)(0..5)
  Local Char DIE(10)(0..4)
  Local Char COA(10), ACC(10)
  DIE(0) = [M:YELA2]YRDIE0
  DIE(1) = [M:YELA2]YRDIE1
  DIE(2) = [M:YELA2]YRDIE2
  DIE(3) = [M:YELA2]YRDIE3
  DIE(4) = [M:YELA2]YRDIE4
  COA = [M:YELA2]YCOAREC

  #Assgn each dimension to DIE type dynamically
  Integer DIM0_ACT, DIM1_ACT, DIM2_ACT, DIM3_ACT, DIM4_ACT

  DIM0_ACT=1
  DIM1_ACT=1
  DIM2_ACT=1
  DIM3_ACT=1
  DIM4_ACT=1

  For DIENO = 0 To 4
    For J = 0 To 4
      REQUEST(0) = "SELECT DIE_"+num$(DIENO)+" [DIE], "+num$(J)+" [NUM] From GACCOUNT Where COA_0 = '"+COA+"' and ACC_0 = '"+VALEUR+"'"
      REQUEST(1) = "and DIE_"+num$(DIENO)+" = '"+DIE(J)+"'"
      For (Char DIETYP, Integer NUM) From "5" Sql REQUEST As [YLNK]
        Assign "[M:YELA2]YRDIE"+num$(J)+"" With DIETYP
        If NUM = 0
          DIM0_ACT=2
          Actzo [M:YELA2]YRCCE0
        Elsif NUM = 1
          DIM1_ACT=2
          Actzo [M:YELA2]YRCCE1
        Elsif NUM = 2
          DIM2_ACT=2
          Actzo [M:YELA2]YRCCE2
        Elsif NUM = 3
          DIM3_ACT=2
          Actzo [M:YELA2]YRCCE3
        Elsif NUM = 4
          DIM4_ACT=2
          Actzo [M:YELA2]YRCCE4
        Endif
      Next
    Next
  Next DIENO

  If DIM0_ACT = 1 and [M:YELA2]YRCCE0 <> ""
    Raz [M:YELA2]YRCCE0
  Endif

  If DIM1_ACT = 1 and [M:YELA2]YRCCE1 <> ""
    Raz [M:YELA2]YRCCE1
  Endif

  If DIM2_ACT = 1 and [M:YELA2]YRCCE2 <> ""
    Raz [M:YELA2]YRCCE2
  Endif

  If DIM3_ACT = 1 and [M:YELA2]YRCCE3 <> ""
    Raz [M:YELA2]YRCCE3
  Endif

  If DIM4_ACT = 1 and [M:YELA2]YRCCE4 <> ""
    Raz [M:YELA2]YRCCE4
  Endif

  Affzo [M:YELA2]

End

