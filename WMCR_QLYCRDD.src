#<AdxTL>@(#)0.0.0.0 $Revision$Class Technical sheets
# Supervisor
## CRUD-CLASSE ## QLYCRDD
# 2018-08-27 12:43:36 137


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File QLYCRD [QLC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_QLYCRDD") From ASYRCOM : Endif
Local Instance QLYCRDD Using C_QLYCRDD

If !SILENCE : Call TRACE("3 --> New Instance C_QLYCRDD") From ASYRCOM : Endif
QLYCRDD = NewInstance C_QLYCRDD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [QLC_]QLC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of QLYCRDD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet QLYCRDD.AREAD([QLC_]QLYCRD,[QLC_]NUMLIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("QLYCRDD.QLYCRD ="-num$(QLYCRDD.QLYCRD)) From ASYRCOM
 Call TRACE("QLYCRDD.NUMLIN ="-num$(QLYCRDD.NUMLIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(QLYCRDD.AKEYS)
  Call TRACE("-"-num$(I)-":"-QLYCRDD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [QLC_]
FreeGroup QLYCRDD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(QLYCRDD,ACLE,ASTATUS,_ETAG)
Variable Instance QLYCRDD Using C_QLYCRDD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _QLYCRD(8)
Local Shortint _NUMLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_QLYCRD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_NUMLIN = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File QLYCRD [QLC]
Default File [F:QLC]
Read [F:QLC]QLC0 = [L]_QLYCRD;[L]_NUMLIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:QLC]UPDTICK)>0
 [L]_ETAG = num$([F:QLC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(QLYCRDD,ACLE,ASTATUS)
Variable Instance QLYCRDD Using C_QLYCRDD
Value Char ACLE
Variable Integer ASTATUS
Local Char _QLYCRD(8)
Local Shortint _NUMLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_QLYCRD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_NUMLIN = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDD.AREAD([L]_QLYCRD,[L]_NUMLIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(QLYCRDD,_QLYCRD,_NUMLIN,ASTATUS)
Variable Instance QLYCRDD Using C_QLYCRDD
Value Char _QLYCRD
Value Shortint _NUMLIN
Variable Integer ASTATUS

If QLYCRDD = null : End : Endif

Gosub AVARIABLES From WMC00QLYCRDD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If QLYCRDD.APARENT=null
 [L]A_I = QLYCRDD.freeSnapshot
 QLYCRDD.snapshotEnabled = 0
 QLYCRDD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & QLYCRDD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet QLYCRDD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If QLYCRDD.APARENT=null
 QLYCRDD.snapshotEnabled = 1
 QLYCRDD.setAccessorEnabled = 1
Endif
LogicClose File [QLC]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDD._ACTION_PARAM("AREAD_BEFORE",[L]_QLYCRD,[L]_NUMLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:QLC]
Read [F:QLC]QLC0 = [L]_QLYCRD;[L]_NUMLIN
If fstat
[L]A_ERROR = [L]_QLYCRD+"~"+num$([L]_NUMLIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(QLYCRDD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:QLC]AUUID)>0 & [F:QLC]AUUID=NullUuid
 [F:QLC]AUUID = getUuid
Endif
SetInstance QLYCRDD With [F:QLC]
QLYCRDD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet QLYCRDD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="QLYCRD" & ZONE="QLYDESAXX" & IDENT1=QLYCRDD.QLYCRD & IDENT2=""
 Call ASETTEXTRA(QLYCRDD.AXX,QLYCRDD.AllocGrp(),"QLYDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 QLYCRDD.AXX(maxtab(QLYCRDD.AXX)).FLG = 0
Next AXX
If !len(fmet QLYCRDD.AGETTEXTRA("QLYDESAXX"))
 Call ASETTEXTRA(QLYCRDD.AXX,QLYCRDD.AllocGrp(),"QLYDESAXX",
& fmet QLYCRDD.AGETTEXTRALAN("QLYDESAXX",QLYCRDD.ACTX.AFOLD.ALANGDEF),
& QLYCRDD.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="QLYCRD" & ZONE="QSTTEXAXX" & IDENT1=QLYCRDD.QLYCRD & IDENT2=num$(QLYCRDD.NUMLIN)
 Call ASETTEXTRA(QLYCRDD.AXX,QLYCRDD.AllocGrp(),"QSTTEXAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 QLYCRDD.AXX(maxtab(QLYCRDD.AXX)).FLG = 0
Next AXX
If !len(fmet QLYCRDD.AGETTEXTRA("QSTTEXAXX"))
 Call ASETTEXTRA(QLYCRDD.AXX,QLYCRDD.AllocGrp(),"QSTTEXAXX",
& fmet QLYCRDD.AGETTEXTRALAN("QSTTEXAXX",QLYCRDD.ACTX.AFOLD.ALANGDEF),
& QLYCRDD.ACTX.LAN) From ASYRSUB
Endif

Return



