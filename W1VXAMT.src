#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management VXAMT 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:06:56"
A_USER  = "ADMIN"
A_STAMP = "20180326130656"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask VXAMT [XAMT]
Gosub HORODAT
Local Inpbox "VXAMT" From GFONCTION At A_STAMP With A_WINDPREV Mask [XAMT] As [SIM_]
Grizo [XAMT]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [XAMT]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=64 : Y1(0)=1 : Y2(0)=16
Return

$ON_WFCY
Onevent INIT_AREA Call D_WFCY(zc) From W1VXAMT
Return

Subprog D_WFCY(VALEUR)
Variable Char    VALEUR()
If varinit([M]WFCY,indice)=0
 VALEUR = mess(498,197,1)-GXAFCY
Endif
Gosub _AFF
End

$ON_WMMILNUM
Onevent INIT_AREA Call D_WMMILNUM(zc) From W1VXAMT
Return

Subprog D_WMMILNUM(VALEUR)
Variable Char    VALEUR()
If varinit([M]WMMILNUM,indice)=0
 VALEUR = mess(681,197,1)
Endif
Gosub _AFF
End

$ON_MMLNUM
Onevent CONTROL Call C_MMLNUM(zc) From W1VXAMT
Onevent AFTER_CHANGE Gosub AMM_MMLNUM From W1VXAMT
Onevent BEFORE_INPUT Call AS_MMLNUM(zc) From W1VXAMT
Return

Subprog AS_MMLNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_MMLNUM(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_MMLNUM(VALEUR)
Variable Char    VALEUR()
## Action VXACTRBTS
Call VXACTRMFG(VALEUR,61) From VXACTRTRS
If mkstat : GERR = 1 : GZONE = "MMLNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

$AMM_MMLNUM
Call AM_MMLNUM(zc)
If !mkstat & GOBJET
 zoncou = "MMLNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MMLNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_MMLNUM(VALEUR) From VXAMT
If mkstat : GERR = 1 : GZONE = "MMLNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_MMLNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VXAMFGTRS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VXAMFGTRS"
 PARMSK(1) = "61"
 Call S_TAB_CHAR(VALEUR,PARMSK,"VXAMFGTRS","VXASELTRS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WMFGNUM
Onevent INIT_AREA Call D_WMFGNUM(zc) From W1VXAMT
Return

Subprog D_WMFGNUM(VALEUR)
Variable Char    VALEUR()
If varinit([M]WMFGNUM,indice)=0
 VALEUR = mess(699,197,1)
Endif
Gosub _AFF
End

$ON_MFGNUM
Onevent CONTROL Call C_MFGNUM(zc) From W1VXAMT
Onevent AFTER_CHANGE Gosub AMM_MFGNUM From W1VXAMT
Onevent BEFORE_INPUT Call AS_MFGNUM(zc) From W1VXAMT
Return

Subprog AS_MFGNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_MFGNUM(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 0 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_MFGNUM(VALEUR) From VXAMT
 If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_MFGNUM
Call AM_MFGNUM(zc)
If !mkstat & GOBJET
 zoncou = "MFGNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_MFGNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_MFGNUM(VALEUR) From VXAMT
If mkstat : GERR = 1 : GZONE = "MFGNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_MFGNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELMTKMFG
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELMTKMFG"
 PARMSK(1) = [M]FCY
 PARMSK(2) = "1"
 PARMSK(3) = "2"
 PARMSK(4) = "4"
 PARMSK(5) = "2"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELMTKMFG","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WITMREF
Onevent INIT_AREA Call D_WITMREF(zc) From W1VXAMT
Return

Subprog D_WITMREF(VALEUR)
Variable Char    VALEUR()
If varinit([M]WITMREF,indice)=0
 VALEUR = mess(80,197,1)
Endif
Gosub _AFF
End

$ON_ITMREF
Onevent BEFORE_INPUT Call AS_ITMREF(zc) From W1VXAMT
Onevent CONTROL Call C_ITMREF(zc) From W1VXAMT
Onevent AFTER_CHANGE Gosub AMM_ITMREF From W1VXAMT
Return

Subprog AS_ITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
## Action STD
Call AS_ITMREF(VALEUR) From VXAMT
If mkstat=2
 [M]ITMREF(INDIC) = VALEUR
 Affzo ITMREF(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_ITMREF(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_ITMREF(VALEUR) From VXAMT
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

$AMM_ITMREF
Call AM_ITMREF(zc)
If !mkstat & GOBJET
 zoncou = "ITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ITMREF(VALEUR) From VXAMT
If mkstat : GERR = 1 : GZONE = "ITMREF" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_ITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELCPNMBM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELCPNMBM"
 PARMSK(1) = [M]FCY
 PARMSK(2) = [M]MFGNUM
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = "1"
 PARMSK(6) = num$([M]MFGLIN)
 PARMSK(7) = num$([M]BOMSEQ)
 PARMSK(8) = num$([M]BOMOPE)
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELCPNMBM","MFGSELLIB","") From GACTION
 [M]MFGLIN = val(PARMSK(6))
 [M]BOMSEQ = val(PARMSK(7))
 [M]BOMOPE = val(PARMSK(8))
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WSTU
Onevent INIT_AREA Call D_WSTU(zc) From W1VXAMT
Return

Subprog D_WSTU(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSTU,indice)=0
 VALEUR = mess(710,197,1)
Endif
Gosub _AFF
End

$ON_STU
Return

$ON_WUSEQTY
Onevent INIT_AREA Call D_WUSEQTY(zc) From W1VXAMT
Return

Subprog D_WUSEQTY(VALEUR)
Variable Char    VALEUR()
If varinit([M]WUSEQTY,indice)=0
 VALEUR = mess(677,197,1)
Endif
Gosub _AFF
End

$ON_USEQTY
Onevent BEFORE_AREA Gosub AV_USEQTY From W1VXAMT
Onevent AFTER_CHANGE Gosub AMM_USEQTY From W1VXAMT
Return

$AV_USEQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]USEQTY(indice) With "Nz:"+GUNTFMT
Gosub _AFF
Return

$AMM_USEQTY
Call AM_USEQTY(zc)
If !mkstat & GOBJET
 zoncou = "USEQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_USEQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_USEQTY(VALEUR) From VXAMT
If mkstat : GERR = 1 : GZONE = "USEQTY" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_WSTA
Onevent INIT_AREA Call D_WSTA(zc) From W1VXAMT
Return

Subprog D_WSTA(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSTA,indice)=0
 VALEUR = mess(702,197,1)
Endif
Gosub _AFF
End

$ON_STA
Onevent CONTROL Call C_STA(zc) From W1VXAMT
Onevent BEFORE_INPUT Call AS_STA(zc) From W1VXAMT
Return

Subprog AS_STA(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_STA(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_STA(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSTA
Call STKCTRSTA(VALEUR,[F:SRU]AUZSST,[F:ITF]QUAFLG,0,0,mkstat) From STKACT
If mkstat : GERR = 1 : GZONE = "STA" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_STA(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSTA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSTA"
 PARMSK(1) = [F:SRU]AUZSST
 PARMSK(2) = num$([F:ITF]QUAFLG)
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSTA","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WLOC
Onevent INIT_AREA Call D_WLOC(zc) From W1VXAMT
Return

Subprog D_WLOC(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOC,indice)=0
 VALEUR = mess(672,197,1)
Endif
Gosub _AFF
End

$ON_LOC
Onevent CONTROL Call C_LOC(zc) From W1VXAMT
Onevent BEFORE_INPUT Call AS_LOC(zc) From W1VXAMT
Return

Subprog AS_LOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOC(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_LOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
If !mkstat
 ## Action STKCTREMPS
 Call STKCTREMPS(VALEUR,[M]FCY,"14","","") From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOC" : GZNUM = 0 : Endif
Endif
Gosub _AFF
End

Subprog S_LOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOCT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOCT"
 PARMSK(1) = [M]FCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = "14"
 Call S_LIS_CHAR(VALEUR,PARMSK,"STKSELLOCT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WLOT
Onevent INIT_AREA Call D_WLOT(zc) From W1VXAMT
Return

Subprog D_WLOT(VALEUR)
Variable Char    VALEUR()
If varinit([M]WLOT,indice)=0
 VALEUR = mess(43,197,1)
Endif
Gosub _AFF
End

$ON_LOT
Onevent CONTROL Call C_LOT(zc) From W1VXAMT
Onevent BEFORE_INPUT Call AS_LOT(zc) From W1VXAMT
Return

Subprog AS_LOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_LOT(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_LOT(VALEUR)
Variable Char    VALEUR()
## Action STKCTRLOTS
Call STKCTRLOTS(VALEUR,[M]ITMREF,[M]IPTDAT,"",[M]FCY) From STKACT
If mkstat : GERR = 1 : GZONE = "LOT" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_LOT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELLOT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELLOT"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M]FCY
 PARMSK(3) = "XAMT"
 PARMSK(4) = "0"
 PARMSK(5) = "1"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELLOT","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WSLO
Onevent INIT_AREA Call D_WSLO(zc) From W1VXAMT
Return

Subprog D_WSLO(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSLO,indice)=0
 VALEUR = mess(456,197,1)
Endif
Gosub _AFF
End

$ON_SLO
Onevent CONTROL Call C_SLO(zc) From W1VXAMT
Onevent BEFORE_INPUT Call AS_SLO(zc) From W1VXAMT
Return

Subprog AS_SLO(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_SLO(zc) From W1VXAMT
Gosub _AFF
End

Subprog C_SLO(VALEUR)
Variable Char    VALEUR()
## Action STKCTRSLOS
Call STKCTRSLOS(VALEUR,[M]LOT,[M]ITMREF,[M]IPTDAT,"",[M]FCY) From STKACT
If mkstat : GERR = 1 : GZONE = "SLO" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_SLO(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSLOM
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSLOM"
 PARMSK(1) = [M]ITMREF
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = [M]LOT
 PARMSK(4) = [M]LOT
 PARMSK(5) = [M]FCY
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSLOM","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_WSER
Onevent INIT_AREA Call D_WSER(zc) From W1VXAMT
Return

Subprog D_WSER(VALEUR)
Variable Char    VALEUR()
If varinit([M]WSER,indice)=0
 VALEUR = mess(453,197,1)
Endif
Gosub _AFF
End

$ON_SERNUM
Onevent AFTER_CHANGE Gosub AMM_SERNUM From W1VXAMT
Onevent BEFORE_INPUT Call AS_SERNUM(zc) From W1VXAMT
Return

Subprog AS_SERNUM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(8255,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_SERNUM(zc) From W1VXAMT
Gosub _AFF
End

$AMM_SERNUM
Call AM_SERNUM(zc)
If !mkstat & GOBJET
 zoncou = "SERNUM" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SERNUM(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SERNUM(VALEUR) From VXAMT
If mkstat : GERR = 1 : GZONE = "SERNUM" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_SERNUM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELSER
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELSER"
 PARMSK(1) = [M]FCY
 PARMSK(2) = [M]ITMREF
 PARMSK(3) = "0000000"
 PARMSK(4) = "0"
 PARMSK(5) = ""
 PARMSK(6) = "0"
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELSER","STKSEL","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_FCY
Return

$ON_WCLEFLG
Onevent INIT_AREA Call D_WCLEFLG(zc) From W1VXAMT
Return

Subprog D_WCLEFLG(VALEUR)
Variable Char    VALEUR()
If varinit([M]WCLEFLG,indice)=0
 VALEUR = mess(12,198,1)
Endif
Gosub _AFF
End

$ON_CLEFLG
Onevent INIT_AREA Call D_CLEFLG(zc) From W1VXAMT
Onevent BEFORE_INPUT Call AS_CLEFLG(zc) From W1VXAMT
Return

Subprog D_CLEFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CLEFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CLEFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CPLQTY
Onevent BEFORE_AREA Gosub AV_CPLQTY From W1VXAMT
Return

$AV_CPLQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find("",GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_LOCTYP
Return

$ON_TCLCOD
Return

$ON_TRSCODS
Onevent INIT_AREA Call D_TRSCODS(zc) From W1VXAMT
Return

Subprog D_TRSCODS(VALEUR)
Variable Char    VALEUR()
If varinit([M]TRSCODS,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"","") From SUBADI
Endif
Gosub _AFF
End

$ON_BOMOPE
Return

$ON_WQTY
Onevent BEFORE_AREA Gosub AV_WQTY From W1VXAMT
Return

$AV_WQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_TRSTYP
Onevent INIT_AREA Call D_TRSTYP(zc) From W1VXAMT
Return

Subprog D_TRSTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TRSTYP,indice)=0
 VALEUR = 6
Endif
Gosub _AFF
End

$CHG_STY
Return


