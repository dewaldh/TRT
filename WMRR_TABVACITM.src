#<AdxTL>@(#)0.0.0.0 $Revision$Class Tax levels
# Supervisor
## CRUD-CLASSE ## TABVACITM
# 2018-08-27 13:39:25 154


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABVACITM [TVI_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABVACITM") From ASYRCOM : Endif
Local Instance TABVACITM Using R_TABVACITM

If !SILENCE : Call TRACE("3 --> New Instance R_TABVACITM") From ASYRCOM : Endif
TABVACITM = NewInstance R_TABVACITM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TVI_]TVI0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABVACITM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABVACITM.AREAD([TVI_]VACITM,[TVI_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABVACITM.TVI.VACITM ="-num$(TABVACITM.TVI.VACITM)) From ASYRCOM
 Call TRACE("TABVACITM.TVI.LEG ="-num$(TABVACITM.TVI.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABVACITM.TVI.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABVACITM.TVI.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TVI_]
FreeGroup TABVACITM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABVACITM,ACLE,ASTATUS,_ETAG)
Variable Instance TABVACITM Using R_TABVACITM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VACITM(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VACITM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABVACITM [TVI]
Default File [F:TVI]
Read [F:TVI]TVI0 = [L]_VACITM;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TVI]UPDTICK)>0
 [L]_ETAG = num$([F:TVI]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABVACITM,ACLE,ASTATUS)
Variable Instance TABVACITM Using R_TABVACITM
Value Char ACLE
Variable Integer ASTATUS
Local Char _VACITM(5)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VACITM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABVACITM.AREAD([L]_VACITM,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABVACITM,_VACITM,_LEG,ASTATUS)
Variable Instance TABVACITM Using R_TABVACITM
Value Char _VACITM
Value Char _LEG
Variable Integer ASTATUS

If TABVACITM = null : End : Endif

Gosub AVARIABLES From WMR00TABVACITM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABVACITM.APARENT=null
 [L]A_I = TABVACITM.freeSnapshot
 TABVACITM.snapshotEnabled = 0
 TABVACITM.setAccessorEnabled = 0
Endif

If fmet TABVACITM.ACTX.AGETAFCRIGHT(TABVACITM,"GESTVI",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TVI]
Read [F:TVI]TVI0 = [L]_VACITM;[L]_LEG
If fstat
[L]A_ERROR = [L]_VACITM+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABVACITM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABVACITM.ACTX.AGETAFCRIGHTR(TABVACITM,"GESTVI",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABVACITM.ACTX.ASTACRITROLE(TABVACITM,[L]_VACITM+"~"+[L]_LEG
& ,"TVI","TVI",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABVACITM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABVACITM.TVI.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABVACITM.TVI.AREAD([L]_VACITM,[L]_LEG))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABVACITM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABVACITM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABVACITM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABVACITM.APARENT=null
 TABVACITM.snapshotEnabled = 1
 TABVACITM.setAccessorEnabled = 1
Endif
LogicClose File [TVI]
End



