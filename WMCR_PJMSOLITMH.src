#<AdxTL>@(#)0.0.0.0 $Revision$Class Sold product list
# Supervisor
## CRUD-CLASSE ## PJMSOLITMH
# 2018-08-27 12:40:21 587


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMSOLITMH [PSOH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMSOLITMH") From ASYRCOM : Endif
Local Instance PJMSOLITMH Using C_PJMSOLITMH

If !SILENCE : Call TRACE("3 --> New Instance C_PJMSOLITMH") From ASYRCOM : Endif
PJMSOLITMH = NewInstance C_PJMSOLITMH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PSOH_]PSOH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMSOLITMH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.AREAD([PSOH_]PSONUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMSOLITMH.PSONUM ="-num$(PJMSOLITMH.PSONUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMSOLITMH.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMSOLITMH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PSOH_]
FreeGroup PJMSOLITMH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMSOLITMH,ACLE,ASTATUS,_ETAG)
Variable Instance PJMSOLITMH Using C_PJMSOLITMH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PSONUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PSONUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PJMSOLITMH [PSOH]
Default File [F:PSOH]
Read [F:PSOH]PSOH0 = [L]_PSONUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PSOH]UPDTICK)>0
 [L]_ETAG = num$([F:PSOH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMSOLITMH,ACLE,ASTATUS)
Variable Instance PJMSOLITMH Using C_PJMSOLITMH
Value Char ACLE
Variable Integer ASTATUS
Local Char _PSONUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PSONUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.AREAD([L]_PSONUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMSOLITMH,_PSONUM,ASTATUS)
Variable Instance PJMSOLITMH Using C_PJMSOLITMH
Value Char _PSONUM
Variable Integer ASTATUS

If PJMSOLITMH = null : End : Endif

Gosub AVARIABLES From WMC00PJMSOLITMH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMSOLITMH.APARENT=null
 [L]A_I = PJMSOLITMH.freeSnapshot
 PJMSOLITMH.snapshotEnabled = 0
 PJMSOLITMH.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMSOLITMH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMSOLITMH.APARENT=null
 PJMSOLITMH.snapshotEnabled = 1
 PJMSOLITMH.setAccessorEnabled = 1
Endif
LogicClose File [PSOH] ,[SPLD] ,[SPLO]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH._ACTION_PARAM("AREAD_BEFORE",[L]_PSONUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PSOH]
Read [F:PSOH]PSOH0 = [L]_PSONUM
If fstat
[L]A_ERROR = [L]_PSONUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMSOLITMH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PSOH]AUUID)>0 & [F:PSOH]AUUID=NullUuid
 [F:PSOH]AUUID = getUuid
Endif
SetInstance PJMSOLITMH With [F:PSOH]
PJMSOLITMH.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SPLD]
 [L]A_N2=0
 For [F:SPLD]PSOD0 Where PSONUM=[F:PSOH]PSONUM
  [L]A_N2 +=1
  PJMSOLITMH.SPLD(A_N2) = NewInstance  C_PJMSOLITMD(PJMSOLITMH.ACTX,NullUuid,[L]A_N2,PJMSOLITMH,"SPLD") AllocGroup PJMSOLITMH
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLD(A_N2).ADDINSTANCE_BOUND)
  Callmet PJMSOLITMH.SPLD(A_N2).AREAD([F:SPLD]PSONUM,[F:SPLD]SEQNUM)
  PJMSOLITMH.SPLD(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLD(A_N2).ASETATTRIBUTE("PSONUM","$namProParent","PSONUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLD(A_N2).ASETATTRIBUTE("SEQNUM","$isDisabled","true"))
 Next SPLD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:SPLO]
 [L]A_N2=0
 For [F:SPLO]PSOO0 Where PSONUM=[F:PSOH]PSONUM
  [L]A_N2 +=1
  PJMSOLITMH.SPLO(A_N2) = NewInstance  C_PJMSOLITMO(PJMSOLITMH.ACTX,NullUuid,[L]A_N2,PJMSOLITMH,"SPLO") AllocGroup PJMSOLITMH
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2).ADDINSTANCE_BOUND)
  Callmet PJMSOLITMH.SPLO(A_N2).AREAD([F:SPLO]PSONUM,[F:SPLO]OPPNUM,[F:SPLO]PBUCOD,[F:SPLO]TASCOD,[F:SPLO]SEQNUM)
  PJMSOLITMH.SPLO(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2).ASETATTRIBUTE("PSONUM","$namProParent","PSONUM"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2).ASETATTRIBUTE("OPPNUM","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2).ASETATTRIBUTE("PBUCOD","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2).ASETATTRIBUTE("TASCOD","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.SPLO(A_N2).ASETATTRIBUTE("SEQNUM","$isDisabled","true"))
 Next SPLO
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet PJMSOLITMH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



