#<AdxTL>@(#)0.0.0.0 $Revision$Class Land purchase
# Supervisor
## CRUD-CLASSE ## YLNDPUR
# 2018-10-17 01:32:28 032

Gosub TEST From WMCR_YLNDPUR : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YLNDPURID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YLNDPUR : YLNDPUR
# YLDS : YLNDPUR YLPMARGSCH
# YLDM : YLNDPUR YLPLNDMRG
# YLPR : YLNDPUR YLPREL
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YLNDPUR._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YLNDPUR.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YLNDPUR.ACTX.AFOLDER,nomap,"")>0
 Local File YLNDPUR [YLDP]
 Local File YLPMARGSCH [YLDM]
 Local File YLPLNDMRG [YLDS]
 Local File YLPREL [YLPD]
Else
 Local File =YLNDPUR.ACTX.AFOLDER+".YLNDPUR" [YLDP]
 Local File =YLNDPUR.ACTX.AFOLDER+".YLPMARGSCH" [YLDM]
 Local File =YLNDPUR.ACTX.AFOLDER+".YLPLNDMRG" [YLDS]
 Local File =YLNDPUR.ACTX.AFOLDER+".YLPREL" [YLPD]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YLNDPUR.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YLDP] With
& [YLDM]YLDM0 = [F:YLDP]YLNDPURID,
& [YLDS]YLDS0 = [F:YLDP]YLNDPURID,
& [YLPD]YLPD0 = [F:YLDP]YLNDPURID
& As [LNK_]
Return

############################################################################################
### YLNDPUR(WYLDP)
############################################################################################
Funprog  _MAJSQL_YLNDPUR(WYLDP)
Variable Instance WYLDP Using C_YLNDPUR
Local Integer ASTATUS,A_I,A_J
Default File [F:YLDP]
If WYLDP.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLDP) From ASYRSUB
 SetInstance [F:YLDP] With WYLDP
 Write [F:YLDP]
 If fstat
  Call FSTA("YLDP",WYLDP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDP.updTick = [F:YLDP]updTick
Elsif WYLDP.ASTALIN=[V]CST_ALL or WYLDP.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLDP) From ASYRSUB
 SetInstance [F:YLDP] With WYLDP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDP,"YLNDPUR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLDP]YLDP0 = [F:YLDP]YLNDPURID
 If fstat
  Call FSTA("YLDP",WYLDP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDP.updTick = [F:YLDP]updTick
Elsif WYLDP.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLDP] With WYLDP
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDP,"YLNDPUR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLDP]YLDP0 = [F:YLDP]YLNDPURID
 If fstat
  Call FSTA("YLDP",WYLDP,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLPMARGSCH(WYLDM)
############################################################################################
Funprog  _MAJSQL_YLPMARGSCH(WYLDM)
Variable Instance WYLDM Using C_YLDS
Local Integer ASTATUS,A_I,A_J
Default File [F:YLDM]
If WYLDM.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLDM) From ASYRSUB
 SetInstance [F:YLDM] With WYLDM
 Write [F:YLDM]
 If fstat
  Call FSTA("YLDM",WYLDM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDM.updTick = [F:YLDM]updTick
Elsif WYLDM.ASTALIN=[V]CST_ALL or WYLDM.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLDM) From ASYRSUB
 SetInstance [F:YLDM] With WYLDM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDM,"YLPMARGSCH")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLDM]YLDM0 = [F:YLDM]YLNDPURID
 If fstat
  Call FSTA("YLDM",WYLDM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDM.updTick = [F:YLDM]updTick
Elsif WYLDM.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLDM] With WYLDM
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDM,"YLPMARGSCH")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLDM]YLDM0 = [F:YLDM]YLNDPURID
 If fstat
  Call FSTA("YLDM",WYLDM,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLPLNDMRG(WYLDS)
############################################################################################
Funprog  _MAJSQL_YLPLNDMRG(WYLDS)
Variable Instance WYLDS Using C_YLDM
Local Integer ASTATUS,A_I,A_J
Default File [F:YLDS]
If WYLDS.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLDS) From ASYRSUB
 SetInstance [F:YLDS] With WYLDS
 Write [F:YLDS]
 If fstat
  Call FSTA("YLDS",WYLDS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDS.updTick = [F:YLDS]updTick
Elsif WYLDS.ASTALIN=[V]CST_ALL or WYLDS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLDS) From ASYRSUB
 SetInstance [F:YLDS] With WYLDS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDS,"YLPLNDMRG")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLDS]YLDS0 = [F:YLDS]YLNDPURID
 If fstat
  Call FSTA("YLDS",WYLDS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLDS.updTick = [F:YLDS]updTick
Elsif WYLDS.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLDS] With WYLDS
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLDS,"YLPLNDMRG")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLDS]YLDS0 = [F:YLDS]YLNDPURID
 If fstat
  Call FSTA("YLDS",WYLDS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLPREL(WYLPD)
############################################################################################
Funprog  _MAJSQL_YLPREL(WYLPD)
Variable Instance WYLPD Using C_YLPR
Local Integer ASTATUS,A_I,A_J
Default File [F:YLPD]
If WYLPD.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLPD) From ASYRSUB
 SetInstance [F:YLPD] With WYLPD
 Write [F:YLPD]
 If fstat
  Call FSTA("YLPD",WYLPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLPD.updTick = [F:YLPD]updTick
Elsif WYLPD.ASTALIN=[V]CST_ALL or WYLPD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLPD) From ASYRSUB
 SetInstance [F:YLPD] With WYLPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLPD,"YLPREL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLPD]YLPD0 = [F:YLPD]YLNDPURID
 If fstat
  Call FSTA("YLPD",WYLPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLPD.updTick = [F:YLPD]updTick
Elsif WYLPD.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLPD] With WYLPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLPD,"YLPREL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLPD]YLPD0 = [F:YLPD]YLNDPURID
 If fstat
  Call FSTA("YLPD",WYLPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



