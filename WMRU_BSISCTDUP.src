#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import segment
# Supervisor
## CRUD-CLASSE ## BSISCTDUP
# 2018-08-27 13:08:19 143


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(BSISCTDUP,ASTATUS)
Variable Instance BSISCTDUP Using R_BSISCTDUP
Variable Integer ASTATUS

If BSISCTDUP = null : End : Endif

Gosub AVARIABLES From WMR00BSISCTDUP
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_BSISCTDUP
Else
 Gosub AUPDATE_BSISCTDUP
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = BSISCTDUP.freeSnapshot
BSISCTDUP.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
BSISCTDUP.ASTALIN = [V]CST_AUPD
BSISCTDUP.BSCTDUP.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = BSISCTDUP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSISCTDUP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet BSISCTDUP._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet BSISCTDUP._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet BSISCTDUP._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If BSISCTDUP.BSCTDUP.ASTALIN = [V]CST_ANEWDEL : Return : Endif
BSISCTDUP.BSCTDUP.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(BSISCTDUP.BSCTDUP.ASTALIN)<>""
 [L]A_ASTALIN = BSISCTDUP.BSCTDUP.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.BSCTDUP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(BSISCTDUP.BSCTDUP.ASTALIN)<>""
 [L]A_ASTALIN = BSISCTDUP.BSCTDUP.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.BSCTDUP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_BSISCTDUP
Gosub AUPDATE_BSISCTDUP
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(BSISCTDUP.BSCTDUP.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 BSISCTDUP.BSCTDUP.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AUPDATE_BSISCTDUP
[L]A_ASTALIN = BSISCTDUP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.BSCTDUP._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = BSISCTDUP.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet BSISCTDUP.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
$_AUPDATE_ABORT
If BSISCTDUP.snapshotEnabled=1
 [L]A_RETIK = BSISCTDUP.revertUpdTick
Endif

[L]ASTATUS = max(fmet BSISCTDUP.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



