#<AdxTL>@(#)0.0.0.0 $Revision$Class Actuals analytical
# Supervisor
## CRUD-CLASSE ## BALANASI
# 2018-08-27 12:24:25 221


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BALANA [BLA_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BALANASI") From ASYRCOM : Endif
Local Instance BALANASI Using C_BALANASI

If !SILENCE : Call TRACE("3 --> New Instance C_BALANASI") From ASYRCOM : Endif
BALANASI = NewInstance C_BALANASI AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BLA_]BLA1 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BALANASI") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BALANASI.AREAD([BLA_]ACCNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BALANASI.ACCNUM ="-num$(BALANASI.ACCNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BALANASI.AKEYS)
  Call TRACE("-"-num$(I)-":"-BALANASI.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BLA_]
FreeGroup BALANASI
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BALANASI,ACLE,ASTATUS,_ETAG)
Variable Instance BALANASI Using C_BALANASI
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Integer _ACCNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ACCNUM = val([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File BALANA [BLA]
Default File [F:BLA]
Read [F:BLA]BLA1 = [L]_ACCNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BLA]UPDTICK)>0
 [L]_ETAG = num$([F:BLA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BALANASI,ACLE,ASTATUS)
Variable Instance BALANASI Using C_BALANASI
Value Char ACLE
Variable Integer ASTATUS
Local Integer _ACCNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ACCNUM = val([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BALANASI.AREAD([L]_ACCNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BALANASI,_ACCNUM,ASTATUS)
Variable Instance BALANASI Using C_BALANASI
Value Integer _ACCNUM
Variable Integer ASTATUS

If BALANASI = null : End : Endif

Gosub AVARIABLES From WMC00BALANASI
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BALANASI.APARENT=null
 [L]A_I = BALANASI.freeSnapshot
 BALANASI.snapshotEnabled = 0
 BALANASI.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BALANASI.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BALANASI._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BALANASI.APARENT=null
 BALANASI.snapshotEnabled = 1
 BALANASI.setAccessorEnabled = 1
Endif
LogicClose File [BLA] ,[FIY]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BALANASI._ACTION_PARAM("AREAD_BEFORE",[L]_ACCNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BLA]
Read [F:BLA]BLA1 = [L]_ACCNUM
If fstat
[L]A_ERROR = num$([L]_ACCNUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BALANASI,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:BLA]FCY
[L]A_STRACC = ""
If dim([F:BLA]AUUID)>0 & [F:BLA]AUUID=NullUuid
 [F:BLA]AUUID = getUuid
Endif
SetInstance BALANASI With [F:BLA]
BALANASI.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:FIY]
 [L]A_N2=1
 Read [F:FIY]FIY0 = [F:BLA]CPY;[F:BLA]LEDTYP;[F:BLA]FIY
 If !fstat
  Callmet BALANASI.FIYCLS(A_N2).AREAD([F:FIY]CPY,[F:FIY]LEDTYP,[F:FIY]FIYNUM)
  BALANASI.FIYCLS(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet BALANASI.FIYCLS(A_N2).ASETATTRIBUTE("CPY","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet BALANASI.FIYCLS(A_N2).ASETATTRIBUTE("LEDTYP","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet BALANASI.FIYCLS(A_N2).ASETATTRIBUTE("FIYNUM","$isDisabled","true"))
 Elsif fstat
  [L]ASTATUS = max([L]ASTATUS,fmet BALANASI.FIYCLS(A_N2).ASETERROR("",func ASYRFNC.MES1(mess(00112,00143,1),"FIYCLS")+" : "+num$([F:BLA]CPY)
&  +"~"+num$([F:BLA]LEDTYP)
&  +"~"+num$([F:BLA]FIY)
&  -":"-func ASYRFNC.MES1(mess(93,140,1),"FISCALYEAR"),[V]CST_AWARNING))
 Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet BALANASI.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



