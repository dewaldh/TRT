#<AdxTL>@(#)0.0.0.0 $Revision$Class Employees
# Supervisor
## WMREP REPRESENTATION ## TABMAT
# 2018-08-27 13:37:48 922

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:TMA])=0 : Local File TABMAT [TMA] : Endif
If clalev([F:A_])=0 : Local File TABMAT [A_] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [TMA]
LogicClose File [A_]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"TMA","TMA",ACRITROLE,[V]CST_AFALSE)
Link [TMA] With
& [A_]TMA0~=[TMA]EMPNUM
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"TMA","TMA",ACRITROLE,[V]CST_AFALSE)
Link [TMA] With
& [A_]TMA0~=[TMA]EMPNUM
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# TMA --- TABMAT(TMA)
QRY(NBREP) = NewInstance R_TABMAT AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:TMA]AUUID)>0 & [F:TMA]AUUID=NullUuid
 [F:TMA]AUUID = getUuid
Endif
SetInstance QRY(NBREP).TMA With [F:TMA]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# TMA --- TABMAT(TMA)
QRY = NewInstance R_TABMAT AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:TMA]AUUID)>0 & [F:TMA]AUUID=NullUuid
 [F:TMA]AUUID = getUuid
Endif
SetInstance QRY.TMA With [F:TMA]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0TABMAT
CURQRY = "R_TABMAT"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).TMA.USR.LNKPRO
Callmet QRY(NBREP).TMA.SHIFT.LNKPRO
Callmet QRY(NBREP).TMA.DEFFCY.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.TMA.USR.LNKPRO
Callmet QRY.TMA.SHIFT.LNKPRO
Callmet QRY.TMA.DEFFCY.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "EMPNUM" : TBFIL(NBPRO) = "[F:TMA]EMPNUM"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "TMA.EMPNUM"
NBPRO += 1 : TBPRO(NBPRO) = "EMPDES" : TBFIL(NBPRO) = "[F:TMA]EMPDES"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.EMPDES"
NBPRO += 1 : TBPRO(NBPRO) = "EMPSHO" : TBFIL(NBPRO) = "[F:TMA]EMPSHO"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.EMPSHO"
NBPRO += 1 : TBPRO(NBPRO) = "EMPTYP" : TBFIL(NBPRO) = "[F:TMA]EMPTYP"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "TMA.EMPTYP"
NBPRO += 1 : TBPRO(NBPRO) = "USR" : TBFIL(NBPRO) = "[F:TMA]USR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.USR"
NBPRO += 1 : TBPRO(NBPRO) = "CHGRAT" : TBFIL(NBPRO) = "[F:TMA]CHGRAT"
           : TBTYP(NBPRO) = 4 : TBPTH(NBPRO) = "TMA.CHGRAT"
NBPRO += 1 : TBPRO(NBPRO) = "ENAFLG" : TBFIL(NBPRO) = "[F:TMA]ENAFLG"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "TMA.ENAFLG"
NBPRO += 1 : TBPRO(NBPRO) = "ELPFLG" : TBFIL(NBPRO) = "[F:TMA]ELPFLG"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "TMA.ELPFLG"
NBPRO += 1 : TBPRO(NBPRO) = "SHIFT" : TBFIL(NBPRO) = "[F:TMA]SHIFT"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.SHIFT"
NBPRO += 1 : TBPRO(NBPRO) = "DEFFCY" : TBFIL(NBPRO) = "[F:TMA]DEFFCY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.DEFFCY"
NBPRO += 1 : TBPRO(NBPRO) = "DEFWCR" : TBFIL(NBPRO) = "[F:TMA]DEFWCR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.DEFWCR"
NBPRO += 1 : TBPRO(NBPRO) = "DEFWST" : TBFIL(NBPRO) = "[F:TMA]DEFWST"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "TMA.DEFWST"
NBPRO += 1 : TBPRO(NBPRO) = "ACTDAT" : TBFIL(NBPRO) = "[F:TMA]ACTDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "TMA.ACTDAT"
NBPRO += 1 : TBPRO(NBPRO) = "INACTDAT" : TBFIL(NBPRO) = "[F:TMA]INACTDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "TMA.INACTDAT"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:TMA]EMPNUM"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From TABMAT_RSTD
Gosub EVENTS From TABMAT_RSTD
Return
 


