#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment
# Supervisor
## CRUD-CLASSE ## SHIPMENT
# 2018-08-27 12:45:44 648

Gosub TEST From WMCR_SHIPMENT : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,SHIPNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# SHIPMENT : SHIPMENT
# SHIPMENTD : SHIPMENT SHIPMENTD
# SHIPDOC : SHIPMENT SHIPDOC
# SHIPTRACK : SHIPMENT SHIPTRACK
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet SHIPMENT._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = SHIPMENT.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(SHIPMENT.ACTX.AFOLDER,nomap,"")>0
 Local File SHIPMENT [SHH]
 Local File SHIPMENTD [SHD]
 Local File SHIPDOC [SHIPD]
 Local File SHIPTRACK [SHIPT]
Else
 Local File =SHIPMENT.ACTX.AFOLDER+".SHIPMENT" [SHH]
 Local File =SHIPMENT.ACTX.AFOLDER+".SHIPMENTD" [SHD]
 Local File =SHIPMENT.ACTX.AFOLDER+".SHIPDOC" [SHIPD]
 Local File =SHIPMENT.ACTX.AFOLDER+".SHIPTRACK" [SHIPT]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet SHIPMENT.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [SHH] With
& [SHD]SHD0 ~= [SHH]SHIPNUM,
& [SHIPD]SHIPD0 = [SHH]SHIPNUM; 38,
& [SHIPT]SHIPT0 = [SHH]SHIPNUM; 38
& As [LNK_]
Return

############################################################################################
### SHIPMENT(WSHH)
############################################################################################
Funprog  _MAJSQL_SHIPMENT(WSHH)
Variable Instance WSHH Using C_SHIPMENT
Local Integer ASTATUS,A_I,A_J
Default File [F:SHH]
If WSHH.ASTALIN=[V]CST_ANEW
 Call INICRE(WSHH) From ASYRSUB
 SetInstance [F:SHH] With WSHH
 Write [F:SHH]
 If fstat
  Call FSTA("SHH",WSHH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHH.updTick = [F:SHH]updTick
Elsif WSHH.ASTALIN=[V]CST_ALL or WSHH.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSHH) From ASYRSUB
 SetInstance [F:SHH] With WSHH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHH,"SHIPMENT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SHH]SHH0 = [F:SHH]SHIPNUM
 If fstat
  Call FSTA("SHH",WSHH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHH.updTick = [F:SHH]updTick
Elsif WSHH.ASTALIN=[V]CST_ADEL
 SetInstance [F:SHH] With WSHH
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHH,"SHIPMENT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SHH]SHH0 = [F:SHH]SHIPNUM
 If fstat
  Call FSTA("SHH",WSHH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SHIPMENTD(WSHD)
############################################################################################
Funprog  _MAJSQL_SHIPMENTD(WSHD)
Variable Instance WSHD Using C_SHIPMENTD
Local Integer ASTATUS,A_I,A_J
Default File [F:SHD]
If WSHD.ASTALIN=[V]CST_ANEW
 Call INICRE(WSHD) From ASYRSUB
 SetInstance [F:SHD] With WSHD
 Write [F:SHD]
 If fstat
  Call FSTA("SHD",WSHD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHD.updTick = [F:SHD]updTick
Elsif WSHD.ASTALIN=[V]CST_ALL or WSHD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSHD) From ASYRSUB
 SetInstance [F:SHD] With WSHD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHD,"SHIPMENTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SHD]SHD0 = [F:SHD]SHIPNUM;[F:SHD]SHIPLIN
 If fstat
  Call FSTA("SHD",WSHD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHD.updTick = [F:SHD]updTick
Elsif WSHD.ASTALIN=[V]CST_ADEL
 SetInstance [F:SHD] With WSHD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHD,"SHIPMENTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SHD]SHD0 = [F:SHD]SHIPNUM;[F:SHD]SHIPLIN
 If fstat
  Call FSTA("SHD",WSHD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SHIPDOC(WSHIPD)
############################################################################################
Funprog  _MAJSQL_SHIPDOC(WSHIPD)
Variable Instance WSHIPD Using C_SHIPDOC
Local Integer ASTATUS,A_I,A_J
Default File [F:SHIPD]
If WSHIPD.ASTALIN=[V]CST_ANEW
 Call INICRE(WSHIPD) From ASYRSUB
 SetInstance [F:SHIPD] With WSHIPD
 Write [F:SHIPD]
 If fstat
  Call FSTA("SHIPD",WSHIPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHIPD.updTick = [F:SHIPD]updTick
Elsif WSHIPD.ASTALIN=[V]CST_ALL or WSHIPD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSHIPD) From ASYRSUB
 SetInstance [F:SHIPD] With WSHIPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHIPD,"SHIPDOC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SHIPD]SHIPD0 = [F:SHIPD]VCRNUM;[F:SHIPD]VCRTYP;[F:SHIPD]SDLIN
 If fstat
  Call FSTA("SHIPD",WSHIPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHIPD.updTick = [F:SHIPD]updTick
Elsif WSHIPD.ASTALIN=[V]CST_ADEL
 SetInstance [F:SHIPD] With WSHIPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHIPD,"SHIPDOC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SHIPD]SHIPD0 = [F:SHIPD]VCRNUM;[F:SHIPD]VCRTYP;[F:SHIPD]SDLIN
 If fstat
  Call FSTA("SHIPD",WSHIPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SHIPTRACK(WSHIPT)
############################################################################################
Funprog  _MAJSQL_SHIPTRACK(WSHIPT)
Variable Instance WSHIPT Using C_SHIPTRACK
Local Integer ASTATUS,A_I,A_J
Default File [F:SHIPT]
If WSHIPT.ASTALIN=[V]CST_ANEW
 Call INICRE(WSHIPT) From ASYRSUB
 SetInstance [F:SHIPT] With WSHIPT
 Write [F:SHIPT]
 If fstat
  Call FSTA("SHIPT",WSHIPT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHIPT.updTick = [F:SHIPT]updTick
Elsif WSHIPT.ASTALIN=[V]CST_ALL or WSHIPT.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSHIPT) From ASYRSUB
 SetInstance [F:SHIPT] With WSHIPT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHIPT,"SHIPTRACK")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SHIPT]SHIPT0 = [F:SHIPT]VCRNUM;[F:SHIPT]VCRTYP;[F:SHIPT]STLIN
 If fstat
  Call FSTA("SHIPT",WSHIPT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSHIPT.updTick = [F:SHIPT]updTick
Elsif WSHIPT.ASTALIN=[V]CST_ADEL
 SetInstance [F:SHIPT] With WSHIPT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSHIPT,"SHIPTRACK")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SHIPT]SHIPT0 = [F:SHIPT]VCRNUM;[F:SHIPT]VCRTYP;[F:SHIPT]STLIN
 If fstat
  Call FSTA("SHIPT",WSHIPT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



