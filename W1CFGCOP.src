#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management CFGCOP 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:54:13"
A_USER  = "ADMIN"
A_STAMP = "20180827235413"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask CFGCOP [DIA]
Gosub HORODAT
Local Inpbox "CFGCOP" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Grizo [DIA]10
Grizo [DIA]15
Grizo [DIA]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=112 : Y1(1)=3 : Y2(1)=13
X1(2)=1 : X2(2)=112 : Y1(2)=14 : Y2(2)=16
X1(3)=1 : X2(3)=112 : Y1(3)=17 : Y2(3)=28
Return

$ON_UPDFLG
Onevent INIT_AREA Call D_UPDFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_UPDFLG(zc) From W1CFGCOP
Return

Subprog D_UPDFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]UPDFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_UPDFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRTSPE
Onevent INIT_AREA Call D_TRTSPE(zc) From W1CFGCOP
Return

Subprog D_TRTSPE(VALEUR)
Variable Integer VALEUR
If varinit([M]TRTSPE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CFGFLG
Onevent INIT_AREA Call D_CFGFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_CFGFLG(zc) From W1CFGCOP
Return

Subprog D_CFGFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CFGFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CFGFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TYPFLG
Onevent INIT_AREA Call D_TYPFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_TYPFLG(zc) From W1CFGCOP
Return

Subprog D_TYPFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TYPFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYPFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TABFLG
Onevent INIT_AREA Call D_TABFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_TABFLG(zc) From W1CFGCOP
Return

Subprog D_TABFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TABFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TABFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MSKFLG
Onevent INIT_AREA Call D_MSKFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_MSKFLG(zc) From W1CFGCOP
Return

Subprog D_MSKFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MSKFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MSKFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WINFLG
Onevent INIT_AREA Call D_WINFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_WINFLG(zc) From W1CFGCOP
Return

Subprog D_WINFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]WINFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WINFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ACTFLG
Onevent INIT_AREA Call D_ACTFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_ACTFLG(zc) From W1CFGCOP
Return

Subprog D_ACTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]ACTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_ACTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FONFLG
Onevent INIT_AREA Call D_FONFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_FONFLG(zc) From W1CFGCOP
Return

Subprog D_FONFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]FONFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FONFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_OBJFLG
Onevent INIT_AREA Call D_OBJFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_OBJFLG(zc) From W1CFGCOP
Return

Subprog D_OBJFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]OBJFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_OBJFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TRTFLG
Onevent INIT_AREA Call D_TRTFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_TRTFLG(zc) From W1CFGCOP
Return

Subprog D_TRTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TRTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TRTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MENFLG
Onevent INIT_AREA Call D_MENFLG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_MENFLG(zc) From W1CFGCOP
Return

Subprog D_MENFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]MENFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MENFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BACMEN
Onevent BEFORE_INPUT Call AS_BACMEN(zc) From W1CFGCOP
Onevent INIT_AREA Call D_BACMEN(zc) From W1CFGCOP
Return

Subprog D_BACMEN(VALEUR)
Variable Integer VALEUR
If varinit([M]BACMEN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BACMEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BACMEN(VALEUR) From SUBCCOP
If mkstat=2
 [M]BACMEN(INDIC) = VALEUR
 Affzo BACMEN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RESMEN
Onevent BEFORE_INPUT Call AS_RESMEN(zc) From W1CFGCOP
Onevent INIT_AREA Call D_RESMEN(zc) From W1CFGCOP
Return

Subprog D_RESMEN(VALEUR)
Variable Integer VALEUR
If varinit([M]RESMEN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RESMEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_RESMEN(VALEUR) From SUBCCOP
If mkstat=2
 [M]RESMEN(INDIC) = VALEUR
 Affzo RESMEN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DOSORG
Onevent CONTROL Call C_DOSORG(zc) From W1CFGCOP
Onevent AFTER_CHANGE Gosub AMM_DOSORG From W1CFGCOP
Onevent INIT_AREA Call D_DOSORG(zc) From W1CFGCOP
Onevent BEFORE_INPUT Call AS_DOSORG(zc) From W1CFGCOP
Return

Subprog D_DOSORG(VALEUR)
Variable Char    VALEUR()
If varinit([M]DOSORG,indice)=0
 ## Action STD
 Call D_DOSORG(VALEUR) From SUBCCOP
Endif
Gosub _AFF
End

Subprog AS_DOSORG(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_DOSORG(VALEUR) From SUBCCOP
If mkstat=2
 [M]DOSORG(INDIC) = VALEUR
 Affzo DOSORG(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_DOSORG(zc) From W1CFGCOP
Gosub _AFF
End

Subprog C_DOSORG(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DOSORG" : GZNUM = 1090 : Endif
If !mkstat
 ## Action CONTDOS
 Call C_DOSSIER(VALEUR) From DOSCONT
 If mkstat : GERR = 1 : GZONE = "DOSORG" : GZNUM = 1090 : Endif
 If !mkstat
  ## Action ACCESDOS
  Call CTL_DROIT_DOSSIER(VALEUR,"") From DOSCONT
  If mkstat : GERR = 1 : GZONE = "DOSORG" : GZNUM = 1090 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_DOSORG
Call AM_DOSORG(zc)
If !mkstat & GOBJET
 zoncou = "DOSORG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DOSORG(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action APASSWD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "APASSWD"
 PARMSK(1) = ""
 PARMSK(2) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"APASSWD","APASSWD","SPEPASSWD") From GSAISIE
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "DOSORG" : GZNUM = 1090 : Endif
Endif
Gosub _AFF
End

Subprog S_DOSORG(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADS"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELADS","SUBADS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_DOSDES
Onevent CONTROL Call C_DOSDES(zc) From W1CFGCOP
Onevent AFTER_CHANGE Gosub AMM_DOSDES From W1CFGCOP
Onevent BEFORE_INPUT Call AS_DOSDES(zc) From W1CFGCOP
Return

Subprog AS_DOSDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_DOSDES(VALEUR) From SUBCCOP
If mkstat=2
 [M]DOSDES(INDIC) = VALEUR
 Affzo DOSDES(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_DOSDES(zc) From W1CFGCOP
Gosub _AFF
End

Subprog C_DOSDES(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DOSDES" : GZNUM = 1091 : Endif
If !mkstat
 ## Action CONTDOS
 Call C_DOSSIER(VALEUR) From DOSCONT
 If mkstat : GERR = 1 : GZONE = "DOSDES" : GZNUM = 1091 : Endif
 If !mkstat
  ## Action ACCESDOS
  Call CTL_DROIT_DOSSIER(VALEUR,"") From DOSCONT
  If mkstat : GERR = 1 : GZONE = "DOSDES" : GZNUM = 1091 : Endif
  If !mkstat
   ## Action STD
   Call C_DOSDES(VALEUR) From SUBCCOP
   If mkstat : GERR = 1 : GZONE = "DOSDES" : GZNUM = 1091 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_DOSDES
Call AM_DOSDES(zc)
If !mkstat & GOBJET
 zoncou = "DOSDES" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DOSDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action APASSWD
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "APASSWD"
 PARMSK(1) = ""
 PARMSK(2) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"APASSWD","APASSWD","SPEPASSWD") From GSAISIE
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "DOSDES" : GZNUM = 1091 : Endif
Endif
Gosub _AFF
End

Subprog S_DOSDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADS"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELADS","SUBADS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$CHG_STY
Return


