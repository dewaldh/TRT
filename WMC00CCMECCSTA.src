#<AdxTL>@(#)0.0.0.0 $Revision$Class Major version
# Supervisor
## CRUD-CLASSE ## CCMECCSTA
# 2018-08-27 12:28:30 214

Gosub TEST From WMCR_CCMECCSTA : End

############################################################################################
## R : Subprog AREAD(INSTANCE,ITMREF,ECCVALMAJ)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# CCMECCSTA : ECCSTA
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet CCMECCSTA._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = CCMECCSTA.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(CCMECCSTA.ACTX.AFOLDER,nomap,"")>0
 Local File ECCSTA [ECS]
 Local File ECCSTA [AAA_]
 Local File ATEXTRA [AXX]
Else
 Local File =CCMECCSTA.ACTX.AFOLDER+".ECCSTA" [ECS]
 Local File =CCMECCSTA.ACTX.AFOLDER+".ECCSTA" [AAA_]
 Local File =CCMECCSTA.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet CCMECCSTA.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [ECS] With
& [AAA_]ECS0 = ITMREF+ECCVALMAJ
& As [LNK_]
Return

############################################################################################
### ECCSTA(WECS)
############################################################################################
Funprog  _MAJSQL_ECCSTA(WECS)
Variable Instance WECS Using C_CCMECCSTA
Local Integer ASTATUS,A_I,A_J
Default File [F:ECS]
If WECS.ASTALIN=[V]CST_ANEW
 Call INICRE(WECS) From ASYRSUB
 SetInstance [F:ECS] With WECS
 For J=1 To maxtab(WECS.AXX)
  If WECS.AXX(J)<>null & WECS.AXX(J).PRO= "ECCDESAXX" & WECS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WECS,WECS.AXX(J).TEX,"ECCSTA","ECCDESAXX",WECS.AXX(J).LAN,WECS.ECCVALMAJ,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WECS.AXX)
  If WECS.AXX(J)<>null & WECS.AXX(J).PRO= "ECCSHOAXX" & WECS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WECS,WECS.AXX(J).TEX,"ECCSTA","ECCSHOAXX",WECS.AXX(J).LAN,WECS.ECCVALMAJ,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:ECS]
 If fstat
  Call FSTA("ECS",WECS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WECS.updTick = [F:ECS]updTick
Elsif WECS.ASTALIN=[V]CST_ALL or WECS.ASTALIN=[V]CST_AUPD
 Call INIUPD(WECS) From ASYRSUB
 SetInstance [F:ECS] With WECS
 For J=1 To maxtab(WECS.AXX)
  If WECS.AXX(J)<>null & WECS.AXX(J).PRO= "ECCDESAXX" & WECS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WECS,WECS.AXX(J).TEX,"ECCSTA","ECCDESAXX",WECS.AXX(J).LAN,WECS.ECCVALMAJ,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WECS.AXX)
  If WECS.AXX(J)<>null & WECS.AXX(J).PRO= "ECCSHOAXX" & WECS.AXX(J).FLG>0
   Call MAJTEXTRALAN(WECS,WECS.AXX(J).TEX,"ECCSTA","ECCSHOAXX",WECS.AXX(J).LAN,WECS.ECCVALMAJ,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WECS,"ECCSTA")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:ECS]ECS0 = [F:ECS]ITMREF;[F:ECS]ECCVALMAJ
 If fstat
  Call FSTA("ECS",WECS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WECS.updTick = [F:ECS]updTick
Elsif WECS.ASTALIN=[V]CST_ADEL
 SetInstance [F:ECS] With WECS
 For J=1 To maxtab(WECS.AXX)
  If WECS.AXX(J)<>null & WECS.AXX(J).PRO= "ECCDESAXX"
   Call SUPTEXTRA(WECS,WECS.AXX(J).TEX,"ECCSTA","ECCDESAXX",WECS.AXX(J).LAN,WECS.ECCVALMAJ,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WECS.AXX)
  If WECS.AXX(J)<>null & WECS.AXX(J).PRO= "ECCSHOAXX"
   Call SUPTEXTRA(WECS,WECS.AXX(J).TEX,"ECCSTA","ECCSHOAXX",WECS.AXX(J).LAN,WECS.ECCVALMAJ,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WECS,"ECCSTA")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:ECS]ECS0 = [F:ECS]ITMREF;[F:ECS]ECCVALMAJ
 If fstat
  Call FSTA("ECS",WECS,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



