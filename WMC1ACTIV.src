#<AdxTL>@(#)0.0.0.0 $Revision$Class Activity codes
# Supervisor
## ACLA-CLASSE ## ACTIV
# 2018-08-27 12:19:23 597


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CODACT Activity code ( Field ACV 5)
####################################################################

$SET_CODACT
If [L]_AOLDVAL<>this.CODACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODACT
 Gosub PROPAGATE_CODACT
Endif
Return

$INIT_CODACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CODACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CODACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODACT
[L]CURPRO = "CODACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODACT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODACT
[L]CURPRO = "CODACT"
If vireblc(this.CODACT,2)<>vireblc(format$("KTD:5B",this.CODACT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODACT
[L]CURPRO = "CODACT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODACT
[L]CURPRO = "CODACT"
Return

$PROPAGATE_CODACT
this.isReadonly = 0
[L]CURPRO = "CODACT"
Gosub _LNKPRO_CODACT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CODACT"
$_LNKPRO_CODACT
If vireblc(this.CODACT,2)<>""
 # Link ACTIV
 Local File ACTIV [WACV]
 Read [F:WACV]CODACT = this.CODACT
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WACV]LIBACT & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CODACT","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WACV]
Endif
Return

$_ALOADATTRIBUTE_CODACT
[L]ASTATUS = fmet this.ASETATTRIBUTE("CODACT","$isMandatory","true")
Return


####################################################################
# 2 : LIBACT Description ( Field ATX)
####################################################################

$GET_LIBACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "LIBACT"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_LIBACT
If [L]_AOLDVAL<>this.LIBACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LIBACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LIBACT
 Gosub PROPAGATE_LIBACT
Endif
Return

$INIT_LIBACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "LIBACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LIBACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "LIBACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LIBACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LIBACT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LIBACT
[L]CURPRO = "LIBACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & (maxtab(this.ATX)=0 or  func ASYRSUB._HASFIELDATX(this.ATX,[L]CURPRO)=0)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LIBACT
[L]CURPRO = "LIBACT"
Return

$_AOTHERS_LIBACT
[L]CURPRO = "LIBACT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LIBACT
[L]CURPRO = "LIBACT"
Return

$PROPAGATE_LIBACT
this.isReadonly = 0
[L]CURPRO = "LIBACT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LIBACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "LIBACT"
$_LNKPRO_LIBACT
Return


####################################################################
# 3 : DIME Screen size ( Field L 5)
####################################################################

$SET_DIME
If [L]_AOLDVAL<>this.DIME
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIME
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIME
 Gosub PROPAGATE_DIME
Endif
Return

$INIT_DIME
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIME"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIME
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIME"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIME                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIME                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIME
[L]CURPRO = "DIME"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIME=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIME
[L]CURPRO = "DIME"
Return

$_AOTHERS_DIME
[L]CURPRO = "DIME"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIME
[L]CURPRO = "DIME"
Return

$PROPAGATE_DIME
this.isReadonly = 0
[L]CURPRO = "DIME"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIME
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIME"
$_LNKPRO_DIME
Return


####################################################################
# 4 : MODULE Module ( Field Local menu number 14)
####################################################################

$SET_MODULE
If [L]_AOLDVAL<>this.MODULE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MODULE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MODULE
 Gosub PROPAGATE_MODULE
Endif
Return

$INIT_MODULE
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "MODULE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MODULE=0 and fmet this.AGETATTRIBUTE("MODULE","$isMandatory")="true"
 this.MODULE = 1
Endif
Return
 
$CONTROL_MODULE
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "MODULE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MODULE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MODULE
[L]CURPRO = "MODULE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MODULE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MODULE
[L]CURPRO = "MODULE"
If this.MODULE<0 or this.MODULE>len(mess(0,14,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"14 ->"-num$(this.MODULE)-mess(99,123,1)):  Return : # Local menu "14 -> Invalid option
Endif
Return

$_AOTHERS_MODULE
[L]CURPRO = "MODULE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MODULE
[L]CURPRO = "MODULE"
Return

$PROPAGATE_MODULE
this.isReadonly = 0
[L]CURPRO = "MODULE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MODULE
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "MODULE"
$_LNKPRO_MODULE
Return

$_ALOADATTRIBUTE_MODULE
[L]ASTATUS = fmet this.ASETATTRIBUTE("MODULE","$isMandatory","true")
Return


####################################################################
# 5 : DIMFIL Minimum size ( Field L 5)
####################################################################

$SET_DIMFIL
If [L]_AOLDVAL<>this.DIMFIL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIMFIL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIMFIL
 Gosub PROPAGATE_DIMFIL
Endif
Return

$INIT_DIMFIL
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIMFIL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIMFIL
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIMFIL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIMFIL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIMFIL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIMFIL
[L]CURPRO = "DIMFIL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIMFIL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIMFIL
[L]CURPRO = "DIMFIL"
Return

$_AOTHERS_DIMFIL
[L]CURPRO = "DIMFIL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIMFIL
[L]CURPRO = "DIMFIL"
Return

$PROPAGATE_DIMFIL
this.isReadonly = 0
[L]CURPRO = "DIMFIL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIMFIL
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIMFIL"
$_LNKPRO_DIMFIL
Return


####################################################################
# 6 : RANG Sequence ( Field C 4)
####################################################################

$SET_RANG
If [L]_AOLDVAL<>this.RANG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RANG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RANG
 Gosub PROPAGATE_RANG
Endif
Return

$INIT_RANG
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "RANG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_RANG
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "RANG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RANG                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RANG                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RANG
[L]CURPRO = "RANG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RANG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RANG
[L]CURPRO = "RANG"
Return

$_AOTHERS_RANG
[L]CURPRO = "RANG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RANG
[L]CURPRO = "RANG"
Return

$PROPAGATE_RANG
this.isReadonly = 0
[L]CURPRO = "RANG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RANG
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "RANG"
$_LNKPRO_RANG
Return


####################################################################
# 7 : DIMMAX Maximum size ( Field L 5)
####################################################################

$SET_DIMMAX
If [L]_AOLDVAL<>this.DIMMAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIMMAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIMMAX
 Gosub PROPAGATE_DIMMAX
Endif
Return

$INIT_DIMMAX
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIMMAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DIMMAX
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIMMAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIMMAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIMMAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIMMAX
[L]CURPRO = "DIMMAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIMMAX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIMMAX
[L]CURPRO = "DIMMAX"
Return

$_AOTHERS_DIMMAX
[L]CURPRO = "DIMMAX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIMMAX
[L]CURPRO = "DIMMAX"
Return

$PROPAGATE_DIMMAX
this.isReadonly = 0
[L]CURPRO = "DIMMAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIMMAX
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DIMMAX"
$_LNKPRO_DIMMAX
Return


####################################################################
# 8 : ORDRE Order ( Field L 8)
####################################################################

$SET_ORDRE
If [L]_AOLDVAL<>this.ORDRE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ORDRE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ORDRE
 Gosub PROPAGATE_ORDRE
Endif
Return

$INIT_ORDRE
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ORDRE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ORDRE
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ORDRE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ORDRE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ORDRE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ORDRE
[L]CURPRO = "ORDRE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ORDRE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ORDRE
[L]CURPRO = "ORDRE"
Return

$_AOTHERS_ORDRE
[L]CURPRO = "ORDRE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ORDRE
[L]CURPRO = "ORDRE"
Return

$PROPAGATE_ORDRE
this.isReadonly = 0
[L]CURPRO = "ORDRE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ORDRE
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ORDRE"
$_LNKPRO_ORDRE
Return


####################################################################
# 9 : FLACT Active flag ( Field Local menu number 1)
####################################################################

$SET_FLACT
If [L]_AOLDVAL<>this.FLACT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLACT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLACT
 Gosub PROPAGATE_FLACT
Endif
Return

$INIT_FLACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "FLACT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLACT=0 and fmet this.AGETATTRIBUTE("FLACT","$isMandatory")="true"
 this.FLACT = 1
Endif
Return
 
$CONTROL_FLACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "FLACT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLACT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLACT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLACT
[L]CURPRO = "FLACT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLACT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLACT
[L]CURPRO = "FLACT"
If this.FLACT<0 or this.FLACT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLACT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLACT
[L]CURPRO = "FLACT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLACT
[L]CURPRO = "FLACT"
Return

$PROPAGATE_FLACT
this.isReadonly = 0
[L]CURPRO = "FLACT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLACT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "FLACT"
$_LNKPRO_FLACT
Return


####################################################################
# 10 : INTIT Description ( Field DES 30)
####################################################################

$SET_INTIT
If [L]_AOLDVAL<>this.INTIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTIT
 Gosub PROPAGATE_INTIT
Endif
Return

$INIT_INTIT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "INTIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTIT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "INTIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTIT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTIT
[L]CURPRO = "INTIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTIT
[L]CURPRO = "INTIT"
If vireblc(this.INTIT,2)<>vireblc(format$("K:30X",this.INTIT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INTIT
[L]CURPRO = "INTIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTIT
[L]CURPRO = "INTIT"
Return

$PROPAGATE_INTIT
this.isReadonly = 0
[L]CURPRO = "INTIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTIT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "INTIT"
$_LNKPRO_INTIT
Return


####################################################################
# 11 : TYP Type ( Field Local menu number 93)
####################################################################

$SET_TYP
If [L]_AOLDVAL<>this.TYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TYP
 Gosub PROPAGATE_TYP
Endif
Return

$INIT_TYP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "TYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.TYP=0 and fmet this.AGETATTRIBUTE("TYP","$isMandatory")="true"
 this.TYP = 1
Endif
Return
 
$CONTROL_TYP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "TYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TYP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TYP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TYP
[L]CURPRO = "TYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TYP
[L]CURPRO = "TYP"
If this.TYP<0 or this.TYP>len(mess(0,93,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"93 ->"-num$(this.TYP)-mess(99,123,1)):  Return : # Local menu "93 -> Invalid option
Endif
Return

$_AOTHERS_TYP
[L]CURPRO = "TYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TYP
[L]CURPRO = "TYP"
Return

$PROPAGATE_TYP
this.isReadonly = 0
[L]CURPRO = "TYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TYP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "TYP"
$_LNKPRO_TYP
Return


####################################################################
# 12 : DEP Dependency ( Field Local menu number 74)
####################################################################

$SET_DEP
If [L]_AOLDVAL<>this.DEP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEP
 Gosub PROPAGATE_DEP
Endif
Return

$INIT_DEP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DEP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DEP=0 and fmet this.AGETATTRIBUTE("DEP","$isMandatory")="true"
 this.DEP = 1
Endif
Return
 
$CONTROL_DEP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DEP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEP
[L]CURPRO = "DEP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DEP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEP
[L]CURPRO = "DEP"
If this.DEP<0 or this.DEP>len(mess(0,74,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"74 ->"-num$(this.DEP)-mess(99,123,1)):  Return : # Local menu "74 -> Invalid option
Endif
Return

$_AOTHERS_DEP
[L]CURPRO = "DEP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEP
[L]CURPRO = "DEP"
Return

$PROPAGATE_DEP
this.isReadonly = 0
[L]CURPRO = "DEP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "DEP"
$_LNKPRO_DEP
Return


####################################################################
# 13 : ACTDEP Activity code ( Field ACV 5)
####################################################################

$SET_ACTDEP
If [L]_AOLDVAL<>this.ACTDEP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACTDEP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACTDEP
 Gosub PROPAGATE_ACTDEP
Endif
Return

$INIT_ACTDEP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ACTDEP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACTDEP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ACTDEP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACTDEP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACTDEP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACTDEP
[L]CURPRO = "ACTDEP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACTDEP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACTDEP
[L]CURPRO = "ACTDEP"
If vireblc(this.ACTDEP,2)<>vireblc(format$("KTD:5B",this.ACTDEP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACTDEP
[L]CURPRO = "ACTDEP"
If vireblc(this.ACTDEP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACV.ACTRLREF(this,"ACTDEP",this.ACTDEP,this.ACTDEP,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACTDEP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACTDEP
[L]CURPRO = "ACTDEP"
Return

$PROPAGATE_ACTDEP
this.isReadonly = 0
[L]CURPRO = "ACTDEP"
Gosub _LNKPRO_ACTDEP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACTDEP
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ACTDEP"
$_LNKPRO_ACTDEP
If vireblc(this.ACTDEP,2)<>""
 # Link ACTIV
 Local File ACTIV [WACV]
 Read [F:WACV]CODACT = this.ACTDEP
 If !fstat
  Local File ATEXTE [WATX]
  For [F:WATX] Where NUMERO=[F:WACV]LIBACT & LAN=this.ACTX.LAN
   [L]ASTATUS = fmet this.ASETATTRIBUTE("ACTDEP","$description",[WATX]TEXTE)
  Next WATX
  LogicClose File [WATX]
 Endif
 LogicClose File [WACV]
Endif
Return


####################################################################
# 14 : ACTFOR Formula ( Field AFR 80)
####################################################################

$SET_ACTFOR
If [L]_AOLDVAL<>this.ACTFOR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACTFOR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACTFOR
 Gosub PROPAGATE_ACTFOR
Endif
Return

$INIT_ACTFOR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ACTFOR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACTFOR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ACTFOR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACTFOR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACTFOR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACTFOR
[L]CURPRO = "ACTFOR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACTFOR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACTFOR
[L]CURPRO = "ACTFOR"
Return

$_AOTHERS_ACTFOR
[L]CURPRO = "ACTFOR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACTFOR
[L]CURPRO = "ACTFOR"
Return

$PROPAGATE_ACTFOR
this.isReadonly = 0
[L]CURPRO = "ACTFOR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACTFOR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "ACTFOR"
$_LNKPRO_ACTFOR
Return


####################################################################
# 15 : UPDFLG Validated flag ( Field Local menu number 1)
####################################################################

$SET_UPDFLG
If [L]_AOLDVAL<>this.UPDFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDFLG
 Gosub PROPAGATE_UPDFLG
Endif
Return

$INIT_UPDFLG
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.UPDFLG=0 and fmet this.AGETATTRIBUTE("UPDFLG","$isMandatory")="true"
 this.UPDFLG = 1
Endif
Return
 
$CONTROL_UPDFLG
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDFLG
[L]CURPRO = "UPDFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDFLG
[L]CURPRO = "UPDFLG"
If this.UPDFLG<0 or this.UPDFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.UPDFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_UPDFLG
[L]CURPRO = "UPDFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDFLG
[L]CURPRO = "UPDFLG"
Return

$PROPAGATE_UPDFLG
this.isReadonly = 0
[L]CURPRO = "UPDFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDFLG
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDFLG"
$_LNKPRO_UPDFLG
Return


####################################################################
# 16 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 17 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 18 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 19 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 20 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 21 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 22 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ACTIV
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




