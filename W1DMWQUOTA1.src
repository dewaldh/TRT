#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management DMWQUOTA1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:00:04"
A_USER  = "ADMIN"
A_STAMP = "20180828000004"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask DMWQUOTA1 [DMWQUO1]
Gosub HORODAT
Local Inpbox "DMWQUOTA1" From GFONCTION At A_STAMP With A_WINDPREV Mask [DMWQUO1] As [SIM_]
Grizo [DMWQUO1]5
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DMWQUO1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=2
Return

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1DMWQUOTA1
Onevent AFTER_LINE Call APRES_NBLIG From W1DMWQUOTA1
Return

Subprog C_NBLIG
Local Decimal BASPAG
## Action DIVLINCONT
Call INSERE("LIN") From TABLEAUX
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action DIVLINNUM
Call LINNUM("LIN") From TABLEAUX
If mkstat : End : Endif
Gosub _AFF
End

$ON_LIN
Onevent INIT_AREA Call D_LIN(zc) From W1DMWQUOTA1
Return

Subprog D_LIN(VALEUR)
Variable Decimal VALEUR
If varinit([M]LIN,indice)=0
 ## Action STD
 Call D_LIN(VALEUR) From SUBDMWQUOTA
Endif
Gosub _AFF
End

$ON_PKGMAT
Onevent CONTROL Call C_PKGMAT(zc) From W1DMWQUOTA1
Onevent AFTER_CHANGE Gosub AMM_PKGMAT From W1DMWQUOTA1
Onevent BEFORE_INPUT Call AS_PKGMAT(zc) From W1DMWQUOTA1
Return

Subprog AS_PKGMAT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PKGMAT(zc) From W1DMWQUOTA1
Gosub _AFF
End

Subprog C_PKGMAT(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PKGMAT" : GZNUM = 56825 : Endif
If !mkstat
 ## Action STD
 Call C_PKGMAT(VALEUR) From SUBDMWQUOTA
 If mkstat : GERR = 1 : GZONE = "PKGMAT" : GZNUM = 56825 : Endif
Endif
Gosub _AFF
End

$AMM_PKGMAT
Call AM_PKGMAT(zc)
If !mkstat & GOBJET
 zoncou = "PKGMAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PKGMAT(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PKGMAT(VALEUR) From SUBDMWQUOTA
If mkstat : GERR = 1 : GZONE = "PKGMAT" : GZNUM = 56825 : Endif
Gosub _AFF
End

Subprog S_PKGMAT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action DMWSELID
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "DMWSELID"
 PARMSK(1) = [M:DMWQUO0]SCMCOD
 PARMSK(2) = "2"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELID","SUBDMWPPA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_PKGSIZ
Onevent CONTROL Call C_PKGSIZ(zc) From W1DMWQUOTA1
Onevent AFTER_CHANGE Gosub AMM_PKGSIZ From W1DMWQUOTA1
Onevent BEFORE_INPUT Call AS_PKGSIZ(zc) From W1DMWQUOTA1
Return

Subprog AS_PKGSIZ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_PKGSIZ(zc) From W1DMWQUOTA1
Gosub _AFF
End

Subprog C_PKGSIZ(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PKGSIZ" : GZNUM = 56826 : Endif
If !mkstat
 ## Action STD
 Call C_PKGSIZ(VALEUR) From SUBDMWQUOTA
 If mkstat : GERR = 1 : GZONE = "PKGSIZ" : GZNUM = 56826 : Endif
Endif
Gosub _AFF
End

$AMM_PKGSIZ
Call AM_PKGSIZ(zc)
If !mkstat & GOBJET
 zoncou = "PKGSIZ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PKGSIZ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PKGSIZ(VALEUR) From SUBDMWQUOTA
If mkstat : GERR = 1 : GZONE = "PKGSIZ" : GZNUM = 56826 : Endif
Gosub _AFF
End

Subprog S_PKGSIZ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action DMWSELID
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "DMWSELID"
 PARMSK(1) = [M:DMWQUO0]SCMCOD
 PARMSK(2) = "3"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELID","SUBDMWPPA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_TAFTYP
Onevent CONTROL Call C_TAFTYP(zc) From W1DMWQUOTA1
Onevent AFTER_CHANGE Gosub AMM_TAFTYP From W1DMWQUOTA1
Onevent BEFORE_INPUT Call AS_TAFTYP(zc) From W1DMWQUOTA1
Return

Subprog AS_TAFTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_TAFTYP(zc) From W1DMWQUOTA1
Gosub _AFF
End

Subprog C_TAFTYP(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TAFTYP" : GZNUM = 27544 : Endif
If !mkstat
 ## Action STD
 Call C_TAFTYP(VALEUR) From SUBDMWQUOTA
 If mkstat : GERR = 1 : GZONE = "TAFTYP" : GZNUM = 27544 : Endif
Endif
Gosub _AFF
End

$AMM_TAFTYP
Call AM_TAFTYP(zc)
If !mkstat & GOBJET
 zoncou = "TAFTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TAFTYP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_TAFTYP(VALEUR) From SUBDMWQUOTA
If mkstat : GERR = 1 : GZONE = "TAFTYP" : GZNUM = 27544 : Endif
Gosub _AFF
End

Subprog S_TAFTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action DMWSELID
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "DMWSELID"
 PARMSK(1) = [M:DMWQUO0]SCMCOD
 PARMSK(2) = "4"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELID","SUBDMWPPA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_QUOTA
Onevent AFTER_CHANGE Gosub AMM_QUOTA From W1DMWQUOTA1
Return

$AMM_QUOTA
Call AM_QUOTA(zc)
If !mkstat & GOBJET
 zoncou = "QUOTA" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QUOTA(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_QUOTA(VALEUR) From SUBDMWQUOTA
If mkstat : GERR = 1 : GZONE = "QUOTA" : GZNUM = 44482 : Endif
Gosub _AFF
End

$ON_QUOTANUM
Return

$CHG_STY
Return


