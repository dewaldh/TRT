#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHYHOU YHOU
# 2018-11-26 04:08:07 228

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","YHOUJDET","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJDET [YHJD]
If filinfo(filpath("FIL","YHOUJSTA","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJSTA [YHJS]
If filinfo(filpath("FIL","YHOUJVAR","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJVAR [YHJV]
If filinfo(filpath("FIL","YHOUJCON","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJCON [YHJC]
If filinfo(filpath("FIL","YHOUJPEO","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJPEO [YHJP]
If filinfo(filpath("FIL","YHOUJDH","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJDH [YHDH]
If filinfo(filpath("FIL","YHOUJFIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YHOUJFIN [YHJF]
If filinfo(filpath("FIL","YRELMAST","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File YRELMAST [YRMA]
Local File YHOUJDET [YHJD_]
Local Char KEY_YHJD(120)(1..3)
Local Char KEY_YHJS(120)(1..3)
Local Char KEY_YHJV(120)(1..3)
Local Char KEY_YHJC(120)(1..3)
Local Char KEY_YHJP(120)(1..3)
Local Char KEY_YHDH(120)(1..3)
Local Char KEY_YHJF(120)(1..3)
Local Char KEY_YRMA(120)(1..3)
#Empty keys :
KEY_YHJD(3) = ""
KEY_YHJS(3) = "+0"
KEY_YHJV(3) = "+"
KEY_YHJC(3) = ""
KEY_YHJP(3) = ""
KEY_YHDH(3) = ""
KEY_YHJF(3) = ""
KEY_YRMA(3) = "+"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [YHJD]
LogicClose File [YHJS]
LogicClose File [YHJV]
LogicClose File [YHJC]
LogicClose File [YHJP]
LogicClose File [YHDH]
LogicClose File [YHJF]
LogicClose File [YRMA]
LogicClose File [YHJD_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [YHJD] With
& [YHJS]YHJS0=[F:YHJD]YJBNR,
& [YHJV]YHJV0=[F:YHJD]YJBNR,
& [YHJC]YHJC0~=[F:YHJD]YJBNR,
& [YHJP]YHJP0=[F:YHJD]YJBNR,
& [YHDH]YHDH0=[F:YHJD]YJBNR,
& [YHJF]YHJF0=[F:YHJD]YJBNR,
& [YRMA]YRMA0=[F:YHJD]YGUID
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [YHJD] With
& [YHJS]YHJS0=[F:YHJD]YJBNR,
& [YHJV]YHJV0=[F:YHJD]YJBNR,
& [YHJC]YHJC0~=[F:YHJD]YJBNR,
& [YHJP]YHJP0=[F:YHJD]YJBNR,
& [YHDH]YHDH0=[F:YHJD]YJBNR,
& [YHJF]YHJF0=[F:YHJD]YJBNR,
& [YRMA]YRMA0=[F:YHJD]YGUID
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_YHJD(2) = [F:YHJD]YJBNR
KEY_YHJS(2) = [F:YHJS]YJBNR+"+"+num$([F:YHJS]YSTANBR)
KEY_YHJV(2) = [F:YHJV]YJBNR+"+"+[F:YHJV]YVARNUM
KEY_YHJC(2) = [F:YHJC]YJBNR
KEY_YHJP(2) = [F:YHJP]YJBNR
KEY_YHDH(2) = [F:YHDH]YJBNR
KEY_YHJF(2) = [F:YHJF]YJBNR
KEY_YRMA(2) = [F:YRMA]YGUID+"+"+[F:YRMA]YLIGID

If (KEY_YHJD(2) <> KEY_YHJD(3)) & (KEY_YHJD(1) <> KEY_YHJD(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_YHOU(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:YHJD]
FINS = 1
 KEY_YHJD(1) = KEY_YHJD(2)
Endif : # KEY_YHJD(1) <> KEY_YHJD(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"YJBNR":'           +'"'+escJson(INS.YJBNR)+'"'
Append ASND.DATA ,',"YCUSNO":'         +'"'+escJson(INS.YCUSNO)+'"'
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_YHJD(1),KEY_YHJS(1),KEY_YHJV(1),KEY_YHJC(1),KEY_YHJP(1),KEY_YHDH(1),KEY_YHJF(1),KEY_YRMA(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:YHJD]YJBNR"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From YHOU_CSPE
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="YHOU" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"YHOU")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"YHOU")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,100286)+'"'
Append WCLOB,',"$url":"{$baseUrl}/YHOU'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,100286)+' {$key}"'
Append WCLOB,',"$key":"{YJBNR}"'
Append WCLOB,',"$url":"{$baseUrl}/YHOU('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'YHOU.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"YJBNR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,100095)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"YCUSNO":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,100191)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHYHOUB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHYHOUB
End RES


