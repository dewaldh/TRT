#<AdxTL>@(#)0.0.0.0 $Revision$Class Ship-to customer
# Supervisor
## CRUD-CLASSE ## BPDLVCUST
# 2018-08-27 12:25:53 607


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPDLVCUST [BPD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BPDLVCUST") From ASYRCOM : Endif
Local Instance BPDLVCUST Using C_BPDLVCUST

If !SILENCE : Call TRACE("3 --> New Instance C_BPDLVCUST") From ASYRCOM : Endif
BPDLVCUST = NewInstance C_BPDLVCUST AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BPD_]BPD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPDLVCUST") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST.AREAD([BPD_]BPCNUM,[BPD_]BPAADD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPDLVCUST.BPCNUM ="-num$(BPDLVCUST.BPCNUM)) From ASYRCOM
 Call TRACE("BPDLVCUST.BPAADD ="-num$(BPDLVCUST.BPAADD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPDLVCUST.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPDLVCUST.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BPD_]
FreeGroup BPDLVCUST
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPDLVCUST,ACLE,ASTATUS,_ETAG)
Variable Instance BPDLVCUST Using C_BPDLVCUST
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPCNUM(15)
Local Char _BPAADD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPAADD = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File BPDLVCUST [BPD]
Default File [F:BPD]
Read [F:BPD]BPD0 = [L]_BPCNUM;[L]_BPAADD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BPD]UPDTICK)>0
 [L]_ETAG = num$([F:BPD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPDLVCUST,ACLE,ASTATUS)
Variable Instance BPDLVCUST Using C_BPDLVCUST
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPCNUM(15)
Local Char _BPAADD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BPAADD = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST.AREAD([L]_BPCNUM,[L]_BPAADD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPDLVCUST,_BPCNUM,_BPAADD,ASTATUS)
Variable Instance BPDLVCUST Using C_BPDLVCUST
Value Char _BPCNUM
Value Char _BPAADD
Variable Integer ASTATUS

If BPDLVCUST = null : End : Endif

Gosub AVARIABLES From WMC00BPDLVCUST
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPDLVCUST.APARENT=null
 [L]A_I = BPDLVCUST.freeSnapshot
 BPDLVCUST.snapshotEnabled = 0
 BPDLVCUST.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPDLVCUST.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPDLVCUST.APARENT=null
 BPDLVCUST.snapshotEnabled = 1
 BPDLVCUST.setAccessorEnabled = 1
Endif
LogicClose File [BPD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST._ACTION_PARAM("AREAD_BEFORE",[L]_BPCNUM,[L]_BPAADD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:BPD]
Read [F:BPD]BPD0 = [L]_BPCNUM;[L]_BPAADD
If fstat
[L]A_ERROR = [L]_BPCNUM+"~"+[L]_BPAADD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BPDLVCUST,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:BPD]STOFCY
[L]A_STRACC = ""
If dim([F:BPD]AUUID)>0 & [F:BPD]AUUID=NullUuid
 [F:BPD]AUUID = getUuid
Endif
If dim([F:BPD]CLAPRPTEX)>0: Raz [F:BPD]CLAPRPTEX: Endif
If dim([F:BPD]CLADLVTEX)>0: Raz [F:BPD]CLADLVTEX: Endif
SetInstance BPDLVCUST With [F:BPD]
BPDLVCUST.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 2
 If ([F:BPD]BPDNAM([L]A_I-1)<>"")
  [L]A_NEWCOL += 1
  BPDLVCUST.C_BPDNAM(A_NEWCOL) = NewInstance  C_BPDLVCUST_C_BPDNAM(BPDLVCUST.ACTX,NullUuid,[L]A_I,BPDLVCUST,"C_BPDNAM") AllocGroup BPDLVCUST
  BPDLVCUST.C_BPDNAM(A_NEWCOL).BPDNAM = [F:BPD]BPDNAM([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST.C_BPDNAM(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 2
 [L]A_NEWCOL += 1
 BPDLVCUST.C_REP(A_NEWCOL) = NewInstance  C_BPDLVCUST_C_REP(BPDLVCUST.ACTX,NullUuid,[L]A_I,BPDLVCUST,"C_REP") AllocGroup BPDLVCUST
 BPDLVCUST.C_REP(A_NEWCOL).REP = [F:BPD]REP([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST.C_REP(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet BPDLVCUST.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



