#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan-Routing
# Supervisor
## CRUD-CLASSE ## CCMPLAROD
# 2018-08-27 13:13:19 417


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPROD [CCMROD_]

If !SILENCE : Call TRACE("2 --> Local Instance R_CCMPLAROD") From ASYRCOM : Endif
Local Instance CCMPLAROD Using R_CCMPLAROD

If !SILENCE : Call TRACE("3 --> New Instance R_CCMPLAROD") From ASYRCOM : Endif
CCMPLAROD = NewInstance R_CCMPLAROD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMROD_]CCMROD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPROD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAROD.AREAD([CCMROD_]CRID,[CCMROD_]LINENO))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMPLAROD.CCMROD.CRID ="-num$(CCMPLAROD.CCMROD.CRID)) From ASYRCOM
 Call TRACE("CCMPLAROD.CCMROD.LINENO ="-num$(CCMPLAROD.CCMROD.LINENO)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMPLAROD.CCMROD.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMPLAROD.CCMROD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMROD_]
FreeGroup CCMPLAROD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMPLAROD,ACLE,ASTATUS,_ETAG)
Variable Instance CCMPLAROD Using R_CCMPLAROD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File CCMIMPROD [CCMROD]
Default File [F:CCMROD]
Read [F:CCMROD]CCMROD0 = [L]_CRID;[L]_LINENO
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMROD]UPDTICK)>0
 [L]_ETAG = num$([F:CCMROD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMPLAROD,ACLE,ASTATUS)
Variable Instance CCMPLAROD Using R_CCMPLAROD
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Local Shortint _LINENO
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LINENO = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAROD.AREAD([L]_CRID,[L]_LINENO))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMPLAROD,_CRID,_LINENO,ASTATUS)
Variable Instance CCMPLAROD Using R_CCMPLAROD
Value Char _CRID
Value Shortint _LINENO
Variable Integer ASTATUS

If CCMPLAROD = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLAROD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMPLAROD.APARENT=null
 [L]A_I = CCMPLAROD.freeSnapshot
 CCMPLAROD.snapshotEnabled = 0
 CCMPLAROD.setAccessorEnabled = 0
Endif

If fmet CCMPLAROD.ACTX.AGETAFCRIGHT(CCMPLAROD,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:CCMROD]
Read [F:CCMROD]CCMROD0 = [L]_CRID;[L]_LINENO
If fstat
[L]A_ERROR = [L]_CRID+"~"+num$([L]_LINENO)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMPLAROD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet CCMPLAROD.ACTX.AGETAFCRIGHTR(CCMPLAROD,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet CCMPLAROD.ACTX.ASTACRITROLE(CCMPLAROD,[L]_CRID+"~"+num$([L]_LINENO)
& ,"CCM","CCMROD",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAROD.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

CCMPLAROD.CCMROD.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAROD.CCMROD.AREAD([L]_CRID,[L]_LINENO))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLAROD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMPLAROD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMPLAROD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMPLAROD.APARENT=null
 CCMPLAROD.snapshotEnabled = 1
 CCMPLAROD.setAccessorEnabled = 1
Endif
LogicClose File [CCMROD]
End



