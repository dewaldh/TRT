#<AdxTL>@(#)0.0.0.0 $Revision$Class Economic reason by product
# Supervisor
## CRUD-CLASSE ## PBDECODITM
# 2018-08-27 13:21:11 836


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PBDECODITM,ASTATUS)
Variable Instance PBDECODITM Using R_PBDECODITM
Variable Integer ASTATUS

If PBDECODITM = null : End : Endif

Gosub AVARIABLES From WMR00PBDECODITM
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet PBDECODITM.ACTX.AGETAFCRIGHT(PBDECODITM,"GESPBDECO",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet PBDECODITM.ACTX.AGETAFCRIGHTD(PBDECODITM,"GESPBDECO",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif

Gosub AREPCONTROL_ADELETE
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PBDECODITM
Else
 Gosub ADELETE_PBDECODITM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
PBDECODITM.ASTALIN = [V]CST_ADEL
PBDECODITM.PBDECIT.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PBDECODITM.PBDECIT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PBDECODITM.PBDECIT.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.PBDECIT.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.PBDECIT.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PBDECODITM
Gosub ADELETE_PBDECODITM
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_PBDECODITM
[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.PBDECIT._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PBDECODITM.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
$_ADELETE_ABORT
If PBDECODITM.snapshotEnabled=1
 [L]A_RETIK = PBDECODITM.revertUpdTick
Endif
[L]ASTATUS = max(fmet PBDECODITM.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



