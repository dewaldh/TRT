#<AdxTL>@(#)0.0.0.0 $Revision$Class Basic objects  
# Supervisor
## CRUD-CLASSE ## AOBJET
# 2018-08-27 12:21:27 847


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AOBJET [AOB_]

If !SILENCE : Call TRACE("2 --> Local Instance C_AOBJET") From ASYRCOM : Endif
Local Instance AOBJET Using C_AOBJET

If !SILENCE : Call TRACE("3 --> New Instance C_AOBJET") From ASYRCOM : Endif
AOBJET = NewInstance C_AOBJET AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AOB_]ABREV First
If !fstat
 If !SILENCE : Call TRACE("Call program read of AOBJET") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AREAD([AOB_]ABREV))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("AOBJET.ABREV ="-num$(AOBJET.ABREV)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(AOBJET.AKEYS)
  Call TRACE("-"-num$(I)-":"-AOBJET.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AOB_]
FreeGroup AOBJET
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(AOBJET,ACLE,ASTATUS,_ETAG)
Variable Instance AOBJET Using C_AOBJET
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _ABREV(8)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ABREV = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AOBJET [AOB]
Default File [F:AOB]
Read [F:AOB]ABREV = [L]_ABREV
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AOB]UPDTICK)>0
 [L]_ETAG = num$([F:AOB]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(AOBJET,ACLE,ASTATUS)
Variable Instance AOBJET Using C_AOBJET
Value Char ACLE
Variable Integer ASTATUS
Local Char _ABREV(8)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ABREV = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AREAD([L]_ABREV))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(AOBJET,_ABREV,ASTATUS)
Variable Instance AOBJET Using C_AOBJET
Value Char _ABREV
Variable Integer ASTATUS

If AOBJET = null : End : Endif

Gosub AVARIABLES From WMC00AOBJET
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If AOBJET.APARENT=null
 [L]A_I = AOBJET.freeSnapshot
 AOBJET.snapshotEnabled = 0
 AOBJET.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & AOBJET.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJET._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If AOBJET.APARENT=null
 AOBJET.snapshotEnabled = 1
 AOBJET.setAccessorEnabled = 1
Endif
LogicClose File [AOB] ,[AOL] ,[AOT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet AOBJET._ACTION_PARAM("AREAD_BEFORE",[L]_ABREV))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:AOB]
Read [F:AOB]ABREV = [L]_ABREV
If fstat
[L]A_ERROR = [L]_ABREV
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(AOBJET,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:AOB]AUUID)>0 & [F:AOB]AUUID=NullUuid
 [F:AOB]AUUID = getUuid
Endif
SetInstance AOBJET With [F:AOB]
AOBJET.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:AOL]
 [L]A_N2=1
 Read [F:AOL]AOL0 = [AOB]ABREV
 If !fstat
  AOBJET.AOL(A_N2) = NewInstance  C_AOBJLST(AOBJET.ACTX,NullUuid,[L]A_N2,AOBJET,"AOL") AllocGroup AOBJET
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AOL(A_N2).ADDINSTANCE_BOUND)
  If dim([F:AOL]AUUID)>0 & [F:AOL]AUUID=NullUuid
   [F:AOL]AUUID = getUuid
  Endif
  SetInstance AOBJET.AOL(A_N2) With [F:AOL]
  [L]A_NEWCOL = 0
  For [L]A_I=1 To min(16,AOBJET.AOL(A_N2).NBSEL)
   [L]A_NEWCOL += 1
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL) = NewInstance  C_AOBJLST_ASELCOL(AOBJET.ACTX,NullUuid,[L]A_I,AOBJET.AOL(A_N2),"ASELCOL") AllocGroup AOBJET
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).SELZON = [F:AOL]SELZON([L]A_I-1)
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).SELFIC = [F:AOL]SELFIC([L]A_I-1)
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).SELEXP = [F:AOL]SELEXP([L]A_I-1)
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).SELTYP = [F:AOL]SELTYP([L]A_I-1)
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).SELSAI = [F:AOL]SELSAI([L]A_I-1)
   AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).SELLNG = [F:AOL]SELLNG([L]A_I-1)
   [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).ACTION("AREAD_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
   indice = [L]A_I
   For [ATX] Where NUMERO=[F:AOL]SELINT([L]A_I)
    Call ASETTEXT(AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).ATX,AOBJET.AOL(A_N2).ASELCOL(A_NEWCOL).AllocGrp,"SELINT",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
   Next ATX
  Next
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AOL(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  AOBJET.AOL(A_N2).ASTALIN = [V]CST_ALL
 Endif
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:AOT]
 [L]A_N2=0
 For [F:AOT]ABREV Where ABREV=[AOB]ABREV
  [L]A_N2 +=1
  AOBJET.AOT(A_N2) = NewInstance  C_AOBJTAB(AOBJET.ACTX,NullUuid,[L]A_N2,AOBJET,"AOT") AllocGroup AOBJET
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AOT(A_N2).ADDINSTANCE_BOUND)
  If dim([F:AOT]AUUID)>0 & [F:AOT]AUUID=NullUuid
   [F:AOT]AUUID = getUuid
  Endif
  SetInstance AOBJET.AOT(A_N2) With [F:AOT]
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.AOT(A_N2).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  AOBJET.AOT(A_N2).ASTALIN = [V]CST_ALL
 Next AOT
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]A_NEWCOL = 0
For [L]A_I=1 To min(16,AOBJET.NBRIMP)
 [L]A_NEWCOL += 1
 AOBJET.IMP(A_NEWCOL) = NewInstance  C_AOBJET_IMP(AOBJET.ACTX,NullUuid,[L]A_I,AOBJET,"IMP") AllocGroup AOBJET
 AOBJET.IMP(A_NEWCOL).IMPTBL = [F:AOB]IMPTBL([L]A_I-1)
 AOBJET.IMP(A_NEWCOL).IMPMSK = [F:AOB]IMPMSK([L]A_I-1)
 AOBJET.IMP(A_NEWCOL).IMPTAB = [F:AOB]IMPTAB([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.IMP(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To min(20,AOBJET.NBOPT)
 [L]A_NEWCOL += 1
 AOBJET.OPTCN(A_NEWCOL) = NewInstance  C_AOBJET_OPTCN(AOBJET.ACTX,NullUuid,[L]A_I,AOBJET,"OPTCN") AllocGroup AOBJET
 AOBJET.OPTCN(A_NEWCOL).OPTCND = [F:AOB]OPTCND([L]A_I-1)
 AOBJET.OPTCN(A_NEWCOL).OPTCOD = [F:AOB]OPTCOD([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.OPTCN(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 indice = [L]A_I
 For [ATX] Where NUMERO=[F:AOB]OPTERR([L]A_I)
  Call ASETTEXT(AOBJET.OPTCN(A_NEWCOL).ATX,AOBJET.OPTCN(A_NEWCOL).AllocGrp,"OPTERR",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
 Next ATX
 indice = [L]A_I
 For [ATX] Where NUMERO=[F:AOB]OPTLIB([L]A_I)
  Call ASETTEXT(AOBJET.OPTCN(A_NEWCOL).ATX,AOBJET.OPTCN(A_NEWCOL).AllocGrp,"OPTLIB",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
 Next ATX
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To min(8,AOBJET.NBSCR)
 [L]A_NEWCOL += 1
 AOBJET.SCR(A_NEWCOL) = NewInstance  C_AOBJET_SCR(AOBJET.ACTX,NullUuid,[L]A_I,AOBJET,"SCR") AllocGroup AOBJET
 AOBJET.SCR(A_NEWCOL).SCRNAM = [F:AOB]SCRNAM([L]A_I-1)
 AOBJET.SCR(A_NEWCOL).SCRABR = [F:AOB]SCRABR([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.SCR(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To min(10,AOBJET.NBVUE)
 [L]A_NEWCOL += 1
 AOBJET.VUE(A_NEWCOL) = NewInstance  C_AOBJET_VUE(AOBJET.ACTX,NullUuid,[L]A_I,AOBJET,"VUE") AllocGroup AOBJET
 AOBJET.VUE(A_NEWCOL).VUECOD = [F:AOB]VUECOD([L]A_I-1)
 AOBJET.VUE(A_NEWCOL).VUEABR = [F:AOB]VUEABR([L]A_I-1)
 AOBJET.VUE(A_NEWCOL).VUEACT = [F:AOB]VUEACT([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJET.VUE(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet AOBJET.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [ATX] Where NUMERO=[F:AOB]LIBEL
 Call ASETTEXT(AOBJET.ATX,AOBJET.AllocGrp,"LIBEL",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
Next ATX
For [ATX] Where NUMERO=[F:AOB]LIBSHO
 Call ASETTEXT(AOBJET.ATX,AOBJET.AllocGrp,"LIBSHO",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
Next ATX
For [ATX] Where NUMERO=[F:AOB]LIBPAR
 Call ASETTEXT(AOBJET.ATX,AOBJET.AllocGrp,"LIBPAR",[F:ATX]TEXTE,[F:ATX]LAN,[F:ATX]NUMERO) From ASYRSUB
Next ATX

Return



