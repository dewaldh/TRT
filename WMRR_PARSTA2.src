#<AdxTL>@(#)0.0.0.0 $Revision$Class Statistical parameters
# Supervisor
## CRUD-CLASSE ## PARSTA2
# 2018-08-27 13:20:51 343


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PARSTA2 [PS2_]

If !SILENCE : Call TRACE("2 --> Local Instance R_PARSTA2") From ASYRCOM : Endif
Local Instance PARSTA2 Using R_PARSTA2

If !SILENCE : Call TRACE("3 --> New Instance R_PARSTA2") From ASYRCOM : Endif
PARSTA2 = NewInstance R_PARSTA2 AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PS2_]PS20 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PARSTA2") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.AREAD([PS2_]COD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PARSTA2.PS2.COD ="-num$(PARSTA2.PS2.COD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PARSTA2.PS2.AKEYS)
  Call TRACE("-"-num$(I)-":"-PARSTA2.PS2.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PS2_]
FreeGroup PARSTA2
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PARSTA2,ACLE,ASTATUS,_ETAG)
Variable Instance PARSTA2 Using R_PARSTA2
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _COD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File PARSTA2 [PS2]
Default File [F:PS2]
Read [F:PS2]PS20 = [L]_COD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PS2]UPDTICK)>0
 [L]_ETAG = num$([F:PS2]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PARSTA2,ACLE,ASTATUS)
Variable Instance PARSTA2 Using R_PARSTA2
Value Char ACLE
Variable Integer ASTATUS
Local Char _COD(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_COD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.AREAD([L]_COD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PARSTA2,_COD,ASTATUS)
Variable Instance PARSTA2 Using R_PARSTA2
Value Char _COD
Variable Integer ASTATUS

If PARSTA2 = null : End : Endif

Gosub AVARIABLES From WMR00PARSTA2
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PARSTA2.APARENT=null
 [L]A_I = PARSTA2.freeSnapshot
 PARSTA2.snapshotEnabled = 0
 PARSTA2.setAccessorEnabled = 0
Endif

If fmet PARSTA2.ACTX.AGETAFCRIGHT(PARSTA2,"GESPS2",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:PS2]
Read [F:PS2]PS20 = [L]_COD
If fstat
[L]A_ERROR = [L]_COD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PARSTA2,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:PS2]ACS
If fmet PARSTA2.ACTX.AGETAFCRIGHTR(PARSTA2,"GESPS2",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet PARSTA2.ACTX.AGETACSRIGHTC(PARSTA2,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet PARSTA2.ACTX.ASTACRITROLE(PARSTA2,[L]_COD
& ,"PS2","PS2",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  PARSTA2.PS2.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.PS2.AREAD([L]_COD))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & PARSTA2.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet PARSTA2._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If PARSTA2.APARENT=null
   PARSTA2.snapshotEnabled = 1
   PARSTA2.setAccessorEnabled = 1
  Endif
  LogicClose File [PS2]
  End
  


