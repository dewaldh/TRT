#<AdxTL>@(#)0.0.0.0 $Revision$Class Logistical tracking template
# Supervisor
## CRUD-CLASSE ## TRACKTPLH
# 2018-08-27 12:54:27 809

Gosub TEST From WMCR_TRACKTPLH : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,TRKNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# TRACKTPLH : TRACKTPLH
# TRACKTPLD : TRACKTPLH TRACKTPLD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet TRACKTPLH._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = TRACKTPLH.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(TRACKTPLH.ACTX.AFOLDER,nomap,"")>0
 Local File TRACKTPLH [TKTH]
 Local File TRACKTPLD [TKTD]
 Local File ATEXTRA [AXX]
Else
 Local File =TRACKTPLH.ACTX.AFOLDER+".TRACKTPLH" [TKTH]
 Local File =TRACKTPLH.ACTX.AFOLDER+".TRACKTPLD" [TKTD]
 Local File =TRACKTPLH.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet TRACKTPLH.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [TKTH] With
& [TKTD]TKTD0 ~= [F:TKTH]TRKNUM
& As [LNK_]
Return

############################################################################################
### TRACKTPLH(WTKTH)
############################################################################################
Funprog  _MAJSQL_TRACKTPLH(WTKTH)
Variable Instance WTKTH Using C_TRACKTPLH
Local Integer ASTATUS,A_I,A_J
Default File [F:TKTH]
If WTKTH.ASTALIN=[V]CST_ANEW
 Call INICRE(WTKTH) From ASYRSUB
 SetInstance [F:TKTH] With WTKTH
 For J=1 To maxtab(WTKTH.AXX)
  If WTKTH.AXX(J)<>null & WTKTH.AXX(J).PRO= "DESAXX" & WTKTH.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTKTH,WTKTH.AXX(J).TEX,"TRACKTPLH","DESAXX",WTKTH.AXX(J).LAN,WTKTH.TRKNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:TKTH]
 If fstat
  Call FSTA("TKTH",WTKTH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTKTH.updTick = [F:TKTH]updTick
Elsif WTKTH.ASTALIN=[V]CST_ALL or WTKTH.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTKTH) From ASYRSUB
 SetInstance [F:TKTH] With WTKTH
 For J=1 To maxtab(WTKTH.AXX)
  If WTKTH.AXX(J)<>null & WTKTH.AXX(J).PRO= "DESAXX" & WTKTH.AXX(J).FLG>0
   Call MAJTEXTRALAN(WTKTH,WTKTH.AXX(J).TEX,"TRACKTPLH","DESAXX",WTKTH.AXX(J).LAN,WTKTH.TRKNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTKTH,"TRACKTPLH")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TKTH]TKTH0 = [F:TKTH]TRKNUM
 If fstat
  Call FSTA("TKTH",WTKTH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTKTH.updTick = [F:TKTH]updTick
Elsif WTKTH.ASTALIN=[V]CST_ADEL
 SetInstance [F:TKTH] With WTKTH
 For J=1 To maxtab(WTKTH.AXX)
  If WTKTH.AXX(J)<>null & WTKTH.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WTKTH,WTKTH.AXX(J).TEX,"TRACKTPLH","DESAXX",WTKTH.AXX(J).LAN,WTKTH.TRKNUM,"",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTKTH,"TRACKTPLH")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TKTH]TKTH0 = [F:TKTH]TRKNUM
 If fstat
  Call FSTA("TKTH",WTKTH,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### TRACKTPLD(WTKTD)
############################################################################################
Funprog  _MAJSQL_TRACKTPLD(WTKTD)
Variable Instance WTKTD Using C_TRACKTPLD
Local Integer ASTATUS,A_I,A_J
Default File [F:TKTD]
If WTKTD.ASTALIN=[V]CST_ANEW
 Call INICRE(WTKTD) From ASYRSUB
 SetInstance [F:TKTD] With WTKTD
 Write [F:TKTD]
 If fstat
  Call FSTA("TKTD",WTKTD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTKTD.updTick = [F:TKTD]updTick
Elsif WTKTD.ASTALIN=[V]CST_ALL or WTKTD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WTKTD) From ASYRSUB
 SetInstance [F:TKTD] With WTKTD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTKTD,"TRACKTPLD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:TKTD]TKTD0 = [F:TKTD]TRKNUM;[F:TKTD]TRKLIN
 If fstat
  Call FSTA("TKTD",WTKTD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WTKTD.updTick = [F:TKTD]updTick
Elsif WTKTD.ASTALIN=[V]CST_ADEL
 SetInstance [F:TKTD] With WTKTD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WTKTD,"TRACKTPLD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:TKTD]TKTD0 = [F:TKTD]TRKNUM;[F:TKTD]TRKLIN
 If fstat
  Call FSTA("TKTD",WTKTD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



