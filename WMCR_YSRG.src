#<AdxTL>@(#)0.0.0.0 $Revision$Class Stage title registration histo
# Supervisor
## CRUD-CLASSE ## YSRG
# 2018-08-29 04:14:52 148


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YSTAGREG [YSRG_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YSRG") From ASYRCOM : Endif
Local Instance YSRG Using C_YSRG

If !SILENCE : Call TRACE("3 --> New Instance C_YSRG") From ASYRCOM : Endif
YSRG = NewInstance C_YSRG AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YSRG_]YSTRG0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YSRG") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YSRG.AREAD([YSRG_]YSTAID,[YSRG_]YTITREGDAT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YSRG.YSTAID ="-num$(YSRG.YSTAID)) From ASYRCOM
 Call TRACE("YSRG.YTITREGDAT ="-num$(YSRG.YTITREGDAT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YSRG.AKEYS)
  Call TRACE("-"-num$(I)-":"-YSRG.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YSRG_]
FreeGroup YSRG
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YSRG,ACLE,ASTATUS,_ETAG)
Variable Instance YSRG Using C_YSRG
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YSTAID(7)
Local Date _YTITREGDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSTAID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YTITREGDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File YSTAGREG [YSRG]
Default File [F:YSRG]
Read [F:YSRG]YSTRG0 = [L]_YSTAID;[L]_YTITREGDAT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YSRG]UPDTICK)>0
 [L]_ETAG = num$([F:YSRG]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YSRG,ACLE,ASTATUS)
Variable Instance YSRG Using C_YSRG
Value Char ACLE
Variable Integer ASTATUS
Local Char _YSTAID(7)
Local Date _YTITREGDAT
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YSTAID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YTITREGDAT = func ASYRSUB.DATE_TO_ADX([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YSRG.AREAD([L]_YSTAID,[L]_YTITREGDAT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YSRG,_YSTAID,_YTITREGDAT,ASTATUS)
Variable Instance YSRG Using C_YSRG
Value Char _YSTAID
Value Date _YTITREGDAT
Variable Integer ASTATUS

If YSRG = null : End : Endif

Gosub AVARIABLES From WMC00YSRG
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YSRG.APARENT=null
 [L]A_I = YSRG.freeSnapshot
 YSRG.snapshotEnabled = 0
 YSRG.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YSRG.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YSRG._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YSRG.APARENT=null
 YSRG.snapshotEnabled = 1
 YSRG.setAccessorEnabled = 1
Endif
LogicClose File [YSRG]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YSRG._ACTION_PARAM("AREAD_BEFORE",[L]_YSTAID,[L]_YTITREGDAT))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YSRG]
Read [F:YSRG]YSTRG0 = [L]_YSTAID;[L]_YTITREGDAT
If fstat
[L]A_ERROR = [L]_YSTAID+"~"+num$([L]_YTITREGDAT)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YSRG,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YSRG]AUUID)>0 & [F:YSRG]AUUID=NullUuid
 [F:YSRG]AUUID = getUuid
Endif
SetInstance YSRG With [F:YSRG]
YSRG.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YSRG.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



