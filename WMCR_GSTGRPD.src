#<AdxTL>@(#)0.0.0.0 $Revision$Class GST group details
# Supervisor
## CRUD-CLASSE ## GSTGRPD
# 2018-08-27 12:33:38 329


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File GSTGRPD [GSTGD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_GSTGRPD") From ASYRCOM : Endif
Local Instance GSTGRPD Using C_GSTGRPD

If !SILENCE : Call TRACE("3 --> New Instance C_GSTGRPD") From ASYRCOM : Endif
GSTGRPD = NewInstance C_GSTGRPD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [GSTGD_]GSTGD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of GSTGRPD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet GSTGRPD.AREAD([GSTGD_]CODGSTGRP,[GSTGD_]LIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("GSTGRPD.CODGSTGRP ="-num$(GSTGRPD.CODGSTGRP)) From ASYRCOM
 Call TRACE("GSTGRPD.LIN ="-num$(GSTGRPD.LIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(GSTGRPD.AKEYS)
  Call TRACE("-"-num$(I)-":"-GSTGRPD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [GSTGD_]
FreeGroup GSTGRPD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(GSTGRPD,ACLE,ASTATUS,_ETAG)
Variable Instance GSTGRPD Using C_GSTGRPD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CODGSTGRP(15)
Local Integer _LIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODGSTGRP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LIN = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File GSTGRPD [GSTGD]
Default File [F:GSTGD]
Read [F:GSTGD]GSTGD0 = [L]_CODGSTGRP;[L]_LIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:GSTGD]UPDTICK)>0
 [L]_ETAG = num$([F:GSTGD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(GSTGRPD,ACLE,ASTATUS)
Variable Instance GSTGRPD Using C_GSTGRPD
Value Char ACLE
Variable Integer ASTATUS
Local Char _CODGSTGRP(15)
Local Integer _LIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CODGSTGRP = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LIN = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet GSTGRPD.AREAD([L]_CODGSTGRP,[L]_LIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(GSTGRPD,_CODGSTGRP,_LIN,ASTATUS)
Variable Instance GSTGRPD Using C_GSTGRPD
Value Char _CODGSTGRP
Value Integer _LIN
Variable Integer ASTATUS

If GSTGRPD = null : End : Endif

Gosub AVARIABLES From WMC00GSTGRPD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If GSTGRPD.APARENT=null
 [L]A_I = GSTGRPD.freeSnapshot
 GSTGRPD.snapshotEnabled = 0
 GSTGRPD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & GSTGRPD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet GSTGRPD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If GSTGRPD.APARENT=null
 GSTGRPD.snapshotEnabled = 1
 GSTGRPD.setAccessorEnabled = 1
Endif
LogicClose File [GSTGD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet GSTGRPD._ACTION_PARAM("AREAD_BEFORE",[L]_CODGSTGRP,[L]_LIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:GSTGD]
Read [F:GSTGD]GSTGD0 = [L]_CODGSTGRP;[L]_LIN
If fstat
[L]A_ERROR = [L]_CODGSTGRP+"~"+num$([L]_LIN)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(GSTGRPD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:GSTGD]AUUID)>0 & [F:GSTGD]AUUID=NullUuid
 [F:GSTGD]AUUID = getUuid
Endif
SetInstance GSTGRPD With [F:GSTGD]
GSTGRPD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet GSTGRPD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



