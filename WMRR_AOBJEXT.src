#<AdxTL>@(#)0.0.0.0 $Revision$Class Import/export templates
# Supervisor
## CRUD-CLASSE ## AOBJEXT
# 2018-08-27 13:02:05 432


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File AOBJEXT [AOE_]

If !SILENCE : Call TRACE("2 --> Local Instance R_AOBJEXT") From ASYRCOM : Endif
Local Instance AOBJEXT Using R_AOBJEXT

If !SILENCE : Call TRACE("3 --> New Instance R_AOBJEXT") From ASYRCOM : Endif
AOBJEXT = NewInstance R_AOBJEXT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AOE_]AOE0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of AOBJEXT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AREAD([AOE_]EXT))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("AOBJEXT.AOE.EXT ="-num$(AOBJEXT.AOE.EXT)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(AOBJEXT.AOE.AKEYS)
  Call TRACE("-"-num$(I)-":"-AOBJEXT.AOE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AOE_]
FreeGroup AOBJEXT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(AOBJEXT,ACLE,ASTATUS,_ETAG)
Variable Instance AOBJEXT Using R_AOBJEXT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _EXT(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_EXT = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File AOBJEXT [AOE]
Default File [F:AOE]
Read [F:AOE]AOE0 = [L]_EXT
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AOE]UPDTICK)>0
 [L]_ETAG = num$([F:AOE]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(AOBJEXT,ACLE,ASTATUS)
Variable Instance AOBJEXT Using R_AOBJEXT
Value Char ACLE
Variable Integer ASTATUS
Local Char _EXT(10)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_EXT = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AREAD([L]_EXT))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(AOBJEXT,_EXT,ASTATUS)
Variable Instance AOBJEXT Using R_AOBJEXT
Value Char _EXT
Variable Integer ASTATUS

If AOBJEXT = null : End : Endif

Gosub AVARIABLES From WMR00AOBJEXT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If AOBJEXT.APARENT=null
 [L]A_I = AOBJEXT.freeSnapshot
 AOBJEXT.snapshotEnabled = 0
 AOBJEXT.setAccessorEnabled = 0
Endif

If fmet AOBJEXT.ACTX.AGETAFCRIGHT(AOBJEXT,"GESAOE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:AOE]
Read [F:AOE]AOE0 = [L]_EXT
If fstat
[L]A_ERROR = [L]_EXT
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(AOBJEXT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:AOE]ACS
If fmet AOBJEXT.ACTX.AGETAFCRIGHTR(AOBJEXT,"GESAOE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet AOBJEXT.ACTX.AGETACSRIGHTC(AOBJEXT,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet AOBJEXT.ACTX.ASTACRITROLE(AOBJEXT,[L]_EXT
& ,"AOE","AOE",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  AOBJEXT.AOE.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.AOE.AREAD([L]_EXT))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & AOBJEXT.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet AOBJEXT._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If AOBJEXT.APARENT=null
   AOBJEXT.snapshotEnabled = 1
   AOBJEXT.setAccessorEnabled = 1
  Endif
  LogicClose File [AOE] ,[AOD]
  End
  


