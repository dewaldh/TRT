#<AdxTL>@(#)0.0.0.0 $Revision$Class Quote header
# Supervisor
## ACLA-CLASSE ## SQUOTE
# 2018-08-27 12:49:17 581

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "SQUOTE_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0SQUOTE
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To 2
 If this.C_BPCNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPCNAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPCADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPCADDLIG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPDNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDNAM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPDADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDADDLIG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRGTYP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRGTYP(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_ANA(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_ANA(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SQD)
 If this.SQD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SQD(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVV)
 If this.SVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVV(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVF)
 If this.SVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVF(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.SFITRF<>null
 [L]ASTATUS = fmet this.SFITRF._AERROR(_CTX,_SUPP)
Endif
If this.BPCADD<>null
 [L]ASTATUS = fmet this.BPCADD._AERROR(_CTX,_SUPP)
Endif
If this.BPDADD<>null
 [L]ASTATUS = fmet this.BPDADD._AERROR(_CTX,_SUPP)
Endif
If this.C_CPY<>null
 [L]ASTATUS = fmet this.C_CPY._AERROR(_CTX,_SUPP)
Endif
If this.C_FCY<>null
 [L]ASTATUS = fmet this.C_FCY._AERROR(_CTX,_SUPP)
Endif
If this.C_SREP<>null
 [L]ASTATUS = fmet this.C_SREP._AERROR(_CTX,_SUPP)
Endif
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0SQUOTE
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To 2
 If this.C_BPCNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPCNAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPCADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPCADDLIG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPDNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDNAM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPDADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDADDLIG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRGTYP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRGTYP(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_ANA(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_ANA(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SQD)
 If this.SQD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SQD(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVV)
 If this.SVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVV(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVF)
 If this.SVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVF(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.SFITRF<>null
 [L]ASTATUS = fmet this.SFITRF._ADELERRORS(_APARAM)
Endif
If this.BPCADD<>null
 [L]ASTATUS = fmet this.BPCADD._ADELERRORS(_APARAM)
Endif
If this.BPDADD<>null
 [L]ASTATUS = fmet this.BPDADD._ADELERRORS(_APARAM)
Endif
If this.C_CPY<>null
 [L]ASTATUS = fmet this.C_CPY._ADELERRORS(_APARAM)
Endif
If this.C_FCY<>null
 [L]ASTATUS = fmet this.C_FCY._ADELERRORS(_APARAM)
Endif
If this.C_SREP<>null
 [L]ASTATUS = fmet this.C_SREP._ADELERRORS(_APARAM)
Endif
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0SQUOTE
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To 2
 If this.C_BPCNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPCNAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPCNAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPCADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPCADDLIG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPCADDLIG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_BPDNAM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDNAM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPDNAM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 3
 If this.C_BPDADDLIG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_BPDADDLIG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_BPDADDLIG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 2
 If this.C_REP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_REP(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_REP('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRGTYP(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRGTYP(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DISCRGTYP('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 30
 If this.C_INVDTAAMT(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_INVDTAAMT(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_INVDTAAMT('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 20
 If this.C_ANA(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_ANA(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_ANA('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SQD)
 If this.SQD(AINDCLA)<>null
  [L]ASTATUS = fmet this.SQD(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SQD('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVV)
 If this.SVV(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVV(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SVV('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.SVF)
 If this.SVF(AINDCLA)<>null
  [L]ASTATUS = fmet this.SVF(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SVF('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.SFITRF<>null
 [L]ASTATUS = fmet this.SFITRF._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'SFITRF')
Endif
If this.BPCADD<>null
 [L]ASTATUS = fmet this.BPCADD._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPCADD')
Endif
If this.BPDADD<>null
 [L]ASTATUS = fmet this.BPDADD._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'BPDADD')
Endif
If this.C_CPY<>null
 [L]ASTATUS = fmet this.C_CPY._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_CPY')
Endif
If this.C_FCY<>null
 [L]ASTATUS = fmet this.C_FCY._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_FCY')
Endif
If this.C_SREP<>null
 [L]ASTATUS = fmet this.C_SREP._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_SREP')
Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0SQUOTE
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "CLASQHTEX1"
  If fmet this.AGETATTRIBUTE("CLASQHTEX1","$isLoaded")<>"true"
   Gosub READ_CLB_CLASQHTEX1
  Else
   [L]_CLB = this.CLASQHTEX1
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CLASQHTEX1","$contentType","text/rtf")
   [L]_CNT = "text/rtf"
  Endif
 When "CLASQHTEX2"
  If fmet this.AGETATTRIBUTE("CLASQHTEX2","$isLoaded")<>"true"
   Gosub READ_CLB_CLASQHTEX2
  Else
   [L]_CLB = this.CLASQHTEX2
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CLASQHTEX2","$contentType","text/rtf")
   [L]_CNT = "text/rtf"
  Endif
Endcase
Return

$READ_CLB_CLASQHTEX1
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WTXC]CODE = [L]_KEYVALTAB(1)
Read [WTXC] =
If !fstat
 [L]_CLB = [F:WTXC]TEXTE
Endif
LogicClose File [WTXC]
Return

$READ_EXI_CLASQHTEX1
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WTXC]CODE = this.SQHTEX1
Look [WTXC] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WTXC]
Return

$READ_CLB_CLASQHTEX2
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WTXC]CODE = [L]_KEYVALTAB(1)
Read [WTXC] =
If !fstat
 [L]_CLB = [F:WTXC]TEXTE
Endif
LogicClose File [WTXC]
Return

$READ_EXI_CLASQHTEX2
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File TEXCLOB [WTXC]
Else
Local File =this.ACTX.AFOLDER+".TEXCLOB" [WTXC]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WTXC]CODE = this.SQHTEX2
Look [WTXC] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WTXC]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "BPCADD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPCADD",this)
 When "BPDADD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"BPDADD",this)
 When "C_ANA"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_ANA",this)
 When "C_BPCADDLIG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPCADDLIG",this)
 When "C_BPCNAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPCNAM",this)
 When "C_BPDADDLIG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPDADDLIG",this)
 When "C_BPDNAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_BPDNAM",this)
 When "C_CPY"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_CPY",this)
 When "C_DISCRGTYP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DISCRGTYP",this)
 When "C_FCY"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_FCY",this)
 When "C_INVDTAAMT"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_INVDTAAMT",this)
 When "C_REP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_REP",this)
 When "C_SREP"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_SREP",this)
 When "SFITRF"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SFITRF",this)
 When "SQD"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SQD",this)
 When "SVF"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SVF",this)
 When "SVV"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"SVV",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "BPCADD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPCADD","C_SALADDRESS",this)
 When "BPDADD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"BPDADD","C_SALADDRESS",this)
 When "C_ANA"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_ANA","C_SQUOTE_C_ANA",this)
 When "C_BPCADDLIG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPCADDLIG","C_SQUOTE_C_BPCADDLIG",this)
 When "C_BPCNAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPCNAM","C_SQUOTE_C_BPCNAM",this)
 When "C_BPDADDLIG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPDADDLIG","C_SQUOTE_C_BPDADDLIG",this)
 When "C_BPDNAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_BPDNAM","C_SQUOTE_C_BPDNAM",this)
 When "C_CPY"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_CPY","C_COMPANY",this)
 When "C_DISCRGTYP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DISCRGTYP","C_SQUOTE_C_DISCRGTYP",this)
 When "C_FCY"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_FCY","C_FACILITY",this)
 When "C_INVDTAAMT"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_INVDTAAMT","C_SQUOTE_C_INVDTAAMT",this)
 When "C_REP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_REP","C_SQUOTE_C_REP",this)
 When "C_SREP"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_SREP","C_SALESREP",this)
 When "SFITRF"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SFITRF","C_SFITRF",this)
 When "SQD"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SQD","C_SQUOTED",this)
 When "SVF"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SVF","C_SVCRFOOT",this)
 When "SVV"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"SVV","C_SVCRVAT",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "BPCADD"
  [L]_ALINE = 1
 When "BPDADD"
  [L]_ALINE = 1
 When "C_ANA"
  [L]_ALINE = 20
 When "C_BPCADDLIG"
  [L]_ALINE = 3
 When "C_BPCNAM"
  [L]_ALINE = 2
 When "C_BPDADDLIG"
  [L]_ALINE = 3
 When "C_BPDNAM"
  [L]_ALINE = 2
 When "C_CPY"
  [L]_ALINE = 1
 When "C_DISCRGTYP"
  [L]_ALINE = 9
 When "C_FCY"
  [L]_ALINE = 1
 When "C_INVDTAAMT"
  [L]_ALINE = 30
 When "C_REP"
  [L]_ALINE = 2
 When "C_SREP"
  [L]_ALINE = 1
 When "SFITRF"
  [L]_ALINE = 1
 When "SQD"
  [L]_ALINE = 0
 When "SVF"
  [L]_ALINE = 0
 When "SVV"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "BPCADD"
  [L]_ALINE = 2
 When "BPDADD"
  [L]_ALINE = 2
 When "C_ANA"
  [L]_ALINE = 1
 When "C_BPCADDLIG"
  [L]_ALINE = 2
 When "C_BPCNAM"
  [L]_ALINE = 2
 When "C_BPDADDLIG"
  [L]_ALINE = 2
 When "C_BPDNAM"
  [L]_ALINE = 2
 When "C_CPY"
  [L]_ALINE = 2
 When "C_DISCRGTYP"
  [L]_ALINE = 1
 When "C_FCY"
  [L]_ALINE = 2
 When "C_INVDTAAMT"
  [L]_ALINE = 1
 When "C_REP"
  [L]_ALINE = 1
 When "C_SREP"
  [L]_ALINE = 2
 When "SFITRF"
  [L]_ALINE = 1
 When "SQD"
  [L]_ALINE = 2
 When "SVF"
  [L]_ALINE = 1
 When "SVV"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "SQHNUM"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.BPCADD(1) = NewInstance C_SALADDRESS(this.ACTX,NullUuid,1,this,"BPCADD") AllocGroup this
this.BPCADD(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.BPCADD(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.BPDADD(1) = NewInstance C_SALADDRESS(this.ACTX,NullUuid,1,this,"BPDADD") AllocGroup this
this.BPDADD(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.BPDADD(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_CPY(1) = NewInstance C_COMPANY(this.ACTX,NullUuid,1,this,"C_CPY") AllocGroup this
this.C_CPY(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_CPY(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_CPY.BPAPRI(1) = NewInstance C_BPADDRESS(this.ACTX,NullUuid,1,this.C_CPY,"BPAPRI") AllocGroup this
this.C_CPY.BPAPRI(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_CPY.BPAPRI(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_FCY(1) = NewInstance C_FACILITY(this.ACTX,NullUuid,1,this,"C_FCY") AllocGroup this
this.C_FCY(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_FCY(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_FCY.BPAPRI(1) = NewInstance C_BPADDRESS(this.ACTX,NullUuid,1,this.C_FCY,"BPAPRI") AllocGroup this
this.C_FCY.BPAPRI(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_FCY.BPAPRI(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_SREP(1) = NewInstance C_SALESREP(this.ACTX,NullUuid,1,this,"C_SREP") AllocGroup this
this.C_SREP(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_SREP(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_SREP.BPAPRI(1) = NewInstance C_BPADDRESS(this.ACTX,NullUuid,1,this.C_SREP,"BPAPRI") AllocGroup this
this.C_SREP.BPAPRI(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_SREP.BPAPRI(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.C_SREP.BPR(1) = NewInstance C_BPARTNER(this.ACTX,NullUuid,1,this.C_SREP,"BPR") AllocGroup this
this.C_SREP.BPR(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.C_SREP.BPR(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



