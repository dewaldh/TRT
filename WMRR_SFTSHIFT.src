#<AdxTL>@(#)0.0.0.0 $Revision$Class Shift code
# Supervisor
## CRUD-CLASSE ## SFTSHIFT
# 2018-08-27 13:28:35 859


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SFTSHIFT [SFTS_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SFTSHIFT") From ASYRCOM : Endif
Local Instance SFTSHIFT Using R_SFTSHIFT

If !SILENCE : Call TRACE("3 --> New Instance R_SFTSHIFT") From ASYRCOM : Endif
SFTSHIFT = NewInstance R_SFTSHIFT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SFTS_]SHF0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SFTSHIFT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SFTSHIFT.AREAD([SFTS_]SHFCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SFTSHIFT.SFTS.SHFCOD ="-num$(SFTSHIFT.SFTS.SHFCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SFTSHIFT.SFTS.AKEYS)
  Call TRACE("-"-num$(I)-":"-SFTSHIFT.SFTS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SFTS_]
FreeGroup SFTSHIFT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SFTSHIFT,ACLE,ASTATUS,_ETAG)
Variable Instance SFTSHIFT Using R_SFTSHIFT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SHFCOD(6)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SHFCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SFTSHIFT [SFTS]
Default File [F:SFTS]
Read [F:SFTS]SHF0 = [L]_SHFCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SFTS]UPDTICK)>0
 [L]_ETAG = num$([F:SFTS]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SFTSHIFT,ACLE,ASTATUS)
Variable Instance SFTSHIFT Using R_SFTSHIFT
Value Char ACLE
Variable Integer ASTATUS
Local Char _SHFCOD(6)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SHFCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SFTSHIFT.AREAD([L]_SHFCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SFTSHIFT,_SHFCOD,ASTATUS)
Variable Instance SFTSHIFT Using R_SFTSHIFT
Value Char _SHFCOD
Variable Integer ASTATUS

If SFTSHIFT = null : End : Endif

Gosub AVARIABLES From WMR00SFTSHIFT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SFTSHIFT.APARENT=null
 [L]A_I = SFTSHIFT.freeSnapshot
 SFTSHIFT.snapshotEnabled = 0
 SFTSHIFT.setAccessorEnabled = 0
Endif

If fmet SFTSHIFT.ACTX.AGETAFCRIGHT(SFTSHIFT,"GESSHFT",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SFTS]
Read [F:SFTS]SHF0 = [L]_SHFCOD
If fstat
[L]A_ERROR = [L]_SHFCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SFTSHIFT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet SFTSHIFT.ACTX.AGETAFCRIGHTR(SFTSHIFT,"GESSHFT",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SFTSHIFT.ACTX.ASTACRITROLE(SFTSHIFT,[L]_SHFCOD
& ,"SHFT","SFTS",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SFTSHIFT.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SFTSHIFT.SFTS.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SFTSHIFT.SFTS.AREAD([L]_SHFCOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SFTSHIFT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SFTSHIFT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SFTSHIFT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SFTSHIFT.APARENT=null
 SFTSHIFT.snapshotEnabled = 1
 SFTSHIFT.setAccessorEnabled = 1
Endif
LogicClose File [SFTS]
End



