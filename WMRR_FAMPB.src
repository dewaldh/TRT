#<AdxTL>@(#)0.0.0.0 $Revision$Class Skill group
# Supervisor
## CRUD-CLASSE ## FAMPB
# 2018-08-27 13:15:06 866


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File FAMPB [PBL_]

If !SILENCE : Call TRACE("2 --> Local Instance R_FAMPB") From ASYRCOM : Endif
Local Instance FAMPB Using R_FAMPB

If !SILENCE : Call TRACE("3 --> New Instance R_FAMPB") From ASYRCOM : Endif
FAMPB = NewInstance R_FAMPB AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PBL_]PBL0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of FAMPB") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet FAMPB.AREAD([PBL_]NUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("FAMPB.PBL.NUM ="-num$(FAMPB.PBL.NUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(FAMPB.PBL.AKEYS)
  Call TRACE("-"-num$(I)-":"-FAMPB.PBL.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PBL_]
FreeGroup FAMPB
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(FAMPB,ACLE,ASTATUS,_ETAG)
Variable Instance FAMPB Using R_FAMPB
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _NUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_NUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File FAMPB [PBL]
Default File [F:PBL]
Read [F:PBL]PBL0 = [L]_NUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PBL]UPDTICK)>0
 [L]_ETAG = num$([F:PBL]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(FAMPB,ACLE,ASTATUS)
Variable Instance FAMPB Using R_FAMPB
Value Char ACLE
Variable Integer ASTATUS
Local Char _NUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_NUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet FAMPB.AREAD([L]_NUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(FAMPB,_NUM,ASTATUS)
Variable Instance FAMPB Using R_FAMPB
Value Char _NUM
Variable Integer ASTATUS

If FAMPB = null : End : Endif

Gosub AVARIABLES From WMR00FAMPB
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If FAMPB.APARENT=null
 [L]A_I = FAMPB.freeSnapshot
 FAMPB.snapshotEnabled = 0
 FAMPB.setAccessorEnabled = 0
Endif

If fmet FAMPB.ACTX.AGETAFCRIGHT(FAMPB,"GESPBL",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:PBL]
Read [F:PBL]PBL0 = [L]_NUM
If fstat
[L]A_ERROR = [L]_NUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(FAMPB,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet FAMPB.ACTX.AGETAFCRIGHTR(FAMPB,"GESPBL",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet FAMPB.ACTX.ASTACRITROLE(FAMPB,[L]_NUM
& ,"PBL","PBL",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet FAMPB.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

FAMPB.PBL.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet FAMPB.PBL.AREAD([L]_NUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FAMPB.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & FAMPB.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet FAMPB._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If FAMPB.APARENT=null
 FAMPB.snapshotEnabled = 1
 FAMPB.setAccessorEnabled = 1
Endif
LogicClose File [PBL]
End



