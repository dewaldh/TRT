#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales contract
# Supervisor
## CRUD-CLASSE ## YSALCTR
# 2018-10-01 19:51:54 311

Gosub TEST From WMCR_YSALCTR : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YSLCID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YSALCTR : YSALCTR
# YSCU : YSALCTR YSCCUST
# YSWF : YSALCTR YSCWRKFLW
# YCMT : YSALCTR YSCCOMTYP
# YCMA : YSALCTR YSCCOMALLOC
# YSCV : YSALCTR YSALCONV
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YSALCTR._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4,A_N5,A_S5,A_N6,A_S6
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YSALCTR.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YSALCTR.ACTX.AFOLDER,nomap,"")>0
 Local File YSALCTR [YSLC]
 Local File YSCCUST [YSCU]
 Local File YSCWRKFLW [YSWF]
 Local File YSCCOMTYP [YCMT]
 Local File YSCCOMALLOC [YCMA]
 Local File YSALCONV [YSCV]
Else
 Local File =YSALCTR.ACTX.AFOLDER+".YSALCTR" [YSLC]
 Local File =YSALCTR.ACTX.AFOLDER+".YSCCUST" [YSCU]
 Local File =YSALCTR.ACTX.AFOLDER+".YSCWRKFLW" [YSWF]
 Local File =YSALCTR.ACTX.AFOLDER+".YSCCOMTYP" [YCMT]
 Local File =YSALCTR.ACTX.AFOLDER+".YSCCOMALLOC" [YCMA]
 Local File =YSALCTR.ACTX.AFOLDER+".YSALCONV" [YSCV]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YSALCTR.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YSLC] With
& [YSCU]YSCU0 = [F:YSLC]YSLCID,
& [YSWF]YSWF0 = [F:YSLC]YSLCID,
& [YCMT]YCMT0 = [F:YSLC]YSLCID,
& [YCMA]YCMA0 = [F:YSLC]YSLCID,
& [YSCV]YSCV0 = [F:YSLC]YSLCID
& As [LNK_]
Return

############################################################################################
### YSALCTR(WYSLC)
############################################################################################
Funprog  _MAJSQL_YSALCTR(WYSLC)
Variable Instance WYSLC Using C_YSALCTR
Local Integer ASTATUS,A_I,A_J
Default File [F:YSLC]
If WYSLC.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSLC) From ASYRSUB
 SetInstance [F:YSLC] With WYSLC
 Write [F:YSLC]
 If fstat
  Call FSTA("YSLC",WYSLC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSLC.updTick = [F:YSLC]updTick
Elsif WYSLC.ASTALIN=[V]CST_ALL or WYSLC.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSLC) From ASYRSUB
 SetInstance [F:YSLC] With WYSLC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSLC,"YSALCTR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSLC]YSLC0 = [F:YSLC]YSLCID
 If fstat
  Call FSTA("YSLC",WYSLC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSLC.updTick = [F:YSLC]updTick
Elsif WYSLC.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSLC] With WYSLC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSLC,"YSALCTR")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSLC]YSLC0 = [F:YSLC]YSLCID
 If fstat
  Call FSTA("YSLC",WYSLC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSCCUST(WYSCU)
############################################################################################
Funprog  _MAJSQL_YSCCUST(WYSCU)
Variable Instance WYSCU Using C_YSCU
Local Integer ASTATUS,A_I,A_J
Default File [F:YSCU]
If WYSCU.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSCU) From ASYRSUB
 SetInstance [F:YSCU] With WYSCU
 Write [F:YSCU]
 If fstat
  Call FSTA("YSCU",WYSCU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSCU.updTick = [F:YSCU]updTick
Elsif WYSCU.ASTALIN=[V]CST_ALL or WYSCU.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSCU) From ASYRSUB
 SetInstance [F:YSCU] With WYSCU
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSCU,"YSCCUST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSCU]YSCU0 = [F:YSCU]YSLCID
 If fstat
  Call FSTA("YSCU",WYSCU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSCU.updTick = [F:YSCU]updTick
Elsif WYSCU.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSCU] With WYSCU
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSCU,"YSCCUST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSCU]YSCU0 = [F:YSCU]YSLCID
 If fstat
  Call FSTA("YSCU",WYSCU,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSCWRKFLW(WYSWF)
############################################################################################
Funprog  _MAJSQL_YSCWRKFLW(WYSWF)
Variable Instance WYSWF Using C_YSWF
Local Integer ASTATUS,A_I,A_J
Default File [F:YSWF]
If WYSWF.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSWF) From ASYRSUB
 SetInstance [F:YSWF] With WYSWF
 Write [F:YSWF]
 If fstat
  Call FSTA("YSWF",WYSWF,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSWF.updTick = [F:YSWF]updTick
Elsif WYSWF.ASTALIN=[V]CST_ALL or WYSWF.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSWF) From ASYRSUB
 SetInstance [F:YSWF] With WYSWF
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSWF,"YSCWRKFLW")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSWF]YSWF0 = [F:YSWF]YSLCID
 If fstat
  Call FSTA("YSWF",WYSWF,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSWF.updTick = [F:YSWF]updTick
Elsif WYSWF.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSWF] With WYSWF
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSWF,"YSCWRKFLW")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSWF]YSWF0 = [F:YSWF]YSLCID
 If fstat
  Call FSTA("YSWF",WYSWF,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSCCOMTYP(WYCMT)
############################################################################################
Funprog  _MAJSQL_YSCCOMTYP(WYCMT)
Variable Instance WYCMT Using C_YCMT
Local Integer ASTATUS,A_I,A_J
Default File [F:YCMT]
If WYCMT.ASTALIN=[V]CST_ANEW
 Call INICRE(WYCMT) From ASYRSUB
 SetInstance [F:YCMT] With WYCMT
 Write [F:YCMT]
 If fstat
  Call FSTA("YCMT",WYCMT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYCMT.updTick = [F:YCMT]updTick
Elsif WYCMT.ASTALIN=[V]CST_ALL or WYCMT.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYCMT) From ASYRSUB
 SetInstance [F:YCMT] With WYCMT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYCMT,"YSCCOMTYP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YCMT]YCMT0 = [F:YCMT]YSLCID
 If fstat
  Call FSTA("YCMT",WYCMT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYCMT.updTick = [F:YCMT]updTick
Elsif WYCMT.ASTALIN=[V]CST_ADEL
 SetInstance [F:YCMT] With WYCMT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYCMT,"YSCCOMTYP")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YCMT]YCMT0 = [F:YCMT]YSLCID
 If fstat
  Call FSTA("YCMT",WYCMT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSCCOMALLOC(WYCMA)
############################################################################################
Funprog  _MAJSQL_YSCCOMALLOC(WYCMA)
Variable Instance WYCMA Using C_YCMA
Local Integer ASTATUS,A_I,A_J
Default File [F:YCMA]
If WYCMA.ASTALIN=[V]CST_ANEW
 Call INICRE(WYCMA) From ASYRSUB
 SetInstance [F:YCMA] With WYCMA
 Write [F:YCMA]
 If fstat
  Call FSTA("YCMA",WYCMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYCMA.updTick = [F:YCMA]updTick
Elsif WYCMA.ASTALIN=[V]CST_ALL or WYCMA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYCMA) From ASYRSUB
 SetInstance [F:YCMA] With WYCMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYCMA,"YSCCOMALLOC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YCMA]YCMA0 = [F:YCMA]YCOMMID
 If fstat
  Call FSTA("YCMA",WYCMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYCMA.updTick = [F:YCMA]updTick
Elsif WYCMA.ASTALIN=[V]CST_ADEL
 SetInstance [F:YCMA] With WYCMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYCMA,"YSCCOMALLOC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YCMA]YCMA0 = [F:YCMA]YCOMMID
 If fstat
  Call FSTA("YCMA",WYCMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YSALCONV(WYSCV)
############################################################################################
Funprog  _MAJSQL_YSALCONV(WYSCV)
Variable Instance WYSCV Using C_YSCV
Local Integer ASTATUS,A_I,A_J
Default File [F:YSCV]
If WYSCV.ASTALIN=[V]CST_ANEW
 Call INICRE(WYSCV) From ASYRSUB
 SetInstance [F:YSCV] With WYSCV
 Write [F:YSCV]
 If fstat
  Call FSTA("YSCV",WYSCV,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSCV.updTick = [F:YSCV]updTick
Elsif WYSCV.ASTALIN=[V]CST_ALL or WYSCV.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYSCV) From ASYRSUB
 SetInstance [F:YSCV] With WYSCV
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSCV,"YSALCONV")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YSCV]YSCV0 = [F:YSCV]YSLCID
 If fstat
  Call FSTA("YSCV",WYSCV,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYSCV.updTick = [F:YSCV]updTick
Elsif WYSCV.ASTALIN=[V]CST_ADEL
 SetInstance [F:YSCV] With WYSCV
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYSCV,"YSALCONV")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YSCV]YSCV0 = [F:YSCV]YSLCID
 If fstat
  Call FSTA("YSCV",WYSCV,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



