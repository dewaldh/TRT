#<AdxTL>@(#)0.0.0.0 $Revision$
#Local Char BATNBR : BATNBR = "BB20180900103"
#Call EXE_LINEVAL(BATNBR) From SPEYBBVAL


 Subprog TEST666()
 Local Char REQUEST(255)(0..6)
  Local Integer I : I = 0
  Local Integer YNBRLIG
  Local Char YMSG(255)
  Local Char YSRC(50)
  Local Char BATNBR : BATNBR = "BB20180900103"

#  REQUEST(0) = "select max(YDETLIG_0),YFCY_0,YENTTYP_0,YJOU_0,YDETDES_0,YACC_0,YLIGDES_0,YTRANSNBR_0"
#  REQUEST(1) -= "FROM YBBDETAILTEM"
#  REQUEST(2) -= "Where YBATNBR_0 = '"+BATNBR+"' and YBATTYP_0 IN (2,3)"
#  REQUEST(3) -= "GROUP BY YFCY_0,YENTTYP_0,YJOU_0,YDETDES_0,YACC_0,YLIGDES_0,YTRANSNBR_0"
#  REQUEST(4) -= "HAVING COUNT(YFCY_0) = 1"
#  REQUEST(5) -= "ORDER BY YTRANSNBR_0"

  REQUEST(0) = "select max(YDETLIG_0),YFCY_0,YENTTYP_0,YJOU_0,YDETDES_0,YACC_0,YLIGDES_0,YTRANSNBR_0"
  REQUEST(1) -= "FROM YBBDETAILTEM"
  REQUEST(2) -= "Where YBATNBR_0 = '"+BATNBR+"' and YBATTYP_0 IN (2,3)"
  REQUEST(3) -= "GROUP BY YFCY_0,YENTTYP_0,YJOU_0,YDETDES_0,YACC_0,YLIGDES_0,YTRANSNBR_0"
  REQUEST(4) -= "HAVING COUNT(YFCY_0) = 1"
  REQUEST(5) -= "ORDER BY YTRANSNBR_0"


  For (Integer YDETLIG,Char YFCY,Char YENTTYP,Char YJOU,Char YDETDES,Char YACC,Char YLIGDES, Integer YTRANSNBR) From "5" Sql REQUEST As [YLNK]
    Infbox "DETLIG:"-num$(YDETLIG), "FCY:"-YFCY, "I:"-num$(I),YENTTYP, YJOU, YACC, YLIGDES, "TRANSNUM:"-num$(YTRANSNBR)
    If YFCY = "" : Break : Endif
    YMSG = "Multiple sites for transaction number"-num$(YTRANSNBR)
    YSRC =  BATNBR+"-"+num$(YDETLIG)
    YNBRLIG = YDETLIG + 1
    Call ADDLIG_ERR(BATNBR,YSRC,YNBRLIG,YFCY,YENTTYP,YJOU,YDETDES,YACC,YLIGDES,YMSG) From SPEYBBVAL
    I += 1
  Next

End
## PJM Class Call to AINSERT
##Open Tables in order to Set the instance before AINSERT
#If !clalev([F:OPP]) : Local File OPPOR [OPP] : Endif
#If !clalev([F:OPPPJM]) : Local File OPPORPJM [OPPPJM] : Endif
#
#
#    Local Integer MY_STATUS
#
#    Local Instance YPJM Using C_OPPOR
#    YPJM = NewInstance C_OPPOR AllocGroup null
#    MY_STATUS = fmet YPJM.AINIT
#    If MY_STATUS <> [V]CST_AOK
#      Infbox ("issue on AINIT PJM")
#    Endif
#
#    Local Instance YPJMM Using C_OPPORPJM
#    YPJMM = NewInstance C_OPPORPJM AllocGroup null
#    MY_STATUS = fmet YPJMM.AINIT
#    If MY_STATUS <> [V]CST_AOK
#      Infbox ("issue on AINIT PJMM")
#    Endif
#
#    #Set Instance to Table
#    SetInstance YPJM With [F:OPP]
#    SetInstance YPJMM With [F:OPPPJM]
#
#    YPJM.TCHTOREAD = "PJM"
#    YPJM.CPY = "900"
#    YPJM.SALFCY = "900-1"
#    YPJM.OPPNUM = "DEWTEST01"
#    YPJM.TCHISPJM = 2
#    YPJM.CUR = "AUD"
#    YPJM.OPPTYP = "HPR"
#    #Mandatory on Main Class
#    YPJM.CHGTYP = 1
#    #Mandatory on Sub Class
#    YPJM.PIMPL.PIMDESAXX = "test"
#    YPJM.PIMPL.PIMDESAX1 = "test2"
#
#    YPJMM.OPPNUM = "DEWTEST01"
#    YPJMM.OPPSTATE = 1
#    YPJMM.SALFCY = "900-1"
#    YPJMM.CPY = "900"
#    YPJMM.OPPPROACTIV = 2
#    YPJMM.CUROPP = "AUD"
#    YPJMM.CUR = "AUD"
#    YPJMM.OPEDEFFCY = "900-1"
#    YPJMM.OPPDESTEX = "test"
#    YPJMM.OPPCOMTEX = "test" #Mandatory on Class
#    YPJMM.CDIE.DIE(0) = "CAD"
#
#    MY_STATUS = fmet YPJM.AINSERT()
#    #MY_STATUS = fmet YPJMM.AINSERT()
#    If [L]MY_STATUS <> [V]CST_AOK Then
#      Call RECOVERS_ERROR_IN_CLASSIC(YPJM) From SUBPJMA
#    Endif
#    If MY_STATUS = [V]CST_AERROR Then
#      Infbox "AERROR"-num$(MY_STATUS)
#    Endif
#
#    FreeGroup YPJM
#    FreeGroup YPJMM
#
#*!

