#<AdxTL>@(#)0.0.0.0 $Revision$
################################################################
# ELA REWRITE TESTING
################################################################

#ORIGELA(1) = "HCC_IC_001_083_I_303"
#YLONAGR_0             YCPYPRO_0   YSRCLONAGR_0
#HCC_IC_001_083_I_303  001         HCC_DF_005_001_I_203
#HCC_DF_005_001_I_203  005         HCC_DF_047_005_I_103
#HCC_DF_047_005_I_103  047

#ORIGELA(2) = "MPL_DF_005_063_INT_2"
#YLONAGR_0              YCPYPRO_0   YSRCLONAGR_0
#MPL_DF_005_063_INT_2   005         MPL_DF_001_005_INT_1
#MPL_DF_001_005_INT_1   001

#--------------------------------
# Expeted Results
#--------------------------------
# Simulation Lines to be expanded
# Line 1 : HCC_IC_001_083_I_303 (001) - Write CR --> ELA 1
# Line 2 : HCC_IC_001_083_I_303 (001) - Write DR --> ELA 1
# Line 3 : HCC_DF_005_001_I_203 (005) - Write CR --> ELA 1
# Line 4 : HCC_DF_005_001_I_203 (005) - Write DR --> ELA 1
# Line 5 : MPL_DF_005_063_INT_2 (005) - Write CR --> ELA 2
# Line 6 : MPL_DF_005_063_INT_2 (005) - Write DR --> ELA 2


If clalev([F:YELA1]) = 0 : Local File YENTLOAAGR [YELA1] : Endif
If clalev([F:YELA2]) = 0 : Local File YENTLOAAGR [YELA2] : Endif

Local Integer YI : YI = 1
Local Char YSRCLOA(50)
Local Char ORIGELA(50)(1..2)
ORIGELA(1) = "HCC_IC_001_083_I_303"
ORIGELA(2) = "MPL_DF_005_063_INT_2"

#Build ELA PATH 1
#--FIXED
Local Char YENTLOA1(50)(1..)
Local Char YSRCLOA1(50)(1..)
Local Char YPROCPY1(5)(1..)
Local Char YRECCPY1(5)(1..)
Local Char ELAPROCPY1(250)(0..)
Read [F:YELA1]YELA0 = ORIGELA(1)
If fstat = 0 and [F:YELA1]YSRCLONAGR <> "" Then
  #FIRST VALUES
  YENTLOA1(1) = ORIGELA(1)
  YSRCLOA1(1) = [F:YELA1]YSRCLONAGR
  YPROCPY1(1) = [F:YELA1]YCPYPRO
  YRECCPY1(1) = [F:YELA1]YCPYREC
  YSRCLOA = [F:YELA1]YSRCLONAGR
  #Loop start
  While YSRCLOA <> ""
    YI += 1
    Read [F:YELA1]YELA0 = YSRCLOA
    YENTLOA1(YI) = [F:YELA1]YLONAGR #Main EAL
    YSRCLOA1(YI) = [F:YELA1]YSRCLONAGR #Source Loan Agreement
    YPROCPY1(YI) = [F:YELA1]YCPYPRO #Provider Company
    YRECCPY1(YI) = [F:YELA1]YCPYREC #Recipient Company
    YSRCLOA = [F:YELA1]YSRCLONAGR
  Wend
Endif
YI = 1
YSRCLOA = ""

#Build ELA PATH 2
#--FIXED
Local Char YENTLOA2(50)(1..)
Local Char YSRCLOA2(50)(1..)
Local Char YPROCPY2(5)(1..)
Local Char YRECCPY2(5)(1..)
Local Char ELAPROCPY2(250)(0..)
Read [F:YELA2]YELA0 = ORIGELA(2)
If fstat = 0 and [F:YELA2]YSRCLONAGR <> "" Then
  #FIRST VALUES
  YENTLOA2(1) = ORIGELA(2)
  YSRCLOA2(1) = [F:YELA2]YSRCLONAGR
  YPROCPY2(1) = [F:YELA2]YCPYPRO
  YRECCPY2(1) = [F:YELA2]YCPYREC
  YSRCLOA = [F:YELA2]YSRCLONAGR
  #Loop start
  While YSRCLOA <> ""
    YI += 1
    Read [F:YELA2]YELA0 = YSRCLOA
    YENTLOA2(YI) = [F:YELA2]YLONAGR #Main EAL
    YSRCLOA2(YI) = [F:YELA2]YSRCLONAGR #Source Loan Agreement
    YPROCPY2(YI) = [F:YELA2]YCPYPRO #Provider Company
    YRECCPY2(YI) = [F:YELA2]YCPYREC #Recipient Company
    YSRCLOA = [F:YELA2]YSRCLONAGR
  Wend
Endif

#** Assuming that ELA will always be compared to the first line WE HAVE TO CHECK LENGTHS AND SIZES TO AVOID INDEX OUT RANGE
Local Integer CI, CN, MX(1..2), LRGINT, SMLINT, IN
MX(1) = maxtab([L]YENTLOA1(1..))
MX(2) = maxtab([L]YENTLOA2(1..))
If MX(1) > MX(2) Then : LRGINT = MX(1) : SMLINT = MX(2) : Else : LRGINT = MX(2) : SMLINT = MX(1) : Endif

#** Rule 1 : Line 1 Recpt CPY = Line 2 Prov CPY
Local Integer RPASS : RPASS = 0
For CI = 1 To SMLINT
  For CN = 1 To LRGINT
    Infbox YPROCPY1(CI),YPROCPY2(CN)
    If YRECCPY1(CI) = YPROCPY2(CN)
      IN = CN
      RPASS = 1
      Infbox "Line 1 Matches"-num$(IN) #Stop
      Break
    Else
      #Write Simulation lines

    Endif
  Next CN
  #If not found, move to next
  If IN <> 0 Then
    Break
  Endif
Next CI

#** Rule 2 : Line 2 Recpt CPY = Line 1 Prov CPY
If RPASS = 0 Then
Endif

If IN <> 0
  Infbox "Written"-YPROCPY1(IN),YPROCPY2(IN)
Endif

If clalev([F:YELA1]) = 0 : Close Local File [YELA1] : Endif
If clalev([F:YELA2]) = 0 : Close Local File [YELA2] : Endif


################################################################
#################################################################
#TODO : REUSE THIS IN SPEYPAYPST
################################################################
#Local Char XMOT(250) : XMOT = "Creation of BB RCN1905002-1000005-1"
##"Error <JOU RCN1905002-1000005-1> JOU RCN1905002-1000007-1 : Actual journal already exists (21)"
#
#Local Char JOUKEY(50)
#Local Char KEYINDEX(50)
#Local Char TRANSNO(3)
#
#If len(XMOT) = 35 Then
#  JOUKEY   = right$(XMOT, 16)
#Elsif len(XMOT) = 36 Then
#  JOUKEY   = right$(XMOT, 17)
#Elsif len(XMOT) = 37 Then
#  JOUKEY   = right$(XMOT, 18)
#Elsif len(XMOT) = 38 Then
#  JOUKEY   = right$(XMOT, 19)
#Elsif len(XMOT) = 39 Then
#  JOUKEY   = right$(XMOT, 20)
#Endif
#
#KEYINDEX = left$(JOUKEY, 18)
#TRANSNO  = right$(JOUKEY, 20)
#
#
#Infbox KEYINDEX, TRANSNO

#Infbox KEYINDEX, TRANSNO

##Local Char XMOT(250) : XMOT = "<0001 Error <BBCH RCN1905002-1000007-1> JOU GEN : \GEN Unauthorized journal on this document type APRIE (99)"
#Local Char XMOT(250) : XMOT = "<0001 Error <APRIE RCN1905002-1000007-1> JOU GEN : \GEN Unauthorized journal on this document type APRIE (99)"
#
##Local Char YTYP(6) : YTYP = right$(left$(XMOT,18),14)
#Local Integer YLEN : YLEN = len(vireblc(left$(XMOT,18),4))
#
#Local Char LIGNUM(255)
#
#If YLEN = 14 Then
#  LIGNUM = right$(left$(XMOT,37),18) #YNUM
#Elsif YLEN = 15 Then
#  LIGNUM = right$(left$(XMOT,38),19) #YNUM
#Elsif YLEN = 16 Then
#  LIGNUM = right$(left$(XMOT,39),20) #YNUM
#Endif
#
#Local Char KEYINDEX(50) : KEYINDEX = left$(LIGNUM,18)
#Local Char TRANSNO(3) : TRANSNO = right$(LIGNUM,20)
#
#Infbox KEYINDEX,TRANSNO



################################################################
#Local Char XMOT(255): XMOT = "<0001 Error <BBCH TRF1904004-1000002-21> BBCH TRF1904004-1000002-1 : Actual journal already exists (21)" #37
#Local Char LIGNUM(255): LIGNUM = right$(left$(XMOT,39),18) #YNUM
#Local Char KEYINDEX(255)
#Local Char TRANSNO(3) #TRANSNO
#If right$(LIGNUM,22) = ">"
#  LIGNUM = right$(left$(XMOT,38),19)
#Else
#  LIGNUM = right$(left$(XMOT,39),19)
#Endif
#TRANSNO = right$(LIGNUM,20)
#KEYINDEX = left$(LIGNUM,18)
#Infbox LIGNUM, TRANSNO,KEYINDEX



#Local Char VALGTE(10)
#VALGTE = func AFNC.PARAM ("YDFCGTE","")
#Infbox VALGTE

#If clalev([F:PIH]) = 0  : Local File PINVOICE [PIH]  : Endif
#If clalev([F:PIL]) = 0  : Local File BPSINVLIG [PIL]  : Endif
## Read Index PIH0
#Read [F:PIH]PIH0 = [M]YNUM
#Read [F:PIL]PIL0 = [F:PIH]NUM
#[F:PIH]NUM = "" #Add the lines you want
#[F:PIL]NUM = ""
#Write [F:PIH]
#Write [F:PIL]
## Close Tables

#Local Char TEXT(255), TYP(5)
#Local Integer I, LENTXT
#TEXT = "Creation of BBCH1 BB19000300-1-002-1"
#LENTXT = len(TEXT)
#TYP = vireblc(seg$(TEXT, 12,17),3)
#I = 13 + len(TYP)
#Infbox seg$(TEXT, I,LENTXT)
#
#TEXT = "Creation of BBCH BB19000300-1-002-1"
#LENTXT = len(TEXT)
#TYP =  vireblc(seg$(TEXT, 12,17),3)
#I = 13 + len(TYP)
#Infbox seg$(TEXT, I,LENTXT)
#
#TEXT = "Creation of BBC BB19000300-1-002-1"
#LENTXT = len(TEXT)
#TYP =  vireblc(seg$(TEXT, 12,17),3)
#I = 13 + len(TYP)
#Infbox seg$(TEXT, I,LENTXT)
#
#TEXT = "Creation of BB BB19000300-1-002-1"
#LENTXT = len(TEXT)
#TYP =  vireblc(seg$(TEXT, 12,17),3)
#I = 13 + len(TYP)
#Infbox seg$(TEXT, I,LENTXT)
#
#TEXT = "Creation of B BB19000300-1-002-1"
#LENTXT = len(TEXT)
#TYP =  vireblc(seg$(TEXT, 12,17),3)
#I = 13 + len(TYP)
#Infbox seg$(TEXT, I,LENTXT)


#Local Integer I
#Local Char REQUEST(255)(0..)
#
#
#I=0
#CRITERE = "1=1"
#
##Restrictions
#If clalev([F:FGR]) = 0 : Local File FACGROUP [FGR] : Endif
#If clalev([F:GAC]) = 0 : Local File GACCOUNT  [GAC]  : Endif
#
#Local Char ARQUERY(250)
#
#Local Integer ADDLST : ADDLST = 0
#
##DFCX1-383 - Restrictions
#REQUEST(0) = "SELECT G.ACC_0, G.DES_0, G.COA_0, ISNULL(B.BAN_0,''),G.VLYSTR_0,G.VLYEND_0, G.FCY_0"
#REQUEST(1) -= "FROM GACCOUNT G"
#  REQUEST(2) -= "LEFT OUTER JOIN BANK B ON B.TREACC_0 = G.ACC_0 AND B.COA_0 = G.COA_0"
#  REQUEST(4) -= "WHERE G.COA_0 = 'A20' AND B.TREACC_0 IS NULL AND G.FLGVAT_0 <> 3"
#REQUEST(5) -= "AND G.ENAFLG_0 = 2"
#REQUEST(6) -= "ORDER BY G.ACC_0 ASC"
#
#For (Char ACC, Char DES, Char COA, Char BAN(30), Date VLYSTR, Date VLYEND, Char FCYA) From "5" Sql REQUEST As [YLNK]
#  Read [F:GAC]GAC0 = "A20";[F:YLNK]ACC
#  #If (num$([F:YLNK]VLYSTR) = "00/00/0000" or [M:YBB0]YBATDAT >= [F:YLNK]VLYSTR) and (num$([F:YLNK]VLYEND) = "00/00/0000" or [M:YBB0]YBATDAT <= [F:YLNK]VLYEND)
#    If [F:YLNK]FCYA <> ""
#      ARQUERY = ""
#      If pat([F:GAC]FCY,"###") Then #Company 3 Numbers
#        ARQUERY = "select FCY_0 FROM FACGROUP Where CPY_0 = '"+[F:GAC]FCY+"'"
#      Elsif pat([F:GAC]FCY,"!*") Then #Group start with Char
#        ARQUERY = "select FCY_0 FROM FACGROUP Where CPY_0 = '"+[F:GAC]FCY+"'"
#      Elsif seg$([F:GAC]FCY,4,4) = "-" #and #Site pattern match
#        ARQUERY = "select FCY_0 FROM FACGROUP Where FCY_0 = '"+[F:GAC]FCY+"' and CPY_0 = '"+[M:YBB1]YCPY(nolign-1)+"'"
#      Endif
#      For (Char GACFCY) From "5" Sql ARQUERY As [YLNK2]
#        If [F:YBDT]YFCY = [F:YLNK2]GACFCY Then
#          ADDLST += 1
#        Endif
#      Next
#    Else
#      ADDLST += 1
#    Endif
#
#  #Endif
#Next
#
#Infbox num$(ADDLST)
#
#If I = 0 Then
# Infbox mess(20,6254,1)
#Endif
#
##Restrictions
#If clalev([F:FGR]) = 0 : Close Local File [FGR] : Endif
#
#
#
##----------------------------------------------------------
## Pattern recognitions
##----------------------------------------------------------
##If clalev([F:GAC]) = 0 : Local File GACCOUNT [GAC] : Endif
##If clalev([F:FGR]) = 0 : Local File FACGROUP [FGR] : Endif
##
##Local Char CPY(5) : CPY = "002"
##Local Char FCY(5) : FCY = "002-1"
##Local Char ACC(5) : ACC = "8060"
##Local Char COA(5) : COA = "A20"
##Local Char ARQUERY(250)
##Read [F:GAC]GAC0 = COA;ACC
##
###Company
##Local Char YFACCPY(5),YFACFCY(5),YFACGRP(5)
##Local Integer RES
##
##Infbox [F:GAC]FCY
##
##If pat([F:GAC]FCY,"###") Then #Company 3 Numbers
##  YFACCPY = [F:GAC]FCY
##  ARQUERY = "select FCY_0 FROM FACGROUP Where CPY_0 = '"+YFACCPY+"'"
##Elsif pat([F:GAC]FCY,"!*") Then #Group start with Char
##  YFACGRP = [F:GAC]FCY
##  ARQUERY = "select FCY_0 FROM FACGROUP Where CPY_0 = '"+YFACGRP+"'"
##Elsif seg$([F:GAC]FCY,4,4) = "-" #and #Site pattern match
##  YFACFCY = [F:GAC]FCY
##  ARQUERY = "select * FROM FACGROUP Where FCY_0 = '"+YFACFCY+" and CPY_0 = '"+CPY+"'"
##Endif
##
##
##
##If clalev([F:GAC]) = 0 : Close Local File [GAC] : Endif
##If clalev([F:FGR]) = 0 : Close Local File [FGR] : Endif
#
##--------------------
## Distinct SUM
##--------------------
##Local Char PQUERY(250)(0..)
##Local Char SUMQRY(250)(0..)
##
##PQUERY(0) = "SELECT distinct PAY.FRMNUM_0, PAY.BAN_0, BAN.YELA_0, PAY.SNS_0, PAY.FRMFLG_0"
##PQUERY(1) -= "FROM PAYMENTH PAY"
##PQUERY(2) -= "INNER JOIN BANK BAN ON PAY.BAN_0 = BAN.BAN_0"
##PQUERY(3) -= "WHERE PAY.STA_0 = 9 AND (PAY.FRMNUM_0 <> '') and BAN.YBANPRNSTA_0 = 1 and PAY.YPSTSTA_0 not in (2,4)"
##PQUERY(4) -= "GROUP BY FRMNUM_0, PAY.BAN_0, BAN.YELA_0,  PAY.NUM_0, PAY.SNS_0, PAY.BPRSAC_0, PAY.BPR_0, PAY.FRMFLG_0"
##
##For (Char YNUM, Char YBAN, Char YELA, Integer YSNS, Integer YFRMFLG) From "5" Sql PQUERY As [YLNK]
##  #-- Get Sum for each distinct YNUM
##  Local Decimal SUMAMT : SUMAMT = 0
##  SUMQRY(0) = "" : SUMQRY(1) = "" : SUMQRY(2) = ""
##  SUMQRY(0) = "SELECT sum(AMTBAN_0)"
##  SUMQRY(1) -= "From PAYMENTH"
##  SUMQRY(2) -= "Where FRMNUM_0 = '"+[F:YLNK]YNUM+"'"
##  For (Decimal YSUM) From "5" Sql SUMQRY As [YSLNK]
##    SUMAMT = [F:YSLNK]YSUM
##  Next
##  Infbox [F:YLNK]YNUM, num$(SUMAMT)
##Next
#

