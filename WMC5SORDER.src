#<AdxTL>@(#)0.0.0.0 $Revision$Class Sales orders - header
# Supervisor
## ACLA-CLASSE ## SORDER
# 2018-08-27 12:48:00 321

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 121 : EECICT Incoterm ( Field Miscellaneous table number)
####################################################################

$SET_EECICT
If [L]_AOLDVAL<>this.EECICT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EECICT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EECICT
 Gosub PROPAGATE_EECICT
Endif
Return

$INIT_EECICT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "EECICT"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"EECICT",this.EECICT,5)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EECICT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "EECICT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EECICT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EECICT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EECICT
[L]CURPRO = "EECICT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.EECICT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EECICT
[L]CURPRO = "EECICT"
If vireblc(this.EECICT,2)<>vireblc(format$("K:20B",this.EECICT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_EECICT
[L]CURPRO = "EECICT"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"EECICT",this.EECICT,5,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EECICT
[L]CURPRO = "EECICT"
Return

$PROPAGATE_EECICT
this.isReadonly = 0
[L]CURPRO = "EECICT"
Gosub _LNKPRO_EECICT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EECICT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "EECICT"
$_LNKPRO_EECICT
If vireblc(this.EECICT,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 5;this.EECICT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("EECICT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("EECICT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 122 : EECLOC EU transport location ( Field Local menu number 236)
####################################################################

$SET_EECLOC
If [L]_AOLDVAL<>this.EECLOC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EECLOC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EECLOC
 Gosub PROPAGATE_EECLOC
Endif
Return

$INIT_EECLOC
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "EECLOC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.EECLOC=0 and fmet this.AGETATTRIBUTE("EECLOC","$isMandatory")="true"
 this.EECLOC = 1
Endif
Return
 
$CONTROL_EECLOC
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "EECLOC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EECLOC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EECLOC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EECLOC
[L]CURPRO = "EECLOC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EECLOC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EECLOC
[L]CURPRO = "EECLOC"
If this.EECLOC<0 or this.EECLOC>len(mess(0,236,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"236 ->"-num$(this.EECLOC)-mess(99,123,1)):  Return : # Local menu "236 -> Invalid option
Endif
Return

$_AOTHERS_EECLOC
[L]CURPRO = "EECLOC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EECLOC
[L]CURPRO = "EECLOC"
Return

$PROPAGATE_EECLOC
this.isReadonly = 0
[L]CURPRO = "EECLOC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EECLOC
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "EECLOC"
$_LNKPRO_EECLOC
Return


####################################################################
# 123 : ICTCTY Incoterm town ( Field CTY 40)
####################################################################

$SET_ICTCTY
If [L]_AOLDVAL<>this.ICTCTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ICTCTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ICTCTY
 Gosub PROPAGATE_ICTCTY
Endif
Return

$INIT_ICTCTY
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ICTCTY
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ICTCTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ICTCTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ICTCTY
[L]CURPRO = "ICTCTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ICTCTY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ICTCTY
[L]CURPRO = "ICTCTY"
If vireblc(this.ICTCTY,2)<>vireblc(format$("K:40X",this.ICTCTY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ICTCTY
[L]CURPRO = "ICTCTY"
[L]ASTATUS =  func ASYRTRTATY.CONTROLCTY(this,"ICTCTY",this.ICTCTY,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ICTCTY
[L]CURPRO = "ICTCTY"
Return

$PROPAGATE_ICTCTY
this.isReadonly = 0
[L]ASTATUS =  func ASYRTRTATY.PROPAGATECTY(this,"ICTCTY",this.ICTCTY,this.ICTCTY_POS,this.ICTCTY_SAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]CURPRO = "ICTCTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ICTCTY
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY"
$_LNKPRO_ICTCTY
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATCTY(this,"ICTCTY",this.ICTCTY,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("ICTCTY","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 124 : ICTCTY_POS Postal code ( Field POS 10)
####################################################################

$SET_ICTCTY_POS
If [L]_AOLDVAL<>this.ICTCTY_POS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ICTCTY_POS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ICTCTY_POS
 Gosub PROPAGATE_ICTCTY_POS
Endif
Return

$INIT_ICTCTY_POS
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY_POS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ICTCTY_POS
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY_POS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ICTCTY_POS            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ICTCTY_POS            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ICTCTY_POS
[L]CURPRO = "ICTCTY_POS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ICTCTY_POS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ICTCTY_POS
[L]CURPRO = "ICTCTY_POS"
If vireblc(this.ICTCTY_POS,2)<>vireblc(format$("K:10X",this.ICTCTY_POS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ICTCTY_POS
[L]CURPRO = "ICTCTY_POS"
[L]ASTATUS =  func ASYRTRTATY.CONTROLPOS(this,"ICTCTY_POS",this.ICTCTY_POS,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ICTCTY_POS
[L]CURPRO = "ICTCTY_POS"
Return

$PROPAGATE_ICTCTY_POS
this.isReadonly = 0
[L]ASTATUS =  func ASYRTRTATY.PROPAGATEPOS(this,"ICTCTY_POS",this.ICTCTY_POS,this.ICTCTY,this.ICTCTY_SAT,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]CURPRO = "ICTCTY_POS"
Gosub _LNKPRO_ICTCTY_POS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ICTCTY_POS
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY_POS"
$_LNKPRO_ICTCTY_POS
If vireblc(this.ICTCTY_POS,2)<>""
 # Link POSCOD
 Local File POSCOD [WPOS]
 Read [F:WPOS]POS0 = AVOID.ACHAR;this.ICTCTY_POS;this.ICTCTY;AVOID.ACHAR
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("ICTCTY_POS","$description",[F:WPOS]POSCTY)
 Endif
 LogicClose File [WPOS]
Endif
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATPOS(this,"ICTCTY_POS",this.ICTCTY_POS,[L]AFORMAT,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("ICTCTY_POS","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 125 : ICTCTY_SAT Province ( Field SAT 35)
####################################################################

$SET_ICTCTY_SAT
If [L]_AOLDVAL<>this.ICTCTY_SAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ICTCTY_SAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ICTCTY_SAT
 Gosub PROPAGATE_ICTCTY_SAT
Endif
Return

$INIT_ICTCTY_SAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY_SAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ICTCTY_SAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY_SAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ICTCTY_SAT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ICTCTY_SAT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ICTCTY_SAT
[L]CURPRO = "ICTCTY_SAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ICTCTY_SAT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ICTCTY_SAT
[L]CURPRO = "ICTCTY_SAT"
If vireblc(this.ICTCTY_SAT,2)<>vireblc(format$("K:35X",this.ICTCTY_SAT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ICTCTY_SAT
[L]CURPRO = "ICTCTY_SAT"
[L]ASTATUS =  func ASYRTRTATY.CONTROLSAT(this,"ICTCTY_SAT",this.ICTCTY_SAT,"","")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ICTCTY_SAT
[L]CURPRO = "ICTCTY_SAT"
Return

$PROPAGATE_ICTCTY_SAT
this.isReadonly = 0
[L]CURPRO = "ICTCTY_SAT"
Gosub _LNKPRO_ICTCTY_SAT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ICTCTY_SAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "ICTCTY_SAT"
$_LNKPRO_ICTCTY_SAT
If vireblc(this.ICTCTY_SAT,2)<>""
 # Link TABSUBDIV
 Local File TABSUBDIV [WATU]
 Read [F:WATU]ATU0 = AVOID.ACHAR;AVOID.ALIB;this.ICTCTY_SAT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABSUBDIV" & ZONE="INTIT" & IDENT1=[F:WATU]CRYTYP & IDENT2=[F:WATU]COD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ICTCTY_SAT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABSUBDIV" & ZONE="INTIT" & IDENT1=[F:WATU]CRYTYP & IDENT2=[F:WATU]COD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ICTCTY_SAT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WATU]
Endif
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATSAT(this,"ICTCTY_SAT",this.ICTCTY_SAT,[L]AFORMAT,"","")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("ICTCTY_SAT","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 126 : FFWNUM Freight agent ( Field BPT 15)
####################################################################

$SET_FFWNUM
If [L]_AOLDVAL<>this.FFWNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FFWNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FFWNUM
 Gosub PROPAGATE_FFWNUM
Endif
Return

$INIT_FFWNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "FFWNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FFWNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "FFWNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FFWNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FFWNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FFWNUM
[L]CURPRO = "FFWNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FFWNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FFWNUM
[L]CURPRO = "FFWNUM"
If vireblc(this.FFWNUM,2)<>vireblc(format$("K:15c",this.FFWNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FFWNUM
[L]CURPRO = "FFWNUM"
If vireblc(this.FFWNUM,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPT.ACTRLREF(this,"FFWNUM",this.FFWNUM,this.FFWNUM,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FFWNUM<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FFWNUM
[L]CURPRO = "FFWNUM"
Return

$PROPAGATE_FFWNUM
this.isReadonly = 0
[L]CURPRO = "FFWNUM"
Gosub _LNKPRO_FFWNUM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FFWNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "FFWNUM"
$_LNKPRO_FFWNUM
If vireblc(this.FFWNUM,2)<>""
 # Link BPCARRIER
 Local File BPCARRIER [WBPT]
 Read [F:WBPT]BPT0 = this.FFWNUM
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FFWNUM","$title",[F:WBPT]BPTSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FFWNUM","$description",[F:WBPT]BPTNAM)
 Endif
 LogicClose File [WBPT]
Endif
Return


####################################################################
# 127 : FFWADD Forwarding agent address ( Field ADR 5)
####################################################################

$SET_FFWADD
If [L]_AOLDVAL<>this.FFWADD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FFWADD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FFWADD
 Gosub PROPAGATE_FFWADD
Endif
Return

$INIT_FFWADD
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "FFWADD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FFWADD
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "FFWADD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FFWADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FFWADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FFWADD
[L]CURPRO = "FFWADD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FFWADD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FFWADD
[L]CURPRO = "FFWADD"
If vireblc(this.FFWADD,2)<>vireblc(format$("K:5c",this.FFWADD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FFWADD
[L]CURPRO = "FFWADD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FFWADD
[L]CURPRO = "FFWADD"
If vireblc(this.FFWADD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPADR.ACTRLREF(this,"FFWADD",this.FFWADD,1,this.FFWNUM,this.FFWADD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FFWADD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_FFWADD
this.isReadonly = 0
[L]CURPRO = "FFWADD"
Gosub _LNKPRO_FFWADD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FFWADD
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "FFWADD"
$_LNKPRO_FFWADD
If vireblc(this.FFWADD,2)<>""
 # Link BPADDRESS
 Local File BPADDRESS [WBPA]
 Read [F:WBPA]BPA0 = 1;this.FFWNUM;this.FFWADD
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("FFWADD","$description",[F:WBPA]BPADES)
 Endif
 LogicClose File [WBPA]
Endif
Return


####################################################################
# 128 : CCLREN Closing reason ( Field Miscellaneous table number)
####################################################################

$SET_CCLREN
If [L]_AOLDVAL<>this.CCLREN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCLREN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCLREN
 Gosub PROPAGATE_CCLREN
Endif
Return

$INIT_CCLREN
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CCLREN"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"CCLREN",this.CCLREN,201)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CCLREN
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CCLREN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCLREN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCLREN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCLREN
[L]CURPRO = "CCLREN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CCLREN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCLREN
[L]CURPRO = "CCLREN"
If vireblc(this.CCLREN,2)<>vireblc(format$("K:20B",this.CCLREN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CCLREN
[L]CURPRO = "CCLREN"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"CCLREN",this.CCLREN,201,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCLREN
[L]CURPRO = "CCLREN"
Return

$PROPAGATE_CCLREN
this.isReadonly = 0
[L]CURPRO = "CCLREN"
Gosub _LNKPRO_CCLREN
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCLREN
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CCLREN"
$_LNKPRO_CCLREN
If vireblc(this.CCLREN,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 201;this.CCLREN
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCLREN","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCLREN","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 129 : CCLDAT Date closed ( Field D)
####################################################################

$SET_CCLDAT
If [L]_AOLDVAL<>this.CCLDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCLDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCLDAT
 Gosub PROPAGATE_CCLDAT
Endif
Return

$INIT_CCLDAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CCLDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CCLDAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CCLDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCLDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCLDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCLDAT
[L]CURPRO = "CCLDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CCLDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCLDAT
[L]CURPRO = "CCLDAT"
Return

$_AOTHERS_CCLDAT
[L]CURPRO = "CCLDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCLDAT
[L]CURPRO = "CCLDAT"
Return

$PROPAGATE_CCLDAT
this.isReadonly = 0
[L]CURPRO = "CCLDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCLDAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CCLDAT"
$_LNKPRO_CCLDAT
Return


####################################################################
# 130 : SRENUM Service request ( Field SRE 20)
####################################################################

$SET_SRENUM
If [L]_AOLDVAL<>this.SRENUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SRENUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SRENUM
 Gosub PROPAGATE_SRENUM
Endif
Return

$INIT_SRENUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SRENUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SRENUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SRENUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SRENUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SRENUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SRENUM
[L]CURPRO = "SRENUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SRENUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SRENUM
[L]CURPRO = "SRENUM"
If vireblc(this.SRENUM,2)<>vireblc(format$("K:20X",this.SRENUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SRENUM
[L]CURPRO = "SRENUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SRENUM
[L]CURPRO = "SRENUM"
Return

$PROPAGATE_SRENUM
this.isReadonly = 0
[L]CURPRO = "SRENUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SRENUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SRENUM"
$_LNKPRO_SRENUM
Return


####################################################################
# 131 : CMGNUM Marketing campaign ( Field CMG 20)
####################################################################

$SET_CMGNUM
If [L]_AOLDVAL<>this.CMGNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CMGNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CMGNUM
 Gosub PROPAGATE_CMGNUM
Endif
Return

$INIT_CMGNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CMGNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CMGNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CMGNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CMGNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CMGNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CMGNUM
[L]CURPRO = "CMGNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CMGNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CMGNUM
[L]CURPRO = "CMGNUM"
If vireblc(this.CMGNUM,2)<>vireblc(format$("K:20X",this.CMGNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CMGNUM
[L]CURPRO = "CMGNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CMGNUM
[L]CURPRO = "CMGNUM"
Return

$PROPAGATE_CMGNUM
this.isReadonly = 0
[L]CURPRO = "CMGNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CMGNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "CMGNUM"
$_LNKPRO_CMGNUM
Return


####################################################################
# 132 : OPGNUM Marketing operation ( Field VCR 20)
####################################################################

$SET_OPGNUM
If [L]_AOLDVAL<>this.OPGNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OPGNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OPGNUM
 Gosub PROPAGATE_OPGNUM
Endif
Return

$INIT_OPGNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "OPGNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OPGNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "OPGNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OPGNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OPGNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OPGNUM
[L]CURPRO = "OPGNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.OPGNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OPGNUM
[L]CURPRO = "OPGNUM"
If vireblc(this.OPGNUM,2)<>vireblc(format$("K:20X",this.OPGNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_OPGNUM
[L]CURPRO = "OPGNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OPGNUM
[L]CURPRO = "OPGNUM"
Return

$PROPAGATE_OPGNUM
this.isReadonly = 0
[L]CURPRO = "OPGNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OPGNUM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "OPGNUM"
$_LNKPRO_OPGNUM
Return


####################################################################
# 133 : OPGTYP Operation type ( Field A 3)
####################################################################

$SET_OPGTYP
If [L]_AOLDVAL<>this.OPGTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_OPGTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.OPGTYP
 Gosub PROPAGATE_OPGTYP
Endif
Return

$INIT_OPGTYP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "OPGTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_OPGTYP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "OPGTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_OPGTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_OPGTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_OPGTYP
[L]CURPRO = "OPGTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.OPGTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_OPGTYP
[L]CURPRO = "OPGTYP"
Return

$_AOTHERS_OPGTYP
[L]CURPRO = "OPGTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_OPGTYP
[L]CURPRO = "OPGTYP"
Return

$PROPAGATE_OPGTYP
this.isReadonly = 0
[L]CURPRO = "OPGTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_OPGTYP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "OPGTYP"
$_LNKPRO_OPGTYP
Return


####################################################################
# 134 : PLISTC Structure code ( Field PRS 10)
####################################################################

$SET_PLISTC
If [L]_AOLDVAL<>this.PLISTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLISTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLISTC
 Gosub PROPAGATE_PLISTC
Endif
Return

$INIT_PLISTC
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "PLISTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLISTC
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "PLISTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLISTC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLISTC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLISTC
[L]CURPRO = "PLISTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLISTC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLISTC
[L]CURPRO = "PLISTC"
If vireblc(this.PLISTC,2)<>vireblc(format$("K:10c",this.PLISTC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PLISTC
[L]CURPRO = "PLISTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLISTC
[L]CURPRO = "PLISTC"
Return

$PROPAGATE_PLISTC
this.isReadonly = 0
[L]CURPRO = "PLISTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLISTC
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "PLISTC"
$_LNKPRO_PLISTC
Return


####################################################################
# 135 : DSPTOTQTY Quantity total ( Field DCB 9)
####################################################################

$SET_DSPTOTQTY
If [L]_AOLDVAL<>this.DSPTOTQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSPTOTQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSPTOTQTY
 Gosub PROPAGATE_DSPTOTQTY
Endif
Return

$INIT_DSPTOTQTY
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSPTOTQTY
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSPTOTQTY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSPTOTQTY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSPTOTQTY
[L]CURPRO = "DSPTOTQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DSPTOTQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSPTOTQTY
[L]CURPRO = "DSPTOTQTY"
Return

$_AOTHERS_DSPTOTQTY
[L]CURPRO = "DSPTOTQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSPTOTQTY
[L]CURPRO = "DSPTOTQTY"
Return

$PROPAGATE_DSPTOTQTY
this.isReadonly = 0
[L]CURPRO = "DSPTOTQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSPTOTQTY
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTQTY"
$_LNKPRO_DSPTOTQTY
Return


####################################################################
# 136 : DSPTOTWEI Weight aggregation ( Field QTY 0)
####################################################################

$SET_DSPTOTWEI
If [L]_AOLDVAL<>this.DSPTOTWEI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSPTOTWEI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSPTOTWEI
 Gosub PROPAGATE_DSPTOTWEI
Endif
Return

$INIT_DSPTOTWEI
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTWEI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSPTOTWEI
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTWEI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSPTOTWEI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSPTOTWEI             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSPTOTWEI
[L]CURPRO = "DSPTOTWEI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DSPTOTWEI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSPTOTWEI
[L]CURPRO = "DSPTOTWEI"
Return

$_AOTHERS_DSPTOTWEI
[L]CURPRO = "DSPTOTWEI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSPTOTWEI
[L]CURPRO = "DSPTOTWEI"
Return

$PROPAGATE_DSPTOTWEI
this.isReadonly = 0
[L]CURPRO = "DSPTOTWEI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSPTOTWEI
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTWEI"
$_LNKPRO_DSPTOTWEI
Return


####################################################################
# 137 : DSPTOTVOL Volume aggregation ( Field QTY 0)
####################################################################

$SET_DSPTOTVOL
If [L]_AOLDVAL<>this.DSPTOTVOL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSPTOTVOL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSPTOTVOL
 Gosub PROPAGATE_DSPTOTVOL
Endif
Return

$INIT_DSPTOTVOL
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTVOL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSPTOTVOL
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTVOL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSPTOTVOL             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSPTOTVOL             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSPTOTVOL
[L]CURPRO = "DSPTOTVOL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DSPTOTVOL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSPTOTVOL
[L]CURPRO = "DSPTOTVOL"
Return

$_AOTHERS_DSPTOTVOL
[L]CURPRO = "DSPTOTVOL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSPTOTVOL
[L]CURPRO = "DSPTOTVOL"
Return

$PROPAGATE_DSPTOTVOL
this.isReadonly = 0
[L]CURPRO = "DSPTOTVOL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSPTOTVOL
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPTOTVOL"
$_LNKPRO_DSPTOTVOL
Return


####################################################################
# 138 : DSPWEU Weight unit ( Field UOM 3)
####################################################################

$SET_DSPWEU
If [L]_AOLDVAL<>this.DSPWEU
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSPWEU
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSPWEU
 Gosub PROPAGATE_DSPWEU
Endif
Return

$INIT_DSPWEU
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPWEU"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSPWEU
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPWEU"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSPWEU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSPWEU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSPWEU
[L]CURPRO = "DSPWEU"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DSPWEU,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSPWEU
[L]CURPRO = "DSPWEU"
If vireblc(this.DSPWEU,2)<>vireblc(format$("K:3X",this.DSPWEU),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DSPWEU
[L]CURPRO = "DSPWEU"
If vireblc(this.DSPWEU,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPUOM.ACTRLREF(this,"DSPWEU",this.DSPWEU,this.DSPWEU,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DSPWEU<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSPWEU
[L]CURPRO = "DSPWEU"
Return

$PROPAGATE_DSPWEU
this.isReadonly = 0
[L]CURPRO = "DSPWEU"
Gosub _LNKPRO_DSPWEU
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSPWEU
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPWEU"
$_LNKPRO_DSPWEU
If vireblc(this.DSPWEU,2)<>""
 # Link TABUNIT
 Local File TABUNIT [WTUN]
 Read [F:WTUN]TUN0 = this.DSPWEU
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPWEU","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPWEU","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPWEU","$symbol",[F:WTUN]UOMSYM)
  If int([WTUN]UOMDEC)>0
   Local Char WSCALE(10)
   WSCALE=num$([F:WTUN]UOMDEC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPWEU","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTUN]
Endif
Return


####################################################################
# 139 : DSPVOU Volume unit ( Field UOM 3)
####################################################################

$SET_DSPVOU
If [L]_AOLDVAL<>this.DSPVOU
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSPVOU
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSPVOU
 Gosub PROPAGATE_DSPVOU
Endif
Return

$INIT_DSPVOU
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPVOU"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSPVOU
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPVOU"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSPVOU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSPVOU                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSPVOU
[L]CURPRO = "DSPVOU"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DSPVOU,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSPVOU
[L]CURPRO = "DSPVOU"
If vireblc(this.DSPVOU,2)<>vireblc(format$("K:3X",this.DSPVOU),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DSPVOU
[L]CURPRO = "DSPVOU"
If vireblc(this.DSPVOU,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPUOM.ACTRLREF(this,"DSPVOU",this.DSPVOU,this.DSPVOU,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DSPVOU<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSPVOU
[L]CURPRO = "DSPVOU"
Return

$PROPAGATE_DSPVOU
this.isReadonly = 0
[L]CURPRO = "DSPVOU"
Gosub _LNKPRO_DSPVOU
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSPVOU
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "DSPVOU"
$_LNKPRO_DSPVOU
If vireblc(this.DSPVOU,2)<>""
 # Link TABUNIT
 Local File TABUNIT [WTUN]
 Read [F:WTUN]TUN0 = this.DSPVOU
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPVOU","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPVOU","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPVOU","$symbol",[F:WTUN]UOMSYM)
  If int([WTUN]UOMDEC)>0
   Local Char WSCALE(10)
   WSCALE=num$([F:WTUN]UOMDEC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("DSPVOU","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTUN]
Endif
Return


####################################################################
# 140 : SDHTYP Delivery type ( Field TSD 5)
####################################################################

$SET_SDHTYP
If [L]_AOLDVAL<>this.SDHTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDHTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDHTYP
 Gosub PROPAGATE_SDHTYP
Endif
Return

$INIT_SDHTYP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDHTYP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDHTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDHTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDHTYP
[L]CURPRO = "SDHTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDHTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDHTYP
[L]CURPRO = "SDHTYP"
If vireblc(this.SDHTYP,2)<>vireblc(format$("K:5c",this.SDHTYP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDHTYP
[L]CURPRO = "SDHTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDHTYP
[L]CURPRO = "SDHTYP"
If vireblc(this.SDHTYP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTSD.ACTRLREF(this,"SDHTYP",this.SDHTYP,this.SDHTYP,this.SDHTYP_LEG,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SDHTYP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_SDHTYP
this.isReadonly = 0
[L]CURPRO = "SDHTYP"
Gosub _LNKPRO_SDHTYP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDHTYP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP"
$_LNKPRO_SDHTYP
If vireblc(this.SDHTYP,2)<>""
 # Link TABSDHTYP
 Local File TABSDHTYP [WTSD]
 Read [F:WTSD]TSD0 = this.SDHTYP;this.SDHTYP_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABSDHTYP" & ZONE="SHOAXX" & IDENT1=[F:WTSD]SDHTYP & IDENT2=[F:WTSD]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABSDHTYP" & ZONE="DESAXX" & IDENT1=[F:WTSD]SDHTYP & IDENT2=[F:WTSD]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTSD]
Endif
Return


####################################################################
# 141 : SDHTYP_LEG Legislation ( Field Miscellaneous table number)
####################################################################

$GET_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP_LEG"
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SDHTYP_LEG
If [L]_AOLDVAL<>this.SDHTYP_LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDHTYP_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDHTYP_LEG
 Gosub PROPAGATE_SDHTYP_LEG
Endif
Return

$INIT_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"SDHTYP_LEG",this.SDHTYP_LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP_LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDHTYP_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDHTYP_LEG            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDHTYP_LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
If vireblc(this.SDHTYP_LEG,2)<>vireblc(format$("K:20B",this.SDHTYP_LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"SDHTYP_LEG",this.SDHTYP_LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDHTYP_LEG
[L]CURPRO = "SDHTYP_LEG"
Return

$PROPAGATE_SDHTYP_LEG
this.isReadonly = 0
[L]CURPRO = "SDHTYP_LEG"
Gosub _LNKPRO_SDHTYP_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDHTYP_LEG
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "SDHTYP_LEG"
$_LNKPRO_SDHTYP_LEG
If vireblc(this.SDHTYP_LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.SDHTYP_LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP_LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDHTYP_LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 142 : HLDSTA Hold status ( Field Local menu number 491)
####################################################################

$SET_HLDSTA
If [L]_AOLDVAL<>this.HLDSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDSTA
 Gosub PROPAGATE_HLDSTA
Endif
Return

$INIT_HLDSTA
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.HLDSTA=0 and fmet this.AGETATTRIBUTE("HLDSTA","$isMandatory")="true"
 this.HLDSTA = 1
Endif
Return
 
$CONTROL_HLDSTA
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDSTA
[L]CURPRO = "HLDSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HLDSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDSTA
[L]CURPRO = "HLDSTA"
If this.HLDSTA<0 or this.HLDSTA>len(mess(0,491,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"491 ->"-num$(this.HLDSTA)-mess(99,123,1)):  Return : # Local menu "491 -> Invalid option
Endif
Return

$_AOTHERS_HLDSTA
[L]CURPRO = "HLDSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDSTA
[L]CURPRO = "HLDSTA"
Return

$PROPAGATE_HLDSTA
this.isReadonly = 0
[L]CURPRO = "HLDSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDSTA
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDSTA"
$_LNKPRO_HLDSTA
Return


####################################################################
# 143 : HLDCOD Hold code ( Field Miscellaneous table number)
####################################################################

$SET_HLDCOD
If [L]_AOLDVAL<>this.HLDCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDCOD
 Gosub PROPAGATE_HLDCOD
Endif
Return

$INIT_HLDCOD
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDCOD"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"HLDCOD",this.HLDCOD,204)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDCOD
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDCOD
[L]CURPRO = "HLDCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDCOD
[L]CURPRO = "HLDCOD"
If vireblc(this.HLDCOD,2)<>vireblc(format$("K:20B",this.HLDCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDCOD
[L]CURPRO = "HLDCOD"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"HLDCOD",this.HLDCOD,204,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDCOD
[L]CURPRO = "HLDCOD"
Return

$PROPAGATE_HLDCOD
this.isReadonly = 0
[L]CURPRO = "HLDCOD"
Gosub _LNKPRO_HLDCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDCOD
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDCOD"
$_LNKPRO_HLDCOD
If vireblc(this.HLDCOD,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 204;this.HLDCOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDCOD","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 144 : HLDUSR Hold / release user ( Field AUS 5)
####################################################################

$SET_HLDUSR
If [L]_AOLDVAL<>this.HLDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDUSR
 Gosub PROPAGATE_HLDUSR
Endif
Return

$INIT_HLDUSR
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDUSR
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDUSR
[L]CURPRO = "HLDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDUSR
[L]CURPRO = "HLDUSR"
If vireblc(this.HLDUSR,2)<>vireblc(format$("K:5B",this.HLDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDUSR
[L]CURPRO = "HLDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDUSR
[L]CURPRO = "HLDUSR"
Return

$PROPAGATE_HLDUSR
this.isReadonly = 0
[L]CURPRO = "HLDUSR"
Gosub _LNKPRO_HLDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDUSR
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDUSR"
$_LNKPRO_HLDUSR
If vireblc(this.HLDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.HLDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 145 : HLDDAT Hold / release date ( Field D)
####################################################################

$SET_HLDDAT
If [L]_AOLDVAL<>this.HLDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDDAT
 Gosub PROPAGATE_HLDDAT
Endif
Return

$INIT_HLDDAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDDAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDDAT
[L]CURPRO = "HLDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HLDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDDAT
[L]CURPRO = "HLDDAT"
Return

$_AOTHERS_HLDDAT
[L]CURPRO = "HLDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDDAT
[L]CURPRO = "HLDDAT"
Return

$PROPAGATE_HLDDAT
this.isReadonly = 0
[L]CURPRO = "HLDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDDAT
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDDAT"
$_LNKPRO_HLDDAT
Return


####################################################################
# 146 : HLDTIM Hold / release time ( Field HM 6)
####################################################################

$SET_HLDTIM
If [L]_AOLDVAL<>this.HLDTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDTIM
 Gosub PROPAGATE_HLDTIM
Endif
Return

$INIT_HLDTIM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDTIM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDTIM
[L]CURPRO = "HLDTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDTIM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDTIM
[L]CURPRO = "HLDTIM"
If vireblc(this.HLDTIM,2)<>vireblc(format$("Kz:6X",this.HLDTIM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDTIM
[L]CURPRO = "HLDTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDTIM
[L]CURPRO = "HLDTIM"
Return

$PROPAGATE_HLDTIM
this.isReadonly = 0
[L]CURPRO = "HLDTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDTIM
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDTIM"
$_LNKPRO_HLDTIM
Return


####################################################################
# 147 : HLDCODP Previous hold code ( Field Miscellaneous table number)
####################################################################

$SET_HLDCODP
If [L]_AOLDVAL<>this.HLDCODP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDCODP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDCODP
 Gosub PROPAGATE_HLDCODP
Endif
Return

$INIT_HLDCODP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDCODP"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"HLDCODP",this.HLDCODP,204)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDCODP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDCODP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDCODP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDCODP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDCODP
[L]CURPRO = "HLDCODP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDCODP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDCODP
[L]CURPRO = "HLDCODP"
If vireblc(this.HLDCODP,2)<>vireblc(format$("K:20B",this.HLDCODP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDCODP
[L]CURPRO = "HLDCODP"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"HLDCODP",this.HLDCODP,204,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDCODP
[L]CURPRO = "HLDCODP"
Return

$PROPAGATE_HLDCODP
this.isReadonly = 0
[L]CURPRO = "HLDCODP"
Gosub _LNKPRO_HLDCODP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDCODP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDCODP"
$_LNKPRO_HLDCODP
If vireblc(this.HLDCODP,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 204;this.HLDCODP
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDCODP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDCODP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 148 : HLDUSRP Previous hold user ( Field AUS 5)
####################################################################

$SET_HLDUSRP
If [L]_AOLDVAL<>this.HLDUSRP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDUSRP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDUSRP
 Gosub PROPAGATE_HLDUSRP
Endif
Return

$INIT_HLDUSRP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDUSRP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDUSRP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDUSRP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDUSRP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDUSRP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDUSRP
[L]CURPRO = "HLDUSRP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDUSRP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDUSRP
[L]CURPRO = "HLDUSRP"
If vireblc(this.HLDUSRP,2)<>vireblc(format$("K:5B",this.HLDUSRP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDUSRP
[L]CURPRO = "HLDUSRP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDUSRP
[L]CURPRO = "HLDUSRP"
Return

$PROPAGATE_HLDUSRP
this.isReadonly = 0
[L]CURPRO = "HLDUSRP"
Gosub _LNKPRO_HLDUSRP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDUSRP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDUSRP"
$_LNKPRO_HLDUSRP
If vireblc(this.HLDUSRP,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.HLDUSRP
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDUSRP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("HLDUSRP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 149 : HLDDATP Previous hold date ( Field D)
####################################################################

$SET_HLDDATP
If [L]_AOLDVAL<>this.HLDDATP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDDATP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDDATP
 Gosub PROPAGATE_HLDDATP
Endif
Return

$INIT_HLDDATP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDDATP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDDATP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDDATP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDDATP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDDATP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDDATP
[L]CURPRO = "HLDDATP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.HLDDATP=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDDATP
[L]CURPRO = "HLDDATP"
Return

$_AOTHERS_HLDDATP
[L]CURPRO = "HLDDATP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDDATP
[L]CURPRO = "HLDDATP"
Return

$PROPAGATE_HLDDATP
this.isReadonly = 0
[L]CURPRO = "HLDDATP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDDATP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDDATP"
$_LNKPRO_HLDDATP
Return


####################################################################
# 150 : HLDTIMP Previous hold time ( Field HM 6)
####################################################################

$SET_HLDTIMP
If [L]_AOLDVAL<>this.HLDTIMP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_HLDTIMP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.HLDTIMP
 Gosub PROPAGATE_HLDTIMP
Endif
Return

$INIT_HLDTIMP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDTIMP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_HLDTIMP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDTIMP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_HLDTIMP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_HLDTIMP               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_HLDTIMP
[L]CURPRO = "HLDTIMP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.HLDTIMP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_HLDTIMP
[L]CURPRO = "HLDTIMP"
If vireblc(this.HLDTIMP,2)<>vireblc(format$("Kz:6X",this.HLDTIMP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_HLDTIMP
[L]CURPRO = "HLDTIMP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_HLDTIMP
[L]CURPRO = "HLDTIMP"
Return

$PROPAGATE_HLDTIMP
this.isReadonly = 0
[L]CURPRO = "HLDTIMP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_HLDTIMP
Gosub DECLARE_VAR From WMC0SORDER
[L]CURPRO = "HLDTIMP"
$_LNKPRO_HLDTIMP
Return




