#<AdxTL>@(#)0.0.0.0 $Revision$Class Currency
# Supervisor
## CRUD-CLASSE ## ATABCUR
# 2018-08-27 13:03:02 667


############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(ATABCUR,ASTATUS)
Variable Instance ATABCUR Using R_ATABCUR
Variable Integer ASTATUS

If ATABCUR = null : End : Endif

Gosub AVARIABLES From WMR00ATABCUR
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If fmet ATABCUR.ACTX.AGETAFCRIGHT(ATABCUR,"GESTCU",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END : Endif
If fmet ATABCUR.ACTX.AGETAFCRIGHTU(ATABCUR,"GESTCU",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AUPDATE_END
Endif

Gosub AREPCONTROL_AUPDATE
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_ATABCUR
Else
 Gosub AUPDATE_ATABCUR
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_END : Return : Endif

Gosub _AUPDATE_AFTER
[L]A_I = ATABCUR.freeSnapshot
ATABCUR.snapshotEnabled = 1
$AUPDATE_END
End

#-----------------------------------------------------#
$AREPCONTROL_AUPDATE
ATABCUR.ASTALIN = [V]CST_AUPD
ATABCUR.TCU.ASTALIN = [V]CST_AUPD
[L]A_ASTALIN = ATABCUR.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATABCUR.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet ATABCUR._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet ATABCUR._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet ATABCUR._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If ATABCUR.TCU.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATABCUR.TCU.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(ATABCUR.TCU.ASTALIN)<>""
 [L]A_ASTALIN = ATABCUR.TCU.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
For A_N2=1 To maxtab(ATABCUR.TCU.COLTCH) : # TABCHANGE -- 2
 If ATABCUR.TCU.COLTCH(A_N2) <> null
& and ATABCUR.TCU.COLTCH(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If ATABCUR.TCU.COLTCH(A_N2).ASTALIN<>[V]CST_ANEW & ATABCUR.TCU.ASTALIN=[V]CST_ADEL
   ATABCUR.TCU.COLTCH(A_N2).ASTALIN = [V]CST_ADEL
  Endif
  If ATABCUR.TCU.COLTCH(A_N2).ASTALIN=[V]CST_ANEW & find(ATABCUR.TCU.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL)>0
   ATABCUR.TCU.COLTCH(A_N2).ASTALIN = [V]CST_ANEWDEL
  Endif
  If [V]CST_ASTALIN(ATABCUR.TCU.COLTCH(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(ATABCUR.TCU.COLTCH(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.COLTCH(A_N2)._AINSERT_CONTROL_BEFORE)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.COLTCH(A_N2)._AUPDATE_CONTROL_BEFORE)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.COLTCH(A_N2)._ADELETE_CONTROL_BEFORE)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER
For A_N2=1 To maxtab(ATABCUR.TCU.COLTCH) : # TABCHANGE -- 2
 If ATABCUR.TCU.COLTCH(A_N2) <> null
& and ATABCUR.TCU.COLTCH(A_N2).ASTALIN<>[V]CST_ANEWDEL
  If [V]CST_ASTALIN(ATABCUR.TCU.COLTCH(A_N2).ASTALIN)<>""
   Case [V]CST_ASTALIN(ATABCUR.TCU.COLTCH(A_N2).ASTALIN)
    When [V]CST_APRGAINSERT  : [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.COLTCH(A_N2)._AINSERT_CONTROL_AFTER)
    When [V]CST_APRGAUPDATE : [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.COLTCH(A_N2)._AUPDATE_CONTROL_AFTER)
    When [V]CST_APRGADELETE  : [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.COLTCH(A_N2)._ADELETE_CONTROL_AFTER)
   Endcase
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If [V]CST_ASTALIN(ATABCUR.TCU.ASTALIN)<>""
 [L]A_ASTALIN = ATABCUR.TCU.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_ATABCUR
Trbegin [F:TCU]
 Gosub AUPDATE_ATABCUR
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(ATABCUR.TCU.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 ATABCUR.TCU.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABCUR.TCU.COLTCH)
 If ATABCUR.TCU.COLTCH(A_N2) <> null
  [L]ASTATUS2 = fmet ATABCUR.TCU.COLTCH(A_N2)._AUPDATE_AFTER
  If ATABCUR.TCU.COLTCH(A_N2).ASTALIN=[V]CST_ADEL or ATABCUR.TCU.COLTCH(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABCUR.TCU.COLTCH(A_N2)
   ATABCUR.TCU.COLTCH(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AUPDATE_ATABCUR
[L]A_ASTALIN = ATABCUR.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.TCU._AUPDATE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]A_ASTALIN = ATABCUR.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet ATABCUR.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If ATABCUR.snapshotEnabled=1
 [L]A_RETIK = ATABCUR.revertUpdTick
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(ATABCUR.TCU.COLTCH)
 If ATABCUR.TCU.COLTCH(A_N2) <> null
  [L]ASTATUS2 = fmet ATABCUR.TCU.COLTCH(A_N2)._AUPDATE_ABORT
  If ATABCUR.TCU.COLTCH(A_N2).ASTALIN=[V]CST_ADEL or ATABCUR.TCU.COLTCH(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance ATABCUR.TCU.COLTCH(A_N2)
   ATABCUR.TCU.COLTCH(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2

[L]ASTATUS = max(fmet ATABCUR.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



