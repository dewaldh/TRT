#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SIHV 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:12:30"
A_USER  = "ADMIN"
A_STAMP = "20180828001230"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBVAT"
  If [M]NBVAT=0
  Endif
 When "NBFOOT"
  If [M]NBFOOT=0
   If GFMTDIE(1)<>""
    Chgfmt SFICCE1 With GFMTDIE(1)
   Else
    Chgfmt SFICCE1 With "-K:1X"
   Endif
   If GFMTDIE(2)<>""
    Chgfmt SFICCE2 With GFMTDIE(2)
   Else
    Chgfmt SFICCE2 With "-K:1X"
   Endif
   If GFMTDIE(3)<>""
    Chgfmt SFICCE3 With GFMTDIE(3)
   Else
    Chgfmt SFICCE3 With "-K:1X"
   Endif
   If GFMTDIE(4)<>""
    Chgfmt SFICCE4 With GFMTDIE(4)
   Else
    Chgfmt SFICCE4 With "-K:1X"
   Endif
   If GFMTDIE(5)<>""
    Chgfmt SFICCE5 With GFMTDIE(5)
   Else
    Chgfmt SFICCE5 With "-K:1X"
   Endif
   If GFMTDIE(6)<>""
    Chgfmt SFICCE6 With GFMTDIE(6)
   Else
    Chgfmt SFICCE6 With "-K:1X"
   Endif
   If GFMTDIE(7)<>""
    Chgfmt SFICCE7 With GFMTDIE(7)
   Else
    Chgfmt SFICCE7 With "-K:1X"
   Endif
   If GFMTDIE(8)<>""
    Chgfmt SFICCE8 With GFMTDIE(8)
   Else
    Chgfmt SFICCE8 With "-K:1X"
   Endif
   If GFMTDIE(9)<>""
    Chgfmt SFICCE9 With GFMTDIE(9)
   Else
    Chgfmt SFICCE9 With "-K:1X"
   Endif
   If GFMTDIE(10)<>""
    Chgfmt SFICCE10 With GFMTDIE(10)
   Else
    Chgfmt SFICCE10 With "-K:1X"
   Endif
   If GFMTDIE(11)<>""
    Chgfmt SFICCE11 With GFMTDIE(11)
   Else
    Chgfmt SFICCE11 With "-K:1X"
   Endif
   If GFMTDIE(12)<>""
    Chgfmt SFICCE12 With GFMTDIE(12)
   Else
    Chgfmt SFICCE12 With "-K:1X"
   Endif
   If GFMTDIE(13)<>""
    Chgfmt SFICCE13 With GFMTDIE(13)
   Else
    Chgfmt SFICCE13 With "-K:1X"
   Endif
   If GFMTDIE(14)<>""
    Chgfmt SFICCE14 With GFMTDIE(14)
   Else
    Chgfmt SFICCE14 With "-K:1X"
   Endif
   If GFMTDIE(15)<>""
    Chgfmt SFICCE15 With GFMTDIE(15)
   Else
    Chgfmt SFICCE15 With "-K:1X"
   Endif
   If GFMTDIE(16)<>""
    Chgfmt SFICCE16 With GFMTDIE(16)
   Else
    Chgfmt SFICCE16 With "-K:1X"
   Endif
   If GFMTDIE(17)<>""
    Chgfmt SFICCE17 With GFMTDIE(17)
   Else
    Chgfmt SFICCE17 With "-K:1X"
   Endif
   If GFMTDIE(18)<>""
    Chgfmt SFICCE18 With GFMTDIE(18)
   Else
    Chgfmt SFICCE18 With "-K:1X"
   Endif
   If GFMTDIE(19)<>""
    Chgfmt SFICCE19 With GFMTDIE(19)
   Else
    Chgfmt SFICCE19 With "-K:1X"
   Endif
   If GFMTDIE(20)<>""
    Chgfmt SFICCE20 With GFMTDIE(20)
   Else
    Chgfmt SFICCE20 With "-K:1X"
   Endif
  Endif
 When "NBDTA"
  If [M]NBDTA=0
  Endif
 When "NBCLC"
  If [M]NBCLC=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SIHV [SIHV]
Gosub HORODAT
Local Inpbox "SIHV" From GFONCTION At A_STAMP With A_WINDPREV Mask [SIHV] As [SIM_]
Grizo [SIHV]10
Grizo [SIHV]15
Grizo [SIHV]20
Grizo [SIHV]25
Grizo [SIHV]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SIHV]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=10
X1(1)=1 : X2(1)=74 : Y1(1)=11 : Y2(1)=20
X1(2)=1 : X2(2)=74 : Y1(2)=21 : Y2(2)=23
X1(3)=1 : X2(3)=0 : Y1(3)=24 : Y2(3)=23
X1(4)=1 : X2(4)=0 : Y1(4)=24 : Y2(4)=23
Return

$ON_NOLIGV
Onevent BEFORE_AREA Gosub AV_NOLIGV From W1SIHV
Return

$AV_NOLIGV
zc = nolign
Gosub _AFF
Return

$ON_XVNOT
Onevent BEFORE_AREA Gosub AV_XVNOT From W1SIHV
Return

$AV_XVNOT
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Chgfmt [M]XVNOT(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XVSMI
Onevent BEFORE_AREA Gosub AV_XVSMI From W1SIHV
Return

$AV_XVSMI
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Chgfmt [M]XVSMI(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XVTAX
Return

$ON_XVAMT
Onevent BEFORE_AREA Gosub AV_XVAMT From W1SIHV
Return

$AV_XVAMT
## Action FMTFM2DEV
Call FMTFM2DEV([M]VCUR) From TRTDIV
Chgfmt [M]XVAMT(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XVSUP
Onevent BEFORE_AREA Gosub AV_XVSUP From W1SIHV
Return

$AV_XVSUP
## Action FMTFM2DEV
Call FMTFM2DEV([M]VCUR) From TRTDIV
Chgfmt [M]XVSUP(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XVATI
Onevent BEFORE_AREA Gosub AV_XVATI From W1SIHV
Return

$AV_XVATI
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Chgfmt [M]XVATI(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XVTYP
Onevent INIT_AREA Call D_XVTYP(zc) From W1SIHV
Return

Subprog D_XVTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]XVTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XVCHA
Onevent INIT_AREA Call D_XVCHA(zc) From W1SIHV
Return

Subprog D_XVCHA(VALEUR)
Variable Integer VALEUR
If varinit([M]XVCHA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XVBAS
Onevent INIT_AREA Call D_XVBAS(zc) From W1SIHV
Return

Subprog D_XVBAS(VALEUR)
Variable Integer VALEUR
If varinit([M]XVBAS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XVSMIP
Onevent BEFORE_AREA Gosub AV_XVSMIP From W1SIHV
Return

$AV_XVSMIP
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XVSMIF
Onevent BEFORE_AREA Gosub AV_XVSMIF From W1SIHV
Return

$AV_XVSMIF
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XVSMITP
Onevent BEFORE_AREA Gosub AV_XVSMITP From W1SIHV
Return

$AV_XVSMITP
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XVSMITS
Onevent BEFORE_AREA Gosub AV_XVSMITS From W1SIHV
Return

$AV_XVSMITS
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XVPRO
Onevent BEFORE_AREA Gosub AV_XVPRO From W1SIHV
Return

$AV_XVPRO
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XVBASDEP
Onevent BEFORE_AREA Gosub AV_XVBASDEP From W1SIHV
Return

$AV_XVBASDEP
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_NBFOOT
Onevent BEFORE_INPUT Call AS_NBFOOT From W1SIHV
Onevent BEFORE_AREA Call AV_NBFOOT From W1SIHV
Return

Subprog IB_NBFOOT
Local Decimal BASPAG
## Action STD
Call IB_NBFOOT From SUBSIHV
Gosub _AFF
End

Subprog AV_NBFOOT
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBFOOT" : Gosub TIT_COL From W2SIHV
Endif
Gosub _AFF
End

Subprog AS_NBFOOT
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(549,GBOUT1) From OBJDIV
Call TEXTE(5342,GBOUT2) From OBJDIV
Call IB_NBFOOT
Onkey 129 Titled GBOUT1 Call B1_NBFOOT From W1SIHV
Onkey 130 Titled GBOUT2 Call B2_NBFOOT From W1SIHV
Gosub _AFF
End

Subprog B1_NBFOOT
Local Decimal BASPAG
If !GWEBSERV
 ## Action SAISIHS
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAISIHS"
 PARMSK(1) = num$(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"ISIHS","SUBSIHV","XWISIHV") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_NBFOOT
Local Decimal BASPAG
If !GWEBSERV
 ## Action VISUDTAVAT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUDTAVAT"
 PARMSK(1) = num$(nolign-1)
 Call SAISIE_NUM(BASPAG,PARMSK,"ISIHDTAVAT","TRTVENFEN","XWISIHDTAVAT") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_NOLIGF
Onevent BEFORE_AREA Gosub AV_NOLIGF From W1SIHV
Return

$AV_NOLIGF
zc = nolign
Gosub _AFF
Return

$ON_XFNOT
Onevent BEFORE_AREA Gosub AV_XFNOT From W1SIHV
Return

$AV_XFNOT
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Chgfmt [M]XFNOT(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XFSMI
Onevent BEFORE_AREA Gosub AV_XFSMI From W1SIHV
Return

$AV_XFSMI
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Chgfmt [M]XFSMI(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XFTAX
Return

$ON_XFVATAMT
Onevent BEFORE_AREA Gosub AV_XFVATAMT From W1SIHV
Return

$AV_XFVATAMT
## Action FMTFM2DEV
Call FMTFM2DEV([M]VCUR) From TRTDIV
Chgfmt [M]XFVATAMT(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XFATI
Onevent BEFORE_AREA Gosub AV_XFATI From W1SIHV
Return

$AV_XFATI
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Chgfmt [M]XFATI(indice) With "NPz3:"+GFMT
Gosub _AFF
Return

$ON_XFNOTL
Onevent BEFORE_AREA Gosub AV_XFNOTL From W1SIHV
Return

$AV_XFNOTL
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XFSMIL
Onevent BEFORE_AREA Gosub AV_XFSMIL From W1SIHV
Return

$AV_XFSMIL
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XFNOTP
Onevent BEFORE_AREA Gosub AV_XFNOTP From W1SIHV
Return

$AV_XFNOTP
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XFSMIP
Onevent BEFORE_AREA Gosub AV_XFSMIP From W1SIHV
Return

$AV_XFSMIP
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XFATIL
Onevent BEFORE_AREA Gosub AV_XFATIL From W1SIHV
Return

$AV_XFATIL
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_XFATIP
Onevent BEFORE_AREA Gosub AV_XFATIP From W1SIHV
Return

$AV_XFATIP
## Action FMTFM3DEV
Call FMTFM3DEV([M]VCUR) From TRTDIV
Gosub _AFF
Return

$ON_PROCOD
Onevent INIT_AREA Call D_PROCOD(zc) From W1SIHV
Return

Subprog D_PROCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PROCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AMTCOD
Onevent INIT_AREA Call D_AMTCOD(zc) From W1SIHV
Return

Subprog D_AMTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]AMTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INCDCR
Onevent INIT_AREA Call D_INCDCR(zc) From W1SIHV
Return

Subprog D_INCDCR(VALEUR)
Variable Integer VALEUR
If varinit([M]INCDCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MISRULSTD
Onevent INIT_AREA Call D_MISRULSTD(zc) From W1SIHV
Return

Subprog D_MISRULSTD(VALEUR)
Variable Integer VALEUR
If varinit([M]MISRULSTD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_MISRULUSR
Onevent INIT_AREA Call D_MISRULUSR(zc) From W1SIHV
Return

Subprog D_MISRULUSR(VALEUR)
Variable Integer VALEUR
If varinit([M]MISRULUSR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CLCBAS
Onevent INIT_AREA Call D_CLCBAS(zc) From W1SIHV
Return

Subprog D_CLCBAS(VALEUR)
Variable Integer VALEUR
If varinit([M]CLCBAS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CLCVACITM
Return

$ON_VALTYP
Onevent INIT_AREA Call D_VALTYP(zc) From W1SIHV
Return

Subprog D_VALTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]VALTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_TSDMIN
Onevent BEFORE_AREA Gosub AV_TSDMIN From W1SIHV
Return

$AV_TSDMIN
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M]VCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_TSDMAX
Onevent BEFORE_AREA Gosub AV_TSDMAX From W1SIHV
Return

$AV_TSDMAX
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M]VCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_VATRUL
Onevent INIT_AREA Call D_VATRUL(zc) From W1SIHV
Return

Subprog D_VATRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]VATRUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VACITM
Return

$ON_EXCTAXRUL
Onevent INIT_AREA Call D_EXCTAXRUL(zc) From W1SIHV
Return

Subprog D_EXCTAXRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]EXCTAXRUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SPETAXRUL
Onevent INIT_AREA Call D_SPETAXRUL(zc) From W1SIHV
Return

Subprog D_SPETAXRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]SPETAXRUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DSPLIN
Onevent INIT_AREA Call D_DSPLIN(zc) From W1SIHV
Return

Subprog D_DSPLIN(VALEUR)
Variable Integer VALEUR
If varinit([M]DSPLIN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XFLINCDCR
Onevent INIT_AREA Call D_XFLINCDCR(zc) From W1SIHV
Return

Subprog D_XFLINCDCR(VALEUR)
Variable Integer VALEUR
If varinit([M]XFLINCDCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BPCORI
Onevent INIT_AREA Call D_BPCORI(zc) From W1SIHV
Return

Subprog D_BPCORI(VALEUR)
Variable Integer VALEUR
If varinit([M]BPCORI,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XFLVALTYP
Onevent INIT_AREA Call D_XFLVALTYP(zc) From W1SIHV
Return

Subprog D_XFLVALTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]XFLVALTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XFLCLCRUL
Onevent INIT_AREA Call D_XFLCLCRUL(zc) From W1SIHV
Return

Subprog D_XFLCLCRUL(VALEUR)
Variable Integer VALEUR
If varinit([M]XFLCLCRUL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_XFMCLCVAT
Return

$ON_DSP
Return

$ON_SFICCE1
Onevent BEFORE_AREA Gosub AV_SFICCE1 From W1SIHV
Return

$AV_SFICCE1
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(1))) From SETGLBDIE
If GFMTDIE(1)<>""
 Chgfmt [M]SFICCE1(indice) With GFMTDIE(1)
Else
 Chgfmt [M]SFICCE1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE2
Onevent BEFORE_AREA Gosub AV_SFICCE2 From W1SIHV
Return

$AV_SFICCE2
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(2))) From SETGLBDIE
If GFMTDIE(2)<>""
 Chgfmt [M]SFICCE2(indice) With GFMTDIE(2)
Else
 Chgfmt [M]SFICCE2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE3
Onevent BEFORE_AREA Gosub AV_SFICCE3 From W1SIHV
Return

$AV_SFICCE3
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(3))) From SETGLBDIE
If GFMTDIE(3)<>""
 Chgfmt [M]SFICCE3(indice) With GFMTDIE(3)
Else
 Chgfmt [M]SFICCE3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE4
Onevent BEFORE_AREA Gosub AV_SFICCE4 From W1SIHV
Return

$AV_SFICCE4
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(4))) From SETGLBDIE
If GFMTDIE(4)<>""
 Chgfmt [M]SFICCE4(indice) With GFMTDIE(4)
Else
 Chgfmt [M]SFICCE4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE5
Onevent BEFORE_AREA Gosub AV_SFICCE5 From W1SIHV
Return

$AV_SFICCE5
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(5))) From SETGLBDIE
If GFMTDIE(5)<>""
 Chgfmt [M]SFICCE5(indice) With GFMTDIE(5)
Else
 Chgfmt [M]SFICCE5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE6
Onevent BEFORE_AREA Gosub AV_SFICCE6 From W1SIHV
Return

$AV_SFICCE6
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(6))) From SETGLBDIE
If GFMTDIE(6)<>""
 Chgfmt [M]SFICCE6(indice) With GFMTDIE(6)
Else
 Chgfmt [M]SFICCE6(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE7
Onevent BEFORE_AREA Gosub AV_SFICCE7 From W1SIHV
Return

$AV_SFICCE7
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(7))) From SETGLBDIE
If GFMTDIE(7)<>""
 Chgfmt [M]SFICCE7(indice) With GFMTDIE(7)
Else
 Chgfmt [M]SFICCE7(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE8
Onevent BEFORE_AREA Gosub AV_SFICCE8 From W1SIHV
Return

$AV_SFICCE8
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(8))) From SETGLBDIE
If GFMTDIE(8)<>""
 Chgfmt [M]SFICCE8(indice) With GFMTDIE(8)
Else
 Chgfmt [M]SFICCE8(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE9
Onevent BEFORE_AREA Gosub AV_SFICCE9 From W1SIHV
Return

$AV_SFICCE9
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(9))) From SETGLBDIE
If GFMTDIE(9)<>""
 Chgfmt [M]SFICCE9(indice) With GFMTDIE(9)
Else
 Chgfmt [M]SFICCE9(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE10
Onevent BEFORE_AREA Gosub AV_SFICCE10 From W1SIHV
Return

$AV_SFICCE10
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(10))) From SETGLBDIE
If GFMTDIE(10)<>""
 Chgfmt [M]SFICCE10(indice) With GFMTDIE(10)
Else
 Chgfmt [M]SFICCE10(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE11
Onevent BEFORE_AREA Gosub AV_SFICCE11 From W1SIHV
Return

$AV_SFICCE11
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(11))) From SETGLBDIE
If GFMTDIE(11)<>""
 Chgfmt [M]SFICCE11(indice) With GFMTDIE(11)
Else
 Chgfmt [M]SFICCE11(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE12
Onevent BEFORE_AREA Gosub AV_SFICCE12 From W1SIHV
Return

$AV_SFICCE12
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(12))) From SETGLBDIE
If GFMTDIE(12)<>""
 Chgfmt [M]SFICCE12(indice) With GFMTDIE(12)
Else
 Chgfmt [M]SFICCE12(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE13
Onevent BEFORE_AREA Gosub AV_SFICCE13 From W1SIHV
Return

$AV_SFICCE13
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(13))) From SETGLBDIE
If GFMTDIE(13)<>""
 Chgfmt [M]SFICCE13(indice) With GFMTDIE(13)
Else
 Chgfmt [M]SFICCE13(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_SFICCE14
Onevent BEFORE_AREA Gosub AV_SFICCE14 From W1SIHV
Return

$AV_SFICCE14
## Action INICCEFMT
Call INICCEFMT(num$(GDIE(14))) From SETGLBDIE
If GFMTDIE(14)<>""
 Chgfmt [M]SFICCE14(indice) With GFMTDIE(14)
Else
 Chgfmt [M]SFICCE14(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2SIHV
Return

$TIT_COL
Gosub TIT_COL From W2SIHV
Return


