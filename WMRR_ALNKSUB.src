#<AdxTL>@(#)0.0.0.0 $Revision$Class Subdivision links
# Supervisor
## CRUD-CLASSE ## ALNKSUB
# 2018-08-27 13:01:42 475


############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ALNKSUB,ACLE,ASTATUS,_ETAG)
Variable Instance ALNKSUB Using R_ALNKSUB
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Raz [L]_ETAG
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ALNKSUB,ACLE,ASTATUS)
Variable Instance ALNKSUB Using R_ALNKSUB
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRY(3)
Local Tinyint _TYP
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_TYP = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.AREAD([L]_CRY,[L]_TYP))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ALNKSUB,_CRY,_TYP,ASTATUS)
Variable Instance ALNKSUB Using R_ALNKSUB
Value Char _CRY
Value Tinyint _TYP
Variable Integer ASTATUS

If ALNKSUB = null : End : Endif

Gosub AVARIABLES From WMR00ALNKSUB
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ALNKSUB.APARENT=null
 [L]A_I = ALNKSUB.freeSnapshot
 ALNKSUB.snapshotEnabled = 0
 ALNKSUB.setAccessorEnabled = 0
Endif

If fmet ALNKSUB.ACTX.AGETAFCRIGHT(ALNKSUB,"GESALB",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
If fmet ALNKSUB.ACTX.AGETAFCRIGHTR(ALNKSUB,"GESALB",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ALNKSUB.ALNKSUB.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ALNKSUB.AREAD([L]_CRY,[L]_TYP))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ALNKSUB.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ALNKSUB._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ALNKSUB.APARENT=null
 ALNKSUB.snapshotEnabled = 1
 ALNKSUB.setAccessorEnabled = 1
Endif
End



