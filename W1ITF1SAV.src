#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management ITF1SAV 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:03:38"
A_USER  = "ADMIN"
A_STAMP = "20180828000338"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLOC"
  If [M]NBLOC=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask ITF1SAV [ITF1]
Gosub HORODAT
Local Inpbox "ITF1SAV" From GFONCTION At A_STAMP With A_WINDPREV Mask [ITF1] As [SIM_]
Grizo [ITF1]5
Grizo [ITF1]10
Grizo [ITF1]25
Grizo [ITF1]30
Grizo [ITF1]40
Grizo [ITF1]50
Grizo [ITF1]60
Grizo [ITF1]70
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [ITF1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=42 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=42 : Y1(1)=4 : Y2(1)=8
X1(2)=1 : X2(2)=42 : Y1(2)=9 : Y2(2)=13
X1(3)=1 : X2(3)=42 : Y1(3)=14 : Y2(3)=20
X1(4)=43 : X2(4)=81 : Y1(4)=1 : Y2(4)=5
X1(5)=43 : X2(5)=81 : Y1(5)=6 : Y2(5)=8
X1(6)=43 : X2(6)=81 : Y1(6)=9 : Y2(6)=20
X1(7)=1 : X2(7)=81 : Y1(7)=21 : Y2(7)=23
Return

$ON_STOMGTCOD
Onevent BEFORE_INPUT Call AS_STOMGTCOD(zc) From W1ITF1SAV
Onevent CONTROL Call C_STOMGTCOD(zc) From W1ITF1SAV
Onevent AFTER_CHANGE Gosub AMM_STOMGTCOD From W1ITF1SAV
Onevent INIT_AREA Call D_STOMGTCOD(zc) From W1ITF1SAV
Return

Subprog D_STOMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STOMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(215) From COMBOS
## Action STD
Call AS_STOMGTCOD(VALEUR) From SUBITF
If mkstat=2
 [M]STOMGTCOD(INDIC) = VALEUR
 Affzo STOMGTCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,215,1))))
Endif
Gosub _AFF
End

Subprog C_STOMGTCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_STOMGTCOD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "STOMGTCOD" : GZNUM = 2114 : Endif
Gosub _AFF
End

$AMM_STOMGTCOD
Call AM_STOMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "STOMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STOMGTCOD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "STOMGTCOD" : GZNUM = 2114 : Endif
Gosub _AFF
End

$ON_ABCCLS
Onevent INIT_AREA Call D_ABCCLS(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_ABCCLS(zc) From W1ITF1SAV
Return

Subprog D_ABCCLS(VALEUR)
Variable Integer VALEUR
If varinit([M]ABCCLS,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

Subprog AS_ABCCLS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CUNCOD
Onevent BEFORE_INPUT Call AS_CUNCOD(zc) From W1ITF1SAV
Onevent CONTROL Call C_CUNCOD(zc) From W1ITF1SAV
Onevent INIT_AREA Call D_CUNCOD(zc) From W1ITF1SAV
Return

Subprog D_CUNCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]CUNCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CUNCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(216) From COMBOS
## Action STD
Call AS_CUNCOD(VALEUR) From SUBITF
If mkstat=2
 [M]CUNCOD(INDIC) = VALEUR
 Affzo CUNCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,216,1))))
Endif
If !mkstat
 Discombo 0 From CUNCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From CUNCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_CUNCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CUNCOD" : GZNUM = 1926 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action STD
 Call C_CUNCOD(VALEUR) From SUBITF
 If mkstat : GERR = 1 : GZONE = "CUNCOD" : GZNUM = 1926 : Endif
Endif
Gosub _AFF
End

$ON_CUNFLG
Onevent INIT_AREA Call D_CUNFLG(zc) From W1ITF1SAV
Return

Subprog D_CUNFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CUNFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_STOCOD
Onevent BEFORE_INPUT Call AS_STOCOD(zc) From W1ITF1SAV
Onevent AFTER_CHANGE Gosub AMM_STOCOD From W1ITF1SAV
Onevent INIT_AREA Call D_STOCOD(zc) From W1ITF1SAV
Onevent CONTROL Call C_STOCOD(zc) From W1ITF1SAV
Return

Subprog D_STOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]STOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_STOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(217) From COMBOS
## Action STD
Call AS_STOCOD(VALEUR) From SUBITF
If mkstat=2
 [M]STOCOD(INDIC) = VALEUR
 Affzo STOCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,217,1))))
Endif
If !mkstat
 Discombo 0 From STOCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From STOCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_STOCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "STOCOD" : GZNUM = 1924 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$AMM_STOCOD
Call AM_STOCOD(zc)
If !mkstat & GOBJET
 zoncou = "STOCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_STOCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_STOCOD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "STOCOD" : GZNUM = 1924 : Endif
Gosub _AFF
End

$ON_QUAFLG
Onevent AFTER_CHANGE Gosub AMM_QUAFLG From W1ITF1SAV
Onevent INIT_AREA Call D_QUAFLG(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_QUAFLG(zc) From W1ITF1SAV
Return

Subprog D_QUAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]QUAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QUAFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_QUAFLG
Call AM_QUAFLG(zc)
If !mkstat & GOBJET
 zoncou = "QUAFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QUAFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_QUAFLG(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "QUAFLG" : GZNUM = 3802 : Endif
Gosub _AFF
End

$ON_QLYCRD
Onevent CONTROL Call C_QLYCRD(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_QLYCRD(zc) From W1ITF1SAV
Onevent AFTER_CHANGE Gosub AMM_QLYCRD From W1ITF1SAV
Return

Subprog AS_QLYCRD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(14158,GBOUT2) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 130 Titled GBOUT2 Call B2_QLYCRD(zc) From W1ITF1SAV
Onkey   2 Titled GBOUTS Call S_QLYCRD(zc) From W1ITF1SAV
Onkey 144 Titled GBOUTP Call P_QLYCRD(zc) From W1ITF1SAV
Onkey 146 Titled GBOUTA Call SA_QLYCRD(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_QLYCRD(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("QLC","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "QLYCRD" : GZNUM = 2360 : Endif
Gosub _AFF
End

$AMM_QLYCRD
Call AM_QLYCRD(zc)
If !mkstat & GOBJET
 zoncou = "QLYCRD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_QLYCRD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZQLYCRD)")>indice
 [M]QLYCRD(indice) = VALEUR
 Affzo ZQLYCRD(indice)
Endif
Gosub _AFF
End

Subprog S_QLYCRD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "QLC"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B2_QLYCRD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action VISUQLC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "VISUQLC"
 PARMSK(1) = VALEUR
 Call SAISIE_CHAR(VALEUR,PARMSK,"IVISUQLC","VISUQLC","XWIVISUQLC") From GSAISIE
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_QLYCRD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "QLC"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_QLYCRD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("QLC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZQLYCRD
Onevent BEFORE_AREA Gosub AV_ZQLYCRD From W1ITF1SAV
Return

$AV_ZQLYCRD
Call LECTEXTRA(zc,"QLYCRD","QLYDESAXX",num$([M]QLYCRD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_QUAACS
Onevent CONTROL Call C_QUAACS(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_QUAACS(zc) From W1ITF1SAV
Return

Subprog AS_QUAACS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_QUAACS(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_QUAACS(VALEUR)
Variable Char    VALEUR()
## Action CONTACC
Call CONTACC(VALEUR) From SUBACS
If mkstat : GERR = 1 : GZONE = "QUAACS" : GZNUM = 3930 : Endif
Gosub _AFF
End

Subprog S_QUAACS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELACC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELACC"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELACC","SUBACS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_SMPTYP
Onevent AFTER_CHANGE Gosub AMM_SMPTYP From W1ITF1SAV
Onevent INIT_AREA Call D_SMPTYP(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_SMPTYP(zc) From W1ITF1SAV
Return

Subprog D_SMPTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]SMPTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SMPTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_SMPTYP
Call AM_SMPTYP(zc)
If !mkstat & GOBJET
 zoncou = "SMPTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SMPTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_SMPTYP(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "SMPTYP" : GZNUM = 33090 : Endif
Gosub _AFF
End

$ON_GENLEVINS
Onevent INIT_AREA Call D_GENLEVINS(zc) From W1ITF1SAV
Return

Subprog D_GENLEVINS(VALEUR)
Variable Integer VALEUR
If varinit([M]GENLEVINS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NQA
Onevent BEFORE_INPUT Call AS_NQA(zc) From W1ITF1SAV
Onevent INIT_AREA Call D_NQA(zc) From W1ITF1SAV
Onevent CONTROL Call C_NQA(zc) From W1ITF1SAV
Return

Subprog D_NQA(VALEUR)
Variable Integer VALEUR
If varinit([M]NQA,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_NQA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2758) From COMBOS
## Action STD
Call AS_NQA(VALEUR) From SUBITF
If mkstat=2
 [M]NQA(INDIC) = VALEUR
 Affzo NQA(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2758,1))))
Endif
If !mkstat
 Discombo 0 From NQA(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From NQA(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_NQA(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_SMPMOD
Onevent BEFORE_INPUT Call AS_SMPMOD(zc) From W1ITF1SAV
Onevent INIT_AREA Call D_SMPMOD(zc) From W1ITF1SAV
Onevent CONTROL Call C_SMPMOD(zc) From W1ITF1SAV
Return

Subprog D_SMPMOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SMPMOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SMPMOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2756) From COMBOS
## Action STD
Call AS_SMPMOD(VALEUR) From SUBITF
If mkstat=2
 [M]SMPMOD(INDIC) = VALEUR
 Affzo SMPMOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2756,1))))
Endif
If !mkstat
 Discombo 0 From SMPMOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From SMPMOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_SMPMOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_PCKSTKFLG
Onevent INIT_AREA Call D_PCKSTKFLG(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_PCKSTKFLG(zc) From W1ITF1SAV
Return

Subprog D_PCKSTKFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PCKSTKFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PCKSTKFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCK
Onevent AFTER_CHANGE Gosub AMM_PCK From W1ITF1SAV
Onevent CONTROL Call C_PCK(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_PCK(zc) From W1ITF1SAV
Return

Subprog AS_PCK(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3959,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PCK(zc) From W1ITF1SAV
Onkey   2 Titled GBOUTS Call S_PCK(zc) From W1ITF1SAV
Onkey 144 Titled GBOUTP Call P_PCK(zc) From W1ITF1SAV
Onkey 146 Titled GBOUTA Call SA_PCK(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_PCK(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("TPA","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PCK" : GZNUM = 1846 : Endif
Gosub _AFF
End

$AMM_PCK
Call AM_PCK(zc)
If !mkstat & GOBJET
 zoncou = "PCK" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PCK(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_PCK(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "PCK" : GZNUM = 1846 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZPCK)")>indice
 [M]PCK(indice) = VALEUR
 Affzo ZPCK(indice)
Endif
Gosub _AFF
End

Subprog S_PCK(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TPA"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PCK(VALEUR)
Variable Char    VALEUR()
Call OBJET("TPA",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PCK(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TPA"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PCK(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TPA",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPCK
Onevent BEFORE_AREA Gosub AV_ZPCK From W1ITF1SAV
Return

$AV_ZPCK
Call LECTEXTRA(zc,"TABPACKAGE","DESAXX",num$([M]PCK(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_PCKCAP
Onevent BEFORE_INPUT Call AS_PCKCAP(zc) From W1ITF1SAV
Return

Subprog AS_PCKCAP(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_PCKCAP(VALEUR) From SUBITF
If mkstat=2
 [M]PCKCAP(INDIC) = VALEUR
 Affzo PCKCAP(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_LOCMGTCOD
Onevent AFTER_CHANGE Gosub AMM_LOCMGTCOD From W1ITF1SAV
Onevent INIT_AREA Call D_LOCMGTCOD(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_LOCMGTCOD(zc) From W1ITF1SAV
Onevent CONTROL Call C_LOCMGTCOD(zc) From W1ITF1SAV
Return

Subprog D_LOCMGTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCMGTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCMGTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_LOCMGTCOD(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "LOCMGTCOD" : GZNUM = 5147 : Endif
Gosub _AFF
End

$AMM_LOCMGTCOD
Call AM_LOCMGTCOD(zc)
If !mkstat & GOBJET
 zoncou = "LOCMGTCOD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LOCMGTCOD(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_LOCMGTCOD(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "LOCMGTCOD" : GZNUM = 5147 : Endif
Gosub _AFF
End

$ON_LOCNUM
Onevent BEFORE_INPUT Call AS_LOCNUM(zc) From W1ITF1SAV
Onevent INIT_AREA Call D_LOCNUM(zc) From W1ITF1SAV
Return

Subprog D_LOCNUM(VALEUR)
Variable Integer VALEUR
If varinit([M]LOCNUM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOCNUM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LOCNUM(VALEUR) From SUBITF
If mkstat=2
 [M]LOCNUM(INDIC) = VALEUR
 Affzo LOCNUM(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DEFLOCTYP
Onevent CONTROL Call C_DEFLOCTYP(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_DEFLOCTYP(zc) From W1ITF1SAV
Return

Subprog AS_DEFLOCTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1937,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DEFLOCTYP(zc) From W1ITF1SAV
Onkey   2 Titled GBOUTS Call S_DEFLOCTYP(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_DEFLOCTYP(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_DEFLOCTYP(VALEUR) From SUBITF
If mkstat : GERR = 1 : GZONE = "DEFLOCTYP" : GZNUM = 680 : Endif
Gosub _AFF
End

Subprog S_DEFLOCTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELTLO
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELTLO"
 PARMSK(1) = [M:ITF0]STOFCY
 PARMSK(2) = ""
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELTLO","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_DEFLOCTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJET1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJET1"
 Call OBJET_CHAR(VALEUR,"TLO",[M:ITF0]STOFCY) From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_DEFLOC
Onevent CONTROL Call C_DEFLOC(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_DEFLOC(zc) From W1ITF1SAV
Return

Subprog AS_DEFLOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3234,GBOUT1) From OBJDIV
Call TEXTE(6426,GBOUT2) From OBJDIV
Call TEXTE(23800,GBOUT3) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DEFLOC(zc) From W1ITF1SAV
Onkey 130 Titled GBOUT2 Call B2_DEFLOC(zc) From W1ITF1SAV
Onkey 131 Titled GBOUT3 Call B3_DEFLOC(zc) From W1ITF1SAV
Onkey   2 Titled GBOUTS Call S_DEFLOC(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_DEFLOC(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"*?#!") From STKACT
If mkstat : GERR = 1 : GZONE = "DEFLOC" : GZNUM = 25651 : Endif
If !mkstat
 ## Action STD
 Call C_DEFLOC(VALEUR) From SUBITF
 If mkstat : GERR = 1 : GZONE = "DEFLOC" : GZNUM = 25651 : Endif
Endif
Gosub _AFF
End

Subprog S_DEFLOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELEMP
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELEMP"
 PARMSK(1) = [M:ITF0]STOFCY
 PARMSK(2) = [M:ITF1]DEFLOCTYP(nolign-1)
 PARMSK(3) = ""
 PARMSK(4) = ""
 PARMSK(5) = ""
 PARMSK(6) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELEMP","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_DEFLOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_DEFLOC" : PROGSUB = "SUBITF" : PROGSPE = "SPEITF" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR(VALEUR,"LOC",[M:ITF0]STOFCY) From GOBJET
 ACTION = "BB1_DEFLOC" : PROGSUB = "SUBITF" : PROGSPE = "SPEITF" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_DEFLOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONSSEA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSEA"
 PARMSK(1) = "1"
 PARMSK(2) = [M:ITF0]STOFCY
 PARMSK(3) = VALEUR
 PARMSK(4) = [M:ITF1]DEFLOCTYP(nolign-1)
 PARMSK(5) = ""
 PARMSK(6) = "3"
 PARMSK(7) = "1"
 PARMSK(8) = ""
 PARMSK(9) = VALEUR
 Call CONSULT_CHAR(VALEUR,"SEA",PARMSK) From GCONSULT
 VALEUR = PARMSK(9)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_DEFLOC(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONSSED
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "CONSSED"
 PARMSK(1) = "1"
 PARMSK(2) = [M:ITF0]STOFCY
 PARMSK(3) = [M:ITF0]ITMREF
 PARMSK(4) = [M:ITF0]ITMREF
 PARMSK(5) = "1"
 PARMSK(6) = ""
 PARMSK(7) = VALEUR
 Call CONSULT_CHAR(VALEUR,"SED",PARMSK) From GCONSULT
 VALEUR = PARMSK(7)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PLANNER
Onevent INIT_AREA Call D_PLANNER(zc) From W1ITF1SAV
Onevent CONTROL Call C_PLANNER(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_PLANNER(zc) From W1ITF1SAV
Onevent AFTER_CHANGE Gosub AMM_PLANNER From W1ITF1SAV
Return

Subprog D_PLANNER(VALEUR)
Variable Char    VALEUR()
If varinit([M]PLANNER,indice)=0
 ## Action STD
 Call D_PLANNER(VALEUR) From SUBITF
Endif
Gosub _AFF
End

Subprog AS_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(485,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLANNER(zc) From W1ITF1SAV
Onkey   2 Titled GBOUTS Call S_PLANNER(zc) From W1ITF1SAV
Onkey 144 Titled GBOUTP Call P_PLANNER(zc) From W1ITF1SAV
Onkey 146 Titled GBOUTA Call SA_PLANNER(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_PLANNER(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("AUS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PLANNER" : GZNUM = 15504 : Endif
If !mkstat
 ## Action STD
 Call C_PLANNER(VALEUR) From SUBITF
 If mkstat : GERR = 1 : GZONE = "PLANNER" : GZNUM = 15504 : Endif
Endif
Gosub _AFF
End

$AMM_PLANNER
Call AM_PLANNER(zc)
If !mkstat & GOBJET
 zoncou = "PLANNER" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLANNER(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZPLANNER)")>indice
 [M]PLANNER(indice) = VALEUR
 Affzo ZPLANNER(indice)
Endif
Gosub _AFF
End

Subprog S_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AUS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PLANNER(VALEUR)
Variable Char    VALEUR()
Call OBJET("AUS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AUS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PLANNER(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AUS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPLANNER
Onevent BEFORE_AREA Gosub AV_ZPLANNER From W1ITF1SAV
Return

$AV_ZPLANNER
Call LECTEXTRA(zc,"AUTILIS","INTUSR",num$([M]PLANNER(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_BUY
Onevent INIT_AREA Call D_BUY(zc) From W1ITF1SAV
Onevent CONTROL Call C_BUY(zc) From W1ITF1SAV
Onevent BEFORE_INPUT Call AS_BUY(zc) From W1ITF1SAV
Onevent AFTER_CHANGE Gosub AMM_BUY From W1ITF1SAV
Return

Subprog D_BUY(VALEUR)
Variable Char    VALEUR()
If varinit([M]BUY,indice)=0
 ## Action STD
 Call D_BUY(VALEUR) From SUBITF
Endif
Gosub _AFF
End

Subprog AS_BUY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(485,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_BUY(zc) From W1ITF1SAV
Onkey   2 Titled GBOUTS Call S_BUY(zc) From W1ITF1SAV
Onkey 144 Titled GBOUTP Call P_BUY(zc) From W1ITF1SAV
Onkey 146 Titled GBOUTA Call SA_BUY(zc) From W1ITF1SAV
Gosub _AFF
End

Subprog C_BUY(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("AUS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "BUY" : GZNUM = 1752 : Endif
If !mkstat
 ## Action STD
 Call C_BUY(VALEUR) From SUBITF
 If mkstat : GERR = 1 : GZONE = "BUY" : GZNUM = 1752 : Endif
Endif
Gosub _AFF
End

$AMM_BUY
Call AM_BUY(zc)
If !mkstat & GOBJET
 zoncou = "BUY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BUY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZBUY)")>indice
 [M]BUY(indice) = VALEUR
 Affzo ZBUY(indice)
Endif
Gosub _AFF
End

Subprog S_BUY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "AUS"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_BUY(VALEUR)
Variable Char    VALEUR()
Call OBJET("AUS",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_BUY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "AUS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BUY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("AUS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBUY
Onevent BEFORE_AREA Gosub AV_ZBUY From W1ITF1SAV
Return

$AV_ZBUY
Call LECTEXTRA(zc,"AUTILIS","INTUSR",num$([M]BUY(indice)),"") From ATEXTRA
Gosub _AFF
Return

$CHG_STY
Return


