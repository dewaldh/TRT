#<AdxTL>@(#)0.0.0.0 $Revision$
######################################################################################################################
# Script            : SUBYELA                                                                                        #
# Creation date     : 29/01/2019                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : JR (Leverage)                                                                                  #
# Module            : Entity Loan Agreements                                                                         #
# -------------------------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DDP-1                                                  #
# Description       : DFCX1-25 Entity Loan Agreements                                                                #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
######################################################################################################################
$ACTION
Case ACTION
  When "OUVRE"        : Gosub OUVRE
  When "LIENS"        : Gosub LIENS
  When "FERME"        : Gosub FERME
  When "RAZCRE"       : Gosub RAZCRE
  When "CREATION"     : Gosub CREATION
  When "APRES_CRE"    : Gosub APRES_CRE
  When "VERIF_CRE"    : Gosub VERIF_CRE
  When "VERIF_MOD"    : Gosub VERIF_MOD
  When "VERF_ANU"     : Gosub VERF_ANU
  When "MODIF"        : Gosub MODIF
  When "APRES_MOD"    : Gosub APRES_MOD
  When "AV_ANNULE"    : Gosub AV_ANNULE
  When "ANNULE"       : Gosub ANNULE
  When "SETBOUT"      : Gosub SETBOUT
  When "EXEBOUT"      : Gosub EXEBOUT
  When "STYLE"        : Gosub STYLE
  When Default
Endcase
Return
#------------------------------------------------------------------------------------#
#Open screen
#------------------------------------------------------------------------------------#
$OUVRE
  Global Instance GZINSYELA Using C_YELA
  ANOWRITE = 1
  Local Integer ILOADYELA
  ILOADYELA = [V]CST_AYES
Return
#------------------------------------------------------------------------------------#
#Close screen
#------------------------------------------------------------------------------------#
$FERME
  If GZINSYELA <> null Then
    FreeGroup GZINSYELA
  Endif
  Kill GZINSYELA
Return
#------------------------------------------------------------------------------------#
#Before Create
#------------------------------------------------------------------------------------#
$RAZCRE

  If (GZINSYELA <> null) : FreeGroup GZINSYELA : Endif
  GZINSYELA = NewInstance C_YELA AllocGroup null

  Local Integer MY_STATUS
  [L]MY_STATUS = fmet GZINSYELA.AINIT()
  If ([L]MY_STATUS >= [V]CST_AERROR)

    ILOADYELA = [V]CST_ANO

    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYELA)
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = "An unknown error occured on ELA initialization"
    Endif
    If [L]MY_STATUS <> [V]CST_AWARNING Then
      OK = 0
      Return
    Endif
  Endif

  ILOADYELA = [V]CST_AYES

  #We only need to set instance for this one class as it has an INIT method
  SetInstance [F:YELA] With GZINSYELA
  [M:YELA0]=[F:YELA]

  Affzo [M:YELA0]

Return
#------------------------------------------------------------------------------------#
#Create record
#------------------------------------------------------------------------------------#
$CREATION

  #You can use the instruction SetInstance which will set propertie's values from field's values for propertie's names that are identical to a field's name of the [F] file.
  SetInstance GZINSYELA With [F:YELA]

  #Properties have been set, it is time to invoke the creation method of the class
  Local Integer MY_STATUS
  [L]MY_STATUS = fmet GZINSYELA.AINSERT()
  If ([L]MY_STATUS >= [V]CST_AERROR)
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYELA)
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = "An unknown error occured on ELA creation"
    Endif
  Endif

  #After a successful insert, refresh the [F] file because the key may be generated in the AINSERT method.
  SetInstance [F:YELA] With GZINSYELA

Return
#------------------------------------------------------------------------------------#
#Before create record
#------------------------------------------------------------------------------------#
$VERIF_CRE

  #Set Default = YES if Recipient Site does not have an existing active default ELA

  #Open table
  If !clalev ([F:YELAD]) : Local File YENTLOAAGR     [F:YELAD] : Endif

  Local Integer I : I = 0

  Filter [F:YELAD] Where [F:YELAD]YFCYREC = [M:YELA2]YFCYREC and [F:YELAD]YDEFFLG = 2
  For [F:YELAD]
    I+=1
    Break
  Next
  Filter [F:YELAD] #Reset filter

  If I > 0
    [M:YELA2]YDEFFLG = 1
  Else
    [M:YELA2]YDEFFLG = 2
  Endif

  #Close table
  If clalev([F:YELAD])  : Close Local File [F:YELAD]  : Endif

  #Validate Dimensions
  Gosub VAL_DIM_P
  Gosub VAL_DIM_R

Return
#------------------------------------------------------------------------------------#
#After create record
#------------------------------------------------------------------------------------#
$APRES_CRE
  Gosub RELIT From GOBJSUB
Return
#------------------------------------------------------------------------------------#
#Before modify record
#------------------------------------------------------------------------------------#
$VERIF_MOD

  #Validate Dimensions
  Gosub VAL_DIM_P
  Gosub VAL_DIM_R

Return
#------------------------------------------------------------------------------------#
#Before delete record
#------------------------------------------------------------------------------------#
$VERF_ANU

  If [M:YELA0]YLONAGR <> ""

    #Check if this ELA is present as a Source agreement or in shared bank account
    #Open table
    If !clalev ([F:YELAD]) : Local File YENTLOAAGR     [F:YELAD] : Endif

    Local Integer I : I = 0

    Filter [F:YELAD] Where [F:YELAD]YSRCLONAGR = [M:YELA0]YLONAGR
    For [F:YELAD]
      I+=1
      Break
    Next
    Filter [F:YELAD] #Reset filter

    #Close table
    If clalev([F:YELAD])  : Close Local File [F:YELAD]  : Endif

    If I > 0
      Call ERREURT("This loan is used in a shared Loan Agreement", 1) From GESECRAN
      #Stop deletion
      OK=0
    Endif

    #Check if ELA is mapped to a shared bank account
    #Open table
    If !clalev ([F:YBAN])  : Local File BANK        [F:YBAN]  : Endif


    Local Integer X : X = 0

    Filter [F:YBAN] Where [F:YBAN]YELA = [M:YELA0]YLONAGR
    For [F:YBAN]
      X+=1
      Break
    Next
    Filter [F:YBAN]

    If X > 0
      Call ERREURT("This loan is used in a shared bank account", 1) From GESECRAN
      #Stop deletion
      OK=0
    Endif

    #Close table
    If clalev([F:YBAN])  : Close Local File [F:YBAN]  : Endif

  Endif

Return
#------------------------------------------------------------------------------------#
#Modify record
#------------------------------------------------------------------------------------#
$MODIF

  SetInstance GZINSYELA With [F:YELA]

  Local Integer MY_STATUS
  [L]MY_STATUS = fmet GZINSYELA.AUPDATE()
  If ([L]MY_STATUS >= [V]CST_AERROR)
    # Error management
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYELA)
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = "An unknown error occured on ELA modification"
    Endif
    If [L]MY_STATUS <> [V]CST_AWARNING Then
      Return
    Endif
  Endif

Return
#------------------------------------------------------------------------------------#
#After modify record
#------------------------------------------------------------------------------------#
$APRES_MOD
  Gosub RELIT From GOBJSUB
Return
#------------------------------------------------------------------------------------#
#Begin delete record
#------------------------------------------------------------------------------------#
$AV_ANNULE
  Local Integer ANOWRITE
  ANOWRITE = 1
Return
#------------------------------------------------------------------------------------#
#Delete record
#------------------------------------------------------------------------------------#
$ANNULE
  Local Integer MY_STATUS
  [L]MY_STATUS = fmet GZINSYELA.ADELETE()
  If ([L]MY_STATUS >= [V]CST_AERROR)
    # Error management
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = "An unknown error occured on ELA deletion"
    Endif
    If [L]MY_STATUS <> [V]CST_AWARNING Then
      Return
    Endif
  Endif
Return
#------------------------------------------------------------------------------------#
#Read record
#------------------------------------------------------------------------------------#
$LIENS

  If (GZINSYELA <> null) : FreeGroup GZINSYELA : Endif
  GZINSYELA = NewInstance C_YELA AllocGroup null

  Local Integer MY_STATUS
  [L]MY_STATUS = fmet GZINSYELA.AREAD([M:YELA0]YLONAGR)

  If [L]MY_STATUS >= [V]CST_AERROR Then
    ILOADYELA = [V]CST_ANO
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYELA)
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = "An unknown error occured on ELA reading"
    Endif
    If [L]MY_STATUS <> [V]CST_AWARNING Then
      Return
    Endif
  Endif

  ILOADYELA = [V]CST_AYES

#  #Set Provider Dimensions
#  If [M:YELA1]YFCYPRO <> "" and [M:YELA1]YCPYPRO <> ""
#
#    Local Char REQUEST(255)(0..5)
#    REQUEST(0) =  "SELECT CPY.CPY_0, CPY.ACM_0, LED.LED_0, LED.COA_0, LED.DIE_0, LED.DIE_1, LED.DIE_2, LED.DIE_3, LED.DIE_4, CPY.YCPYACT_0"
#    REQUEST(1) -= "FROM FACILITY FCY"
#    REQUEST(2) -= "INNER JOIN COMPANY CPY ON CPY.MAIFCY_0 = FCY.FCY_0 and FCY.LEGCPY_0 = CPY.CPY_0"
#    REQUEST(3) -= "INNER JOIN GACM GCM ON GCM.GCM_0 = CPY.ACM_0"
#    REQUEST(4) -= "INNER JOIN GLED LED ON LED.LED_0 = GCM.LED_0"
#    REQUEST(5) -= "WHERE FCY.FCY_0 = '" + [M:YELA1]YFCYPRO + "' AND CPY.CPY_0 = '"+[M:YELA1]YCPYPRO+"' AND CPY.YCPYACT_0 = 2"
#
#    For (Char CPY, Char ACM, Char LED, Char COA, Char DIE0, Char DIE1, Char DIE2, Char DIE3, Char DIE4, Integer CPYACT) From "5" Sql REQUEST As [YLNK]
#      #[M:YELA1]YCPY(nolign-1) = CPY
#      #[M:YELA1]YACM(nolign-1) = ACM
#      [M:YELA1]YCOAPRO = COA
#      #[M:YELA1]YLED1(nolign-1) = LED
#      [M:YELA1]YPDIE0 = DIE0
#      [M:YELA1]YPDIE1 = DIE1
#      [M:YELA1]YPDIE2 = DIE2
#      [M:YELA1]YPDIE3 = DIE3
#      [M:YELA1]YPDIE4 = DIE4
#    Next
#
#  Endif
#
#  #Set Recipient Dimensions
#  If [M:YELA2]YFCYREC <> "" and [M:YELA2]YCPYREC <> ""
#
#    Local Char REQUEST(255)(0..5)
#    REQUEST(0) =  "SELECT CPY.CPY_0, CPY.ACM_0, LED.LED_0, LED.COA_0, LED.DIE_0, LED.DIE_1, LED.DIE_2, LED.DIE_3, LED.DIE_4, CPY.YCPYACT_0"
#    REQUEST(1) -= "FROM FACILITY FCY"
#    REQUEST(2) -= "INNER JOIN COMPANY CPY ON CPY.MAIFCY_0 = FCY.FCY_0 and FCY.LEGCPY_0 = CPY.CPY_0"
#    REQUEST(3) -= "INNER JOIN GACM GCM ON GCM.GCM_0 = CPY.ACM_0"
#    REQUEST(4) -= "INNER JOIN GLED LED ON LED.LED_0 = GCM.LED_0"
#    REQUEST(5) -= "WHERE FCY.FCY_0 = '" + [M:YELA2]YFCYREC + "' AND CPY.CPY_0 = '"+[M:YELA2]YCPYREC+"' AND CPY.YCPYACT_0 = 2"
#
#    For (Char CPY, Char ACM, Char LED, Char COA, Char DIE0, Char DIE1, Char DIE2, Char DIE3, Char DIE4, Integer CPYACT) From "5" Sql REQUEST As [YLNK]
#      #[M:YELA2]YCPY(nolign-1) = CPY
#      #[M:YELA2]YACM(nolign-1) = ACM
#      [M:YELA2]YCOAREC = COA
#      #[M:YELA2]YLED1(nolign-1) = LED
#      [M:YELA2]YRDIE0 = DIE0
#      [M:YELA2]YRDIE1 = DIE1
#      [M:YELA2]YRDIE2 = DIE2
#      [M:YELA2]YRDIE3 = DIE3
#      [M:YELA2]YRDIE4 = DIE4
#    Next
#
#  Endif
#
#  #Set Dimension fields for Provider GL account
#  Diszo [M:YELA1]YPCCE0,YPCCE1,YPCCE2,YPCCE3,YPCCE4
#
#  If [M:YELA1]YCPYPRO <> "" and [M:YELA1]YACCPRO <> ""
#
#    #Validate Account
#    Local Char REQUEST(255)(0..5)
#    REQUEST(0) =  "SELECT ACC.ACC_0, ACC.DES_0, ACC.COA_0, ACC.DESSHO_0, ACC.DIE_0, ACC.DIE_1, ACC.DIE_2, ACC.DIE_3, ACC.DIE_4"
#    REQUEST(1) -= "FROM COMPANY CPY"
#    REQUEST(2) -= "JOIN GACM ON CPY.ACM_0 = GACM.GCM_0"
#    REQUEST(3) -= "JOIN GLED ON GACM.LED_0 = GLED.LED_0"
#    REQUEST(4) -= "JOIN GACCOUNT ACC ON GLED.COA_0 = ACC.COA_0"
#    REQUEST(5) -= "WHERE CPY.CPY_0 = '" + [M:YELA1]YCPYPRO + "' AND ACC.SAC_0 = 1 AND ACC.ENAFLG_0 = 2 AND ACC.ACC_0 = '" + [M:YELA1]YACCPRO + "' AND ACC.FLGVAT_0 <> 3"
#
#    Local Char PDIM_LST(5)(0..4)
#
#    For (Char YACC(15), Char YDES(30), Char YCOA(3), Char YDESSHO(10), Char YDIE0(5), Char YDIE1(5), Char YDIE2(5), Char YDIE3(5), Char YDIE4(5)) From "5" Sql REQUEST As [YLNK]
#      PDIM_LST(0)=[YLNK]YDIE0
#      PDIM_LST(1)=[YLNK]YDIE1
#      PDIM_LST(2)=[YLNK]YDIE2
#      PDIM_LST(3)=[YLNK]YDIE3
#      PDIM_LST(4)=[YLNK]YDIE4
#      Break
#    Next
#
#    For X=0 To 4
#      If [M:YELA1]YPDIE0 = PDIM_LST(X)
#        Actzo [M:YELA1]YPCCE0
#      Endif
#      If [M:YELA1]YPDIE1 = PDIM_LST(X)
#        Actzo [M:YELA1]YPCCE1
#      Endif
#      If [M:YELA1]YPDIE2 = PDIM_LST(X)
#        Actzo [M:YELA1]YPCCE2
#      Endif
#      If [M:YELA1]YPDIE3 = PDIM_LST(X)
#        Actzo [M:YELA1]YPCCE3
#      Endif
#      If [M:YELA1]YPDIE4 = PDIM_LST(X)
#        Actzo [M:YELA1]YPCCE4
#      Endif
#    Next X
#
#  Endif
#
#  #Set Dimension fields for Recipient GL account
#  Diszo [M:YELA2]YRCCE0,YRCCE1,YRCCE2,YRCCE3,YRCCE4
#
#  If [M:YELA1]YCPYPRO <> "" and [M:YELA2]YACCREC <> ""
#
#    #Validate Account
#    Local Char REQUEST(255)(0..5)
#    REQUEST(0) =  "SELECT ACC.ACC_0, ACC.DES_0, ACC.COA_0, ACC.DESSHO_0, ACC.DIE_0, ACC.DIE_1, ACC.DIE_2, ACC.DIE_3, ACC.DIE_4"
#    REQUEST(1) -= "FROM COMPANY CPY"
#    REQUEST(2) -= "JOIN GACM ON CPY.ACM_0 = GACM.GCM_0"
#    REQUEST(3) -= "JOIN GLED ON GACM.LED_0 = GLED.LED_0"
#    REQUEST(4) -= "JOIN GACCOUNT ACC ON GLED.COA_0 = ACC.COA_0"
#    REQUEST(5) -= "WHERE CPY.CPY_0 = '" + [M:YELA1]YCPYPRO + "' AND ACC.SAC_0 = 1 AND ACC.ENAFLG_0 = 2 AND ACC.ACC_0 = '" + [M:YELA2]YACCREC + "' AND ACC.FLGVAT_0 <> 3"
#
#    Local Char RDIM_LST(5)(0..4)
#
#    For (Char YACC(15), Char YDES(30), Char YCOA(3), Char YDESSHO(10), Char YDIE0(5), Char YDIE1(5), Char YDIE2(5), Char YDIE3(5), Char YDIE4(5)) From "5" Sql REQUEST As [YLNK]
#      RDIM_LST(0)=[YLNK]YDIE0
#      RDIM_LST(1)=[YLNK]YDIE1
#      RDIM_LST(2)=[YLNK]YDIE2
#      RDIM_LST(3)=[YLNK]YDIE3
#      RDIM_LST(4)=[YLNK]YDIE4
#      Break
#    Next
#
#    For X=0 To 4
#      If [M:YELA2]YRDIE0 = RDIM_LST(X)
#        Actzo [M:YELA2]YRCCE0
#      Endif
#      If [M:YELA2]YRDIE1 = RDIM_LST(X)
#        Actzo [M:YELA2]YRCCE1
#      Endif
#      If [M:YELA2]YRDIE2 = RDIM_LST(X)
#        Actzo [M:YELA2]YRCCE2
#      Endif
#      If [M:YELA2]YRDIE3 = RDIM_LST(X)
#        Actzo [M:YELA2]YRCCE3
#      Endif
#      If [M:YELA2]YRDIE4 = RDIM_LST(X)
#        Actzo [M:YELA2]YRCCE4
#      Endif
#    Next X
#
#  Endif

Return
#------------------------------------------------------------------------------------#
#Set Buttons
#------------------------------------------------------------------------------------#
$SETBOUT

Return
#------------------------------------------------------------------------------------#
#Execute Buttons
#------------------------------------------------------------------------------------#
$EXEBOUT

Return
#------------------------------------------------------------------------------------#
#Style
#------------------------------------------------------------------------------------#
$STYLE
  Local Char ENT(20) : ENT = "LIENS"
  Call GET_DIM_P([M:YELA1]YACCPRO, ENT) From SPEYELA
  Call GET_DIM_R([M:YELA2]YACCREC, ENT) From SPEYELA
Return
#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(GZINSPJM)

  Variable Instance GZINSPJM Using C_YELA

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(GZINSPJM, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End


#------------------------------------------------------------------------------------#
#Validate Provider Dimensions
#------------------------------------------------------------------------------------#
$VAL_DIM_P

  #Validate Dimensions
  Local Integer I, DIENO, J

  Local Char DIE(10)(0..4)
  DIE(0) = [M:YELA1]YPDIE0
  DIE(1) = [M:YELA1]YPDIE1
  DIE(2) = [M:YELA1]YPDIE2
  DIE(3) = [M:YELA1]YPDIE3
  DIE(4) = [M:YELA1]YPDIE4

  Local Integer DIEACT(0..4)
  DIEACT(0)=1
  DIEACT(1)=1
  DIEACT(2)=1
  DIEACT(3)=1
  DIEACT(4)=1

  For DIENO = 0 To 4
    For J = 0 To 4
      Local Char REQUEST(255)(0..5)
      REQUEST(0) = "SELECT DIE_"+num$(DIENO)+" [DIE], "+num$(J)+" [NUM] From GACCOUNT Where COA_0 = '"+[M:YELA1]YCOAPRO+"' and ACC_0 = '"+[M:YELA1]YACCPRO+"'"
      REQUEST(1) = "and DIE_"+num$(DIENO)+" = '"+DIE(J)+"'"
      For (Char DIETYP, Integer NUM) From "5" Sql REQUEST As [YLNK]
        If NUM = 0
          DIEACT(0)=2
        Elsif NUM = 1
          DIEACT(1)=2
        Elsif NUM = 2
          DIEACT(2)=2
        Elsif NUM = 3
          DIEACT(3)=2
        Elsif NUM = 4
          DIEACT(4)=2
        Endif
      Next
    Next
  Next DIENO

  For I = 0 To 4

    Local Integer OBYDIE, REST
    Local Char DIE(5) : DIE = evalue("[M:YELA1]YPDIE"+num$(I))
    Local Char FLDVAL(15) : FLDVAL = evalue("[M:YELA1]YPCCE" + num$(I))
    Local Char DIEFLD(10) : DIEFLD = "DIE_" + num$(I)
    Local Char CCEFIELD(10) : CCEFIELD = "YPCCE" + num$(I)
    Local Char OBFLD(10)  : OBFLD = "OBYDIE_" + num$(I)
    Local Char CPY(5) : CPY = [M:YELA1]YCPYPRO
    Local Char FCY(5) : FCY = [M:YELA1]YFCYPRO
    Local Char SCREEN(50) : SCREEN = "[M:YELA1]"

    OBYDIE = func SPEYELA.MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)

    If OBYDIE = 2 and FLDVAL = "" and DIEACT(I)=2 Then
      GMESSAGE = mess(27,6254,1)
      GOK = 0
      GERR = 1
      zonsui = "[M:YELA1]YPCCE" + num$(I)
      Break
    Endif

    I+=1

  Next

Return


#------------------------------------------------------------------------------------#
#Validate Receiver Dimensions
#------------------------------------------------------------------------------------#
$VAL_DIM_R

  #Validate Dimensions
  Local Integer I, DIENO, J

  Local Char DIE(10)(0..4)
  DIE(0) = [M:YELA2]YRDIE0
  DIE(1) = [M:YELA2]YRDIE1
  DIE(2) = [M:YELA2]YRDIE2
  DIE(3) = [M:YELA2]YRDIE3
  DIE(4) = [M:YELA2]YRDIE4

  Local Integer DIEACT(0..4)
  DIEACT(0)=1
  DIEACT(1)=1
  DIEACT(2)=1
  DIEACT(3)=1
  DIEACT(4)=1

  For DIENO = 0 To 4
    For J = 0 To 4
      Local Char REQUEST(255)(0..5)
      REQUEST(0) = "SELECT DIE_"+num$(DIENO)+" [DIE], "+num$(J)+" [NUM] From GACCOUNT Where COA_0 = '"+[M:YELA2]YCOAREC+"' and ACC_0 = '"+[M:YELA2]YACCREC+"'"
      REQUEST(1) = "and DIE_"+num$(DIENO)+" = '"+DIE(J)+"'"
      For (Char DIETYP, Integer NUM) From "5" Sql REQUEST As [YLNK]
        If NUM = 0
          DIEACT(0)=2
        Elsif NUM = 1
          DIEACT(1)=2
        Elsif NUM = 2
          DIEACT(2)=2
        Elsif NUM = 3
          DIEACT(3)=2
        Elsif NUM = 4
          DIEACT(4)=2
        Endif
      Next
    Next
  Next DIENO

  For I = 0 To 4

    Local Integer OBYDIE, REST
    Local Char DIE(5) : DIE = evalue("[M:YELA2]YRDIE"+num$(I))
    Local Char FLDVAL(15) : FLDVAL = evalue("[M:YELA2]YRCCE" + num$(I))
    Local Char DIEFLD(10) : DIEFLD = "DIE_" + num$(I)
    Local Char CCEFIELD(10) : CCEFIELD = "YRCCE" + num$(I)
    Local Char OBFLD(10)  : OBFLD = "OBYDIE_" + num$(I)
    Local Char CPY(5) : CPY = [M:YELA2]YCPYREC
    Local Char FCY(5) : FCY = [M:YELA2]YFCYREC
    Local Char SCREEN(50) : SCREEN = "[M:YELA2]"

    OBYDIE = func SPEYELA.MANDATORY_DIE(DIE, DIEFLD, OBFLD, CPY)

    If OBYDIE = 2 and FLDVAL = "" and DIEACT(I)=2 Then
      GMESSAGE = mess(27,6254,1)
      GOK = 0
      GERR = 1
      zonsui = "[M:YELA2]YRCCE" + num$(I)
      Break
    Endif

    I+=1

  Next

Return

