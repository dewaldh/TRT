#<AdxTL>@(#)0.0.0.0 $Revision$Class Customers
# Sage X3 supervisor
## CRUD-CLASSE ## BPCUSTOMER
# 2018-06-20 06:37:06 778

Gosub TEST From WMCR_BPCUSTOMER : End

############################################################################################
## R : Subprog AREAD(INSTANCE,BPCNUM)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# BPCUSTOMER : BPCUSTOMER
# BPARTNER : BPCUSTOMER BPARTNER
# BPDLVCUST : BPCUSTOMER BPDLVCUST
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet BPCUSTOMER._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = BPCUSTOMER.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(BPCUSTOMER.ACTX.AFOLDER,nomap,"")>0
 Local File BPCUSTOMER [BPC]
 Local File BPARTNER [BPR]
 Local File BPDLVCUST [BPD]
 Local File ATEXTRA [AXX]
Else
 Local File =BPCUSTOMER.ACTX.AFOLDER+".BPCUSTOMER" [BPC]
 Local File =BPCUSTOMER.ACTX.AFOLDER+".BPARTNER" [BPR]
 Local File =BPCUSTOMER.ACTX.AFOLDER+".BPDLVCUST" [BPD]
 Local File =BPCUSTOMER.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTOMER.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [BPC] With
& [BPR]BPR0 ~= [F:BPC]BPCNUM,
& [BPD]BPD0 = [F:BPC]BPCNUM
& As [LNK_]
Return

############################################################################################
### BPCUSTOMER(WBPC)
############################################################################################
Funprog  _MAJSQL_BPCUSTOMER(WBPC)
Variable Instance WBPC Using C_BPCUSTOMER
Local Integer ASTATUS,A_I,A_J
Default File [F:BPC]
If WBPC.ASTALIN=[V]CST_ANEW
 Call INICRE(WBPC) From ASYRSUB
 SetInstance [F:BPC] With WBPC
 For [L]A_J=1 to 6
  For [L]A_I=1 To maxtab(WBPC.C_DAYMON)
   If WBPC.C_DAYMON([L]A_I)<>null & !find(WBPC.C_DAYMON([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_DAYMON([L]A_I).AORDER=[L]A_J
    [F:BPC]DAYMON([L]A_J-1) = WBPC.C_DAYMON([L]A_I).DAYMON
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WBPC.C_DIE)
   If WBPC.C_DIE([L]A_I)<>null & !find(WBPC.C_DIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_DIE([L]A_I).AORDER=[L]A_J
    [F:BPC]DIE([L]A_J-1) = WBPC.C_DIE([L]A_I).DIE
    [F:BPC]CCE([L]A_J-1) = WBPC.C_DIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 30
  For [L]A_I=1 To maxtab(WBPC.C_INVDTAAMT)
   If WBPC.C_INVDTAAMT([L]A_I)<>null & !find(WBPC.C_INVDTAAMT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_INVDTAAMT([L]A_I).AORDER=[L]A_J
    [F:BPC]INVDTA([L]A_J-1) = WBPC.C_INVDTAAMT([L]A_I).INVDTA
    [F:BPC]INVDTAAMT([L]A_J-1) = WBPC.C_INVDTAAMT([L]A_I).INVDTAAMT
    For J=1 To maxtab(WBPC.C_INVDTAAMT([L]A_I).AXX)
     If WBPC.C_INVDTAAMT([L]A_I).AXX(J)<>null & WBPC.C_INVDTAAMT([L]A_I).AXX(J).PRO= "INVDTADES" & WBPC.C_INVDTAAMT([L]A_I).AXX(J).FLG>0
      Call MAJTEXTRALAN(WBPC.C_INVDTAAMT([L]A_I),WBPC.C_INVDTAAMT([L]A_I).AXX(J).TEX,"SFOOTINV","SHOAXX",WBPC.C_INVDTAAMT([L]A_I).AXX(J).LAN,num$(WBPC.C_INVDTAAMT([L]A_I).INVDTA),"",[L]ASTATUS) From ASYRSUB
      If [L]ASTATUS>=[V]CST_AERROR : Break 3 : Endif
     Endif
    Next J
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPC.C_REP)
   If WBPC.C_REP([L]A_I)<>null & !find(WBPC.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_REP([L]A_I).AORDER=[L]A_J
    [F:BPC]REP([L]A_J-1) = WBPC.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WBPC.C_TSCCOD)
   If WBPC.C_TSCCOD([L]A_I)<>null & !find(WBPC.C_TSCCOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_TSCCOD([L]A_I).AORDER=[L]A_J
    [F:BPC]TSCCOD([L]A_J-1) = WBPC.C_TSCCOD([L]A_I).TSCCOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BPC]
 If fstat
  Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPC.updTick = [F:BPC]updTick
Elsif WBPC.ASTALIN=[V]CST_ALL or WBPC.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBPC) From ASYRSUB
 SetInstance [F:BPC] With WBPC
 For [L]A_J=1 to 6
  For [L]A_I=1 To maxtab(WBPC.C_DAYMON)
   If WBPC.C_DAYMON([L]A_I)<>null & !find(WBPC.C_DAYMON([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_DAYMON([L]A_I).AORDER=[L]A_J
    [F:BPC]DAYMON([L]A_J-1) = WBPC.C_DAYMON([L]A_I).DAYMON
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 20
  For [L]A_I=1 To maxtab(WBPC.C_DIE)
   If WBPC.C_DIE([L]A_I)<>null & !find(WBPC.C_DIE([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_DIE([L]A_I).AORDER=[L]A_J
    [F:BPC]DIE([L]A_J-1) = WBPC.C_DIE([L]A_I).DIE
    [F:BPC]CCE([L]A_J-1) = WBPC.C_DIE([L]A_I).CCE
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 30
  For [L]A_I=1 To maxtab(WBPC.C_INVDTAAMT)
   If WBPC.C_INVDTAAMT([L]A_I)<>null & !find(WBPC.C_INVDTAAMT([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_INVDTAAMT([L]A_I).AORDER=[L]A_J
    [F:BPC]INVDTA([L]A_J-1) = WBPC.C_INVDTAAMT([L]A_I).INVDTA
    [F:BPC]INVDTAAMT([L]A_J-1) = WBPC.C_INVDTAAMT([L]A_I).INVDTAAMT
    For J=1 To maxtab(WBPC.C_INVDTAAMT([L]A_I).AXX)
     If WBPC.C_INVDTAAMT([L]A_I).AXX(J)<>null & WBPC.C_INVDTAAMT([L]A_I).AXX(J).PRO= "INVDTADES" & WBPC.C_INVDTAAMT([L]A_I).AXX(J).FLG>0
      Call MAJTEXTRALAN(WBPC.C_INVDTAAMT([L]A_I),WBPC.C_INVDTAAMT([L]A_I).AXX(J).TEX,"SFOOTINV","SHOAXX",WBPC.C_INVDTAAMT([L]A_I).AXX(J).LAN,num$(WBPC.C_INVDTAAMT([L]A_I).INVDTA),"",[L]ASTATUS) From ASYRSUB
      If [L]ASTATUS>=[V]CST_AERROR : Break 3 : Endif
     Endif
    Next J
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPC.C_REP)
   If WBPC.C_REP([L]A_I)<>null & !find(WBPC.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_REP([L]A_I).AORDER=[L]A_J
    [F:BPC]REP([L]A_J-1) = WBPC.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 5
  For [L]A_I=1 To maxtab(WBPC.C_TSCCOD)
   If WBPC.C_TSCCOD([L]A_I)<>null & !find(WBPC.C_TSCCOD([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPC.C_TSCCOD([L]A_I).AORDER=[L]A_J
    [F:BPC]TSCCOD([L]A_J-1) = WBPC.C_TSCCOD([L]A_I).TSCCOD
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPC,"BPCUSTOMER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BPC]BPC0 = [F:BPC]BPCNUM
 If fstat
  Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPC.updTick = [F:BPC]updTick
Elsif WBPC.ASTALIN=[V]CST_ADEL
 SetInstance [F:BPC] With WBPC
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPC,"BPCUSTOMER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BPC]BPC0 = [F:BPC]BPCNUM
 If fstat
  Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BPARTNER(WBPR)
############################################################################################
Funprog  _MAJSQL_BPARTNER(WBPR)
Variable Instance WBPR Using C_BPARTNER
Local Integer ASTATUS,A_I,A_J
Default File [F:BPR]
If WBPR.ASTALIN=[V]CST_ANEW
 Call INICRE(WBPR) From ASYRSUB
 SetInstance [F:BPR] With WBPR
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPR.C_BPRNAM)
   If WBPR.C_BPRNAM([L]A_I)<>null & !find(WBPR.C_BPRNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPR.C_BPRNAM([L]A_I).AORDER=[L]A_J
    [F:BPR]BPRNAM([L]A_J-1) = WBPR.C_BPRNAM([L]A_I).BPRNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BPR]
 If fstat
  Call FSTA("BPR",WBPR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPR.updTick = [F:BPR]updTick
Elsif WBPR.ASTALIN=[V]CST_ALL or WBPR.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBPR) From ASYRSUB
 SetInstance [F:BPR] With WBPR
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPR.C_BPRNAM)
   If WBPR.C_BPRNAM([L]A_I)<>null & !find(WBPR.C_BPRNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPR.C_BPRNAM([L]A_I).AORDER=[L]A_J
    [F:BPR]BPRNAM([L]A_J-1) = WBPR.C_BPRNAM([L]A_I).BPRNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPR,"BPARTNER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BPR]BPR0 = [F:BPR]BPRNUM
 If fstat
  Call FSTA("BPR",WBPR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPR.updTick = [F:BPR]updTick
Elsif WBPR.ASTALIN=[V]CST_ADEL
 SetInstance [F:BPR] With WBPR
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPR,"BPARTNER")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BPR]BPR0 = [F:BPR]BPRNUM
 If fstat
  Call FSTA("BPR",WBPR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### BPDLVCUST(WBPD)
############################################################################################
Funprog  _MAJSQL_BPDLVCUST(WBPD)
Variable Instance WBPD Using C_BPDLVCUST
Local Integer ASTATUS,A_I,A_J
Default File [F:BPD]
If WBPD.ASTALIN=[V]CST_ANEW
 Call INICRE(WBPD) From ASYRSUB
 SetInstance [F:BPD] With WBPD
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPD.C_BPDNAM)
   If WBPD.C_BPDNAM([L]A_I)<>null & !find(WBPD.C_BPDNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPD.C_BPDNAM([L]A_I).AORDER=[L]A_J
    [F:BPD]BPDNAM([L]A_J-1) = WBPD.C_BPDNAM([L]A_I).BPDNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPD.C_REP)
   If WBPD.C_REP([L]A_I)<>null & !find(WBPD.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPD.C_REP([L]A_I).AORDER=[L]A_J
    [F:BPD]REP([L]A_J-1) = WBPD.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:BPD]
 If fstat
  Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPD.updTick = [F:BPD]updTick
Elsif WBPD.ASTALIN=[V]CST_ALL or WBPD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WBPD) From ASYRSUB
 SetInstance [F:BPD] With WBPD
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPD.C_BPDNAM)
   If WBPD.C_BPDNAM([L]A_I)<>null & !find(WBPD.C_BPDNAM([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPD.C_BPDNAM([L]A_I).AORDER=[L]A_J
    [F:BPD]BPDNAM([L]A_J-1) = WBPD.C_BPDNAM([L]A_I).BPDNAM
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For [L]A_J=1 to 2
  For [L]A_I=1 To maxtab(WBPD.C_REP)
   If WBPD.C_REP([L]A_I)<>null & !find(WBPD.C_REP([L]A_I).ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL) & WBPD.C_REP([L]A_I).AORDER=[L]A_J
    [F:BPD]REP([L]A_J-1) = WBPD.C_REP([L]A_I).REP
    Break
   Endif
  Next
 Next
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPD,"BPDLVCUST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:BPD]BPD0 = [F:BPD]BPCNUM;[F:BPD]BPAADD
 If fstat
  Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WBPD.updTick = [F:BPD]updTick
Elsif WBPD.ASTALIN=[V]CST_ADEL
 SetInstance [F:BPD] With WBPD
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WBPD,"BPDLVCUST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:BPD]BPD0 = [F:BPD]BPCNUM;[F:BPD]BPAADD
 If fstat
  Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

Funprog  _MAJSQL_BPCUSTOMER_CLAORDTEX1(WBPC,CLAORDTEX1)
Variable Instance WBPC Using C_BPCUSTOMER
Value Clbfile CLAORDTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WBPC.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAORDTEX1
 Raz [TXC]
 Call INICRE(WBPC) From ASYRSUB
 [F:TXC]CODE = WBPC.ORDTEX
 [F:TXC]TEXTE = [L]CLAORDTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WBPC.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WBPC.ORDTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WBPC.ASTALIN=[V]CST_ALL or WBPC.ASTALIN=[V]CST_AUPD
 If fmet WBPC.AGETATTRIBUTE("CLAORDTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WBPC.ORDTEX
  If !fstat & [L]WEMPTY<>[L]CLAORDTEX1
   Call INIUPD(WBPC) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAORDTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAORDTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAORDTEX1
   Raz [TXC]
   Call INICRE(WBPC) From ASYRSUB
   [TXC]CODE = WBPC.ORDTEX
   [F:TXC]TEXTE = [L]CLAORDTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_BPCUSTOMER_CLAINVTEX1(WBPC,CLAINVTEX1)
Variable Instance WBPC Using C_BPCUSTOMER
Value Clbfile CLAINVTEX1
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WBPC.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAINVTEX1
 Raz [TXC]
 Call INICRE(WBPC) From ASYRSUB
 [F:TXC]CODE = WBPC.INVTEX
 [F:TXC]TEXTE = [L]CLAINVTEX1
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WBPC.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WBPC.INVTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WBPC.ASTALIN=[V]CST_ALL or WBPC.ASTALIN=[V]CST_AUPD
 If fmet WBPC.AGETATTRIBUTE("CLAINVTEX1","$isLoaded")="true"
  Read [F:TXC]TXC0 =WBPC.INVTEX
  If !fstat & [L]WEMPTY<>[L]CLAINVTEX1
   Call INIUPD(WBPC) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAINVTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAINVTEX1
   Delete [F:TXC]
   If fstat
    Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAINVTEX1
   Raz [TXC]
   Call INICRE(WBPC) From ASYRSUB
   [TXC]CODE = WBPC.INVTEX
   [F:TXC]TEXTE = [L]CLAINVTEX1
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("BPC",WBPC,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_BPDLVCUST_CLAPRPTEX(WBPD,CLAPRPTEX)
Variable Instance WBPD Using C_BPDLVCUST
Value Clbfile CLAPRPTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WBPD.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLAPRPTEX
 Raz [TXC]
 Call INICRE(WBPD) From ASYRSUB
 [F:TXC]CODE = WBPD.APARENT.PRPTEX
 [F:TXC]TEXTE = [L]CLAPRPTEX
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WBPD.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WBPD.APARENT.PRPTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WBPD.ASTALIN=[V]CST_ALL or WBPD.ASTALIN=[V]CST_AUPD
 If fmet WBPD.AGETATTRIBUTE("CLAPRPTEX","$isLoaded")="true"
  Read [F:TXC]TXC0 =WBPD.APARENT.PRPTEX
  If !fstat & [L]WEMPTY<>[L]CLAPRPTEX
   Call INIUPD(WBPD) From ASYRSUB
   [F:TXC]TEXTE = [L]CLAPRPTEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLAPRPTEX
   Delete [F:TXC]
   If fstat
    Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLAPRPTEX
   Raz [TXC]
   Call INICRE(WBPD) From ASYRSUB
   [TXC]CODE = WBPD.APARENT.PRPTEX
   [F:TXC]TEXTE = [L]CLAPRPTEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0

Funprog  _MAJSQL_BPDLVCUST_CLADLVTEX(WBPD,CLADLVTEX)
Variable Instance WBPD Using C_BPDLVCUST
Value Clbfile CLADLVTEX
Local Clbfile WEMPTY
Local Char WCNT(100),WATYP(GLONATYP)
Local Integer ASTATUS
Local File TEXCLOB [F:TXC]
If WBPD.ASTALIN=[V]CST_ANEW & [L]WEMPTY<>[L]CLADLVTEX
 Raz [TXC]
 Call INICRE(WBPD) From ASYRSUB
 [F:TXC]CODE = WBPD.APARENT.DLVTEX
 [F:TXC]TEXTE = [L]CLADLVTEX
 [L]WATYP = 'ATYPE10-3'
 [L]WCNT = 'text/rtf'
 Write [F:TXC]
 If fstat
  Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Elsif WBPD.ASTALIN=[V]CST_ADEL
 Read [F:TXC]TXC0 =WBPD.APARENT.DLVTEX
 If !fstat
  Delete [F:TXC]
  If fstat
   Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
   End [L]ASTATUS
  Endif
 Endif
Elsif WBPD.ASTALIN=[V]CST_ALL or WBPD.ASTALIN=[V]CST_AUPD
 If fmet WBPD.AGETATTRIBUTE("CLADLVTEX","$isLoaded")="true"
  Read [F:TXC]TXC0 =WBPD.APARENT.DLVTEX
  If !fstat & [L]WEMPTY<>[L]CLADLVTEX
   Call INIUPD(WBPD) From ASYRSUB
   [F:TXC]TEXTE = [L]CLADLVTEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Rewrite [F:TXC]
   If fstat
    Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif !fstat & [L]WEMPTY=[L]CLADLVTEX
   Delete [F:TXC]
   If fstat
    Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Elsif fstat & [L]WEMPTY<>[L]CLADLVTEX
   Raz [TXC]
   Call INICRE(WBPD) From ASYRSUB
   [TXC]CODE = WBPD.APARENT.DLVTEX
   [F:TXC]TEXTE = [L]CLADLVTEX
   [L]WATYP = 'ATYPE10-3'
   [L]WCNT = 'text/rtf'
   Write [F:TXC]
   If fstat
    Call FSTA("BPD",WBPD,[L]ASTATUS) From ASYRSUB
    End [L]ASTATUS
   Endif
  Endif
 Endif : #isLoaded
Endif : #[V]CST_AUPD 
Close Local File [F:TXC]
End 0



