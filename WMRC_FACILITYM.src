#<AdxTL>@(#)0.0.0.0 $Revision$Class Sites
# Supervisor
## CRUD-CLASSE ## FACILITYM
# 2018-08-27 13:14:56 105


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(FACILITYM,ASTATUS)
Variable Instance FACILITYM Using R_FACILITYM
Variable Integer ASTATUS

If FACILITYM = null : End : Endif

Gosub AVARIABLES From WMR00FACILITYM
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet FACILITYM.ACTX.AGETAFCRIGHT(FACILITYM,"GESFCY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet FACILITYM.ACTX.AGETAFCRIGHTC(FACILITYM,"GESFCY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_FACILITYM
Else
 Gosub AINSERT_FACILITYM
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = FACILITYM.freeSnapshot
FACILITYM.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
FACILITYM.ASTALIN = [V]CST_ANEW
FACILITYM.FCY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet FACILITYM._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet FACILITYM._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet FACILITYM._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If FACILITYM.FCY.ASTALIN = [V]CST_ANEWDEL : Return : Endif
FACILITYM.FCY.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITYM.FCY.BPA) : # BPADDRESS -- 2
 If FACILITYM.FCY.BPA(A_N2) <> null
& and !find(FACILITYM.FCY.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLTEL)
   If FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLWEB)
   If FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITYM.FCY.BID) : # BID -- 3
 If FACILITYM.FCY.BID(A_N2) <> null
& and !find(FACILITYM.FCY.BID(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BID(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(FACILITYM.FCY.BPA) : # BPADDRESS -- 2
 If FACILITYM.FCY.BPA(A_N2) <> null
& and !find(FACILITYM.FCY.BPA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLTEL)
   If FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
  For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLWEB)
   If FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
    [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
    If [L]ASTATUS>=[V]CST_AERROR : Break 2 : Endif
   Endif
  Next
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(FACILITYM.FCY.BID) : # BID -- 3
 If FACILITYM.FCY.BID(A_N2) <> null
& and !find(FACILITYM.FCY.BID(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.BID(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_FACILITYM
Trbegin [F:FCY]
 Gosub AINSERT_FACILITYM
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(FACILITYM.FCY.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 FACILITYM.FCY.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(FACILITYM.FCY.BPA)
 If FACILITYM.FCY.BPA(A_N2) <> null
  If FACILITYM.FCY.BPA(A_N2).ASTALIN=[V]CST_ADEL or FACILITYM.FCY.BPA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance FACILITYM.FCY.BPA(A_N2)
   FACILITYM.FCY.BPA(A_N2) = null
  Elsif FACILITYM.FCY.BPA(A_N2).ASTALIN <> [V]CST_ALL
   FACILITYM.FCY.BPA(A_N2).ASTALIN = [V]CST_ALL
   For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLTEL)
    If FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I)<>null
     If FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ADEL or FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN=[V]CST_ANEWDEL
      FreeInstance FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I)
      FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I) = null
     Elsif FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN <> [V]CST_ALL
      FACILITYM.FCY.BPA(A_N2).COLTEL([L]A_I).ASTALIN = [V]CST_ALL
     Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
   For [L]A_I=1 To maxtab(FACILITYM.FCY.BPA(A_N2).COLWEB)
    If FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I)<>null
     If FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ADEL or FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN=[V]CST_ANEWDEL
      FreeInstance FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I)
      FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I) = null
     Elsif FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN <> [V]CST_ALL
      FACILITYM.FCY.BPA(A_N2).COLWEB([L]A_I).ASTALIN = [V]CST_ALL
     Endif
    Endif
   Next
   If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(FACILITYM.FCY.BID)
 If FACILITYM.FCY.BID(A_N2) <> null
  [L]ASTATUS2 = fmet FACILITYM.FCY.BID(A_N2)._AINSERT_AFTER
  If FACILITYM.FCY.BID(A_N2).ASTALIN=[V]CST_ADEL or FACILITYM.FCY.BID(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance FACILITYM.FCY.BID(A_N2)
   FACILITYM.FCY.BID(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_FACILITYM
[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.FCY._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet FACILITYM.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If FACILITYM.snapshotEnabled=1
 [L]A_RETIK = FACILITYM.revertUpdTick
Endif
[L]ASTATUS = max(fmet FACILITYM.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



