#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## CRUD-CLASSE ## SVCRINVCND
# 2018-08-27 13:36:15 455


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SVCRINVCND [SVIC_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SVCRINVCND") From ASYRCOM : Endif
Local Instance SVCRINVCND Using R_SVCRINVCND

If !SILENCE : Call TRACE("3 --> New Instance R_SVCRINVCND") From ASYRCOM : Endif
SVCRINVCND = NewInstance R_SVCRINVCND AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SVIC_]SVIC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SVCRINVCND") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.AREAD([SVIC_]VCRTYP,[SVIC_]VCRNUMORI,[SVIC_]VCRLINORI,[SVIC_]VCRSEQORI))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SVCRINVCND.SVIC.VCRTYP ="-num$(SVCRINVCND.SVIC.VCRTYP)) From ASYRCOM
 Call TRACE("SVCRINVCND.SVIC.VCRNUMORI ="-num$(SVCRINVCND.SVIC.VCRNUMORI)) From ASYRCOM
 Call TRACE("SVCRINVCND.SVIC.VCRLINORI ="-num$(SVCRINVCND.SVIC.VCRLINORI)) From ASYRCOM
 Call TRACE("SVCRINVCND.SVIC.VCRSEQORI ="-num$(SVCRINVCND.SVIC.VCRSEQORI)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SVCRINVCND.SVIC.AKEYS)
  Call TRACE("-"-num$(I)-":"-SVCRINVCND.SVIC.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SVIC_]
FreeGroup SVCRINVCND
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SVCRINVCND,ACLE,ASTATUS,_ETAG)
Variable Instance SVCRINVCND Using R_SVCRINVCND
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Tinyint _VCRTYP
Local Char _VCRNUMORI(20)
Local Integer _VCRLINORI
Local Integer _VCRSEQORI
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRNUMORI = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_VCRLINORI = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_VCRSEQORI = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File SVCRINVCND [SVIC]
Default File [F:SVIC]
Read [F:SVIC]SVIC0 = [L]_VCRTYP;[L]_VCRNUMORI;[L]_VCRLINORI;[L]_VCRSEQORI
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SVIC]UPDTICK)>0
 [L]_ETAG = num$([F:SVIC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SVCRINVCND,ACLE,ASTATUS)
Variable Instance SVCRINVCND Using R_SVCRINVCND
Value Char ACLE
Variable Integer ASTATUS
Local Tinyint _VCRTYP
Local Char _VCRNUMORI(20)
Local Integer _VCRLINORI
Local Integer _VCRSEQORI
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VCRTYP = val([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_VCRNUMORI = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_VCRLINORI = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_VCRSEQORI = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.AREAD([L]_VCRTYP,[L]_VCRNUMORI,[L]_VCRLINORI,[L]_VCRSEQORI))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SVCRINVCND,_VCRTYP,_VCRNUMORI,_VCRLINORI,_VCRSEQORI,ASTATUS)
Variable Instance SVCRINVCND Using R_SVCRINVCND
Value Tinyint _VCRTYP
Value Char _VCRNUMORI
Value Integer _VCRLINORI
Value Integer _VCRSEQORI
Variable Integer ASTATUS

If SVCRINVCND = null : End : Endif

Gosub AVARIABLES From WMR00SVCRINVCND
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SVCRINVCND.APARENT=null
 [L]A_I = SVCRINVCND.freeSnapshot
 SVCRINVCND.snapshotEnabled = 0
 SVCRINVCND.setAccessorEnabled = 0
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SVCRINVCND.SVIC.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.SVIC.AREAD([L]_VCRTYP,[L]_VCRNUMORI,[L]_VCRLINORI,[L]_VCRSEQORI))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SVCRINVCND.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SVCRINVCND.APARENT=null
 SVCRINVCND.snapshotEnabled = 1
 SVCRINVCND.setAccessorEnabled = 1
Endif
LogicClose File [SVIC] ,[SVICD]
End



