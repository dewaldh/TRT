#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Sales quotes
# Supervisor
## CRUD-CLASSE ## CCMIMPSQH
# 2018-08-27 12:29:38 820


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CCMIMPSQH [CCMISQH_]

If !SILENCE : Call TRACE("2 --> Local Instance C_CCMIMPSQH") From ASYRCOM : Endif
Local Instance CCMIMPSQH Using C_CCMIMPSQH

If !SILENCE : Call TRACE("3 --> New Instance C_CCMIMPSQH") From ASYRCOM : Endif
CCMIMPSQH = NewInstance C_CCMIMPSQH AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [CCMISQH_]CCMSQH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of CCMIMPSQH") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.AREAD([CCMISQH_]CRID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("CCMIMPSQH.CRID ="-num$(CCMIMPSQH.CRID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(CCMIMPSQH.AKEYS)
  Call TRACE("-"-num$(I)-":"-CCMIMPSQH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [CCMISQH_]
FreeGroup CCMIMPSQH
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(CCMIMPSQH,ACLE,ASTATUS,_ETAG)
Variable Instance CCMIMPSQH Using C_CCMIMPSQH
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File CCMIMPSQH [CCMISQH]
Default File [F:CCMISQH]
Read [F:CCMISQH]CCMSQH0 = [L]_CRID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:CCMISQH]UPDTICK)>0
 [L]_ETAG = num$([F:CCMISQH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(CCMIMPSQH,ACLE,ASTATUS)
Variable Instance CCMIMPSQH Using C_CCMIMPSQH
Value Char ACLE
Variable Integer ASTATUS
Local Char _CRID(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CRID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.AREAD([L]_CRID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(CCMIMPSQH,_CRID,ASTATUS)
Variable Instance CCMIMPSQH Using C_CCMIMPSQH
Value Char _CRID
Variable Integer ASTATUS

If CCMIMPSQH = null : End : Endif

Gosub AVARIABLES From WMC00CCMIMPSQH
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If CCMIMPSQH.APARENT=null
 [L]A_I = CCMIMPSQH.freeSnapshot
 CCMIMPSQH.snapshotEnabled = 0
 CCMIMPSQH.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & CCMIMPSQH.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If CCMIMPSQH.APARENT=null
 CCMIMPSQH.snapshotEnabled = 1
 CCMIMPSQH.setAccessorEnabled = 1
Endif
LogicClose File [CCMISQH]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH._ACTION_PARAM("AREAD_BEFORE",[L]_CRID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:CCMISQH]
Read [F:CCMISQH]CCMSQH0 = [L]_CRID
If fstat
[L]A_ERROR = [L]_CRID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(CCMIMPSQH,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:CCMISQH]AUUID)>0 & [F:CCMISQH]AUUID=NullUuid
 [F:CCMISQH]AUUID = getUuid
Endif
SetInstance CCMIMPSQH With [F:CCMISQH]
CCMIMPSQH.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



