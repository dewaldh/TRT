#<AdxTL>@(#)0.0.0.0 $Revision$Class Saleable product list
# Supervisor
## CRUD-CLASSE ## PJMSALITMD
# 2018-08-27 12:40:14 558


############################################################################################
### Subprog _AUPDATE
############################################################################################
Subprog _AUPDATE(PJMSALITMD,ASTATUS)
Variable Instance PJMSALITMD Using C_PJMSALITMD
Variable Integer ASTATUS

If PJMSALITMD = null : End : Endif

Gosub _AVARIABLES From WMC00PJMSALITMD

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AUPDATE_PJMSALITMD

End

#-----------------------------------------------------#

############################################################################################
### Subprog AUPDATE
############################################################################################
Subprog AUPDATE(PJMSALITMD,ASTATUS)
Variable Instance PJMSALITMD Using C_PJMSALITMD
Variable Integer ASTATUS

If PJMSALITMD = null : End : Endif

Gosub AVARIABLES From WMC00PJMSALITMD
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
PJMSALITMD.ASTALIN = [V]CST_AUPD
Gosub AUPDATE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

If !adxlog
 Gosub AUPDATE_TR_PJMSALITMD
Else
 Gosub AUPDATE_PJMSALITMD
Endif
If [L]ASTATUS>=[V]CST_AERROR : Goto AUPDATE_END : Endif

Gosub _AUPDATE_AFTER
[L]A_I = PJMSALITMD.freeSnapshot
PJMSALITMD.snapshotEnabled = 1
$AUPDATE_END
End


$AUPDATE_CONTROL
Gosub _AUPDATE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet PJMSALITMD._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet PJMSALITMD._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet PJMSALITMD._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AUPDATE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_BEFORE
If PJMSALITMD.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMSALITMD.ASTALIN = [V]CST_AUPD
If [V]CST_ASTALIN(PJMSALITMD.ASTALIN)<>""
 [L]A_ASTALIN = PJMSALITMD.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_BEFORE"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif

Return

#-----------------------------------------------------#
$_AUPDATE_CONTROL_AFTER

If [V]CST_ASTALIN(PJMSALITMD.ASTALIN)<>""
 [L]A_ASTALIN = PJMSALITMD.ASTALIN
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_CONTROL_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
Return

#-----------------------------------------------------#
$AUPDATE_TR_PJMSALITMD
Trbegin [F:PSPLD]
 Gosub AUPDATE_PJMSALITMD
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AUPDATE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AUPDATE_PJMSALITMD
[L]A_ASTALIN = PJMSALITMD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00PJMSALITMD._MAJSQL_PJMSALITMD(PJMSALITMD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


[L]A_ASTALIN = PJMSALITMD.ASTALIN
[L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.ACTION([V]CST_ASTALIN([L]A_ASTALIN)+"_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AUPDATE_ABORT
Rollback
$_AUPDATE_ABORT
If PJMSALITMD.snapshotEnabled=1
 [L]A_RETIK = PJMSALITMD.revertUpdTick
Endif

[L]ASTATUS = max(fmet PJMSALITMD.ACTION("AUPDATE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AUPDATE_AFTER
If find(PJMSALITMD.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 PJMSALITMD.ASTALIN = [V]CST_ALL
Endif
Return



