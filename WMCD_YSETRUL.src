#<AdxTL>@(#)0.0.0.0 $Revision$Class Settlement Rule
# Supervisor
## CRUD-CLASSE ## YSETRUL
# 2019-03-29 00:41:15 313


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(YSETRUL,ASTATUS)
Variable Instance YSETRUL Using C_YSETRUL
Variable Integer ASTATUS

If YSETRUL = null : End : Endif

Gosub _AVARIABLES From WMC00YSETRUL

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_YSETRUL

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(YSETRUL,ASTATUS)
Variable Instance YSETRUL Using C_YSETRUL
Variable Integer ASTATUS

If YSETRUL = null : End : Endif

Gosub AVARIABLES From WMC00YSETRUL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_YSETRUL
Else
 Gosub ADELETE_YSETRUL
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(YSETRUL,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If YSETRUL.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YSETRUL.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null
& and YSETRUL.YSETRULTYP(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null
& and YSETRUL.YSETRULTYP(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_YSETRUL
Trbegin [F:YSTR]
 Gosub ADELETE_YSETRUL
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_YSETRUL
[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
A_N2=1
If YSETRUL.YSETRULTYP(A_N2) <> null
Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(YSETRUL,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00YSETRUL._MAJSQL_YSETRUL(YSETRUL))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSETRUL.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If YSETRUL.snapshotEnabled=1
 [L]A_RETIK = YSETRUL.revertUpdTick
Endif
[L]ASTATUS = max(fmet YSETRUL.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



