#<AdxTL>@(#)0.0.0.0 $Revision$Class Work order - materials
# Sage X3 supervisor
## ACLA-CLASSE ## MFGMAT
# 2018-03-26 00:33:01 304

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : ALLQTY Allocated quantity ( Field QTY 0)
####################################################################

$SET_ALLQTY
If [L]_AOLDVAL<>this.ALLQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLQTY
 Gosub PROPAGATE_ALLQTY
Endif
Return

$INIT_ALLQTY
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ALLQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ALLQTY
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ALLQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLQTY
[L]CURPRO = "ALLQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLQTY
[L]CURPRO = "ALLQTY"
Return

$_AOTHERS_ALLQTY
[L]CURPRO = "ALLQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLQTY
[L]CURPRO = "ALLQTY"
Return

$PROPAGATE_ALLQTY
this.isReadonly = 0
[L]CURPRO = "ALLQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLQTY
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ALLQTY"
$_LNKPRO_ALLQTY
Return


####################################################################
# 32 : SHTQTY Shortage ( Field QTY 0)
####################################################################

$SET_SHTQTY
If [L]_AOLDVAL<>this.SHTQTY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHTQTY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHTQTY
 Gosub PROPAGATE_SHTQTY
Endif
Return

$INIT_SHTQTY
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "SHTQTY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHTQTY
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "SHTQTY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHTQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHTQTY                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHTQTY
[L]CURPRO = "SHTQTY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SHTQTY=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHTQTY
[L]CURPRO = "SHTQTY"
Return

$_AOTHERS_SHTQTY
[L]CURPRO = "SHTQTY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHTQTY
[L]CURPRO = "SHTQTY"
Return

$PROPAGATE_SHTQTY
this.isReadonly = 0
[L]CURPRO = "SHTQTY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHTQTY
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "SHTQTY"
$_LNKPRO_SHTQTY
Return


####################################################################
# 33 : STOMGTCOD Stock management ( Field Local menu number 215)
####################################################################

$SET_STOMGTCOD
If [L]_AOLDVAL<>this.STOMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STOMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STOMGTCOD
 Gosub PROPAGATE_STOMGTCOD
Endif
Return

$INIT_STOMGTCOD
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "STOMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.STOMGTCOD=0 and fmet this.AGETATTRIBUTE("STOMGTCOD","$isMandatory")="true"
 this.STOMGTCOD = 1
Endif
Return
 
$CONTROL_STOMGTCOD
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "STOMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STOMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STOMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.STOMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
If this.STOMGTCOD<0 or this.STOMGTCOD>len(mess(0,215,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"215 ->"-num$(this.STOMGTCOD)-mess(99,123,1)):  Return : # Local menu "215 -> Invalid option
Endif
Return

$_AOTHERS_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STOMGTCOD
[L]CURPRO = "STOMGTCOD"
Return

$PROPAGATE_STOMGTCOD
this.isReadonly = 0
[L]CURPRO = "STOMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STOMGTCOD
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "STOMGTCOD"
$_LNKPRO_STOMGTCOD
Return


####################################################################
# 34 : DEFPOT Default potency % ( Field DCB 5)
####################################################################

$SET_DEFPOT
If [L]_AOLDVAL<>this.DEFPOT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEFPOT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEFPOT
 Gosub PROPAGATE_DEFPOT
Endif
Return

$INIT_DEFPOT
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "DEFPOT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEFPOT
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "DEFPOT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEFPOT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEFPOT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEFPOT
[L]CURPRO = "DEFPOT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DEFPOT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEFPOT
[L]CURPRO = "DEFPOT"
Return

$_AOTHERS_DEFPOT
[L]CURPRO = "DEFPOT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEFPOT
[L]CURPRO = "DEFPOT"
Return

$PROPAGATE_DEFPOT
this.isReadonly = 0
[L]CURPRO = "DEFPOT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEFPOT
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "DEFPOT"
$_LNKPRO_DEFPOT
Return


####################################################################
# 35 : ISSMGTCOD Stock issuing method ( Field Local menu number 724)
####################################################################

$SET_ISSMGTCOD
If [L]_AOLDVAL<>this.ISSMGTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ISSMGTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ISSMGTCOD
 Gosub PROPAGATE_ISSMGTCOD
Endif
Return

$INIT_ISSMGTCOD
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ISSMGTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ISSMGTCOD=0 and fmet this.AGETATTRIBUTE("ISSMGTCOD","$isMandatory")="true"
 this.ISSMGTCOD = 1
Endif
Return
 
$CONTROL_ISSMGTCOD
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ISSMGTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ISSMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ISSMGTCOD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ISSMGTCOD
[L]CURPRO = "ISSMGTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ISSMGTCOD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ISSMGTCOD
[L]CURPRO = "ISSMGTCOD"
If this.ISSMGTCOD<0 or this.ISSMGTCOD>len(mess(0,724,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"724 ->"-num$(this.ISSMGTCOD)-mess(99,123,1)):  Return : # Local menu "724 -> Invalid option
Endif
Return

$_AOTHERS_ISSMGTCOD
[L]CURPRO = "ISSMGTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ISSMGTCOD
[L]CURPRO = "ISSMGTCOD"
Return

$PROPAGATE_ISSMGTCOD
this.isReadonly = 0
[L]CURPRO = "ISSMGTCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ISSMGTCOD
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ISSMGTCOD"
$_LNKPRO_ISSMGTCOD
Return


####################################################################
# 36 : LOT Preferred lot ( Field LOT 15)
####################################################################

$SET_LOT
If [L]_AOLDVAL<>this.LOT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOT
 Gosub PROPAGATE_LOT
Endif
Return

$INIT_LOT
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "LOT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LOT
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "LOT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOT
[L]CURPRO = "LOT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LOT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOT
[L]CURPRO = "LOT"
If vireblc(this.LOT,2)<>vireblc(format$("K:15c",this.LOT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LOT
[L]CURPRO = "LOT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOT
[L]CURPRO = "LOT"
Return

$PROPAGATE_LOT
this.isReadonly = 0
[L]CURPRO = "LOT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOT
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "LOT"
$_LNKPRO_LOT
Return


####################################################################
# 37 : STA Preferential status ( Field A 12)
####################################################################

$SET_STA
If [L]_AOLDVAL<>this.STA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_STA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.STA
 Gosub PROPAGATE_STA
Endif
Return

$INIT_STA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "STA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_STA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "STA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_STA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_STA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_STA
[L]CURPRO = "STA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.STA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_STA
[L]CURPRO = "STA"
Return

$_AOTHERS_STA
[L]CURPRO = "STA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_STA
[L]CURPRO = "STA"
Return

$PROPAGATE_STA
this.isReadonly = 0
[L]CURPRO = "STA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_STA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "STA"
$_LNKPRO_STA
Return


####################################################################
# 38 : LOC Location ( Field LOC 10)
####################################################################

$SET_LOC
If [L]_AOLDVAL<>this.LOC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOC
 Gosub PROPAGATE_LOC
Endif
Return

$INIT_LOC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "LOC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LOC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "LOC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOC
[L]CURPRO = "LOC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LOC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOC
[L]CURPRO = "LOC"
If vireblc(this.LOC,2)<>vireblc(format$("K:10c",this.LOC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LOC
[L]CURPRO = "LOC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOC
[L]CURPRO = "LOC"
If vireblc(this.LOC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPLOC.ACTRLREF(this,"LOC",this.LOC,this.MFGFCY,this.LOC,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.LOC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_LOC
this.isReadonly = 0
[L]CURPRO = "LOC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "LOC"
$_LNKPRO_LOC
Return


####################################################################
# 39 : ALLSTA Allocation status ( Field Local menu number 340)
####################################################################

$SET_ALLSTA
If [L]_AOLDVAL<>this.ALLSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLSTA
 Gosub PROPAGATE_ALLSTA
Endif
Return

$INIT_ALLSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ALLSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALLSTA=0 and fmet this.AGETATTRIBUTE("ALLSTA","$isMandatory")="true"
 this.ALLSTA = 1
Endif
Return
 
$CONTROL_ALLSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ALLSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLSTA
[L]CURPRO = "ALLSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLSTA
[L]CURPRO = "ALLSTA"
If this.ALLSTA<0 or this.ALLSTA>len(mess(0,340,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"340 ->"-num$(this.ALLSTA)-mess(99,123,1)):  Return : # Local menu "340 -> Invalid option
Endif
Return

$_AOTHERS_ALLSTA
[L]CURPRO = "ALLSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLSTA
[L]CURPRO = "ALLSTA"
Return

$PROPAGATE_ALLSTA
this.isReadonly = 0
[L]CURPRO = "ALLSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ALLSTA"
$_LNKPRO_ALLSTA
Return


####################################################################
# 40 : PRPSTA Picking status ( Field Local menu number 338)
####################################################################

$SET_PRPSTA
If [L]_AOLDVAL<>this.PRPSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRPSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRPSTA
 Gosub PROPAGATE_PRPSTA
Endif
Return

$INIT_PRPSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "PRPSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.PRPSTA=0 and fmet this.AGETATTRIBUTE("PRPSTA","$isMandatory")="true"
 this.PRPSTA = 1
Endif
Return
 
$CONTROL_PRPSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "PRPSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRPSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRPSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRPSTA
[L]CURPRO = "PRPSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PRPSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRPSTA
[L]CURPRO = "PRPSTA"
If this.PRPSTA<0 or this.PRPSTA>len(mess(0,338,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"338 ->"-num$(this.PRPSTA)-mess(99,123,1)):  Return : # Local menu "338 -> Invalid option
Endif
Return

$_AOTHERS_PRPSTA
[L]CURPRO = "PRPSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRPSTA
[L]CURPRO = "PRPSTA"
Return

$PROPAGATE_PRPSTA
this.isReadonly = 0
[L]CURPRO = "PRPSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRPSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "PRPSTA"
$_LNKPRO_PRPSTA
Return


####################################################################
# 41 : MATSTA Material status ( Field Local menu number 363)
####################################################################

$SET_MATSTA
If [L]_AOLDVAL<>this.MATSTA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MATSTA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MATSTA
 Gosub PROPAGATE_MATSTA
Endif
Return

$INIT_MATSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MATSTA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MATSTA=0 and fmet this.AGETATTRIBUTE("MATSTA","$isMandatory")="true"
 this.MATSTA = 1
Endif
Return
 
$CONTROL_MATSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MATSTA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MATSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MATSTA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MATSTA
[L]CURPRO = "MATSTA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MATSTA=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MATSTA
[L]CURPRO = "MATSTA"
If this.MATSTA<0 or this.MATSTA>len(mess(0,363,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"363 ->"-num$(this.MATSTA)-mess(99,123,1)):  Return : # Local menu "363 -> Invalid option
Endif
Return

$_AOTHERS_MATSTA
[L]CURPRO = "MATSTA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MATSTA
[L]CURPRO = "MATSTA"
Return

$PROPAGATE_MATSTA
this.isReadonly = 0
[L]CURPRO = "MATSTA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MATSTA
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MATSTA"
$_LNKPRO_MATSTA
Return


####################################################################
# 42 : MFMTRKFLG Tracking flag ( Field Local menu number 339)
####################################################################

$SET_MFMTRKFLG
If [L]_AOLDVAL<>this.MFMTRKFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFMTRKFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFMTRKFLG
 Gosub PROPAGATE_MFMTRKFLG
Endif
Return

$INIT_MFMTRKFLG
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MFMTRKFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFMTRKFLG=0 and fmet this.AGETATTRIBUTE("MFMTRKFLG","$isMandatory")="true"
 this.MFMTRKFLG = 1
Endif
Return
 
$CONTROL_MFMTRKFLG
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MFMTRKFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFMTRKFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFMTRKFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFMTRKFLG
[L]CURPRO = "MFMTRKFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFMTRKFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFMTRKFLG
[L]CURPRO = "MFMTRKFLG"
If this.MFMTRKFLG<0 or this.MFMTRKFLG>len(mess(0,339,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"339 ->"-num$(this.MFMTRKFLG)-mess(99,123,1)):  Return : # Local menu "339 -> Invalid option
Endif
Return

$_AOTHERS_MFMTRKFLG
[L]CURPRO = "MFMTRKFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFMTRKFLG
[L]CURPRO = "MFMTRKFLG"
Return

$PROPAGATE_MFMTRKFLG
this.isReadonly = 0
[L]CURPRO = "MFMTRKFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFMTRKFLG
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MFMTRKFLG"
$_LNKPRO_MFMTRKFLG
Return


####################################################################
# 43 : SCOFLG Type of supply ( Field Local menu number 2225)
####################################################################

$SET_SCOFLG
If [L]_AOLDVAL<>this.SCOFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SCOFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SCOFLG
 Gosub PROPAGATE_SCOFLG
Endif
Return

$INIT_SCOFLG
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "SCOFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SCOFLG=0 and fmet this.AGETATTRIBUTE("SCOFLG","$isMandatory")="true"
 this.SCOFLG = 1
Endif
Return
 
$CONTROL_SCOFLG
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "SCOFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SCOFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SCOFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SCOFLG
[L]CURPRO = "SCOFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SCOFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SCOFLG
[L]CURPRO = "SCOFLG"
If this.SCOFLG<0 or this.SCOFLG>len(mess(0,2225,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2225 ->"-num$(this.SCOFLG)-mess(99,123,1)):  Return : # Local menu "2225 -> Invalid option
Endif
Return

$_AOTHERS_SCOFLG
[L]CURPRO = "SCOFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SCOFLG
[L]CURPRO = "SCOFLG"
Return

$PROPAGATE_SCOFLG
this.isReadonly = 0
[L]CURPRO = "SCOFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SCOFLG
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "SCOFLG"
$_LNKPRO_SCOFLG
Return


####################################################################
# 44 : MFGPIO Priority ( Field Local menu number 365)
####################################################################

$SET_MFGPIO
If [L]_AOLDVAL<>this.MFGPIO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MFGPIO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MFGPIO
 Gosub PROPAGATE_MFGPIO
Endif
Return

$INIT_MFGPIO
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MFGPIO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MFGPIO=0 and fmet this.AGETATTRIBUTE("MFGPIO","$isMandatory")="true"
 this.MFGPIO = 1
Endif
Return
 
$CONTROL_MFGPIO
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MFGPIO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MFGPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MFGPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MFGPIO
[L]CURPRO = "MFGPIO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MFGPIO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MFGPIO
[L]CURPRO = "MFGPIO"
If this.MFGPIO<0 or this.MFGPIO>len(mess(0,365,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"365 ->"-num$(this.MFGPIO)-mess(99,123,1)):  Return : # Local menu "365 -> Invalid option
Endif
Return

$_AOTHERS_MFGPIO
[L]CURPRO = "MFGPIO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MFGPIO
[L]CURPRO = "MFGPIO"
Return

$PROPAGATE_MFGPIO
this.isReadonly = 0
[L]CURPRO = "MFGPIO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MFGPIO
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "MFGPIO"
$_LNKPRO_MFGPIO
Return


####################################################################
# 45 : PLANNER Planner ( Field AUS 5)
####################################################################

$SET_PLANNER
If [L]_AOLDVAL<>this.PLANNER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLANNER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLANNER
 Gosub PROPAGATE_PLANNER
Endif
Return

$INIT_PLANNER
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "PLANNER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLANNER
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "PLANNER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLANNER
[L]CURPRO = "PLANNER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLANNER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLANNER
[L]CURPRO = "PLANNER"
If vireblc(this.PLANNER,2)<>vireblc(format$("K:5B",this.PLANNER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PLANNER
[L]CURPRO = "PLANNER"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLANNER
[L]CURPRO = "PLANNER"
Return

$PROPAGATE_PLANNER
this.isReadonly = 0
[L]CURPRO = "PLANNER"
Gosub _LNKPRO_PLANNER
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLANNER
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "PLANNER"
$_LNKPRO_PLANNER
If vireblc(this.PLANNER,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.PLANNER
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 46 : TRKFIRST First tracking date ( Field D)
####################################################################

$SET_TRKFIRST
If [L]_AOLDVAL<>this.TRKFIRST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKFIRST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKFIRST
 Gosub PROPAGATE_TRKFIRST
Endif
Return

$INIT_TRKFIRST
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKFIRST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKFIRST
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKFIRST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKFIRST              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKFIRST              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKFIRST
[L]CURPRO = "TRKFIRST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKFIRST=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKFIRST
[L]CURPRO = "TRKFIRST"
Return

$_AOTHERS_TRKFIRST
[L]CURPRO = "TRKFIRST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKFIRST
[L]CURPRO = "TRKFIRST"
Return

$PROPAGATE_TRKFIRST
this.isReadonly = 0
[L]CURPRO = "TRKFIRST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKFIRST
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKFIRST"
$_LNKPRO_TRKFIRST
Return


####################################################################
# 47 : TRKLAST Last tracking date ( Field D)
####################################################################

$SET_TRKLAST
If [L]_AOLDVAL<>this.TRKLAST
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKLAST
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKLAST
 Gosub PROPAGATE_TRKLAST
Endif
Return

$INIT_TRKLAST
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKLAST"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKLAST
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKLAST"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKLAST               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKLAST               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKLAST
[L]CURPRO = "TRKLAST"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKLAST=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKLAST
[L]CURPRO = "TRKLAST"
Return

$_AOTHERS_TRKLAST
[L]CURPRO = "TRKLAST"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKLAST
[L]CURPRO = "TRKLAST"
Return

$PROPAGATE_TRKLAST
this.isReadonly = 0
[L]CURPRO = "TRKLAST"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKLAST
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKLAST"
$_LNKPRO_TRKLAST
Return


####################################################################
# 48 : TRKFIRSTC First tracking date ( Field D)
####################################################################

$SET_TRKFIRSTC
If [L]_AOLDVAL<>this.TRKFIRSTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKFIRSTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKFIRSTC
 Gosub PROPAGATE_TRKFIRSTC
Endif
Return

$INIT_TRKFIRSTC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKFIRSTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKFIRSTC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKFIRSTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKFIRSTC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKFIRSTC             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKFIRSTC=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
Return

$_AOTHERS_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKFIRSTC
[L]CURPRO = "TRKFIRSTC"
Return

$PROPAGATE_TRKFIRSTC
this.isReadonly = 0
[L]CURPRO = "TRKFIRSTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKFIRSTC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKFIRSTC"
$_LNKPRO_TRKFIRSTC
Return


####################################################################
# 49 : TRKLASTC Last tracking date ( Field D)
####################################################################

$SET_TRKLASTC
If [L]_AOLDVAL<>this.TRKLASTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TRKLASTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TRKLASTC
 Gosub PROPAGATE_TRKLASTC
Endif
Return

$INIT_TRKLASTC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKLASTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TRKLASTC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKLASTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TRKLASTC              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TRKLASTC              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TRKLASTC
[L]CURPRO = "TRKLASTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.TRKLASTC=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TRKLASTC
[L]CURPRO = "TRKLASTC"
Return

$_AOTHERS_TRKLASTC
[L]CURPRO = "TRKLASTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TRKLASTC
[L]CURPRO = "TRKLASTC"
Return

$PROPAGATE_TRKLASTC
this.isReadonly = 0
[L]CURPRO = "TRKLASTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TRKLASTC
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "TRKLASTC"
$_LNKPRO_TRKLASTC
Return


####################################################################
# 50 : CPNTYP Component type ( Field Local menu number 438)
####################################################################

$SET_CPNTYP
If [L]_AOLDVAL<>this.CPNTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPNTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPNTYP
 Gosub PROPAGATE_CPNTYP
Endif
Return

$INIT_CPNTYP
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CPNTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CPNTYP=0 and fmet this.AGETATTRIBUTE("CPNTYP","$isMandatory")="true"
 this.CPNTYP = 1
Endif
Return
 
$CONTROL_CPNTYP
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CPNTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPNTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPNTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPNTYP
[L]CURPRO = "CPNTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CPNTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPNTYP
[L]CURPRO = "CPNTYP"
If this.CPNTYP<0 or this.CPNTYP>len(mess(0,438,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"438 ->"-num$(this.CPNTYP)-mess(99,123,1)):  Return : # Local menu "438 -> Invalid option
Endif
Return

$_AOTHERS_CPNTYP
[L]CURPRO = "CPNTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPNTYP
[L]CURPRO = "CPNTYP"
Return

$PROPAGATE_CPNTYP
this.isReadonly = 0
[L]CURPRO = "CPNTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPNTYP
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CPNTYP"
$_LNKPRO_CPNTYP
Return


####################################################################
# 52 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 53 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 54 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 55 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 56 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 57 : ECCVALMAJ Major version ( Field ICVVAL 10)
####################################################################

$SET_ECCVALMAJ
If [L]_AOLDVAL<>this.ECCVALMAJ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ECCVALMAJ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ECCVALMAJ
 Gosub PROPAGATE_ECCVALMAJ
Endif
Return

$INIT_ECCVALMAJ
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ECCVALMAJ
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ECCVALMAJ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ECCVALMAJ             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ECCVALMAJ             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ECCVALMAJ,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
Return

$_AOTHERS_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
Return

$PROPAGATE_ECCVALMAJ
this.isReadonly = 0
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ECCVALMAJ
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ECCVALMAJ"
$_LNKPRO_ECCVALMAJ
Return


####################################################################
# 58 : ECCVALMIN Minor version ( Field ICVVAL 10)
####################################################################

$SET_ECCVALMIN
If [L]_AOLDVAL<>this.ECCVALMIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ECCVALMIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ECCVALMIN
 Gosub PROPAGATE_ECCVALMIN
Endif
Return

$INIT_ECCVALMIN
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ECCVALMIN
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ECCVALMIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ECCVALMIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ECCVALMIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ECCVALMIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
Return

$_AOTHERS_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
Return

$PROPAGATE_ECCVALMIN
this.isReadonly = 0
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ECCVALMIN
Gosub DECLARE_VAR From WMC0MFGMAT
[L]CURPRO = "ECCVALMIN"
$_LNKPRO_ECCVALMIN
Return




