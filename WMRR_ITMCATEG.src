#<AdxTL>@(#)0.0.0.0 $Revision$Class Product category
# Supervisor
## CRUD-CLASSE ## ITMCATEG
# 2018-08-27 13:17:35 611


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File ITMCATEG [ITG_]

If !SILENCE : Call TRACE("2 --> Local Instance R_ITMCATEG") From ASYRCOM : Endif
Local Instance ITMCATEG Using R_ITMCATEG

If !SILENCE : Call TRACE("3 --> New Instance R_ITMCATEG") From ASYRCOM : Endif
ITMCATEG = NewInstance R_ITMCATEG AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [ITG_]ITG1 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ITMCATEG") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ITMCATEG.AREAD([ITG_]TCLCOD,[ITG_]STOFCY))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ITMCATEG.ITG.TCLCOD ="-num$(ITMCATEG.ITG.TCLCOD)) From ASYRCOM
 Call TRACE("ITMCATEG.ITG.STOFCY ="-num$(ITMCATEG.ITG.STOFCY)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ITMCATEG.ITG.AKEYS)
  Call TRACE("-"-num$(I)-":"-ITMCATEG.ITG.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [ITG_]
FreeGroup ITMCATEG
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ITMCATEG,ACLE,ASTATUS,_ETAG)
Variable Instance ITMCATEG Using R_ITMCATEG
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _TCLCOD(5)
Local Char _STOFCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TCLCOD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STOFCY = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File ITMCATEG [ITG]
Default File [F:ITG]
Read [F:ITG]ITG1 = [L]_TCLCOD;[L]_STOFCY
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:ITG]UPDTICK)>0
 [L]_ETAG = num$([F:ITG]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ITMCATEG,ACLE,ASTATUS)
Variable Instance ITMCATEG Using R_ITMCATEG
Value Char ACLE
Variable Integer ASTATUS
Local Char _TCLCOD(5)
Local Char _STOFCY(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_TCLCOD = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_STOFCY = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ITMCATEG.AREAD([L]_TCLCOD,[L]_STOFCY))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ITMCATEG,_TCLCOD,_STOFCY,ASTATUS)
Variable Instance ITMCATEG Using R_ITMCATEG
Value Char _TCLCOD
Value Char _STOFCY
Variable Integer ASTATUS

If ITMCATEG = null : End : Endif

Gosub AVARIABLES From WMR00ITMCATEG
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ITMCATEG.APARENT=null
 [L]A_I = ITMCATEG.freeSnapshot
 ITMCATEG.snapshotEnabled = 0
 ITMCATEG.setAccessorEnabled = 0
Endif

If fmet ITMCATEG.ACTX.AGETAFCRIGHT(ITMCATEG,"GESITG",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:ITG]
Read [F:ITG]ITG1 = [L]_TCLCOD;[L]_STOFCY
If fstat
[L]A_ERROR = [L]_TCLCOD+"~"+[L]_STOFCY
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ITMCATEG,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:ITG]STOFCY
[L]A_STRACC = ""
If fmet ITMCATEG.ACTX.AGETAFCRIGHTR(ITMCATEG,"GESITG",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet ITMCATEG.ACTX.ASTACRITROLE(ITMCATEG,[L]_TCLCOD+"~"+[L]_STOFCY
& ,"ITG","ITG",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet ITMCATEG.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

ITMCATEG.ITG.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet ITMCATEG.ITG.AREAD([L]_TCLCOD,[L]_STOFCY))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ITMCATEG.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ITMCATEG.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ITMCATEG._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ITMCATEG.APARENT=null
 ITMCATEG.snapshotEnabled = 1
 ITMCATEG.setAccessorEnabled = 1
Endif
LogicClose File [ITG] ,[SRUE] ,[SRUS]
End



