#<AdxTL>@(#)0.0.0.0 $Revision$Class Price list inquiry
# Supervisor
## ACLA-CLASSE ## SPRICESEARCH
# 2018-08-27 12:48:49 725

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "SPRICESEARCH_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Search
$PRICESEARCH_MET
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PRICESEARCH_MET" : [L]ACTION = "PRICESEARCH_MET" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Price list inquiry
$PRICELIST_MET
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "PRICELIST_MET" : [L]ACTION = "PRICELIST_MET" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Load
$LOADPARAMFROMDOC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADPARAMFROMDOC" : [L]ACTION = "LOADPARAMFROMDOC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Result
$LOADDOCFROMRESULT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADDOCFROMRESULT" : [L]ACTION = "LOADDOCFROMRESULT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Load
$LOADVATPARAMFROMDOC
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADVATPARAMFROMDOC" : [L]ACTION = "LOADVATPARAMFROMDOC" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Result
$LOADVATRESULTFROMFINDVAT
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "LOADVATRESULTFROMFINDVAT" : [L]ACTION = "LOADVATRESULTFROMFINDVAT" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0SPRICESEARCH
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To maxtab(this.C_PRICE)
 If this.C_PRICE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICE(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRG(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_FRAISREM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_FRAISREM(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.C_PRICEDET)
 If this.C_PRICEDET(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICEDET(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.C_PRICEDET2)
 If this.C_PRICEDET2(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICEDET2(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.RESPRICEINQ)
 If this.RESPRICEINQ(AINDCLA)<>null
  [L]ASTATUS = fmet this.RESPRICEINQ(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
If this.PRICEPARAM<>null
 [L]ASTATUS = fmet this.PRICEPARAM._AERROR(_CTX,_SUPP)
Endif
For AINDCLA=1 To maxtab(this.R_PRICE)
 If this.R_PRICE(AINDCLA)<>null
  [L]ASTATUS = fmet this.R_PRICE(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0SPRICESEARCH
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To maxtab(this.C_PRICE)
 If this.C_PRICE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICE(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRG(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_FRAISREM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_FRAISREM(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.C_PRICEDET)
 If this.C_PRICEDET(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICEDET(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.C_PRICEDET2)
 If this.C_PRICEDET2(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICEDET2(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.RESPRICEINQ)
 If this.RESPRICEINQ(AINDCLA)<>null
  [L]ASTATUS = fmet this.RESPRICEINQ(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
If this.PRICEPARAM<>null
 [L]ASTATUS = fmet this.PRICEPARAM._ADELERRORS(_APARAM)
Endif
For AINDCLA=1 To maxtab(this.R_PRICE)
 If this.R_PRICE(AINDCLA)<>null
  [L]ASTATUS = fmet this.R_PRICE(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0SPRICESEARCH
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To maxtab(this.C_PRICE)
 If this.C_PRICE(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICE(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_PRICE('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_DISCRG(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_DISCRG(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_DISCRG('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To 9
 If this.C_FRAISREM(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_FRAISREM(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_FRAISREM('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.C_PRICEDET)
 If this.C_PRICEDET(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICEDET(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_PRICEDET('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.C_PRICEDET2)
 If this.C_PRICEDET2(AINDCLA)<>null
  [L]ASTATUS = fmet this.C_PRICEDET2(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'C_PRICEDET2('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
For AINDCLA=1 To maxtab(this.RESPRICEINQ)
 If this.RESPRICEINQ(AINDCLA)<>null
  [L]ASTATUS = fmet this.RESPRICEINQ(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'RESPRICEINQ('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
If this.PRICEPARAM<>null
 [L]ASTATUS = fmet this.PRICEPARAM._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'PRICEPARAM')
Endif
For AINDCLA=1 To maxtab(this.R_PRICE)
 If this.R_PRICE(AINDCLA)<>null
  [L]ASTATUS = fmet this.R_PRICE(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'R_PRICE('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0SPRICESEARCH
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_DISCRG",this)
 When "C_FRAISREM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_FRAISREM",this)
 When "C_PRICE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_PRICE",this)
 When "C_PRICEDET"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_PRICEDET",this)
 When "C_PRICEDET2"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"C_PRICEDET2",this)
 When "PRICEPARAM"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"PRICEPARAM",this)
 When "RESPRICEINQ"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"RESPRICEINQ",this)
 When "R_PRICE"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"R_PRICE",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_DISCRG","C_SPRICESEARCH_C_DISCRG",this)
 When "C_FRAISREM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_FRAISREM","C_SPRICESEARCH_C_FRAISREM",this)
 When "C_PRICE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_PRICE","C_SPRICESEARCH_C_PRICE",this)
 When "C_PRICEDET"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_PRICEDET","C_SPRICESEARCH_C_PRICEDET",this)
 When "C_PRICEDET2"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"C_PRICEDET2","C_SPRICESEARCH_C_PRICEDET2",this)
 When "PRICEPARAM"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"PRICEPARAM","C_SFINDPRICE",this)
 When "RESPRICEINQ"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"RESPRICEINQ","C_RESPRICEINQ",this)
 When "R_PRICE"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"R_PRICE","C_SPRICESEARCH_R_PRICE",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE = 9
 When "C_FRAISREM"
  [L]_ALINE = 9
 When "C_PRICE"
  [L]_ALINE = 0
 When "C_PRICEDET"
  [L]_ALINE = 0
 When "C_PRICEDET2"
  [L]_ALINE = 0
 When "PRICEPARAM"
  [L]_ALINE = 1
 When "RESPRICEINQ"
  [L]_ALINE = 0
 When "R_PRICE"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "C_DISCRG"
  [L]_ALINE = 3
 When "C_FRAISREM"
  [L]_ALINE = 3
 When "C_PRICE"
  [L]_ALINE = 1
 When "C_PRICEDET"
  [L]_ALINE = 1
 When "C_PRICEDET2"
  [L]_ALINE = 1
 When "PRICEPARAM"
  [L]_ALINE = 2
 When "RESPRICEINQ"
  [L]_ALINE = 1
 When "R_PRICE"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "CLE"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
this.PRICEPARAM(1) = NewInstance C_SFINDPRICE(this.ACTX,NullUuid,1,this,"PRICEPARAM") AllocGroup this
this.PRICEPARAM(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PRICEPARAM(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.PRICEPARAM.C_SPKH(1) = NewInstance C_SPRICLINKH(this.ACTX,NullUuid,1,this.PRICEPARAM,"C_SPKH") AllocGroup this
this.PRICEPARAM.C_SPKH(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PRICEPARAM.C_SPKH(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
this.PRICEPARAM.PLI(1) = NewInstance C_PLI(this.ACTX,NullUuid,1,this.PRICEPARAM,"PLI") AllocGroup this
this.PRICEPARAM.PLI(1).ASTALIN = [V]CST_ANEW
[L]ASTATUS = fmet this.PRICEPARAM.PLI(1).ACTION("ADDLINE_AFTER")
If [L]ASTATUS>=[V]CST_AERROR : [L]ASTATUS = [V]CST_ANOTDEFINED : Return : Endif
Return



