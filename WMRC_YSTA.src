#<AdxTL>@(#)0.0.0.0 $Revision$Class Stage
# Supervisor
## CRUD-CLASSE ## YSTA
# 2018-11-22 23:22:37 373


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(YSTA,ASTATUS)
Variable Instance YSTA Using R_YSTA
Variable Integer ASTATUS

If YSTA = null : End : Endif

Gosub AVARIABLES From WMR00YSTA
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet YSTA.ACTX.AGETAFCRIGHT(YSTA,"GESYSTA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet YSTA.ACTX.AGETAFCRIGHTC(YSTA,"GESYSTA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_YSTA
Else
 Gosub AINSERT_YSTA
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = YSTA.freeSnapshot
YSTA.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
YSTA.ASTALIN = [V]CST_ANEW
YSTA.YSTG.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YSTA.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSTA.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YSTA._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YSTA._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YSTA._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If YSTA.YSTG.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YSTA.YSTG.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YSTA.YSTG.YRMA) : # YRMA -- 2
 If YSTA.YSTG.YRMA(A_N2) <> null
& and !find(YSTA.YSTG.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.YRMA(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YSTA.YSTG.YSRG) : # YSRG -- 3
 If YSTA.YSTG.YSRG(A_N2) <> null
& and !find(YSTA.YSTG.YSRG(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.YSRG(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YSTA.YSTG.YSLD) : # YSLD -- 4
 If YSTA.YSTG.YSLD(A_N2) <> null
& and !find(YSTA.YSTG.YSLD(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.YSLD(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(YSTA.YSTG.YRMA) : # YRMA -- 2
 If YSTA.YSTG.YRMA(A_N2) <> null
& and !find(YSTA.YSTG.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.YRMA(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YSTA.YSTG.YSRG) : # YSRG -- 3
 If YSTA.YSTG.YSRG(A_N2) <> null
& and !find(YSTA.YSTG.YSRG(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.YSRG(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YSTA.YSTG.YSLD) : # YSLD -- 4
 If YSTA.YSTG.YSLD(A_N2) <> null
& and !find(YSTA.YSTG.YSLD(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.YSLD(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_YSTA
Trbegin [F:YSTG]
 Gosub AINSERT_YSTA
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(YSTA.YSTG.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YSTA.YSTG.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YSTA.YSTG.YRMA)
 If YSTA.YSTG.YRMA(A_N2) <> null
  [L]ASTATUS2 = fmet YSTA.YSTG.YRMA(A_N2)._AINSERT_AFTER
  If YSTA.YSTG.YRMA(A_N2).ASTALIN=[V]CST_ADEL or YSTA.YSTG.YRMA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YSTA.YSTG.YRMA(A_N2)
   YSTA.YSTG.YRMA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YSTA.YSTG.YSRG)
 If YSTA.YSTG.YSRG(A_N2) <> null
  [L]ASTATUS2 = fmet YSTA.YSTG.YSRG(A_N2)._AINSERT_AFTER
  If YSTA.YSTG.YSRG(A_N2).ASTALIN=[V]CST_ADEL or YSTA.YSTG.YSRG(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YSTA.YSTG.YSRG(A_N2)
   YSTA.YSTG.YSRG(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YSTA.YSTG.YSLD)
 If YSTA.YSTG.YSLD(A_N2) <> null
  [L]ASTATUS2 = fmet YSTA.YSTG.YSLD(A_N2)._AINSERT_AFTER
  If YSTA.YSTG.YSLD(A_N2).ASTALIN=[V]CST_ADEL or YSTA.YSTG.YSLD(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YSTA.YSTG.YSLD(A_N2)
   YSTA.YSTG.YSLD(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_YSTA
[L]ASTATUS = max([L]ASTATUS,fmet YSTA.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSTA.YSTG._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YSTA.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If YSTA.snapshotEnabled=1
 [L]A_RETIK = YSTA.revertUpdTick
Endif
[L]ASTATUS = max(fmet YSTA.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



