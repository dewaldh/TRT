#<AdxTL>@(#)0.0.0.0 $Revision$
# Sage X3 supervisor
# Mask management WMBUDSTDMD 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_AMTFOR14
Onevent BEFORE_AREA Gosub AV_AMTFOR14 From W3WMBUDSTDMD
Return

$AV_AMTFOR14
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:BCR]CUR(0),GDEVISE(1..GNBDEV)),1))
## Action STD
Call AV_AMTFOR14(zc) From SUBBUD2
Gosub _AFF
Return

$ON_YQTY1
Onevent BEFORE_AREA Gosub AV_YQTY1 From W3WMBUDSTDMD
Return

$AV_YQTY1
zc = sum([M]QTY1(0..max(nolign-1,[M]NBLIG-1)))
Chgfmt [M]YQTY1(indice) With "NPz:"+GUNTFM1(1)
Gosub _AFF
Return

$ON_YQTY3
Onevent BEFORE_AREA Gosub AV_YQTY3 From W3WMBUDSTDMD
Return

$AV_YQTY3
zc = sum([M]QTY3(0..max(nolign-1,[M]NBLIG-1)))
Chgfmt [M]YQTY3(indice) With "NPz:"+GUNTFM1(1)
Gosub _AFF
Return

$ON_YQTY5
Onevent BEFORE_AREA Gosub AV_YQTY5 From W3WMBUDSTDMD
Return

$AV_YQTY5
zc = sum([M]QTY5(0..max(nolign-1,[M]NBLIG-1)))
Chgfmt [M]YQTY5(indice) With "NPz:"+GUNTFM1(1)
Gosub _AFF
Return

$ON_YAMT2
Onevent BEFORE_AREA Gosub AV_YAMT2 From W3WMBUDSTDMD
Return

$AV_YAMT2
zc = sum([M]AMT2(0..max(nolign-1,[M]NBLIG-1)))
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:BCR]CUR(0),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]YAMT2(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUR2
Onevent INIT_AREA Call D_CUR2(zc) From W3WMBUDSTDMD
Return

Subprog D_CUR2(VALEUR)
Variable Char    VALEUR()
If varinit([M]CUR2,indice)=0
 VALEUR = [M:BCR]CUR(0)
Endif
Gosub _AFF
End

$ON_YAMT4
Onevent BEFORE_AREA Gosub AV_YAMT4 From W3WMBUDSTDMD
Return

$AV_YAMT4
zc = sum([M]AMT4(0..max(nolign-1,[M]NBLIG-1)))
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:BCR]CUR(1),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]YAMT4(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUR4
Onevent INIT_AREA Call D_CUR4(zc) From W3WMBUDSTDMD
Return

Subprog D_CUR4(VALEUR)
Variable Char    VALEUR()
If varinit([M]CUR4,indice)=0
 VALEUR = [M:BCR]CUR(1)
Endif
Gosub _AFF
End

$ON_YAMT6
Onevent BEFORE_AREA Gosub AV_YAMT6 From W3WMBUDSTDMD
Return

$AV_YAMT6
zc = sum([M]AMT6(0..max(nolign-1,[M]NBLIG-1)))
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:BCR]CUR(2),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]YAMT6(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_CUR6
Onevent INIT_AREA Call D_CUR6(zc) From W3WMBUDSTDMD
Return

Subprog D_CUR6(VALEUR)
Variable Char    VALEUR()
If varinit([M]CUR6,indice)=0
 VALEUR = [M:BCR]CUR(2)
Endif
Gosub _AFF
End

$ON_YAMTFOR10
Onevent BEFORE_AREA Gosub AV_YAMTFOR10 From W3WMBUDSTDMD
Return

$AV_YAMTFOR10
zc = sum([M]AMTFOR10(0..max(nolign-1,[M]NBLIG-1)))
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:BCR]CUR(0),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]YAMTFOR10(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_YAMTFOR14
Onevent BEFORE_AREA Gosub AV_YAMTFOR14 From W3WMBUDSTDMD
Return

$AV_YAMTFOR14
zc = sum([M]AMTFOR14(0..max(nolign-1,[M]NBLIG-1)))
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:BCR]CUR(0),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]YAMTFOR14(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$TIT_COL
Local Char TITCL(200)(1..6)
Raz TITCL
Case BASPAG
 When "NBLIG"
  TITCL(1) = func SUBTBU.GET_COLDESTRA("STDMD",1)-[V]LIBBUD(1)
  TITCL(2) = func SUBTBU.GET_COLDESTRA("STDMD",2)-[V]LIBBUD(1)
  TITCL(3) = func SUBTBU.GET_COLDESTRA("STDMD",3)-[V]LIBBUD(2)
  TITCL(4) = func SUBTBU.GET_COLDESTRA("STDMD",4)-[V]LIBBUD(2)
  TITCL(5) = func SUBTBU.GET_COLDESTRA("STDMD",5)-[V]LIBBUD(3)
  TITCL(6) = func SUBTBU.GET_COLDESTRA("STDMD",6)-[V]LIBBUD(3)
  If !GORITITCOL
   Titcol [M]NBLIG TITCL(1) For QTY1
   Titcol [M]NBLIG TITCL(2) For AMT2
   Titcol [M]NBLIG TITCL(3) For QTY3
   Titcol [M]NBLIG TITCL(4) For AMT4
   Titcol [M]NBLIG TITCL(5) For QTY5
   Titcol [M]NBLIG TITCL(6) For AMT6
  Else
   Titcol [M:BUD]NBLIG TITCL(1) For QTY1
   Titcol [M:BUD]NBLIG TITCL(2) For AMT2
   Titcol [M:BUD]NBLIG TITCL(3) For QTY3
   Titcol [M:BUD]NBLIG TITCL(4) For AMT4
   Titcol [M:BUD]NBLIG TITCL(5) For QTY5
   Titcol [M:BUD]NBLIG TITCL(6) For AMT6
  Endif
Endcase
Return

$CHG_STY
Return


