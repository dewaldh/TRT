#<AdxTL>@(#)0.0.0.0 $Revision$Class Accounts
# Supervisor
## ACLA-CLASSE ## GACCOUNT
# 2018-08-27 12:32:35 750


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : COA Chart code ( Field COA 3)
####################################################################

$SET_COA
If [L]_AOLDVAL<>this.COA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COA
 Gosub PROPAGATE_COA
Endif
Return

$INIT_COA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "COA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "COA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COA
[L]CURPRO = "COA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>vireblc(format$("K:3c",this.COA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCOA.ACTRLREF(this,"COA",this.COA,this.COA,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.COA<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COA
[L]CURPRO = "COA"
Return

$PROPAGATE_COA
this.isReadonly = 0
[L]CURPRO = "COA"
Gosub _LNKPRO_COA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "COA"
$_LNKPRO_COA
If vireblc(this.COA,2)<>""
 # Link GCOA
 Local File GCOA [WCOA]
 Read [F:WCOA]COA0 = this.COA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="SHOTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="DESTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCOA]
Endif
Return

$_ALOADATTRIBUTE_COA
[L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field DES 30)
####################################################################

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(this.DES,2)<>vireblc(format$("K:30X",this.DES),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : ACC Account ( Field GAC 15)
####################################################################

$SET_ACC
If [L]_AOLDVAL<>this.ACC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACC
 Gosub PROPAGATE_ACC
Endif
Return

$INIT_ACC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACC
[L]CURPRO = "ACC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACC
[L]CURPRO = "ACC"
If vireblc(this.ACC,2)<>vireblc(format$("K:15X",this.ACC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACC
[L]CURPRO = "ACC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACC
[L]CURPRO = "ACC"
Return

$PROPAGATE_ACC
this.isReadonly = 0
[L]CURPRO = "ACC"
Gosub _LNKPRO_ACC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACC"
$_LNKPRO_ACC
If vireblc(this.ACC,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.COA;this.ACC
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return

$_ALOADATTRIBUTE_ACC
[L]ASTATUS = fmet this.ASETATTRIBUTE("ACC","$isMandatory","true")
Return


####################################################################
# 4 : DESSHO Short description ( Field SHO 10)
####################################################################

$SET_DESSHO
If [L]_AOLDVAL<>this.DESSHO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESSHO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESSHO
 Gosub PROPAGATE_DESSHO
Endif
Return

$INIT_DESSHO
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESSHO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESSHO
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESSHO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESSHO
[L]CURPRO = "DESSHO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESSHO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESSHO
[L]CURPRO = "DESSHO"
If vireblc(this.DESSHO,2)<>vireblc(format$("K:10X",this.DESSHO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESSHO
[L]CURPRO = "DESSHO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESSHO
[L]CURPRO = "DESSHO"
Return

$PROPAGATE_DESSHO
this.isReadonly = 0
[L]CURPRO = "DESSHO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESSHO
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESSHO"
$_LNKPRO_DESSHO
Return


####################################################################
# 5 : DESTRA Translatable title ( Field AX3)
####################################################################

$GET_DESTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESTRA"
this.DESTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESTRA
If [L]_AOLDVAL<>this.DESTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESTRA
 Gosub PROPAGATE_DESTRA
Endif
Return

$INIT_DESTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESTRA
[L]CURPRO = "DESTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESTRA
[L]CURPRO = "DESTRA"
If vireblc(fmet this.AGETTEXTRA("DESTRA"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESTRA
[L]CURPRO = "DESTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESTRA
[L]CURPRO = "DESTRA"
Return

$PROPAGATE_DESTRA
this.isReadonly = 0
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DESTRA"
$_LNKPRO_DESTRA
Return


####################################################################
# 6 : SAC Control ( Field Local menu number 1)
####################################################################

$SET_SAC
If [L]_AOLDVAL<>this.SAC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SAC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SAC
 Gosub PROPAGATE_SAC
Endif
Return

$INIT_SAC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SAC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SAC=0 and fmet this.AGETATTRIBUTE("SAC","$isMandatory")="true"
 this.SAC = 1
Endif
Return
 
$CONTROL_SAC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SAC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SAC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SAC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SAC
[L]CURPRO = "SAC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SAC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SAC
[L]CURPRO = "SAC"
If this.SAC<0 or this.SAC>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SAC)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SAC
[L]CURPRO = "SAC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SAC
[L]CURPRO = "SAC"
Return

$PROPAGATE_SAC
this.isReadonly = 0
[L]CURPRO = "SAC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SAC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SAC"
$_LNKPRO_SAC
Return


####################################################################
# 7 : SHOTRA Short description ( Field AX1)
####################################################################

$GET_SHOTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SHOTRA"
this.SHOTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SHOTRA
If [L]_AOLDVAL<>this.SHOTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHOTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHOTRA
 Gosub PROPAGATE_SHOTRA
Endif
Return

$INIT_SHOTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SHOTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHOTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHOTRA
[L]CURPRO = "SHOTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHOTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHOTRA
[L]CURPRO = "SHOTRA"
If vireblc(fmet this.AGETTEXTRA("SHOTRA"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("SHOTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SHOTRA
[L]CURPRO = "SHOTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHOTRA
[L]CURPRO = "SHOTRA"
Return

$PROPAGATE_SHOTRA
this.isReadonly = 0
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.SHOTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHOTRA
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SHOTRA"
$_LNKPRO_SHOTRA
Return


####################################################################
# 8 : ACCSHO Short code ( Field SAC 12)
####################################################################

$SET_ACCSHO
If [L]_AOLDVAL<>this.ACCSHO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCSHO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCSHO
 Gosub PROPAGATE_ACCSHO
Endif
Return

$INIT_ACCSHO
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACCSHO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCSHO
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACCSHO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCSHO
[L]CURPRO = "ACCSHO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCSHO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCSHO
[L]CURPRO = "ACCSHO"
If vireblc(this.ACCSHO,2)<>vireblc(format$("K:A11B",this.ACCSHO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCSHO
[L]CURPRO = "ACCSHO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCSHO
[L]CURPRO = "ACCSHO"
Return

$PROPAGATE_ACCSHO
this.isReadonly = 0
[L]CURPRO = "ACCSHO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCSHO
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACCSHO"
$_LNKPRO_ACCSHO
Return


####################################################################
# 9 : CSLFLGFLW Flow management ( Field Local menu number 2637)
####################################################################

$SET_CSLFLGFLW
If [L]_AOLDVAL<>this.CSLFLGFLW
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CSLFLGFLW
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CSLFLGFLW
 Gosub PROPAGATE_CSLFLGFLW
Endif
Return

$INIT_CSLFLGFLW
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CSLFLGFLW"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CSLFLGFLW=0 and fmet this.AGETATTRIBUTE("CSLFLGFLW","$isMandatory")="true"
 this.CSLFLGFLW = 1
Endif
Return
 
$CONTROL_CSLFLGFLW
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CSLFLGFLW"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CSLFLGFLW             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CSLFLGFLW             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CSLFLGFLW
[L]CURPRO = "CSLFLGFLW"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CSLFLGFLW=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CSLFLGFLW
[L]CURPRO = "CSLFLGFLW"
If this.CSLFLGFLW<0 or this.CSLFLGFLW>len(mess(0,2637,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2637 ->"-num$(this.CSLFLGFLW)-mess(99,123,1)):  Return : # Local menu "2637 -> Invalid option
Endif
Return

$_AOTHERS_CSLFLGFLW
[L]CURPRO = "CSLFLGFLW"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CSLFLGFLW
[L]CURPRO = "CSLFLGFLW"
Return

$PROPAGATE_CSLFLGFLW
this.isReadonly = 0
[L]CURPRO = "CSLFLGFLW"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CSLFLGFLW
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CSLFLGFLW"
$_LNKPRO_CSLFLGFLW
Return


####################################################################
# 10 : FLODEB Flow if debit ( Field Miscellaneous table number)
####################################################################

$SET_FLODEB
If [L]_AOLDVAL<>this.FLODEB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLODEB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLODEB
 Gosub PROPAGATE_FLODEB
Endif
Return

$INIT_FLODEB
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLODEB"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"FLODEB",this.FLODEB,324)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FLODEB
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLODEB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLODEB                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLODEB                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLODEB
[L]CURPRO = "FLODEB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FLODEB,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLODEB
[L]CURPRO = "FLODEB"
If vireblc(this.FLODEB,2)<>vireblc(format$("K:20B",this.FLODEB),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FLODEB
[L]CURPRO = "FLODEB"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"FLODEB",this.FLODEB,324,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLODEB
[L]CURPRO = "FLODEB"
Return

$PROPAGATE_FLODEB
this.isReadonly = 0
[L]CURPRO = "FLODEB"
Gosub _LNKPRO_FLODEB
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLODEB
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLODEB"
$_LNKPRO_FLODEB
If vireblc(this.FLODEB,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 324;this.FLODEB
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FLODEB","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FLODEB","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 11 : FLOCDT Flow if credit ( Field Miscellaneous table number)
####################################################################

$SET_FLOCDT
If [L]_AOLDVAL<>this.FLOCDT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLOCDT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLOCDT
 Gosub PROPAGATE_FLOCDT
Endif
Return

$INIT_FLOCDT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLOCDT"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"FLOCDT",this.FLOCDT,324)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FLOCDT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLOCDT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLOCDT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLOCDT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLOCDT
[L]CURPRO = "FLOCDT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FLOCDT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLOCDT
[L]CURPRO = "FLOCDT"
If vireblc(this.FLOCDT,2)<>vireblc(format$("K:20B",this.FLOCDT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FLOCDT
[L]CURPRO = "FLOCDT"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"FLOCDT",this.FLOCDT,324,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLOCDT
[L]CURPRO = "FLOCDT"
Return

$PROPAGATE_FLOCDT
this.isReadonly = 0
[L]CURPRO = "FLOCDT"
Gosub _LNKPRO_FLOCDT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLOCDT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLOCDT"
$_LNKPRO_FLOCDT
If vireblc(this.FLOCDT,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 324;this.FLOCDT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FLOCDT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("FLOCDT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 12 : LEGCLS Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEGCLS
If [L]_AOLDVAL<>this.LEGCLS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEGCLS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEGCLS
 Gosub PROPAGATE_LEGCLS
Endif
Return

$INIT_LEGCLS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "LEGCLS"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEGCLS",this.LEGCLS,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEGCLS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "LEGCLS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEGCLS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEGCLS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEGCLS
[L]CURPRO = "LEGCLS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEGCLS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEGCLS
[L]CURPRO = "LEGCLS"
If vireblc(this.LEGCLS,2)<>vireblc(format$("K:20B",this.LEGCLS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEGCLS
[L]CURPRO = "LEGCLS"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEGCLS",this.LEGCLS,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEGCLS
[L]CURPRO = "LEGCLS"
Return

$PROPAGATE_LEGCLS
this.isReadonly = 0
[L]CURPRO = "LEGCLS"
Gosub _LNKPRO_LEGCLS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEGCLS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "LEGCLS"
$_LNKPRO_LEGCLS
If vireblc(this.LEGCLS,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEGCLS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEGCLS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEGCLS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 13 : CLSCOD Classification ( Field CLA 10)
####################################################################

$SET_CLSCOD
If [L]_AOLDVAL<>this.CLSCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CLSCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CLSCOD
 Gosub PROPAGATE_CLSCOD
Endif
Return

$INIT_CLSCOD
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CLSCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CLSCOD
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CLSCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CLSCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CLSCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CLSCOD
[L]CURPRO = "CLSCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CLSCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CLSCOD
[L]CURPRO = "CLSCOD"
If vireblc(this.CLSCOD,2)<>vireblc(format$("K:10c",this.CLSCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CLSCOD
[L]CURPRO = "CLSCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CLSCOD
[L]CURPRO = "CLSCOD"
If vireblc(this.CLSCOD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCLA.ACTRLREF(this,"CLSCOD",this.CLSCOD,this.LEGCLS,this.CLSCOD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CLSCOD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CLSCOD
this.isReadonly = 0
[L]CURPRO = "CLSCOD"
Gosub _LNKPRO_CLSCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CLSCOD
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CLSCOD"
$_LNKPRO_CLSCOD
If vireblc(this.CLSCOD,2)<>""
 # Link GACCCLS
 Local File GACCCLS [WCLS]
 Read [F:WCLS]CLS0 = this.LEGCLS;this.CLSCOD
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCCLS" & ZONE="DESTRA" & IDENT1=[F:WCLS]LEG & IDENT2=[F:WCLS]CLSCOD & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CLSCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCLS]
Endif
Return


####################################################################
# 14 : CUR Currency ( Field CUR 3)
####################################################################

$SET_CUR
If [L]_AOLDVAL<>this.CUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CUR
 Gosub PROPAGATE_CUR
Endif
Return

$INIT_CUR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CUR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CUR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CUR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CUR
[L]CURPRO = "CUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CUR
[L]CURPRO = "CUR"
If vireblc(this.CUR,2)<>vireblc(format$("K:3c",this.CUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CUR
[L]CURPRO = "CUR"
If vireblc(this.CUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCUR.ACTRLREF(this,"CUR",this.CUR,this.CUR,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CUR
[L]CURPRO = "CUR"
Return

$PROPAGATE_CUR
this.isReadonly = 0
[L]CURPRO = "CUR"
Gosub _LNKPRO_CUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CUR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CUR"
$_LNKPRO_CUR
If vireblc(this.CUR,2)<>""
 # Link TABCUR
 Local File TABCUR [WTCU]
 Read [F:WTCU]TCU0 = this.CUR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTSHO" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCUR" & ZONE="INTDES" & IDENT1=[F:WTCU]CUR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$symbol",[F:WTCU]CURSYM)
  If int(val([F:WTCU]CURFMT1))>0
   Local Char WPREC(10)
   Local Char WSCALE(10)
   WPREC=num$(int(val([F:WTCU]CURFMT1)))
   WSCALE=num$(int(10*(val([F:WTCU]CURFMT1)-int(val([F:WTCU]CURFMT1)))))
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$precision",WPREC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("CUR","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTCU]
Endif
Return


####################################################################
# 15 : SUBACC Recurring account ( Field GAC 15)
####################################################################

$SET_SUBACC
If [L]_AOLDVAL<>this.SUBACC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SUBACC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SUBACC
 Gosub PROPAGATE_SUBACC
Endif
Return

$INIT_SUBACC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SUBACC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SUBACC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SUBACC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SUBACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SUBACC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SUBACC
[L]CURPRO = "SUBACC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SUBACC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SUBACC
[L]CURPRO = "SUBACC"
If vireblc(this.SUBACC,2)<>vireblc(format$("K:15X",this.SUBACC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SUBACC
[L]CURPRO = "SUBACC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SUBACC
[L]CURPRO = "SUBACC"
If vireblc(this.SUBACC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGAC.ACTRLREF(this,"SUBACC",this.SUBACC,this.COA,this.SUBACC,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SUBACC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_SUBACC
this.isReadonly = 0
[L]CURPRO = "SUBACC"
Gosub _LNKPRO_SUBACC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SUBACC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SUBACC"
$_LNKPRO_SUBACC
If vireblc(this.SUBACC,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.COA;this.SUBACC
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SUBACC","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SUBACC","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return


####################################################################
# 16 : SUBBPR Recurring BP ( Field BPR 15)
####################################################################

$SET_SUBBPR
If [L]_AOLDVAL<>this.SUBBPR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SUBBPR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SUBBPR
 Gosub PROPAGATE_SUBBPR
Endif
Return

$INIT_SUBBPR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SUBBPR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SUBBPR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SUBBPR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SUBBPR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SUBBPR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SUBBPR
[L]CURPRO = "SUBBPR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SUBBPR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SUBBPR
[L]CURPRO = "SUBBPR"
If vireblc(this.SUBBPR,2)<>vireblc(format$("K:15c",this.SUBBPR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SUBBPR
[L]CURPRO = "SUBBPR"
If vireblc(this.SUBBPR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPR.ACTRLREF(this,"SUBBPR",this.SUBBPR,this.SUBBPR,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SUBBPR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SUBBPR
[L]CURPRO = "SUBBPR"
Return

$PROPAGATE_SUBBPR
this.isReadonly = 0
[L]CURPRO = "SUBBPR"
Gosub _LNKPRO_SUBBPR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SUBBPR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SUBBPR"
$_LNKPRO_SUBBPR
If vireblc(this.SUBBPR,2)<>""
 # Link BPARTNER
 Local File BPARTNER [WBPR]
 Read [F:WBPR]BPR0 = this.SUBBPR
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("SUBBPR","$title",[F:WBPR]BPRSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("SUBBPR","$description",[F:WBPR]BPRNAM)
 Endif
 LogicClose File [WBPR]
Endif
Return


####################################################################
# 18 : FLGUOM Unit of work flag ( Field Local menu number 1)
####################################################################

$SET_FLGUOM
If [L]_AOLDVAL<>this.FLGUOM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGUOM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGUOM
 Gosub PROPAGATE_FLGUOM
Endif
Return

$INIT_FLGUOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGUOM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGUOM=0 and fmet this.AGETATTRIBUTE("FLGUOM","$isMandatory")="true"
 this.FLGUOM = 1
Endif
Return
 
$CONTROL_FLGUOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGUOM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGUOM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGUOM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGUOM
[L]CURPRO = "FLGUOM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGUOM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGUOM
[L]CURPRO = "FLGUOM"
If this.FLGUOM<0 or this.FLGUOM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGUOM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGUOM
[L]CURPRO = "FLGUOM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGUOM
[L]CURPRO = "FLGUOM"
Return

$PROPAGATE_FLGUOM
this.isReadonly = 0
[L]CURPRO = "FLGUOM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGUOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGUOM"
$_LNKPRO_FLGUOM
Return


####################################################################
# 19 : UOM Nonfinancial unit ( Field UOM 3)
####################################################################

$SET_UOM
If [L]_AOLDVAL<>this.UOM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UOM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UOM
 Gosub PROPAGATE_UOM
Endif
Return

$INIT_UOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UOM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UOM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UOM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UOM                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UOM
[L]CURPRO = "UOM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UOM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UOM
[L]CURPRO = "UOM"
If vireblc(this.UOM,2)<>vireblc(format$("K:3X",this.UOM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UOM
[L]CURPRO = "UOM"
If vireblc(this.UOM,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPUOM.ACTRLREF(this,"UOM",this.UOM,this.UOM,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.UOM<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UOM
[L]CURPRO = "UOM"
Return

$PROPAGATE_UOM
this.isReadonly = 0
[L]CURPRO = "UOM"
Gosub _LNKPRO_UOM
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UOM"
$_LNKPRO_UOM
If vireblc(this.UOM,2)<>""
 # Link TABUNIT
 Local File TABUNIT [WTUN]
 Read [F:WTUN]TUN0 = this.UOM
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UOM","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=[F:WTUN]UOM & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UOM","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  [L]ASTATUS = fmet this.ASETATTRIBUTE("UOM","$symbol",[F:WTUN]UOMSYM)
  If int([WTUN]UOMDEC)>0
   Local Char WSCALE(10)
   WSCALE=num$([F:WTUN]UOMDEC)
   [L]ASTATUS = fmet this.ASETATTRIBUTE("UOM","$scale",WSCALE)
  Endif
 Endif
 LogicClose File [WTUN]
Endif
Return


####################################################################
# 20 : VALUOM Default value ( Field MD4 0)
####################################################################

$SET_VALUOM
If [L]_AOLDVAL<>this.VALUOM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VALUOM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VALUOM
 Gosub PROPAGATE_VALUOM
Endif
Return

$INIT_VALUOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VALUOM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VALUOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VALUOM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VALUOM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VALUOM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VALUOM
[L]CURPRO = "VALUOM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VALUOM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VALUOM
[L]CURPRO = "VALUOM"
Return

$_AOTHERS_VALUOM
[L]CURPRO = "VALUOM"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD4(this,"VALUOM",this.VALUOM,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VALUOM
[L]CURPRO = "VALUOM"
Return

$PROPAGATE_VALUOM
this.isReadonly = 0
[L]CURPRO = "VALUOM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VALUOM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VALUOM"
$_LNKPRO_VALUOM
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD4(this,"VALUOM",this.VALUOM,[L]AFORMAT,this.CUR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("VALUOM","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 21 : ENAFLG Active in selection ( Field Local menu number 1)
####################################################################

$SET_ENAFLG
If [L]_AOLDVAL<>this.ENAFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ENAFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ENAFLG
 Gosub PROPAGATE_ENAFLG
Endif
Return

$INIT_ENAFLG
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ENAFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ENAFLG=0 and fmet this.AGETATTRIBUTE("ENAFLG","$isMandatory")="true"
 this.ENAFLG = 1
Endif
Return
 
$CONTROL_ENAFLG
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ENAFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ENAFLG
[L]CURPRO = "ENAFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ENAFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ENAFLG
[L]CURPRO = "ENAFLG"
If this.ENAFLG<0 or this.ENAFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ENAFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ENAFLG
[L]CURPRO = "ENAFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ENAFLG
[L]CURPRO = "ENAFLG"
Return

$PROPAGATE_ENAFLG
this.isReadonly = 0
[L]CURPRO = "ENAFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ENAFLG
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ENAFLG"
$_LNKPRO_ENAFLG
Return


####################################################################
# 22 : ACS Access code ( Field ACS 10)
####################################################################

$SET_ACS
If [L]_AOLDVAL<>this.ACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACS
 Gosub PROPAGATE_ACS
Endif
Return

$INIT_ACS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACS
[L]CURPRO = "ACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>vireblc(format$("KTD:10B",this.ACS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACS.ACTRLREF(this,"ACS",this.ACS,this.ACS,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACS
[L]CURPRO = "ACS"
Return

$PROPAGATE_ACS
this.isReadonly = 0
[L]CURPRO = "ACS"
Gosub _LNKPRO_ACS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ACS"
$_LNKPRO_ACS
If vireblc(this.ACS,2)<>""
 # Link ACCCOD
 Local File ACCCOD [WACS]
 Read [F:WACS]ACS0 = this.ACS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ACCCOD" & ZONE="DESACC" & IDENT1=[F:WACS]CODACC & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WACS]
Endif
Return


####################################################################
# 23 : FCY Company/Site ( Field CFY 5)
####################################################################

$SET_FCY
If [L]_AOLDVAL<>this.FCY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FCY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FCY
 Gosub PROPAGATE_FCY
Endif
Return

$INIT_FCY
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FCY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FCY
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FCY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FCY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FCY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FCY
[L]CURPRO = "FCY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FCY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FCY
[L]CURPRO = "FCY"
If vireblc(this.FCY,2)<>vireblc(format$("K:5c",this.FCY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FCY
[L]CURPRO = "FCY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FCY
[L]CURPRO = "FCY"
Return

$PROPAGATE_FCY
this.isReadonly = 0
[L]CURPRO = "FCY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FCY
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FCY"
$_LNKPRO_FCY
Return


####################################################################
# 24 : VLYSTR Validity start date ( Field D)
####################################################################

$SET_VLYSTR
If [L]_AOLDVAL<>this.VLYSTR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VLYSTR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VLYSTR
 Gosub PROPAGATE_VLYSTR
Endif
Return

$INIT_VLYSTR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VLYSTR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VLYSTR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VLYSTR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VLYSTR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VLYSTR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VLYSTR
[L]CURPRO = "VLYSTR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VLYSTR=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VLYSTR
[L]CURPRO = "VLYSTR"
Return

$_AOTHERS_VLYSTR
[L]CURPRO = "VLYSTR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VLYSTR
[L]CURPRO = "VLYSTR"
Return

$PROPAGATE_VLYSTR
this.isReadonly = 0
[L]CURPRO = "VLYSTR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VLYSTR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VLYSTR"
$_LNKPRO_VLYSTR
Return


####################################################################
# 25 : VLYEND Validity end date ( Field D)
####################################################################

$SET_VLYEND
If [L]_AOLDVAL<>this.VLYEND
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VLYEND
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VLYEND
 Gosub PROPAGATE_VLYEND
Endif
Return

$INIT_VLYEND
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VLYEND"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VLYEND
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VLYEND"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VLYEND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VLYEND                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VLYEND
[L]CURPRO = "VLYEND"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VLYEND=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VLYEND
[L]CURPRO = "VLYEND"
Return

$_AOTHERS_VLYEND
[L]CURPRO = "VLYEND"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VLYEND
[L]CURPRO = "VLYEND"
Return

$PROPAGATE_VLYEND
this.isReadonly = 0
[L]CURPRO = "VLYEND"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VLYEND
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VLYEND"
$_LNKPRO_VLYEND
Return


####################################################################
# 26 : AUZ Restriction code ( Field Miscellaneous table number)
####################################################################

$SET_AUZ
If [L]_AOLDVAL<>this.AUZ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUZ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUZ
 Gosub PROPAGATE_AUZ
Endif
Return

$INIT_AUZ
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "AUZ"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"AUZ",this.AUZ,321)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUZ
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "AUZ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUZ                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUZ                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUZ
[L]CURPRO = "AUZ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.AUZ,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUZ
[L]CURPRO = "AUZ"
If vireblc(this.AUZ,2)<>vireblc(format$("K:20B",this.AUZ),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_AUZ
[L]CURPRO = "AUZ"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"AUZ",this.AUZ,321,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUZ
[L]CURPRO = "AUZ"
Return

$PROPAGATE_AUZ
this.isReadonly = 0
[L]CURPRO = "AUZ"
Gosub _LNKPRO_AUZ
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUZ
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "AUZ"
$_LNKPRO_AUZ
If vireblc(this.AUZ,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 321;this.AUZ
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("AUZ","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("AUZ","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 27 : COANBR Plan no. ( Field C 2)
####################################################################

$SET_COANBR
If [L]_AOLDVAL<>this.COANBR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COANBR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COANBR
 Gosub PROPAGATE_COANBR
Endif
Return

$INIT_COANBR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "COANBR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COANBR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "COANBR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COANBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COANBR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COANBR
[L]CURPRO = "COANBR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.COANBR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COANBR
[L]CURPRO = "COANBR"
Return

$_AOTHERS_COANBR
[L]CURPRO = "COANBR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COANBR
[L]CURPRO = "COANBR"
Return

$PROPAGATE_COANBR
this.isReadonly = 0
[L]CURPRO = "COANBR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COANBR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "COANBR"
$_LNKPRO_COANBR
Return


####################################################################
# 29 : FLGVAT Tax management ( Field Local menu number 608)
####################################################################

$SET_FLGVAT
If [L]_AOLDVAL<>this.FLGVAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGVAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGVAT
 Gosub PROPAGATE_FLGVAT
Endif
Return

$INIT_FLGVAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGVAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGVAT=0 and fmet this.AGETATTRIBUTE("FLGVAT","$isMandatory")="true"
 this.FLGVAT = 1
Endif
Return
 
$CONTROL_FLGVAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGVAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGVAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGVAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGVAT
[L]CURPRO = "FLGVAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGVAT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGVAT
[L]CURPRO = "FLGVAT"
If this.FLGVAT<0 or this.FLGVAT>len(mess(0,608,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"608 ->"-num$(this.FLGVAT)-mess(99,123,1)):  Return : # Local menu "608 -> Invalid option
Endif
Return

$_AOTHERS_FLGVAT
[L]CURPRO = "FLGVAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGVAT
[L]CURPRO = "FLGVAT"
Return

$PROPAGATE_FLGVAT
this.isReadonly = 0
[L]CURPRO = "FLGVAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGVAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGVAT"
$_LNKPRO_FLGVAT
Return


####################################################################
# 30 : VATIPT Tax allocation ( Field Local menu number 609)
####################################################################

$SET_VATIPT
If [L]_AOLDVAL<>this.VATIPT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VATIPT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VATIPT
 Gosub PROPAGATE_VATIPT
Endif
Return

$INIT_VATIPT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VATIPT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VATIPT=0 and fmet this.AGETATTRIBUTE("VATIPT","$isMandatory")="true"
 this.VATIPT = 1
Endif
Return
 
$CONTROL_VATIPT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VATIPT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VATIPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VATIPT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VATIPT
[L]CURPRO = "VATIPT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VATIPT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VATIPT
[L]CURPRO = "VATIPT"
If this.VATIPT<0 or this.VATIPT>len(mess(0,609,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"609 ->"-num$(this.VATIPT)-mess(99,123,1)):  Return : # Local menu "609 -> Invalid option
Endif
Return

$_AOTHERS_VATIPT
[L]CURPRO = "VATIPT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VATIPT
[L]CURPRO = "VATIPT"
Return

$PROPAGATE_VATIPT
this.isReadonly = 0
[L]CURPRO = "VATIPT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VATIPT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "VATIPT"
$_LNKPRO_VATIPT
Return




