#<AdxTL>@(#)0.0.0.0 $Revision$Class Main product
# Supervisor
## ACLA-CLASSE ## PJMTSKITM
# 2018-08-27 12:40:45 182

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "PJMTSKITM_CSTD"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.NBTRT = 1
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Copy
$COPY
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "COPY" : [L]ACTION = "COPY" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Sales orders
$SUM_SOQ_QTYSTU
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SUM_SOQ_QTYSTU" : [L]ACTION = "SUM_SOQ_QTYSTU" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Update ORDERS
$WIP
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "WIP" : [L]ACTION = "WIP" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0PJMTSKITM
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0PJMTSKITM
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0PJMTSKITM
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0PJMTSKITM
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
# RICH MEDIA
####################################################################
$AREAD_CLB
Case [L]_PRONAME
 When "ITTDESTEX"
  If fmet this.AGETATTRIBUTE("ITTDESTEX","$isLoaded")<>"true"
   Gosub READ_CLB_ITTDESTEX
  Else
   [L]_CLB = this.ITTDESTEX
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("ITTDESTEX","$contentType","text/plain")
   [L]_CNT = "text/plain"
  Endif
 When "ITTCOMTEX"
  If fmet this.AGETATTRIBUTE("ITTCOMTEX","$isLoaded")<>"true"
   Gosub READ_CLB_ITTCOMTEX
  Else
   [L]_CLB = this.ITTCOMTEX
  Endif
  If [L]_CNT=''
   [L]ASTATUS = fmet this.ASETATTRIBUTE("ITTCOMTEX","$contentType","text/plain")
   [L]_CNT = "text/plain"
  Endif
Endcase
Return

$READ_CLB_ITTDESTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WPJCB]CODBLB = [L]_KEYVALTAB(1)
[F:WPJCB]IDENT1 = [L]_KEYVALTAB(2)
[F:WPJCB]IDENT2 = [L]_KEYVALTAB(3)
[F:WPJCB]IDENT3 = [L]_KEYVALTAB(4)
[F:WPJCB]IDENT4 = [L]_KEYVALTAB(5)
Read [WPJCB] =
If !fstat
 [L]_CLB = [F:WPJCB]CLOB
Endif
LogicClose File [WPJCB]
Return

$READ_EXI_ITTDESTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WPJCB]CODBLB = "PJMTSKITM"
[F:WPJCB]IDENT1 = "ITTDESTEX"
[F:WPJCB]IDENT2 = this.KEYCONCAT
[F:WPJCB]IDENT3 = AVOID.ACHAR
[F:WPJCB]IDENT4 = AVOID.ACHAR
Look [WPJCB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WPJCB]
Return

$READ_CLB_ITTCOMTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Raz [L]_CLB
Raz [L]_CNT
Gosub DECODE_KEYVAL From ASYRLOB
[F:WPJCB]CODBLB = [L]_KEYVALTAB(1)
[F:WPJCB]IDENT1 = [L]_KEYVALTAB(2)
[F:WPJCB]IDENT2 = [L]_KEYVALTAB(3)
[F:WPJCB]IDENT3 = [L]_KEYVALTAB(4)
[F:WPJCB]IDENT4 = [L]_KEYVALTAB(5)
Read [WPJCB] =
If !fstat
 [L]_CLB = [F:WPJCB]CLOB
Endif
LogicClose File [WPJCB]
Return

$READ_EXI_ITTCOMTEX
If this.ACTX.AFOLDER="" | this.ACTX.AFOLDER=nomap
Local File PJMCLOB [WPJCB]
Else
Local File =this.ACTX.AFOLDER+".PJMCLOB" [WPJCB]
Endif
Local Tinyint _EXI : [L]_EXI=1
[F:WPJCB]CODBLB = "PJMTSKITM"
[F:WPJCB]IDENT1 = "ITTCOMTEX"
[F:WPJCB]IDENT2 = this.KEYCONCAT
[F:WPJCB]IDENT3 = AVOID.ACHAR
[F:WPJCB]IDENT4 = AVOID.ACHAR
Look [WPJCB] =
If fstat
 [L]_EXI=0
Endif
LogicClose File [WPJCB]
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "OPPNUM"
this.AKEYS(2) = "TASCOD"
this.AKEYS(3) = "ITTSEQ"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



