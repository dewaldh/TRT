#<AdxTL>@(#)0.0.0.0 $Revision$Class Fiscal years
# Supervisor
## CRUD-CLASSE ## FISCALYEAR
# 2018-08-27 12:31:40 999


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File FISCALYEAR [FIY_]

If !SILENCE : Call TRACE("2 --> Local Instance C_FISCALYEAR") From ASYRCOM : Endif
Local Instance FISCALYEAR Using C_FISCALYEAR

If !SILENCE : Call TRACE("3 --> New Instance C_FISCALYEAR") From ASYRCOM : Endif
FISCALYEAR = NewInstance C_FISCALYEAR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [FIY_]FIY0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of FISCALYEAR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet FISCALYEAR.AREAD([FIY_]CPY,[FIY_]LEDTYP,[FIY_]FIYNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("FISCALYEAR.CPY ="-num$(FISCALYEAR.CPY)) From ASYRCOM
 Call TRACE("FISCALYEAR.LEDTYP ="-num$(FISCALYEAR.LEDTYP)) From ASYRCOM
 Call TRACE("FISCALYEAR.FIYNUM ="-num$(FISCALYEAR.FIYNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(FISCALYEAR.AKEYS)
  Call TRACE("-"-num$(I)-":"-FISCALYEAR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [FIY_]
FreeGroup FISCALYEAR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(FISCALYEAR,ACLE,ASTATUS,_ETAG)
Variable Instance FISCALYEAR Using C_FISCALYEAR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CPY(5)
Local Tinyint _LEDTYP
Local Shortint _FIYNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CPY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEDTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FIYNUM = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File FISCALYEAR [FIY]
Default File [F:FIY]
Read [F:FIY]FIY0 = [L]_CPY;[L]_LEDTYP;[L]_FIYNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:FIY]UPDTICK)>0
 [L]_ETAG = num$([F:FIY]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(FISCALYEAR,ACLE,ASTATUS)
Variable Instance FISCALYEAR Using C_FISCALYEAR
Value Char ACLE
Variable Integer ASTATUS
Local Char _CPY(5)
Local Tinyint _LEDTYP
Local Shortint _FIYNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CPY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEDTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FIYNUM = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet FISCALYEAR.AREAD([L]_CPY,[L]_LEDTYP,[L]_FIYNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(FISCALYEAR,_CPY,_LEDTYP,_FIYNUM,ASTATUS)
Variable Instance FISCALYEAR Using C_FISCALYEAR
Value Char _CPY
Value Tinyint _LEDTYP
Value Shortint _FIYNUM
Variable Integer ASTATUS

If FISCALYEAR = null : End : Endif

Gosub AVARIABLES From WMC00FISCALYEAR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If FISCALYEAR.APARENT=null
 [L]A_I = FISCALYEAR.freeSnapshot
 FISCALYEAR.snapshotEnabled = 0
 FISCALYEAR.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & FISCALYEAR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet FISCALYEAR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If FISCALYEAR.APARENT=null
 FISCALYEAR.snapshotEnabled = 1
 FISCALYEAR.setAccessorEnabled = 1
Endif
LogicClose File [FIY]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet FISCALYEAR._ACTION_PARAM("AREAD_BEFORE",[L]_CPY,[L]_LEDTYP,[L]_FIYNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:FIY]
Read [F:FIY]FIY0 = [L]_CPY;[L]_LEDTYP;[L]_FIYNUM
If fstat
[L]A_ERROR = [L]_CPY+"~"+num$([L]_LEDTYP)+"~"+num$([L]_FIYNUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(FISCALYEAR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:FIY]AUUID)>0 & [F:FIY]AUUID=NullUuid
 [F:FIY]AUUID = getUuid
Endif
SetInstance FISCALYEAR With [F:FIY]
FISCALYEAR.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet FISCALYEAR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



