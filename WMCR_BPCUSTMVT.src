#<AdxTL>@(#)0.0.0.0 $Revision$Class Customer transactions
# Supervisor
## CRUD-CLASSE ## BPCUSTMVT
# 2018-08-27 12:25:35 938


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BPCUSTMVT [MVC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_BPCUSTMVT") From ASYRCOM : Endif
Local Instance BPCUSTMVT Using C_BPCUSTMVT

If !SILENCE : Call TRACE("3 --> New Instance C_BPCUSTMVT") From ASYRCOM : Endif
BPCUSTMVT = NewInstance C_BPCUSTMVT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [MVC_]MVC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BPCUSTMVT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT.AREAD([MVC_]BPCRSK,[MVC_]CPY,[MVC_]BPCNUM,[MVC_]CUR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BPCUSTMVT.BPCRSK ="-num$(BPCUSTMVT.BPCRSK)) From ASYRCOM
 Call TRACE("BPCUSTMVT.CPY ="-num$(BPCUSTMVT.CPY)) From ASYRCOM
 Call TRACE("BPCUSTMVT.BPCNUM ="-num$(BPCUSTMVT.BPCNUM)) From ASYRCOM
 Call TRACE("BPCUSTMVT.CUR ="-num$(BPCUSTMVT.CUR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BPCUSTMVT.AKEYS)
  Call TRACE("-"-num$(I)-":"-BPCUSTMVT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [MVC_]
FreeGroup BPCUSTMVT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BPCUSTMVT,ACLE,ASTATUS,_ETAG)
Variable Instance BPCUSTMVT Using C_BPCUSTMVT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _BPCRSK(15)
Local Char _CPY(5)
Local Char _BPCNUM(15)
Local Char _CUR(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCRSK = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPY = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BPCNUM = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_CUR = num$([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File BPCUSTMVT [MVC]
Default File [F:MVC]
Read [F:MVC]MVC0 = [L]_BPCRSK;[L]_CPY;[L]_BPCNUM;[L]_CUR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:MVC]UPDTICK)>0
 [L]_ETAG = num$([F:MVC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BPCUSTMVT,ACLE,ASTATUS)
Variable Instance BPCUSTMVT Using C_BPCUSTMVT
Value Char ACLE
Variable Integer ASTATUS
Local Char _BPCRSK(15)
Local Char _CPY(5)
Local Char _BPCNUM(15)
Local Char _CUR(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_BPCRSK = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_CPY = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BPCNUM = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_CUR = num$([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT.AREAD([L]_BPCRSK,[L]_CPY,[L]_BPCNUM,[L]_CUR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BPCUSTMVT,_BPCRSK,_CPY,_BPCNUM,_CUR,ASTATUS)
Variable Instance BPCUSTMVT Using C_BPCUSTMVT
Value Char _BPCRSK
Value Char _CPY
Value Char _BPCNUM
Value Char _CUR
Variable Integer ASTATUS

If BPCUSTMVT = null : End : Endif

Gosub AVARIABLES From WMC00BPCUSTMVT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BPCUSTMVT.APARENT=null
 [L]A_I = BPCUSTMVT.freeSnapshot
 BPCUSTMVT.snapshotEnabled = 0
 BPCUSTMVT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & BPCUSTMVT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If BPCUSTMVT.APARENT=null
 BPCUSTMVT.snapshotEnabled = 1
 BPCUSTMVT.setAccessorEnabled = 1
Endif
LogicClose File [MVC]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT._ACTION_PARAM("AREAD_BEFORE",[L]_BPCRSK,[L]_CPY,[L]_BPCNUM,[L]_CUR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT._ACTION_PARAM("AREAD",[L]_BPCRSK,[L]_CPY,[L]_BPCNUM,[L]_CUR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
BPCUSTMVT.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:MVC]NYTBILC([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  BPCUSTMVT.C_NYTBILC(A_NEWCOL) = NewInstance  C_BPCUSTMVT_C_NYTBILC(BPCUSTMVT.ACTX,NullUuid,[L]A_I,BPCUSTMVT,"C_NYTBILC") AllocGroup BPCUSTMVT
  BPCUSTMVT.C_NYTBILC(A_NEWCOL).NYTBILC = [F:MVC]NYTBILC([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT.C_NYTBILC(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:MVC]NYTBILL([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  BPCUSTMVT.C_NYTBILL(A_NEWCOL) = NewInstance  C_BPCUSTMVT_C_NYTBILL(BPCUSTMVT.ACTX,NullUuid,[L]A_I,BPCUSTMVT,"C_NYTBILL") AllocGroup BPCUSTMVT
  BPCUSTMVT.C_NYTBILL(A_NEWCOL).NYTBILL = [F:MVC]NYTBILL([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT.C_NYTBILL(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 If ([F:MVC]NYTBILR([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  BPCUSTMVT.C_NYTBILR(A_NEWCOL) = NewInstance  C_BPCUSTMVT_C_NYTBILR(BPCUSTMVT.ACTX,NullUuid,[L]A_I,BPCUSTMVT,"C_NYTBILR") AllocGroup BPCUSTMVT
  BPCUSTMVT.C_NYTBILR(A_NEWCOL).NYTBILR = [F:MVC]NYTBILR([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT.C_NYTBILR(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet BPCUSTMVT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



