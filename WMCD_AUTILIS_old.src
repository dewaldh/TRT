#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Sage X3 supervisor
## CRUD-CLASSE ## AUTILIS
# 2018-06-20 06:35:12 785


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(AUTILIS,ASTATUS)
Variable Instance AUTILIS Using C_AUTILIS
Variable Integer ASTATUS

If AUTILIS = null : End : Endif

Gosub _AVARIABLES From WMC00AUTILIS

[L]A_STRSITE = ""
[L]A_STRACC = AUTILIS.ACSUSR
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_AUTILIS

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(AUTILIS,ASTATUS)
Variable Instance AUTILIS Using C_AUTILIS
Variable Integer ASTATUS

If AUTILIS = null : End : Endif

Gosub AVARIABLES From WMC00AUTILIS
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = AUTILIS.ACSUSR
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_AUTILIS
Else
 Gosub ADELETE_AUTILIS
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(AUTILIS,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If AUTILIS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
AUTILIS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(AUTILIS.FNCCOL)
 If AUTILIS.FNCCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.FNCCOL([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
A_N2=1
If AUTILIS.BPA(A_N2) <> null
& and AUTILIS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AUTILIS.BID) : # BID -- 3
 If AUTILIS.BID(A_N2) <> null
& and AUTILIS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER
A_N2=1
If AUTILIS.BPA(A_N2) <> null
& and AUTILIS.BPA(A_N2).ASTALIN<>[V]CST_ANEWDEL
Endif
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(AUTILIS.BID) : # BID -- 3
 If AUTILIS.BID(A_N2) <> null
& and AUTILIS.BID(A_N2).ASTALIN<>[V]CST_ANEWDEL
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(AUTILIS.FNCCOL)
 If AUTILIS.FNCCOL([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.FNCCOL([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_AUTILIS
Trbegin [F:AUS]
 Gosub ADELETE_AUTILIS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_AUTILIS
[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

#-----------------------------------------------------#
A_N2=1
If AUTILIS.BPA(A_N2) <> null
Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(AUTILIS.BID)
 If AUTILIS.BID(A_N2) <> null
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(AUTILIS,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( AUTILIS.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( AUTILIS.ASTALIN,[V]CST_AUPD) & 
& fmet AUTILIS.AGETATTRIBUTE("AUSPIC","$isLoaded")="true")
[L]ASTATUS = func WMC00AUTILIS._MAJSQL_AUTILIS_AUSPIC(AUTILIS,AUTILIS.AUSPIC)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00AUTILIS._MAJSQL_AUTILIS(AUTILIS))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet AUTILIS.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If AUTILIS.snapshotEnabled=1
 [L]A_RETIK = AUTILIS.revertUpdTick
Endif
[L]ASTATUS = max(fmet AUTILIS.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



