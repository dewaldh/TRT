#<AdxTL>@(#)0.0.0.0 $Revision$Class Quotes
# Supervisor
## CRUD-CLASSE ## SQHBPCM
# 2018-08-27 13:33:37 636


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SQUOTE [SQH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SQHBPCM") From ASYRCOM : Endif
Local Instance SQHBPCM Using R_SQHBPCM

If !SILENCE : Call TRACE("3 --> New Instance R_SQHBPCM") From ASYRCOM : Endif
SQHBPCM = NewInstance R_SQHBPCM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SQH_]SQH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SQUOTE") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SQHBPCM.AREAD([SQH_]SQHNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SQHBPCM.SQH.SQHNUM ="-num$(SQHBPCM.SQH.SQHNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SQHBPCM.SQH.AKEYS)
  Call TRACE("-"-num$(I)-":"-SQHBPCM.SQH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SQH_]
FreeGroup SQHBPCM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SQHBPCM,ACLE,ASTATUS,_ETAG)
Variable Instance SQHBPCM Using R_SQHBPCM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SQHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SQHNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File SQUOTE [SQH]
Default File [F:SQH]
Read [F:SQH]SQH0 = [L]_SQHNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SQH]UPDTICK)>0
 [L]_ETAG = num$([F:SQH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SQHBPCM,ACLE,ASTATUS)
Variable Instance SQHBPCM Using R_SQHBPCM
Value Char ACLE
Variable Integer ASTATUS
Local Char _SQHNUM(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SQHNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SQHBPCM.AREAD([L]_SQHNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SQHBPCM,_SQHNUM,ASTATUS)
Variable Instance SQHBPCM Using R_SQHBPCM
Value Char _SQHNUM
Variable Integer ASTATUS

If SQHBPCM = null : End : Endif

Gosub AVARIABLES From WMR00SQHBPCM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SQHBPCM.APARENT=null
 [L]A_I = SQHBPCM.freeSnapshot
 SQHBPCM.snapshotEnabled = 0
 SQHBPCM.setAccessorEnabled = 0
Endif

If fmet SQHBPCM.ACTX.AGETAFCRIGHT(SQHBPCM,"GESSQH",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SQH]
Read [F:SQH]SQH0 = [L]_SQHNUM
If fstat
[L]A_ERROR = [L]_SQHNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SQHBPCM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = [F:SQH]SALFCY
[L]A_STRACC = ""
If fmet SQHBPCM.ACTX.AGETAFCRIGHTR(SQHBPCM,"GESSQH",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SQHBPCM.ACTX.ASTACRITROLE(SQHBPCM,[L]_SQHNUM
& ,"SQH","SQH",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SQHBPCM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SQHBPCM.SQH.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SQHBPCM.SQH.AREAD([L]_SQHNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SQHBPCM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SQHBPCM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SQHBPCM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SQHBPCM.APARENT=null
 SQHBPCM.snapshotEnabled = 1
 SQHBPCM.setAccessorEnabled = 1
Endif
LogicClose File [SQH] ,[SQD] ,[SVV] ,[SVF] ,[CALSQD] ,[CALSVF]
End



