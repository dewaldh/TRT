#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SSFIPOS 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:14:29"
A_USER  = "ADMIN"
A_STAMP = "20180828001429"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBFAC"
  If [M]NBFAC=0
  Endif
 When "NBFACC"
  If [M]NBFACC=0
  Endif
 When "NBFACO"
  If [M]NBFACO=0
  Endif
 When "NBFACD"
  If [M]NBFACD=0
  Endif
 When "NBFACI"
  If [M]NBFACI=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SSFIPOS [SFIP]
Gosub HORODAT
Local Inpbox "SSFIPOS" From GFONCTION At A_STAMP With A_WINDPREV Mask [SFIP] As [SIM_]
Grizo [SFIP]5
Grizo [SFIP]10
Grizo [SFIP]15
Grizo [SFIP]20
Grizo [SFIP]25
Grizo [SFIP]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SFIP]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=112 : Y1(1)=3 : Y2(1)=15
X1(2)=1 : X2(2)=28 : Y1(2)=16 : Y2(2)=28
X1(3)=29 : X2(3)=56 : Y1(3)=16 : Y2(3)=28
X1(4)=57 : X2(4)=84 : Y1(4)=16 : Y2(4)=28
X1(5)=85 : X2(5)=112 : Y1(5)=16 : Y2(5)=28
Return

$ON_SOC
Onevent CONTROL Call C_SOC(zc) From W1SSFIPOS
Onevent AFTER_CHANGE Gosub AMM_SOC From W1SSFIPOS
Onevent BEFORE_INPUT Call AS_SOC(zc) From W1SSFIPOS
Return

Subprog AS_SOC(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3529,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_SOC(zc) From W1SSFIPOS
Onkey   2 Titled GBOUTS Call S_SOC(zc) From W1SSFIPOS
Onkey 144 Titled GBOUTP Call P_SOC(zc) From W1SSFIPOS
Onkey 146 Titled GBOUTA Call SA_SOC(zc) From W1SSFIPOS
Gosub _AFF
End

Subprog C_SOC(VALEUR)
Variable Char    VALEUR()
## Action ACONTCPY
Call CONTSOC(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "SOC" : GZNUM = 1343 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CPY","!A",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "SOC" : GZNUM = 1343 : Endif
Endif
Gosub _AFF
End

$AMM_SOC
Call AM_SOC(zc)
If !mkstat & GOBJET
 zoncou = "SOC" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_SOC(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_SOC(VALEUR) From TRTSFIPOS
If mkstat : GERR = 1 : GZONE = "SOC" : GZNUM = 1343 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZSOC)")>indice
 [M]SOC(indice) = VALEUR
 Affzo ZSOC(indice)
Endif
Gosub _AFF
End

Subprog S_SOC(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = "!A"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_SOC(VALEUR)
Variable Char    VALEUR()
Call OBJET("CPY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_SOC(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_SOC(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZSOC
Onevent BEFORE_AREA Gosub AV_ZSOC From W1SSFIPOS
Return

$AV_ZSOC
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]SOC(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_NBFAC
Onevent AFTER_LINE Call APRES_NBFAC From W1SSFIPOS
Return

Subprog APRES_NBFAC
Local Decimal BASPAG
## Action STD
Call APRES_NBFAC From TRTSFIPOS
If mkstat : End : Endif
Gosub _AFF
End

$ON_INVDTA
Return

$ON_DACBPC
Onevent BEFORE_INPUT Call AS_DACBPC(zc) From W1SSFIPOS
Onevent CONTROL Call C_DACBPC(zc) From W1SSFIPOS
Return

Subprog AS_DACBPC(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACBPC(VALEUR) From TRTSFIPOS
If mkstat=2
 [M]DACBPC(INDIC) = VALEUR
 Affzo DACBPC(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DACBPC(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DACBPC(VALEUR) From TRTSFIPOS
If mkstat : GERR = 1 : GZONE = "DACBPC" : GZNUM = 3662 : Endif
Gosub _AFF
End

$ON_DACORD
Onevent BEFORE_INPUT Call AS_DACORD(zc) From W1SSFIPOS
Onevent CONTROL Call C_DACORD(zc) From W1SSFIPOS
Return

Subprog AS_DACORD(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACORD(VALEUR) From TRTSFIPOS
If mkstat=2
 [M]DACORD(INDIC) = VALEUR
 Affzo DACORD(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DACORD(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DACORD(VALEUR) From TRTSFIPOS
If mkstat : GERR = 1 : GZONE = "DACORD" : GZNUM = 3312 : Endif
Gosub _AFF
End

$ON_DACDLV
Onevent BEFORE_INPUT Call AS_DACDLV(zc) From W1SSFIPOS
Onevent CONTROL Call C_DACDLV(zc) From W1SSFIPOS
Return

Subprog AS_DACDLV(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACDLV(VALEUR) From TRTSFIPOS
If mkstat=2
 [M]DACDLV(INDIC) = VALEUR
 Affzo DACDLV(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DACDLV(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DACDLV(VALEUR) From TRTSFIPOS
If mkstat : GERR = 1 : GZONE = "DACDLV" : GZNUM = 5852 : Endif
Gosub _AFF
End

$ON_DACINV
Onevent BEFORE_INPUT Call AS_DACINV(zc) From W1SSFIPOS
Onevent CONTROL Call C_DACINV(zc) From W1SSFIPOS
Return

Subprog AS_DACINV(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACINV(VALEUR) From TRTSFIPOS
If mkstat=2
 [M]DACINV(INDIC) = VALEUR
 Affzo DACINV(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_DACINV(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_DACINV(VALEUR) From TRTSFIPOS
If mkstat : GERR = 1 : GZONE = "DACINV" : GZNUM = 9784 : Endif
Gosub _AFF
End

$ON_PROCOD
Onevent INIT_AREA Call D_PROCOD(zc) From W1SSFIPOS
Return

Subprog D_PROCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PROCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INVFOOBRD
Return

$ON_INVDTACUS
Return

$ON_INVDTAORD
Return

$ON_INVDTADLV
Return

$ON_INVDTAINV
Return

$CHG_STY
Return


