#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHOVERHEAD OVERHEAD
# 2018-08-27 12:36:51 193

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","OVERHEAD","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File OVERHEAD [OVE]
Local File OVERHEAD [OVE_]
Local File ATEXTRA [AXX_1]
Local File ATEXTRA [AXX_2]
Local Char KEY_OVE(120)(1..3)
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [OVE]
LogicClose File [OVE_]
LogicClose File [AXX_1]
LogicClose File [AXX_2]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [OVE] With
& [OVE_]OVE0=[OVE]OVECOD,
& [F:AXX_1]AXX0 = "OVERHEAD";"OVEAXX";GACTX.LAN;[F:OVE]OVECOD;"",
& [F:AXX_2]AXX0 = "OVERHEAD";"OVESHOAXX";GACTX.LAN;[F:OVE]OVECOD;""
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [OVE] With
& [OVE_]OVE0=[OVE]OVECOD,
& [F:AXX_1]AXX0 = "OVERHEAD";"OVEAXX";GACTX.LAN;[F:OVE]OVECOD;"",
& [F:AXX_2]AXX0 = "OVERHEAD";"OVESHOAXX";GACTX.LAN;[F:OVE]OVECOD;""
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
#Create a new instance
INS = NewInstance C_OVERHEAD(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

CJ1=1
For CI1 = 0 To dim([F:OVE]OVENAT)-1
#Create a new instance
INS.L_OVENAT(CJ1) = NewInstance C_OVERHEAD_L_OVENAT(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
INS.L_OVENAT(CJ1).setaccessorEnabled = 0
 CJ1+=1
Next CI1
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE

SetInstance INS With [F:OVE]
FINS = 1
Call ASETTEXTRA(INS.AXX,INS.ALLOCGRP(),"OVEAXX",[F:AXX_1]TEXTE,GACTX.LAN) From ASYRSUB
Call ASETTEXTRA(INS.AXX,INS.ALLOCGRP(),"OVESHOAXX",[F:AXX_2]TEXTE,GACTX.LAN) From ASYRSUB
Local Integer OVENAT_MAX:OVENAT_MAX0
CJ1=1
For CI1 = 0 To dim([F:OVE]OVENAT)-1
 Break ([F:OVE]OVENAT(CI1)="" & [F:OVE]FORCODA(CI1)="" & [F:OVE]FORCODB(CI1)="" & [F:OVE]FORCODC(CI1)="" & [F:OVE]FORCODD(CI1)="")
 OVENAT_MAX+=1
 INS.L_OVENAT(CJ1).OVENAT=[F:OVE]OVENAT(CI1)
 INS.L_OVENAT(CJ1).FORCODA=[F:OVE]FORCODA(CI1)
 INS.L_OVENAT(CJ1).FORCODB=[F:OVE]FORCODB(CI1)
 INS.L_OVENAT(CJ1).FORCODC=[F:OVE]FORCODC(CI1)
 INS.L_OVENAT(CJ1).FORCODD=[F:OVE]FORCODD(CI1)
 CJ1+=1
Next CI1
[L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
Gosub ASEARCH_TO_JSON
Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"OVECOD":'          +'"'+escJson(INS.OVECOD)+'"'
Append ASND.DATA ,',"OVEDES":'         +'"'+escJson(INS.OVEDES)+'"'
Append ASND.DATA ,',"OVEAXX":'         
Append ASND.DATA ,'"'
Append ASND.DATA ,escJson(func ASYRSUB.AGETTEXTRA(INS.AXX,"OVEAXX",GACTX.LAN))
Append ASND.DATA ,'"'
Append ASND.DATA ,',"OVESHO":'         +'"'+escJson(INS.OVESHO)+'"'
Append ASND.DATA ,',"OVESHOAXX":'      
Append ASND.DATA ,'"'
Append ASND.DATA ,escJson(func ASYRSUB.AGETTEXTRA(INS.AXX,"OVESHOAXX",GACTX.LAN))
Append ASND.DATA ,'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"CREDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.CREDAT)
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,',"UPDDAT":'          + func ASYRSRH.DATE_TO_SYR(INS.UPDDAT)
IS1=""
CJ1=1
Append ASND.DATA ,',"L_OVENAT":['
For CI1=1 To OVENAT_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"OVENAT":'          +'"'+escJson(INS.L_OVENAT(CJ1).OVENAT)+'"'
 Append ASND.DATA ,',"FORCODA":'        +'"'+escJson(INS.L_OVENAT(CJ1).FORCODA)+'"'
 Append ASND.DATA ,',"FORCODB":'        +'"'+escJson(INS.L_OVENAT(CJ1).FORCODB)+'"'
 Append ASND.DATA ,',"FORCODC":'        +'"'+escJson(INS.L_OVENAT(CJ1).FORCODC)+'"'
 Append ASND.DATA ,',"FORCODD":'        +'"'+escJson(INS.L_OVENAT(CJ1).FORCODD)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:OVE]OVECOD"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From OVERHEAD_CSTD
Gosub METHODS From OVERHEAD_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="OVERHEAD" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"OVERHEAD")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"OVERHEAD")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,37456)+'"'
Append WCLOB,',"$url":"{$baseUrl}/OVERHEAD'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,37456)+' {$key}"'
Append WCLOB,',"$key":"{OVECOD}"'
Append WCLOB,',"$url":"{$baseUrl}/OVERHEAD('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'OVERHEAD.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"OVECOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1888)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"OVEDES":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"OVEAXX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,8)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"OVESHO":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4010)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"OVESHOAXX":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4010)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1322)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDDAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1326)+'"'
Append WCLOB,',"$type":"application/x-date"'
Append WCLOB,"}"
Append WCLOB,',"L_OVENAT":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":1'
Append WCLOB,',"$maxItems":6'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"OVENAT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,707)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"FORCODA":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6993)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"FORCODB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6993)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"FORCODC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6993)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"FORCODD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,6993)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/OVERHEAD('+"'"+'{$key}'+"'"+')?representation=OVERHEAD.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHOVERHEADB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHOVERHEADB
End RES


