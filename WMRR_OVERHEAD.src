#<AdxTL>@(#)0.0.0.0 $Revision$Class Overheads codes
# Supervisor
## CRUD-CLASSE ## OVERHEAD
# 2018-08-27 13:20:36 186


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File OVERHEAD [OVE_]

If !SILENCE : Call TRACE("2 --> Local Instance R_OVERHEAD") From ASYRCOM : Endif
Local Instance OVERHEAD Using R_OVERHEAD

If !SILENCE : Call TRACE("3 --> New Instance R_OVERHEAD") From ASYRCOM : Endif
OVERHEAD = NewInstance R_OVERHEAD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [OVE_]OVE0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of OVERHEAD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet OVERHEAD.AREAD([OVE_]OVECOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("OVERHEAD.OVE.OVECOD ="-num$(OVERHEAD.OVE.OVECOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(OVERHEAD.OVE.AKEYS)
  Call TRACE("-"-num$(I)-":"-OVERHEAD.OVE.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [OVE_]
FreeGroup OVERHEAD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(OVERHEAD,ACLE,ASTATUS,_ETAG)
Variable Instance OVERHEAD Using R_OVERHEAD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OVECOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OVECOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File OVERHEAD [OVE]
Default File [F:OVE]
Read [F:OVE]OVE0 = [L]_OVECOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:OVE]UPDTICK)>0
 [L]_ETAG = num$([F:OVE]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(OVERHEAD,ACLE,ASTATUS)
Variable Instance OVERHEAD Using R_OVERHEAD
Value Char ACLE
Variable Integer ASTATUS
Local Char _OVECOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OVECOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet OVERHEAD.AREAD([L]_OVECOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(OVERHEAD,_OVECOD,ASTATUS)
Variable Instance OVERHEAD Using R_OVERHEAD
Value Char _OVECOD
Variable Integer ASTATUS

If OVERHEAD = null : End : Endif

Gosub AVARIABLES From WMR00OVERHEAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If OVERHEAD.APARENT=null
 [L]A_I = OVERHEAD.freeSnapshot
 OVERHEAD.snapshotEnabled = 0
 OVERHEAD.setAccessorEnabled = 0
Endif

If fmet OVERHEAD.ACTX.AGETAFCRIGHT(OVERHEAD,"GESOVE",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:OVE]
Read [F:OVE]OVE0 = [L]_OVECOD
If fstat
[L]A_ERROR = [L]_OVECOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(OVERHEAD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet OVERHEAD.ACTX.AGETAFCRIGHTR(OVERHEAD,"GESOVE",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet OVERHEAD.ACTX.ASTACRITROLE(OVERHEAD,[L]_OVECOD
& ,"OVE","OVE",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet OVERHEAD.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

OVERHEAD.OVE.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet OVERHEAD.OVE.AREAD([L]_OVECOD))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet OVERHEAD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & OVERHEAD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet OVERHEAD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If OVERHEAD.APARENT=null
 OVERHEAD.snapshotEnabled = 1
 OVERHEAD.setAccessorEnabled = 1
Endif
LogicClose File [OVE]
End



