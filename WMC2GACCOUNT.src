#<AdxTL>@(#)0.0.0.0 $Revision$Class Accounts
# Supervisor
## ACLA-CLASSE ## GACCOUNT
# 2018-08-27 12:32:35 905

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 32 : ESDTRK Service provisions ( Field Local menu number 1)
####################################################################

$SET_ESDTRK
If [L]_AOLDVAL<>this.ESDTRK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ESDTRK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ESDTRK
 Gosub PROPAGATE_ESDTRK
Endif
Return

$INIT_ESDTRK
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ESDTRK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ESDTRK=0 and fmet this.AGETATTRIBUTE("ESDTRK","$isMandatory")="true"
 this.ESDTRK = 1
Endif
Return
 
$CONTROL_ESDTRK
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ESDTRK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ESDTRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ESDTRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ESDTRK
[L]CURPRO = "ESDTRK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ESDTRK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ESDTRK
[L]CURPRO = "ESDTRK"
If this.ESDTRK<0 or this.ESDTRK>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ESDTRK)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ESDTRK
[L]CURPRO = "ESDTRK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ESDTRK
[L]CURPRO = "ESDTRK"
Return

$PROPAGATE_ESDTRK
this.isReadonly = 0
[L]CURPRO = "ESDTRK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ESDTRK
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "ESDTRK"
$_LNKPRO_ESDTRK
Return


####################################################################
# 33 : SNSDEF Default sign ( Field Local menu number 610)
####################################################################

$SET_SNSDEF
If [L]_AOLDVAL<>this.SNSDEF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SNSDEF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SNSDEF
 Gosub PROPAGATE_SNSDEF
Endif
Return

$INIT_SNSDEF
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SNSDEF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SNSDEF=0 and fmet this.AGETATTRIBUTE("SNSDEF","$isMandatory")="true"
 this.SNSDEF = 1
Endif
Return
 
$CONTROL_SNSDEF
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SNSDEF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SNSDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SNSDEF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SNSDEF
[L]CURPRO = "SNSDEF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SNSDEF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SNSDEF
[L]CURPRO = "SNSDEF"
If this.SNSDEF<0 or this.SNSDEF>len(mess(0,610,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"610 ->"-num$(this.SNSDEF)-mess(99,123,1)):  Return : # Local menu "610 -> Invalid option
Endif
Return

$_AOTHERS_SNSDEF
[L]CURPRO = "SNSDEF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SNSDEF
[L]CURPRO = "SNSDEF"
Return

$PROPAGATE_SNSDEF
this.isReadonly = 0
[L]CURPRO = "SNSDEF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SNSDEF
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SNSDEF"
$_LNKPRO_SNSDEF
Return


####################################################################
# 34 : SNSBLC Balance sign ( Field Local menu number 610)
####################################################################

$SET_SNSBLC
If [L]_AOLDVAL<>this.SNSBLC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SNSBLC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SNSBLC
 Gosub PROPAGATE_SNSBLC
Endif
Return

$INIT_SNSBLC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SNSBLC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SNSBLC=0 and fmet this.AGETATTRIBUTE("SNSBLC","$isMandatory")="true"
 this.SNSBLC = 1
Endif
Return
 
$CONTROL_SNSBLC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SNSBLC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SNSBLC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SNSBLC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SNSBLC
[L]CURPRO = "SNSBLC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SNSBLC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SNSBLC
[L]CURPRO = "SNSBLC"
If this.SNSBLC<0 or this.SNSBLC>len(mess(0,610,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"610 ->"-num$(this.SNSBLC)-mess(99,123,1)):  Return : # Local menu "610 -> Invalid option
Endif
Return

$_AOTHERS_SNSBLC
[L]CURPRO = "SNSBLC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SNSBLC
[L]CURPRO = "SNSBLC"
Return

$PROPAGATE_SNSBLC
this.isReadonly = 0
[L]CURPRO = "SNSBLC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SNSBLC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "SNSBLC"
$_LNKPRO_SNSBLC
Return


####################################################################
# 35 : MTC Matchable ( Field Local menu number 1)
####################################################################

$SET_MTC
If [L]_AOLDVAL<>this.MTC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MTC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MTC
 Gosub PROPAGATE_MTC
Endif
Return

$INIT_MTC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "MTC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MTC=0 and fmet this.AGETATTRIBUTE("MTC","$isMandatory")="true"
 this.MTC = 1
Endif
Return
 
$CONTROL_MTC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "MTC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MTC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MTC                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MTC
[L]CURPRO = "MTC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MTC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MTC
[L]CURPRO = "MTC"
If this.MTC<0 or this.MTC>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.MTC)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_MTC
[L]CURPRO = "MTC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MTC
[L]CURPRO = "MTC"
Return

$PROPAGATE_MTC
this.isReadonly = 0
[L]CURPRO = "MTC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MTC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "MTC"
$_LNKPRO_MTC
Return


####################################################################
# 36 : CEN Summary reporting ( Field Local menu number 1)
####################################################################

$SET_CEN
If [L]_AOLDVAL<>this.CEN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CEN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CEN
 Gosub PROPAGATE_CEN
Endif
Return

$INIT_CEN
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CEN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CEN=0 and fmet this.AGETATTRIBUTE("CEN","$isMandatory")="true"
 this.CEN = 1
Endif
Return
 
$CONTROL_CEN
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CEN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CEN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CEN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CEN
[L]CURPRO = "CEN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CEN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CEN
[L]CURPRO = "CEN"
If this.CEN<0 or this.CEN>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.CEN)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_CEN
[L]CURPRO = "CEN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CEN
[L]CURPRO = "CEN"
Return

$PROPAGATE_CEN
this.isReadonly = 0
[L]CURPRO = "CEN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CEN
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CEN"
$_LNKPRO_CEN
Return


####################################################################
# 37 : DIFFLG Automatic variances ( Field Local menu number 1)
####################################################################

$SET_DIFFLG
If [L]_AOLDVAL<>this.DIFFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIFFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIFFLG
 Gosub PROPAGATE_DIFFLG
Endif
Return

$INIT_DIFFLG
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DIFFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DIFFLG=0 and fmet this.AGETATTRIBUTE("DIFFLG","$isMandatory")="true"
 this.DIFFLG = 1
Endif
Return
 
$CONTROL_DIFFLG
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DIFFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIFFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIFFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIFFLG
[L]CURPRO = "DIFFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIFFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIFFLG
[L]CURPRO = "DIFFLG"
If this.DIFFLG<0 or this.DIFFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DIFFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DIFFLG
[L]CURPRO = "DIFFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIFFLG
[L]CURPRO = "DIFFLG"
Return

$PROPAGATE_DIFFLG
this.isReadonly = 0
[L]CURPRO = "DIFFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIFFLG
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DIFFLG"
$_LNKPRO_DIFFLG
Return


####################################################################
# 38 : DIF Assessment method ( Field Local menu number 3666)
####################################################################

$SET_DIF
If [L]_AOLDVAL<>this.DIF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DIF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DIF
 Gosub PROPAGATE_DIF
Endif
Return

$INIT_DIF
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DIF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DIF=0 and fmet this.AGETATTRIBUTE("DIF","$isMandatory")="true"
 this.DIF = 1
Endif
Return
 
$CONTROL_DIF
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DIF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DIF                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DIF                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DIF
[L]CURPRO = "DIF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DIF=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DIF
[L]CURPRO = "DIF"
If this.DIF<0 or this.DIF>len(mess(0,3666,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3666 ->"-num$(this.DIF)-mess(99,123,1)):  Return : # Local menu "3666 -> Invalid option
Endif
Return

$_AOTHERS_DIF
[L]CURPRO = "DIF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DIF
[L]CURPRO = "DIF"
Return

$PROPAGATE_DIF
this.isReadonly = 0
[L]CURPRO = "DIF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DIF
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DIF"
$_LNKPRO_DIF
Return


####################################################################
# 39 : LOSGAIGNR Loss and profit variance generation ( Field Local menu number 1)
####################################################################

$SET_LOSGAIGNR
If [L]_AOLDVAL<>this.LOSGAIGNR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOSGAIGNR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOSGAIGNR
 Gosub PROPAGATE_LOSGAIGNR
Endif
Return

$INIT_LOSGAIGNR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "LOSGAIGNR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.LOSGAIGNR=0 and fmet this.AGETATTRIBUTE("LOSGAIGNR","$isMandatory")="true"
 this.LOSGAIGNR = 1
Endif
Return
 
$CONTROL_LOSGAIGNR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "LOSGAIGNR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOSGAIGNR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOSGAIGNR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOSGAIGNR
[L]CURPRO = "LOSGAIGNR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.LOSGAIGNR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOSGAIGNR
[L]CURPRO = "LOSGAIGNR"
If this.LOSGAIGNR<0 or this.LOSGAIGNR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.LOSGAIGNR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_LOSGAIGNR
[L]CURPRO = "LOSGAIGNR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOSGAIGNR
[L]CURPRO = "LOSGAIGNR"
Return

$PROPAGATE_LOSGAIGNR
this.isReadonly = 0
[L]CURPRO = "LOSGAIGNR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOSGAIGNR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "LOSGAIGNR"
$_LNKPRO_LOSGAIGNR
Return


####################################################################
# 40 : DAS DAS2 ( Field Local menu number 1)
####################################################################

$SET_DAS
If [L]_AOLDVAL<>this.DAS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DAS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DAS
 Gosub PROPAGATE_DAS
Endif
Return

$INIT_DAS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DAS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DAS=0 and fmet this.AGETATTRIBUTE("DAS","$isMandatory")="true"
 this.DAS = 1
Endif
Return
 
$CONTROL_DAS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DAS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DAS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DAS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DAS
[L]CURPRO = "DAS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DAS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DAS
[L]CURPRO = "DAS"
If this.DAS<0 or this.DAS>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.DAS)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_DAS
[L]CURPRO = "DAS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DAS
[L]CURPRO = "DAS"
Return

$PROPAGATE_DAS
this.isReadonly = 0
[L]CURPRO = "DAS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DAS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DAS"
$_LNKPRO_DAS
Return


####################################################################
# 41 : DASTYP DAS2 nature ( Field Local menu number 615)
####################################################################

$SET_DASTYP
If [L]_AOLDVAL<>this.DASTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DASTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DASTYP
 Gosub PROPAGATE_DASTYP
Endif
Return

$INIT_DASTYP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DASTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.DASTYP=0 and fmet this.AGETATTRIBUTE("DASTYP","$isMandatory")="true"
 this.DASTYP = 1
Endif
Return
 
$CONTROL_DASTYP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DASTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DASTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DASTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DASTYP
[L]CURPRO = "DASTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DASTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DASTYP
[L]CURPRO = "DASTYP"
If this.DASTYP<0 or this.DASTYP>len(mess(0,615,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"615 ->"-num$(this.DASTYP)-mess(99,123,1)):  Return : # Local menu "615 -> Invalid option
Endif
Return

$_AOTHERS_DASTYP
[L]CURPRO = "DASTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DASTYP
[L]CURPRO = "DASTYP"
Return

$PROPAGATE_DASTYP
this.isReadonly = 0
[L]CURPRO = "DASTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DASTYP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DASTYP"
$_LNKPRO_DASTYP
Return


####################################################################
# 42 : FLGABL Fixed asset tracking ( Field Local menu number 1)
####################################################################

$SET_FLGABL
If [L]_AOLDVAL<>this.FLGABL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGABL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGABL
 Gosub PROPAGATE_FLGABL
Endif
Return

$INIT_FLGABL
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGABL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGABL=0 and fmet this.AGETATTRIBUTE("FLGABL","$isMandatory")="true"
 this.FLGABL = 1
Endif
Return
 
$CONTROL_FLGABL
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGABL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGABL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGABL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGABL
[L]CURPRO = "FLGABL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGABL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGABL
[L]CURPRO = "FLGABL"
If this.FLGABL<0 or this.FLGABL>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGABL)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGABL
[L]CURPRO = "FLGABL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGABL
[L]CURPRO = "FLGABL"
Return

$PROPAGATE_FLGABL
this.isReadonly = 0
[L]CURPRO = "FLGABL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGABL
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGABL"
$_LNKPRO_FLGABL
Return


####################################################################
# 43 : FLGEXPCRE Expense creation ( Field Local menu number 1)
####################################################################

$SET_FLGEXPCRE
If [L]_AOLDVAL<>this.FLGEXPCRE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGEXPCRE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGEXPCRE
 Gosub PROPAGATE_FLGEXPCRE
Endif
Return

$INIT_FLGEXPCRE
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGEXPCRE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGEXPCRE=0 and fmet this.AGETATTRIBUTE("FLGEXPCRE","$isMandatory")="true"
 this.FLGEXPCRE = 1
Endif
Return
 
$CONTROL_FLGEXPCRE
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGEXPCRE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGEXPCRE             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGEXPCRE             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGEXPCRE
[L]CURPRO = "FLGEXPCRE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGEXPCRE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGEXPCRE
[L]CURPRO = "FLGEXPCRE"
If this.FLGEXPCRE<0 or this.FLGEXPCRE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGEXPCRE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGEXPCRE
[L]CURPRO = "FLGEXPCRE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGEXPCRE
[L]CURPRO = "FLGEXPCRE"
Return

$PROPAGATE_FLGEXPCRE
this.isReadonly = 0
[L]CURPRO = "FLGEXPCRE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGEXPCRE
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FLGEXPCRE"
$_LNKPRO_FLGEXPCRE
Return


####################################################################
# 44 : GACPVS Provision nature ( Field GAC 15)
####################################################################

$SET_GACPVS
If [L]_AOLDVAL<>this.GACPVS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GACPVS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GACPVS
 Gosub PROPAGATE_GACPVS
Endif
Return

$INIT_GACPVS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "GACPVS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_GACPVS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "GACPVS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GACPVS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GACPVS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GACPVS
[L]CURPRO = "GACPVS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.GACPVS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GACPVS
[L]CURPRO = "GACPVS"
If vireblc(this.GACPVS,2)<>vireblc(format$("K:15X",this.GACPVS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_GACPVS
[L]CURPRO = "GACPVS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GACPVS
[L]CURPRO = "GACPVS"
If vireblc(this.GACPVS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGAC.ACTRLREF(this,"GACPVS",this.GACPVS,this.COA,this.GACPVS,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.GACPVS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_GACPVS
this.isReadonly = 0
[L]CURPRO = "GACPVS"
Gosub _LNKPRO_GACPVS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GACPVS
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "GACPVS"
$_LNKPRO_GACPVS
If vireblc(this.GACPVS,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.COA;this.GACPVS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("GACPVS","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("GACPVS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return


####################################################################
# 45 : GACACN Accounting nature ( Field Local menu number 2628)
####################################################################

$SET_GACACN
If [L]_AOLDVAL<>this.GACACN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GACACN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GACACN
 Gosub PROPAGATE_GACACN
Endif
Return

$INIT_GACACN
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "GACACN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.GACACN=0 and fmet this.AGETATTRIBUTE("GACACN","$isMandatory")="true"
 this.GACACN = 1
Endif
Return
 
$CONTROL_GACACN
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "GACACN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GACACN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GACACN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GACACN
[L]CURPRO = "GACACN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.GACACN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GACACN
[L]CURPRO = "GACACN"
If this.GACACN<0 or this.GACACN>len(mess(0,2628,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2628 ->"-num$(this.GACACN)-mess(99,123,1)):  Return : # Local menu "2628 -> Invalid option
Endif
Return

$_AOTHERS_GACACN
[L]CURPRO = "GACACN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GACACN
[L]CURPRO = "GACACN"
Return

$PROPAGATE_GACACN
this.isReadonly = 0
[L]CURPRO = "GACACN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GACACN
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "GACACN"
$_LNKPRO_GACACN
Return


####################################################################
# 46 : RITTYP Charge type ( Field Local menu number 953)
####################################################################

$SET_RITTYP
If [L]_AOLDVAL<>this.RITTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RITTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RITTYP
 Gosub PROPAGATE_RITTYP
Endif
Return

$INIT_RITTYP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "RITTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.RITTYP=0 and fmet this.AGETATTRIBUTE("RITTYP","$isMandatory")="true"
 this.RITTYP = 1
Endif
Return
 
$CONTROL_RITTYP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "RITTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RITTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RITTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RITTYP
[L]CURPRO = "RITTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RITTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RITTYP
[L]CURPRO = "RITTYP"
If this.RITTYP<0 or this.RITTYP>len(mess(0,953,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"953 ->"-num$(this.RITTYP)-mess(99,123,1)):  Return : # Local menu "953 -> Invalid option
Endif
Return

$_AOTHERS_RITTYP
[L]CURPRO = "RITTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RITTYP
[L]CURPRO = "RITTYP"
Return

$PROPAGATE_RITTYP
this.isReadonly = 0
[L]CURPRO = "RITTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RITTYP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "RITTYP"
$_LNKPRO_RITTYP
Return


####################################################################
# 47 : UPDBLC Balance update ( Field Local menu number 679)
####################################################################

$SET_UPDBLC
If [L]_AOLDVAL<>this.UPDBLC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDBLC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDBLC
 Gosub PROPAGATE_UPDBLC
Endif
Return

$INIT_UPDBLC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDBLC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.UPDBLC=0 and fmet this.AGETATTRIBUTE("UPDBLC","$isMandatory")="true"
 this.UPDBLC = 1
Endif
Return
 
$CONTROL_UPDBLC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDBLC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDBLC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDBLC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDBLC
[L]CURPRO = "UPDBLC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDBLC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDBLC
[L]CURPRO = "UPDBLC"
If this.UPDBLC<0 or this.UPDBLC>len(mess(0,679,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"679 ->"-num$(this.UPDBLC)-mess(99,123,1)):  Return : # Local menu "679 -> Invalid option
Endif
Return

$_AOTHERS_UPDBLC
[L]CURPRO = "UPDBLC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDBLC
[L]CURPRO = "UPDBLC"
Return

$PROPAGATE_UPDBLC
this.isReadonly = 0
[L]CURPRO = "UPDBLC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDBLC
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDBLC"
$_LNKPRO_UPDBLC
Return


####################################################################
# 49 : DSP Analytical allocation key ( Field DSP 10)
####################################################################

$SET_DSP
If [L]_AOLDVAL<>this.DSP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DSP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DSP
 Gosub PROPAGATE_DSP
Endif
Return

$INIT_DSP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DSP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DSP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DSP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DSP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DSP                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DSP
[L]CURPRO = "DSP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DSP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DSP
[L]CURPRO = "DSP"
If vireblc(this.DSP,2)<>vireblc(format$("K:10c",this.DSP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DSP
[L]CURPRO = "DSP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DSP
[L]CURPRO = "DSP"
Return

$PROPAGATE_DSP
this.isReadonly = 0
[L]CURPRO = "DSP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DSP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DSP"
$_LNKPRO_DSP
Return


####################################################################
# 50 : DACDIENBR No. of dimensions entered ( Field C 2)
####################################################################

$SET_DACDIENBR
If [L]_AOLDVAL<>this.DACDIENBR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DACDIENBR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DACDIENBR
 Gosub PROPAGATE_DACDIENBR
Endif
Return

$INIT_DACDIENBR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DACDIENBR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DACDIENBR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DACDIENBR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DACDIENBR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DACDIENBR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DACDIENBR
[L]CURPRO = "DACDIENBR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DACDIENBR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DACDIENBR
[L]CURPRO = "DACDIENBR"
Return

$_AOTHERS_DACDIENBR
[L]CURPRO = "DACDIENBR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DACDIENBR
[L]CURPRO = "DACDIENBR"
Return

$PROPAGATE_DACDIENBR
this.isReadonly = 0
[L]CURPRO = "DACDIENBR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DACDIENBR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "DACDIENBR"
$_LNKPRO_DACDIENBR
Return


####################################################################
# 52 : BUDTRK Budget tracking ( Field Local menu number 1)
####################################################################

$SET_BUDTRK
If [L]_AOLDVAL<>this.BUDTRK
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BUDTRK
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BUDTRK
 Gosub PROPAGATE_BUDTRK
Endif
Return

$INIT_BUDTRK
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BUDTRK"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BUDTRK=0 and fmet this.AGETATTRIBUTE("BUDTRK","$isMandatory")="true"
 this.BUDTRK = 1
Endif
Return
 
$CONTROL_BUDTRK
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BUDTRK"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BUDTRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BUDTRK                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BUDTRK
[L]CURPRO = "BUDTRK"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BUDTRK=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BUDTRK
[L]CURPRO = "BUDTRK"
If this.BUDTRK<0 or this.BUDTRK>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BUDTRK)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BUDTRK
[L]CURPRO = "BUDTRK"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BUDTRK
[L]CURPRO = "BUDTRK"
Return

$PROPAGATE_BUDTRK
this.isReadonly = 0
[L]CURPRO = "BUDTRK"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BUDTRK
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BUDTRK"
$_LNKPRO_BUDTRK
Return


####################################################################
# 53 : TIMDSP Temp distribution ( Field DTP 10)
####################################################################

$SET_TIMDSP
If [L]_AOLDVAL<>this.TIMDSP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TIMDSP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TIMDSP
 Gosub PROPAGATE_TIMDSP
Endif
Return

$INIT_TIMDSP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "TIMDSP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TIMDSP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "TIMDSP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TIMDSP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TIMDSP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TIMDSP
[L]CURPRO = "TIMDSP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TIMDSP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TIMDSP
[L]CURPRO = "TIMDSP"
If vireblc(this.TIMDSP,2)<>vireblc(format$("K:10c",this.TIMDSP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TIMDSP
[L]CURPRO = "TIMDSP"
If vireblc(this.TIMDSP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPDTP.ACTRLREF(this,"TIMDSP",this.TIMDSP,this.TIMDSP,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.TIMDSP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TIMDSP
[L]CURPRO = "TIMDSP"
Return

$PROPAGATE_TIMDSP
this.isReadonly = 0
[L]CURPRO = "TIMDSP"
Gosub _LNKPRO_TIMDSP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TIMDSP
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "TIMDSP"
$_LNKPRO_TIMDSP
If vireblc(this.TIMDSP,2)<>""
 # Link CADISTMP
 Local File CADISTMP [WDTP]
 Read [F:WDTP]DTP0 = this.TIMDSP
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="CADISTMP" & ZONE="SHOTRA" & IDENT1=[F:WDTP]DTP & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("TIMDSP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="CADISTMP" & ZONE="DESTRA" & IDENT1=[F:WDTP]DTP & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("TIMDSP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WDTP]
Endif
Return


####################################################################
# 54 : FRWCUR Carry forward ( Field Local menu number 1)
####################################################################

$SET_FRWCUR
If [L]_AOLDVAL<>this.FRWCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FRWCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FRWCUR
 Gosub PROPAGATE_FRWCUR
Endif
Return

$INIT_FRWCUR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FRWCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FRWCUR=0 and fmet this.AGETATTRIBUTE("FRWCUR","$isMandatory")="true"
 this.FRWCUR = 1
Endif
Return
 
$CONTROL_FRWCUR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FRWCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FRWCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FRWCUR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FRWCUR
[L]CURPRO = "FRWCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FRWCUR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FRWCUR
[L]CURPRO = "FRWCUR"
If this.FRWCUR<0 or this.FRWCUR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FRWCUR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FRWCUR
[L]CURPRO = "FRWCUR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FRWCUR
[L]CURPRO = "FRWCUR"
Return

$PROPAGATE_FRWCUR
this.isReadonly = 0
[L]CURPRO = "FRWCUR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FRWCUR
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "FRWCUR"
$_LNKPRO_FRWCUR
Return


####################################################################
# 55 : BPAADD Default address ( Field ADR 5)
####################################################################

$SET_BPAADD
If [L]_AOLDVAL<>this.BPAADD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPAADD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPAADD
 Gosub PROPAGATE_BPAADD
Endif
Return

$INIT_BPAADD
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BPAADD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BPAADD
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BPAADD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPAADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPAADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPAADD
[L]CURPRO = "BPAADD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BPAADD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPAADD
[L]CURPRO = "BPAADD"
If vireblc(this.BPAADD,2)<>vireblc(format$("K:5c",this.BPAADD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BPAADD
[L]CURPRO = "BPAADD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPAADD
[L]CURPRO = "BPAADD"
If vireblc(this.BPAADD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPADR.ACTRLREF(this,"BPAADD",this.BPAADD,5,this.COAACC,this.BPAADD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BPAADD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_BPAADD
this.isReadonly = 0
[L]CURPRO = "BPAADD"
Gosub _LNKPRO_BPAADD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPAADD
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BPAADD"
$_LNKPRO_BPAADD
If vireblc(this.BPAADD,2)<>""
 # Link BPADDRESS
 Local File BPADDRESS [WBPA]
 Read [F:WBPA]BPA0 = 5;this.COAACC;this.BPAADD
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("BPAADD","$description",[F:WBPA]BPADES)
 Endif
 LogicClose File [WBPA]
Endif
Return


####################################################################
# 56 : BIDNUM Default bank ID number ( Field A 20)
####################################################################

$SET_BIDNUM
If [L]_AOLDVAL<>this.BIDNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BIDNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BIDNUM
 Gosub PROPAGATE_BIDNUM
Endif
Return

$INIT_BIDNUM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BIDNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BIDNUM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BIDNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BIDNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BIDNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BIDNUM
[L]CURPRO = "BIDNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BIDNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BIDNUM
[L]CURPRO = "BIDNUM"
Return

$_AOTHERS_BIDNUM
[L]CURPRO = "BIDNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BIDNUM
[L]CURPRO = "BIDNUM"
Return

$PROPAGATE_BIDNUM
this.isReadonly = 0
[L]CURPRO = "BIDNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BIDNUM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "BIDNUM"
$_LNKPRO_BIDNUM
Return


####################################################################
# 57 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 58 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 59 : UPDTIM Time ( Field L 8)
####################################################################

$SET_UPDTIM
If [L]_AOLDVAL<>this.UPDTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDTIM
 Gosub PROPAGATE_UPDTIM
Endif
Return

$INIT_UPDTIM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDTIM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDTIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDTIM
[L]CURPRO = "UPDTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDTIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$_AOTHERS_UPDTIM
[L]CURPRO = "UPDTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDTIM
[L]CURPRO = "UPDTIM"
Return

$PROPAGATE_UPDTIM
this.isReadonly = 0
[L]CURPRO = "UPDTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDTIM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "UPDTIM"
$_LNKPRO_UPDTIM
Return


####################################################################
# 60 : CRETIM Time ( Field L 8)
####################################################################

$SET_CRETIM
If [L]_AOLDVAL<>this.CRETIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRETIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRETIM
 Gosub PROPAGATE_CRETIM
Endif
Return

$INIT_CRETIM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CRETIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CRETIM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CRETIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRETIM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRETIM
[L]CURPRO = "CRETIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRETIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRETIM
[L]CURPRO = "CRETIM"
Return

$_AOTHERS_CRETIM
[L]CURPRO = "CRETIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRETIM
[L]CURPRO = "CRETIM"
Return

$PROPAGATE_CRETIM
this.isReadonly = 0
[L]CURPRO = "CRETIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRETIM
Gosub DECLARE_VAR From WMC0GACCOUNT
[L]CURPRO = "CRETIM"
$_LNKPRO_CRETIM
Return




