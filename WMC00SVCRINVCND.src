#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## CRUD-CLASSE ## SVCRINVCND
# 2018-08-27 12:50:26 323

Gosub TEST From WMCR_SVCRINVCND : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,VCRTYP,VCRNUMORI,VCRLINORI,VCRSEQORI)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# SVCRINVCND : SVCRINVCND
# SVCRINVCNDD : SVCRINVCND SVCRINVCNDD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet SVCRINVCND._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = SVCRINVCND.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(SVCRINVCND.ACTX.AFOLDER,nomap,"")>0
 Local File SVCRINVCND [SVIC]
 Local File SVCRINVCNDD [SVICD]
 Local File ATEXTRA [AXX]
Else
 Local File =SVCRINVCND.ACTX.AFOLDER+".SVCRINVCND" [SVIC]
 Local File =SVCRINVCND.ACTX.AFOLDER+".SVCRINVCNDD" [SVICD]
 Local File =SVCRINVCND.ACTX.AFOLDER+".ATEXTRA" [AXX]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet SVCRINVCND.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [SVIC] With
& [SVICD]SVICD0 = [F:SVIC]VCRTYP;[F:SVIC]VCRNUMORI;[F:SVIC]VCRLINORI;[F:SVIC]VCRSEQORI
& As [LNK_]
Return

############################################################################################
### SVCRINVCND(WSVIC)
############################################################################################
Funprog  _MAJSQL_SVCRINVCND(WSVIC)
Variable Instance WSVIC Using C_SVCRINVCND
Local Integer ASTATUS,A_I,A_J
Default File [F:SVIC]
If WSVIC.ASTALIN=[V]CST_ANEW
 Call INICRE(WSVIC) From ASYRSUB
 SetInstance [F:SVIC] With WSVIC
 For J=1 To maxtab(WSVIC.AXX)
  If WSVIC.AXX(J)<>null & WSVIC.AXX(J).PRO= "DESAXX" & WSVIC.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVIC,WSVIC.AXX(J).TEX,"SVCRINVCND","DESAXX",WSVIC.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WSVIC.AXX)
  If WSVIC.AXX(J)<>null & WSVIC.AXX(J).PRO= "SHOAXX" & WSVIC.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVIC,WSVIC.AXX(J).TEX,"SVCRINVCND","SHOAXX",WSVIC.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SVIC]
 If fstat
  Call FSTA("SVIC",WSVIC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVIC.updTick = [F:SVIC]updTick
Elsif WSVIC.ASTALIN=[V]CST_ALL or WSVIC.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSVIC) From ASYRSUB
 SetInstance [F:SVIC] With WSVIC
 For J=1 To maxtab(WSVIC.AXX)
  If WSVIC.AXX(J)<>null & WSVIC.AXX(J).PRO= "DESAXX" & WSVIC.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVIC,WSVIC.AXX(J).TEX,"SVCRINVCND","DESAXX",WSVIC.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WSVIC.AXX)
  If WSVIC.AXX(J)<>null & WSVIC.AXX(J).PRO= "SHOAXX" & WSVIC.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVIC,WSVIC.AXX(J).TEX,"SVCRINVCND","SHOAXX",WSVIC.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVIC,"SVCRINVCND")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SVIC]SVIC0 = [F:SVIC]VCRTYP;[F:SVIC]VCRNUMORI;[F:SVIC]VCRLINORI;[F:SVIC]VCRSEQORI
 If fstat
  Call FSTA("SVIC",WSVIC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVIC.updTick = [F:SVIC]updTick
Elsif WSVIC.ASTALIN=[V]CST_ADEL
 SetInstance [F:SVIC] With WSVIC
 For J=1 To maxtab(WSVIC.AXX)
  If WSVIC.AXX(J)<>null & WSVIC.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WSVIC,WSVIC.AXX(J).TEX,"SVCRINVCND","DESAXX",WSVIC.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WSVIC.AXX)
  If WSVIC.AXX(J)<>null & WSVIC.AXX(J).PRO= "SHOAXX"
   Call SUPTEXTRA(WSVIC,WSVIC.AXX(J).TEX,"SVCRINVCND","SHOAXX",WSVIC.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVIC,"SVCRINVCND")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SVIC]SVIC0 = [F:SVIC]VCRTYP;[F:SVIC]VCRNUMORI;[F:SVIC]VCRLINORI;[F:SVIC]VCRSEQORI
 If fstat
  Call FSTA("SVIC",WSVIC,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### SVCRINVCNDD(WSVICD)
############################################################################################
Funprog  _MAJSQL_SVCRINVCNDD(WSVICD)
Variable Instance WSVICD Using C_SVCRINVCNDD
Local Integer ASTATUS,A_I,A_J
Default File [F:SVICD]
If WSVICD.ASTALIN=[V]CST_ANEW
 Call INICRE(WSVICD) From ASYRSUB
 SetInstance [F:SVICD] With WSVICD
 For J=1 To maxtab(WSVICD.AXX)
  If WSVICD.AXX(J)<>null & WSVICD.AXX(J).PRO= "DESAXX" & WSVICD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVICD,WSVICD.AXX(J).TEX,"SVCRINVCNDD","DESAXX",WSVICD.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WSVICD.AXX)
  If WSVICD.AXX(J)<>null & WSVICD.AXX(J).PRO= "SHOAXX" & WSVICD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVICD,WSVICD.AXX(J).TEX,"SVCRINVCNDD","SHOAXX",WSVICD.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 Write [F:SVICD]
 If fstat
  Call FSTA("SVICD",WSVICD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVICD.updTick = [F:SVICD]updTick
Elsif WSVICD.ASTALIN=[V]CST_ALL or WSVICD.ASTALIN=[V]CST_AUPD
 Call INIUPD(WSVICD) From ASYRSUB
 SetInstance [F:SVICD] With WSVICD
 For J=1 To maxtab(WSVICD.AXX)
  If WSVICD.AXX(J)<>null & WSVICD.AXX(J).PRO= "DESAXX" & WSVICD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVICD,WSVICD.AXX(J).TEX,"SVCRINVCNDD","DESAXX",WSVICD.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WSVICD.AXX)
  If WSVICD.AXX(J)<>null & WSVICD.AXX(J).PRO= "SHOAXX" & WSVICD.AXX(J).FLG>0
   Call MAJTEXTRALAN(WSVICD,WSVICD.AXX(J).TEX,"SVCRINVCNDD","SHOAXX",WSVICD.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVICD,"SVCRINVCNDD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:SVICD]SVICD0 = [F:SVICD]VCRTYP;[F:SVICD]VCRNUMORI;[F:SVICD]VCRLINORI;[F:SVICD]VCRSEQORI;[F:SVICD]VCRINVCNDLIN
 If fstat
  Call FSTA("SVICD",WSVICD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WSVICD.updTick = [F:SVICD]updTick
Elsif WSVICD.ASTALIN=[V]CST_ADEL
 SetInstance [F:SVICD] With WSVICD
 For J=1 To maxtab(WSVICD.AXX)
  If WSVICD.AXX(J)<>null & WSVICD.AXX(J).PRO= "DESAXX"
   Call SUPTEXTRA(WSVICD,WSVICD.AXX(J).TEX,"SVCRINVCNDD","DESAXX",WSVICD.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 For J=1 To maxtab(WSVICD.AXX)
  If WSVICD.AXX(J)<>null & WSVICD.AXX(J).PRO= "SHOAXX"
   Call SUPTEXTRA(WSVICD,WSVICD.AXX(J).TEX,"SVCRINVCNDD","SHOAXX",WSVICD.AXX(J).LAN,"","",[L]ASTATUS) From ASYRSUB
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Next J
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WSVICD,"SVCRINVCNDD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:SVICD]SVICD0 = [F:SVICD]VCRTYP;[F:SVICD]VCRNUMORI;[F:SVICD]VCRLINORI;[F:SVICD]VCRSEQORI;[F:SVICD]VCRINVCNDLIN
 If fstat
  Call FSTA("SVICD",WSVICD,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



