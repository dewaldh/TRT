#<AdxTL>@(#)0.0.0.0 $Revision$Class Local menus
# Supervisor
## CRUD-CLASSE ## AMENLOC
# 2018-08-27 12:21:08 455

Gosub TEST From WMCR_AMENLOC : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,MENLOC)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# AMENLOC : AMENLOC
# APLSTD : AMENLOC APLSTD
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet AMENLOC._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = AMENLOC.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(AMENLOC.ACTX.AFOLDER,nomap,"")>0
 Local File AMENLOC [AML]
 Local File APLSTD [AST]
Else
 Local File =AMENLOC.ACTX.AFOLDER+".AMENLOC" [AML]
 Local File =AMENLOC.ACTX.AFOLDER+".APLSTD" [AST]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet AMENLOC.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [AML] With
& [AST]LAN = AMENLOC.ACTX.LAN;[F:AML]MENLOC
& As [LNK_]
Return

############################################################################################
### AMENLOC(WAML)
############################################################################################
Funprog  _MAJSQL_AMENLOC(WAML)
Variable Instance WAML Using C_AMENLOC
Local Integer ASTATUS,A_I,A_J
Default File [F:AML]
If WAML.ASTALIN=[V]CST_ANEW
 Call INICRE(WAML) From ASYRSUB
 SetInstance [F:AML] With WAML
 Write [F:AML]
 If fstat
  Call FSTA("AML",WAML,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAML.updTick = [F:AML]updTick
Elsif WAML.ASTALIN=[V]CST_ALL or WAML.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAML) From ASYRSUB
 SetInstance [F:AML] With WAML
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAML,"AMENLOC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AML]MENLOC = [F:AML]MENLOC
 If fstat
  Call FSTA("AML",WAML,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAML.updTick = [F:AML]updTick
Elsif WAML.ASTALIN=[V]CST_ADEL
 SetInstance [F:AML] With WAML
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAML,"AMENLOC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AML]MENLOC = [F:AML]MENLOC
 If fstat
  Call FSTA("AML",WAML,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### APLSTD(WAST)
############################################################################################
Funprog  _MAJSQL_APLSTD(WAST)
Variable Instance WAST Using C_APLSTD
Local Integer ASTATUS,A_I,A_J
Default File [F:AST]
If WAST.ASTALIN=[V]CST_ANEW
 Call INICRE(WAST) From ASYRSUB
 SetInstance [F:AST] With WAST
 Write [F:AST]
 If fstat
  Call FSTA("AST",WAST,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAST.updTick = [F:AST]updTick
Elsif WAST.ASTALIN=[V]CST_ALL or WAST.ASTALIN=[V]CST_AUPD
 Call INIUPD(WAST) From ASYRSUB
 SetInstance [F:AST] With WAST
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAST,"APLSTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:AST]LAN = [F:AST]LAN;[F:AST]LANCHP;[F:AST]LANNUM
 If fstat
  Call FSTA("AST",WAST,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WAST.updTick = [F:AST]updTick
Elsif WAST.ASTALIN=[V]CST_ADEL
 SetInstance [F:AST] With WAST
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WAST,"APLSTD")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:AST]LAN = [F:AST]LAN;[F:AST]LANCHP;[F:AST]LANNUM
 If fstat
  Call FSTA("AST",WAST,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



