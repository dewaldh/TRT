#<AdxTL>@(#)0.0.0.0 $Revision$Class Setting
# Supervisor
## CRUD-CLASSE ## SIFINSTN
# 2018-08-27 13:28:56 173


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SIFINSTN [SSTN_]

If !SILENCE : Call TRACE("2 --> Local Instance R_SIFINSTN") From ASYRCOM : Endif
Local Instance SIFINSTN Using R_SIFINSTN

If !SILENCE : Call TRACE("3 --> New Instance R_SIFINSTN") From ASYRCOM : Endif
SIFINSTN = NewInstance R_SIFINSTN AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SSTN_]SSTN0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SIFINSTN") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SIFINSTN.AREAD([SSTN_]CPY,[SSTN_]LEDTYP,[SSTN_]FIYNUM,[SSTN_]PERNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SIFINSTN.SSTN.CPY ="-num$(SIFINSTN.SSTN.CPY)) From ASYRCOM
 Call TRACE("SIFINSTN.SSTN.LEDTYP ="-num$(SIFINSTN.SSTN.LEDTYP)) From ASYRCOM
 Call TRACE("SIFINSTN.SSTN.FIYNUM ="-num$(SIFINSTN.SSTN.FIYNUM)) From ASYRCOM
 Call TRACE("SIFINSTN.SSTN.PERNUM ="-num$(SIFINSTN.SSTN.PERNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SIFINSTN.SSTN.AKEYS)
  Call TRACE("-"-num$(I)-":"-SIFINSTN.SSTN.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SSTN_]
FreeGroup SIFINSTN
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SIFINSTN,ACLE,ASTATUS,_ETAG)
Variable Instance SIFINSTN Using R_SIFINSTN
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CPY(5)
Local Tinyint _LEDTYP
Local Shortint _FIYNUM
Local Shortint _PERNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CPY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEDTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FIYNUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PERNUM = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File SIFINSTN [SSTN]
Default File [F:SSTN]
Read [F:SSTN]SSTN0 = [L]_CPY;[L]_LEDTYP;[L]_FIYNUM;[L]_PERNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SSTN]UPDTICK)>0
 [L]_ETAG = num$([F:SSTN]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SIFINSTN,ACLE,ASTATUS)
Variable Instance SIFINSTN Using R_SIFINSTN
Value Char ACLE
Variable Integer ASTATUS
Local Char _CPY(5)
Local Tinyint _LEDTYP
Local Shortint _FIYNUM
Local Shortint _PERNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CPY = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEDTYP = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_FIYNUM = val([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_PERNUM = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SIFINSTN.AREAD([L]_CPY,[L]_LEDTYP,[L]_FIYNUM,[L]_PERNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SIFINSTN,_CPY,_LEDTYP,_FIYNUM,_PERNUM,ASTATUS)
Variable Instance SIFINSTN Using R_SIFINSTN
Value Char _CPY
Value Tinyint _LEDTYP
Value Shortint _FIYNUM
Value Shortint _PERNUM
Variable Integer ASTATUS

If SIFINSTN = null : End : Endif

Gosub AVARIABLES From WMR00SIFINSTN
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SIFINSTN.APARENT=null
 [L]A_I = SIFINSTN.freeSnapshot
 SIFINSTN.snapshotEnabled = 0
 SIFINSTN.setAccessorEnabled = 0
Endif

If fmet SIFINSTN.ACTX.AGETAFCRIGHT(SIFINSTN,"GESCPY",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:SSTN]
Read [F:SSTN]SSTN0 = [L]_CPY;[L]_LEDTYP;[L]_FIYNUM;[L]_PERNUM
If fstat
[L]A_ERROR = [L]_CPY+"~"+num$([L]_LEDTYP)+"~"+num$([L]_FIYNUM)+"~"+num$([L]_PERNUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(SIFINSTN,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet SIFINSTN.ACTX.AGETAFCRIGHTR(SIFINSTN,"GESCPY",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet SIFINSTN.ACTX.ASTACRITROLE(SIFINSTN,[L]_CPY+"~"+num$([L]_LEDTYP)+"~"+num$([L]_FIYNUM)+"~"+num$([L]_PERNUM)
& 
& ,"CPY","SSTN",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet SIFINSTN.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

SIFINSTN.SSTN.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet SIFINSTN.SSTN.AREAD([L]_CPY,[L]_LEDTYP,[L]_FIYNUM,[L]_PERNUM))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SIFINSTN.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SIFINSTN.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SIFINSTN._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SIFINSTN.APARENT=null
 SIFINSTN.snapshotEnabled = 1
 SIFINSTN.setAccessorEnabled = 1
Endif
LogicClose File [SSTN]
End



