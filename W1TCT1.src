#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management TCT1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:15:58"
A_USER  = "ADMIN"
A_STAMP = "20180828001558"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "BASTAB"
  If [M]BASTAB=0
   If GWINVDES(1)<>""
    Chgfmt DESCOD1 With GWINVDES(1)
   Else
    Chgfmt DESCOD1 With "-K:1X"
   Endif
   If GWINVDES(2)<>""
    Chgfmt DESCOD2 With GWINVDES(2)
   Else
    Chgfmt DESCOD2 With "-K:1X"
   Endif
   If GWINVDES(3)<>""
    Chgfmt DESCOD3 With GWINVDES(3)
   Else
    Chgfmt DESCOD3 With "-K:1X"
   Endif
   If GWINVDES(4)<>""
    Chgfmt DESCOD4 With GWINVDES(4)
   Else
    Chgfmt DESCOD4 With "-K:1X"
   Endif
   If GWINVDES(5)<>""
    Chgfmt DESCOD5 With GWINVDES(5)
   Else
    Chgfmt DESCOD5 With "-K:1X"
   Endif
   If GWINVDES(6)<>""
    Chgfmt DESCOD6 With GWINVDES(6)
   Else
    Chgfmt DESCOD6 With "-K:1X"
   Endif
   If GWINVDES(7)<>""
    Chgfmt DESCOD7 With GWINVDES(7)
   Else
    Chgfmt DESCOD7 With "-K:1X"
   Endif
   If GWINVDES(8)<>""
    Chgfmt DESCOD8 With GWINVDES(8)
   Else
    Chgfmt DESCOD8 With "-K:1X"
   Endif
   If GWINVDES(9)<>""
    Chgfmt DESCOD9 With GWINVDES(9)
   Else
    Chgfmt DESCOD9 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask TCT1 [TCT1]
Gosub HORODAT
Local Inpbox "TCT1" From GFONCTION At A_STAMP With A_WINDPREV Mask [TCT1] As [SIM_]
Grizo [TCT1]5
Grizo [TCT1]10
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [TCT1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=74 : Y1(0)=1 : Y2(0)=3
X1(1)=1 : X2(1)=74 : Y1(1)=4 : Y2(1)=28
Return

$ON_TCT
Onevent BEFORE_INPUT Call AS_TCT(zc) From W1TCT1
Onevent CONTROL Call C_TCT(zc) From W1TCT1
Return

Subprog AS_TCT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_TCT(zc) From W1TCT1
Gosub _AFF
End

Subprog C_TCT(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TCT" : GZNUM = 13610 : Endif
Gosub _AFF
End

Subprog S_TCT(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJW"
 PARMSK(1) = "TCT"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_TCTDESAXX
Onevent INIT_AREA Call D_TCTDESAXX(zc) From W1TCT1
Onevent BEFORE_INPUT Call AS_TCTDESAXX(zc) From W1TCT1
Return

Subprog IB_TCTDESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action BOUTTEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "BOUTTEXTRA"
 Call S_AFF_CHAR(VALEUR,PARMSK,"","ATEXTRA","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog D_TCTDESAXX(VALEUR)
Variable Char    VALEUR()
If varinit([M]TCTDESAXX,indice)=0
 ## Action LECTEXTRA
 Call LECTEXTRA(VALEUR,"TABCTL","TCTDESAXX",TCT,"") From ATEXTRA
Endif
Gosub _AFF
End

Subprog AS_TCTDESAXX(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(9637,GBOUT1) From OBJDIV
Call IB_TCTDESAXX(VALEUR)
Onkey 129 Titled GBOUT1 Call B1_TCTDESAXX(zc) From W1TCT1
Gosub _AFF
End

Subprog B1_TCTDESAXX(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action ATEXTRA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ATEXTRA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_TCTDESAXX" : PROGSUB = "SUBTCT" : PROGSPE = "SPETCT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 PARMSK(1) = "TABCTL"
 PARMSK(2) = "TCTDESAXX"
 PARMSK(3) = TCT
 PARMSK(4) = ""
 Call SAISIE_CHAR(VALEUR,PARMSK,"ATEXTRA","ATEXTRA","") From GSAISIE
 ACTION = "BB1_TCTDESAXX" : PROGSUB = "SUBTCT" : PROGSPE = "SPETCT" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_TCTTYP
Onevent BEFORE_INPUT Call AS_TCTTYP(zc) From W1TCT1
Onevent AFTER_CHANGE Gosub AMM_TCTTYP From W1TCT1
Onevent INIT_AREA Call D_TCTTYP(zc) From W1TCT1
Onevent CONTROL Call C_TCTTYP(zc) From W1TCT1
Return

Subprog D_TCTTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]TCTTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TCTTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_TCTTYP(VALEUR) From SUBTCT
If mkstat=2
 [M]TCTTYP(INDIC) = VALEUR
 Affzo TCTTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_TCTTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "TCTTYP" : GZNUM = 680 : Endif
Gosub _AFF
End

$AMM_TCTTYP
Call AM_TCTTYP(zc)
If !mkstat & GOBJET
 zoncou = "TCTTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_TCTTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_TCTTYP(VALEUR) From SUBTCT
If mkstat : GERR = 1 : GZONE = "TCTTYP" : GZNUM = 680 : Endif
Gosub _AFF
End

$ON_LAN
Return

$ON_BASTAB
Onevent BEFORE_AREA Call AV_BASTAB From W1TCT1
Return

Subprog AV_BASTAB
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "BASTAB" : Gosub TIT_COL From W1TCT1
Endif
Gosub _AFF
End

$ON_TCTLIN
Onevent BEFORE_AREA Gosub AV_TCTLIN From W1TCT1
Return

$AV_TCTLIN
## Action STD
Call AV_TCTLIN(zc) From SUBTCT
Gosub _AFF
Return

$ON_COD
Onevent BEFORE_AREA Gosub AV_COD From W1TCT1
Onevent CONTROL Call C_COD(zc) From W1TCT1
Onevent AFTER_CHANGE Gosub AMM_COD From W1TCT1
Return

$AV_COD
## Action STD
Call AV_COD(zc) From SUBTCT
Gosub _AFF
Return

Subprog C_COD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
If !mkstat
 ## Action STD
 Call C_COD(VALEUR) From SUBTCT
 If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
Endif
Gosub _AFF
End

$AMM_COD
Call AM_COD(zc)
If !mkstat & GOBJET
 zoncou = "COD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_COD(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_COD(VALEUR) From SUBTCT
If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
Gosub _AFF
End

$ON_DESCOD1
Onevent BEFORE_INPUT Call AS_DESCOD1(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD1 From W1TCT1
Return

$AV_DESCOD1
If GWINVDES(1)<>""
 Chgfmt [M]DESCOD1(indice) With GWINVDES(1)
Else
 Chgfmt [M]DESCOD1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD1(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD1(INDIC) = VALEUR
 Affzo DESCOD1(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD2
Onevent BEFORE_INPUT Call AS_DESCOD2(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD2 From W1TCT1
Return

$AV_DESCOD2
If GWINVDES(2)<>""
 Chgfmt [M]DESCOD2(indice) With GWINVDES(2)
Else
 Chgfmt [M]DESCOD2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD2(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD2(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD2(INDIC) = VALEUR
 Affzo DESCOD2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD3
Onevent BEFORE_INPUT Call AS_DESCOD3(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD3 From W1TCT1
Return

$AV_DESCOD3
If GWINVDES(3)<>""
 Chgfmt [M]DESCOD3(indice) With GWINVDES(3)
Else
 Chgfmt [M]DESCOD3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD3(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD3(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD3(INDIC) = VALEUR
 Affzo DESCOD3(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD4
Onevent BEFORE_INPUT Call AS_DESCOD4(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD4 From W1TCT1
Return

$AV_DESCOD4
If GWINVDES(4)<>""
 Chgfmt [M]DESCOD4(indice) With GWINVDES(4)
Else
 Chgfmt [M]DESCOD4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD4(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD4(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD4(INDIC) = VALEUR
 Affzo DESCOD4(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD5
Onevent BEFORE_INPUT Call AS_DESCOD5(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD5 From W1TCT1
Return

$AV_DESCOD5
If GWINVDES(5)<>""
 Chgfmt [M]DESCOD5(indice) With GWINVDES(5)
Else
 Chgfmt [M]DESCOD5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD5(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD5(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD5(INDIC) = VALEUR
 Affzo DESCOD5(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD6
Onevent BEFORE_INPUT Call AS_DESCOD6(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD6 From W1TCT1
Return

$AV_DESCOD6
If GWINVDES(6)<>""
 Chgfmt [M]DESCOD6(indice) With GWINVDES(6)
Else
 Chgfmt [M]DESCOD6(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD6(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD6(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD6(INDIC) = VALEUR
 Affzo DESCOD6(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD7
Onevent BEFORE_INPUT Call AS_DESCOD7(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD7 From W1TCT1
Return

$AV_DESCOD7
If GWINVDES(7)<>""
 Chgfmt [M]DESCOD7(indice) With GWINVDES(7)
Else
 Chgfmt [M]DESCOD7(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD7(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD7(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD7(INDIC) = VALEUR
 Affzo DESCOD7(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD8
Onevent BEFORE_INPUT Call AS_DESCOD8(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD8 From W1TCT1
Return

$AV_DESCOD8
If GWINVDES(8)<>""
 Chgfmt [M]DESCOD8(indice) With GWINVDES(8)
Else
 Chgfmt [M]DESCOD8(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD8(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD8(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD8(INDIC) = VALEUR
 Affzo DESCOD8(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_DESCOD9
Onevent BEFORE_INPUT Call AS_DESCOD9(zc) From W1TCT1
Onevent BEFORE_AREA Gosub AV_DESCOD9 From W1TCT1
Return

$AV_DESCOD9
If GWINVDES(9)<>""
 Chgfmt [M]DESCOD9(indice) With GWINVDES(9)
Else
 Chgfmt [M]DESCOD9(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_DESCOD9(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DESCOD9(VALEUR) From SUBTCT
If mkstat=2
 [M]DESCOD9(INDIC) = VALEUR
 Affzo DESCOD9(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$TIT_COL
Local Char TITCL(200)(1..10)
Raz TITCL
Case BASPAG
 When "BASTAB"
  TITCL(1) = GSINTCOL(0)
  TITCL(2) = GSINTCOL(1)
  TITCL(3) = GSINTCOL(2)
  TITCL(4) = GSINTCOL(3)
  TITCL(5) = GSINTCOL(4)
  TITCL(6) = GSINTCOL(5)
  TITCL(7) = GSINTCOL(6)
  TITCL(8) = GSINTCOL(7)
  TITCL(9) = GSINTCOL(8)
  TITCL(10) = GSINTCOL(9)
  If !GORITITCOL
   Titcol [M]BASTAB TITCL(1) For DESCOD
   Titcol [M]BASTAB TITCL(2) For DESCOD1
   Titcol [M]BASTAB TITCL(3) For DESCOD2
   Titcol [M]BASTAB TITCL(4) For DESCOD3
   Titcol [M]BASTAB TITCL(5) For DESCOD4
   Titcol [M]BASTAB TITCL(6) For DESCOD5
   Titcol [M]BASTAB TITCL(7) For DESCOD6
   Titcol [M]BASTAB TITCL(8) For DESCOD7
   Titcol [M]BASTAB TITCL(9) For DESCOD8
   Titcol [M]BASTAB TITCL(10) For DESCOD9
  Else
   Titcol [M:TCT1]BASTAB TITCL(1) For DESCOD
   Titcol [M:TCT1]BASTAB TITCL(2) For DESCOD1
   Titcol [M:TCT1]BASTAB TITCL(3) For DESCOD2
   Titcol [M:TCT1]BASTAB TITCL(4) For DESCOD3
   Titcol [M:TCT1]BASTAB TITCL(5) For DESCOD4
   Titcol [M:TCT1]BASTAB TITCL(6) For DESCOD5
   Titcol [M:TCT1]BASTAB TITCL(7) For DESCOD6
   Titcol [M:TCT1]BASTAB TITCL(8) For DESCOD7
   Titcol [M:TCT1]BASTAB TITCL(9) For DESCOD8
   Titcol [M:TCT1]BASTAB TITCL(10) For DESCOD9
  Endif
Endcase
Return

$CHG_STY
Return


