#<AdxTL>@(#)0.0.0.0 $Revision$Class Subcontract BOM
# Supervisor
## WMREP REPRESENTATION ## BODS
# 2018-08-27 13:04:47 555

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:BOH])=0 : Local File BOM [BOH] : Endif
If clalev([F:TBO])=0 : Local File TABBOMALT [TBO] : Endif
If clalev([F:WAXX1])=0 : Local File ATEXTRA [WAXX1] : Endif
If clalev([F:WAXX2])=0 : Local File ATEXTRA [WAXX2] : Endif
If clalev([F:ACC])=0 : Local File ACCES [ACC] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [BOH]
LogicClose File [TBO]
LogicClose File [WAXX1]
LogicClose File [WAXX2]
LogicClose File [ACC]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
If GACTX.ALLACS=[V]CST_AYES
 Gosub AQUERY_JOIN_ALL 
Else
 Local Char ACRITROLE(250)(1..)
 [L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"BOS","BOH",ACRITROLE,[V]CST_AFALSE)
 Link [BOH] With
& [TBO]TBO0 ~= [F:BOH]BOMALTTYP;[F:BOH]BOMALT,
& [ACC]CODACC~= GACTX.USER;[F:BOH]ACSCOD,
& [F:WAXX1]AXX0 = "BOM";"BOMDESAXX";GACTX.LAN;[F:BOH]IDENT1;num$([F:BOH]BOMALTTYP),
& [F:WAXX2]AXX0 = "TABBOMALT";"TBODESAXX";GACTX.LAN;num$([F:TBO]BOMALTTYP);num$([F:TBO]BOMALT)
& As [LNK_]
& Where ( (1=1)
& and ([F:BOH]BOMALTTYP=3)
& and ([F:ACC]CONSUL=2)
& and (evalue([L]ACRITROLE))
&  )
Endif
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN_ALL
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"BOS","BOH",ACRITROLE,[V]CST_AFALSE)
Link [BOH] With
& [TBO]TBO0 ~= [F:BOH]BOMALTTYP;[F:BOH]BOMALT,
& [F:WAXX1]AXX0 = "BOM";"BOMDESAXX";GACTX.LAN;[F:BOH]IDENT1;num$([F:BOH]BOMALTTYP),
& [F:WAXX2]AXX0 = "TABBOMALT";"TBODESAXX";GACTX.LAN;num$([F:TBO]BOMALTTYP);num$([F:TBO]BOMALT)
& As [LNK_]
& Where ( (1=1)
& and ([F:BOH]BOMALTTYP=3)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"BOS","BOH",ACRITROLE,[V]CST_AFALSE)
Link [BOH] With
& [TBO]TBO0 ~= [F:BOH]BOMALTTYP;[F:BOH]BOMALT,
& [ACC]CODACC~= GACTX.USER;[F:BOH]ACSCOD,
& [F:WAXX1]AXX0 = "BOM";"BOMDESAXX";GACTX.LAN;[F:BOH]IDENT1;num$([F:BOH]BOMALTTYP),
& [F:WAXX2]AXX0 = "TABBOMALT";"TBODESAXX";GACTX.LAN;num$([F:TBO]BOMALTTYP);num$([F:TBO]BOMALT)
& As [LNK_]
& Where ( (1=1)
& and ([F:BOH]BOMALTTYP=3)
& and ([F:ACC]CONSUL=2)
& and (evalue([L]ACRITROLE))
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# BOH --- BOM(BOH)
QRY(NBREP) = NewInstance R_BODS AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:BOH]AUUID)>0 & [F:BOH]AUUID=NullUuid
 [F:BOH]AUUID = getUuid
Endif
SetInstance QRY(NBREP).BOH With [F:BOH]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
Call ASETTEXTRA(QRY(NBREP).BOH.AXX,"QRY","BOMDESAXX",[F:WAXX1]TEXTE,[F:WAXX1]LANGUE) From ASYRSUB
 
# BOH.L_BOMALT --- TABBOMALT(TBO) L_BOMALT
QRY(NBREP).BOH.L_BOMALT = NewInstance C_TABBOMALT(QRY.ACTX,UIDINS,NUMLIN,QRY(NBREP),"L_BOMALT") AllocGroup QRY(NBREP)
SetInstance QRY(NBREP).BOH.L_BOMALT With [F:TBO]
Call ASETTEXTRA(QRY(NBREP).BOH.L_BOMALT.AXX,"QRY","TBODESAXX",[F:WAXX2]TEXTE,[F:WAXX2]LANGUE ) From ASYRSUB

QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# BOH --- BOM(BOH)
QRY = NewInstance R_BODS AllocGroup PQRY
QRY.BOH.AXX(1) = NewInstance C_ATXTTRA AllocGroup QRY
# BOH.L_BOMALT --- TABBOMALT(TBO) L_BOMALT
QRY.BOH.L_BOMALT = NewInstance C_TABBOMALT(QRY.ACTX,UIDINS,NUMLIN,QRY,"L_BOMALT") AllocGroup QRY
QRY.BOH.L_BOMALT.AXX(1) = NewInstance C_ATXTTRA AllocGroup QRY

QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:BOH]AUUID)>0 & [F:BOH]AUUID=NullUuid
 [F:BOH]AUUID = getUuid
Endif
SetInstance QRY.BOH With [F:BOH]
QRY.BOH.AXX(1).PRO = "BOMDESAXX"
QRY.BOH.AXX(1).LAN = [F:WAXX1]LANGUE
QRY.BOH.AXX(1).TEX = [F:WAXX1]TEXTE
QRY.BOH.AXX(1).FLG = 1
SetInstance QRY.BOH.L_BOMALT With [F:TBO]
QRY.BOH.L_BOMALT.AXX(1).PRO = "TBODESAXX"
QRY.BOH.L_BOMALT.AXX(1).LAN = [F:WAXX2]LANGUE
QRY.BOH.L_BOMALT.AXX(1).TEX = [F:WAXX2]TEXTE
QRY.BOH.L_BOMALT.AXX(1).FLG = 1

[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0BODS
CURQRY = "R_BODS"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).BOH.ITMREF.LNKPRO
Callmet QRY(NBREP).BOH.BOMALT.LNKPRO
Callmet QRY(NBREP).BOH.L_BOMALT.FCY.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.BOH.ITMREF.LNKPRO
Callmet QRY.BOH.BOMALT.LNKPRO
Callmet QRY.BOH.L_BOMALT.FCY.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "ITMREF" : TBFIL(NBPRO) = "[F:BOH]ITMREF"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "BOH.ITMREF"
NBPRO += 1 : TBPRO(NBPRO) = "BOMDESAXX" : TBFIL(NBPRO) = "[F:WAXX1]TEXTE"
           : TBTYP(NBPRO) = 26 : TBPTH(NBPRO) = "BOH.BOMDESAXX"
NBPRO += 1 : TBPRO(NBPRO) = "BOMALT" : TBFIL(NBPRO) = "[F:BOH]BOMALT"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "BOH.BOMALT"
NBPRO += 1 : TBPRO(NBPRO) = "BOMALTAXX" : TBFIL(NBPRO) = "[F:WAXX2]TEXTE"
           : TBTYP(NBPRO) = 26 : TBPTH(NBPRO) = "BOH.L_BOMALT.TBODESAXX"
NBPRO += 1 : TBPRO(NBPRO) = "FCY" : TBFIL(NBPRO) = "[F:TBO]FCY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "BOH.L_BOMALT.FCY"
NBPRO += 1 : TBPRO(NBPRO) = "BOHENDDAT" : TBFIL(NBPRO) = "[F:BOH]BOHENDDAT"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "BOH.BOHENDDAT"
NBPRO += 1 : TBPRO(NBPRO) = "BOMALTTYP" : TBFIL(NBPRO) = "[F:BOH]BOMALTTYP"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "BOH.BOMALTTYP"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:BOH]ITMREF"
ASTDKEY += ";"+"[F:BOH]BOMALT"
ASTDKEY += ";"+"[F:BOH]BOMALTTYP"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From BODS_RSTD
Gosub EVENTS From BODS_RSTD
Return
 


