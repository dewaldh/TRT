#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SPK1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:13:46"
A_USER  = "ADMIN"
A_STAMP = "20180828001346"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SPK1 [SPK1]
Gosub HORODAT
Local Inpbox "SPK1" From GFONCTION At A_STAMP With A_WINDPREV Mask [SPK1] As [SIM_]
Grizo [SPK1]10
Grizo [SPK1]30
Grizo [SPK1]5
Grizo [SPK1]40
Grizo [SPK1]45
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SPK1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=38 : X2(0)=85 : Y1(0)=1 : Y2(0)=13
X1(1)=1 : X2(1)=37 : Y1(1)=4 : Y2(1)=13
X1(2)=1 : X2(2)=37 : Y1(2)=1 : Y2(2)=3
X1(3)=1 : X2(3)=37 : Y1(3)=14 : Y2(3)=24
X1(4)=38 : X2(4)=85 : Y1(4)=14 : Y2(4)=24
Return

$ON_IDEDSTCOD1
Onevent INIT_AREA Call D_IDEDSTCOD1(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_IDEDSTCOD1(zc) From W1SPK1
Return

Subprog D_IDEDSTCOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDEDSTCOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDEDSTCOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDEDSTSCR1
Onevent INIT_AREA Call D_IDEDSTSCR1(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_IDEDSTSCR1(zc) From W1SPK1
Return

Subprog D_IDEDSTSCR1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDEDSTSCR1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDEDSTSCR1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WEICOD1
Onevent INIT_AREA Call D_WEICOD1(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_WEICOD1(zc) From W1SPK1
Return

Subprog D_WEICOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]WEICOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WEICOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WEISCR1
Onevent INIT_AREA Call D_WEISCR1(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_WEISCR1(zc) From W1SPK1
Return

Subprog D_WEISCR1(VALEUR)
Variable Integer VALEUR
If varinit([M]WEISCR1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WEISCR1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUCOD
Onevent INIT_AREA Call D_QTYSTUCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_QTYSTUCOD(zc) From W1SPK1
Return

Subprog D_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYSTUSCR
Onevent INIT_AREA Call D_QTYSTUSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_QTYSTUSCR(zc) From W1SPK1
Return

Subprog D_QTYSTUSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYSTUSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYSTUSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCCCODCOD
Onevent INIT_AREA Call D_SCCCODCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_SCCCODCOD(zc) From W1SPK1
Return

Subprog D_SCCCODCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SCCCODCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SCCCODCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCCCODSCR
Onevent INIT_AREA Call D_SCCCODSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_SCCCODSCR(zc) From W1SPK1
Return

Subprog D_SCCCODSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SCCCODSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SCCCODSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTCOD
Onevent INIT_AREA Call D_LOTCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_LOTCOD(zc) From W1SPK1
Return

Subprog D_LOTCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOTSCR
Onevent INIT_AREA Call D_LOTSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_LOTSCR(zc) From W1SPK1
Return

Subprog D_LOTSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOCOD
Onevent INIT_AREA Call D_SLOCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_SLOCOD(zc) From W1SPK1
Return

Subprog D_SLOCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SLOSCR
Onevent INIT_AREA Call D_SLOSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_SLOSCR(zc) From W1SPK1
Return

Subprog D_SLOSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SLOSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SLOSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERCOD
Onevent INIT_AREA Call D_SERCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_SERCOD(zc) From W1SPK1
Return

Subprog D_SERCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]SERCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SERSCR
Onevent INIT_AREA Call D_SERSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_SERSCR(zc) From W1SPK1
Return

Subprog D_SERSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]SERSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SERSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD1
Onevent INIT_AREA Call D_IDECOD1(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_IDECOD1(zc) From W1SPK1
Return

Subprog D_IDECOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDESCR1
Onevent INIT_AREA Call D_IDESCR1(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_IDESCR1(zc) From W1SPK1
Return

Subprog D_IDESCR1(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDECOD2
Onevent INIT_AREA Call D_IDECOD2(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_IDECOD2(zc) From W1SPK1
Return

Subprog D_IDECOD2(VALEUR)
Variable Integer VALEUR
If varinit([M]IDECOD2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDECOD2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_IDESCR2
Onevent INIT_AREA Call D_IDESCR2(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_IDESCR2(zc) From W1SPK1
Return

Subprog D_IDESCR2(VALEUR)
Variable Integer VALEUR
If varinit([M]IDESCR2,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IDESCR2(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRLINCOD
Onevent INIT_AREA Call D_VCRLINCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_VCRLINCOD(zc) From W1SPK1
Return

Subprog D_VCRLINCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRLINCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRLINCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VCRLINSCR
Onevent INIT_AREA Call D_VCRLINSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_VCRLINSCR(zc) From W1SPK1
Return

Subprog D_VCRLINSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]VCRLINSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VCRLINSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WEICOD
Onevent INIT_AREA Call D_WEICOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_WEICOD(zc) From W1SPK1
Return

Subprog D_WEICOD(VALEUR)
Variable Integer VALEUR
If varinit([M]WEICOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WEICOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_WEISCR
Onevent INIT_AREA Call D_WEISCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_WEISCR(zc) From W1SPK1
Return

Subprog D_WEISCR(VALEUR)
Variable Integer VALEUR
If varinit([M]WEISCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_WEISCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DIUCOD
Onevent INIT_AREA Call D_DIUCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_DIUCOD(zc) From W1SPK1
Return

Subprog D_DIUCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]DIUCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DIUCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DIUSCR
Onevent INIT_AREA Call D_DIUSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_DIUSCR(zc) From W1SPK1
Return

Subprog D_DIUSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]DIUSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DIUSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VOLCOD
Onevent INIT_AREA Call D_VOLCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_VOLCOD(zc) From W1SPK1
Return

Subprog D_VOLCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]VOLCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VOLCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_VOLSCR
Onevent INIT_AREA Call D_VOLSCR(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_VOLSCR(zc) From W1SPK1
Return

Subprog D_VOLSCR(VALEUR)
Variable Integer VALEUR
If varinit([M]VOLSCR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_VOLSCR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PCKFLT
Onevent INIT_AREA Call D_PCKFLT(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_PCKFLT(zc) From W1SPK1
Return

Subprog D_PCKFLT(VALEUR)
Variable Integer VALEUR
If varinit([M]PCKFLT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PCKFLT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PKGTYP
Onevent AFTER_AREA Call AP_PKGTYP(zc) From W1SPK1
Onevent INIT_AREA Call D_PKGTYP(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_PKGTYP(zc) From W1SPK1
Return

Subprog D_PKGTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PKGTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PKGTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_PKGTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_PKGTYP(VALEUR) From SUBSPK
If mkstat : GERR = 1 : GZONE = "PKGTYP" : GZNUM = 29733 : Endif
Gosub _AFF
End

$ON_BPTNUMCOD
Onevent BEFORE_INPUT Call AS_BPTNUMCOD(zc) From W1SPK1
Onevent INIT_AREA Call D_BPTNUMCOD(zc) From W1SPK1
Onevent CONTROL Call C_BPTNUMCOD(zc) From W1SPK1
Return

Subprog D_BPTNUMCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]BPTNUMCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BPTNUMCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(35) From COMBOS
## Action STD
Call AS_BPTNUMCOD(VALEUR) From SUBSPK
If mkstat=2
 [M]BPTNUMCOD(INDIC) = VALEUR
 Affzo BPTNUMCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,35,1))))
Endif
If !mkstat
 Discombo 0 From BPTNUMCOD(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From BPTNUMCOD(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_BPTNUMCOD(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_PACNBRCOD
Onevent INIT_AREA Call D_PACNBRCOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_PACNBRCOD(zc) From W1SPK1
Return

Subprog D_PACNBRCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]PACNBRCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PACNBRCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GROWEICOD
Onevent INIT_AREA Call D_GROWEICOD(zc) From W1SPK1
Onevent BEFORE_INPUT Call AS_GROWEICOD(zc) From W1SPK1
Return

Subprog D_GROWEICOD(VALEUR)
Variable Integer VALEUR
If varinit([M]GROWEICOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_GROWEICOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PRNCOD1
Onevent BEFORE_INPUT Call AS_PRNCOD1(zc) From W1SPK1
Onevent AFTER_AREA Call AP_PRNCOD1(zc) From W1SPK1
Onevent AFTER_CHANGE Gosub AMM_PRNCOD1 From W1SPK1
Onevent INIT_AREA Call D_PRNCOD1(zc) From W1SPK1
Onevent CONTROL Call C_PRNCOD1(zc) From W1SPK1
Return

Subprog D_PRNCOD1(VALEUR)
Variable Integer VALEUR
If varinit([M]PRNCOD1,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_PRNCOD1(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(708) From COMBOS
## Action STD
Call AS_PRNCOD1(VALEUR) From SUBSPK
If mkstat=2
 [M]PRNCOD1(INDIC) = VALEUR
 Affzo PRNCOD1(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,708,1))))
Endif
If !mkstat
 Discombo 0 From PRNCOD1(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From PRNCOD1(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_PRNCOD1(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

Subprog AP_PRNCOD1(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_PRNCOD1(VALEUR) From SUBSPK
If mkstat : GERR = 1 : GZONE = "PRNCOD1" : GZNUM = 810 : Endif
Gosub _AFF
End

$AMM_PRNCOD1
Call AM_PRNCOD1(zc)
If !mkstat & GOBJET
 zoncou = "PRNCOD1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PRNCOD1(VALEUR)
Variable Integer VALEUR
## Action DUMMY
If mkstat : GERR = 1 : GZONE = "PRNCOD1" : GZNUM = 810 : Endif
Gosub _AFF
End

$CHG_STY
Gosub CHG_STY From W2SPK1
Return

$TIT_COL
Gosub TIT_COL From W2SPK1
Return


