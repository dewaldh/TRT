#<AdxTL>@(#)0.0.0.0 $Revision$
# Script            : SUBYBB
# Creation date     : 28/08/2018
# Version           : 1.0.11
# Authors (Company) : DH (Leverage)
# Module            : Intercompany
#------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-27
# Description       : Business Batch Screens - Hybrid Development
#------------------------------------------------------------------------------------#

$ACTION
Case ACTION
  When "OUVRE"        : Gosub OUVRE
  When "FERME"        : Gosub FERME
  When "RAZCRE"       : Gosub RAZCRE
  When "LIENS"        : Gosub LIENS
  When "CREATION"     : Gosub CREATION
  When "APRES_CRE"    : Gosub APRES_CRE
  When "MODIF"        : Gosub MODIF
  When "APRES_MOD"    : Gosub APRES_MOD
  When "RAZDUP"       : Gosub RAZDUP
  When "AV_ANNULE"    : Gosub AV_ANNULE
  When "ANNULE"       : Gosub ANNULE
  When "SETBOUT"      : Gosub SETBOUT
  When "EXEBOUT"      : Gosub EXEBOUT
  When "STYLE"      : Gosub STYLE
  When Default
Endcase

Return

#------------------------------------------------------------------------------------#
#Open
#------------------------------------------------------------------------------------#
$OUVRE
  #Open STD data type GTE tables
  If clalev([F:GDD]) = 0 : Local File GDIAENTRYD [GDD] : Endif
  If clalev([F:GDE]) = 0 : Local File GDIAENTRY  [GDE] : Endif
  If clalev([F:YBBD]) = 0 : Local File YBBDETAIL [YBBD] : Endif
  If clalev([F:YBBS]) = 0 : Local File YBBSIM    [YBBS] : Endif
  If clalev([F:YBBE]) = 0 : Local File YBBERR    [YBBE] : Endif

  #Declare Global Batch Number to be used
  Global Char GBATNBR(30)

  #Hybrid
  Global Instance GZINSYBBT Using C_YBBT
  #Global Instance GZINSYBBD Using C_YBBD
  ANOWRITE = 1

Return

#------------------------------------------------------------------------------------#
#Close screen
#------------------------------------------------------------------------------------#
$FERME
  If GZINSYBBT <> null Then
    FreeGroup GZINSYBBT
  Endif
  Kill GZINSYBBT

Return

#------------------------------------------------------------------------------------#
#Before Create
#------------------------------------------------------------------------------------#
$RAZCRE
Local Integer NI
Local Integer MY_STATUS

  If GZINSYBBT <> null Then
    FreeGroup GZINSYBBT
  Endif
  GZINSYBBT = NewInstance C_YBBT AllocGroup null
  [L]MY_STATUS = fmet GZINSYBBT.AINIT()

  If [L]MY_STATUS >= [V]CST_AERROR Then
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
    GOK = 0
    GERR = 1
    Return
  Endif

  GZINSYBBT.YBATNBR = [M:YBB0]YBATNBR
  #GZINSYBBD.YBATNBR = [M:YBB0]YBATNBR

  SetInstance [F:YBBH] With GZINSYBBT
  [M:YBB0] = [F:YBBH]

  nolign = 0

  [M:YBB1]NBLIG = nolign

  Affzo [M:YBB0]1-99
  Affzo [M:YBB1]1-99

Return

#------------------------------------------------------------------------------------#
#Read
#------------------------------------------------------------------------------------#
$LIENS
Local Integer MY_STATUS

  If GZINSYBBT <> null Then
    FreeGroup GZINSYBBT
  Endif

  GZINSYBBT = NewInstance C_YBBT AllocGroup null

  [L]MY_STATUS = fmet GZINSYBBT.AREAD([M:YBB0]YBATNBR)
  If [L]MY_STATUS >= [V]CST_AERROR Then
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
    GOK = 0
    GERR = 1
    Return
  Endif

  #JR - Why are you reading the record here, when you have read it from the Class above?!?!
  #DH - It did not populate the fields, but that is now fixed in the class when the read box got checked.
 # Read [F:YBBH]YBBH0 = [M:YBB0]YBATNBR
 # [M:YBB0] = [F:YBBH]

  # Details
  nolign = 1
  For [F:YBBD]YBBD0 Where [F:YBBD]YBATNBR = [M:YBB0]YBATNBR
    [M:YBB1] = [F:YBBD]
    [M:YBB1]AUUIDS(nolign-1) = num$([F:YBBD]AUUID)
    nolign += 1
  Next
  [M:YBB1]NBLIG = nolign - 1

  # Simulation & Error Tables
  If clalev([F:YBBS]) = 0 : Local File YBBSIM [YBBS]   : Endif
  If clalev([F:YBBE]) = 0 : Local File YBBERR [YBBE]   : Endif

  nolign = 1
  For [F:YBBS]YBBS1 Where [F:YBBS]YBATNBR = [M:YBB0]YBATNBR
    [M:YBB2] = [F:YBBS]
    nolign += 1
  Next
  [M:YBB2]YLIG = nolign - 1

  nolign = 1
  For [F:YBBE]YBBE1 Where [F:YBBE]YBATNBR = [M:YBB0]YBATNBR
    [M:YBB3] = [F:YBBE]
    nolign += 1
  Next
  [M:YBB3]YLIG = nolign - 1

  Affzo [M:YBB0]
  Affzo [M:YBB1]
  Affzo [M:YBB2]
  Affzo [M:YBB3]

Return

#------------------------------------------------------------------------------------#
#Create
#------------------------------------------------------------------------------------#
$CREATION
Local Integer MY_STATUS

  # -- YBBD - Start
  #Clear Duplication of Lines
  Local Integer I
  For I=1 To maxtab(GZINSYBBT.YBBD)
    If (fmet GZINSYBBT.ADELLINE("YBBD", GZINSYBBT.YBBD(I).AORDER) <> [V]CST_AOK)
      GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
      GOK = 0
      GERR = 1
      Return
    Endif
  Next

  [F:YBBH]YBATNBR = [M:YBB0]YBATNBR
  SetInstance GZINSYBBT With [F:YBBH] #JR

  Local Integer I, INDEX
  For I = 0 To [M:YBB1]NBLIG - 1
    INDEX = fmet GZINSYBBT.ADDLINE("YBBD", [V]CST_ALASTPOS)
    If (INDEX = [V]CST_ANOTDEFINED)
      # Error management
      GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
      GOK = 0
      GERR = 1
      Return
    Endif

    nolign = I + 1
    # Need to use [F] because it is impossible to set a class from [M]
    [F:YBBD] = [M:YBB1]
    [F:YBBD]YBATNBR = GZINSYBBT.YBATNBR

    # Use the SetInstance
    SetInstance GZINSYBBT.YBBD(INDEX) With [F:YBBD]
    GZINSYBBT.YBBD.YDETLIG = [M:YBB1]NBLIG

  Next
  If (GERR = 1) : Return : Endif

  [L]MY_STATUS = fmet GZINSYBBT.AINSERT()
  If [L]MY_STATUS >= [V]CST_AERROR Then
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYBBT)
    If GMESSAGE = AVOID.ACHAR Then
      GMESSAGE = mess(6,6254,1)
      GOK = 0 : GERR = 1
    Endif
    Return
  Endif

  #After a successful insert, refresh the [F] file because the key may be generated in the AINSERT method.
  SetInstance [F:YBBH] With GZINSYBBT

#  #Then before invoking the AINSERT method you have to create lines in the collection from lines in the screen
#  Local Integer INDEX
#  INDEX = fmet GZINSYBBT.ADDLINE("YBBD", [V]CST_ALASTPOS)
#  If (INDEX = [V]CST_ANOTDEFINED)
#    # Error management
#    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
#    GOK = 0
#    GERR = 1
#    Return
#  Endif
#
#  #You can use the instruction SetInstance which will set propertie's values from field's values for propertie's names that are identical to a field's name of the [F] file.
#  #SetInstance GZINSYBBT.YBBD With [F:YBBD]
#  SetInstance GZINSYBBT.YBBD(INDEX) With [F:YBBD]
#
#  [F:YBBH] = [M:YBB0]
#  GZINSYBBT.YBATNBR = [M:YBB0]YBATNBR
#  GZINSYBBT.YBATSTA = 1
#
#  [L]MY_STATUS = fmet GZINSYBBT.AINSERT()
#  If [L]MY_STATUS >= [V]CST_AERROR Then
#    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYBBT)
#    If GMESSAGE = AVOID.ACHAR Then
#      GMESSAGE = mess(6,6254,1)
#      GOK = 0 : GERR = 1
#    Endif
#    Return
#  Endif
#
#  Local Integer I, INDEX
#  For I = 0 To [M:YBB1]NBLIG - 1
#    nolign = I + 1
#    #Infbox [M:YBB1]YACC(I)
#    [F:YBBD] = [M:YBB1]
#    GZINSYBBT.YBBD.YBATNBR = [M:YBB0]YBATNBR
#    GZINSYBBT.YBBD.YFCY = [M:YBB1]YFCY(I)
#    GZINSYBBT.YBBD.YENTTYP = [M:YBB1]YENTTYP(I)
#    GZINSYBBT.YBBD.YTRANSNBR = [M:YBB1]YTRANSNBR(I)
#    GZINSYBBT.YBBD.YJOU = [M:YBB1]YJOU(I)
#    GZINSYBBT.YBBD.YCPY = [M:YBB1]YCPY(I)
#    GZINSYBBT.YBBD.YACM = [M:YBB1]YACM(I)
#    GZINSYBBT.YBBD.YLED1 = [M:YBB1]YLED1(I)
#    GZINSYBBT.YBBD.YELA = [M:YBB1]YELA(I)
#    GZINSYBBT.YBBD.YCOA = [M:YBB1]YCOA(I)
#    GZINSYBBT.YBBD.YELA = [M:YBB1]YELA(I)
#    GZINSYBBT.YBBD.YBAN = [M:YBB1]YBAN(I)
#    GZINSYBBT.YBBD.YACC = [M:YBB1]YACC(I)
#    GZINSYBBT.YBBD.YLIGDES = [M:YBB1]YLIGDES(I)
#    GZINSYBBT.YBBD.YDETDES = [M:YBB1]YDETDES(I)
#    GZINSYBBT.YBBD.YCTRL = [M:YBB1]YCTRL(I)
#    GZINSYBBT.YBBD.YBP = [M:YBB1]YBP(I)
#    GZINSYBBT.YBBD.YDEB = [M:YBB1]YDEB(I)
#    GZINSYBBT.YBBD.YCDT = [M:YBB1]YCDT(I)
#    GZINSYBBT.YBBD.YTAX = [M:YBB1]YTAX(I)
#    GZINSYBBT.YBBD.YGSTAMT = [M:YBB1]YGSTAMT(I)
#    GZINSYBBT.YBBD.YAMTTAX = [M:YBB1]YAMTTAX(I)
#    GZINSYBBT.YBBD.YREF = [M:YBB1]YREF(I)
#    GZINSYBBT.YBBD.YPJT = [M:YBB1]YPJT(I)
#    GZINSYBBT.YBBD.YDIE0 = [M:YBB1]YDIE0(I)
#    GZINSYBBT.YBBD.YCCE0 = [M:YBB1]YCCE0(I)
#    GZINSYBBT.YBBD.YDIE1 = [M:YBB1]YDIE1(I)
#    GZINSYBBT.YBBD.YCCE1 = [M:YBB1]YCCE1(I)
#    GZINSYBBT.YBBD.YDIE2 = [M:YBB1]YDIE2(I)
#    GZINSYBBT.YBBD.YCCE2 = [M:YBB1]YCCE2(I)
#    GZINSYBBT.YBBD.YDIE3 = [M:YBB1]YDIE3(I)
#    GZINSYBBT.YBBD.YCCE3 = [M:YBB1]YCCE3(I)
#    GZINSYBBT.YBBD.YDIE4 = [M:YBB1]YDIE4(I)
#    GZINSYBBT.YBBD.YCCE4 = [M:YBB1]YCCE4(I)
#    GZINSYBBT.YBBD.YBATTYP = [M:YBB1]YBATTYP(I)
#    GZINSYBBT.YBBD.YDETLIG = nolign
#    GZINSYBBT.YBBD.YGSTINC = [M:YBB1]YGSTINC(I)
#
#    [L]MY_STATUS = fmet GZINSYBBT.YBBD.AINSERT()
#    If [L]MY_STATUS >= [V]CST_AERROR Then
#      Call RECOVERS_ERROR_IN_CLASSIC(GZINSYBBT)
#      If GMESSAGE = AVOID.ACHAR Then
#        GMESSAGE = mess(7,6254,1)
#        GOK = 0 : GERR = 1
#      Endif
#      Return
#    Endif
#  Next
#
#  SetInstance [F:YBBH] With GZINSYBBT
#  SetInstance [F:YBBD] With GZINSYBBT.YBBD
#
#  Affzo [M:YBB0]1-99
#  Affzo [M:YBB1]1-99

  If GERR = 1 Then
    Return
  Endif

Return

#------------------------------------------------------------------------------------#
#After create record
#------------------------------------------------------------------------------------#
$APRES_CRE
Gosub RELIT From GOBJSUB

Return

#------------------------------------------------------------------------------------#
#Modification
#------------------------------------------------------------------------------------#
$MODIF
Local Integer MY_STATUS

  #--- Header
  #Raz [F:YBBH] #JR
  #[F:YBBH] = [M:YBB0] #JR
  SetInstance GZINSYBBT With [F:YBBH]
  #SetInstance GZINSYBBT.YBBD With [F:YBBD] #JR

  For NI = 0 To [M:YBB1]NBLIG-1
    [M:YBB1]YBATNBR(NI) = [M:YBB0]YBATNBR
    [M:YBB1]YDETLIG(NI) = NI+1
  Next

  #--- Details
  Local Integer NI, ILINE
  For NI = 0 To [M:YBB1]NBLIG-1
    nolign = NI + 1
    Raz [F:YBBD]
    ILINE=0 #JR
    If [M:YBB1]AUUIDS(NI) <> "" Then
      ILINE = find(toUuid([M:YBB1]AUUIDS(NI)), GZINSYBBT.YBBD(1..maxtab(GZINSYBBT.YBBD)).AUUID)
    Endif
    If ILINE = 0 Then
      ILINE = fmet GZINSYBBT.ADDLINE("YBBD",[V]CST_ALASTPOS)
      If ILINE = [V]CST_ANOTDEFINED Then
        GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSPJM)
        GOK = 0
        GERR = 1
        Break
      Endif
    Endif

    [F:YBBD] = [M:YBB0] #JR
    [F:YBBD] = [M:YBB1]

    SetInstance GZINSYBBT.YBBD(ILINE) With [F:YBBD]

  Next
  If GERR = 1 : End : Endif

  For NI = 1 To maxtab(GZINSYBBT.YBBD)
    If GZINSYBBT.YBBD(NI) <> null and find(GZINSYBBT.YBBD(NI).ASTALIN, [V]CST_ANEW, [V]CST_AUPD) = 0
      If (fmet GZINSYBBT.ADELLINE("YBBD", GZINSYBBT.YBBD(NI).AORDER) <> [V]CST_AOK)
        GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
        GOK = 0
        GERR = 1
        Return
      Endif
    Endif
  Next
  If (GERR = 1) : Return : Endif

  [L]MY_STATUS = fmet GZINSYBBT.AUPDATE()
  If [L]MY_STATUS <> [V]CST_AOK Then
    Call RECOVERS_ERROR_IN_CLASSIC(GZINSYBBT)
    GOK = 0
    GERR = 1
    Return
    If [L]MY_STATUS <> [V]CST_AWARNING Then
      Return
    Endif
  Endif

Return

#------------------------------------------------------------------------------------#
#AFTER UPDATE
#------------------------------------------------------------------------------------#
$APRES_MOD
  Gosub RELIT From GOBJSUB
Return

#------------------------------------------------------------------------------------#
#This action is called when a field of the primary key is changed
#------------------------------------------------------------------------------------#
$RAZDUP
Local Integer MY_STATUS

  If (GZINSYBBT <> null) : FreeGroup GZINSYBBT : Endif
  GZINSYBBT = NewInstance C_YBBT AllocGroup null

  [L]MY_STATUS = fmet GZINSYBBT.AINIT()
  If ([L]MY_STATUS >= [V]CST_AERROR)
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
    GOK = 0 : GERR = 1
    Return
  Endif

Return

#------------------------------------------------------------------------------------#
#Begin delete record
#------------------------------------------------------------------------------------#
$AV_ANNULE
  Local Integer ANOWRITE
  ANOWRITE = 1
  Infbox "1"

Return

#------------------------------------------------------------------------------------#
#Delete record
#------------------------------------------------------------------------------------#
$ANNULE
Local Integer MY_STATUS

  [L]MY_STATUS = fmet GZINSYBBT.ADELETE()
  If ([L]MY_STATUS >= [V]CST_AERROR)
    GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
    GOK = 0 : GERR = 1
    Return
  Endif

Return

#------------------------------------------------------------------------------------#
#Set Buttons
#------------------------------------------------------------------------------------#
$SETBOUT

  If [M:YBB0]YBATSTA = 1 Then
    Call VIREBOUT(CHAINE,"2") From GOBJET
  Endif
#  If [M:YBB0]YBATSTA = 2 Then
#    Call VIREBOUT(CHAINE,"1") From GOBJET
#  Endif
  If [M:YBB0]YBATSTA = 3 Then
    Call VIREBOUT(CHAINE,"2") From GOBJET
  Endif
  If [M:YBB0]YBATSTA = 4 Then
    Call VIREBOUT(CHAINE,"2") From GOBJET
    Call VIREBOUT(CHAINE,"M") From GOBJET
    Call VIREBOUT(CHAINE,"A") From GOBJET
    Call VIREBOUT(CHAINE,"1") From GOBJET
  Endif

Return

#------------------------------------------------------------------------------------#
#Execute Buttons
#------------------------------------------------------------------------------------#
$EXEBOUT
  If BOUT = "1"
    Gosub VALIDATE From SPEYBBVAL
  Endif
  If BOUT = "2"
    Gosub POST From SPEYBBVAL
  Endif

Return

#------------------------------------------------------------------------------------#
#Execute Style
#------------------------------------------------------------------------------------#
$STYLE

  nolign = 1
  If clalev([F:GAC]) = 0 : Local File GACCOUNT [GAC] : Endif
  For [F:YBBD]YBBD0 Where [F:YBBD]YBATNBR = [M:YBB0]YBATNBR
    Read [F:GAC]GAC0 = [M:YBB1]YCOA(nolign-1);[M:YBB1]YACC(nolign-1)
    #Check ELA Availability
    Call CTR_FLD([M:YBB1]YJOU(nolign-1)) From SPEYBB
    #Debit/Credit Field checks  - Start
    Actzo [M:YBB1]YDEB(nolign-1) : Actzo [M:YBB1]YCDT(nolign-1)
    If [M:YBB1]YDEB(nolign-1) = 0 : Diszo [M:YBB1]YDEB(nolign-1) : Endif
    If [M:YBB1]YCDT(nolign-1) = 0 : Diszo [M:YBB1]YCDT(nolign-1) : Endif
    #Debit/Credit Field checks  - End
    #Tax Field
    Call TAXRULEVAL([M:YBB1]YACC(nolign-1)) From SPEYBB
    Local Char ENT(20) : ENT = "LIENS"
    Call GET_DIM([M:YBB1]YACC(nolign-1),ENT) From SPEYBB
    #Check PJM Fields
    If [F:GAC]YPJM = 2 Then
      Actzo [M:YBB1]YPJT(nolign-1)
    Else
      Diszo [M:YBB1]YPJT(nolign-1)
    Endif
    nolign += 1
  Next
  [M:YBB1]NBLIG = nolign - 1
  nolign = 1
  #Check Valid Sites for GST Group
#  Local Integer I : I = 0
#  Local Char REQUEST(255)(0..3)
#  For I = [M:YBB1]NBLIG
#    REQUEST(0) = "Select count(CODGSTGRP_0) from GSTGRPD"
#    REQUEST(1) -= "where CPY_0 in (Select LEGCPY_0 from FACILITY Where FCY_0 in"
#    REQUEST(2) -= "('"+[M:YBB1]YFCY(nolign-1)+"','"+[M:YBB0]YBATFCY+"'))"
#    For (Integer COD) From "5" Sql REQUEST As [YLNK]
#      If COD >= 2 Then
#        [M:YBB1]YTAX(nolign-1) = 'N/A'
#        Diszo [M:YBB1]YTAX(nolign-1)
#      Endif
#      If [M:YBB1]YFCY(nolign-1) = [M:YBB0]YBATFCY and COD = 1 Then
#        [M:YBB1]YTAX(nolign-1) = 'N/A'
#        Diszo [M:YBB1]YTAX(nolign-1)
#      Endif
#    Next
#  Next
[M:YBB1]YTOTCRE = sum([M:YBB1]YCDT)
[M:YBB1]YTOTDEB = sum([M:YBB1]YDEB)
Affzo [M:YBB1]YTOTDEB
Affzo [M:YBB1]YTOTCRE

Affzo [M:YBB1]

Return


#------------------------------------------------------------------------------------#
#Additional Functionality
#------------------------------------------------------------------------------------#

Subprog RECOVERS_ERROR_IN_CLASSIC(GZINSYBBT)
Variable Instance GZINSYBBT Using C_YBBT
Local Integer NI

GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)

If GMESSAGE = AVOID.ACHAR Then
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(GZINSYBBT)
  If GMESSAGE <> AVOID.ACHAR Then
    GMESSAGE = "Business Batch" - GMESSAGE
  Endif
Endif

GOK = 0
GERR = 1

End

