#<AdxTL>@(#)0.0.0.0 $Revision$Class Work center groups
# Sage X3 supervisor
## CRUD-CLASSE ## TABWRKCTR
# 2018-03-26 00:49:46 264


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABWRKCTR [TWC_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABWRKCTR") From ASYRCOM : Endif
Local Instance TABWRKCTR Using C_TABWRKCTR

If !SILENCE : Call TRACE("3 --> New Instance C_TABWRKCTR") From ASYRCOM : Endif
TABWRKCTR = NewInstance C_TABWRKCTR AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TWC_]TWC0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABWRKCTR") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.AREAD([TWC_]WCR))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABWRKCTR.WCR ="-num$(TABWRKCTR.WCR)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABWRKCTR.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABWRKCTR.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TWC_]
FreeGroup TABWRKCTR
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABWRKCTR,ACLE,ASTATUS,_ETAG)
Variable Instance TABWRKCTR Using C_TABWRKCTR
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _WCR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_WCR = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABWRKCTR [TWC]
Default File [F:TWC]
Read [F:TWC]TWC0 = [L]_WCR
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TWC]UPDTICK)>0
 [L]_ETAG = num$([F:TWC]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABWRKCTR,ACLE,ASTATUS)
Variable Instance TABWRKCTR Using C_TABWRKCTR
Value Char ACLE
Variable Integer ASTATUS
Local Char _WCR(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_WCR = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.AREAD([L]_WCR))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABWRKCTR,_WCR,ASTATUS)
Variable Instance TABWRKCTR Using C_TABWRKCTR
Value Char _WCR
Variable Integer ASTATUS

If TABWRKCTR = null : End : Endif

Gosub AVARIABLES From WMC00TABWRKCTR
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABWRKCTR.APARENT=null
 [L]A_I = TABWRKCTR.freeSnapshot
 TABWRKCTR.snapshotEnabled = 0
 TABWRKCTR.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABWRKCTR.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABWRKCTR.APARENT=null
 TABWRKCTR.snapshotEnabled = 1
 TABWRKCTR.setAccessorEnabled = 1
Endif
LogicClose File [TWC] ,[MWS]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR._ACTION_PARAM("AREAD_BEFORE",[L]_WCR))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TWC]
Read [F:TWC]TWC0 = [L]_WCR
If fstat
[L]A_ERROR = [L]_WCR
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABWRKCTR,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TWC]AUUID)>0 & [F:TWC]AUUID=NullUuid
 [F:TWC]AUUID = getUuid
Endif
SetInstance TABWRKCTR With [F:TWC]
TABWRKCTR.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:MWS]
 [L]A_N2=0
 For [F:MWS]WST3 Where WCR=[F:TWC]WCR
  [L]A_N2 +=1
  TABWRKCTR.MWS(A_N2) = NewInstance  C_WORKSTATIO(TABWRKCTR.ACTX,NullUuid,[L]A_N2,TABWRKCTR,"MWS") AllocGroup TABWRKCTR
  [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.MWS(A_N2).ADDINSTANCE_BOUND)
  Callmet TABWRKCTR.MWS(A_N2).AREAD([F:MWS]WST,[F:MWS]WCRFCY)
  TABWRKCTR.MWS(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.MWS(A_N2).ASETATTRIBUTE("WCR","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.MWS(A_N2).ASETATTRIBUTE("WST","$isDisabled","true"))
 Next MWS
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet TABWRKCTR.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABWRKCTR" & ZONE="WCRDESAXX" & IDENT1=TABWRKCTR.WCR & IDENT2=""
 Call ASETTEXTRA(TABWRKCTR.AXX,TABWRKCTR.AllocGrp(),"WCRDESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABWRKCTR.AXX(maxtab(TABWRKCTR.AXX)).FLG = 0
Next AXX
If !len(fmet TABWRKCTR.AGETTEXTRA("WCRDESAXX"))
 Call ASETTEXTRA(TABWRKCTR.AXX,TABWRKCTR.AllocGrp(),"WCRDESAXX",
& fmet TABWRKCTR.AGETTEXTRALAN("WCRDESAXX",TABWRKCTR.ACTX.AFOLD.ALANGDEF),
& TABWRKCTR.ACTX.LAN) From ASYRSUB
Endif

Return



