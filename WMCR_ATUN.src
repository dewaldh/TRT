#<AdxTL>@(#)0.0.0.0 $Revision$Class Table of units of measure
# Supervisor
## CRUD-CLASSE ## ATUN
# 2018-08-27 12:23:26 359


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABUNIT [TUN_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ATUN") From ASYRCOM : Endif
Local Instance ATUN Using C_ATUN

If !SILENCE : Call TRACE("3 --> New Instance C_ATUN") From ASYRCOM : Endif
ATUN = NewInstance C_ATUN AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TUN_]TUN0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ATUN") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ATUN.AREAD([TUN_]UOM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ATUN.UOM ="-num$(ATUN.UOM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ATUN.AKEYS)
  Call TRACE("-"-num$(I)-":"-ATUN.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TUN_]
FreeGroup ATUN
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ATUN,ACLE,ASTATUS,_ETAG)
Variable Instance ATUN Using C_ATUN
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _UOM(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_UOM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABUNIT [TUN]
Default File [F:TUN]
Read [F:TUN]TUN0 = [L]_UOM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TUN]UPDTICK)>0
 [L]_ETAG = num$([F:TUN]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ATUN,ACLE,ASTATUS)
Variable Instance ATUN Using C_ATUN
Value Char ACLE
Variable Integer ASTATUS
Local Char _UOM(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_UOM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATUN.AREAD([L]_UOM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ATUN,_UOM,ASTATUS)
Variable Instance ATUN Using C_ATUN
Value Char _UOM
Variable Integer ASTATUS

If ATUN = null : End : Endif

Gosub AVARIABLES From WMC00ATUN
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ATUN.APARENT=null
 [L]A_I = ATUN.freeSnapshot
 ATUN.snapshotEnabled = 0
 ATUN.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif


$AREAD_END
LogicClose File [TUN]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ATUN._ACTION_PARAM("AREAD_BEFORE",[L]_UOM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TUN]
Read [F:TUN]TUN0 = [L]_UOM
If fstat
[L]A_ERROR = [L]_UOM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ATUN,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TUN]AUUID)>0 & [F:TUN]AUUID=NullUuid
 [F:TUN]AUUID = getUuid
Endif
SetInstance ATUN With [F:TUN]
ATUN.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ATUN.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=ATUN.UOM & IDENT2=""
 Call ASETTEXTRA(ATUN.AXX,ATUN.AllocGrp(),"DES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 ATUN.AXX(maxtab(ATUN.AXX)).FLG = 0
Next AXX
If !len(fmet ATUN.AGETTEXTRA("DES"))
 Call ASETTEXTRA(ATUN.AXX,ATUN.AllocGrp(),"DES",
& fmet ATUN.AGETTEXTRALAN("DES",ATUN.ACTX.AFOLD.ALANGDEF),
& ATUN.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=ATUN.UOM & IDENT2=""
 Call ASETTEXTRA(ATUN.AXX,ATUN.AllocGrp(),"DESSHO",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 ATUN.AXX(maxtab(ATUN.AXX)).FLG = 0
Next AXX
If !len(fmet ATUN.AGETTEXTRA("DESSHO"))
 Call ASETTEXTRA(ATUN.AXX,ATUN.AllocGrp(),"DESSHO",
& fmet ATUN.AGETTEXTRALAN("DESSHO",ATUN.ACTX.AFOLD.ALANGDEF),
& ATUN.ACTX.LAN) From ASYRSUB
Endif

Return



