#<AdxTL>@(#)0.0.0.0 $Revision$Class Table of units of measure
# Sage X3 supervisor
## CRUD-CLASSE ## TABUNIT
# 2018-06-20 07:05:43 957


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABUNIT [TUN_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABUNIT") From ASYRCOM : Endif
Local Instance TABUNIT Using C_TABUNIT

If !SILENCE : Call TRACE("3 --> New Instance C_TABUNIT") From ASYRCOM : Endif
TABUNIT = NewInstance C_TABUNIT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TUN_]TUN0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABUNIT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABUNIT.AREAD([TUN_]UOM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABUNIT.UOM ="-num$(TABUNIT.UOM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABUNIT.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABUNIT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TUN_]
FreeGroup TABUNIT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABUNIT,ACLE,ASTATUS,_ETAG)
Variable Instance TABUNIT Using C_TABUNIT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _UOM(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_UOM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABUNIT [TUN]
Default File [F:TUN]
Read [F:TUN]TUN0 = [L]_UOM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TUN]UPDTICK)>0
 [L]_ETAG = num$([F:TUN]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABUNIT,ACLE,ASTATUS)
Variable Instance TABUNIT Using C_TABUNIT
Value Char ACLE
Variable Integer ASTATUS
Local Char _UOM(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_UOM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABUNIT.AREAD([L]_UOM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABUNIT,_UOM,ASTATUS)
Variable Instance TABUNIT Using C_TABUNIT
Value Char _UOM
Variable Integer ASTATUS

If TABUNIT = null : End : Endif

Gosub AVARIABLES From WMC00TABUNIT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABUNIT.APARENT=null
 [L]A_I = TABUNIT.freeSnapshot
 TABUNIT.snapshotEnabled = 0
 TABUNIT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABUNIT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABUNIT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABUNIT.APARENT=null
 TABUNIT.snapshotEnabled = 1
 TABUNIT.setAccessorEnabled = 1
Endif
LogicClose File [TUN]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABUNIT._ACTION_PARAM("AREAD_BEFORE",[L]_UOM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TUN]
Read [F:TUN]TUN0 = [L]_UOM
If fstat
[L]A_ERROR = [L]_UOM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABUNIT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TUN]AUUID)>0 & [F:TUN]AUUID=NullUuid
 [F:TUN]AUUID = getUuid
Endif
SetInstance TABUNIT With [F:TUN]
TABUNIT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet TABUNIT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABUNIT" & ZONE="DES" & IDENT1=TABUNIT.UOM & IDENT2=""
 Call ASETTEXTRA(TABUNIT.AXX,TABUNIT.AllocGrp(),"DES",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABUNIT.AXX(maxtab(TABUNIT.AXX)).FLG = 0
Next AXX
If !len(fmet TABUNIT.AGETTEXTRA("DES"))
 Call ASETTEXTRA(TABUNIT.AXX,TABUNIT.AllocGrp(),"DES",
& fmet TABUNIT.AGETTEXTRALAN("DES",TABUNIT.ACTX.AFOLD.ALANGDEF),
& TABUNIT.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABUNIT" & ZONE="DESSHO" & IDENT1=TABUNIT.UOM & IDENT2=""
 Call ASETTEXTRA(TABUNIT.AXX,TABUNIT.AllocGrp(),"DESSHO",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABUNIT.AXX(maxtab(TABUNIT.AXX)).FLG = 0
Next AXX
If !len(fmet TABUNIT.AGETTEXTRA("DESSHO"))
 Call ASETTEXTRA(TABUNIT.AXX,TABUNIT.AllocGrp(),"DESSHO",
& fmet TABUNIT.AGETTEXTRALAN("DESSHO",TABUNIT.ACTX.AFOLD.ALANGDEF),
& TABUNIT.ACTX.LAN) From ASYRSUB
Endif

Return



