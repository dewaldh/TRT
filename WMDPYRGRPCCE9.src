#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
## BI-DIMENSION ## Synchronization rule PYRGRPCCE9

$OUVRE
Local Char FILTRE(250)
OUVTAB = GDOSSIER+".GCCEGRUPYM" : If clalev([F:CRY])=0 : Local File =OUVTAB [CRY] : Endif
OUVTAB = GDOSSIER+".GCCEPYM" : If clalev([F:CYM])=0 : Local File =OUVTAB [CYM] : Endif
OUVTAB = "Link [CRY]"
Link [CRY] With
& [CYM]CYM0 = [F:CRY]PYM
& As [LNK_]
& Order By Key CLE = [CRY]PYM;[CRY]GRU;[CRY]LIN
FILTRE = '[F:CRY]LIN=1 & [F:CYM]DIE=func AFNC.PARAM("BIDIE09","")'
Return

$FERME
If clalev([F:CRY]) : Close local File [CRY] : Endif
If clalev([F:CYM]) : Close local File [CYM] : Endif
Return

$DCLE
Local Char    DCLE(GLONAVA)(1..2)
Local Integer DTYP(1..2)
Local Integer NBDCLE
NBDCLE = 2
DCLE(1) = "GRU"
DTYP(1) =  7
DCLE(2) = "PYM"
DTYP(2) =  7
Return

$CHARGE_CLE
If dim([F:AAA_]GRU)>0
 [F:AAA_]GRU = [F:CRY]GRU
Endif
If dim([F:AAA_]PYM)>0
 [F:AAA_]PYM = [F:CRY]PYM
Endif
Return

########################################################################
# Return the filter necessary for incremental delete in synchroonization
Subprog GET_FLTDELINC(PFLT)
Variable Clbfile PFLT
Raz PFLT   # Key is not complete => impossible to define a filter for incrementale deletion
End

$MAJFLD
### PYM
[L]FLD="PYM"
[L]FORMULE='[F:CRY]PYM'
If dim([F:AAA_]PYM)>0
 [F:AAA_]PYM = [F:CRY]PYM
Endif

### DESPYM
[L]FLD="DESPYM"
[L]FORMULE='func BICPT.GETPYRDES(2,[F:CRY]PYM)'
If dim([F:AAA_]DESPYM)>0
 [F:AAA_]DESPYM = func BICPT.GETPYRDES(2,[F:CRY]PYM)
Endif

### GRU
[L]FLD="GRU"
[L]FORMULE='[F:CRY]GRU'
If dim([F:AAA_]GRU)>0
 [F:AAA_]GRU = [F:CRY]GRU
Endif

### LIN
[L]FLD="LIN"
[L]FORMULE='[F:CRY]LIN'
If dim([F:AAA_]LIN)>0
 [F:AAA_]LIN = [F:CRY]LIN
Endif

### CCE
[L]FLD="CCE"
[L]FORMULE='[F:CRY]CCE'
If dim([F:AAA_]CCE)>0
 [F:AAA_]CCE = [F:CRY]CCE
Endif


Return

