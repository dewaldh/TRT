#<AdxTL>@(#)0.0.0.0 $Revision$Class Expense
# Supervisor
## WMREP REPRESENTATION ## EXPENSES
# 2018-08-27 13:14:37 146

#-------------------------------------------------------------------#
# Tables list to open
#-------------------------------------------------------------------#
$AQUERY_OPEN
If clalev([F:EXS])=0 : Local File EXPENSES [EXS] : Endif
If clalev([F:A_])=0 : Local File EXPENSES [A_] : Endif
If clalev([F:AFF])=0 : Local File AFCTFCY [AFF] : Endif
ACTION = "AQUERY_OPEN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Tables list to close
#-------------------------------------------------------------------#
$AQUERY_CLOSE
LogicClose File [EXS]
LogicClose File [A_]
LogicClose File [AFF]
ACTION = "AQUERY_CLOSE_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the query
#-------------------------------------------------------------------#
$AQUERY_JOIN
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"EXS","EXS",ACRITROLE,[V]CST_AFALSE)
Link [EXS] With
& [AFF]AFF0~= [F:EXS]FCY;GACTX.APRFCOD;[L]_AFCRIGHT
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
& and ([F:EXS]VISA='' & [F:EXS]STA<>3)
&  )
ACTION = "AQUERY_JOIN_AFTER" : Gosub AQUERY_ACTION
Return
 
#-------------------------------------------------------------------#
# Link for the lookup
#-------------------------------------------------------------------#
$AQUERY_JOIN_LOOKUP
Local Char ACRITROLE(250)(1..)
[L]ASTATUS = fmet GACTX.AGETCRITROLE(GACTX,"EXS","EXS",ACRITROLE,[V]CST_AFALSE)
Link [EXS] With
& [AFF]AFF0~= [F:EXS]FCY;GACTX.APRFCOD;[L]_AFCRIGHT
& As [LNK_]
& Where ( (1=1)
& and (evalue([L]ACRITROLE))
& and ([F:EXS]VISA='' & [F:EXS]STA<>3)
&  )
Return
 
#-------------------------------------------------------------------#
# Default filter for the query
#-------------------------------------------------------------------#
$AQUERY_FILTER_DEF
Return
 
#-------------------------------------------------------------------#
# Transclass of fields of query
#-------------------------------------------------------------------#
$AQUERY_TRANS
# EXS --- EXPENSES(EXS)
QRY(NBREP) = NewInstance R_EXPENSES AllocGroup PQRY
QRY(NBREP).setAccessorEnabled = 0
If dim([F:EXS]AUUID)>0 & [F:EXS]AUUID=NullUuid
 [F:EXS]AUUID = getUuid
Endif
SetInstance QRY(NBREP).EXS With [F:EXS]
[L]ASTATUS = fmet QRY(NBREP).ACTION("AQUERY_TRANS_AFTER")
 
QRY(NBREP).setAccessorEnabled = 1
Gosub AQUERY_LNKPRO
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_CREATEINSTANCE
# EXS --- EXPENSES(EXS)
QRY = NewInstance R_EXPENSES AllocGroup PQRY
QRY.setAccessorEnabled = 0
Return

#-------------------------------------------------------------------#
# Create instance
#-------------------------------------------------------------------#
$AQUERY_SETINSTANCE
If dim([F:EXS]AUUID)>0 & [F:EXS]AUUID=NullUuid
 [F:EXS]AUUID = getUuid
Endif
SetInstance QRY.EXS With [F:EXS]
[L]ASTATUS = fmet QRY.ACTION("AQUERY_TRANS_AFTER")
Return

#-------------------------------------------------------------------#
# Additionnal criteria of query
#-------------------------------------------------------------------#
$AQUERY_CRITERIA
Gosub DECLARE_VAR From WMC0EXPENSES
CURQRY = "R_EXPENSES"
ACTION = "AQUERY_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# LNKPRO of query 
#-------------------------------------------------------------------#
$AQUERY_LNKPRO
Callmet QRY(NBREP).EXS.CLB.LNKPRO
Callmet QRY(NBREP).EXS.FCY.LNKPRO
Callmet QRY(NBREP).EXS.CODEXP.LNKPRO
Callmet QRY(NBREP).EXS.VISA.LNKPRO
Callmet QRY(NBREP).EXS.AMTPAY.LNKPRO
Callmet QRY(NBREP).EXS.CUR.LNKPRO
Return

#-------------------------------------------------------------------#
# LNKPRO of query INSTANCE
#-------------------------------------------------------------------#
$AQUERY_LNKPRO_INSTANCE
Callmet QRY.EXS.CLB.LNKPRO
Callmet QRY.EXS.FCY.LNKPRO
Callmet QRY.EXS.CODEXP.LNKPRO
Callmet QRY.EXS.VISA.LNKPRO
Callmet QRY.EXS.AMTPAY.LNKPRO
Callmet QRY.EXS.CUR.LNKPRO
Return

#-------------------------------------------------------------------#
# LOAD_PROPERTIES of query
#-------------------------------------------------------------------#
$AQUERY_DECODE_CRITERIA
NBPRO = 0
NBPRO += 1 : TBPRO(NBPRO) = "CLB" : TBFIL(NBPRO) = "[F:EXS]CLB"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EXS.CLB"
NBPRO += 1 : TBPRO(NBPRO) = "DATEXS" : TBFIL(NBPRO) = "[F:EXS]DATEXS"
           : TBTYP(NBPRO) = 8 : TBPTH(NBPRO) = "EXS.DATEXS"
NBPRO += 1 : TBPRO(NBPRO) = "FCY" : TBFIL(NBPRO) = "[F:EXS]FCY"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EXS.FCY"
NBPRO += 1 : TBPRO(NBPRO) = "CODEXP" : TBFIL(NBPRO) = "[F:EXS]CODEXP"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EXS.CODEXP"
NBPRO += 1 : TBPRO(NBPRO) = "NBREXS" : TBFIL(NBPRO) = "[F:EXS]NBREXS"
           : TBTYP(NBPRO) = 2 : TBPTH(NBPRO) = "EXS.NBREXS"
NBPRO += 1 : TBPRO(NBPRO) = "VISA" : TBFIL(NBPRO) = "[F:EXS]VISA"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EXS.VISA"
NBPRO += 1 : TBPRO(NBPRO) = "ACCNUM" : TBFIL(NBPRO) = "[F:EXS]ACCNUM"
           : TBTYP(NBPRO) = 3 : TBPTH(NBPRO) = "EXS.ACCNUM"
NBPRO += 1 : TBPRO(NBPRO) = "STA" : TBFIL(NBPRO) = "[F:EXS]STA"
           : TBTYP(NBPRO) = 1 : TBPTH(NBPRO) = "EXS.STA"
NBPRO += 1 : TBPRO(NBPRO) = "QTY" : TBFIL(NBPRO) = "[F:EXS]QTY"
           : TBTYP(NBPRO) = 3 : TBPTH(NBPRO) = "EXS.QTY"
NBPRO += 1 : TBPRO(NBPRO) = "AMTPAY" : TBFIL(NBPRO) = "[F:EXS]AMTPAY"
           : TBTYP(NBPRO) = 4 : TBPTH(NBPRO) = "EXS.AMTPAY"
NBPRO += 1 : TBPRO(NBPRO) = "CUR" : TBFIL(NBPRO) = "[F:EXS]CUR"
           : TBTYP(NBPRO) = 7 : TBPTH(NBPRO) = "EXS.CUR"
ACTION = "AQUERY_DECODE_CRITERIA_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# Standard key of query
#-------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:EXS]CLB"
ASTDKEY += ";"+"[F:EXS]DATEXS"
ASTDKEY += ";"+"[F:EXS]NBREXS"
ACTION = "AQUERY_PRIMARYKEYS_AFTER" : Gosub AQUERY_ACTION
Return

#-------------------------------------------------------------------#
# ACTIONS
#-------------------------------------------------------------------#
$AQUERY_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From EXPENENT_RSTD
Gosub EVENTS From EXPENENT_RSTD
Return
 


