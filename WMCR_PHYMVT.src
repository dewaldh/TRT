#<AdxTL>@(#)0.0.0.0 $Revision$Class Movements
# Supervisor
## CRUD-CLASSE ## PHYMVT
# 2018-08-27 12:38:55 150


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PHYMVT [PMVT_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PHYMVT") From ASYRCOM : Endif
Local Instance PHYMVT Using C_PHYMVT

If !SILENCE : Call TRACE("3 --> New Instance C_PHYMVT") From ASYRCOM : Endif
PHYMVT = NewInstance C_PHYMVT AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PMVT_]PMVT0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PHYMVT") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PHYMVT.AREAD([PMVT_]PHYREF,[PMVT_]NUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PHYMVT.PHYREF ="-num$(PHYMVT.PHYREF)) From ASYRCOM
 Call TRACE("PHYMVT.NUM ="-num$(PHYMVT.NUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PHYMVT.AKEYS)
  Call TRACE("-"-num$(I)-":"-PHYMVT.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PMVT_]
FreeGroup PHYMVT
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PHYMVT,ACLE,ASTATUS,_ETAG)
Variable Instance PHYMVT Using C_PHYMVT
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _PHYREF(20)
Local Shortint _NUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PHYREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_NUM = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File PHYMVT [PMVT]
Default File [F:PMVT]
Read [F:PMVT]PMVT0 = [L]_PHYREF;[L]_NUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PMVT]UPDTICK)>0
 [L]_ETAG = num$([F:PMVT]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PHYMVT,ACLE,ASTATUS)
Variable Instance PHYMVT Using C_PHYMVT
Value Char ACLE
Variable Integer ASTATUS
Local Char _PHYREF(20)
Local Shortint _NUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_PHYREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_NUM = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PHYMVT.AREAD([L]_PHYREF,[L]_NUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PHYMVT,_PHYREF,_NUM,ASTATUS)
Variable Instance PHYMVT Using C_PHYMVT
Value Char _PHYREF
Value Shortint _NUM
Variable Integer ASTATUS

If PHYMVT = null : End : Endif

Gosub AVARIABLES From WMC00PHYMVT
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PHYMVT.APARENT=null
 [L]A_I = PHYMVT.freeSnapshot
 PHYMVT.snapshotEnabled = 0
 PHYMVT.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PHYMVT.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PHYMVT._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PHYMVT.APARENT=null
 PHYMVT.snapshotEnabled = 1
 PHYMVT.setAccessorEnabled = 1
Endif
LogicClose File [PMVT]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PHYMVT._ACTION_PARAM("AREAD_BEFORE",[L]_PHYREF,[L]_NUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PMVT]
Read [F:PMVT]PMVT0 = [L]_PHYREF;[L]_NUM
If fstat
[L]A_ERROR = [L]_PHYREF+"~"+num$([L]_NUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PHYMVT,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PMVT]AUUID)>0 & [F:PMVT]AUUID=NullUuid
 [F:PMVT]AUUID = getUuid
Endif
SetInstance PHYMVT With [F:PMVT]
PHYMVT.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PHYMVT.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



