#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHFXDASSETS FXDASSETS
# 2018-08-27 12:32:04 133

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","FXDASSETS","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File FXDASSETS [FAS]
If filinfo(filpath("FIL","DEPREC","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File DEPREC [DEP]
Local File FXDASSETS [FAS_]
Local Char KEY_FAS(120)(1..3)
Local Char KEY_DEP(120)(1..3)
#Empty keys :
KEY_FAS(3) = ""
KEY_DEP(3) = "+0+0+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [FAS]
LogicClose File [DEP]
LogicClose File [FAS_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [FAS] With
& [DEP]DEP0~=AASREF
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [FAS] With
& [DEP]DEP0~=AASREF
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_FAS(2) = [F:FAS]AASREF
KEY_DEP(2) = [F:DEP]AASREF+"+"+num$([F:DEP]DPRPLN)+"+"+num$([F:DEP]FIYENDDAT)+"+"+num$([F:DEP]PERENDDAT)

If (KEY_FAS(2) <> KEY_FAS(3)) & (KEY_FAS(1) <> KEY_FAS(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_FXDASSETS(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:FAS]
FINS = 1
 KEY_FAS(1) = KEY_FAS(2)
Endif : # KEY_FAS(1) <> KEY_FAS(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"AASREF":'          +'"'+escJson(INS.AASREF)+'"'
Append ASND.DATA ,',"AASDES1":'        +'"'+escJson(INS.AASDES1)+'"'
Append ASND.DATA ,',"AASDES2":'        +'"'+escJson(INS.AASDES2)+'"'
Append ASND.DATA ,',"BPR":'            +'"'+escJson(INS.BPR)+'"'
Append ASND.DATA ,',"CMP":'            +'"'+escJson(INS.CMP)+'"'
Append ASND.DATA ,',"CMPORI":'         +'"'+escJson(INS.CMPORI)+'"'
Append ASND.DATA ,',"GAC":'            +'"'+escJson(INS.GAC)+'"'
Append ASND.DATA ,',"IASACC":'         +'"'+escJson(INS.IASACC)+'"'
Append ASND.DATA ,',"LEAREF":'         +'"'+escJson(INS.LEAREF)+'"'
Append ASND.DATA ,',"LEAREFORI":'      +'"'+escJson(INS.LEAREFORI)+'"'
Append ASND.DATA ,',"BUY":'            +'"'+escJson(INS.BUY)+'"'
Append ASND.DATA ,',"ORDREF":'         +'"'+escJson(INS.ORDREF)+'"'
Append ASND.DATA ,',"GRUORIAAS":'      +'"'+escJson(INS.GRUORIAAS)+'"'
Append ASND.DATA ,',"IVCSALISS":'      +'"'+escJson(INS.IVCSALISS)+'"'
Append ASND.DATA ,',"AASREFORI":'      +'"'+escJson(INS.AASREFORI)+'"'
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_FAS(1),KEY_DEP(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:FAS]AASREF"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From FXDASSETS_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="FXDASSETS" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"FXDASSETS")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"FXDASSETS")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,34018)+'"'
Append WCLOB,',"$url":"{$baseUrl}/FXDASSETS'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{FCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,34018)+' {$key}"'
Append WCLOB,',"$key":"{AASREF}"'
Append WCLOB,',"$url":"{$baseUrl}/FXDASSETS('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'FXDASSETS.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"AASREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,34220)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"AASDES1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2063)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":60'
Append WCLOB,"}"
Append WCLOB,',"AASDES2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2064)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":60'
Append WCLOB,"}"
Append WCLOB,',"BPR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3680)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"CMP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,34441)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"CMPORI":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,36268)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"GAC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,34884)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"IASACC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,35009)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"LEAREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,36332)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"LEAREFORI":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,36334)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"BUY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1752)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"ORDREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,36337)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"GRUORIAAS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,36292)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"IVCSALISS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,34782)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"AASREFORI":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,39868)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/FXDASSETS('+"'"+'{$key}'+"'"+')?representation=FXDASSETS.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHFXDASSETSB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHFXDASSETSB
End RES


