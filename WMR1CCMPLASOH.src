#<AdxTL>@(#)0.0.0.0 $Revision$Class Plan-Sales orders
# Supervisor
## ACLA-CLASSE ## CCMPLASOH
# 2018-08-27 13:13:35 211

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : PRODUCT Product ( Field ITM 20)
####################################################################
 
$SET_PRODUCT
If [L]_AOLDVAL<>this.PRODUCT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRODUCT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRODUCT
 Gosub PROPAGATE_PRODUCT
Endif
Return

$INIT_PRODUCT
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "PRODUCT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRODUCT
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "PRODUCT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRODUCT               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRODUCT               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRODUCT
[L]CURPRO = "PRODUCT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRODUCT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRODUCT
[L]CURPRO = "PRODUCT"
If vireblc(this.PRODUCT,2)<>vireblc(format$("K:20c",this.PRODUCT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRODUCT
[L]CURPRO = "PRODUCT"
If vireblc(this.PRODUCT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPITM.ACTRLREF(this,"PRODUCT",this.PRODUCT,this.PRODUCT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PRODUCT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRODUCT
[L]CURPRO = "PRODUCT"
Return

$PROPAGATE_PRODUCT
this.isReadonly = 0
[L]CURPRO = "PRODUCT"
Gosub _LNKPRO_PRODUCT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRODUCT
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "PRODUCT"
$_LNKPRO_PRODUCT
If vireblc(this.PRODUCT,2)<>""
 # Link ITMMASTER
 Local File ITMMASTER [WITM]
 Read [F:WITM]ITM0 = this.PRODUCT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ITMMASTER" & ZONE="DES1AXX" & IDENT1=[F:WITM]ITMREF & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PRODUCT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WITM]
Endif
Return


####################################################################
# 2 : ECCVALMAJ Major version ( Field CCMECS 10)
####################################################################
 
$SET_ECCVALMAJ
If [L]_AOLDVAL<>this.ECCVALMAJ
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ECCVALMAJ
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ECCVALMAJ
 Gosub PROPAGATE_ECCVALMAJ
Endif
Return

$INIT_ECCVALMAJ
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ECCVALMAJ
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "ECCVALMAJ"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ECCVALMAJ             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ECCVALMAJ             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ECCVALMAJ,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
Return

$_AOTHERS_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ECCVALMAJ
[L]CURPRO = "ECCVALMAJ"
If vireblc(this.ECCVALMAJ,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCMECS.ACTRLREF(this,"ECCVALMAJ",this.ECCVALMAJ,this.PRODUCT,this.ECCVALMAJ,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ECCVALMAJ<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_ECCVALMAJ
this.isReadonly = 0
[L]CURPRO = "ECCVALMAJ"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ECCVALMAJ
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "ECCVALMAJ"
$_LNKPRO_ECCVALMAJ
Return


####################################################################
# 3 : ECCVALMIN Minor version ( Field CCMEVL 10)
####################################################################
 
$SET_ECCVALMIN
If [L]_AOLDVAL<>this.ECCVALMIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ECCVALMIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ECCVALMIN
 Gosub PROPAGATE_ECCVALMIN
Endif
Return

$INIT_ECCVALMIN
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ECCVALMIN
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "ECCVALMIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ECCVALMIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ECCVALMIN             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ECCVALMIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
Return

$_AOTHERS_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ECCVALMIN
[L]CURPRO = "ECCVALMIN"
If vireblc(this.ECCVALMIN,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCMEVL.ACTRLREF(this,"ECCVALMIN",this.ECCVALMIN,this.PRODUCT,this.ECCVALMAJ,this.ECCVALMIN,4,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ECCVALMIN<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_ECCVALMIN
this.isReadonly = 0
[L]CURPRO = "ECCVALMIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ECCVALMIN
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "ECCVALMIN"
$_LNKPRO_ECCVALMIN
Return


####################################################################
# 4 : CRSTATUS Request status ( Field Local menu number 2033)
####################################################################
 
$SET_CRSTATUS
If [L]_AOLDVAL<>this.CRSTATUS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRSTATUS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRSTATUS
 Gosub PROPAGATE_CRSTATUS
Endif
Return

$INIT_CRSTATUS
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "CRSTATUS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.CRSTATUS=0 and fmet this.AGETATTRIBUTE("CRSTATUS","$isMandatory")="true"
 this.CRSTATUS = 1
Endif
Return
 
$CONTROL_CRSTATUS
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "CRSTATUS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRSTATUS              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRSTATUS              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRSTATUS
[L]CURPRO = "CRSTATUS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CRSTATUS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRSTATUS
[L]CURPRO = "CRSTATUS"
If this.CRSTATUS<0 or this.CRSTATUS>len(mess(0,2033,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2033 ->"-num$(this.CRSTATUS)-mess(99,123,1)):  Return : # Local menu "2033 -> Invalid option
Endif
Return

$_AOTHERS_CRSTATUS
[L]CURPRO = "CRSTATUS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRSTATUS
[L]CURPRO = "CRSTATUS"
Return

$PROPAGATE_CRSTATUS
this.isReadonly = 0
[L]CURPRO = "CRSTATUS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRSTATUS
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "CRSTATUS"
$_LNKPRO_CRSTATUS
Return


####################################################################
# 5 : CCMUSRID Change manager ( Field CCMAUSCM 5)
####################################################################
 
$SET_CCMUSRID
If [L]_AOLDVAL<>this.CCMUSRID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CCMUSRID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CCMUSRID
 Gosub PROPAGATE_CCMUSRID
Endif
Return

$INIT_CCMUSRID
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "CCMUSRID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CCMUSRID
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "CCMUSRID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CCMUSRID              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CCMUSRID              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CCMUSRID
[L]CURPRO = "CCMUSRID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CCMUSRID,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CCMUSRID
[L]CURPRO = "CCMUSRID"
If vireblc(this.CCMUSRID,2)<>vireblc(format$("K:5B",this.CCMUSRID),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CCMUSRID
[L]CURPRO = "CCMUSRID"
If vireblc(this.CCMUSRID,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCMAUSCM.ACTRLREF(this,"CCMUSRID",this.CCMUSRID,this.CCMUSRID,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CCMUSRID<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CCMUSRID
[L]CURPRO = "CCMUSRID"
Return

$PROPAGATE_CCMUSRID
this.isReadonly = 0
[L]CURPRO = "CCMUSRID"
Gosub _LNKPRO_CCMUSRID
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CCMUSRID
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "CCMUSRID"
$_LNKPRO_CCMUSRID
If vireblc(this.CCMUSRID,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CCMUSRID
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCMUSRID","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CCMUSRID","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 6 : PLANNER Planner ( Field CCMAUS 5)
####################################################################
 
$SET_PLANNER
If [L]_AOLDVAL<>this.PLANNER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PLANNER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PLANNER
 Gosub PROPAGATE_PLANNER
Endif
Return

$INIT_PLANNER
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "PLANNER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PLANNER
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "PLANNER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PLANNER               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PLANNER
[L]CURPRO = "PLANNER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PLANNER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PLANNER
[L]CURPRO = "PLANNER"
If vireblc(this.PLANNER,2)<>vireblc(format$("K:5B",this.PLANNER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PLANNER
[L]CURPRO = "PLANNER"
If vireblc(this.PLANNER,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCMAUS.ACTRLREF(this,"PLANNER",this.PLANNER,this.PLANNER,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PLANNER<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PLANNER
[L]CURPRO = "PLANNER"
Return

$PROPAGATE_PLANNER
this.isReadonly = 0
[L]CURPRO = "PLANNER"
Gosub _LNKPRO_PLANNER
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PLANNER
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "PLANNER"
$_LNKPRO_PLANNER
If vireblc(this.PLANNER,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.PLANNER
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PLANNER","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 7 : DEFACTIONID Action ID ( Field CCMACT 10)
####################################################################
 
$SET_DEFACTIONID
If [L]_AOLDVAL<>this.DEFACTIONID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEFACTIONID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEFACTIONID
 Gosub PROPAGATE_DEFACTIONID
Endif
Return

$INIT_DEFACTIONID
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFACTIONID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEFACTIONID
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFACTIONID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEFACTIONID           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEFACTIONID           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEFACTIONID
[L]CURPRO = "DEFACTIONID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEFACTIONID,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEFACTIONID
[L]CURPRO = "DEFACTIONID"
If vireblc(this.DEFACTIONID,2)<>vireblc(format$("K:10X",this.DEFACTIONID),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEFACTIONID
[L]CURPRO = "DEFACTIONID"
If vireblc(this.DEFACTIONID,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCMACT.ACTRLREF(this,"DEFACTIONID",this.DEFACTIONID,this.DEFACTIONID,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DEFACTIONID<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEFACTIONID
[L]CURPRO = "DEFACTIONID"
Return

$PROPAGATE_DEFACTIONID
this.isReadonly = 0
[L]CURPRO = "DEFACTIONID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEFACTIONID
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFACTIONID"
$_LNKPRO_DEFACTIONID
Return


####################################################################
# 8 : DEFACTIONER Actioner ( Field CCMAUS 5)
####################################################################
 
$SET_DEFACTIONER
If [L]_AOLDVAL<>this.DEFACTIONER
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEFACTIONER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEFACTIONER
 Gosub PROPAGATE_DEFACTIONER
Endif
Return

$INIT_DEFACTIONER
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFACTIONER"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEFACTIONER
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFACTIONER"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEFACTIONER           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEFACTIONER           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEFACTIONER
[L]CURPRO = "DEFACTIONER"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DEFACTIONER,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEFACTIONER
[L]CURPRO = "DEFACTIONER"
If vireblc(this.DEFACTIONER,2)<>vireblc(format$("K:5B",this.DEFACTIONER),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DEFACTIONER
[L]CURPRO = "DEFACTIONER"
If vireblc(this.DEFACTIONER,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCCMAUS.ACTRLREF(this,"DEFACTIONER",this.DEFACTIONER,this.DEFACTIONER,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.DEFACTIONER<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEFACTIONER
[L]CURPRO = "DEFACTIONER"
Return

$PROPAGATE_DEFACTIONER
this.isReadonly = 0
[L]CURPRO = "DEFACTIONER"
Gosub _LNKPRO_DEFACTIONER
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEFACTIONER
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFACTIONER"
$_LNKPRO_DEFACTIONER
If vireblc(this.DEFACTIONER,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.DEFACTIONER
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEFACTIONER","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("DEFACTIONER","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 9 : DEFCOMPDATE Complete by ( Field D)
####################################################################
 
$SET_DEFCOMPDATE
If [L]_AOLDVAL<>this.DEFCOMPDATE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEFCOMPDATE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEFCOMPDATE
 Gosub PROPAGATE_DEFCOMPDATE
Endif
Return

$INIT_DEFCOMPDATE
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFCOMPDATE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEFCOMPDATE
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFCOMPDATE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEFCOMPDATE           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEFCOMPDATE           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEFCOMPDATE
[L]CURPRO = "DEFCOMPDATE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DEFCOMPDATE=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEFCOMPDATE
[L]CURPRO = "DEFCOMPDATE"
Return

$_AOTHERS_DEFCOMPDATE
[L]CURPRO = "DEFCOMPDATE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEFCOMPDATE
[L]CURPRO = "DEFCOMPDATE"
Return

$PROPAGATE_DEFCOMPDATE
this.isReadonly = 0
[L]CURPRO = "DEFCOMPDATE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEFCOMPDATE
Gosub DECLARE_VAR From WMR0CCMPLASOH
[L]CURPRO = "DEFCOMPDATE"
$_LNKPRO_DEFCOMPDATE
Return




