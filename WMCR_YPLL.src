#<AdxTL>@(#)0.0.0.0 $Revision$Class Planning Applications Relation
# Supervisor
## CRUD-CLASSE ## YPLL
# 2019-04-03 06:16:02 667


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YPLAREL [YPLL_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YPLL") From ASYRCOM : Endif
Local Instance YPLL Using C_YPLL

If !SILENCE : Call TRACE("3 --> New Instance C_YPLL") From ASYRCOM : Endif
YPLL = NewInstance C_YPLL AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YPLL_]YPLL0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YPLL") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YPLL.AREAD([YPLL_]YPLLID))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YPLL.YPLLID ="-num$(YPLL.YPLLID)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YPLL.AKEYS)
  Call TRACE("-"-num$(I)-":"-YPLL.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YPLL_]
FreeGroup YPLL
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YPLL,ACLE,ASTATUS,_ETAG)
Variable Instance YPLL Using C_YPLL
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YPLLID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YPLLID = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File YPLAREL [YPLL]
Default File [F:YPLL]
Read [F:YPLL]YPLL0 = [L]_YPLLID
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YPLL]UPDTICK)>0
 [L]_ETAG = num$([F:YPLL]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YPLL,ACLE,ASTATUS)
Variable Instance YPLL Using C_YPLL
Value Char ACLE
Variable Integer ASTATUS
Local Char _YPLLID(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YPLLID = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YPLL.AREAD([L]_YPLLID))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YPLL,_YPLLID,ASTATUS)
Variable Instance YPLL Using C_YPLL
Value Char _YPLLID
Variable Integer ASTATUS

If YPLL = null : End : Endif

Gosub AVARIABLES From WMC00YPLL
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YPLL.APARENT=null
 [L]A_I = YPLL.freeSnapshot
 YPLL.snapshotEnabled = 0
 YPLL.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YPLL.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YPLL._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YPLL.APARENT=null
 YPLL.snapshotEnabled = 1
 YPLL.setAccessorEnabled = 1
Endif
LogicClose File [YPLL]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YPLL._ACTION_PARAM("AREAD_BEFORE",[L]_YPLLID))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YPLL]
Read [F:YPLL]YPLL0 = [L]_YPLLID
If fstat
[L]A_ERROR = [L]_YPLLID
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YPLL,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YPLL]AUUID)>0 & [F:YPLL]AUUID=NullUuid
 [F:YPLL]AUUID = getUuid
Endif
SetInstance YPLL With [F:YPLL]
YPLL.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YPLL.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



