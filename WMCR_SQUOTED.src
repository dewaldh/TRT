#<AdxTL>@(#)0.0.0.0 $Revision$Class Quote detail
# Supervisor
## CRUD-CLASSE ## SQUOTED
# 2018-08-27 12:49:25 927


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File SQUOTED [SQD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_SQUOTED") From ASYRCOM : Endif
Local Instance SQUOTED Using C_SQUOTED

If !SILENCE : Call TRACE("3 --> New Instance C_SQUOTED") From ASYRCOM : Endif
SQUOTED = NewInstance C_SQUOTED AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [SQD_]SQD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of SQUOTED") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet SQUOTED.AREAD([SQD_]SQHNUM,[SQD_]SQDLIN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("SQUOTED.SQHNUM ="-num$(SQUOTED.SQHNUM)) From ASYRCOM
 Call TRACE("SQUOTED.SQDLIN ="-num$(SQUOTED.SQDLIN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(SQUOTED.AKEYS)
  Call TRACE("-"-num$(I)-":"-SQUOTED.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [SQD_]
FreeGroup SQUOTED
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(SQUOTED,ACLE,ASTATUS,_ETAG)
Variable Instance SQUOTED Using C_SQUOTED
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _SQHNUM(20)
Local Integer _SQDLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SQHNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_SQDLIN = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File SQUOTED [SQD]
Default File [F:SQD]
Read [F:SQD]SQD0 = [L]_SQHNUM;[L]_SQDLIN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:SQD]UPDTICK)>0
 [L]_ETAG = num$([F:SQD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(SQUOTED,ACLE,ASTATUS)
Variable Instance SQUOTED Using C_SQUOTED
Value Char ACLE
Variable Integer ASTATUS
Local Char _SQHNUM(20)
Local Integer _SQDLIN
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_SQHNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_SQDLIN = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet SQUOTED.AREAD([L]_SQHNUM,[L]_SQDLIN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(SQUOTED,_SQHNUM,_SQDLIN,ASTATUS)
Variable Instance SQUOTED Using C_SQUOTED
Value Char _SQHNUM
Value Integer _SQDLIN
Variable Integer ASTATUS

If SQUOTED = null : End : Endif

Gosub AVARIABLES From WMC00SQUOTED
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If SQUOTED.APARENT=null
 [L]A_I = SQUOTED.freeSnapshot
 SQUOTED.snapshotEnabled = 0
 SQUOTED.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & SQUOTED.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet SQUOTED._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If SQUOTED.APARENT=null
 SQUOTED.snapshotEnabled = 1
 SQUOTED.setAccessorEnabled = 1
Endif
LogicClose File [SQD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet SQUOTED._ACTION_PARAM("AREAD_BEFORE",[L]_SQHNUM,[L]_SQDLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet SQUOTED._ACTION_PARAM("AREAD",[L]_SQHNUM,[L]_SQDLIN))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
SQUOTED.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 9
 [L]A_NEWCOL += 1
 SQUOTED.C_DDTANUM(A_NEWCOL) = NewInstance  C_SQUOTED_C_DDTANUM(SQUOTED.ACTX,NullUuid,[L]A_I,SQUOTED,"C_DDTANUM") AllocGroup SQUOTED
 SQUOTED.C_DDTANUM(A_NEWCOL).DDTANUM = [F:SQD]DDTANUM([L]A_I-1)
 SQUOTED.C_DDTANUM(A_NEWCOL).DDTANOT = [F:SQD]DDTANOT([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet SQUOTED.C_DDTANUM(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]A_NEWCOL = 0
For [L]A_I=1 To 3
 [L]A_NEWCOL += 1
 SQUOTED.C_VACITM(A_NEWCOL) = NewInstance  C_SQUOTED_C_VACITM(SQUOTED.ACTX,NullUuid,[L]A_I,SQUOTED,"C_VACITM") AllocGroup SQUOTED
 SQUOTED.C_VACITM(A_NEWCOL).VACITM = [F:SQD]VACITM([L]A_I-1)
 SQUOTED.C_VACITM(A_NEWCOL).VAT = [F:SQD]VAT([L]A_I-1)
 [L]ASTATUS = max([L]ASTATUS,fmet SQUOTED.C_VACITM(A_NEWCOL).ACTION("AREAD_AFTER"))
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet SQUOTED.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



