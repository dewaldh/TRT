#<AdxTL>@(#)0.0.0.0 $Revision$Class Estate
# Supervisor
## CRUD-CLASSE ## YEST
# 2019-04-04 01:02:19 091


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(YEST,ASTATUS)
Variable Instance YEST Using R_YEST
Variable Integer ASTATUS

If YEST = null : End : Endif

Gosub AVARIABLES From WMR00YEST
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet YEST.ACTX.AGETAFCRIGHT(YEST,"GESYEST",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet YEST.ACTX.AGETAFCRIGHTC(YEST,"GESYEST",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif
If fmet YEST.ACTX.AGETACSRIGHTM(YEST,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AINSERT_END
  Endif
  
  Gosub AREPCONTROL_AINSERT
  If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
  
If !adxlog
 Gosub AINSERT_TR_YEST
Else
 Gosub AINSERT_YEST
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = YEST.freeSnapshot
YEST.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
YEST.ASTALIN = [V]CST_ANEW
YEST.YEST.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YEST.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YEST.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YEST._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YEST._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YEST._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If YEST.YEST.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YEST.YEST.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YEST.YEST.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YRMA) : # YRMA -- 2
 If YEST.YEST.YRMA(A_N2) <> null
& and !find(YEST.YEST.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YEST.YRMA(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YLDP) : # YLNDPUR -- 3
 If YEST.YEST.YLDP(A_N2) <> null
& and !find(YEST.YEST.YLDP(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YSTAGE) : # YSTAVIW -- 4
 If YEST.YEST.YSTAGE(A_N2) <> null
& and !find(YEST.YEST.YSTAGE(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YPRE) : # YPREVIW -- 5
 If YEST.YEST.YPRE(A_N2) <> null
& and !find(YEST.YEST.YPRE(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(YEST.YEST.YRMA) : # YRMA -- 2
 If YEST.YEST.YRMA(A_N2) <> null
& and !find(YEST.YEST.YRMA(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YEST.YEST.YRMA(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YLDP) : # YLNDPUR -- 3
 If YEST.YEST.YLDP(A_N2) <> null
& and !find(YEST.YEST.YLDP(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YSTAGE) : # YSTAVIW -- 4
 If YEST.YEST.YSTAGE(A_N2) <> null
& and !find(YEST.YEST.YSTAGE(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YEST.YEST.YPRE) : # YPREVIW -- 5
 If YEST.YEST.YPRE(A_N2) <> null
& and !find(YEST.YEST.YPRE(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YEST.YEST.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_YEST
Trbegin [F:YEST]
 Gosub AINSERT_YEST
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(YEST.YEST.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YEST.YEST.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YEST.YEST.YRMA)
 If YEST.YEST.YRMA(A_N2) <> null
  [L]ASTATUS2 = fmet YEST.YEST.YRMA(A_N2)._AINSERT_AFTER
  If YEST.YEST.YRMA(A_N2).ASTALIN=[V]CST_ADEL or YEST.YEST.YRMA(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YEST.YEST.YRMA(A_N2)
   YEST.YEST.YRMA(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YEST.YEST.YLDP)
 If YEST.YEST.YLDP(A_N2) <> null
  [L]ASTATUS2 = fmet YEST.YEST.YLDP(A_N2)._AINSERT_AFTER
  If YEST.YEST.YLDP(A_N2).ASTALIN=[V]CST_ADEL or YEST.YEST.YLDP(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YEST.YEST.YLDP(A_N2)
   YEST.YEST.YLDP(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YEST.YEST.YSTAGE)
 If YEST.YEST.YSTAGE(A_N2) <> null
  [L]ASTATUS2 = fmet YEST.YEST.YSTAGE(A_N2)._AINSERT_AFTER
  If YEST.YEST.YSTAGE(A_N2).ASTALIN=[V]CST_ADEL or YEST.YEST.YSTAGE(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YEST.YEST.YSTAGE(A_N2)
   YEST.YEST.YSTAGE(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YEST.YEST.YPRE)
 If YEST.YEST.YPRE(A_N2) <> null
  [L]ASTATUS2 = fmet YEST.YEST.YPRE(A_N2)._AINSERT_AFTER
  If YEST.YEST.YPRE(A_N2).ASTALIN=[V]CST_ADEL or YEST.YEST.YPRE(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YEST.YEST.YPRE(A_N2)
   YEST.YEST.YPRE(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_YEST
[L]ASTATUS = max([L]ASTATUS,fmet YEST.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YEST.YEST._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YEST.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If YEST.snapshotEnabled=1
 [L]A_RETIK = YEST.revertUpdTick
Endif
[L]ASTATUS = max(fmet YEST.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



