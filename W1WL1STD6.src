#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WL1STD6 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:22:12"
A_USER  = "ADMIN"
A_STAMP = "20180828002212"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIGINF"
  If [M]NBLIGINF=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask WL1STD6 [CRM6]
Gosub HORODAT
Local Inpbox "WL1STD6" From GFONCTION At A_STAMP With A_WINDPREV Mask [CRM6] As [SIM_]
Grizo [CRM6]5
Grizo [CRM6]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [CRM6]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=112 : Y1(1)=3 : Y2(1)=25
Return

$ON_INFBAP
Onevent INIT_AREA Call D_INFBAP(zc) From W1WL1STD6
Onevent BEFORE_INPUT Call AS_INFBAP(zc) From W1WL1STD6
Return

Subprog D_INFBAP(VALEUR)
Variable Integer VALEUR
If varinit([M]INFBAP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INFBAP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INFCLL
Onevent INIT_AREA Call D_INFCLL(zc) From W1WL1STD6
Onevent BEFORE_INPUT Call AS_INFCLL(zc) From W1WL1STD6
Return

Subprog D_INFCLL(VALEUR)
Variable Integer VALEUR
If varinit([M]INFCLL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INFCLL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INFTSK
Onevent INIT_AREA Call D_INFTSK(zc) From W1WL1STD6
Onevent BEFORE_INPUT Call AS_INFTSK(zc) From W1WL1STD6
Return

Subprog D_INFTSK(VALEUR)
Variable Integer VALEUR
If varinit([M]INFTSK,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INFTSK(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INFOPP
Onevent INIT_AREA Call D_INFOPP(zc) From W1WL1STD6
Onevent BEFORE_INPUT Call AS_INFOPP(zc) From W1WL1STD6
Return

Subprog D_INFOPP(VALEUR)
Variable Integer VALEUR
If varinit([M]INFOPP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INFOPP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INFCON
Onevent INIT_AREA Call D_INFCON(zc) From W1WL1STD6
Onevent BEFORE_INPUT Call AS_INFCON(zc) From W1WL1STD6
Return

Subprog D_INFCON(VALEUR)
Variable Integer VALEUR
If varinit([M]INFCON,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_INFCON(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIGINF
Onevent BEFORE_INPUT Call AS_NBLIGINF From W1WL1STD6
Return

Subprog IB_NBLIGINF
Local Decimal BASPAG
## Action STD
Call IB_NBLIGINF From SUBCRMAGD
Gosub _AFF
End

Subprog AS_NBLIGINF
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(5562,GBOUT1) From OBJDIV
Call IB_NBLIGINF
## Action STD
Call AS_NBLIGINF From SUBCRMAGD
Onkey 129 Titled GBOUT1 Call B1_NBLIGINF From W1WL1STD6
Gosub _AFF
End

Subprog B1_NBLIGINF
Local Decimal BASPAG
If !GWEBSERV
 ## Action GOBJETC1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC1"
 Call OBJET_CHAR([M:CRM6]INFKEY(nolign-1),[M:CRM6]INFOBJ(nolign-1),"") From GOBJET
 GACTION = SAVACT
Endif
If !GWEBSERV
 ## Action STD
 Call B1_NBLIGINF From SUBCRMAGD
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_INFOBJ
Return

$ON_CMPKEY
Return

$ON_CCNKEY
Return

$ON_OPPKEY
Return

$ON_INFTYPE
Onevent INIT_AREA Call D_INFTYPE(zc) From W1WL1STD6
Return

Subprog D_INFTYPE(VALEUR)
Variable Integer VALEUR
If varinit([M]INFTYPE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_INFKEY
Return

$CHG_STY
Return


