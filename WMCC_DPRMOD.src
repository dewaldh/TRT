#<AdxTL>@(#)0.0.0.0 $Revision$Class Depreciation methods
# Supervisor
## CRUD-CLASSE ## DPRMOD
# 2018-08-27 12:30:54 420


############################################################################################
### Subprog _AINSERT
############################################################################################
Subprog _AINSERT(DPRMOD,ASTATUS)
Variable Instance DPRMOD Using C_DPRMOD
Variable Integer ASTATUS

If DPRMOD = null : End : Endif

Gosub _AVARIABLES From WMC00DPRMOD

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_DPRMOD

End

#-----------------------------------------------------#

############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(DPRMOD,ASTATUS)
Variable Instance DPRMOD Using C_DPRMOD
Variable Integer ASTATUS

If DPRMOD = null : End : Endif

Gosub AVARIABLES From WMC00DPRMOD
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_DPRMOD
Else
 Gosub AINSERT_DPRMOD
Endif

Gosub _AINSERT_AFTER
[L]A_I = DPRMOD.freeSnapshot
DPRMOD.snapshotEnabled = 1
$AINSERT_END
End

#-----------------------------------------------------#

$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet DPRMOD._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet DPRMOD._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet DPRMOD._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If DPRMOD.ASTALIN = [V]CST_ANEWDEL : Return : Endif
DPRMOD.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(DPRMOD.PLN)
 If DPRMOD.PLN([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.PLN([L]A_I).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(DPRMOD.DMR) : # DPRMODRAT -- 2
 If DPRMOD.DMR(A_N2) <> null
& and !find(DPRMOD.DMR(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(DPRMOD.DMO) : # DPRMODOPT -- 3
 If DPRMOD.DMO(A_N2) <> null
& and !find(DPRMOD.DMO(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(DPRMOD.DMR) : # DPRMODRAT -- 2
 If DPRMOD.DMR(A_N2) <> null
& and !find(DPRMOD.DMR(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(DPRMOD.DMO) : # DPRMODOPT -- 3
 If DPRMOD.DMO(A_N2) <> null
& and !find(DPRMOD.DMO(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [L]A_I=1 To maxtab(DPRMOD.PLN)
 If DPRMOD.PLN([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.PLN([L]A_I).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_DPRMOD
Trbegin [F:DPM]
 Gosub AINSERT_DPRMOD
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$AINSERT_DPRMOD
Raz [F:DPM]
[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00DPRMOD._MAJSQL_DPRMOD(DPRMOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]A_TYPMAJ=[V]CST_ANEW

#-----------------------------------------------------#
For A_N2=1 To maxtab(DPRMOD.DMR)
 If DPRMOD.DMR(A_N2) <> null and
& (DPRMOD.DMR(A_N2).ASTALIN=[L]A_TYPMAJ or
& DPRMOD.DMR(A_N2).ASTALIN=[V]CST_ALL) and ([L]A_TYPMAJ<>[V]CST_ADEL)
  If DPRMOD.DMR(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:DMR]
   [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00DPRMOD._MAJSQL_DPRMODRAT(DPRMOD.DMR(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMR(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

#-----------------------------------------------------#
For A_N2=1 To maxtab(DPRMOD.DMO)
 If DPRMOD.DMO(A_N2) <> null and
& (DPRMOD.DMO(A_N2).ASTALIN=[L]A_TYPMAJ or
& DPRMOD.DMO(A_N2).ASTALIN=[V]CST_ALL) and ([L]A_TYPMAJ<>[V]CST_ADEL)
  If DPRMOD.DMO(A_N2).ASTALIN=[L]A_TYPMAJ
   Raz [F:DMO]
   [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ACTION("AINSERT_BEFORE"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = func WMC00DPRMOD._MAJSQL_DPRMODOPT(DPRMOD.DMO(A_N2))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
   [L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.DMO(A_N2).ACTION("AINSERT_AFTER"))
   If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
  Endif
 Endif
 If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet DPRMOD.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If DPRMOD.snapshotEnabled=1
 [L]A_RETIK = DPRMOD.revertUpdTick
Endif
[L]ASTATUS = max(fmet DPRMOD.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#


#-----------------------------------------------------#
$_AINSERT_AFTER
If find(DPRMOD.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 DPRMOD.ASTALIN = [V]CST_ALL
Endif
For [L]A_I=1 To maxtab(DPRMOD.PLN)
 If DPRMOD.PLN([L]A_I)<>null
  If DPRMOD.PLN([L]A_I).ASTALIN=[V]CST_ADEL or DPRMOD.PLN([L]A_I).ASTALIN=[V]CST_ANEWDEL
   FreeInstance DPRMOD.PLN([L]A_I)
   DPRMOD.PLN([L]A_I) = null
  Elsif DPRMOD.PLN([L]A_I).ASTALIN <> [V]CST_ALL
   DPRMOD.PLN([L]A_I).ASTALIN = [V]CST_ALL
  Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(DPRMOD.DMR)
 If DPRMOD.DMR(A_N2) <> null
  If DPRMOD.DMR(A_N2).ASTALIN=[V]CST_ADEL or DPRMOD.DMR(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance DPRMOD.DMR(A_N2)
   DPRMOD.DMR(A_N2) = null
  Elsif DPRMOD.DMR(A_N2).ASTALIN <> [V]CST_ALL
   DPRMOD.DMR(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(DPRMOD.DMO)
 If DPRMOD.DMO(A_N2) <> null
  If DPRMOD.DMO(A_N2).ASTALIN=[V]CST_ADEL or DPRMOD.DMO(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance DPRMOD.DMO(A_N2)
   DPRMOD.DMO(A_N2) = null
  Elsif DPRMOD.DMO(A_N2).ASTALIN <> [V]CST_ALL
   DPRMOD.DMO(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return



