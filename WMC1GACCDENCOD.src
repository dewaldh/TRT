#<AdxTL>@(#)0.0.0.0 $Revision$Class Payment attribute
# Supervisor
## ACLA-CLASSE ## GACCDENCOD
# 2018-08-27 12:32:18 364


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : COD Destination code ( Field CDA 5)
####################################################################

$SET_COD
If [L]_AOLDVAL<>this.COD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COD
 Gosub PROPAGATE_COD
Endif
Return

$INIT_COD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "COD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "COD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COD                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COD
[L]CURPRO = "COD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COD
[L]CURPRO = "COD"
If vireblc(this.COD,2)<>vireblc(format$("K:5c",this.COD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COD
[L]CURPRO = "COD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COD
[L]CURPRO = "COD"
Return

$PROPAGATE_COD
this.isReadonly = 0
[L]CURPRO = "COD"
Gosub _LNKPRO_COD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "COD"
$_LNKPRO_COD
If vireblc(this.COD,2)<>""
 # Link GACCDENCOD
 Local File GACCDENCOD [WCDA]
 Read [F:WCDA]CDA0 = this.COD;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="SHOTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COD","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="DESTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCDA]
Endif
Return

$_ALOADATTRIBUTE_COD
[L]ASTATUS = fmet this.ASETATTRIBUTE("COD","$isMandatory","true")
Return


####################################################################
# 2 : DES Description ( Field DES 30)
####################################################################

$SET_DES
If [L]_AOLDVAL<>this.DES
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DES
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DES
 Gosub PROPAGATE_DES
Endif
Return

$INIT_DES
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DES"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DES
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DES"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DES                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DES
[L]CURPRO = "DES"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DES,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DES
[L]CURPRO = "DES"
If vireblc(this.DES,2)<>vireblc(format$("K:30X",this.DES),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DES
[L]CURPRO = "DES"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DES
[L]CURPRO = "DES"
Return

$PROPAGATE_DES
this.isReadonly = 0
[L]CURPRO = "DES"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DES
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DES"
$_LNKPRO_DES
Return


####################################################################
# 3 : DESSHO Short description ( Field SHO 10)
####################################################################

$SET_DESSHO
If [L]_AOLDVAL<>this.DESSHO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESSHO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESSHO
 Gosub PROPAGATE_DESSHO
Endif
Return

$INIT_DESSHO
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESSHO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESSHO
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESSHO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESSHO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESSHO
[L]CURPRO = "DESSHO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESSHO,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESSHO
[L]CURPRO = "DESSHO"
If vireblc(this.DESSHO,2)<>vireblc(format$("K:10X",this.DESSHO),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESSHO
[L]CURPRO = "DESSHO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESSHO
[L]CURPRO = "DESSHO"
Return

$PROPAGATE_DESSHO
this.isReadonly = 0
[L]CURPRO = "DESSHO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESSHO
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESSHO"
$_LNKPRO_DESSHO
Return


####################################################################
# 4 : DESTRA Description ( Field AX3)
####################################################################

$GET_DESTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESTRA"
this.DESTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESTRA
If [L]_AOLDVAL<>this.DESTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESTRA
 Gosub PROPAGATE_DESTRA
Endif
Return

$INIT_DESTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESTRA
[L]CURPRO = "DESTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESTRA
[L]CURPRO = "DESTRA"
If vireblc(fmet this.AGETTEXTRA("DESTRA"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESTRA
[L]CURPRO = "DESTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESTRA
[L]CURPRO = "DESTRA"
Return

$PROPAGATE_DESTRA
this.isReadonly = 0
[L]CURPRO = "DESTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "DESTRA"
$_LNKPRO_DESTRA
Return


####################################################################
# 5 : SHOTRA Short description ( Field AX1)
####################################################################

$GET_SHOTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "SHOTRA"
this.SHOTRA = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_SHOTRA
If [L]_AOLDVAL<>this.SHOTRA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SHOTRA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SHOTRA
 Gosub PROPAGATE_SHOTRA
Endif
Return

$INIT_SHOTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "SHOTRA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SHOTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SHOTRA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SHOTRA
[L]CURPRO = "SHOTRA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SHOTRA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SHOTRA
[L]CURPRO = "SHOTRA"
If vireblc(fmet this.AGETTEXTRA("SHOTRA"),2)<>vireblc(format$("K:12X",fmet this.AGETTEXTRA("SHOTRA")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SHOTRA
[L]CURPRO = "SHOTRA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SHOTRA
[L]CURPRO = "SHOTRA"
Return

$PROPAGATE_SHOTRA
this.isReadonly = 0
[L]CURPRO = "SHOTRA"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.SHOTRA)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SHOTRA
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "SHOTRA"
$_LNKPRO_SHOTRA
Return


####################################################################
# 6 : ACCTYP Account structure ( Field Local menu number 612)
####################################################################

$SET_ACCTYP
If [L]_AOLDVAL<>this.ACCTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCTYP
 Gosub PROPAGATE_ACCTYP
Endif
Return

$INIT_ACCTYP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ACCTYP=0 and fmet this.AGETATTRIBUTE("ACCTYP","$isMandatory")="true"
 this.ACCTYP = 1
Endif
Return
 
$CONTROL_ACCTYP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCTYP
[L]CURPRO = "ACCTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACCTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCTYP
[L]CURPRO = "ACCTYP"
If this.ACCTYP<0 or this.ACCTYP>len(mess(0,612,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"612 ->"-num$(this.ACCTYP)-mess(99,123,1)):  Return : # Local menu "612 -> Invalid option
Endif
Return

$_AOTHERS_ACCTYP
[L]CURPRO = "ACCTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCTYP
[L]CURPRO = "ACCTYP"
Return

$PROPAGATE_ACCTYP
this.isReadonly = 0
[L]CURPRO = "ACCTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCTYP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCTYP"
$_LNKPRO_ACCTYP
Return


####################################################################
# 7 : ACCVCRFLG Separate journal ( Field Local menu number 1)
####################################################################

$SET_ACCVCRFLG
If [L]_AOLDVAL<>this.ACCVCRFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCVCRFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCVCRFLG
 Gosub PROPAGATE_ACCVCRFLG
Endif
Return

$INIT_ACCVCRFLG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCVCRFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ACCVCRFLG=0 and fmet this.AGETATTRIBUTE("ACCVCRFLG","$isMandatory")="true"
 this.ACCVCRFLG = 1
Endif
Return
 
$CONTROL_ACCVCRFLG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCVCRFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCVCRFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCVCRFLG             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCVCRFLG
[L]CURPRO = "ACCVCRFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACCVCRFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCVCRFLG
[L]CURPRO = "ACCVCRFLG"
If this.ACCVCRFLG<0 or this.ACCVCRFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ACCVCRFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ACCVCRFLG
[L]CURPRO = "ACCVCRFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCVCRFLG
[L]CURPRO = "ACCVCRFLG"
Return

$PROPAGATE_ACCVCRFLG
this.isReadonly = 0
[L]CURPRO = "ACCVCRFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCVCRFLG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCVCRFLG"
$_LNKPRO_ACCVCRFLG
Return


####################################################################
# 8 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return

$_ALOADATTRIBUTE_LEG
[L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$isMandatory","true")
Return


####################################################################
# 9 : GFY Group ( Field AGF 5)
####################################################################

$SET_GFY
If [L]_AOLDVAL<>this.GFY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_GFY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.GFY
 Gosub PROPAGATE_GFY
Endif
Return

$INIT_GFY
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "GFY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_GFY
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "GFY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_GFY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_GFY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_GFY
[L]CURPRO = "GFY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.GFY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_GFY
[L]CURPRO = "GFY"
If vireblc(this.GFY,2)<>vireblc(format$("K:5c",this.GFY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_GFY
[L]CURPRO = "GFY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_GFY
[L]CURPRO = "GFY"
Return

$PROPAGATE_GFY
this.isReadonly = 0
[L]CURPRO = "GFY"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_GFY
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "GFY"
$_LNKPRO_GFY
Return


####################################################################
# 10 : CIB Interbank code ( Field Miscellaneous table number)
####################################################################

$SET_CIB
If [L]_AOLDVAL<>this.CIB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CIB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CIB
 Gosub PROPAGATE_CIB
Endif
Return

$INIT_CIB
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CIB"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"CIB",this.CIB,306)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CIB
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CIB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CIB                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CIB                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CIB
[L]CURPRO = "CIB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CIB,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CIB
[L]CURPRO = "CIB"
If vireblc(this.CIB,2)<>vireblc(format$("K:20B",this.CIB),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CIB
[L]CURPRO = "CIB"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"CIB",this.CIB,306,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CIB
[L]CURPRO = "CIB"
Return

$PROPAGATE_CIB
this.isReadonly = 0
[L]CURPRO = "CIB"
Gosub _LNKPRO_CIB
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CIB
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CIB"
$_LNKPRO_CIB
If vireblc(this.CIB,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 306;this.CIB
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CIB","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CIB","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 11 : ACCBPR Deposit acct code ( Field CAC 10)
####################################################################

$SET_ACCBPR
If [L]_AOLDVAL<>this.ACCBPR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCBPR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCBPR
 Gosub PROPAGATE_ACCBPR
Endif
Return

$INIT_ACCBPR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCBPR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCBPR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCBPR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCBPR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCBPR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCBPR
[L]CURPRO = "ACCBPR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCBPR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCBPR
[L]CURPRO = "ACCBPR"
If vireblc(this.ACCBPR,2)<>vireblc(format$("K:10c",this.ACCBPR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCBPR
[L]CURPRO = "ACCBPR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCBPR
[L]CURPRO = "ACCBPR"
Return

$PROPAGATE_ACCBPR
this.isReadonly = 0
[L]CURPRO = "ACCBPR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCBPR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCBPR"
$_LNKPRO_ACCBPR
Return


####################################################################
# 12 : ACCCOD Accounting code ( Field CAC 10)
####################################################################

$SET_ACCCOD
If [L]_AOLDVAL<>this.ACCCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCCOD
 Gosub PROPAGATE_ACCCOD
Endif
Return

$INIT_ACCCOD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCCOD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCCOD
[L]CURPRO = "ACCCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCCOD
[L]CURPRO = "ACCCOD"
If vireblc(this.ACCCOD,2)<>vireblc(format$("K:10c",this.ACCCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCCOD
[L]CURPRO = "ACCCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCCOD
[L]CURPRO = "ACCCOD"
Return

$PROPAGATE_ACCCOD
this.isReadonly = 0
[L]CURPRO = "ACCCOD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCCOD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCCOD"
$_LNKPRO_ACCCOD
Return


####################################################################
# 13 : ACCSNS Accounting sign ( Field Local menu number 671)
####################################################################

$SET_ACCSNS
If [L]_AOLDVAL<>this.ACCSNS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCSNS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCSNS
 Gosub PROPAGATE_ACCSNS
Endif
Return

$INIT_ACCSNS
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCSNS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ACCSNS=0 and fmet this.AGETATTRIBUTE("ACCSNS","$isMandatory")="true"
 this.ACCSNS = 1
Endif
Return
 
$CONTROL_ACCSNS
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCSNS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCSNS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCSNS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCSNS
[L]CURPRO = "ACCSNS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ACCSNS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCSNS
[L]CURPRO = "ACCSNS"
If this.ACCSNS<0 or this.ACCSNS>len(mess(0,671,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"671 ->"-num$(this.ACCSNS)-mess(99,123,1)):  Return : # Local menu "671 -> Invalid option
Endif
Return

$_AOTHERS_ACCSNS
[L]CURPRO = "ACCSNS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCSNS
[L]CURPRO = "ACCSNS"
Return

$PROPAGATE_ACCSNS
this.isReadonly = 0
[L]CURPRO = "ACCSNS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCSNS
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACCSNS"
$_LNKPRO_ACCSNS
Return


####################################################################
# 14 : IPTDAC Chargeable ( Field Local menu number 1)
####################################################################

$SET_IPTDAC
If [L]_AOLDVAL<>this.IPTDAC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IPTDAC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IPTDAC
 Gosub PROPAGATE_IPTDAC
Endif
Return

$INIT_IPTDAC
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTDAC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IPTDAC=0 and fmet this.AGETATTRIBUTE("IPTDAC","$isMandatory")="true"
 this.IPTDAC = 1
Endif
Return
 
$CONTROL_IPTDAC
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTDAC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IPTDAC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IPTDAC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IPTDAC
[L]CURPRO = "IPTDAC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IPTDAC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IPTDAC
[L]CURPRO = "IPTDAC"
If this.IPTDAC<0 or this.IPTDAC>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.IPTDAC)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_IPTDAC
[L]CURPRO = "IPTDAC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IPTDAC
[L]CURPRO = "IPTDAC"
Return

$PROPAGATE_IPTDAC
this.isReadonly = 0
[L]CURPRO = "IPTDAC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IPTDAC
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTDAC"
$_LNKPRO_IPTDAC
Return


####################################################################
# 15 : IPTCOD Entry type ( Field GTE 5)
####################################################################

$SET_IPTCOD
If [L]_AOLDVAL<>this.IPTCOD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IPTCOD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IPTCOD
 Gosub PROPAGATE_IPTCOD
Endif
Return

$INIT_IPTCOD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTCOD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_IPTCOD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTCOD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IPTCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IPTCOD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IPTCOD
[L]CURPRO = "IPTCOD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.IPTCOD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IPTCOD
[L]CURPRO = "IPTCOD"
If vireblc(this.IPTCOD,2)<>vireblc(format$("K:5d",this.IPTCOD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_IPTCOD
[L]CURPRO = "IPTCOD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IPTCOD
[L]CURPRO = "IPTCOD"
If vireblc(this.IPTCOD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGTE.ACTRLREF(this,"IPTCOD",this.IPTCOD,this.IPTCOD,this.LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.IPTCOD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_IPTCOD
this.isReadonly = 0
[L]CURPRO = "IPTCOD"
Gosub _LNKPRO_IPTCOD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IPTCOD
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTCOD"
$_LNKPRO_IPTCOD
If vireblc(this.IPTCOD,2)<>""
 # Link GTYPACCENT
 Local File GTYPACCENT [WGTE]
 Read [F:WGTE]GTE0 = this.IPTCOD;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GTYPACCENT" & ZONE="SHOTRA" & IDENT1=[F:WGTE]TYP & IDENT2=[F:WGTE]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("IPTCOD","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GTYPACCENT" & ZONE="DESTRA" & IDENT1=[F:WGTE]TYP & IDENT2=[F:WGTE]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("IPTCOD","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGTE]
Endif
Return


####################################################################
# 16 : IPTTYP Internal type ( Field Local menu number 659)
####################################################################

$SET_IPTTYP
If [L]_AOLDVAL<>this.IPTTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IPTTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IPTTYP
 Gosub PROPAGATE_IPTTYP
Endif
Return

$INIT_IPTTYP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IPTTYP=0 and fmet this.AGETATTRIBUTE("IPTTYP","$isMandatory")="true"
 this.IPTTYP = 1
Endif
Return
 
$CONTROL_IPTTYP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IPTTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IPTTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IPTTYP
[L]CURPRO = "IPTTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IPTTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IPTTYP
[L]CURPRO = "IPTTYP"
If this.IPTTYP<0 or this.IPTTYP>len(mess(0,659,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"659 ->"-num$(this.IPTTYP)-mess(99,123,1)):  Return : # Local menu "659 -> Invalid option
Endif
Return

$_AOTHERS_IPTTYP
[L]CURPRO = "IPTTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IPTTYP
[L]CURPRO = "IPTTYP"
Return

$PROPAGATE_IPTTYP
this.isReadonly = 0
[L]CURPRO = "IPTTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IPTTYP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTTYP"
$_LNKPRO_IPTTYP
Return


####################################################################
# 17 : IPTDEP Open item management ( Field Local menu number 1)
####################################################################

$SET_IPTDEP
If [L]_AOLDVAL<>this.IPTDEP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_IPTDEP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.IPTDEP
 Gosub PROPAGATE_IPTDEP
Endif
Return

$INIT_IPTDEP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTDEP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.IPTDEP=0 and fmet this.AGETATTRIBUTE("IPTDEP","$isMandatory")="true"
 this.IPTDEP = 1
Endif
Return
 
$CONTROL_IPTDEP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTDEP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_IPTDEP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_IPTDEP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_IPTDEP
[L]CURPRO = "IPTDEP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.IPTDEP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_IPTDEP
[L]CURPRO = "IPTDEP"
If this.IPTDEP<0 or this.IPTDEP>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.IPTDEP)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_IPTDEP
[L]CURPRO = "IPTDEP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_IPTDEP
[L]CURPRO = "IPTDEP"
Return

$PROPAGATE_IPTDEP
this.isReadonly = 0
[L]CURPRO = "IPTDEP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_IPTDEP
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "IPTDEP"
$_LNKPRO_IPTDEP
Return


####################################################################
# 18 : RPCVAT Tax management ( Field Local menu number 658)
####################################################################

$SET_RPCVAT
If [L]_AOLDVAL<>this.RPCVAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_RPCVAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.RPCVAT
 Gosub PROPAGATE_RPCVAT
Endif
Return

$INIT_RPCVAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "RPCVAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.RPCVAT=0 and fmet this.AGETATTRIBUTE("RPCVAT","$isMandatory")="true"
 this.RPCVAT = 1
Endif
Return
 
$CONTROL_RPCVAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "RPCVAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_RPCVAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_RPCVAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_RPCVAT
[L]CURPRO = "RPCVAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.RPCVAT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_RPCVAT
[L]CURPRO = "RPCVAT"
If this.RPCVAT<0 or this.RPCVAT>len(mess(0,658,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"658 ->"-num$(this.RPCVAT)-mess(99,123,1)):  Return : # Local menu "658 -> Invalid option
Endif
Return

$_AOTHERS_RPCVAT
[L]CURPRO = "RPCVAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_RPCVAT
[L]CURPRO = "RPCVAT"
Return

$PROPAGATE_RPCVAT
this.isReadonly = 0
[L]CURPRO = "RPCVAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_RPCVAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "RPCVAT"
$_LNKPRO_RPCVAT
Return


####################################################################
# 19 : AMTMAX Maximum amount ( Field MD1 0)
####################################################################

$SET_AMTMAX
If [L]_AOLDVAL<>this.AMTMAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMTMAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMTMAX
 Gosub PROPAGATE_AMTMAX
Endif
Return

$INIT_AMTMAX
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "AMTMAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AMTMAX
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "AMTMAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMTMAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMTMAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMTMAX
[L]CURPRO = "AMTMAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMTMAX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMTMAX
[L]CURPRO = "AMTMAX"
Return

$_AOTHERS_AMTMAX
[L]CURPRO = "AMTMAX"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"AMTMAX",this.AMTMAX,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMTMAX
[L]CURPRO = "AMTMAX"
Return

$PROPAGATE_AMTMAX
this.isReadonly = 0
[L]CURPRO = "AMTMAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMTMAX
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "AMTMAX"
$_LNKPRO_AMTMAX
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"AMTMAX",this.AMTMAX,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("AMTMAX","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 20 : PRCMAX Maximum % ( Field DCB 2)
####################################################################

$SET_PRCMAX
If [L]_AOLDVAL<>this.PRCMAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRCMAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRCMAX
 Gosub PROPAGATE_PRCMAX
Endif
Return

$INIT_PRCMAX
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "PRCMAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRCMAX
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "PRCMAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRCMAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRCMAX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRCMAX
[L]CURPRO = "PRCMAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PRCMAX=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRCMAX
[L]CURPRO = "PRCMAX"
Return

$_AOTHERS_PRCMAX
[L]CURPRO = "PRCMAX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRCMAX
[L]CURPRO = "PRCMAX"
Return

$PROPAGATE_PRCMAX
this.isReadonly = 0
[L]CURPRO = "PRCMAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRCMAX
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "PRCMAX"
$_LNKPRO_PRCMAX
Return


####################################################################
# 21 : CREDAT Date created ( Field D)
####################################################################

$SET_CREDAT
If [L]_AOLDVAL<>this.CREDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDAT
 Gosub PROPAGATE_CREDAT
Endif
Return

$INIT_CREDAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDAT
[L]CURPRO = "CREDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDAT
[L]CURPRO = "CREDAT"
Return

$_AOTHERS_CREDAT
[L]CURPRO = "CREDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDAT
[L]CURPRO = "CREDAT"
Return

$PROPAGATE_CREDAT
this.isReadonly = 0
[L]CURPRO = "CREDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREDAT"
$_LNKPRO_CREDAT
Return


####################################################################
# 22 : CREUSR Creation author ( Field A 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
Return


####################################################################
# 23 : UPDDAT Change date ( Field D)
####################################################################

$SET_UPDDAT
If [L]_AOLDVAL<>this.UPDDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDAT
 Gosub PROPAGATE_UPDDAT
Endif
Return

$INIT_UPDDAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDAT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDAT
[L]CURPRO = "UPDDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$_AOTHERS_UPDDAT
[L]CURPRO = "UPDDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDAT
[L]CURPRO = "UPDDAT"
Return

$PROPAGATE_UPDDAT
this.isReadonly = 0
[L]CURPRO = "UPDDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDAT
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDDAT"
$_LNKPRO_UPDDAT
Return


####################################################################
# 24 : UPDUSR Change author ( Field A 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
Return


####################################################################
# 25 : EXPNUM Export number ( Field L 8)
####################################################################

$SET_EXPNUM
If [L]_AOLDVAL<>this.EXPNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_EXPNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.EXPNUM
 Gosub PROPAGATE_EXPNUM
Endif
Return

$INIT_EXPNUM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "EXPNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_EXPNUM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "EXPNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_EXPNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_EXPNUM
[L]CURPRO = "EXPNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.EXPNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$_AOTHERS_EXPNUM
[L]CURPRO = "EXPNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_EXPNUM
[L]CURPRO = "EXPNUM"
Return

$PROPAGATE_EXPNUM
this.isReadonly = 0
[L]CURPRO = "EXPNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_EXPNUM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "EXPNUM"
$_LNKPRO_EXPNUM
Return


####################################################################
# 26 : ENAFLG Active ( Field Local menu number 1)
####################################################################

$SET_ENAFLG
If [L]_AOLDVAL<>this.ENAFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ENAFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ENAFLG
 Gosub PROPAGATE_ENAFLG
Endif
Return

$INIT_ENAFLG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ENAFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ENAFLG=0 and fmet this.AGETATTRIBUTE("ENAFLG","$isMandatory")="true"
 this.ENAFLG = 1
Endif
Return
 
$CONTROL_ENAFLG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ENAFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ENAFLG
[L]CURPRO = "ENAFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ENAFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ENAFLG
[L]CURPRO = "ENAFLG"
If this.ENAFLG<0 or this.ENAFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ENAFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ENAFLG
[L]CURPRO = "ENAFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ENAFLG
[L]CURPRO = "ENAFLG"
Return

$PROPAGATE_ENAFLG
this.isReadonly = 0
[L]CURPRO = "ENAFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ENAFLG
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ENAFLG"
$_LNKPRO_ENAFLG
Return


####################################################################
# 27 : ACS Access code ( Field ACS 10)
####################################################################

$SET_ACS
If [L]_AOLDVAL<>this.ACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACS
 Gosub PROPAGATE_ACS
Endif
Return

$INIT_ACS
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACS
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACS                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACS
[L]CURPRO = "ACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>vireblc(format$("KTD:10B",this.ACS),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACS
[L]CURPRO = "ACS"
If vireblc(this.ACS,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPACS.ACTRLREF(this,"ACS",this.ACS,this.ACS,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACS<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACS
[L]CURPRO = "ACS"
Return

$PROPAGATE_ACS
this.isReadonly = 0
[L]CURPRO = "ACS"
Gosub _LNKPRO_ACS
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACS
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "ACS"
$_LNKPRO_ACS
If vireblc(this.ACS,2)<>""
 # Link ACCCOD
 Local File ACCCOD [WACS]
 Read [F:WACS]ACS0 = this.ACS
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ACCCOD" & ZONE="DESACC" & IDENT1=[F:WACS]CODACC & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACS","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WACS]
Endif
Return


####################################################################
# 28 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 29 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 30 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0GACCDENCOD
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return




