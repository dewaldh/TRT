#<AdxTL>@(#)0.0.0.0 $Revision$Class Employee assignment
# Supervisor
## CRUD-CLASSE ## PJMAFF
# 2018-08-27 12:39:41 100


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMAFF [PAF_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMAFF") From ASYRCOM : Endif
Local Instance PJMAFF Using C_PJMAFF

If !SILENCE : Call TRACE("3 --> New Instance C_PJMAFF") From ASYRCOM : Endif
PJMAFF = NewInstance C_PJMAFF AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PAF_]PAF0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMAFF") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMAFF.AREAD([PAF_]OPPNUM,[PAF_]PAFCLB))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMAFF.OPPNUM ="-num$(PJMAFF.OPPNUM)) From ASYRCOM
 Call TRACE("PJMAFF.PAFCLB ="-num$(PJMAFF.PAFCLB)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMAFF.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMAFF.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PAF_]
FreeGroup PJMAFF
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMAFF,ACLE,ASTATUS,_ETAG)
Variable Instance PJMAFF Using C_PJMAFF
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _PAFCLB(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PAFCLB = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File PJMAFF [PAF]
Default File [F:PAF]
Read [F:PAF]PAF0 = [L]_OPPNUM;[L]_PAFCLB
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PAF]UPDTICK)>0
 [L]_ETAG = num$([F:PAF]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMAFF,ACLE,ASTATUS)
Variable Instance PJMAFF Using C_PJMAFF
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _PAFCLB(5)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PAFCLB = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMAFF.AREAD([L]_OPPNUM,[L]_PAFCLB))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMAFF,_OPPNUM,_PAFCLB,ASTATUS)
Variable Instance PJMAFF Using C_PJMAFF
Value Char _OPPNUM
Value Char _PAFCLB
Variable Integer ASTATUS

If PJMAFF = null : End : Endif

Gosub AVARIABLES From WMC00PJMAFF
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMAFF.APARENT=null
 [L]A_I = PJMAFF.freeSnapshot
 PJMAFF.snapshotEnabled = 0
 PJMAFF.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMAFF.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMAFF._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMAFF.APARENT=null
 PJMAFF.snapshotEnabled = 1
 PJMAFF.setAccessorEnabled = 1
Endif
LogicClose File [PAF]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMAFF._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_PAFCLB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PAF]
Read [F:PAF]PAF0 = [L]_OPPNUM;[L]_PAFCLB
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_PAFCLB
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMAFF,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PAF]AUUID)>0 & [F:PAF]AUUID=NullUuid
 [F:PAF]AUUID = getUuid
Endif
SetInstance PJMAFF With [F:PAF]
PJMAFF.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMAFF.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



