#<AdxTL>@(#)0.0.0.0 $Revision$Class Scheduled invoice
# Supervisor
## ACLA-CLASSE ## SVCRINVCND
# 2018-08-27 12:50:25 274

####################################################################
# Traitments
####################################################################
$_ADDTRT
this.AINF.TRT(1) = "WMCM_SVCRINVCND"
this.AINF.TYP(1) = 1
this.AINF.PTH(1) = ""
this.AINF.TRT(2) = "SVCRINVCND_CSTD"
this.AINF.TYP(2) = 1
this.AINF.PTH(2) = ""
this.AINF.NBTRT = 2
Return

####################################################################
#Declaration of variables
####################################################################

$DECLARE_VAR
Local Char    ACTION(50) , CURPRO(250) , VALPRO(250) , CURQRY(50) , CURPTH(250)
Local Char    AMETHOD(50) ,AOPERATION(50),AEVENT(50),ARULE(50)
Local Integer ALLSTAT,AISMET,ASTATUS
Return

####################################################################
# Methods of the class
####################################################################
# Fmethod Date calculation
$CHANGE_SCHEDULING_DATE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CHANGE_SCHEDULING_DATE" : [L]ACTION = "CHANGE_SCHEDULING_DATE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Automatic creation of assets
$CREATE_DETAIL_SCHEDINV
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "CREATE_DETAIL_SCHEDINV" : [L]ACTION = "CREATE_DETAIL_SCHEDINV" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Reinitialization
$DISPATCH_ON_ALL_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DISPATCH_ON_ALL_LINES" : [L]ACTION = "DISPATCH_ON_ALL_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Remainder distribution
$DISPATCH_ON_LASTLINE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "DISPATCH_ON_LASTLINE" : [L]ACTION = "DISPATCH_ON_LASTLINE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Balance
$EQUIL_TOT_PERCENT_ON_LAST_LINE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "EQUIL_TOT_PERCENT_ON_LAST_LINE" : [L]ACTION = "EQUIL_TOT_PERCENT_ON_LAST_LINE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Values
$GET_INVOICED_VALUES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_INVOICED_VALUES" : [L]ACTION = "GET_INVOICED_VALUES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Values
$GET_LINE_INVOICED_VALUES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_LINE_INVOICED_VALUES" : [L]ACTION = "GET_LINE_INVOICED_VALUES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Remaining for invoicing
$GET_REMAINING_TO_INVOICE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "GET_REMAINING_TO_INVOICE" : [L]ACTION = "GET_REMAINING_TO_INVOICE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Recalculate
$RECALC_PERCENT_ALL_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "RECALC_PERCENT_ALL_LINES" : [L]ACTION = "RECALC_PERCENT_ALL_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Close
$SET_CLOSED_SCHEDINV_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_CLOSED_SCHEDINV_LINES" : [L]ACTION = "SET_CLOSED_SCHEDINV_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Totals
$SET_CREDITNOTE_UPDTOTALS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_CREDITNOTE_UPDTOTALS" : [L]ACTION = "SET_CREDITNOTE_UPDTOTALS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Modification
$SET_INVOICE_AMT_CHANGED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_INVOICE_AMT_CHANGED" : [L]ACTION = "SET_INVOICE_AMT_CHANGED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Modification
$SET_INVOICE_PRC_CHANGED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_INVOICE_PRC_CHANGED" : [L]ACTION = "SET_INVOICE_PRC_CHANGED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Price change
$SET_INVOICE_PRICE_CHANGED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_INVOICE_PRICE_CHANGED" : [L]ACTION = "SET_INVOICE_PRICE_CHANGED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Quantity change
$SET_INVOICE_QTY_CHANGED
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_INVOICE_QTY_CHANGED" : [L]ACTION = "SET_INVOICE_QTY_CHANGED" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Invoice
$SET_LINE_INVOICE_NUM
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_LINE_INVOICE_NUM" : [L]ACTION = "SET_LINE_INVOICE_NUM" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Taken into account
$SET_LINE_STATUS
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_LINE_STATUS" : [L]ACTION = "SET_LINE_STATUS" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod To be invoiced
$SET_NOTCLOSED_SCHEDINV_LINES
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "SET_NOTCLOSED_SCHEDINV_LINES" : [L]ACTION = "SET_NOTCLOSED_SCHEDINV_LINES" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Addition
$TOTAL_ADD_FROM_INVOICE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TOTAL_ADD_FROM_INVOICE" : [L]ACTION = "TOTAL_ADD_FROM_INVOICE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return

# Fmethod Decrement
$TOTAL_REMOVE_FROM_INVOICE
Gosub DECLARE_VAR
[L]AISMET = [V]CST_AYES
[L]AMETHOD = "TOTAL_REMOVE_FROM_INVOICE" : [L]ACTION = "TOTAL_REMOVE_FROM_INVOICE" : [L]CURPRO = "" : Gosub ACTION_MET From ASYRSUB
Return


####################################################################
# Global methods & standards
####################################################################
$AINIT
Gosub DECLARE_VAR
[L]AEVENT = "AINIT" : [L]ACTION = "AINIT" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# AERRORS
####################################################################

$_AERROR
Gosub DECLARE_VAR From WMC0SVCRINVCND
Local Integer ALLSTAT
Call ALLERRORS(this,_CTX,_SUPP) From ASYRSUB
For AINDCLA=1 To maxtab(this.VCRINVCNDLIN)
 If this.VCRINVCNDLIN(AINDCLA)<>null
  [L]ASTATUS = fmet this.VCRINVCNDLIN(AINDCLA)._AERROR(_CTX,_SUPP)
 Endif
Next AINDCLA
Return

####################################################################
# Delete all errors
####################################################################

$_ADELERRORS
Gosub DECLARE_VAR From WMC0SVCRINVCND
Local Integer ALLSTAT
[L]ASTATUS = fmet this.ADELETEERROR([L]_APARAM)
For AINDCLA=1 To maxtab(this.VCRINVCNDLIN)
 If this.VCRINVCNDLIN(AINDCLA)<>null
  [L]ASTATUS = fmet this.VCRINVCNDLIN(AINDCLA)._ADELERRORS(_APARAM)
 Endif
Next AINDCLA
Return

####################################################################
# _ASEARCHINFOS
####################################################################

$_ASEARCHINFOS
Gosub DECLARE_VAR From WMC0SVCRINVCND
ASTATUS= func ASYRSUB.ASEARCHINFOS(this,[L]AINS_ORI,[L]ERR_TYPE,[L]PROPERTY,[L]ASTAT,[L]SELSTAT,[L]PATH)
If [L]ERR_TYPE=[V]CST_ACURRENT : Return : Endif
For AINDCLA=1 To maxtab(this.VCRINVCNDLIN)
 If this.VCRINVCNDLIN(AINDCLA)<>null
  [L]ASTATUS = fmet this.VCRINVCNDLIN(AINDCLA)._ASEARCHINFOS([L]AINS_ORI,ERR_TYPE,PROPERTY,ASTAT,SELSTAT,string$(PATH<>'',PATH+'.')+'VCRINVCNDLIN('+num$(AINDCLA)+')')
 Endif
Next AINDCLA
Return

####################################################################
# AGETERRORSFROM
####################################################################

$_AGETERRORSFROM
Gosub DECLARE_VAR From WMC0SVCRINVCND
If AINS_FROM<>null
 [L]ASTATUS = fmet AINS_FROM.ASEARCHINFOS( [V]CST_ALL, "", [V]CST_AFATAL, 0)
Endif
Call AGETERRORSFROM(AINS_FROM,this,ENVIRONNEMENT) From ASYRSUB
Return

####################################################################
$ACONTROL
####################################################################
Gosub DECLARE_VAR
[L]AEVENT = "ACONTROL" : [L]ACTION = "ACONTROL" : [L]CURPRO = "" : Gosub ACTION From ASYRSUB
Return

####################################################################
# ADELLINE
####################################################################
$ADELLINE
Case _ACOLLECTION
 When "VCRINVCNDLIN"
  [L]_ALINE =  func ASYRSUBTAB.ADELLINE([L]ALINE,"VCRINVCNDLIN",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# ADDLINE
####################################################################
$ADDLINE
Case _ACOLLECTION
 When "VCRINVCNDLIN"
  [L]_ALINE = func ASYRSUBTAB.ADDLINE([L]ALINE,"VCRINVCNDLIN","C_SVCRINVCNDD",this)
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETDIM
####################################################################
$AGETDIM
Case _ACOLLECTION
 When "VCRINVCNDLIN"
  [L]_ALINE = 0
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# AGETMIN
####################################################################
$AGETMIN
Case _ACOLLECTION
 When "VCRINVCNDLIN"
  [L]_ALINE = 1
 When Default :
  [L]_ALINE = [V]CST_ANOTDEFINED
Endcase
Return

####################################################################
# _ALOAD_KEYS
####################################################################
$_ALOAD_KEYS
this.AKEYS(1) = "VCRTYP"
this.AKEYS(2) = "VCRNUMORI"
this.AKEYS(3) = "VCRLINORI"
this.AKEYS(4) = "VCRSEQORI"
Return

####################################################################
# _ADELINSTANCE
####################################################################
$_ADELINSTANCE
[L]ASTATUS = func ASYRSUBTAB._ADELINSTANCE(this)
Return

####################################################################
# ADDINSTANCE_BOUND
####################################################################
$ADDINSTANCE_BOUND
Return



