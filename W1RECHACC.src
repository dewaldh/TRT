#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management RECHACC 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:10:33"
A_USER  = "ADMIN"
A_STAMP = "20180828001033"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask RECHACC [DIA]
Gosub HORODAT
Local Inpbox "RECHACC" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]10
Grizo [DIA]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=37 : X2(0)=76 : Y1(0)=11 : Y2(0)=12
X1(1)=37 : X2(1)=76 : Y1(1)=13 : Y2(1)=17
Return

$ON_ACS
Onevent BEFORE_INPUT Call AS_ACS(zc) From W1RECHACC
Onevent CONTROL Call C_ACS(zc) From W1RECHACC
Return

Subprog AS_ACS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_ACS(zc) From W1RECHACC
Gosub _AFF
End

Subprog C_ACS(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ACS" : GZNUM = 71 : Endif
Gosub _AFF
End

Subprog S_ACS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJW
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJW"
 PARMSK(1) = "ACS"
 PARMSK(2) = ""
 PARMSK(3) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_AMK
Onevent INIT_AREA Call D_AMK(zc) From W1RECHACC
Onevent BEFORE_INPUT Call AS_AMK(zc) From W1RECHACC
Return

Subprog D_AMK(VALEUR)
Variable Integer VALEUR
If varinit([M]AMK,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AMK(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ACLA
Onevent INIT_AREA Call D_ACLA(zc) From W1RECHACC
Onevent BEFORE_INPUT Call AS_ACLA(zc) From W1RECHACC
Return

Subprog D_ACLA(VALEUR)
Variable Integer VALEUR
If varinit([M]ACLA,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ACLA(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_ASW
Onevent INIT_AREA Call D_ASW(zc) From W1RECHACC
Onevent BEFORE_INPUT Call AS_ASW(zc) From W1RECHACC
Return

Subprog D_ASW(VALEUR)
Variable Integer VALEUR
If varinit([M]ASW,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ASW(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AUT
Onevent INIT_AREA Call D_AUT(zc) From W1RECHACC
Onevent BEFORE_INPUT Call AS_AUT(zc) From W1RECHACC
Return

Subprog D_AUT(VALEUR)
Variable Integer VALEUR
If varinit([M]AUT,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_AUT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


