#<AdxTL>@(#)0.0.0.0 $Revision$Class Shipment documents
# Supervisor
## ACLA-CLASSE ## SHIPDOC
# 2018-08-27 12:45:39 287


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : VCRNUM Entry no. (Ship. or transport no.) ( Field VCR 20)
####################################################################

$SET_VCRNUM
If [L]_AOLDVAL<>this.VCRNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRNUM
 Gosub PROPAGATE_VCRNUM
Endif
Return

$INIT_VCRNUM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "VCRNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_VCRNUM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "VCRNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRNUM
[L]CURPRO = "VCRNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.VCRNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRNUM
[L]CURPRO = "VCRNUM"
If vireblc(this.VCRNUM,2)<>vireblc(format$("K:20X",this.VCRNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_VCRNUM
[L]CURPRO = "VCRNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRNUM
[L]CURPRO = "VCRNUM"
Return

$PROPAGATE_VCRNUM
this.isReadonly = 0
[L]CURPRO = "VCRNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRNUM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "VCRNUM"
$_LNKPRO_VCRNUM
Return


####################################################################
# 2 : VCRTYP Entry type ( Field Local menu number 701)
####################################################################

$SET_VCRTYP
If [L]_AOLDVAL<>this.VCRTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_VCRTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.VCRTYP
 Gosub PROPAGATE_VCRTYP
Endif
Return

$INIT_VCRTYP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "VCRTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.VCRTYP=0 and fmet this.AGETATTRIBUTE("VCRTYP","$isMandatory")="true"
 this.VCRTYP = 1
Endif
Return
 
$CONTROL_VCRTYP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "VCRTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_VCRTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_VCRTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_VCRTYP
[L]CURPRO = "VCRTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.VCRTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_VCRTYP
[L]CURPRO = "VCRTYP"
If this.VCRTYP<0 or this.VCRTYP>len(mess(0,701,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"701 ->"-num$(this.VCRTYP)-mess(99,123,1)):  Return : # Local menu "701 -> Invalid option
Endif
Return

$_AOTHERS_VCRTYP
[L]CURPRO = "VCRTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_VCRTYP
[L]CURPRO = "VCRTYP"
Return

$PROPAGATE_VCRTYP
this.isReadonly = 0
[L]CURPRO = "VCRTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_VCRTYP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "VCRTYP"
$_LNKPRO_VCRTYP
Return


####################################################################
# 3 : SDLIN Line ( Field ISEQ 0)
####################################################################

$SET_SDLIN
If [L]_AOLDVAL<>this.SDLIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDLIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDLIN
 Gosub PROPAGATE_SDLIN
Endif
Return

$INIT_SDLIN
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDLIN"
[L]ASTATUS =  func SYRCOLLECTION.SEQADD(this,"SDLIN",this.SDLIN,"SHIPD",10)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDLIN
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDLIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDLIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDLIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDLIN
[L]CURPRO = "SDLIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SDLIN=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDLIN
[L]CURPRO = "SDLIN"
Return

$_AOTHERS_SDLIN
[L]CURPRO = "SDLIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDLIN
[L]CURPRO = "SDLIN"
Return

$PROPAGATE_SDLIN
this.isReadonly = 0
[L]CURPRO = "SDLIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDLIN
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDLIN"
$_LNKPRO_SDLIN
Return


####################################################################
# 4 : SDTYPE Document type ( Field Miscellaneous table number)
####################################################################

$SET_SDTYPE
If [L]_AOLDVAL<>this.SDTYPE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDTYPE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDTYPE
 Gosub PROPAGATE_SDTYPE
Endif
Return

$INIT_SDTYPE
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDTYPE"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"SDTYPE",this.SDTYPE,107)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDTYPE
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDTYPE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDTYPE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDTYPE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDTYPE
[L]CURPRO = "SDTYPE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDTYPE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDTYPE
[L]CURPRO = "SDTYPE"
If vireblc(this.SDTYPE,2)<>vireblc(format$("K:20B",this.SDTYPE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDTYPE
[L]CURPRO = "SDTYPE"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"SDTYPE",this.SDTYPE,107,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDTYPE
[L]CURPRO = "SDTYPE"
Return

$PROPAGATE_SDTYPE
this.isReadonly = 0
[L]CURPRO = "SDTYPE"
Gosub _LNKPRO_SDTYPE
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDTYPE
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDTYPE"
$_LNKPRO_SDTYPE
If vireblc(this.SDTYPE,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 107;this.SDTYPE
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDTYPE","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDTYPE","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return

$_ALOADATTRIBUTE_SDTYPE
[L]ASTATUS = fmet this.ASETATTRIBUTE("SDTYPE","$isMandatory","true")
Return


####################################################################
# 5 : SDORI Document origin ( Field Local menu number 2512)
####################################################################

$SET_SDORI
If [L]_AOLDVAL<>this.SDORI
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDORI
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDORI
 Gosub PROPAGATE_SDORI
Endif
Return

$INIT_SDORI
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDORI"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SDORI=0 and fmet this.AGETATTRIBUTE("SDORI","$isMandatory")="true"
 this.SDORI = 1
Endif
Return
 
$CONTROL_SDORI
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDORI"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDORI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDORI                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDORI
[L]CURPRO = "SDORI"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SDORI=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDORI
[L]CURPRO = "SDORI"
If this.SDORI<0 or this.SDORI>len(mess(0,2512,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"2512 ->"-num$(this.SDORI)-mess(99,123,1)):  Return : # Local menu "2512 -> Invalid option
Endif
Return

$_AOTHERS_SDORI
[L]CURPRO = "SDORI"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDORI
[L]CURPRO = "SDORI"
Return

$PROPAGATE_SDORI
this.isReadonly = 0
[L]CURPRO = "SDORI"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDORI
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDORI"
$_LNKPRO_SDORI
Return

$_ALOADATTRIBUTE_SDORI
[L]ASTATUS = fmet this.ASETATTRIBUTE("SDORI","$isMandatory","true")
Return


####################################################################
# 6 : SDDATE Document date ( Field D)
####################################################################

$SET_SDDATE
If [L]_AOLDVAL<>this.SDDATE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDDATE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDDATE
 Gosub PROPAGATE_SDDATE
Endif
Return

$INIT_SDDATE
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDDATE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDDATE
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDDATE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDDATE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDDATE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDDATE
[L]CURPRO = "SDDATE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SDDATE=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDDATE
[L]CURPRO = "SDDATE"
Return

$_AOTHERS_SDDATE
[L]CURPRO = "SDDATE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDDATE
[L]CURPRO = "SDDATE"
Return

$PROPAGATE_SDDATE
this.isReadonly = 0
[L]CURPRO = "SDDATE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDDATE
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDDATE"
$_LNKPRO_SDDATE
Return


####################################################################
# 7 : SDREF1 Reference 1 ( Field A 30)
####################################################################

$SET_SDREF1
If [L]_AOLDVAL<>this.SDREF1
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDREF1
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDREF1
 Gosub PROPAGATE_SDREF1
Endif
Return

$INIT_SDREF1
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDREF1"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDREF1
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDREF1"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDREF1                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDREF1                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDREF1
[L]CURPRO = "SDREF1"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDREF1,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDREF1
[L]CURPRO = "SDREF1"
Return

$_AOTHERS_SDREF1
[L]CURPRO = "SDREF1"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDREF1
[L]CURPRO = "SDREF1"
Return

$PROPAGATE_SDREF1
this.isReadonly = 0
[L]CURPRO = "SDREF1"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDREF1
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDREF1"
$_LNKPRO_SDREF1
Return


####################################################################
# 8 : SDREF2 Reference 2 ( Field A 30)
####################################################################

$SET_SDREF2
If [L]_AOLDVAL<>this.SDREF2
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDREF2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDREF2
 Gosub PROPAGATE_SDREF2
Endif
Return

$INIT_SDREF2
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDREF2"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDREF2
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDREF2"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDREF2                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDREF2                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDREF2
[L]CURPRO = "SDREF2"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDREF2,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDREF2
[L]CURPRO = "SDREF2"
Return

$_AOTHERS_SDREF2
[L]CURPRO = "SDREF2"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDREF2
[L]CURPRO = "SDREF2"
Return

$PROPAGATE_SDREF2
this.isReadonly = 0
[L]CURPRO = "SDREF2"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDREF2
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDREF2"
$_LNKPRO_SDREF2
Return


####################################################################
# 9 : SDBP BPs ( Field BPR 15)
####################################################################

$SET_SDBP
If [L]_AOLDVAL<>this.SDBP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDBP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDBP
 Gosub PROPAGATE_SDBP
Endif
Return

$INIT_SDBP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDBP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDBP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDBP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDBP                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDBP                  : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDBP
[L]CURPRO = "SDBP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDBP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDBP
[L]CURPRO = "SDBP"
If vireblc(this.SDBP,2)<>vireblc(format$("K:15c",this.SDBP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDBP
[L]CURPRO = "SDBP"
If vireblc(this.SDBP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPR.ACTRLREF(this,"SDBP",this.SDBP,this.SDBP,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.SDBP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDBP
[L]CURPRO = "SDBP"
Return

$PROPAGATE_SDBP
this.isReadonly = 0
[L]CURPRO = "SDBP"
Gosub _LNKPRO_SDBP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDBP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDBP"
$_LNKPRO_SDBP
If vireblc(this.SDBP,2)<>""
 # Link BPARTNER
 Local File BPARTNER [WBPR]
 Read [F:WBPR]BPR0 = this.SDBP
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("SDBP","$title",[F:WBPR]BPRSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("SDBP","$description",[F:WBPR]BPRNAM)
 Endif
 LogicClose File [WBPR]
Endif
Return


####################################################################
# 10 : SDNTYP File type ( Field Miscellaneous table number)
####################################################################

$SET_SDNTYP
If [L]_AOLDVAL<>this.SDNTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDNTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDNTYP
 Gosub PROPAGATE_SDNTYP
Endif
Return

$INIT_SDNTYP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDNTYP"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"SDNTYP",this.SDNTYP,902)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDNTYP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDNTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDNTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDNTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDNTYP
[L]CURPRO = "SDNTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDNTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDNTYP
[L]CURPRO = "SDNTYP"
If vireblc(this.SDNTYP,2)<>vireblc(format$("K:20B",this.SDNTYP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SDNTYP
[L]CURPRO = "SDNTYP"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"SDNTYP",this.SDNTYP,902,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDNTYP
[L]CURPRO = "SDNTYP"
Return

$PROPAGATE_SDNTYP
this.isReadonly = 0
[L]CURPRO = "SDNTYP"
Gosub _LNKPRO_SDNTYP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDNTYP
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDNTYP"
$_LNKPRO_SDNTYP
If vireblc(this.SDNTYP,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 902;this.SDNTYP
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDNTYP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("SDNTYP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 11 : SDFILNAM File name ( Field A 250)
####################################################################

$SET_SDFILNAM
If [L]_AOLDVAL<>this.SDFILNAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDFILNAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDFILNAM
 Gosub PROPAGATE_SDFILNAM
Endif
Return

$INIT_SDFILNAM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDFILNAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDFILNAM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDFILNAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDFILNAM              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDFILNAM              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDFILNAM
[L]CURPRO = "SDFILNAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDFILNAM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDFILNAM
[L]CURPRO = "SDFILNAM"
Return

$_AOTHERS_SDFILNAM
[L]CURPRO = "SDFILNAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDFILNAM
[L]CURPRO = "SDFILNAM"
Return

$PROPAGATE_SDFILNAM
this.isReadonly = 0
[L]CURPRO = "SDFILNAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDFILNAM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDFILNAM"
$_LNKPRO_SDFILNAM
Return


####################################################################
# 12 : SDCMT Comments ( Field A 30)
####################################################################

$SET_SDCMT
If [L]_AOLDVAL<>this.SDCMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SDCMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SDCMT
 Gosub PROPAGATE_SDCMT
Endif
Return

$INIT_SDCMT
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDCMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SDCMT
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDCMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SDCMT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SDCMT                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SDCMT
[L]CURPRO = "SDCMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SDCMT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SDCMT
[L]CURPRO = "SDCMT"
Return

$_AOTHERS_SDCMT
[L]CURPRO = "SDCMT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SDCMT
[L]CURPRO = "SDCMT"
Return

$PROPAGATE_SDCMT
this.isReadonly = 0
[L]CURPRO = "SDCMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SDCMT
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "SDCMT"
$_LNKPRO_SDCMT
Return


####################################################################
# 13 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 14 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 15 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 16 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 17 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0SHIPDOC
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




