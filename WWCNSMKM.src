#<AdxTL>@(#)%I%
# Sage X3 supervisor
# Inquiry MKM

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [26/03/2018]
A_HEURE = "13:41:33"
A_USER  = "ADMIN"
A_STAMP = "20180326134133"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(17883,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSMKMSTD"
PROGSPE    = "CNSMKMSPE"
CBOITE     = "DCNSMKM"
BOITE      = "FCNSMKM"
NOMMSK(0)  = "CONSMKM1"
ABMSK(0)   = "MKM1"
NOMMSK(1)  = "CONSMKM2"
ABMSK(1)   = "MKM2"
CMEMO      = "mkm"
CNOMMSK    = "CRITMKM"
CABMSK     = "CMKM"
CODMSKDEF  = "STD"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:MKM])=0 : Local File MFGMATTRK    [MKM] : Endif
If clalev([F:MTK])=0 : Local File MFGHEADTRK   [MTK] : Endif
If clalev([F:MFI])=0 : Local File MFGITM       [MFI] : Endif
If clalev([F:MFG])=0 : Local File MFGHEAD      [MFG] : Endif
If clalev([F:ITB])=0 : Local File ITMBOM       [ITB] : Endif
If clalev([F:TBO])=0 : Local File TABBOMALT    [TBO] : Endif
If clalev([F:ITM])=0 : Local File ITMMASTER    [ITM] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CMKM]
 When  0 : Local Mask =NOMMSK(0) [MKM1]
 When  1 : Local Mask =NOMMSK(1) [MKM2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CMKM]
 When  0 : Grizo [MKM1]
 When  1 : Grizo [MKM2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CMKM]ITMREFDEB)>0
 Grizo [CMKM]ITMREFDEB
Endif
If dim([M:CMKM]ITMREFFIN)>0
 Grizo [CMKM]ITMREFFIN
Endif
If dim([M:CMKM]MFGDATDEB)>0
 Grizo [CMKM]MFGDATDEB
Endif
If dim([M:CMKM]MFGDATFIN)>0
 Grizo [CMKM]MFGDATFIN
Endif
If dim([M:CMKM]MFGTNUMDEB)>0
 Grizo [CMKM]MFGTNUMDEB
Endif
If dim([M:CMKM]MFGTNUMFIN)>0
 Grizo [CMKM]MFGTNUMFIN
Endif
If dim([M:CMKM]MFGNUMDEB)>0
 Grizo [CMKM]MFGNUMDEB
Endif
If dim([M:CMKM]MFGNUMFIN)>0
 Grizo [CMKM]MFGNUMFIN
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CMKM])>0 : Close Local Mask [CMKM] : Endif
 When  0 : If clalev([M:MKM1])>0 : Close Local Mask [MKM1] : Endif
 When  1 : If clalev([M:MKM2])>0 : Close Local Mask [MKM2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CMKM]
 When  0 : Default Mask [MKM1]
 When  1 : Default Mask [MKM2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CMKM]
 When  0 : Raz [M:MKM1]
 When  1 : Raz [M:MKM2]
Endcase
Return

$CRITENT
If dim([M:CMKM]ITMREFDEB)>0 & dim([M:MKM1]ITMREFDEB)>0
 [M:CMKM]ITMREFDEB = [M:MKM1]ITMREFDEB
Endif
If dim([M:CMKM]ITMREFFIN)>0 & dim([M:MKM1]ITMREFFIN)>0
 [M:CMKM]ITMREFFIN = [M:MKM1]ITMREFFIN
Endif
If dim([M:CMKM]MFGDATDEB)>0 & dim([M:MKM1]MFGDATDEB)>0
 [M:CMKM]MFGDATDEB = [M:MKM1]MFGDATDEB
Endif
If dim([M:CMKM]MFGDATFIN)>0 & dim([M:MKM1]MFGDATFIN)>0
 [M:CMKM]MFGDATFIN = [M:MKM1]MFGDATFIN
Endif
If dim([M:CMKM]MFGTNUMDEB)>0 & dim([M:MKM1]MFGTNUMDEB)>0
 [M:CMKM]MFGTNUMDEB = [M:MKM1]MFGTNUMDEB
Endif
If dim([M:CMKM]MFGTNUMFIN)>0 & dim([M:MKM1]MFGTNUMFIN)>0
 [M:CMKM]MFGTNUMFIN = [M:MKM1]MFGTNUMFIN
Endif
If dim([M:CMKM]MFGNUMDEB)>0 & dim([M:MKM1]MFGNUMDEB)>0
 [M:CMKM]MFGNUMDEB = [M:MKM1]MFGNUMDEB
Endif
If dim([M:CMKM]MFGNUMFIN)>0 & dim([M:MKM1]MFGNUMFIN)>0
 [M:CMKM]MFGNUMFIN = [M:MKM1]MFGNUMFIN
Endif
Return

$ENTCRIT
If dim([M:CMKM]ITMREFDEB)>0 & dim([M:MKM1]ITMREFDEB)>0
[M:MKM1]ITMREFDEB = [M:CMKM]ITMREFDEB
Endif
If dim([M:CMKM]ITMREFFIN)>0 & dim([M:MKM1]ITMREFFIN)>0
[M:MKM1]ITMREFFIN = [M:CMKM]ITMREFFIN
Endif
If dim([M:CMKM]MFGDATDEB)>0 & dim([M:MKM1]MFGDATDEB)>0
[M:MKM1]MFGDATDEB = [M:CMKM]MFGDATDEB
Endif
If dim([M:CMKM]MFGDATFIN)>0 & dim([M:MKM1]MFGDATFIN)>0
[M:MKM1]MFGDATFIN = [M:CMKM]MFGDATFIN
Endif
If dim([M:CMKM]MFGTNUMDEB)>0 & dim([M:MKM1]MFGTNUMDEB)>0
[M:MKM1]MFGTNUMDEB = [M:CMKM]MFGTNUMDEB
Endif
If dim([M:CMKM]MFGTNUMFIN)>0 & dim([M:MKM1]MFGTNUMFIN)>0
[M:MKM1]MFGTNUMFIN = [M:CMKM]MFGTNUMFIN
Endif
If dim([M:CMKM]MFGNUMDEB)>0 & dim([M:MKM1]MFGNUMDEB)>0
[M:MKM1]MFGNUMDEB = [M:CMKM]MFGNUMDEB
Endif
If dim([M:CMKM]MFGNUMFIN)>0 & dim([M:MKM1]MFGNUMFIN)>0
[M:MKM1]MFGNUMFIN = [M:CMKM]MFGNUMFIN
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
NBCA = 0
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSMKM2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "MKM"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]MFGNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MFG","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "MKM"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("MTK","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT3<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT3
 VALBOUT(NBBOUT) = "MKM"
 VALBOUT(NBBOUT) += "~B3"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]MFGTRKDAT(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT4<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT4
 VALBOUT(NBBOUT) = "MKM"
 VALBOUT(NBBOUT) += "~B4"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]ITMREF(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]MFGTRKDAT(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]MFGTRKNUM(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT5<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT5
 VALBOUT(NBBOUT) = "MKM"
 VALBOUT(NBBOUT) += "~B5"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("2","~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM1]MFGFCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:MKM2]ITMREF(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:MKM2]MFGNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSMKM2"
 When "B2"
  Onerrgo RIEN
  Assign "[M:MKM2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Onerrgo
  Call B2_NBLIG From ="W1CONSMKM2"
 When "B3"
  Onerrgo RIEN
  Assign "[M:MKM1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MKM2]MFGTRKDAT(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MKM2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Onerrgo
  Call B3_NBLIG From ="W1CONSMKM2"
 When "B4"
  Onerrgo RIEN
  Assign "[M:MKM1]MFGFCY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:MKM2]ITMREF(nolign-1)" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:MKM2]MFGTRKDAT(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Assign "[M:MKM2]MFGTRKNUM(nolign-1)" With ctrans(func AFNC.PART(INFO,6),"¨","~")
  Onerrgo
  Call B4_NBLIG From ="W1CONSMKM2"
 When "B5"
  Onerrgo RIEN
  Assign "[M:MKM1]MFGFCY" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:MKM2]ITMREF(nolign-1)" With ctrans(func AFNC.PART(INFO,5),"¨","~")
  Onerrgo
  Call B5_NBLIG From ="W1CONSMKM2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


