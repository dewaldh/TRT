#<AdxTL>@(#)0.0.0.0 $Revision$Class Languages - Mobile
# Supervisor
## CRUD-CLASSE ## TABLANM
# 2018-08-27 13:37:39 923


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABLAN [TLA_]

If !SILENCE : Call TRACE("2 --> Local Instance R_TABLANM") From ASYRCOM : Endif
Local Instance TABLANM Using R_TABLANM

If !SILENCE : Call TRACE("3 --> New Instance R_TABLANM") From ASYRCOM : Endif
TABLANM = NewInstance R_TABLANM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TLA_]TLA0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABLAN") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABLANM.AREAD([TLA_]LAN))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABLANM.TLA.LAN ="-num$(TABLANM.TLA.LAN)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABLANM.TLA.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABLANM.TLA.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TLA_]
FreeGroup TABLANM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABLANM,ACLE,ASTATUS,_ETAG)
Variable Instance TABLANM Using R_TABLANM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _LAN(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_LAN = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABLAN [TLA]
Default File [F:TLA]
Read [F:TLA]TLA0 = [L]_LAN
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TLA]UPDTICK)>0
 [L]_ETAG = num$([F:TLA]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABLANM,ACLE,ASTATUS)
Variable Instance TABLANM Using R_TABLANM
Value Char ACLE
Variable Integer ASTATUS
Local Char _LAN(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_LAN = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABLANM.AREAD([L]_LAN))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABLANM,_LAN,ASTATUS)
Variable Instance TABLANM Using R_TABLANM
Value Char _LAN
Variable Integer ASTATUS

If TABLANM = null : End : Endif

Gosub AVARIABLES From WMR00TABLANM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABLANM.APARENT=null
 [L]A_I = TABLANM.freeSnapshot
 TABLANM.snapshotEnabled = 0
 TABLANM.setAccessorEnabled = 0
Endif

If fmet TABLANM.ACTX.AGETAFCRIGHT(TABLANM,"GESTLA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:TLA]
Read [F:TLA]TLA0 = [L]_LAN
If fstat
[L]A_ERROR = [L]_LAN
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABLANM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If fmet TABLANM.ACTX.AGETAFCRIGHTR(TABLANM,"GESTLA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet TABLANM.ACTX.ASTACRITROLE(TABLANM,[L]_LAN
& ,"TLA","TLA",[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLANM.ACTION("AREAD_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

TABLANM.TLA.setAccessorEnabled = 0
[L]ASTATUS = max([L]ASTATUS,fmet TABLANM.TLA.AREAD([L]_LAN))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLANM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABLANM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABLANM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABLANM.APARENT=null
 TABLANM.snapshotEnabled = 1
 TABLANM.setAccessorEnabled = 1
Endif
LogicClose File [TLA]
End



