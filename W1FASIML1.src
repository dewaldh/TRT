#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management FASIML1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:01:05"
A_USER  = "ADMIN"
A_STAMP = "20180828000105"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBCPY"
  If [M]NBCPY=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask FASIML1 [IML1]
Gosub HORODAT
Local Inpbox "FASIML1" From GFONCTION At A_STAMP With A_WINDPREV Mask [IML1] As [SIM_]
Grizo [IML1]10
Grizo [IML1]15
Grizo [IML1]20
Grizo [IML1]25
Grizo [IML1]30
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [IML1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=109 : Y1(0)=1 : Y2(0)=2
X1(1)=1 : X2(1)=109 : Y1(1)=3 : Y2(1)=4
X1(2)=1 : X2(2)=109 : Y1(2)=5 : Y2(2)=7
X1(3)=1 : X2(3)=109 : Y1(3)=8 : Y2(3)=18
X1(4)=110 : X2(4)=109 : Y1(4)=8 : Y2(4)=7
Return

$ON_IASCGU
Onevent INIT_AREA Call D_IASCGU(zc) From W1FASIML1
Onevent CONTROL Call C_IASCGU(zc) From W1FASIML1
Onevent AFTER_AREA Call AP_IASCGU(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_IASCGU From W1FASIML1
Onevent BEFORE_INPUT Call AS_IASCGU(zc) From W1FASIML1
Return

Subprog D_IASCGU(VALEUR)
Variable Char    VALEUR()
If varinit([M]IASCGU,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"613","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_IASCGU(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_IASCGU(zc) From W1FASIML1
Onkey 144 Titled GBOUTP Call P_IASCGU(zc) From W1FASIML1
Onkey 146 Titled GBOUTA Call SA_IASCGU(zc) From W1FASIML1
Gosub _AFF
End

Subprog C_IASCGU(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"613","") From SUBADI
If mkstat : GERR = 1 : GZONE = "IASCGU" : GZNUM = 34698 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"613",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "IASCGU" : GZNUM = 34698 : Endif
 If !mkstat
  ## Action STD
  Call C_IASCGU(VALEUR) From TRTFASIML
  If mkstat : GERR = 1 : GZONE = "IASCGU" : GZNUM = 34698 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog AP_IASCGU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_IASCGU(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "IASCGU" : GZNUM = 34698 : Endif
Gosub _AFF
End

$AMM_IASCGU
Call AM_IASCGU(zc)
If !mkstat & GOBJET
 zoncou = "IASCGU" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_IASCGU(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_IASCGU(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "IASCGU" : GZNUM = 34698 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZIASCGU)")>indice
 [M]IASCGU(indice) = VALEUR
 Affzo ZIASCGU(indice)
Endif
Gosub _AFF
End

Subprog S_IASCGU(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELUGT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELUGT"
 Call S_LIS_CHAR(VALEUR,PARMSK,"SELUGT","TRTFASIML","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_IASCGU(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "613"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_IASCGU(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "613"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZIASCGU
Onevent BEFORE_AREA Gosub AV_ZIASCGU From W1FASIML1
Return

$AV_ZIASCGU
Call LECTEXTRA(zc,"ATABDIV","LNGDES","613",num$([M]IASCGU(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_AASREF
Onevent CONTROL Call C_AASREF(zc) From W1FASIML1
Onevent AFTER_AREA Call AP_AASREF(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_AASREF From W1FASIML1
Onevent BEFORE_INPUT Call AS_AASREF(zc) From W1FASIML1
Return

Subprog AS_AASREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_AASREF(zc) From W1FASIML1
Onkey 144 Titled GBOUTP Call P_AASREF(zc) From W1FASIML1
Onkey 146 Titled GBOUTA Call SA_AASREF(zc) From W1FASIML1
Gosub _AFF
End

Subprog C_AASREF(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("FAS","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "AASREF" : GZNUM = 1371 : Endif
If !mkstat
 ## Action STD
 Call C_AASREF(VALEUR) From TRTFASIML
 If mkstat : GERR = 1 : GZONE = "AASREF" : GZNUM = 1371 : Endif
Endif
Gosub _AFF
End

Subprog AP_AASREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AP_AASREF(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "AASREF" : GZNUM = 1371 : Endif
Gosub _AFF
End

$AMM_AASREF
Call AM_AASREF(zc)
If !mkstat & GOBJET
 zoncou = "AASREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_AASREF(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_AASREF(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "AASREF" : GZNUM = 1371 : Endif
If !mkstat & evalue("dim("+clanam([M])+"ZAASREF)")>indice
 [M]AASREF(indice) = VALEUR
 Affzo ZAASREF(indice)
Endif
Gosub _AFF
End

Subprog S_AASREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELFASIML
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELFASIML"
 PARMSK(1) = func TRTFASIML.GET_CPY_IML()
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELFASIML","SELTABFAS","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_AASREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FAS"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_AASREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FAS",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZAASREF
Onevent BEFORE_AREA Gosub AV_ZAASREF From W1FASIML1
Return

$AV_ZAASREF
If clalev([F:FAS])=0 : Local File FXDASSETS [FAS] : Endif
Call LECTURE("FAS",num$([M]AASREF(indice)),"") From CONTOBJ
zc = [F:FAS]AASDES1
Gosub _AFF
Return

$ON_DPRPLN
Onevent BEFORE_INPUT Call AS_DPRPLN(zc) From W1FASIML1
Onevent CONTROL Call C_DPRPLN(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_DPRPLN From W1FASIML1
Onevent INIT_AREA Call D_DPRPLN(zc) From W1FASIML1
Return

Subprog D_DPRPLN(VALEUR)
Variable Integer VALEUR
If varinit([M]DPRPLN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DPRPLN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3101) From COMBOS
## Action STD
Call AS_DPRPLN(VALEUR) From TRTFASIML
If mkstat=2
 [M]DPRPLN(INDIC) = VALEUR
 Affzo DPRPLN(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3101,1))))
Endif
If !mkstat
 Discombo 0 From DPRPLN(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From DPRPLN(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_DPRPLN(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "DPRPLN" : GZNUM = 2917 : Endif
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
If !mkstat
 ## Action STD
 Call C_DPRPLN(VALEUR) From TRTFASIML
 If mkstat : GERR = 1 : GZONE = "DPRPLN" : GZNUM = 2917 : Endif
Endif
Gosub _AFF
End

$AMM_DPRPLN
Call AM_DPRPLN(zc)
If !mkstat & GOBJET
 zoncou = "DPRPLN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DPRPLN(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_DPRPLN(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "DPRPLN" : GZNUM = 2917 : Endif
Gosub _AFF
End

$ON_DATSTRFIY
Onevent BEFORE_AREA Gosub AV_DATSTRFIY From W1FASIML1
Return

$AV_DATSTRFIY
Chgfmt [M]DATSTRFIY(indice) With "DPZ:"+GFMDAT4
Gosub _AFF
Return

$ON_DATENDFIY
Onevent BEFORE_AREA Gosub AV_DATENDFIY From W1FASIML1
Return

$AV_DATENDFIY
Chgfmt [M]DATENDFIY(indice) With "DPZ:"+GFMDAT4
Gosub _AFF
Return

$ON_CUR
Return

$ON_ZCUR
Onevent BEFORE_AREA Gosub AV_ZCUR From W1FASIML1
Return

$AV_ZCUR
Call LECTEXTRA(zc,"TABCUR","INTDES",num$([M]CUR(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_DATSTRPER
Onevent BEFORE_AREA Gosub AV_DATSTRPER From W1FASIML1
Return

$AV_DATSTRPER
Chgfmt [M]DATSTRPER(indice) With "DPZ:"+GFMDAT4
Gosub _AFF
Return

$ON_DATENDPER
Onevent BEFORE_AREA Gosub AV_DATENDPER From W1FASIML1
Return

$AV_DATENDPER
Chgfmt [M]DATENDPER(indice) With "DPZ:"+GFMDAT4
Gosub _AFF
Return

$ON_IMLANNFLG
Onevent CONTROL Call C_IMLANNFLG(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_IMLANNFLG From W1FASIML1
Onevent INIT_AREA Call D_IMLANNFLG(zc) From W1FASIML1
Onevent BEFORE_INPUT Call AS_IMLANNFLG(zc) From W1FASIML1
Return

Subprog D_IMLANNFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]IMLANNFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IMLANNFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_IMLANNFLG(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "IMLANNFLG" : GZNUM = 34903 : Endif
If !mkstat
 ## Action STD
 Call C_IMLANNFLG(VALEUR) From TRTFASIML
 If mkstat : GERR = 1 : GZONE = "IMLANNFLG" : GZNUM = 34903 : Endif
Endif
Gosub _AFF
End

$AMM_IMLANNFLG
Call AM_IMLANNFLG(zc)
If !mkstat & GOBJET
 zoncou = "IMLANNFLG" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_IMLANNFLG(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_IMLANNFLG(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "IMLANNFLG" : GZNUM = 34903 : Endif
Gosub _AFF
End

$ON_DATEFF
Onevent BEFORE_AREA Gosub AV_DATEFF From W1FASIML1
Return

$AV_DATEFF
Chgfmt [M]DATEFF(indice) With "DPZ:"+GFMDAT4
Gosub _AFF
Return

$ON_IMLTYP
Onevent INIT_AREA Call D_IMLTYP(zc) From W1FASIML1
Onevent BEFORE_INPUT Call AS_IMLTYP(zc) From W1FASIML1
Onevent CONTROL Call C_IMLTYP(zc) From W1FASIML1
Return

Subprog D_IMLTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]IMLTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_IMLTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_IMLTYP(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "IMLTYP" : GZNUM = 38954 : Endif
Gosub _AFF
End

$ON_INTIMLTYP
Onevent INIT_AREA Call D_INTIMLTYP(zc) From W1FASIML1
Onevent CONTROL Call C_INTIMLTYP(zc) From W1FASIML1
Onevent BEFORE_INPUT Call AS_INTIMLTYP(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_INTIMLTYP From W1FASIML1
Return

Subprog D_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
If varinit([M]INTIMLTYP,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"519","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_INTIMLTYP(zc) From W1FASIML1
Onkey 144 Titled GBOUTP Call P_INTIMLTYP(zc) From W1FASIML1
Onkey 146 Titled GBOUTA Call SA_INTIMLTYP(zc) From W1FASIML1
Gosub _AFF
End

Subprog C_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"519","") From SUBADI
If mkstat : GERR = 1 : GZONE = "INTIMLTYP" : GZNUM = 34334 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"519",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "INTIMLTYP" : GZNUM = 34334 : Endif
Endif
Gosub _AFF
End

$AMM_INTIMLTYP
Call AM_INTIMLTYP(zc)
If !mkstat & GOBJET
 zoncou = "INTIMLTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZINTIMLTYP)")>indice
 [M]INTIMLTYP(indice) = VALEUR
 Affzo ZINTIMLTYP(indice)
Endif
Gosub _AFF
End

Subprog S_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "519"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "519"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_INTIMLTYP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "519"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZINTIMLTYP
Onevent BEFORE_AREA Gosub AV_ZINTIMLTYP From W1FASIML1
Return

$AV_ZINTIMLTYP
Call LECTEXTRA(zc,"ATABDIV","LNGDES","519",num$([M]INTIMLTYP(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_EXTIMLTYP
Onevent INIT_AREA Call D_EXTIMLTYP(zc) From W1FASIML1
Onevent CONTROL Call C_EXTIMLTYP(zc) From W1FASIML1
Onevent BEFORE_INPUT Call AS_EXTIMLTYP(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_EXTIMLTYP From W1FASIML1
Return

Subprog D_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
If varinit([M]EXTIMLTYP,indice)=0
 ## Action INILEG
 Call INILEG(VALEUR,"516","") From SUBADI
Endif
Gosub _AFF
End

Subprog AS_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_EXTIMLTYP(zc) From W1FASIML1
Onkey 144 Titled GBOUTP Call P_EXTIMLTYP(zc) From W1FASIML1
Onkey 146 Titled GBOUTA Call SA_EXTIMLTYP(zc) From W1FASIML1
Gosub _AFF
End

Subprog C_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
## Action CONTADI
Call CONTADI(VALEUR,"516","") From SUBADI
If mkstat : GERR = 1 : GZONE = "EXTIMLTYP" : GZNUM = 34630 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("ADI","!",VALEUR,"516",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "EXTIMLTYP" : GZNUM = 34630 : Endif
Endif
Gosub _AFF
End

$AMM_EXTIMLTYP
Call AM_EXTIMLTYP(zc)
If !mkstat & GOBJET
 zoncou = "EXTIMLTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZEXTIMLTYP)")>indice
 [M]EXTIMLTYP(indice) = VALEUR
 Affzo ZEXTIMLTYP(indice)
Endif
Gosub _AFF
End

Subprog S_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELADI
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELADI"
 PARMSK(1) = "516"
 PARMSK(2) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELADI","SUBADI","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog SA_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ADI"
PARMSK(2) = "516"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_EXTIMLTYP(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = "516"
Call VISU("ADI",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZEXTIMLTYP
Onevent BEFORE_AREA Gosub AV_ZEXTIMLTYP From W1FASIML1
Return

$AV_ZEXTIMLTYP
Call LECTEXTRA(zc,"ATABDIV","LNGDES","516",num$([M]EXTIMLTYP(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_RSDVAL
Onevent BEFORE_AREA Gosub AV_RSDVAL From W1FASIML1
Return

$AV_RSDVAL
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(GCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_IMLBLC
Onevent BEFORE_AREA Gosub AV_IMLBLC From W1FASIML1
Return

$AV_IMLBLC
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_NSPVAL
Onevent BEFORE_AREA Gosub AV_NSPVAL From W1FASIML1
Onevent CONTROL Call C_NSPVAL(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_NSPVAL From W1FASIML1
Return

$AV_NSPVAL
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]NSPVAL(indice) With "Nz3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_NSPVAL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_NSPVAL(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "NSPVAL" : GZNUM = 34176 : Endif
Gosub _AFF
End

$AMM_NSPVAL
Call AM_NSPVAL(zc)
If !mkstat & GOBJET
 zoncou = "NSPVAL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_NSPVAL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_NSPVAL(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "NSPVAL" : GZNUM = 34176 : Endif
Gosub _AFF
End

$ON_RCOVAL
Onevent BEFORE_AREA Gosub AV_RCOVAL From W1FASIML1
Return

$AV_RCOVAL
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]RCOVAL(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_USEVAL
Onevent BEFORE_AREA Gosub AV_USEVAL From W1FASIML1
Onevent CONTROL Call C_USEVAL(zc) From W1FASIML1
Onevent AFTER_AREA Call AP_USEVAL(zc) From W1FASIML1
Onevent AFTER_CHANGE Gosub AMM_USEVAL From W1FASIML1
Return

$AV_USEVAL
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]USEVAL(indice) With "Nz3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_USEVAL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_USEVAL(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "USEVAL" : GZNUM = 34905 : Endif
Gosub _AFF
End

Subprog AP_USEVAL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AP_USEVAL(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "USEVAL" : GZNUM = 34905 : Endif
Gosub _AFF
End

$AMM_USEVAL
Call AM_USEVAL(zc)
If !mkstat & GOBJET
 zoncou = "USEVAL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_USEVAL(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_USEVAL(VALEUR) From TRTFASIML
If mkstat : GERR = 1 : GZONE = "USEVAL" : GZNUM = 34905 : Endif
Gosub _AFF
End

$ON_NBV
Onevent BEFORE_AREA Gosub AV_NBV From W1FASIML1
Return

$AV_NBV
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]NBV(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_IMLRVECLC
Onevent BEFORE_AREA Gosub AV_IMLRVECLC From W1FASIML1
Return

$AV_IMLRVECLC
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_IMLMAX
Onevent BEFORE_AREA Gosub AV_IMLMAX From W1FASIML1
Return

$AV_IMLMAX
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(GCUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_IML
Onevent BEFORE_AREA Gosub AV_IML From W1FASIML1
Return

$AV_IML
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]IML(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_IMLRVE
Onevent BEFORE_AREA Gosub AV_IMLRVE From W1FASIML1
Return

$AV_IMLRVE
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]IMLRVE(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_IMLRVEBLC
Onevent BEFORE_AREA Gosub AV_IMLRVEBLC From W1FASIML1
Return

$AV_IMLRVEBLC
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find(GCUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]IMLRVEBLC(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_IMLCLC
Onevent BEFORE_AREA Gosub AV_IMLCLC From W1FASIML1
Return

$AV_IMLCLC
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_IMLRVELIM
Onevent BEFORE_AREA Gosub AV_IMLRVELIM From W1FASIML1
Return

$AV_IMLRVELIM
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Chgfmt [M]IMLRVELIM(indice) With "NPz3:"+GDEVFMT
Gosub _AFF
Return

$ON_IMLREP
Onevent BEFORE_AREA Gosub AV_IMLREP From W1FASIML1
Return

$AV_IMLREP
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M:IML1]CUR,GDEVISE(1..GNBDEV)),1))
Gosub _AFF
Return

$ON_TCPY
Return

$ON_FLGOK
Onevent INIT_AREA Call D_FLGOK(zc) From W1FASIML1
Return

Subprog D_FLGOK(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGOK,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


