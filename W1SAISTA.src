#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management SAISTA 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:11:10"
A_USER  = "ADMIN"
A_STAMP = "20180828001110"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask SAISTA [SAP]
Gosub HORODAT
Local Inpbox "SAISTA" From GFONCTION At A_STAMP With A_WINDPREV Mask [SAP] As [SIM_]
Grizo [SAP]10
Grizo [SAP]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [SAP]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=112 : Y1(0)=1 : Y2(0)=4
X1(1)=1 : X2(1)=112 : Y1(1)=5 : Y2(1)=28
Return

$ON_COD
Onevent CONTROL Call C_COD(zc) From W1SAISTA
Onevent BEFORE_INPUT Call AS_COD(zc) From W1SAISTA
Onevent AFTER_CHANGE Gosub AMM_COD From W1SAISTA
Return

Subprog AS_COD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_COD(zc) From W1SAISTA
Onkey 144 Titled GBOUTP Call P_COD(zc) From W1SAISTA
Onkey 146 Titled GBOUTA Call SA_COD(zc) From W1SAISTA
Gosub _AFF
End

Subprog C_COD(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
If !mkstat
 ## Action CTLSLASH
 Call CTLSLASH(VALEUR) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("PS2","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
  If !mkstat
   ## Action STD
   Call C_COD(VALEUR) From SAISTA
   If mkstat : GERR = 1 : GZONE = "COD" : GZNUM = 5296 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_COD
Call AM_COD(zc)
If !mkstat & GOBJET
 zoncou = "COD" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_COD(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCOD)")>indice
 [M]COD(indice) = VALEUR
 Affzo ZCOD(indice)
Endif
Gosub _AFF
End

Subprog S_COD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "PS2"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_COD(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "PS2"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_COD(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("PS2",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCOD
Onevent BEFORE_AREA Gosub AV_ZCOD From W1SAISTA
Return

$AV_ZCOD
Call LECTEXTRA(zc,"PARSTA2","INTIT",num$([M]COD(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1SAISTA
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1SAISTA
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3529,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_CPY(VALEUR) From SAISTA
If mkstat=2
 [M]CPY(INDIC) = VALEUR
 Affzo CPY(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action INICPY
 Call INICPY(VALEUR) From EXEFNC
 If mkstat=2
  [M]CPY(INDIC) = VALEUR
  Affzo CPY(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_CPY(zc) From W1SAISTA
 Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1SAISTA
 Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1SAISTA
 Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1SAISTA
Endif
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action ACONTCPY
Call CONTSOC(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("CPY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action CONTCPY
  Call CONTCPY(VALEUR) From EXEFNC
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  If !mkstat
   ## Action STD
   Call C_CPY(VALEUR) From SAISTA
   If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPY(VALEUR)
Variable Char    VALEUR()
Call OBJET("CPY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_FCY
Onevent CONTROL Call C_FCY(zc) From W1SAISTA
Onevent BEFORE_INPUT Call AS_FCY(zc) From W1SAISTA
Return

Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(1427,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_FCY(VALEUR) From SAISTA
If mkstat=2
 [M]FCY(INDIC) = VALEUR
 Affzo FCY(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_FCY(zc) From W1SAISTA
Onkey   2 Titled GBOUTS Call S_FCY(zc) From W1SAISTA
Onkey 144 Titled GBOUTP Call P_FCY(zc) From W1SAISTA
Onkey 146 Titled GBOUTA Call SA_FCY(zc) From W1SAISTA
Gosub _AFF
End

Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
## Action ACONTFCY
Call CONTSITE(VALEUR) From SUBAGF
If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("FCY","!",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
 If !mkstat
  ## Action STD
  Call C_FCY(VALEUR) From SAISTA
  If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
  If !mkstat
   ## Action CONTFCY
   Call CONTFCY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
   If !mkstat
    ## Action CONTFCYCPY
    Call CONTFCYCPY(VALEUR,[M]CPY) From EXEFNC
    If mkstat : GERR = 1 : GZONE = "FCY" : GZNUM = 1344 : Endif
   Endif
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "FCY"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_FCY(VALEUR)
Variable Char    VALEUR()
Call OBJET("FCY",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "FCY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_FCY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("FCY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_DATDEB
Onevent BEFORE_AREA Gosub AV_DATDEB From W1SAISTA
Onevent AFTER_CHANGE Gosub AMM_DATDEB From W1SAISTA
Onevent INIT_AREA Call D_DATDEB(zc) From W1SAISTA
Onevent BEFORE_INPUT Call AS_DATDEB(zc) From W1SAISTA
Return

$AV_DATDEB
## Action ADATRELI
Call INIDAT(zc,[M:DIA]DATFRMD) From ADATREL
Chgfmt [M]DATDEB(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_DATDEB(VALEUR)
Variable Date    VALEUR
If varinit([M]DATDEB,indice)=0
 ## Action STD
 Call D_DATDEB(VALEUR) From SAISTA
Endif
Gosub _AFF
End

Subprog AS_DATDEB(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DATDEB(zc) From W1SAISTA
Gosub _AFF
End

$AMM_DATDEB
Call AM_DATDEB(zc)
If !mkstat & GOBJET
 zoncou = "DATDEB" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DATDEB(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M:DIA]DATFRMD) From ADATREL
If mkstat : GERR = 1 : GZONE = "DATDEB" : GZNUM = 1805 : Endif
Gosub _AFF
End

Subprog B1_DATDEB(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M:DIA]DATFRMD
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M:DIA]DATFRMD = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_DATFIN
Onevent BEFORE_AREA Gosub AV_DATFIN From W1SAISTA
Onevent AFTER_CHANGE Gosub AMM_DATFIN From W1SAISTA
Onevent INIT_AREA Call D_DATFIN(zc) From W1SAISTA
Onevent CONTROL Call C_DATFIN(zc) From W1SAISTA
Onevent BEFORE_INPUT Call AS_DATFIN(zc) From W1SAISTA
Return

$AV_DATFIN
## Action ADATRELI
Call INIDAT(zc,[M:DIA]DATFRMF) From ADATREL
Chgfmt [M]DATFIN(indice) With "DZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_DATFIN(VALEUR)
Variable Date    VALEUR
If varinit([M]DATFIN,indice)=0
 ## Action STD
 Call D_DATFIN(VALEUR) From SAISTA
Endif
Gosub _AFF
End

Subprog AS_DATFIN(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(32514,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_DATFIN(zc) From W1SAISTA
Gosub _AFF
End

Subprog C_DATFIN(VALEUR)
Variable Date    VALEUR
## Action DATDEBFIN
Call DATDEBFIN(VALEUR,[M]DATDEB) From EXEFNC
If mkstat : GERR = 1 : GZONE = "DATFIN" : GZNUM = 1806 : Endif
If !mkstat
 ## Action STD
 Call C_DATFIN(VALEUR) From SAISTA
 If mkstat : GERR = 1 : GZONE = "DATFIN" : GZNUM = 1806 : Endif
Endif
Gosub _AFF
End

$AMM_DATFIN
Call AM_DATFIN(zc)
If !mkstat & GOBJET
 zoncou = "DATFIN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_DATFIN(VALEUR)
Variable Date    VALEUR
## Action ADATRELM
Call MODIFDAT(VALEUR,[M:DIA]DATFRMF) From ADATREL
If mkstat : GERR = 1 : GZONE = "DATFIN" : GZNUM = 1806 : Endif
Gosub _AFF
End

Subprog B1_DATFIN(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action ADATREL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "ADATREL"
 PARMSK(1) = [M:DIA]DATFRMF
 Call TRAITE_DAT(VALEUR,PARMSK,"","ADATREL","ADATREL",3,"") From GTRAITE
 [M:DIA]DATFRMF = PARMSK(1)
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1SAISTA
Onevent BEFORE_AREA Call AV_NBLIG From W1SAISTA
Return

Subprog AV_NBLIG
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBLIG" : Gosub TIT_COL From W1SAISTA
Endif
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action STD
Call C_NBLIG From SAISTA
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

$ON_NUMLIG
Onevent BEFORE_AREA Gosub AV_NUMLIG From W1SAISTA
Return

$AV_NUMLIG
zc = nolign
Gosub _AFF
Return

$ON_LIBCLE
Onevent BEFORE_INPUT Call AS_LIBCLE(zc) From W1SAISTA
Onevent CONTROL Call C_LIBCLE(zc) From W1SAISTA
Onevent AFTER_CHANGE Gosub AMM_LIBCLE From W1SAISTA
Return

Subprog IB_LIBCLE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFMTBOUT
 Call BOUTSEL(VALEUR,[M]CODTYP([M]NIVEAU),[M]NOLIB([M]NIVEAU),"") From FMTVAR
Endif
Gosub _AFF
End

Subprog AS_LIBCLE(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(877,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call IB_LIBCLE(VALEUR)
## Action AFMTSAI
Call ASAISIE(VALEUR,[M]CODTYP([M]NIVEAU)) From FMTVAR
If mkstat=2
 [M]LIBCLE(INDIC) = VALEUR
 Affzo LIBCLE(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_LIBCLE(VALEUR) From SAISTA
 If mkstat=2
  [M]LIBCLE(INDIC) = VALEUR
  Affzo LIBCLE(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_LIBCLE(zc) From W1SAISTA
 Onkey   2 Titled GBOUTS Call S_LIBCLE(zc) From W1SAISTA
Endif
Gosub _AFF
End

Subprog C_LIBCLE(VALEUR)
Variable Char    VALEUR()
## Action AFMTCONT
Call CONTROLE(VALEUR,[M]CODTYP([M]NIVEAU),[M]NOLIB([M]NIVEAU),[M]LONG([M]NIVEAU),[M]CLE(nolign-1)) From FMTVAR
If mkstat : GERR = 1 : GZONE = "LIBCLE" : GZNUM = 0 : Endif
If !mkstat
 ## Action ACONTACL
 Call CONTACL([M]CLE(nolign-1),[M]CODTYP([M]NIVEAU),"","") From SUBACL
 If mkstat : GERR = 1 : GZONE = "LIBCLE" : GZNUM = 0 : Endif
 If !mkstat
  ## Action CONTUNI
  Call UNICITE2(VALEUR,[M]NBLIG,[M]LIBCLE) From OBJDIV
  If mkstat : GERR = 1 : GZONE = "LIBCLE" : GZNUM = 0 : Endif
  If !mkstat
   ## Action STD
   Call C_LIBCLE(VALEUR) From SAISTA
   If mkstat : GERR = 1 : GZONE = "LIBCLE" : GZNUM = 0 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_LIBCLE
Call AM_LIBCLE(zc)
If !mkstat & GOBJET
 zoncou = "LIBCLE" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIBCLE(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_LIBCLE(VALEUR) From SAISTA
If mkstat : GERR = 1 : GZONE = "LIBCLE" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog S_LIBCLE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFMTSEL
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AFMTSEL"
 PARMSK(1) = [M]CODTYP([M]NIVEAU)
 PARMSK(2) = num$([M]NOLIB([M]NIVEAU))
 PARMSK(3) = num$([M]LONG([M]NIVEAU))
 PARMSK(4) = [M]CLE(nolign-1)
 PARMSK(5) = ""
 PARMSK(6) = ""
 PARMSK(7) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"","FMTVAR","") From GACTION
 [M]CLE(nolign-1) = PARMSK(4)
 GACTION = SAVACT
Endif
If !GWEBSERV
 ## Action AFMTLIB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AFMTLIB"
 PARMSK(1) = [M]CODTYP([M]NIVEAU)
 PARMSK(2) = num$([M]NOLIB([M]NIVEAU))
 PARMSK(3) = num$([M]LONG([M]NIVEAU))
 PARMSK(4) = [M]CLE(nolign-1)
 PARMSK(5) = ""
 PARMSK(6) = ""
 Call S_LIS_CHAR(VALEUR,PARMSK,"","FMTVAR","") From GACTION
 [M]CLE(nolign-1) = PARMSK(4)
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LIBCLE(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action AFMTB1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "AFMTB1"
 PARMSK(1) = [M]CODTYP([M]NIVEAU)
 PARMSK(2) = ""
 PARMSK(3) = num$([M]NOLIB([M]NIVEAU))
 PARMSK(4) = ""
 Call S_AFF_CHAR(VALEUR,PARMSK,"AFMTB1","FMTVAR","") From GACTION
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_AMT1
Onevent BEFORE_INPUT Call AS_AMT1(zc) From W1SAISTA
Return

Subprog AS_AMT1(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT1(VALEUR) From SAISTA
If mkstat=2
 [M]AMT1(INDIC) = VALEUR
 Affzo AMT1(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT2
Onevent BEFORE_INPUT Call AS_AMT2(zc) From W1SAISTA
Return

Subprog AS_AMT2(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT2(VALEUR) From SAISTA
If mkstat=2
 [M]AMT2(INDIC) = VALEUR
 Affzo AMT2(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT3
Onevent BEFORE_INPUT Call AS_AMT3(zc) From W1SAISTA
Return

Subprog AS_AMT3(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT3(VALEUR) From SAISTA
If mkstat=2
 [M]AMT3(INDIC) = VALEUR
 Affzo AMT3(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT4
Onevent BEFORE_INPUT Call AS_AMT4(zc) From W1SAISTA
Return

Subprog AS_AMT4(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT4(VALEUR) From SAISTA
If mkstat=2
 [M]AMT4(INDIC) = VALEUR
 Affzo AMT4(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT5
Onevent BEFORE_INPUT Call AS_AMT5(zc) From W1SAISTA
Return

Subprog AS_AMT5(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT5(VALEUR) From SAISTA
If mkstat=2
 [M]AMT5(INDIC) = VALEUR
 Affzo AMT5(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT6
Onevent BEFORE_INPUT Call AS_AMT6(zc) From W1SAISTA
Return

Subprog AS_AMT6(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT6(VALEUR) From SAISTA
If mkstat=2
 [M]AMT6(INDIC) = VALEUR
 Affzo AMT6(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT7
Onevent BEFORE_INPUT Call AS_AMT7(zc) From W1SAISTA
Return

Subprog AS_AMT7(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT7(VALEUR) From SAISTA
If mkstat=2
 [M]AMT7(INDIC) = VALEUR
 Affzo AMT7(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT8
Onevent BEFORE_INPUT Call AS_AMT8(zc) From W1SAISTA
Return

Subprog AS_AMT8(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT8(VALEUR) From SAISTA
If mkstat=2
 [M]AMT8(INDIC) = VALEUR
 Affzo AMT8(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT9
Onevent BEFORE_INPUT Call AS_AMT9(zc) From W1SAISTA
Return

Subprog AS_AMT9(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT9(VALEUR) From SAISTA
If mkstat=2
 [M]AMT9(INDIC) = VALEUR
 Affzo AMT9(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_AMT10
Onevent BEFORE_INPUT Call AS_AMT10(zc) From W1SAISTA
Return

Subprog AS_AMT10(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMT10(VALEUR) From SAISTA
If mkstat=2
 [M]AMT10(INDIC) = VALEUR
 Affzo AMT10(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

$ON_CODTYP
Return

$ON_FRTFLG
Onevent INIT_AREA Call D_FRTFLG(zc) From W1SAISTA
Return

Subprog D_FRTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]FRTFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$TIT_COL
Local Char TITCL(200)(1..11)
Raz TITCL
Case BASPAG
 When "NBLIG"
  TITCL(1) = [M]LIBCRIT
  TITCL(2) = [M]LIBAMT1
  TITCL(3) = [M]LIBAMT2
  TITCL(4) = [M]LIBAMT3
  TITCL(5) = [M]LIBAMT4
  TITCL(6) = [M]LIBAMT5
  TITCL(7) = [M]LIBAMT6
  TITCL(8) = [M]LIBAMT7
  TITCL(9) = [M]LIBAMT8
  TITCL(10) = [M]LIBAMT9
  TITCL(11) = [M]LIBAMT10
  If !GORITITCOL
   Titcol [M]NBLIG TITCL(1) For LIBCLE
   Titcol [M]NBLIG TITCL(2) For AMT1
   Titcol [M]NBLIG TITCL(3) For AMT2
   Titcol [M]NBLIG TITCL(4) For AMT3
   Titcol [M]NBLIG TITCL(5) For AMT4
   Titcol [M]NBLIG TITCL(6) For AMT5
   Titcol [M]NBLIG TITCL(7) For AMT6
   Titcol [M]NBLIG TITCL(8) For AMT7
   Titcol [M]NBLIG TITCL(9) For AMT8
   Titcol [M]NBLIG TITCL(10) For AMT9
   Titcol [M]NBLIG TITCL(11) For AMT10
  Else
   Titcol [M:SAP]NBLIG TITCL(1) For LIBCLE
   Titcol [M:SAP]NBLIG TITCL(2) For AMT1
   Titcol [M:SAP]NBLIG TITCL(3) For AMT2
   Titcol [M:SAP]NBLIG TITCL(4) For AMT3
   Titcol [M:SAP]NBLIG TITCL(5) For AMT4
   Titcol [M:SAP]NBLIG TITCL(6) For AMT5
   Titcol [M:SAP]NBLIG TITCL(7) For AMT6
   Titcol [M:SAP]NBLIG TITCL(8) For AMT7
   Titcol [M:SAP]NBLIG TITCL(9) For AMT8
   Titcol [M:SAP]NBLIG TITCL(10) For AMT9
   Titcol [M:SAP]NBLIG TITCL(11) For AMT10
  Endif
Endcase
Return

$CHG_STY
Return


