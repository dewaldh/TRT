#<AdxTL>@(#)0.0.0.0 $Revision$ 
######################################################################################################################
# Script            : SUBYEST                                                                                        #
# Creation date     : 27/08/2018                                                                                     #
# Version           : 1.0.0                                                                                          #
# Authors (Company) : MB (Leverage)                                                                                  #
# Module            : Land Development                                                                               #
# -------------------------------------------------------------------------------------------------------------------#
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-79                                               #
# Description       : DFCX1-79 Land Development -  Estate                                                            #
#--------------------------------------------------------------------------------------------------------------------#
# Evolutions        :                                                                                                #
######################################################################################################################

$ACTION
Case ACTION
  When "OUVRE"        : Gosub OUVRE
  When "FERME"        : Gosub FERME
  When "RAZCRE"       : Gosub RAZCRE
  When "LIENS"        : Gosub LIENS
  When "CREATION"     : Gosub CREATION
  When "APRES_CRE"    : Gosub APRES_CRE
  When "MODIF"        : Gosub MODIF
  When "APRES_MOD"    : Gosub APRES_MOD
  When "RAZDUP"       : Gosub RAZDUP
  When "AV_ANNULE"    : Gosub AV_ANNULE
  When "ANNULE"       : Gosub ANNULE
  When Default
Endcase
Return

#------------------------------------------------------------------------------------#
#Open screen
#------------------------------------------------------------------------------------#
$OUVRE
#disable the regular Classic CUD operations
ANOWRITE = 1

#nstance for your class
Global Instance YEST_INSTANCE Using C_YEST

Return

#------------------------------------------------------------------------------------#
#Before Create
#------------------------------------------------------------------------------------#
$RAZCRE
Local Integer MY_STATUS

If (YEST_INSTANCE <> null) : FreeGroup YEST_INSTANCE : Endif
YEST_INSTANCE = NewInstance C_YEST AllocGroup null

#Then you have to initialize the class properties by calling the AINIT method and/or setting properties manually
[L]MY_STATUS = fmet YEST_INSTANCE.AINIT()
If ([L]MY_STATUS >= [V]CST_AERROR)
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YEST_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

#To finish you have to refresh the UI to display the values of initialized properties.
#Because it is not possible to directly transfer class property values into screen field values, you may use the file [F] as interface.
#Complete the process for properties and fields with non matching name

SetInstance [F:YEST] With YEST_INSTANCE
[M:YEST] = [F:YEST]
[M:YEST1] = [F:YEST]

#[M:YEST] = YEST_INSTANCE.PROPERTY

Affzo [M:YEST]1-99
Affzo [M:YEST1]1-99
Return

#------------------------------------------------------------------------------------#
#Create record
#------------------------------------------------------------------------------------#
$CREATION
Local Integer MY_STATUS

#YOU CAN USE THE INSTRUCTION SetInstance WHICH WILL SET PROPERTIE's values from field'S VALUES
#For PROPERTIE's names that are identical to a field'S NAME OF THE [F] File.
SetInstance YEST_INSTANCE With [F:YEST]

#SET NEW GUID VALUE FOR NEW RECORD THAT IS CREATED
YEST_INSTANCE.YGUID   = num$(getUuid)
#SETS THE TWO FIELD VALUES, AS THESES TWO FIELDS WOULD NOT SAVE WITH THE AINSERT FUNCTION
YEST_INSTANCE.YKNO    = [M:YEST1]YKNO
YEST_INSTANCE.YFUT    = [M:YEST1]YFUT

[L]MY_STATUS = fmet YEST_INSTANCE.AINSERT()
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YEST_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

SetInstance [F:YEST] With YEST_INSTANCE
Affzo [M:YEST]1-99
Affzo [M:YEST1]1-99

Return

#------------------------------------------------------------------------------------#
#Read record
#------------------------------------------------------------------------------------#
$LIENS

If (YEST_INSTANCE <> null) : FreeGroup YEST_INSTANCE : Endif
YEST_INSTANCE = NewInstance C_YEST AllocGroup null
Local Integer MY_STATUS
[L]MY_STATUS = fmet YEST_INSTANCE.AREAD([M:YEST]YESTID)
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YEST_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif
Read [F:YEST]YEST0=[M:YEST]YESTID
[M:YEST1] = [F:YEST]

nolign = 1
  For [F:YPRC] Where [F:YPRC]YESTID = [M:YEST]YESTID
    [M:YEST2] = [F:YPRC]
    nolign += 1
  Next
  [M:YEST2]NBLIG = nolign-1

Return

#------------------------------------------------------------------------------------#
#Modify record
#------------------------------------------------------------------------------------#
$MODIF
Local Integer MY_STATUS

SetInstance YEST_INSTANCE With [F:YEST]

[L]MY_STATUS = fmet YEST_INSTANCE.AUPDATE()
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YEST_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

Return

#------------------------------------------------------------------------------------#
#AFTER UPDATE
#------------------------------------------------------------------------------------#
$APRES_MOD

Gosub RELIT From GOBJSUB

Return

#------------------------------------------------------------------------------------#
#This action is called when a field of the primary key is changed
#------------------------------------------------------------------------------------#
$RAZDUP
Local Integer MY_STATUS

If (YEST_INSTANCE <> null) : FreeGroup YEST_INSTANCE : Endif
YEST_INSTANCE = NewInstance C_YEST AllocGroup null

[L]MY_STATUS = fmet YEST_INSTANCE.AINIT()
If ([L]MY_STATUS >= [V]CST_AERROR)
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YEST_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

Return

#------------------------------------------------------------------------------------#
#Begin delete record
#------------------------------------------------------------------------------------#
$AV_ANNULE
  Local Integer ANOWRITE
  ANOWRITE = 1
Return

#------------------------------------------------------------------------------------#
#Delete record
#------------------------------------------------------------------------------------#
$ANNULE

Local Integer MY_STATUS
[L]MY_STATUS = fmet YEST_INSTANCE.ADELETE()
If ([L]MY_STATUS >= [V]CST_AERROR)
  # Error management
  GMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_MAX_MESSAGE(YEST_INSTANCE)
  GOK = 0 : GERR = 1
  Return
Endif

Return

#------------------------------------------------------------------------------------#
#Close screen
#------------------------------------------------------------------------------------#
$FERME
#When you are leaving the transaction, you have to free the instance.
If (YEST_INSTANCE <> null) : FreeGroup YEST_INSTANCE : Endif
Kill YEST_INSTANCE

Return

#------------------------------------------------------------------------------------#
#Handle Classic Errors from Class
#------------------------------------------------------------------------------------#
Subprog RECOVERS_ERROR_IN_CLASSIC(YEST_INSTANCE)

  Variable Instance YEST_INSTANCE Using C_YEST

  Local Integer NI
  Local Char SMESSAGE(type(GMESSAGE)-10)
  Local Integer MY_STATUS
  Local Integer IMESSAGE

  IMESSAGE = func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(YEST_INSTANCE, SMESSAGE)
  If IMESSAGE = [V]CST_AWARNING Then
    GMESSAGE = SMESSAGE
    GERR = 2
  Elsif IMESSAGE = [V]CST_AERROR or IMESSAGE = [V]CST_AFATAL Then
    GMESSAGE = SMESSAGE
    GOK = 0
    GERR = 1
  Endif

  [L]MY_STATUS = [V]CST_AOK
End

#------------------------------------------------------------------------------------#
#After create record
#------------------------------------------------------------------------------------#
$APRES_CRE

Gosub RELIT From GOBJSUB

Return

