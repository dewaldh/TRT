#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management GAC3 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:01:53"
A_USER  = "ADMIN"
A_STAMP = "20180828000153"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG3"
  If [M]NBLIG3=0
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask GAC3 [GAC3]
Gosub HORODAT
Local Inpbox "GAC3" From GFONCTION At A_STAMP With A_WINDPREV Mask [GAC3] As [SIM_]
Grizo [GAC3]30
Grizo [GAC3]40
Grizo [GAC3]50
Grizo [GAC3]35
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [GAC3]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=48 : Y1(0)=1 : Y2(0)=15
X1(1)=1 : X2(1)=48 : Y1(1)=20 : Y2(1)=25
X1(2)=49 : X2(2)=74 : Y1(2)=1 : Y2(2)=25
X1(3)=1 : X2(3)=48 : Y1(3)=16 : Y2(3)=19
Return

$ON_MTC
Onevent BEFORE_INPUT Call AS_MTC(zc) From W1GAC3
Onevent INIT_AREA Call D_MTC(zc) From W1GAC3
Return

Subprog D_MTC(VALEUR)
Variable Integer VALEUR
If varinit([M]MTC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_MTC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MTC(VALEUR) From SUBGAC
If mkstat=2
 [M]MTC(INDIC) = VALEUR
 Affzo MTC(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_LOSGAIGNR
Onevent BEFORE_INPUT Call AS_LOSGAIGNR(zc) From W1GAC3
Onevent INIT_AREA Call D_LOSGAIGNR(zc) From W1GAC3
Return

Subprog D_LOSGAIGNR(VALEUR)
Variable Integer VALEUR
If varinit([M]LOSGAIGNR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOSGAIGNR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_LOSGAIGNR(VALEUR) From SUBGAC
If mkstat=2
 [M]LOSGAIGNR(INDIC) = VALEUR
 Affzo LOSGAIGNR(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CEN
Onevent BEFORE_INPUT Call AS_CEN(zc) From W1GAC3
Onevent INIT_AREA Call D_CEN(zc) From W1GAC3
Return

Subprog D_CEN(VALEUR)
Variable Integer VALEUR
If varinit([M]CEN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CEN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CEN(VALEUR) From SUBGAC
If mkstat=2
 [M]CEN(INDIC) = VALEUR
 Affzo CEN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DAS
Onevent BEFORE_INPUT Call AS_DAS(zc) From W1GAC3
Onevent CONTROL Call C_DAS(zc) From W1GAC3
Onevent INIT_AREA Call D_DAS(zc) From W1GAC3
Return

Subprog D_DAS(VALEUR)
Variable Integer VALEUR
If varinit([M]DAS,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DAS(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DAS(VALEUR) From SUBGAC
If mkstat=2
 [M]DAS(INDIC) = VALEUR
 Affzo DAS(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_DAS(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_DAS(VALEUR) From SUBGAC
If mkstat : GERR = 1 : GZONE = "DAS" : GZNUM = 4673 : Endif
Gosub _AFF
End

$ON_DASTYP
Onevent BEFORE_INPUT Call AS_DASTYP(zc) From W1GAC3
Onevent INIT_AREA Call D_DASTYP(zc) From W1GAC3
Return

Subprog D_DASTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DASTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DASTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DASTYP(VALEUR) From SUBGAC
If mkstat=2
 [M]DASTYP(INDIC) = VALEUR
 Affzo DASTYP(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FLG281
Onevent AFTER_CHANGE Gosub AMM_FLG281 From W1GAC3
Onevent INIT_AREA Call D_FLG281(zc) From W1GAC3
Onevent BEFORE_INPUT Call AS_FLG281(zc) From W1GAC3
Return

Subprog D_FLG281(VALEUR)
Variable Integer VALEUR
If varinit([M]FLG281,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLG281(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_FLG281
Call AM_FLG281(zc)
If !mkstat & GOBJET
 zoncou = "FLG281" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FLG281(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_FLG281(VALEUR) From SUBGAC
If mkstat : GERR = 1 : GZONE = "FLG281" : GZNUM = 49642 : Endif
Gosub _AFF
End

$ON_TYP281
Onevent INIT_AREA Call D_TYP281(zc) From W1GAC3
Onevent BEFORE_INPUT Call AS_TYP281(zc) From W1GAC3
Return

Subprog D_TYP281(VALEUR)
Variable Integer VALEUR
If varinit([M]TYP281,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_TYP281(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FRWCUR
Onevent BEFORE_INPUT Call AS_FRWCUR(zc) From W1GAC3
Onevent INIT_AREA Call D_FRWCUR(zc) From W1GAC3
Return

Subprog D_FRWCUR(VALEUR)
Variable Integer VALEUR
If varinit([M]FRWCUR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FRWCUR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FRWCUR(VALEUR) From SUBGAC
If mkstat=2
 [M]FRWCUR(INDIC) = VALEUR
 Affzo FRWCUR(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_UPDBLC
Onevent BEFORE_INPUT Call AS_UPDBLC(zc) From W1GAC3
Onevent INIT_AREA Call D_UPDBLC(zc) From W1GAC3
Return

Subprog D_UPDBLC(VALEUR)
Variable Integer VALEUR
If varinit([M]UPDBLC,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_UPDBLC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_UPDBLC(VALEUR) From SUBGAC
If mkstat=2
 [M]UPDBLC(INDIC) = VALEUR
 Affzo UPDBLC(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_RITTYP
Onevent INIT_AREA Call D_RITTYP(zc) From W1GAC3
Onevent BEFORE_INPUT Call AS_RITTYP(zc) From W1GAC3
Return

Subprog D_RITTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]RITTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_RITTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GACPVS
Onevent BEFORE_AREA Gosub AV_GACPVS From W1GAC3
Onevent CONTROL Call C_GACPVS(zc) From W1GAC3
Onevent BEFORE_INPUT Call AS_GACPVS(zc) From W1GAC3
Onevent AFTER_CHANGE Gosub AMM_GACPVS From W1GAC3
Return

$AV_GACPVS
## Action INIACCFMT
Call INIACCFMT(num$([M:GAC0]COA)) From SETGLBCOA
If GFMTACC<>""
 Chgfmt [M]GACPVS(indice) With "K:"+GFMTACC
Else
 Chgfmt [M]GACPVS(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_GACPVS(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey   2 Titled GBOUTS Call S_GACPVS(zc) From W1GAC3
Onkey 144 Titled GBOUTP Call P_GACPVS(zc) From W1GAC3
Onkey 146 Titled GBOUTA Call SA_GACPVS(zc) From W1GAC3
Gosub _AFF
End

Subprog C_GACPVS(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GACCHOICE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GACCHOICE"
 PARMSK(1) = num$([M:GAC0]COA)
 Call S_TAB_CHAR(VALEUR,PARMSK,"GACCHOICE","TRTSEL","") From GACTION
 GACTION = SAVACT
 If mkstat : GERR = 1 : GZONE = "GACPVS" : GZNUM = 17243 : Endif
Endif
If !GWEBSERV
 If !mkstat
  ## Action CONTCPT
  Call CONTCPT(VALEUR,num$([M:GAC0]COA)) From CPTSUB
  If mkstat : GERR = 1 : GZONE = "GACPVS" : GZNUM = 17243 : Endif
 Endif
Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("GAC","!$",VALEUR,num$([M:GAC0]COA),mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "GACPVS" : GZNUM = 17243 : Endif
Endif
Gosub _AFF
End

$AMM_GACPVS
Call AM_GACPVS(zc)
If !mkstat & GOBJET
 zoncou = "GACPVS" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_GACPVS(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZGACPVS)")>indice
 [M]GACPVS(indice) = VALEUR
 Affzo ZGACPVS(indice)
Endif
Gosub _AFF
End

Subprog S_GACPVS(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "GAC"
PARMSK(2) = "!$"
PARMSK(3) = num$([M:GAC0]COA)
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_GACPVS(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "GAC"
PARMSK(2) = num$([M:GAC0]COA)
PARMSK(3) = "$"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_GACPVS(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = num$([M:GAC0]COA)
Call VISU("GAC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZGACPVS
Onevent BEFORE_AREA Gosub AV_ZGACPVS From W1GAC3
Return

$AV_ZGACPVS
Call LECTEXTRA(zc,"GACCOUNT","DESTRA",num$([M:GAC0]COA),num$([M]GACPVS(indice))) From ATEXTRA
Gosub _AFF
Return

$ON_SNSDEF
Onevent INIT_AREA Call D_SNSDEF(zc) From W1GAC3
Onevent BEFORE_INPUT Call AS_SNSDEF(zc) From W1GAC3
Return

Subprog D_SNSDEF(VALEUR)
Variable Integer VALEUR
If varinit([M]SNSDEF,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_SNSDEF(VALEUR) From SUBGAC
Endif
Gosub _AFF
End

Subprog AS_SNSDEF(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SNSBLC
Onevent INIT_AREA Call D_SNSBLC(zc) From W1GAC3
Onevent BEFORE_INPUT Call AS_SNSBLC(zc) From W1GAC3
Return

Subprog D_SNSBLC(VALEUR)
Variable Integer VALEUR
If varinit([M]SNSBLC,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_SNSBLC(VALEUR) From SUBGAC
Endif
Gosub _AFF
End

Subprog AS_SNSBLC(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG3
Onevent BEFORE_INPUT Call AS_NBLIG3 From W1GAC3
Return

Subprog AS_NBLIG3
Local Decimal BASPAG
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_NBLIG3 From SUBGAC
Gosub _AFF
End

$ON_DESIG
Onevent BEFORE_AREA Gosub AV_DESIG From W1GAC3
Return

$AV_DESIG
zc = mess(nolign,277,1)
Gosub _AFF
Return

$ON_AUZBPR
Onevent BEFORE_INPUT Call AS_AUZBPR(zc) From W1GAC3
Onevent INIT_AREA Call D_AUZBPR(zc) From W1GAC3
Return

Subprog D_AUZBPR(VALEUR)
Variable Integer VALEUR
If varinit([M]AUZBPR,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AUZBPR(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AUZBPR(VALEUR) From SUBGAC
If mkstat=2
 [M]AUZBPR(INDIC) = VALEUR
 Affzo AUZBPR(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_FLGABL
Onevent BEFORE_INPUT Call AS_FLGABL(zc) From W1GAC3
Onevent AFTER_CHANGE Gosub AMM_FLGABL From W1GAC3
Onevent INIT_AREA Call D_FLGABL(zc) From W1GAC3
Return

Subprog D_FLGABL(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGABL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGABL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGABL(VALEUR) From SUBGAC
If mkstat=2
 [M]FLGABL(INDIC) = VALEUR
 Affzo FLGABL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$AMM_FLGABL
Call AM_FLGABL(zc)
If !mkstat & GOBJET
 zoncou = "FLGABL" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_FLGABL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_FLGABL(VALEUR) From SUBGAC
If mkstat : GERR = 1 : GZONE = "FLGABL" : GZNUM = 38314 : Endif
Gosub _AFF
End

$ON_FLGEXPCRE
Onevent BEFORE_INPUT Call AS_FLGEXPCRE(zc) From W1GAC3
Onevent INIT_AREA Call D_FLGEXPCRE(zc) From W1GAC3
Return

Subprog D_FLGEXPCRE(VALEUR)
Variable Integer VALEUR
If varinit([M]FLGEXPCRE,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_FLGEXPCRE(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_FLGEXPCRE(VALEUR) From SUBGAC
If mkstat=2
 [M]FLGEXPCRE(INDIC) = VALEUR
 Affzo FLGEXPCRE(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_GACACN
Onevent BEFORE_INPUT Call AS_GACACN(zc) From W1GAC3
Onevent INIT_AREA Call D_GACACN(zc) From W1GAC3
Onevent CONTROL Call C_GACACN(zc) From W1GAC3
Return

Subprog D_GACACN(VALEUR)
Variable Integer VALEUR
If varinit([M]GACACN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_GACACN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(2628) From COMBOS
## Action STD
Call AS_GACACN(VALEUR) From SUBGAC
If mkstat=2
 [M]GACACN(INDIC) = VALEUR
 Affzo GACACN(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,2628,1))))
Endif
If !mkstat
 Discombo 0 From GACACN(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From GACACN(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_GACACN(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$ON_LVATYP
Onevent BEFORE_INPUT Call AS_LVATYP(zc) From W1GAC3
Onevent INIT_AREA Call D_LVATYP(zc) From W1GAC3
Onevent CONTROL Call C_LVATYP(zc) From W1GAC3
Return

Subprog D_LVATYP(VALEUR)
Variable Integer VALEUR
If varinit([M]LVATYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LVATYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(3297) From COMBOS
## Action STD
Call AS_LVATYP(VALEUR) From SUBGAC
If mkstat=2
 [M]LVATYP(INDIC) = VALEUR
 Affzo LVATYP(INDIC) : mkstat = 2
Endif
If VALEUR<1 | GMENLOC(VALEUR)=1
 VALEUR = find(0,GMENLOC(1..len(mess(0,3297,1))))
Endif
If !mkstat
 Discombo 0 From LVATYP(INDIC)
 If sum(GMENLOC)<>0
  Gosub COMBOS From COMBOS
  For WI=1 to WN : Discombo WCOMBO(WI) From LVATYP(INDIC) : Next WI
 Endif
Endif
Gosub _AFF
End

Subprog C_LVATYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
Gosub _AFF
End

$CHG_STY
Return


