#<AdxTL>@(#)0.0.0.0 $Revision$Class Time summary
# Sage X3 supervisor
## CRUD-CLASSE ## PJMTIMEMP
# 2018-06-20 06:52:36 236


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMTIMEMP,ASTATUS)
Variable Instance PJMTIMEMP Using C_PJMTIMEMP
Variable Integer ASTATUS

If PJMTIMEMP = null : End : Endif

Gosub _AVARIABLES From WMC00PJMTIMEMP

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMTIMEMP

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMTIMEMP,ASTATUS)
Variable Instance PJMTIMEMP Using C_PJMTIMEMP
Variable Integer ASTATUS

If PJMTIMEMP = null : End : Endif

Gosub AVARIABLES From WMC00PJMTIMEMP
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMTIMEMP
Else
 Gosub ADELETE_PJMTIMEMP
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMTIMEMP,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMTIMEMP.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMTIMEMP.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMTIMEMP
Trbegin [F:PTE]
 Gosub ADELETE_PJMTIMEMP
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMTIMEMP
[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMTIMEMP,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMTIMEMP.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTIMEMP.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTIMEMP.AGETATTRIBUTE("PTEDESTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTIMEMP._MAJSQL_PJMTIMEMP_PTEDESTEX(PJMTIMEMP,PJMTIMEMP.PTEDESTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMTIMEMP.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMTIMEMP.ASTALIN,[V]CST_AUPD) & 
& fmet PJMTIMEMP.AGETATTRIBUTE("PTECOMTEX","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMTIMEMP._MAJSQL_PJMTIMEMP_PTECOMTEX(PJMTIMEMP,PJMTIMEMP.PTECOMTEX)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMTIMEMP._MAJSQL_PJMTIMEMP(PJMTIMEMP))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMTIMEMP.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMTIMEMP.snapshotEnabled=1
 [L]A_RETIK = PJMTIMEMP.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMTIMEMP.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



