#<AdxTL>@(#)0.0.0.0 $Revision$Class Definition of misc tables
# Supervisor
## CRUD-CLASSE ## ATABTAB
# 2018-08-27 13:03:21 479


############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(ATABTAB,ASTATUS)
Variable Instance ATABTAB Using R_ATABTAB
Variable Integer ASTATUS

If ATABTAB = null : End : Endif

Gosub AVARIABLES From WMR00ATABTAB
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

If fmet ATABTAB.ACTX.AGETAFCRIGHT(ATABTAB,"GESADI",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END : Endif
If fmet ATABTAB.ACTX.AGETAFCRIGHTD(ATABTAB,"GESADI",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto ADELETE_END
Endif
If fmet ATABTAB.ACTX.AGETACSRIGHTM(ATABTAB,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto ADELETE_END
  Endif
  
  Gosub AREPCONTROL_ADELETE
  If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif
  
If !adxlog
 Gosub ADELETE_TR_ATABTAB
Else
 Gosub ADELETE_ATABTAB
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_END : Return : Endif

$ADELETE_END
End

#-----------------------------------------------------#
$AREPCONTROL_ADELETE
ATABTAB.ASTALIN = [V]CST_ADEL
ATABTAB.ADI.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(ATABTAB.ADI,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If ATABTAB.ADI.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ATABTAB.ADI.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ATABTAB.ADI.ACOLALP)
 If ATABTAB.ADI.ACOLALP([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI.ACOLALP([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ATABTAB.ADI.ACOLNUM)
 If ATABTAB.ADI.ACOLNUM([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI.ACOLNUM([L]A_I).ACTION("ADELETE_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

For [L]A_I=1 To maxtab(ATABTAB.ADI.ACOLALP)
 If ATABTAB.ADI.ACOLALP([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI.ACOLALP([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For [L]A_I=1 To maxtab(ATABTAB.ADI.ACOLNUM)
 If ATABTAB.ADI.ACOLNUM([L]A_I)<>null
  [L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI.ACOLNUM([L]A_I).ACTION("ADELETE_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_ATABTAB
Trbegin [F:ADV]
 Gosub ADELETE_ATABTAB
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_ADELETE_AFTER
Return

#-----------------------------------------------------#
$ADELETE_ATABTAB
[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ADI._ADELETE)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ATABTAB.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If ATABTAB.snapshotEnabled=1
 [L]A_RETIK = ATABTAB.revertUpdTick
Endif
[L]ASTATUS = max(fmet ATABTAB.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



