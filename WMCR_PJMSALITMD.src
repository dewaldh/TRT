#<AdxTL>@(#)0.0.0.0 $Revision$Class Saleable product list
# Supervisor
## CRUD-CLASSE ## PJMSALITMD
# 2018-08-27 12:40:14 454


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File PJMSALITMD [PSPLD_]

If !SILENCE : Call TRACE("2 --> Local Instance C_PJMSALITMD") From ASYRCOM : Endif
Local Instance PJMSALITMD Using C_PJMSALITMD

If !SILENCE : Call TRACE("3 --> New Instance C_PJMSALITMD") From ASYRCOM : Endif
PJMSALITMD = NewInstance C_PJMSALITMD AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [PSPLD_]PSPLD0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of PJMSALITMD") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.AREAD([PSPLD_]OPPNUM,[PSPLD_]PBUCOD,[PSPLD_]TASCOD,[PSPLD_]SEQNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("PJMSALITMD.OPPNUM ="-num$(PJMSALITMD.OPPNUM)) From ASYRCOM
 Call TRACE("PJMSALITMD.PBUCOD ="-num$(PJMSALITMD.PBUCOD)) From ASYRCOM
 Call TRACE("PJMSALITMD.TASCOD ="-num$(PJMSALITMD.TASCOD)) From ASYRCOM
 Call TRACE("PJMSALITMD.SEQNUM ="-num$(PJMSALITMD.SEQNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(PJMSALITMD.AKEYS)
  Call TRACE("-"-num$(I)-":"-PJMSALITMD.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [PSPLD_]
FreeGroup PJMSALITMD
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(PJMSALITMD,ACLE,ASTATUS,_ETAG)
Variable Instance PJMSALITMD Using C_PJMSALITMD
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Local Char _TASCOD(15)
Local Integer _SEQNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBUCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_TASCOD = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_SEQNUM = val([L]CLE(4)) : Endif
Raz [L]_ETAG
Local File PJMSALITMD [PSPLD]
Default File [F:PSPLD]
Read [F:PSPLD]PSPLD0 = [L]_OPPNUM;[L]_PBUCOD;[L]_TASCOD;[L]_SEQNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:PSPLD]UPDTICK)>0
 [L]_ETAG = num$([F:PSPLD]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(PJMSALITMD,ACLE,ASTATUS)
Variable Instance PJMSALITMD Using C_PJMSALITMD
Value Char ACLE
Variable Integer ASTATUS
Local Char _OPPNUM(40)
Local Char _PBUCOD(15)
Local Char _TASCOD(15)
Local Integer _SEQNUM
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_OPPNUM = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_PBUCOD = num$([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_TASCOD = num$([L]CLE(3)) : Endif
If [L]CLE(4)<>"" : [L]_SEQNUM = val([L]CLE(4)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.AREAD([L]_OPPNUM,[L]_PBUCOD,[L]_TASCOD,[L]_SEQNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(PJMSALITMD,_OPPNUM,_PBUCOD,_TASCOD,_SEQNUM,ASTATUS)
Variable Instance PJMSALITMD Using C_PJMSALITMD
Value Char _OPPNUM
Value Char _PBUCOD
Value Char _TASCOD
Value Integer _SEQNUM
Variable Integer ASTATUS

If PJMSALITMD = null : End : Endif

Gosub AVARIABLES From WMC00PJMSALITMD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If PJMSALITMD.APARENT=null
 [L]A_I = PJMSALITMD.freeSnapshot
 PJMSALITMD.snapshotEnabled = 0
 PJMSALITMD.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & PJMSALITMD.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If PJMSALITMD.APARENT=null
 PJMSALITMD.snapshotEnabled = 1
 PJMSALITMD.setAccessorEnabled = 1
Endif
LogicClose File [PSPLD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD._ACTION_PARAM("AREAD_BEFORE",[L]_OPPNUM,[L]_PBUCOD,[L]_TASCOD,[L]_SEQNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:PSPLD]
Read [F:PSPLD]PSPLD0 = [L]_OPPNUM;[L]_PBUCOD;[L]_TASCOD;[L]_SEQNUM
If fstat
[L]A_ERROR = [L]_OPPNUM+"~"+[L]_PBUCOD+"~"+[L]_TASCOD+"~"+num$([L]_SEQNUM)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(PJMSALITMD,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:PSPLD]AUUID)>0 & [F:PSPLD]AUUID=NullUuid
 [F:PSPLD]AUUID = getUuid
Endif
SetInstance PJMSALITMD With [F:PSPLD]
PJMSALITMD.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet PJMSALITMD.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



