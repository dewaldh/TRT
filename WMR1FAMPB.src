#<AdxTL>@(#)0.0.0.0 $Revision$Class Skill group
# Supervisor
## ACLA-CLASSE ## FAMPB
# 2018-08-27 13:15:06 633

 
####################################################################
# Labels of the main class and methods 
####################################################################
 
####################################################################
# 1 : PBLCLA Code ( Field DCO 60)
####################################################################
 
$SET_PBLCLA
If [L]_AOLDVAL<>this.PBLCLA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PBLCLA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PBLCLA
 Gosub PROPAGATE_PBLCLA
Endif
Return

$INIT_PBLCLA
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PBLCLA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PBLCLA
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PBLCLA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PBLCLA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PBLCLA                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PBLCLA
[L]CURPRO = "PBLCLA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PBLCLA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PBLCLA
[L]CURPRO = "PBLCLA"
If vireblc(this.PBLCLA,2)<>vireblc(format$("K:60X",this.PBLCLA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PBLCLA
[L]CURPRO = "PBLCLA"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PBLCLA
[L]CURPRO = "PBLCLA"
Return

$PROPAGATE_PBLCLA
this.isReadonly = 0
[L]CURPRO = "PBLCLA"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PBLCLA
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PBLCLA"
$_LNKPRO_PBLCLA
Return


####################################################################
# 2 : PREPAE Preparation ( Field PBL 20)
####################################################################
 
$SET_PREPAE
If [L]_AOLDVAL<>this.PREPAE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PREPAE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PREPAE
 Gosub PROPAGATE_PREPAE
Endif
Return

$INIT_PREPAE
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PREPAE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PREPAE
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PREPAE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PREPAE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PREPAE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PREPAE
[L]CURPRO = "PREPAE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PREPAE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PREPAE
[L]CURPRO = "PREPAE"
If vireblc(this.PREPAE,2)<>vireblc(format$("K:20X",this.PREPAE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PREPAE
[L]CURPRO = "PREPAE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PREPAE
[L]CURPRO = "PREPAE"
Return

$PROPAGATE_PREPAE
this.isReadonly = 0
[L]CURPRO = "PREPAE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PREPAE
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PREPAE"
$_LNKPRO_PREPAE
Return


####################################################################
# 3 : ALLREP Include parent skill group employees ( Field Local menu number 1)
####################################################################
 
$SET_ALLREP
If [L]_AOLDVAL<>this.ALLREP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLREP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLREP
 Gosub PROPAGATE_ALLREP
Endif
Return

$INIT_ALLREP
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "ALLREP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALLREP=0 and fmet this.AGETATTRIBUTE("ALLREP","$isMandatory")="true"
 this.ALLREP = 1
Endif
Return
 
$CONTROL_ALLREP
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "ALLREP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLREP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLREP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLREP
[L]CURPRO = "ALLREP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLREP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLREP
[L]CURPRO = "ALLREP"
If this.ALLREP<0 or this.ALLREP>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ALLREP)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ALLREP
[L]CURPRO = "ALLREP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLREP
[L]CURPRO = "ALLREP"
Return

$PROPAGATE_ALLREP
this.isReadonly = 0
[L]CURPRO = "ALLREP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLREP
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "ALLREP"
$_LNKPRO_ALLREP
Return


####################################################################
# 4 : ALLQUE Include parent skill group queues ( Field Local menu number 1)
####################################################################
 
$SET_ALLQUE
If [L]_AOLDVAL<>this.ALLQUE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLQUE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLQUE
 Gosub PROPAGATE_ALLQUE
Endif
Return

$INIT_ALLQUE
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "ALLQUE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALLQUE=0 and fmet this.AGETATTRIBUTE("ALLQUE","$isMandatory")="true"
 this.ALLQUE = 1
Endif
Return
 
$CONTROL_ALLQUE
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "ALLQUE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLQUE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLQUE                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLQUE
[L]CURPRO = "ALLQUE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLQUE=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLQUE
[L]CURPRO = "ALLQUE"
If this.ALLQUE<0 or this.ALLQUE>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ALLQUE)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ALLQUE
[L]CURPRO = "ALLQUE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLQUE
[L]CURPRO = "ALLQUE"
Return

$PROPAGATE_ALLQUE
this.isReadonly = 0
[L]CURPRO = "ALLQUE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLQUE
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "ALLQUE"
$_LNKPRO_ALLQUE
Return


####################################################################
# 5 : PBLPITDEB Standard debit ( Field L 8)
####################################################################
 
$SET_PBLPITDEB
If [L]_AOLDVAL<>this.PBLPITDEB
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PBLPITDEB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PBLPITDEB
 Gosub PROPAGATE_PBLPITDEB
Endif
Return

$INIT_PBLPITDEB
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PBLPITDEB"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PBLPITDEB
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PBLPITDEB"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PBLPITDEB             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PBLPITDEB             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PBLPITDEB
[L]CURPRO = "PBLPITDEB"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PBLPITDEB=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PBLPITDEB
[L]CURPRO = "PBLPITDEB"
Return

$_AOTHERS_PBLPITDEB
[L]CURPRO = "PBLPITDEB"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PBLPITDEB
[L]CURPRO = "PBLPITDEB"
Return

$PROPAGATE_PBLPITDEB
this.isReadonly = 0
[L]CURPRO = "PBLPITDEB"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PBLPITDEB
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PBLPITDEB"
$_LNKPRO_PBLPITDEB
Return


####################################################################
# 6 : NULPIO Taking into account null value ( Field Local menu number 1)
####################################################################
 
$SET_NULPIO
If [L]_AOLDVAL<>this.NULPIO
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NULPIO
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NULPIO
 Gosub PROPAGATE_NULPIO
Endif
Return

$INIT_NULPIO
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "NULPIO"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.NULPIO=0 and fmet this.AGETATTRIBUTE("NULPIO","$isMandatory")="true"
 this.NULPIO = 1
Endif
Return
 
$CONTROL_NULPIO
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "NULPIO"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NULPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NULPIO                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NULPIO
[L]CURPRO = "NULPIO"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.NULPIO=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NULPIO
[L]CURPRO = "NULPIO"
If this.NULPIO<0 or this.NULPIO>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.NULPIO)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_NULPIO
[L]CURPRO = "NULPIO"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NULPIO
[L]CURPRO = "NULPIO"
Return

$PROPAGATE_NULPIO
this.isReadonly = 0
[L]CURPRO = "NULPIO"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NULPIO
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "NULPIO"
$_LNKPRO_NULPIO
Return


####################################################################
# 7 : PREBPC Preparation ( Field BPR 15)
####################################################################
 
$SET_PREBPC
If [L]_AOLDVAL<>this.PREBPC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PREBPC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PREBPC
 Gosub PROPAGATE_PREBPC
Endif
Return

$INIT_PREBPC
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PREBPC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PREBPC
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PREBPC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PREBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PREBPC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PREBPC
[L]CURPRO = "PREBPC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PREBPC,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PREBPC
[L]CURPRO = "PREBPC"
If vireblc(this.PREBPC,2)<>vireblc(format$("K:15c",this.PREBPC),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PREBPC
[L]CURPRO = "PREBPC"
If vireblc(this.PREBPC,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBPR.ACTRLREF(this,"PREBPC",this.PREBPC,this.PREBPC,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PREBPC<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PREBPC
[L]CURPRO = "PREBPC"
Return

$PROPAGATE_PREBPC
this.isReadonly = 0
[L]CURPRO = "PREBPC"
Gosub _LNKPRO_PREBPC
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PREBPC
Gosub DECLARE_VAR From WMR0FAMPB
[L]CURPRO = "PREBPC"
$_LNKPRO_PREBPC
If vireblc(this.PREBPC,2)<>""
 # Link BPARTNER
 Local File BPARTNER [WBPR]
 Read [F:WBPR]BPR0 = this.PREBPC
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("PREBPC","$title",[F:WBPR]BPRSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("PREBPC","$description",[F:WBPR]BPRNAM)
 Endif
 LogicClose File [WBPR]
Endif
Return




