#<AdxTL>@(#)%I%
# Supervisor
# Inquiry BAF

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:50:06"
A_USER  = "ADMIN"
A_STAMP = "20180828005006"
Return

$DEFAUT
Return

$OUVFIC
Return

$NOMFIC
Local Char    TIT(GLONDES) , TITT(GLONDES)
Local Char    PROGSTD(GLONADC) , PROGSPE(GLONADC)
Local Char    ABMSK(GLONABR)(16) , NOMMSK(GLONAMK)(16) , CABMSK(GLONABR) , CNOMMSK(GLONAMK)
Local Char    BOITE(GLONFEN) , CBOITE(GLONFEN)
Local Char    NOMFIC(GLONATB) , ABFIC(GLONABR) , OBJDERLU(GLONAOB)
Local Char    CODMSKDEF(GLONAMK) , CMEMO(GLONAMM)
Local Libelle MAGNETO
Local Char    ZSITE(GLONAVA), ZACC(GLONAVA)
Call TEXTE(42012,TITT) From OBJDIV
TIT        = mess(15,126,1)
If dim(CNSCOD)>0 : TIT -= CNSCOD : Endif
PROGSTD    = "CNSBAFSTD"
PROGSPE    = "CNSBAFSPE"
CBOITE     = "DCNSBAF"
BOITE      = "FCNSBAF"
NOMMSK(0)  = "CONSBAF1"
ABMSK(0)   = "BAF1"
NOMMSK(1)  = "CONSBAF2"
ABMSK(1)   = "BAF2"
CMEMO      = "baf"
CNOMMSK    = "CRITBAF"
CABMSK     = "CBAF"
MAGNETO    = 1
Return

$SETCLE
Local Char    CLE(10), CLECMP(10)(0..0), CLEMSK(10)(0..0)
Local Integer NBCMP
Local Char    FILTRE(250)
CLE = ""
NBCMP = 0
CLECMP = "" : CLEMSK = ""
Return

$OUVRE
If clalev([F:FCY])=0 : Local File FACILITY     [FCY] : Endif
If clalev([F:CPY])=0 : Local File COMPANY      [CPY] : Endif
If clalev([F:FGR])=0 : Local File FACGROUP     [FGR] : Endif
If clalev([F:FIY])=0 : Local File FISCALYEAR   [FIY] : Endif
If clalev([F:PER])=0 : Local File PERIOD       [PER] : Endif
If clalev([F:BAL])=0 : Local File BALANCE      [BAL] : Endif
If clalev([F:GAC])=0 : Local File GACCOUNT     [GAC] : Endif
If clalev([F:BPR])=0 : Local File BPARTNER     [BPR] : Endif
If clalev([F:COA])=0 : Local File GCOA         [COA] : Endif
If clalev([F:CLS])=0 : Local File GACCCLS      [CLS] : Endif
Return

$OUVRE_MSK
Case MA
 When -1 : Local Mask =CNOMMSK   [CBAF]
 When  0 : Local Mask =NOMMSK(0) [BAF1]
 When  1 : Local Mask =NOMMSK(1) [BAF2]
Endcase
Return

$GRISE_MSK
Case MA
 When -1 : Grizo [CBAF]
 When  0 : Grizo [BAF1]
 When  1 : Grizo [BAF2]
Endcase
Return

$GRISE_CLE
Return

$GRISE_CRIT
If dim([M:CBAF]CPY)>0
 Grizo [CBAF]CPY
Endif
If dim([M:CBAF]FCY)>0
 Grizo [CBAF]FCY
Endif
If dim([M:CBAF]LEDTYP)>0
 Grizo [CBAF]LEDTYP
Endif
If dim([M:CBAF]COA)>0
 Grizo [CBAF]COA
Endif
If dim([M:CBAF]DATDEB)>0
 Grizo [CBAF]DATDEB
Endif
If dim([M:CBAF]DATFIN)>0
 Grizo [CBAF]DATFIN
Endif
If dim([M:CBAF]CUR)>0
 Grizo [CBAF]CUR
Endif
Return

$FERME_MSK
Case MA
 When -1 : If clalev([M:CBAF])>0 : Close Local Mask [CBAF] : Endif
 When  0 : If clalev([M:BAF1])>0 : Close Local Mask [BAF1] : Endif
 When  1 : If clalev([M:BAF2])>0 : Close Local Mask [BAF2] : Endif
Endcase
Return

$SETMASK
Case MA
 When -1 : Default Mask [CBAF]
 When  0 : Default Mask [BAF1]
 When  1 : Default Mask [BAF2]
Endcase
Return

$RAZMASK
Case MA
 When -1 : Raz [M:CBAF]
 When  0 : Raz [M:BAF1]
 When  1 : Raz [M:BAF2]
Endcase
Return

$CRITENT
If dim([M:CBAF]CPY)>0 & dim([M:BAF1]CPY)>0
 [M:CBAF]CPY = [M:BAF1]CPY
Endif
If dim([M:CBAF]FCY)>0 & dim([M:BAF1]FCY)>0
 [M:CBAF]FCY = [M:BAF1]FCY
Endif
If dim([M:CBAF]LEDTYP)>0 & dim([M:BAF1]LEDTYP)>0
 [M:CBAF]LEDTYP = [M:BAF1]LEDTYP
Endif
If dim([M:CBAF]COA)>0 & dim([M:BAF1]COA)>0
 [M:CBAF]COA = [M:BAF1]COA
Endif
If dim([M:CBAF]DATDEB)>0 & dim([M:BAF1]DATDEB)>0
 [M:CBAF]DATDEB = [M:BAF1]DATDEB
Endif
If dim([M:CBAF]DATFIN)>0 & dim([M:BAF1]DATFIN)>0
 [M:CBAF]DATFIN = [M:BAF1]DATFIN
Endif
If dim([M:CBAF]CUR)>0 & dim([M:BAF1]CNVCUR)>0
 [M:CBAF]CUR = [M:BAF1]CNVCUR
Endif
Return

$ENTCRIT
If dim([M:CBAF]CPY)>0 & dim([M:BAF1]CPY)>0
[M:BAF1]CPY = [M:CBAF]CPY
Endif
If dim([M:CBAF]FCY)>0 & dim([M:BAF1]FCY)>0
[M:BAF1]FCY = [M:CBAF]FCY
Endif
If dim([M:CBAF]LEDTYP)>0 & dim([M:BAF1]LEDTYP)>0
[M:BAF1]LEDTYP = [M:CBAF]LEDTYP
Endif
If dim([M:CBAF]COA)>0 & dim([M:BAF1]COA)>0
[M:BAF1]COA = [M:CBAF]COA
Endif
If dim([M:CBAF]DATDEB)>0 & dim([M:BAF1]DATDEB)>0
[M:BAF1]DATDEB = [M:CBAF]DATDEB
Endif
If dim([M:CBAF]DATFIN)>0 & dim([M:BAF1]DATFIN)>0
[M:BAF1]DATFIN = [M:CBAF]DATFIN
Endif
If dim([M:CBAF]CUR)>0 & dim([M:BAF1]CNVCUR)>0
[M:BAF1]CNVCUR = [M:CBAF]CUR
Endif
Return

$CRITAFF
Local Integer NBCA
Local Char    CRITAFF(10)(1..1) , CRITAFF2(10)(1..1)
CRITAFF(1) = "CUR" : CRITAFF2(1) = "CNVCUR"
NBCA = 1
Return

$STYLEPLAG
Return

Subprog GETACT(NOL,TITBOUT,VALBOUT)
Value Integer NOL
Variable Char TITBOUT()(1..) , VALBOUT()(1..)
Local Integer ONOL , NBBOUT
ONOL   = nolign
nolign = NOL
indice = max(0,nolign-1)
Call AS_NBLIG From ="W1CONSBAF2"
NBBOUT = 0
If GBOUT1<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT1
 VALBOUT(NBBOUT) = "BAF"
 VALBOUT(NBBOUT) += "~B1"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans([M:BAF1]CPY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BAF1]FCY,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(num$([M:BAF1]LEDTYP),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(string$([M:BAF1]SAC="",[M:BAF2]ACC(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(string$([M:BAF1]SAC<>"",[M:BAF2]ACC(nolign-1)),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans(string$([M:BAF1]SAC<>"",[M:BAF1]SAC),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BAF1]DATDEB,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BAF1]DATFIN,"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans([M:BAF2]CUR(nolign-1),"~","¨")
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
If GBOUT2<>""
 NBBOUT += 1
 TITBOUT(NBBOUT) = GBOUT2
 VALBOUT(NBBOUT) = "BAF"
 VALBOUT(NBBOUT) += "~B2"
 VALBOUT(NBBOUT) += "~"+num$(nolign)
 Onerrgo RIEN
 VALBOUT(NBBOUT) += "~"+ctrans("","~","¨")
 Onerrgo
Endif
nolign = ONOL
indice = max(0,nolign-1)
End

Subprog ACTRUN(INFO)
Value Char INFO
Local Char    BOUT(3)
Local Integer ONOL
ONOL    = nolign
BOUT    = func AFNC.PART(INFO,1)
nolign  = val(func AFNC.PART(INFO,2))
indice  = max(0,nolign-1)
Gosub NOMFIC
For MA=0 to dim(NOMMSK)-1
 Gosub OUVRE_MSK
Next MA
For MA=0 to dim(NOMMSK)-1
 Gosub SETMASK
Next MA
Case BOUT
 When "B1"
  Onerrgo RIEN
  Assign "[M:BAF1]CPY" With ctrans(func AFNC.PART(INFO,3),"¨","~")
  Assign "[M:BAF1]FCY" With ctrans(func AFNC.PART(INFO,4),"¨","~")
  Assign "[M:BAF1]LEDTYP" With val(ctrans(func AFNC.PART(INFO,5),"¨","~"))
  Assign "[M:BAF1]DATDEB" With ctrans(func AFNC.PART(INFO,9),"¨","~")
  Assign "[M:BAF1]DATFIN" With ctrans(func AFNC.PART(INFO,10),"¨","~")
  Assign "[M:BAF2]CUR(nolign-1)" With ctrans(func AFNC.PART(INFO,11),"¨","~")
  Onerrgo
  Call B1_NBLIG From ="W1CONSBAF2"
 When "B2"
  Onerrgo RIEN
  Onerrgo
  Call B2_NBLIG From ="W1CONSBAF2"
Endcase
nolign = ONOL
indice = max(0,nolign-1)
End

$RIEN
Resume


