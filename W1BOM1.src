#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management BOM1 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [27/08/2018]
A_HEURE = "23:52:27"
A_USER  = "ADMIN"
A_STAMP = "20180827235227"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask BOM1 [BOM1]
Gosub HORODAT
Local Inpbox "BOM1" From GFONCTION At A_STAMP With A_WINDPREV Mask [BOM1] As [SIM_]
Grizo [BOM1]20
Grizo [BOM1]0
Grizo [BOM1]25
Grizo [BOM1]30
Grizo [BOM1]0
Grizo [BOM1]40
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [BOM1]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=113 : Y1(0)=1 : Y2(0)=5
X1(1)=1 : X2(1)=53 : Y1(1)=6 : Y2(1)=5
X1(2)=1 : X2(2)=53 : Y1(2)=6 : Y2(2)=12
X1(3)=54 : X2(3)=113 : Y1(3)=6 : Y2(3)=12
X1(4)=1 : X2(4)=53 : Y1(4)=13 : Y2(4)=12
X1(5)=1 : X2(5)=53 : Y1(5)=13 : Y2(5)=28
Return

$ON_BOMSEQ
Onevent INIT_AREA Call D_BOMSEQ(zc) From W1BOM1
Onevent BEFORE_INPUT Call AS_BOMSEQ(zc) From W1BOM1
Onevent CONTROL Call C_BOMSEQ(zc) From W1BOM1
Return

Subprog D_BOMSEQ(VALEUR)
Variable Decimal VALEUR
If varinit([M]BOMSEQ,indice)=0
 ## Action STD
 Call D_BOMSEQ(VALEUR) From SUBBOD
Endif
Gosub _AFF
End

Subprog AS_BOMSEQ(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMSEQ(VALEUR) From SUBBOD
If mkstat=2
 [M]BOMSEQ(INDIC) = VALEUR
 Affzo BOMSEQ(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BOMSEQ(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BOMSEQ" : GZNUM = 1251 : Endif
Gosub _AFF
End

$ON_CPNTYP
Onevent INIT_AREA Call D_CPNTYP(zc) From W1BOM1
Onevent BEFORE_INPUT Call AS_CPNTYP(zc) From W1BOM1
Onevent CONTROL Call C_CPNTYP(zc) From W1BOM1
Onevent AFTER_CHANGE Gosub AMM_CPNTYP From W1BOM1
Return

Subprog D_CPNTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]CPNTYP,indice)=0
 VALEUR = 1
 ## Action STD
 Call D_CPNTYP(VALEUR) From SUBBOD
Endif
Gosub _AFF
End

Subprog AS_CPNTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call INICOMBO(438) From COMBOS
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]CPNTYP(INDIC) = VALEUR
 Affzo CPNTYP(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CPNTYP(VALEUR) From SUBBOD
 If mkstat=2
  [M]CPNTYP(INDIC) = VALEUR
  Affzo CPNTYP(INDIC) : mkstat = 2
 Endif
 If VALEUR<1 | GMENLOC(VALEUR)=1
  VALEUR = find(0,GMENLOC(1..len(mess(0,438,1))))
 Endif
 If !mkstat
  Discombo 0 From CPNTYP(INDIC)
  If sum(GMENLOC)<>0
   Gosub COMBOS From COMBOS
   For WI=1 to WN : Discombo WCOMBO(WI) From CPNTYP(INDIC) : Next WI
  Endif
 Endif
Endif
Gosub _AFF
End

Subprog C_CPNTYP(VALEUR)
Variable Integer VALEUR
If VALEUR>0 & VALEUR<dim(GMENLOC) & GMENLOC(VALEUR)<>0
 mkstat = 1 : End
Endif
## Action STD
Call C_CPNTYP(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "CPNTYP" : GZNUM = 5468 : Endif
Gosub _AFF
End

$AMM_CPNTYP
Call AM_CPNTYP(zc)
If !mkstat & GOBJET
 zoncou = "CPNTYP" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPNTYP(VALEUR)
Variable Integer VALEUR
## Action STD
Call AM_CPNTYP(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "CPNTYP" : GZNUM = 5468 : Endif
Gosub _AFF
End

$ON_CPNITMREF
Onevent CONTROL Call C_CPNITMREF(zc) From W1BOM1
Onevent BEFORE_INPUT Call AS_CPNITMREF(zc) From W1BOM1
Onevent AFTER_CHANGE Gosub AMM_CPNITMREF From W1BOM1
Return

Subprog IB_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action IBPRDINF
 Call IBPRDINF(VALEUR) From PRDINFLIB
Endif
Gosub _AFF
End

Subprog AS_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(2061,GBOUT1) From OBJDIV
Call TEXTE(12837,GBOUT13) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Call IB_CPNITMREF(VALEUR)
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]CPNITMREF(INDIC) = VALEUR
 Affzo CPNITMREF(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CPNITMREF(VALEUR) From SUBBOD
 If mkstat=2
  [M]CPNITMREF(INDIC) = VALEUR
  Affzo CPNITMREF(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_CPNITMREF(zc) From W1BOM1
 Onkey 170 Titled GBOUT13 Call B13_CPNITMREF(zc) From W1BOM1
 Onkey   2 Titled GBOUTS Call S_CPNITMREF(zc) From W1BOM1
 Onkey 144 Titled GBOUTP Call P_CPNITMREF(zc) From W1BOM1
 Onkey 146 Titled GBOUTA Call SA_CPNITMREF(zc) From W1BOM1
Endif
Gosub _AFF
End

Subprog C_CPNITMREF(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
If !GWEBSERV
 If !mkstat
  ## Action ITMCHOICE
  Local Char    PARMSK(250)(1..20) , SAVACT(20)
  SAVACT = GACTION : GACTION = "ITMCHOICE"
  Call S_TAB_CHAR(VALEUR,PARMSK,"ITMCHOICE","TRTSEL","") From GACTION
  GACTION = SAVACT
  If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
 Endif
Endif
If !mkstat
 ## Action VXADCUPC
 Call ADCCTRUPC(VALEUR) From VXADCUPC
 If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("ITM","",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
  If !mkstat
   ## Action STD
   Call C_CPNITMREF(VALEUR) From SUBBOD
   If mkstat : GERR = 1 : GZONE = "CPNITMREF" : GZNUM = 4600 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPNITMREF
Call AM_CPNITMREF(zc)
If !mkstat & GOBJET
 zoncou = "CPNITMREF" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCPNITMREF)")>indice
 [M]CPNITMREF(indice) = VALEUR
 Affzo ZCPNITMREF(indice)
Endif
Gosub _AFF
End

Subprog S_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "ITM"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Call OBJET("ITM",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog B13_CPNITMREF(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action PRDINFA
 Call PRDINF(VALEUR) From PRDINFLIB
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog SA_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "ITM"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPNITMREF(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("ITM",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPNITMREF
Onevent BEFORE_AREA Gosub AV_ZCPNITMREF From W1BOM1
Return

$AV_ZCPNITMREF
Call LECTEXTRA(zc,"ITMMASTER","DES1AXX",num$([M]CPNITMREF(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_STU
Return

$ON_ZSTU
Onevent BEFORE_AREA Gosub AV_ZSTU From W1BOM1
Return

$AV_ZSTU
Call LECTEXTRA(zc,"TABUNIT","DES",num$([M]STU(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_ECCVALMAJ
Onevent BEFORE_INPUT Call AS_ECCVALMAJ(zc) From W1BOM1
Onevent CONTROL Call C_ECCVALMAJ(zc) From W1BOM1
Onevent AFTER_CHANGE Gosub AMM_ECCVALMAJ From W1BOM1
Return

Subprog AS_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]ECCVALMAJ(INDIC) = VALEUR
 Affzo ECCVALMAJ(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_ECCVALMAJ(VALEUR) From SUBBOD
 If mkstat=2
  [M]ECCVALMAJ(INDIC) = VALEUR
  Affzo ECCVALMAJ(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_ECCVALMAJ(zc) From W1BOM1
Endif
Gosub _AFF
End

Subprog C_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
If !mkstat
 ## Action STD
 Call C_ECCVALMAJ(VALEUR) From SUBBOD
 If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Endif
Gosub _AFF
End

$AMM_ECCVALMAJ
Call AM_ECCVALMAJ(zc)
If !mkstat & GOBJET
 zoncou = "ECCVALMAJ" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_ECCVALMAJ(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "ECCVALMAJ" : GZNUM = 44205 : Endif
Gosub _AFF
End

Subprog S_ECCVALMAJ(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "ECCVALMAJ"
 PARMSK(2) = "ECCBOM"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_ECCVALMIN
Onevent BEFORE_INPUT Call AS_ECCVALMIN(zc) From W1BOM1
Onevent CONTROL Call C_ECCVALMIN(zc) From W1BOM1
Return

Subprog AS_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]ECCVALMIN(INDIC) = VALEUR
 Affzo ECCVALMIN(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_ECCVALMIN(VALEUR) From SUBBOD
 If mkstat=2
  [M]ECCVALMIN(INDIC) = VALEUR
  Affzo ECCVALMIN(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_ECCVALMIN(zc) From W1BOM1
Endif
Gosub _AFF
End

Subprog C_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
If !mkstat
 ## Action STD
 Call C_ECCVALMIN(VALEUR) From SUBBOD
 If mkstat : GERR = 1 : GZONE = "ECCVALMIN" : GZNUM = 44207 : Endif
Endif
Gosub _AFF
End

Subprog S_ECCVALMIN(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "ECCVALMIN"
 PARMSK(2) = "ECCBOM"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_LIKQTY
Onevent BEFORE_INPUT Call AS_LIKQTY(zc) From W1BOM1
Onevent CONTROL Call C_LIKQTY(zc) From W1BOM1
Onevent AFTER_CHANGE Gosub AMM_LIKQTY From W1BOM1
Return

Subprog AS_LIKQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]LIKQTY(INDIC) = VALEUR
 Affzo LIKQTY(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_LIKQTY(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$AMM_LIKQTY
Call AM_LIKQTY(zc)
If !mkstat & GOBJET
 zoncou = "LIKQTY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_LIKQTY(VALEUR)
Variable Decimal VALEUR
## Action STD
Call AM_LIKQTY(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "LIKQTY" : GZNUM = 20536 : Endif
Gosub _AFF
End

$ON_LIKQTYCOD
Onevent BEFORE_INPUT Call AS_LIKQTYCOD(zc) From W1BOM1
Onevent INIT_AREA Call D_LIKQTYCOD(zc) From W1BOM1
Return

Subprog D_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
If varinit([M]LIKQTYCOD,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LIKQTYCOD(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]LIKQTYCOD(INDIC) = VALEUR
 Affzo LIKQTYCOD(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_QTYRND
Onevent BEFORE_INPUT Call AS_QTYRND(zc) From W1BOM1
Onevent INIT_AREA Call D_QTYRND(zc) From W1BOM1
Return

Subprog D_QTYRND(VALEUR)
Variable Integer VALEUR
If varinit([M]QTYRND,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_QTYRND(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]QTYRND(INDIC) = VALEUR
 Affzo QTYRND(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SCA
Onevent BEFORE_INPUT Call AS_SCA(zc) From W1BOM1
Onevent CONTROL Call C_SCA(zc) From W1BOM1
Return

Subprog AS_SCA(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SCA(VALEUR) From SUBBOD
If mkstat=2
 [M]SCA(INDIC) = VALEUR
 Affzo SCA(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_SCA(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_BOMSTRDAT
Onevent INIT_AREA Call D_BOMSTRDAT(zc) From W1BOM1
Onevent BEFORE_INPUT Call AS_BOMSTRDAT(zc) From W1BOM1
Onevent CONTROL Call C_BOMSTRDAT(zc) From W1BOM1
Onevent BEFORE_AREA Gosub AV_BOMSTRDAT From W1BOM1
Return

$AV_BOMSTRDAT
Chgfmt [M]BOMSTRDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_BOMSTRDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]BOMSTRDAT,indice)=0
 ## Action STD
 Call D_BOMSTRDAT(VALEUR) From SUBBOD
Endif
Gosub _AFF
End

Subprog AS_BOMSTRDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMSTRDAT(VALEUR) From SUBBOD
If mkstat=2
 [M]BOMSTRDAT(INDIC) = VALEUR
 Affzo BOMSTRDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BOMSTRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call C_BOMSTRDAT(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "BOMSTRDAT" : GZNUM = 51253 : Endif
Gosub _AFF
End

$ON_BOMENDDAT
Onevent INIT_AREA Call D_BOMENDDAT(zc) From W1BOM1
Onevent BEFORE_INPUT Call AS_BOMENDDAT(zc) From W1BOM1
Onevent CONTROL Call C_BOMENDDAT(zc) From W1BOM1
Onevent BEFORE_AREA Gosub AV_BOMENDDAT From W1BOM1
Return

$AV_BOMENDDAT
Chgfmt [M]BOMENDDAT(indice) With "DzZ:"+GFMDAT
Gosub _AFF
Return

Subprog D_BOMENDDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]BOMENDDAT,indice)=0
 ## Action STD
 Call D_BOMENDDAT(VALEUR) From SUBBOD
Endif
Gosub _AFF
End

Subprog AS_BOMENDDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMENDDAT(VALEUR) From SUBBOD
If mkstat=2
 [M]BOMENDDAT(INDIC) = VALEUR
 Affzo BOMENDDAT(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_BOMENDDAT(VALEUR)
Variable Date    VALEUR
## Action CTLDATV
Call CTLDATV(VALEUR,[M:BOM1]BOMSTRDAT) From CONTDIV
If mkstat : GERR = 1 : GZONE = "BOMENDDAT" : GZNUM = 51254 : Endif
If !mkstat
 ## Action STD
 Call C_BOMENDDAT(VALEUR) From SUBBOD
 If mkstat : GERR = 1 : GZONE = "BOMENDDAT" : GZNUM = 51254 : Endif
Endif
Gosub _AFF
End

$ON_BOMSTRLOT
Onevent BEFORE_INPUT Call AS_BOMSTRLOT(zc) From W1BOM1
Return

Subprog AS_BOMSTRLOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMSTRLOT(VALEUR) From SUBBOD
If mkstat=2
 [M]BOMSTRLOT(INDIC) = VALEUR
 Affzo BOMSTRLOT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCUSE2
 Call PASECCUSE2 From ECCLIB
 If mkstat=2
  [M]BOMSTRLOT(INDIC) = VALEUR
  Affzo BOMSTRLOT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

$ON_BOMENDLOT
Onevent BEFORE_INPUT Call AS_BOMENDLOT(zc) From W1BOM1
Onevent CONTROL Call C_BOMENDLOT(zc) From W1BOM1
Return

Subprog AS_BOMENDLOT(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BOMENDLOT(VALEUR) From SUBBOD
If mkstat=2
 [M]BOMENDLOT(INDIC) = VALEUR
 Affzo BOMENDLOT(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action PASECCUSE2
 Call PASECCUSE2 From ECCLIB
 If mkstat=2
  [M]BOMENDLOT(INDIC) = VALEUR
  Affzo BOMENDLOT(INDIC) : mkstat = 2
 Endif
Endif
Gosub _AFF
End

Subprog C_BOMENDLOT(VALEUR)
Variable Char    VALEUR()
## Action CTLALPV
Call CTLALPV(VALEUR,[M:BOM1]BOMSTRLOT) From CONTDIV
If mkstat : GERR = 1 : GZONE = "BOMENDLOT" : GZNUM = 51446 : Endif
Gosub _AFF
End

$ON_CPNOPE
Onevent BEFORE_INPUT Call AS_CPNOPE(zc) From W1BOM1
Onevent CONTROL Call C_CPNOPE(zc) From W1BOM1
Return

Subprog AS_CPNOPE(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]CPNOPE(INDIC) = VALEUR
 Affzo CPNOPE(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_CPNOPE(zc) From W1BOM1
Gosub _AFF
End

Subprog C_CPNOPE(VALEUR)
Variable Decimal VALEUR
## Action STD
Call C_CPNOPE(VALEUR) From SUBBOD
If mkstat : GERR = 1 : GZONE = "CPNOPE" : GZNUM = 1566 : Endif
Gosub _AFF
End

Subprog S_CPNOPE(VALEUR)
Variable Decimal VALEUR
If !GWEBSERV
 ## Action SELOPE
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOPE"
 PARMSK(1) = [M:BOH0]ITMREF
 PARMSK(2) = num$([M:BOH0]BOMALT)
 Call S_TAB_NUM(VALEUR,PARMSK,"SELOPE","MFGSELLIB","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_BOMOFS
Onevent CONTROL Call C_BOMOFS(zc) From W1BOM1
Return

Subprog C_BOMOFS(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_CSTFLG
Onevent BEFORE_INPUT Call AS_CSTFLG(zc) From W1BOM1
Onevent INIT_AREA Call D_CSTFLG(zc) From W1BOM1
Return

Subprog D_CSTFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]CSTFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_CSTFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]CSTFLG(INDIC) = VALEUR
 Affzo CSTFLG(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_CSTFLG(VALEUR) From SUBBOD
 If mkstat=2
  [M]CSTFLG(INDIC) = VALEUR
  Affzo CSTFLG(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$ON_PICPRN
Onevent BEFORE_INPUT Call AS_PICPRN(zc) From W1BOM1
Onevent INIT_AREA Call D_PICPRN(zc) From W1BOM1
Return

Subprog D_PICPRN(VALEUR)
Variable Integer VALEUR
If varinit([M]PICPRN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_PICPRN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action PASECCUSE2
Call PASECCUSE2 From ECCLIB
If mkstat=2
 [M]PICPRN(INDIC) = VALEUR
 Affzo PICPRN(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STD
 Call AS_PICPRN(VALEUR) From SUBBOD
 If mkstat=2
  [M]PICPRN(INDIC) = VALEUR
  Affzo PICPRN(INDIC) : mkstat = 2
 Endif
 If VALEUR<1
  VALEUR = 1
 Endif
Endif
Gosub _AFF
End

$CHG_STY
Return


