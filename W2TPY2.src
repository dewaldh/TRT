#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management TPY2 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_DACCHQBAN
Onevent INIT_AREA Call D_DACCHQBAN(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACCHQBAN(zc) From W2TPY2
Return

Subprog D_DACCHQBAN(VALEUR)
Variable Integer VALEUR
If varinit([M]DACCHQBAN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACCHQBAN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CHQBANOBL
Onevent BEFORE_INPUT Call AS_CHQBANOBL(zc) From W2TPY2
Onevent INIT_AREA Call D_CHQBANOBL(zc) From W2TPY2
Return

Subprog D_CHQBANOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]CHQBANOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CHQBANOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CHQBANOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]CHQBANOBL(INDIC) = VALEUR
 Affzo CHQBANOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACCRDNUM
Onevent CONTROL Call C_DACCRDNUM(zc) From W2TPY2
Onevent INIT_AREA Call D_DACCRDNUM(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACCRDNUM(zc) From W2TPY2
Return

Subprog D_DACCRDNUM(VALEUR)
Variable Integer VALEUR
If varinit([M]DACCRDNUM,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACCRDNUM(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_DACCRDNUM(VALEUR)
Variable Integer VALEUR
## Action STD
Call C_DACCRDNUM(VALEUR) From SUBTPY
If mkstat : GERR = 1 : GZONE = "DACCRDNUM" : GZNUM = 7482 : Endif
Gosub _AFF
End

$ON_CRDNUMOBL
Onevent BEFORE_INPUT Call AS_CRDNUMOBL(zc) From W2TPY2
Onevent INIT_AREA Call D_CRDNUMOBL(zc) From W2TPY2
Return

Subprog D_CRDNUMOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]CRDNUMOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CRDNUMOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CRDNUMOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]CRDNUMOBL(INDIC) = VALEUR
 Affzo CRDNUMOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACCRDAUZ
Onevent BEFORE_INPUT Call AS_DACCRDAUZ(zc) From W2TPY2
Onevent INIT_AREA Call D_DACCRDAUZ(zc) From W2TPY2
Return

Subprog D_DACCRDAUZ(VALEUR)
Variable Integer VALEUR
If varinit([M]DACCRDAUZ,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACCRDAUZ(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_DACCRDAUZ(VALEUR) From SUBTPY
If mkstat=2
 [M]DACCRDAUZ(INDIC) = VALEUR
 Affzo DACCRDAUZ(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_CRDAUZOBL
Onevent BEFORE_INPUT Call AS_CRDAUZOBL(zc) From W2TPY2
Onevent INIT_AREA Call D_CRDAUZOBL(zc) From W2TPY2
Return

Subprog D_CRDAUZOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]CRDAUZOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_CRDAUZOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_CRDAUZOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]CRDAUZOBL(INDIC) = VALEUR
 Affzo CRDAUZOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACPURTYP
Onevent INIT_AREA Call D_DACPURTYP(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACPURTYP(zc) From W2TPY2
Return

Subprog D_DACPURTYP(VALEUR)
Variable Integer VALEUR
If varinit([M]DACPURTYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACPURTYP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACAMTBAN
Onevent INIT_AREA Call D_DACAMTBAN(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACAMTBAN(zc) From W2TPY2
Return

Subprog D_DACAMTBAN(VALEUR)
Variable Integer VALEUR
If varinit([M]DACAMTBAN,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACAMTBAN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_AMTBANOBL
Onevent BEFORE_INPUT Call AS_AMTBANOBL(zc) From W2TPY2
Onevent INIT_AREA Call D_AMTBANOBL(zc) From W2TPY2
Return

Subprog D_AMTBANOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]AMTBANOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_AMTBANOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_AMTBANOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]AMTBANOBL(INDIC) = VALEUR
 Affzo AMTBANOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_DACBANDAT
Onevent INIT_AREA Call D_DACBANDAT(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACBANDAT(zc) From W2TPY2
Return

Subprog D_DACBANDAT(VALEUR)
Variable Integer VALEUR
If varinit([M]DACBANDAT,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACBANDAT(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_BANDATOBL
Onevent BEFORE_INPUT Call AS_BANDATOBL(zc) From W2TPY2
Onevent INIT_AREA Call D_BANDATOBL(zc) From W2TPY2
Return

Subprog D_BANDATOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]BANDATOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_BANDATOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_BANDATOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]BANDATOBL(INDIC) = VALEUR
 Affzo BANDATOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBRCOL
Onevent INIT_AREA Call D_NBRCOL(zc) From W2TPY2
Onevent CONTROL Call C_NBRCOL(zc) From W2TPY2
Return

Subprog D_NBRCOL(VALEUR)
Variable Decimal VALEUR
If varinit([M]NBRCOL,indice)=0
 VALEUR = 3
Endif
Gosub _AFF
End

Subprog C_NBRCOL(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_DACPYL
Onevent AFTER_AREA Call AP_DACPYL(zc) From W2TPY2
Onevent INIT_AREA Call D_DACPYL(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACPYL(zc) From W2TPY2
Return

Subprog D_DACPYL(VALEUR)
Variable Integer VALEUR
If varinit([M]DACPYL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACPYL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_DACPYL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_DACPYL(VALEUR) From SUBTPY
If mkstat : GERR = 1 : GZONE = "DACPYL" : GZNUM = 15349 : Endif
Gosub _AFF
End

$ON_LOTPROBALCTL
Onevent AFTER_AREA Call AP_LOTPROBALCTL(zc) From W2TPY2
Onevent INIT_AREA Call D_LOTPROBALCTL(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_LOTPROBALCTL(zc) From W2TPY2
Return

Subprog D_LOTPROBALCTL(VALEUR)
Variable Integer VALEUR
If varinit([M]LOTPROBALCTL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_LOTPROBALCTL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AP_LOTPROBALCTL(VALEUR)
Variable Integer VALEUR
## Action STD
Call AP_LOTPROBALCTL(VALEUR) From SUBTPY
If mkstat : GERR = 1 : GZONE = "LOTPROBALCTL" : GZNUM = 49972 : Endif
Gosub _AFF
End

$ON_NUMLIG
Onevent BEFORE_AREA Gosub AV_NUMLIG From W2TPY2
Return

$AV_NUMLIG
zc = nolign
Gosub _AFF
Return

$ON_DACSUP
Onevent INIT_AREA Call D_DACSUP(zc) From W2TPY2
Onevent BEFORE_INPUT Call AS_DACSUP(zc) From W2TPY2
Return

Subprog D_DACSUP(VALEUR)
Variable Integer VALEUR
If varinit([M]DACSUP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_DACSUP(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_SUPOBL
Onevent BEFORE_INPUT Call AS_SUPOBL(zc) From W2TPY2
Onevent INIT_AREA Call D_SUPOBL(zc) From W2TPY2
Return

Subprog D_SUPOBL(VALEUR)
Variable Integer VALEUR
If varinit([M]SUPOBL,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog AS_SUPOBL(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_SUPOBL(VALEUR) From SUBTPY
If mkstat=2
 [M]SUPOBL(INDIC) = VALEUR
 Affzo SUPOBL(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


