#<AdxTL>@(#)0.0.0.0 $Revision$Class Commercial BOMs
# Supervisor
## CRUD-CLASSE ## BODC
# 2018-08-27 13:04:37 479


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File BOM [BOH_]

If !SILENCE : Call TRACE("2 --> Local Instance R_BODC") From ASYRCOM : Endif
Local Instance BODC Using R_BODC

If !SILENCE : Call TRACE("3 --> New Instance R_BODC") From ASYRCOM : Endif
BODC = NewInstance R_BODC AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [BOH_]BOH0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of BODC") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet BODC.AREAD([BOH_]ITMREF,[BOH_]BOMALT,[BOH_]BOMALTTYP))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("BODC.BOH.ITMREF ="-num$(BODC.BOH.ITMREF)) From ASYRCOM
 Call TRACE("BODC.BOH.BOMALT ="-num$(BODC.BOH.BOMALT)) From ASYRCOM
 Call TRACE("BODC.BOH.BOMALTTYP ="-num$(BODC.BOH.BOMALTTYP)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(BODC.BOH.AKEYS)
  Call TRACE("-"-num$(I)-":"-BODC.BOH.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [BOH_]
FreeGroup BODC
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(BODC,ACLE,ASTATUS,_ETAG)
Variable Instance BODC Using R_BODC
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _ITMREF(20)
Local Shortint _BOMALT
Local Tinyint _BOMALTTYP
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BOMALT = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BOMALTTYP = val([L]CLE(3)) : Endif
Raz [L]_ETAG
Local File BOM [BOH]
Default File [F:BOH]
Read [F:BOH]BOH0 = [L]_ITMREF;[L]_BOMALT;[L]_BOMALTTYP
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:BOH]UPDTICK)>0
 [L]_ETAG = num$([F:BOH]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(BODC,ACLE,ASTATUS)
Variable Instance BODC Using R_BODC
Value Char ACLE
Variable Integer ASTATUS
Local Char _ITMREF(20)
Local Shortint _BOMALT
Local Tinyint _BOMALTTYP
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_ITMREF = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_BOMALT = val([L]CLE(2)) : Endif
If [L]CLE(3)<>"" : [L]_BOMALTTYP = val([L]CLE(3)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet BODC.AREAD([L]_ITMREF,[L]_BOMALT,[L]_BOMALTTYP))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(BODC,_ITMREF,_BOMALT,_BOMALTTYP,ASTATUS)
Variable Instance BODC Using R_BODC
Value Char _ITMREF
Value Shortint _BOMALT
Value Tinyint _BOMALTTYP
Variable Integer ASTATUS

If BODC = null : End : Endif

Gosub AVARIABLES From WMR00BODC
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If BODC.APARENT=null
 [L]A_I = BODC.freeSnapshot
 BODC.snapshotEnabled = 0
 BODC.setAccessorEnabled = 0
Endif

If fmet BODC.ACTX.AGETAFCRIGHT(BODC,"GESBODC",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END : Endif
Default File [F:BOH]
Read [F:BOH]BOH0 = [L]_ITMREF;[L]_BOMALT;[L]_BOMALTTYP
If fstat
[L]A_ERROR = [L]_ITMREF+"~"+num$([L]_BOMALT)+"~"+num$([L]_BOMALTTYP)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BODC,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
If ([F:BOH]BOMALTTYP=1)=0
[L]A_ERROR = [L]_ITMREF+"~"+num$([L]_BOMALT)+"~"+num$([L]_BOMALTTYP)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(BODC,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = [F:BOH]ACSCOD
If fmet BODC.ACTX.AGETAFCRIGHTR(BODC,"GESBODC",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END
Endif
If fmet BODC.ACTX.AGETACSRIGHTC(BODC,[L]A_STRACC,[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR
 Goto AREAD_END
  Endif
If fmet BODC.ACTX.ASTACRITROLE(BODC,[L]_ITMREF+"~"+num$([L]_BOMALT)+"~"+num$([L]_BOMALTTYP)
& ,"BOD","BOH",[V]CST_ATRUE)>=[V]CST_AERROR
   [L]ASTATUS=[V]CST_AERROR : Goto AREAD_END 
  Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet BODC.ACTION("AREAD_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  BODC.BOH.setAccessorEnabled = 0
  [L]ASTATUS = max([L]ASTATUS,fmet BODC.BOH.AREAD([L]_ITMREF,[L]_BOMALT,[L]_BOMALTTYP))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  [L]ASTATUS = max([L]ASTATUS,fmet BODC.ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  
  If [L]ASTATUS<[V]CST_AERROR & BODC.APARENT=null
   # Load Link
   [L]ASTATUS = max([L]ASTATUS,fmet BODC._ALNKPRO)
   If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
  Endif
  
  $AREAD_END
  If BODC.APARENT=null
   BODC.snapshotEnabled = 1
   BODC.setAccessorEnabled = 1
  Endif
  LogicClose File [BOH] ,[BOD] ,[TBO]
  End
  


