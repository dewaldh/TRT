#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Sage X3 supervisor
## CRUD-CLASSE ## ASYRAUS
# 2018-06-20 06:33:48 282


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(ASYRAUS,ASTATUS)
Variable Instance ASYRAUS Using C_ASYRAUS
Variable Integer ASTATUS

If ASYRAUS = null : End : Endif

Gosub _AVARIABLES From WMC00ASYRAUS

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_ASYRAUS

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(ASYRAUS,ASTATUS)
Variable Instance ASYRAUS Using C_ASYRAUS
Variable Integer ASTATUS

If ASYRAUS = null : End : Endif

Gosub AVARIABLES From WMC00ASYRAUS
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_ASYRAUS
Else
 Gosub ADELETE_ASYRAUS
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(ASYRAUS,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If ASYRAUS.ASTALIN = [V]CST_ANEWDEL : Return : Endif
ASYRAUS.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_ASYRAUS
Trbegin [F:AUS]
 Gosub ADELETE_ASYRAUS
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_ASYRAUS
[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(ASYRAUS,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.ACTION("ADELETE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet ASYRAUS.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If ASYRAUS.snapshotEnabled=1
 [L]A_RETIK = ASYRAUS.revertUpdTick
Endif
[L]ASTATUS = max(fmet ASYRAUS.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



