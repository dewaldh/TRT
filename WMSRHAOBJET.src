#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHAOBJET AOBJET
# 2018-08-27 12:21:28 250

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","AOBJET","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File AOBJET [AOB]
If filinfo(filpath("FIL","AOBJLST","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File AOBJLST [AOL]
If filinfo(filpath("FIL","AOBJTAB","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File AOBJTAB [AOT]
Local File AOBJET [AOB_]
Local Char KEY_AOB(120)(1..3)
Local Char KEY_AOL(120)(1..3)
Local Char KEY_AOT(120)(1..3)
#Empty keys :
KEY_AOB(3) = ""
KEY_AOL(3) = ""
KEY_AOT(3) = "+0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [AOB]
LogicClose File [AOL]
LogicClose File [AOT]
LogicClose File [AOB_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [AOB] With
& [AOL]AOL0=[AOB]ABREV,
& [AOT]ABREV=[AOB]ABREV
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [AOB] With
& [AOL]AOL0=[AOB]ABREV,
& [AOT]ABREV=[AOB]ABREV
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Local Integer CI1
Local Integer CJ1
Local Char    SEPINS1(2) : SEPINS1=""
Local Char IS1(1)

Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_AOB(2) = [F:AOB]ABREV
KEY_AOL(2) = [F:AOL]ABREV
KEY_AOT(2) = [F:AOT]ABREV+"+"+num$([F:AOT]NUMLIG)

If (KEY_AOB(2) <> KEY_AOB(3)) & (KEY_AOB(1) <> KEY_AOB(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_AOBJET(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:AOB]
FINS = 1
Local Integer IMPTBL_MAX:IMPTBL_MAX0
CJ1=1
For CI1 = 0 To dim([F:AOB]IMPTBL)-1
 Break ((CI1 > [F:AOB]NBRIMP) & (CJ1 >= 0))
 IMPTBL_MAX+=1
 #Create a new instance
 INS.IMP(CJ1) = NewInstance C_AOBJET_IMP(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.IMP(CJ1).setaccessorEnabled = 0
 INS.IMP(CJ1).IMPTBL=[F:AOB]IMPTBL(CI1)
 INS.IMP(CJ1).IMPMSK=[F:AOB]IMPMSK(CI1)
 INS.IMP(CJ1).IMPTAB=[F:AOB]IMPTAB(CI1)
 CJ1+=1
Next CI1
Local Integer OPTCND_MAX:OPTCND_MAX0
CJ1=1
For CI1 = 0 To dim([F:AOB]OPTCND)-1
 Break ((CI1 > [F:AOB]NBOPT) & (CJ1 >= 20))
 OPTCND_MAX+=1
 #Create a new instance
 INS.OPTCN(CJ1) = NewInstance C_AOBJET_OPTCN(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.OPTCN(CJ1).setaccessorEnabled = 0
 INS.OPTCN(CJ1).OPTCND=[F:AOB]OPTCND(CI1)
 INS.OPTCN(CJ1).OPTCOD=[F:AOB]OPTCOD(CI1)
 CJ1+=1
Next CI1
Local Integer SCRNAM_MAX:SCRNAM_MAX0
CJ1=1
For CI1 = 0 To dim([F:AOB]SCRNAM)-1
 Break ((CI1 > [F:AOB]NBSCR) & (CJ1 >= 0))
 SCRNAM_MAX+=1
 #Create a new instance
 INS.SCR(CJ1) = NewInstance C_AOBJET_SCR(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.SCR(CJ1).setaccessorEnabled = 0
 INS.SCR(CJ1).SCRNAM=[F:AOB]SCRNAM(CI1)
 INS.SCR(CJ1).SCRABR=[F:AOB]SCRABR(CI1)
 CJ1+=1
Next CI1
Local Integer VUECOD_MAX:VUECOD_MAX0
CJ1=1
For CI1 = 0 To dim([F:AOB]VUECOD)-1
 Break ((CI1 > [F:AOB]NBVUE) & (CJ1 >= 0))
 VUECOD_MAX+=1
 #Create a new instance
 INS.VUE(CJ1) = NewInstance C_AOBJET_VUE(GACTX,UIDINS,NUMLIN,INS,"") AllocGroup INS
 INS.VUE(CJ1).setaccessorEnabled = 0
 INS.VUE(CJ1).VUECOD=[F:AOB]VUECOD(CI1)
 INS.VUE(CJ1).VUEABR=[F:AOB]VUEABR(CI1)
 INS.VUE(CJ1).VUEACT=[F:AOB]VUEACT(CI1)
 CJ1+=1
Next CI1
 KEY_AOB(1) = KEY_AOB(2)
Endif : # KEY_AOB(1) <> KEY_AOB(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"ABREV":'           +'"'+escJson(INS.ABREV)+'"'
Append ASND.DATA ,',"CODACT":'         +'"'+escJson(INS.CODACT)+'"'
Append ASND.DATA ,',"MENU":'           +'"'+escJson(INS.MENU)+'"'
Append ASND.DATA ,',"NOMFIC":'         +'"'+escJson(INS.NOMFIC)+'"'
Append ASND.DATA ,',"ABRFIC":'         +'"'+escJson(INS.ABRFIC)+'"'
Append ASND.DATA ,',"MODELE":'         +'"'+escJson(INS.MODELE)+'"'
Append ASND.DATA ,',"SELOPT":'         +'"'+escJson(INS.SELOPT)+'"'
Append ASND.DATA ,',"ZSITE":'          +'"'+escJson(INS.ZSITE)+'"'
Append ASND.DATA ,',"RPT1":'           +'"'+escJson(INS.RPT1)+'"'
Append ASND.DATA ,',"RPT2":'           +'"'+escJson(INS.RPT2)+'"'
Append ASND.DATA ,',"SELCLE":'         +'"'+escJson(INS.SELCLE)+'"'
Append ASND.DATA ,',"ZACC":'           +'"'+escJson(INS.ZACC)+'"'
Append ASND.DATA ,',"TRTSPE":'         +'"'+escJson(INS.TRTSPE)+'"'
Append ASND.DATA ,',"TRTSPV":'         +'"'+escJson(INS.TRTSPV)+'"'
Append ASND.DATA ,',"ARCURL":'         +'"'+escJson(INS.ARCURL)+'"'
IS1=""
CJ1=1
Append ASND.DATA ,',"IMP":['
For CI1=1 To IMPTBL_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"IMPTBL":'          +'"'+escJson(INS.IMP(CJ1).IMPTBL)+'"'
 Append ASND.DATA ,',"IMPMSK":'         +'"'+escJson(INS.IMP(CJ1).IMPMSK)+'"'
 Append ASND.DATA ,',"IMPTAB":'         +'"'+escJson(INS.IMP(CJ1).IMPTAB)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"OPTCN":['
For CI1=1 To OPTCND_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"OPTCND":'          +'"'+escJson(INS.OPTCN(CJ1).OPTCND)+'"'
 Append ASND.DATA ,',"OPTCOD":'         +'"'+escJson(INS.OPTCN(CJ1).OPTCOD)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"SCR":['
For CI1=1 To SCRNAM_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"SCRNAM":'          +'"'+escJson(INS.SCR(CJ1).SCRNAM)+'"'
 Append ASND.DATA ,',"SCRABR":'         +'"'+escJson(INS.SCR(CJ1).SCRABR)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
IS1=""
CJ1=1
Append ASND.DATA ,',"VUE":['
For CI1=1 To VUECOD_MAX
 Append ASND.DATA ,IS1+'{'
 Append ASND.DATA ,'"VUECOD":'          +'"'+escJson(INS.VUE(CJ1).VUECOD)+'"'
 Append ASND.DATA ,',"VUEABR":'         +'"'+escJson(INS.VUE(CJ1).VUEABR)+'"'
 Append ASND.DATA ,',"VUEACT":'         +'"'+escJson(INS.VUE(CJ1).VUEACT)+'"'
 Append ASND.DATA ,'}'
 IS1=","
 CJ1+=1
Next CI1
Append ASND.DATA , "]"
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_AOB(1),KEY_AOL(1),KEY_AOT(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:AOB]ABREV"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
 Gosub METHODS From AOBJET_CSTD
 Gosub METHODS From AOBJET_CSTD
 Gosub METHODS From AOBJET_CSTD
 Gosub METHODS From AOBJET_CSTD
Gosub METHODS From AOBJET_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="AOBJET" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"AOBJET")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"AOBJET")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,199)+'"'
Append WCLOB,',"$url":"{$baseUrl}/AOBJET'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,199)+' {$key}"'
Append WCLOB,',"$key":"{ABREV}"'
Append WCLOB,',"$url":"{$baseUrl}/AOBJET('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'AOBJET.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"ABREV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,125)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":8'
Append WCLOB,"}"
Append WCLOB,',"CODACT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"MENU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,507)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"NOMFIC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,23)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"ABRFIC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,20789)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":8'
Append WCLOB,"}"
Append WCLOB,',"MODELE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27226)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":10'
Append WCLOB,"}"
Append WCLOB,',"SELOPT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,145)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"ZSITE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1386)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"RPT1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,10022)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"RPT2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,10023)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"SELCLE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1390)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"ZACC":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,14292)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"TRTSPE":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,953)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"TRTSPV":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27977)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"ARCURL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,41105)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"IMP":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":16'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"IMPTBL":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1176)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"IMPMSK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,47)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"IMPTAB":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26082)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"OPTCN":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":20'
Append WCLOB,',"$maxItems":20'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"OPTCND":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,139)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"OPTCOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,140)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"SCR":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":8'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"SCRNAM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1041)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"SCRABR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,7561)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":8'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"VUE":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$minItems":0'
Append WCLOB,',"$maxItems":10'
Append WCLOB,',"$item":{'
Append WCLOB,'"$type":"application/json"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"VUECOD":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,27031)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":12'
Append WCLOB,"}"
Append WCLOB,',"VUEABR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,903)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":8'
Append WCLOB,"}"
Append WCLOB,',"VUEACT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,'"$search$details":{'
Append WCLOB,'"$title":"Detail"'
Append WCLOB,',"$default":true'
Append WCLOB,',"$url":"{$baseUrl}/AOBJET('+"'"+'{$key}'+"'"+')?representation=AOBJET.$details"'
Append WCLOB,',"$devices":"desktop"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHAOBJETB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHAOBJETB
End RES


