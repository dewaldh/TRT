#<AdxTL>@(#)0.0.0.0 $Revision$Class Contact relationships
# Supervisor
## CRUD-CLASSE ## ACONTACTCRM
# 2018-08-27 12:19:10 888


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File CONTACTCRM [AIN_]

If !SILENCE : Call TRACE("2 --> Local Instance C_ACONTACTCRM") From ASYRCOM : Endif
Local Instance ACONTACTCRM Using C_ACONTACTCRM

If !SILENCE : Call TRACE("3 --> New Instance C_ACONTACTCRM") From ASYRCOM : Endif
ACONTACTCRM = NewInstance C_ACONTACTCRM AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [AIN_]AIN0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of ACONTACTCRM") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet ACONTACTCRM.AREAD([AIN_]CNTNUM))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("ACONTACTCRM.CNTNUM ="-num$(ACONTACTCRM.CNTNUM)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(ACONTACTCRM.AKEYS)
  Call TRACE("-"-num$(I)-":"-ACONTACTCRM.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [AIN_]
FreeGroup ACONTACTCRM
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(ACONTACTCRM,ACLE,ASTATUS,_ETAG)
Variable Instance ACONTACTCRM Using C_ACONTACTCRM
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _CNTNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CNTNUM = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File CONTACTCRM [AIN]
Default File [F:AIN]
Read [F:AIN]AIN0 = [L]_CNTNUM
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:AIN]UPDTICK)>0
 [L]_ETAG = num$([F:AIN]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(ACONTACTCRM,ACLE,ASTATUS)
Variable Instance ACONTACTCRM Using C_ACONTACTCRM
Value Char ACLE
Variable Integer ASTATUS
Local Char _CNTNUM(15)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_CNTNUM = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet ACONTACTCRM.AREAD([L]_CNTNUM))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(ACONTACTCRM,_CNTNUM,ASTATUS)
Variable Instance ACONTACTCRM Using C_ACONTACTCRM
Value Char _CNTNUM
Variable Integer ASTATUS

If ACONTACTCRM = null : End : Endif

Gosub AVARIABLES From WMC00ACONTACTCRM
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If ACONTACTCRM.APARENT=null
 [L]A_I = ACONTACTCRM.freeSnapshot
 ACONTACTCRM.snapshotEnabled = 0
 ACONTACTCRM.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & ACONTACTCRM.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet ACONTACTCRM._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If ACONTACTCRM.APARENT=null
 ACONTACTCRM.snapshotEnabled = 1
 ACONTACTCRM.setAccessorEnabled = 1
Endif
LogicClose File [AIN]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet ACONTACTCRM._ACTION_PARAM("AREAD_BEFORE",[L]_CNTNUM))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:AIN]
Read [F:AIN]AIN0 = [L]_CNTNUM
If fstat
[L]A_ERROR = [L]_CNTNUM
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(ACONTACTCRM,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:AIN]AUUID)>0 & [F:AIN]AUUID=NullUuid
 [F:AIN]AUUID = getUuid
Endif
SetInstance ACONTACTCRM With [F:AIN]
ACONTACTCRM.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet ACONTACTCRM.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



