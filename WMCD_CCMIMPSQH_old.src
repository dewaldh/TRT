#<AdxTL>@(#)0.0.0.0 $Revision$Class Impact analysis-Sales quotes
# Sage X3 supervisor
## CRUD-CLASSE ## CCMIMPSQH
# 2018-06-20 06:41:12 452


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(CCMIMPSQH,ASTATUS)
Variable Instance CCMIMPSQH Using C_CCMIMPSQH
Variable Integer ASTATUS

If CCMIMPSQH = null : End : Endif

Gosub _AVARIABLES From WMC00CCMIMPSQH

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_CCMIMPSQH

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(CCMIMPSQH,ASTATUS)
Variable Instance CCMIMPSQH Using C_CCMIMPSQH
Variable Integer ASTATUS

If CCMIMPSQH = null : End : Endif

Gosub AVARIABLES From WMC00CCMIMPSQH
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_CCMIMPSQH
Else
 Gosub ADELETE_CCMIMPSQH
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(CCMIMPSQH,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If CCMIMPSQH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMIMPSQH.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_CCMIMPSQH
Trbegin [F:CCMISQH]
 Gosub ADELETE_CCMIMPSQH
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_CCMIMPSQH
[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(CCMIMPSQH,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,func WMC00CCMIMPSQH._MAJSQL_CCMIMPSQH(CCMIMPSQH))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMIMPSQH.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If CCMIMPSQH.snapshotEnabled=1
 [L]A_RETIK = CCMIMPSQH.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMIMPSQH.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



