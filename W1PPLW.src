#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management PPLW 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:08:56"
A_USER  = "ADMIN"
A_STAMP = "20180828000856"
Return

$TITRES
Return

$CHG_FMT
Case zoncou
 When "NBLIG"
  If [M]NBLIG=0
   If GFORREM(0)<>""
    Chgfmt XFRAREM1 With GFORREM(0)
   Else
    Chgfmt XFRAREM1 With "-K:1X"
   Endif
   If GFORREM(1)<>""
    Chgfmt XFRAREM2 With GFORREM(1)
   Else
    Chgfmt XFRAREM2 With "-K:1X"
   Endif
   If GFORREM(2)<>""
    Chgfmt XFRAREM3 With GFORREM(2)
   Else
    Chgfmt XFRAREM3 With "-K:1X"
   Endif
   If GFORREM(3)<>""
    Chgfmt XFRAREM4 With GFORREM(3)
   Else
    Chgfmt XFRAREM4 With "-K:1X"
   Endif
   If GFORREM(4)<>""
    Chgfmt XFRAREM5 With GFORREM(4)
   Else
    Chgfmt XFRAREM5 With "-K:1X"
   Endif
   If GFORREM(5)<>""
    Chgfmt XFRAREM6 With GFORREM(5)
   Else
    Chgfmt XFRAREM6 With "-K:1X"
   Endif
   If GFORREM(6)<>""
    Chgfmt XFRAREM7 With GFORREM(6)
   Else
    Chgfmt XFRAREM7 With "-K:1X"
   Endif
   If GFORREM(7)<>""
    Chgfmt XFRAREM8 With GFORREM(7)
   Else
    Chgfmt XFRAREM8 With "-K:1X"
   Endif
   If GFORREM(8)<>""
    Chgfmt XFRAREM9 With GFORREM(8)
   Else
    Chgfmt XFRAREM9 With "-K:1X"
   Endif
  Endif
Endcase
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask PPLW [PPLW]
Gosub HORODAT
Local Inpbox "PPLW" From GFONCTION At A_STAMP With A_WINDPREV Mask [PPLW] As [SIM_]
Grizo [PPLW]5
Grizo [PPLW]10
Grizo [PPLW]15
Grizo [PPLW]20
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [PPLW]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=1 : X2(0)=50 : Y1(0)=1 : Y2(0)=3
X1(1)=51 : X2(1)=79 : Y1(1)=1 : Y2(1)=3
X1(2)=1 : X2(2)=79 : Y1(2)=4 : Y2(2)=5
X1(3)=1 : X2(3)=79 : Y1(3)=6 : Y2(3)=28
Return

$ON_PLI
Onevent INIT_AREA Call D_PLI(zc) From W1PPLW
Onevent CONTROL Call C_PLI(zc) From W1PPLW
Onevent BEFORE_INPUT Call AS_PLI(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_PLI From W1PPLW
Return

Subprog D_PLI(VALEUR)
Variable Char    VALEUR()
If varinit([M]PLI,indice)=0
 ## Action STD
 Call D_PLI(VALEUR) From SUBPPL
Endif
Gosub _AFF
End

Subprog AS_PLI(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(11499,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLI(zc) From W1PPLW
Onkey   2 Titled GBOUTS Call S_PLI(zc) From W1PPLW
Onkey 144 Titled GBOUTP Call P_PLI(zc) From W1PPLW
Onkey 146 Titled GBOUTA Call SA_PLI(zc) From W1PPLW
Gosub _AFF
End

Subprog C_PLI(VALEUR)
Variable Char    VALEUR()
## Action %CNTOBJ
Call CONTSEL("PPC","!",VALEUR,"",mkstat) From CONTOBJ
If mkstat : GERR = 1 : GZONE = "PLI" : GZNUM = 2652 : Endif
Gosub _AFF
End

$AMM_PLI
Call AM_PLI(zc)
If !mkstat & GOBJET
 zoncou = "PLI" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLI(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZPLI)")>indice
 [M]PLI(indice) = VALEUR
 Affzo ZPLI(indice)
Endif
Gosub _AFF
End

Subprog S_PLI(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "PPC"
PARMSK(2) = "!"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog B1_PLI(VALEUR)
Variable Char    VALEUR()
Call OBJET("PPC",VALEUR,"") From GOBJET
Gosub _AFF
End

Subprog SA_PLI(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "PPC"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_PLI(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("PPC",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZPLI
Onevent BEFORE_AREA Gosub AV_ZPLI From W1PPLW
Return

$AV_ZPLI
Call LECTEXTRA(zc,"PPRICCONF","DESAXX",num$([M]PLI(indice)),"") From ATEXTRA
Gosub _AFF
Return

$ON_PLICRD
Onevent CONTROL Call C_PLICRD(zc) From W1PPLW
Onevent BEFORE_INPUT Call AS_PLICRD(zc) From W1PPLW
Return

Subprog AS_PLICRD(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_PLICRD(VALEUR) From SUBPPL
If mkstat=2
 [M]PLICRD(INDIC) = VALEUR
 Affzo PLICRD(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_PLICRD(zc) From W1PPLW
Gosub _AFF
End

Subprog C_PLICRD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "PLICRD" : GZNUM = 2679 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_PLICRD(VALEUR) From SUBPPL
 If mkstat : GERR = 1 : GZONE = "PLICRD" : GZNUM = 2679 : Endif
Endif
Gosub _AFF
End

Subprog S_PLICRD(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SELOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SELOBJET"
 PARMSK(1) = "PPL"
 PARMSK(2) = "PLICRD"
 Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJET","SELOBJ","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_PLIENAFLG
Onevent INIT_AREA Call D_PLIENAFLG(zc) From W1PPLW
Return

Subprog D_PLIENAFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]PLIENAFLG,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_PLISTRDAT
Onevent INIT_AREA Call D_PLISTRDAT(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_PLISTRDAT From W1PPLW
Onevent BEFORE_INPUT Call AS_PLISTRDAT(zc) From W1PPLW
Onevent CONTROL Call C_PLISTRDAT(zc) From W1PPLW
Onevent BEFORE_AREA Gosub AV_PLISTRDAT From W1PPLW
Return

$AV_PLISTRDAT
Chgfmt [M]PLISTRDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog D_PLISTRDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]PLISTRDAT,indice)=0
 If !GWEBSERV
  ## Action INITDDEB
  Call INITDDEB(VALEUR) From TRTX3
 Endif
Endif
Gosub _AFF
End

Subprog AS_PLISTRDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(845,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLISTRDAT(zc) From W1PPLW
Gosub _AFF
End

Subprog C_PLISTRDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PLISTRDAT" : GZNUM = 51253 : Endif
Gosub _AFF
End

$AMM_PLISTRDAT
Call AM_PLISTRDAT(zc)
If !mkstat & GOBJET
 zoncou = "PLISTRDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLISTRDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_PLISTRDAT(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "PLISTRDAT" : GZNUM = 51253 : Endif
Gosub _AFF
End

Subprog B1_PLISTRDAT(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action MEMODDEB
 Call MEMODEB(VALEUR) From TRTX3
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PLIENDDAT
Onevent INIT_AREA Call D_PLIENDDAT(zc) From W1PPLW
Onevent CONTROL Call C_PLIENDDAT(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_PLIENDDAT From W1PPLW
Onevent BEFORE_INPUT Call AS_PLIENDDAT(zc) From W1PPLW
Onevent BEFORE_AREA Gosub AV_PLIENDDAT From W1PPLW
Return

$AV_PLIENDDAT
Chgfmt [M]PLIENDDAT(indice) With "D:"+GFMDAT
Gosub _AFF
Return

Subprog D_PLIENDDAT(VALEUR)
Variable Date    VALEUR
If varinit([M]PLIENDDAT,indice)=0
 If !GWEBSERV
  ## Action INITDFIN
  Call INITDFIN(VALEUR) From TRTX3
 Endif
Endif
Gosub _AFF
End

Subprog AS_PLIENDDAT(VALEUR)
Variable Date    VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(845,GBOUT1) From OBJDIV
Onkey 129 Titled GBOUT1 Call B1_PLIENDDAT(zc) From W1PPLW
Gosub _AFF
End

Subprog C_PLIENDDAT(VALEUR)
Variable Date    VALEUR
## Action %OBLIG
If VALEUR=[0/0/0]
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PLIENDDAT" : GZNUM = 51254 : Endif
If !mkstat
 ## Action STD
 Call C_PLIENDDAT(VALEUR) From SUBPPL
 If mkstat : GERR = 1 : GZONE = "PLIENDDAT" : GZNUM = 51254 : Endif
Endif
Gosub _AFF
End

$AMM_PLIENDDAT
Call AM_PLIENDDAT(zc)
If !mkstat & GOBJET
 zoncou = "PLIENDDAT" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_PLIENDDAT(VALEUR)
Variable Date    VALEUR
## Action STD
Call AM_PLIENDDAT(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "PLIENDDAT" : GZNUM = 51254 : Endif
Gosub _AFF
End

Subprog B1_PLIENDDAT(VALEUR)
Variable Date    VALEUR
If !GWEBSERV
 ## Action MEMODFIN
 Call MEMOFIN(VALEUR) From TRTX3
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_PLIPRITYP
Onevent INIT_AREA Call D_PLIPRITYP(zc) From W1PPLW
Return

Subprog D_PLIPRITYP(VALEUR)
Variable Integer VALEUR
If varinit([M]PLIPRITYP,indice)=0
 VALEUR = 1
Endif
Gosub _AFF
End

$ON_NBLIG
Onevent CONTROL Call C_NBLIG From W1PPLW
Onevent BEFORE_LINE Call AVANT_NBLIG From W1PPLW
Onevent AFTER_LINE Call APRES_NBLIG From W1PPLW
Onevent BEFORE_AREA Call AV_NBLIG From W1PPLW
Return

Subprog AV_NBLIG
Local Decimal BASPAG
If adxgtb=1 & !GORITITCOL & nolign=1
 Local Char BASPAG(10)
 BASPAG = "NBLIG" : Gosub TIT_COL From W2PPLW
Endif
Gosub _AFF
End

Subprog C_NBLIG
Local Decimal BASPAG
## Action DIVLINCONT
Call INSERE("PLILIN") From TABLEAUX
If mkstat : GERR = 1 : GZONE = "NBLIG" : GZNUM = 0 : Endif
Gosub _AFF
End

Subprog AVANT_NBLIG
Local Decimal BASPAG
## Action STD
Call AVANT_NBLIG From SUBPPL
If mkstat : End : Endif
Gosub _AFF
End

Subprog APRES_NBLIG
Local Decimal BASPAG
## Action DIVLINNUM
Call LINNUM("PLILIN") From TABLEAUX
If mkstat : End : Endif
## Action STD
Call APRES_NBLIG From SUBPPL
If mkstat : End : Endif
Gosub _AFF
End

$ON_NUMLIG
Onevent BEFORE_AREA Gosub AV_NUMLIG From W1PPLW
Return

$AV_NUMLIG
zc = nolign
Gosub _AFF
Return

$ON_CRIT1
Onevent BEFORE_INPUT Call AS_CRIT1(zc) From W1PPLW
Onevent CONTROL Call C_CRIT1(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_CRIT1 From W1PPLW
Return

Subprog IB_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_CRIT1 From SUBPPL
Endif
Gosub _AFF
End

Subprog AS_CRIT1(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call TEXTE(454,GBOUT2) From OBJDIV
Call TEXTE(454,GBOUT3) From OBJDIV
Call TEXTE(454,GBOUT4) From OBJDIV
Call TEXTE(454,GBOUT5) From OBJDIV
Call TEXTE(454,GBOUT6) From OBJDIV
Call TEXTE(454,GBOUT7) From OBJDIV
Call TEXTE(454,GBOUT8) From OBJDIV
Call IB_CRIT1(VALEUR)
## Action STD
Call AS_CRIT1(VALEUR) From SUBPPL
If mkstat=2
 [M]CRIT1(INDIC) = VALEUR
 Affzo CRIT1(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CRIT1(zc) From W1PPLW
Onkey 130 Titled GBOUT2 Call B2_CRIT1(zc) From W1PPLW
Onkey 131 Titled GBOUT3 Call B3_CRIT1(zc) From W1PPLW
Onkey 132 Titled GBOUT4 Call B4_CRIT1(zc) From W1PPLW
Onkey 133 Titled GBOUT5 Call B5_CRIT1(zc) From W1PPLW
Onkey 134 Titled GBOUT6 Call B6_CRIT1(zc) From W1PPLW
Onkey 135 Titled GBOUT7 Call B7_CRIT1(zc) From W1PPLW
Onkey 136 Titled GBOUT8 Call B8_CRIT1(zc) From W1PPLW
Gosub _AFF
End

Subprog C_CRIT1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CRIT1(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT1" : GZNUM = 5386 : Endif
Gosub _AFF
End

$AMM_CRIT1
Call AM_CRIT1(zc)
If !mkstat & GOBJET
 zoncou = "CRIT1" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRIT1(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CRIT1(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT1" : GZNUM = 5386 : Endif
Gosub _AFF
End

Subprog B1_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC"
 Call OBJET_CHAR(VALEUR,[M:PPLW]OBJET,"") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B2_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B2_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B3_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B3_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B4_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B4_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B5_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B5_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B6_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B6_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B7_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B7_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

Subprog B8_CRIT1(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call B8_CRIT1(VALEUR) From SUBPPL
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CRIT2
Onevent BEFORE_INPUT Call AS_CRIT2(zc) From W1PPLW
Onevent CONTROL Call C_CRIT2(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_CRIT2 From W1PPLW
Return

Subprog IB_CRIT2(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_CRIT2 From SUBPPL
Endif
Gosub _AFF
End

Subprog AS_CRIT2(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call IB_CRIT2(VALEUR)
## Action STD
Call AS_CRIT2(VALEUR) From SUBPPL
If mkstat=2
 [M]CRIT2(INDIC) = VALEUR
 Affzo CRIT2(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CRIT2(zc) From W1PPLW
Gosub _AFF
End

Subprog C_CRIT2(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CRIT2(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT2" : GZNUM = 24839 : Endif
Gosub _AFF
End

$AMM_CRIT2
Call AM_CRIT2(zc)
If !mkstat & GOBJET
 zoncou = "CRIT2" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRIT2(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CRIT2(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT2" : GZNUM = 24839 : Endif
Gosub _AFF
End

Subprog B1_CRIT2(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC"
 Call OBJET_CHAR(VALEUR,[M:PPLW]OBJET,"") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CRIT3
Onevent BEFORE_INPUT Call AS_CRIT3(zc) From W1PPLW
Onevent CONTROL Call C_CRIT3(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_CRIT3 From W1PPLW
Return

Subprog IB_CRIT3(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_CRIT3 From SUBPPL
Endif
Gosub _AFF
End

Subprog AS_CRIT3(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call IB_CRIT3(VALEUR)
## Action STD
Call AS_CRIT3(VALEUR) From SUBPPL
If mkstat=2
 [M]CRIT3(INDIC) = VALEUR
 Affzo CRIT3(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CRIT3(zc) From W1PPLW
Gosub _AFF
End

Subprog C_CRIT3(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CRIT3(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT3" : GZNUM = 5388 : Endif
Gosub _AFF
End

$AMM_CRIT3
Call AM_CRIT3(zc)
If !mkstat & GOBJET
 zoncou = "CRIT3" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRIT3(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CRIT3(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT3" : GZNUM = 5388 : Endif
Gosub _AFF
End

Subprog B1_CRIT3(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC"
 Call OBJET_CHAR(VALEUR,[M:PPLW]OBJET,"") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CRIT4
Onevent BEFORE_INPUT Call AS_CRIT4(zc) From W1PPLW
Onevent CONTROL Call C_CRIT4(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_CRIT4 From W1PPLW
Return

Subprog IB_CRIT4(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_CRIT4 From SUBPPL
Endif
Gosub _AFF
End

Subprog AS_CRIT4(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call IB_CRIT4(VALEUR)
## Action STD
Call AS_CRIT4(VALEUR) From SUBPPL
If mkstat=2
 [M]CRIT4(INDIC) = VALEUR
 Affzo CRIT4(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CRIT4(zc) From W1PPLW
Gosub _AFF
End

Subprog C_CRIT4(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CRIT4(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT4" : GZNUM = 5389 : Endif
Gosub _AFF
End

$AMM_CRIT4
Call AM_CRIT4(zc)
If !mkstat & GOBJET
 zoncou = "CRIT4" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRIT4(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CRIT4(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT4" : GZNUM = 5389 : Endif
Gosub _AFF
End

Subprog B1_CRIT4(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC"
 Call OBJET_CHAR(VALEUR,[M:PPLW]OBJET,"") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CRIT5
Onevent BEFORE_INPUT Call AS_CRIT5(zc) From W1PPLW
Onevent CONTROL Call C_CRIT5(zc) From W1PPLW
Onevent AFTER_CHANGE Gosub AMM_CRIT5 From W1PPLW
Return

Subprog IB_CRIT5(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call IB_CRIT5 From SUBPPL
Endif
Gosub _AFF
End

Subprog AS_CRIT5(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call IB_CRIT5(VALEUR)
## Action STD
Call AS_CRIT5(VALEUR) From SUBPPL
If mkstat=2
 [M]CRIT5(INDIC) = VALEUR
 Affzo CRIT5(INDIC) : mkstat = 2
Endif
Onkey 129 Titled GBOUT1 Call B1_CRIT5(zc) From W1PPLW
Gosub _AFF
End

Subprog C_CRIT5(VALEUR)
Variable Char    VALEUR()
## Action STD
Call C_CRIT5(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT5" : GZNUM = 5390 : Endif
Gosub _AFF
End

$AMM_CRIT5
Call AM_CRIT5(zc)
If !mkstat & GOBJET
 zoncou = "CRIT5" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CRIT5(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_CRIT5(VALEUR) From SUBPPL
If mkstat : GERR = 1 : GZONE = "CRIT5" : GZNUM = 5390 : Endif
Gosub _AFF
End

Subprog B1_CRIT5(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETC
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETC"
 Call OBJET_CHAR(VALEUR,[M:PPLW]OBJET,"") From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_CUR
Onevent BEFORE_INPUT Call AS_CUR(zc) From W1PPLW
Onevent CONTROL Call C_CUR(zc) From W1PPLW
Return

Subprog AS_CUR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_CUR(VALEUR) From SUBPPL
If mkstat=2
 [M]CUR(INDIC) = VALEUR
 Affzo CUR(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_CUR(zc) From W1PPLW
Onkey 144 Titled GBOUTP Call P_CUR(zc) From W1PPLW
Onkey 146 Titled GBOUTA Call SA_CUR(zc) From W1PPLW
Gosub _AFF
End

Subprog C_CUR(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 501 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("TCU","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "CUR" : GZNUM = 501 : Endif
Endif
Gosub _AFF
End

Subprog S_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "TCU"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "TCU"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CUR(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("TCU",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_UOM
Onevent BEFORE_INPUT Call AS_UOM(zc) From W1PPLW
Onevent CONTROL Call C_UOM(zc) From W1PPLW
Return

Subprog AS_UOM(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_UOM(VALEUR) From SUBPPL
If mkstat=2
 [M]UOM(INDIC) = VALEUR
 Affzo UOM(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_UOM(zc) From W1PPLW
Gosub _AFF
End

Subprog C_UOM(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "UOM" : GZNUM = 1857 : Endif
If !mkstat
 ## Action STD
 Call C_UOM(VALEUR) From SUBPPL
 If mkstat : GERR = 1 : GZONE = "UOM" : GZNUM = 1857 : Endif
Endif
Gosub _AFF
End

Subprog S_UOM(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STD
 Call S_UOM(VALEUR) From SUBPPL
Endif
Gosub _AFF
End

$ON_MINQTY
Onevent BEFORE_AREA Gosub AV_MINQTY From W1PPLW
Onevent CONTROL Call C_MINQTY(zc) From W1PPLW
Return

$AV_MINQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]UOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]MINQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog C_MINQTY(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_MAXQTY
Onevent BEFORE_AREA Gosub AV_MAXQTY From W1PPLW
Onevent BEFORE_INPUT Call AS_MAXQTY(zc) From W1PPLW
Onevent CONTROL Call C_MAXQTY(zc) From W1PPLW
Return

$AV_MAXQTY
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]UOM(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]MAXQTY(indice) With "N+z:"+GUNTFMT
Gosub _AFF
Return

Subprog AS_MAXQTY(VALEUR)
Variable Decimal VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_MAXQTY(VALEUR) From SUBPPL
If mkstat=2
 [M]MAXQTY(INDIC) = VALEUR
 Affzo MAXQTY(INDIC) : mkstat = 2
Endif
Gosub _AFF
End

Subprog C_MAXQTY(VALEUR)
Variable Decimal VALEUR
## Action CTLNUMVALW
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CTLNUMVALW"
PARMSK(1) = num$([M]MINQTY(nolign-1))
Call S_AFF_NUM(VALEUR,PARMSK,"CTLNUMVAL","CONTX3","") From GACTION
GACTION = SAVACT
If mkstat : GERR = 1 : GZONE = "MAXQTY" : GZNUM = 2177 : Endif
Gosub _AFF
End

$ON_MINAMT
Onevent BEFORE_AREA Gosub AV_MINAMT From W1PPLW
Onevent CONTROL Call C_MINAMT(zc) From W1PPLW
Return

$AV_MINAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M]CUR(nolign-1),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]MINAMT(indice) With "N+z3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_MINAMT(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_MAXAMT
Onevent BEFORE_AREA Gosub AV_MAXAMT From W1PPLW
Onevent CONTROL Call C_MAXAMT(zc) From W1PPLW
Return

$AV_MAXAMT
## Action INIDEV
GDEVFMT="11.2" : GDEVFMT = GDEVFMT1(max(find([M]CUR(nolign-1),GDEVISE(1..GNBDEV)),1))
Chgfmt [M]MAXAMT(indice) With "N+z3:"+GDEVFMT
Gosub _AFF
Return

Subprog C_MAXAMT(VALEUR)
Variable Decimal VALEUR
## Action CTLNUMVALW
Local Char    PARMSK(250)(1..20) , SAVACT(20)
SAVACT = GACTION : GACTION = "CTLNUMVALW"
PARMSK(1) = num$([M]MINAMT(nolign-1))
Call S_AFF_NUM(VALEUR,PARMSK,"CTLNUMVAL","CONTX3","") From GACTION
GACTION = SAVACT
If mkstat : GERR = 1 : GZONE = "MAXAMT" : GZNUM = 7339 : Endif
Gosub _AFF
End

$ON_LTI
Onevent CONTROL Call C_LTI(zc) From W1PPLW
Return

Subprog C_LTI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_PRIDIV
Onevent CONTROL Call C_PRIDIV(zc) From W1PPLW
Return

Subprog C_PRIDIV(VALEUR)
Variable Decimal VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "PRIDIV" : GZNUM = 1890 : Endif
Gosub _AFF
End

$ON_PRI
Onevent BEFORE_AREA Gosub AV_PRI From W1PPLW
Onevent CONTROL Call C_PRI(zc) From W1PPLW
Return

$AV_PRI
## Action PARDEV
Gosub _AFF
Return

Subprog C_PRI(VALEUR)
Variable Decimal VALEUR
Gosub _AFF
End

$ON_XFRAREM1
Onevent BEFORE_AREA Gosub AV_XFRAREM1 From W1PPLW
Return

$AV_XFRAREM1
## Action ALIFORREM
Call ALIFORREM(0,"","",0,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(0)<>""
 Chgfmt [M]XFRAREM1(indice) With GFORREM(0)
Else
 Chgfmt [M]XFRAREM1(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_XFRAREM2
Onevent BEFORE_AREA Gosub AV_XFRAREM2 From W1PPLW
Return

$AV_XFRAREM2
## Action ALIFORREM
Call ALIFORREM(0,"","",1,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(1)<>""
 Chgfmt [M]XFRAREM2(indice) With GFORREM(1)
Else
 Chgfmt [M]XFRAREM2(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_XFRAREM3
Onevent BEFORE_AREA Gosub AV_XFRAREM3 From W1PPLW
Return

$AV_XFRAREM3
## Action ALIFORREM
Call ALIFORREM(0,"","",2,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(2)<>""
 Chgfmt [M]XFRAREM3(indice) With GFORREM(2)
Else
 Chgfmt [M]XFRAREM3(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_XFRAREM4
Onevent BEFORE_AREA Gosub AV_XFRAREM4 From W1PPLW
Return

$AV_XFRAREM4
## Action ALIFORREM
Call ALIFORREM(0,"","",3,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(3)<>""
 Chgfmt [M]XFRAREM4(indice) With GFORREM(3)
Else
 Chgfmt [M]XFRAREM4(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_XFRAREM5
Onevent BEFORE_AREA Gosub AV_XFRAREM5 From W1PPLW
Return

$AV_XFRAREM5
## Action ALIFORREM
Call ALIFORREM(0,"","",4,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(4)<>""
 Chgfmt [M]XFRAREM5(indice) With GFORREM(4)
Else
 Chgfmt [M]XFRAREM5(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_XFRAREM6
Onevent BEFORE_AREA Gosub AV_XFRAREM6 From W1PPLW
Return

$AV_XFRAREM6
## Action ALIFORREM
Call ALIFORREM(0,"","",5,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(5)<>""
 Chgfmt [M]XFRAREM6(indice) With GFORREM(5)
Else
 Chgfmt [M]XFRAREM6(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_XFRAREM7
Onevent BEFORE_AREA Gosub AV_XFRAREM7 From W1PPLW
Return

$AV_XFRAREM7
## Action ALIFORREM
Call ALIFORREM(0,"","",6,[M]CUR(nolign-1)) From TRTPRICE
If GFORREM(6)<>""
 Chgfmt [M]XFRAREM7(indice) With GFORREM(6)
Else
 Chgfmt [M]XFRAREM7(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$CHG_STY
Gosub CHG_STY From W2PPLW
Return

$TIT_COL
Gosub TIT_COL From W2PPLW
Return


