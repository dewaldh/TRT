#<AdxTL>@(#)0.0.0.0 $Revision$Class Lot
# Supervisor
## CRUD-CLASSE ## YLOT
# 2019-03-05 02:17:08 531

Gosub TEST From WMCR_YLOT : End

############################################################################################
## C : Subprog AINSERT(INSTANCE)
## D : Subprog ADELETE(INSTANCE)
## R : Subprog AREAD(INSTANCE,YLOTID)
## U : Subprog AUPDATE(INSTANCE)
############################################################################################
# YLOT : YLOT
# YLOTPRC : YLOT YLOTPRC
# YRMA : YLOT YRELMAST
# YLOTANL : YLOT YLOTANL
############################################################################################

############################################################################################
### AVARIABLES
############################################################################################
$AVARIABLES
[L]ASTATUS =max([L]ASTATUS,fmet YLOT._ADELERRORS([V]CST_ALLERRORS))
$_AVARIABLES
Local    Integer     A_LEVEL,A_I,A_NEWCOL,A_N1,A_N2,A_S2,A_N3,A_S3,A_N4,A_S4
Local    Integer    ASTATUS,A_RETIK,A_TYPMAJ,A_ASTALIN
Local    Char        A_STRSITE(GLONFCY),A_STRACC(GLONACS),CURPRO(50),A_PARENT(50),A_PATH(200),A_ABR(GLONABR),A_ERROR(250)
Local    Uuident    A_UUID

[L]A_LEVEL    = YLOT.ACTX.LEVWML
[L]ASTATUS  = 0

Onerrgo ERR_OPENTAB
If find(YLOT.ACTX.AFOLDER,nomap,"")>0
 Local File YLOT [YLOT]
 Local File YLOTPRC [YLPR]
 Local File YRELMAST [YRMA]
 Local File YLOTANL [YLNL]
Else
 Local File =YLOT.ACTX.AFOLDER+".YLOT" [YLOT]
 Local File =YLOT.ACTX.AFOLDER+".YLOTPRC" [YLPR]
 Local File =YLOT.ACTX.AFOLDER+".YRELMAST" [YRMA]
 Local File =YLOT.ACTX.AFOLDER+".YLOTANL" [YLNL]
Endif
Onerrgo
Return

$ERR_OPENTAB
[L]ASTATUS = max([L]ASTATUS,fmet YLOT.ASETERROR("",errp+"("+num$(errl)+")"-mess(6,123,1)-num$(errn)-errmes$(errn)-errm,[V]CST_AERROR))
Resume

############################################################################################
### Link
############################################################################################
$AOPEN_LINK
Gosub AVARIABLES
Link [YLOT] With
& [YLPR]YLPR = [F:YLOT]YLOTID,
& [YRMA]YRMA0 = [F:YLOT]YGUID,
& [YLNL]YLNL0 = [F:YLOT]YLOTID
& As [LNK_]
Return

############################################################################################
### YLOT(WYLOT)
############################################################################################
Funprog  _MAJSQL_YLOT(WYLOT)
Variable Instance WYLOT Using C_YLOT
Local Integer ASTATUS,A_I,A_J
Default File [F:YLOT]
If WYLOT.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLOT) From ASYRSUB
 SetInstance [F:YLOT] With WYLOT
 Write [F:YLOT]
 If fstat
  Call FSTA("YLOT",WYLOT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLOT.updTick = [F:YLOT]updTick
Elsif WYLOT.ASTALIN=[V]CST_ALL or WYLOT.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLOT) From ASYRSUB
 SetInstance [F:YLOT] With WYLOT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLOT,"YLOT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLOT]YLOT0 = [F:YLOT]YLOTID
 If fstat
  Call FSTA("YLOT",WYLOT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLOT.updTick = [F:YLOT]updTick
Elsif WYLOT.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLOT] With WYLOT
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLOT,"YLOT")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLOT]YLOT0 = [F:YLOT]YLOTID
 If fstat
  Call FSTA("YLOT",WYLOT,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLOTPRC(WYLPR)
############################################################################################
Funprog  _MAJSQL_YLOTPRC(WYLPR)
Variable Instance WYLPR Using C_YLOTPRC
Local Integer ASTATUS,A_I,A_J
Default File [F:YLPR]
If WYLPR.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLPR) From ASYRSUB
 SetInstance [F:YLPR] With WYLPR
 Write [F:YLPR]
 If fstat
  Call FSTA("YLPR",WYLPR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLPR.updTick = [F:YLPR]updTick
Elsif WYLPR.ASTALIN=[V]CST_ALL or WYLPR.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLPR) From ASYRSUB
 SetInstance [F:YLPR] With WYLPR
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLPR,"YLOTPRC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLPR]YLPR = [F:YLPR]YLOTID;[F:YLPR]YPRCID
 If fstat
  Call FSTA("YLPR",WYLPR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLPR.updTick = [F:YLPR]updTick
Elsif WYLPR.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLPR] With WYLPR
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLPR,"YLOTPRC")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLPR]YLPR = [F:YLPR]YLOTID;[F:YLPR]YPRCID
 If fstat
  Call FSTA("YLPR",WYLPR,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YRELMAST(WYRMA)
############################################################################################
Funprog  _MAJSQL_YRELMAST(WYRMA)
Variable Instance WYRMA Using C_YRMA
Local Integer ASTATUS,A_I,A_J
Default File [F:YRMA]
If WYRMA.ASTALIN=[V]CST_ANEW
 Call INICRE(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 Write [F:YRMA]
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ALL or WYRMA.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYRMA) From ASYRSUB
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYRMA.updTick = [F:YRMA]updTick
Elsif WYRMA.ASTALIN=[V]CST_ADEL
 SetInstance [F:YRMA] With WYRMA
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYRMA,"YRELMAST")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YRMA]YRMA0 = [F:YRMA]YGUID;[F:YRMA]YLIGID
 If fstat
  Call FSTA("YRMA",WYRMA,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK

############################################################################################
### YLOTANL(WYLNL)
############################################################################################
Funprog  _MAJSQL_YLOTANL(WYLNL)
Variable Instance WYLNL Using C_YLOTANL
Local Integer ASTATUS,A_I,A_J
Default File [F:YLNL]
If WYLNL.ASTALIN=[V]CST_ANEW
 Call INICRE(WYLNL) From ASYRSUB
 SetInstance [F:YLNL] With WYLNL
 Write [F:YLNL]
 If fstat
  Call FSTA("YLNL",WYLNL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLNL.updTick = [F:YLNL]updTick
Elsif WYLNL.ASTALIN=[V]CST_ALL or WYLNL.ASTALIN=[V]CST_AUPD
 Call INIUPD(WYLNL) From ASYRSUB
 SetInstance [F:YLNL] With WYLNL
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLNL,"YLOTANL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 RewriteByKey [F:YLNL]YLNL0 = [F:YLNL]YLOTID;[F:YLNL]YANLID
 If fstat
  Call FSTA("YLNL",WYLNL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
 WYLNL.updTick = [F:YLNL]updTick
Elsif WYLNL.ASTALIN=[V]CST_ADEL
 SetInstance [F:YLNL] With WYLNL
 [L]ASTATUS = func ASYRFNC._ACONTROL_DATASTABLE(WYLNL,"YLOTANL")
 If [L]ASTATUS>=[V]CST_AERROR : End [L]ASTATUS : Endif
 DeleteByKey [F:YLNL]YLNL0 = [F:YLNL]YLOTID;[F:YLNL]YANLID
 If fstat
  Call FSTA("YLNL",WYLNL,[L]ASTATUS) From ASYRSUB
  End [L]ASTATUS
 Endif
Endif
End [V]CST_AOK



