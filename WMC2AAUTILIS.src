#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Supervisor
## ACLA-CLASSE ## AAUTILIS
# 2018-08-27 12:18:44 339

####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 31 : NEWPAS New password ( Field A 24)
####################################################################

$SET_NEWPAS
If [L]_AOLDVAL<>this.NEWPAS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NEWPAS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NEWPAS
 Gosub PROPAGATE_NEWPAS
Endif
Return

$INIT_NEWPAS
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "NEWPAS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NEWPAS
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "NEWPAS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NEWPAS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NEWPAS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NEWPAS
[L]CURPRO = "NEWPAS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NEWPAS,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NEWPAS
[L]CURPRO = "NEWPAS"
Return

$_AOTHERS_NEWPAS
[L]CURPRO = "NEWPAS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NEWPAS
[L]CURPRO = "NEWPAS"
Return

$PROPAGATE_NEWPAS
this.isReadonly = 0
[L]CURPRO = "NEWPAS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NEWPAS
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "NEWPAS"
$_LNKPRO_NEWPAS
Return


####################################################################
# 32 : BPAADD Default address ( Field ADR 5)
####################################################################

$SET_BPAADD
If [L]_AOLDVAL<>this.BPAADD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPAADD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPAADD
 Gosub PROPAGATE_BPAADD
Endif
Return

$INIT_BPAADD
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "BPAADD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BPAADD
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "BPAADD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPAADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPAADD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPAADD
[L]CURPRO = "BPAADD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BPAADD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPAADD
[L]CURPRO = "BPAADD"
If vireblc(this.BPAADD,2)<>vireblc(format$("K:5c",this.BPAADD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BPAADD
[L]CURPRO = "BPAADD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPAADD
[L]CURPRO = "BPAADD"
If vireblc(this.BPAADD,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPADR.ACTRLREF(this,"BPAADD",this.BPAADD,4,this.USR,this.BPAADD,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.BPAADD<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_BPAADD
this.isReadonly = 0
[L]CURPRO = "BPAADD"
Gosub _LNKPRO_BPAADD
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPAADD
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "BPAADD"
$_LNKPRO_BPAADD
If vireblc(this.BPAADD,2)<>""
 # Link BPADDRESS
 Local File BPADDRESS [WBPA]
 Read [F:WBPA]BPA0 = 4;this.USR;this.BPAADD
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("BPAADD","$description",[F:WBPA]BPADES)
 Endif
 LogicClose File [WBPA]
Endif
Return


####################################################################
# 33 : BIDNUM Bank ID number ( Field BID 30)
####################################################################

$SET_BIDNUM
If [L]_AOLDVAL<>this.BIDNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BIDNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BIDNUM
 Gosub PROPAGATE_BIDNUM
Endif
Return

$INIT_BIDNUM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "BIDNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BIDNUM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "BIDNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BIDNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BIDNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BIDNUM
[L]CURPRO = "BIDNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BIDNUM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BIDNUM
[L]CURPRO = "BIDNUM"
If vireblc(this.BIDNUM,2)<>vireblc(format$("K:30X",this.BIDNUM),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BIDNUM
[L]CURPRO = "BIDNUM"
[L]ASTATUS =  func ASYRTRTATY.CONTROLBID(this,"BIDNUM",this.BIDNUM,this.CRY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BIDNUM
[L]CURPRO = "BIDNUM"
Return

$PROPAGATE_BIDNUM
this.isReadonly = 0
[L]CURPRO = "BIDNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BIDNUM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "BIDNUM"
$_LNKPRO_BIDNUM
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATBID(this,"BIDNUM",this.BIDNUM,[L]AFORMAT,this.CRY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("BIDNUM","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 34 : USRPRT User model ( Field AUS 5)
####################################################################

$SET_USRPRT
If [L]_AOLDVAL<>this.USRPRT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRPRT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRPRT
 Gosub PROPAGATE_USRPRT
Endif
Return

$INIT_USRPRT
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "USRPRT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USRPRT
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "USRPRT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRPRT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRPRT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRPRT
[L]CURPRO = "USRPRT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USRPRT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRPRT
[L]CURPRO = "USRPRT"
If vireblc(this.USRPRT,2)<>vireblc(format$("K:5B",this.USRPRT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USRPRT
[L]CURPRO = "USRPRT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRPRT
[L]CURPRO = "USRPRT"
Return

$PROPAGATE_USRPRT
this.isReadonly = 0
[L]CURPRO = "USRPRT"
Gosub _LNKPRO_USRPRT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRPRT
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "USRPRT"
$_LNKPRO_USRPRT
If vireblc(this.USRPRT,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.USRPRT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USRPRT","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USRPRT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 35 : TIT Title bar ( Field AFR 250)
####################################################################

$SET_TIT
If [L]_AOLDVAL<>this.TIT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TIT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TIT
 Gosub PROPAGATE_TIT
Endif
Return

$INIT_TIT
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "TIT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TIT
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "TIT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TIT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TIT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TIT
[L]CURPRO = "TIT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TIT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TIT
[L]CURPRO = "TIT"
Return

$_AOTHERS_TIT
[L]CURPRO = "TIT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TIT
[L]CURPRO = "TIT"
Return

$PROPAGATE_TIT
this.isReadonly = 0
[L]CURPRO = "TIT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TIT
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "TIT"
$_LNKPRO_TIT
Return


####################################################################
# 36 : ADDNAM AD reference ( Field A 250)
####################################################################

$SET_ADDNAM
If [L]_AOLDVAL<>this.ADDNAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADDNAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADDNAM
 Gosub PROPAGATE_ADDNAM
Endif
Return

$INIT_ADDNAM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "ADDNAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADDNAM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "ADDNAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADDNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADDNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADDNAM
[L]CURPRO = "ADDNAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ADDNAM,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADDNAM
[L]CURPRO = "ADDNAM"
Return

$_AOTHERS_ADDNAM
[L]CURPRO = "ADDNAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADDNAM
[L]CURPRO = "ADDNAM"
Return

$PROPAGATE_ADDNAM
this.isReadonly = 0
[L]CURPRO = "ADDNAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADDNAM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "ADDNAM"
$_LNKPRO_ADDNAM
Return


####################################################################
# 37 : PRFXTD Safe X3 WAS profile ( Field AYH 5)
####################################################################

$SET_PRFXTD
If [L]_AOLDVAL<>this.PRFXTD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRFXTD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRFXTD
 Gosub PROPAGATE_PRFXTD
Endif
Return

$INIT_PRFXTD
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "PRFXTD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRFXTD
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "PRFXTD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRFXTD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRFXTD                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRFXTD
[L]CURPRO = "PRFXTD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRFXTD,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRFXTD
[L]CURPRO = "PRFXTD"
If vireblc(this.PRFXTD,2)<>vireblc(format$("K:5c",this.PRFXTD),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRFXTD
[L]CURPRO = "PRFXTD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRFXTD
[L]CURPRO = "PRFXTD"
Return

$PROPAGATE_PRFXTD
this.isReadonly = 0
[L]CURPRO = "PRFXTD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRFXTD
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "PRFXTD"
$_LNKPRO_PRFXTD
Return


####################################################################
# 38 : ARCPRF Profile code ( Field ARU 10)
####################################################################

$SET_ARCPRF
If [L]_AOLDVAL<>this.ARCPRF
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ARCPRF
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ARCPRF
 Gosub PROPAGATE_ARCPRF
Endif
Return

$INIT_ARCPRF
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "ARCPRF"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ARCPRF
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "ARCPRF"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ARCPRF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ARCPRF                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ARCPRF
[L]CURPRO = "ARCPRF"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ARCPRF,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ARCPRF
[L]CURPRO = "ARCPRF"
If vireblc(this.ARCPRF,2)<>vireblc(format$("K:10B",this.ARCPRF),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ARCPRF
[L]CURPRO = "ARCPRF"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ARCPRF
[L]CURPRO = "ARCPRF"
Return

$PROPAGATE_ARCPRF
this.isReadonly = 0
[L]CURPRO = "ARCPRF"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ARCPRF
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "ARCPRF"
$_LNKPRO_ARCPRF
Return


####################################################################
# 39 : FLGPASPRV Provisional ( Field Local menu number 1)
####################################################################

$SET_FLGPASPRV
If [L]_AOLDVAL<>this.FLGPASPRV
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGPASPRV
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGPASPRV
 Gosub PROPAGATE_FLGPASPRV
Endif
Return

$INIT_FLGPASPRV
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "FLGPASPRV"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGPASPRV=0 and fmet this.AGETATTRIBUTE("FLGPASPRV","$isMandatory")="true"
 this.FLGPASPRV = 1
Endif
Return
 
$CONTROL_FLGPASPRV
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "FLGPASPRV"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGPASPRV             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGPASPRV             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGPASPRV
[L]CURPRO = "FLGPASPRV"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGPASPRV=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGPASPRV
[L]CURPRO = "FLGPASPRV"
If this.FLGPASPRV<0 or this.FLGPASPRV>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGPASPRV)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGPASPRV
[L]CURPRO = "FLGPASPRV"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGPASPRV
[L]CURPRO = "FLGPASPRV"
Return

$PROPAGATE_FLGPASPRV
this.isReadonly = 0
[L]CURPRO = "FLGPASPRV"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGPASPRV
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "FLGPASPRV"
$_LNKPRO_FLGPASPRV
Return


####################################################################
# 40 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 41 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 42 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 44 : AUSPIC Picture ( Field ABIMG 1)
####################################################################

$GET_AUSPIC
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUSPIC"
Local Char _CNT(100)
Local Tinyint _EXI : [L]_EXI=1
[L]ASTATUS = fmet this.AREAD_BLB("AUSPIC",
& "AUSPIC"
& +[V]CST_AURLSEPLOB+this.USR
& +[V]CST_AURLSEPLOB+""
& +[V]CST_AURLSEPLOB+""
& ,[L]_CNT,this.AUSPIC)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isLoaded")<>"true"
 [L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
Endif
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_AUSPIC
If fmet this.AGETATTRIBUTE("AUSPIC","$isLoaded")<>"true" or [L]_AOLDVAL<>this.AUSPIC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUSPIC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If fmet this.AGETATTRIBUTE("AUSPIC","$isLoaded")<>"true" or [L]_AOLDVAL<>this.AUSPIC
 Gosub PROPAGATE_AUSPIC
Endif
Return

$INIT_AUSPIC
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUSPIC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUSPIC
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUSPIC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUSPIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUSPIC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUSPIC
[L]CURPRO = "AUSPIC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & len(this.AUSPIC)=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUSPIC
[L]CURPRO = "AUSPIC"
Return

$_AOTHERS_AUSPIC
[L]CURPRO = "AUSPIC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUSPIC
[L]CURPRO = "AUSPIC"
Return

$PROPAGATE_AUSPIC
this.isReadonly = 0
[L]CURPRO = "AUSPIC"
[L]ASTATUS = fmet this.ASETATTRIBUTE([L]CURPRO,"$isLoaded","true")
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUSPIC
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "AUSPIC"
$_LNKPRO_AUSPIC
Local Tinyint _EXI : [L]_EXI=1
Gosub READ_EXI_AUSPIC From WMC0AAUTILIS
[L]ASTATUS = fmet this.ASETATTRIBUTE("AUSPIC","$isLobFound",func ASYRSUB.BOOLEAN_TO_SYR([L]_EXI+1))
Return


####################################################################
# 47 : CRY Country ( Field CRY 3)
####################################################################

$SET_CRY
If [L]_AOLDVAL<>this.CRY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CRY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CRY
 Gosub PROPAGATE_CRY
Endif
Return

$INIT_CRY
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "CRY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CRY
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "CRY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CRY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CRY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CRY
[L]CURPRO = "CRY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CRY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CRY
[L]CURPRO = "CRY"
If vireblc(this.CRY,2)<>vireblc(format$("K:3c",this.CRY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CRY
[L]CURPRO = "CRY"
If vireblc(this.CRY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCRY.ACTRLREF(this,"CRY",this.CRY,this.CRY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CRY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CRY
[L]CURPRO = "CRY"
Return

$PROPAGATE_CRY
this.isReadonly = 0
[L]CURPRO = "CRY"
Gosub _LNKPRO_CRY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CRY
Gosub DECLARE_VAR From WMC0AAUTILIS
[L]CURPRO = "CRY"
$_LNKPRO_CRY
If vireblc(this.CRY,2)<>""
 # Link TABCOUNTRY
 Local File TABCOUNTRY [WTCY]
 Read [F:WTCY]TCY0 = this.CRY
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCOUNTRY" & ZONE="CRYDES" & IDENT1=[F:WTCY]CRY & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CRY","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABCOUNTRY" & ZONE="CRYDES" & IDENT1=[F:WTCY]CRY & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CRY","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTCY]
Endif
Return




