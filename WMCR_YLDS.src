#<AdxTL>@(#)0.0.0.0 $Revision$Class Margin scheme
# Supervisor
## CRUD-CLASSE ## YLDS
# 2019-05-14 13:53:15 778


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File YLPMARGSCH [YLDM_]

If !SILENCE : Call TRACE("2 --> Local Instance C_YLDS") From ASYRCOM : Endif
Local Instance YLDS Using C_YLDS

If !SILENCE : Call TRACE("3 --> New Instance C_YLDS") From ASYRCOM : Endif
YLDS = NewInstance C_YLDS AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [YLDM_]YLDM0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of YLDS") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet YLDS.AREAD([YLDM_]YLNDPURID,[YLDM_]YLINE))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("YLDS.YLNDPURID ="-num$(YLDS.YLNDPURID)) From ASYRCOM
 Call TRACE("YLDS.YLINE ="-num$(YLDS.YLINE)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(YLDS.AKEYS)
  Call TRACE("-"-num$(I)-":"-YLDS.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [YLDM_]
FreeGroup YLDS
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(YLDS,ACLE,ASTATUS,_ETAG)
Variable Instance YLDS Using C_YLDS
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _YLNDPURID(15)
Local Shortint _YLINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YLNDPURID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YLINE = val([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File YLPMARGSCH [YLDM]
Default File [F:YLDM]
Read [F:YLDM]YLDM0 = [L]_YLNDPURID;[L]_YLINE
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:YLDM]UPDTICK)>0
 [L]_ETAG = num$([F:YLDM]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(YLDS,ACLE,ASTATUS)
Variable Instance YLDS Using C_YLDS
Value Char ACLE
Variable Integer ASTATUS
Local Char _YLNDPURID(15)
Local Shortint _YLINE
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_YLNDPURID = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_YLINE = val([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet YLDS.AREAD([L]_YLNDPURID,[L]_YLINE))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(YLDS,_YLNDPURID,_YLINE,ASTATUS)
Variable Instance YLDS Using C_YLDS
Value Char _YLNDPURID
Value Shortint _YLINE
Variable Integer ASTATUS

If YLDS = null : End : Endif

Gosub AVARIABLES From WMC00YLDS
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If YLDS.APARENT=null
 [L]A_I = YLDS.freeSnapshot
 YLDS.snapshotEnabled = 0
 YLDS.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & YLDS.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet YLDS._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If YLDS.APARENT=null
 YLDS.snapshotEnabled = 1
 YLDS.setAccessorEnabled = 1
Endif
LogicClose File [YLDM]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet YLDS._ACTION_PARAM("AREAD_BEFORE",[L]_YLNDPURID,[L]_YLINE))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:YLDM]
Read [F:YLDM]YLDM0 = [L]_YLNDPURID;[L]_YLINE
If fstat
[L]A_ERROR = [L]_YLNDPURID+"~"+num$([L]_YLINE)
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(YLDS,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:YLDM]AUUID)>0 & [F:YLDM]AUUID=NullUuid
 [F:YLDM]AUUID = getUuid
Endif
SetInstance YLDS With [F:YLDM]
YLDS.ASTALIN = [V]CST_ALL

[L]ASTATUS = max([L]ASTATUS,fmet YLDS.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif


Return



