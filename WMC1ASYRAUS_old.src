#<AdxTL>@(#)0.0.0.0 $Revision$Class Users
# Sage X3 supervisor
## ACLA-CLASSE ## ASYRAUS
# 2018-06-20 06:33:48 051


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : USR Code ( Field AUS 5)
####################################################################

$SET_USR
If [L]_AOLDVAL<>this.USR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USR
 Gosub PROPAGATE_USR
Endif
Return

$INIT_USR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_USR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USR                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USR
[L]CURPRO = "USR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.USR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USR
[L]CURPRO = "USR"
If vireblc(this.USR,2)<>vireblc(format$("K:5B",this.USR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_USR
[L]CURPRO = "USR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USR
[L]CURPRO = "USR"
Return

$PROPAGATE_USR
this.isReadonly = 0
[L]CURPRO = "USR"
Gosub _LNKPRO_USR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USR"
$_LNKPRO_USR
If vireblc(this.USR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.USR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("USR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return

$_ALOADATTRIBUTE_USR
[L]ASTATUS = fmet this.ASETATTRIBUTE("USR","$isMandatory","true")
Return


####################################################################
# 2 : PRENAME First name ( Field A 20)
####################################################################

$SET_PRENAME
If [L]_AOLDVAL<>this.PRENAME
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRENAME
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRENAME
 Gosub PROPAGATE_PRENAME
Endif
Return

$INIT_PRENAME
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRENAME"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRENAME
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRENAME"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRENAME               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRENAME               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRENAME
[L]CURPRO = "PRENAME"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRENAME,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRENAME
[L]CURPRO = "PRENAME"
Return

$_AOTHERS_PRENAME
[L]CURPRO = "PRENAME"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRENAME
[L]CURPRO = "PRENAME"
Return

$PROPAGATE_PRENAME
this.isReadonly = 0
[L]CURPRO = "PRENAME"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRENAME
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRENAME"
$_LNKPRO_PRENAME
Return


####################################################################
# 3 : SURNAME Last name ( Field NAM 35)
####################################################################

$SET_SURNAME
If [L]_AOLDVAL<>this.SURNAME
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SURNAME
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SURNAME
 Gosub PROPAGATE_SURNAME
Endif
Return

$INIT_SURNAME
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "SURNAME"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_SURNAME
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "SURNAME"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SURNAME               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SURNAME               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SURNAME
[L]CURPRO = "SURNAME"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.SURNAME,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SURNAME
[L]CURPRO = "SURNAME"
If vireblc(this.SURNAME,2)<>vireblc(format$("K:35X",this.SURNAME),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_SURNAME
[L]CURPRO = "SURNAME"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SURNAME
[L]CURPRO = "SURNAME"
Return

$PROPAGATE_SURNAME
this.isReadonly = 0
[L]CURPRO = "SURNAME"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SURNAME
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "SURNAME"
$_LNKPRO_SURNAME
Return


####################################################################
# 4 : LOGIN Login ( Field ALO 20)
####################################################################

$SET_LOGIN
If [L]_AOLDVAL<>this.LOGIN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LOGIN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LOGIN
 Gosub PROPAGATE_LOGIN
Endif
Return

$INIT_LOGIN
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "LOGIN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LOGIN
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "LOGIN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LOGIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LOGIN                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LOGIN
[L]CURPRO = "LOGIN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LOGIN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LOGIN
[L]CURPRO = "LOGIN"
If vireblc(this.LOGIN,2)<>vireblc(format$("K:20X",this.LOGIN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LOGIN
[L]CURPRO = "LOGIN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LOGIN
[L]CURPRO = "LOGIN"
Return

$PROPAGATE_LOGIN
this.isReadonly = 0
[L]CURPRO = "LOGIN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LOGIN
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "LOGIN"
$_LNKPRO_LOGIN
Return

$_ALOADATTRIBUTE_LOGIN
[L]ASTATUS = fmet this.ASETATTRIBUTE("LOGIN","$isMandatory","true")
Return


####################################################################
# 5 : USRCONNECT X3 connection ( Field Local menu number 1)
####################################################################

$SET_USRCONNECT
If [L]_AOLDVAL<>this.USRCONNECT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRCONNECT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRCONNECT
 Gosub PROPAGATE_USRCONNECT
Endif
Return

$INIT_USRCONNECT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USRCONNECT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USRCONNECT=0 and fmet this.AGETATTRIBUTE("USRCONNECT","$isMandatory")="true"
 this.USRCONNECT = 1
Endif
Return
 
$CONTROL_USRCONNECT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USRCONNECT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRCONNECT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRCONNECT            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRCONNECT
[L]CURPRO = "USRCONNECT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USRCONNECT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRCONNECT
[L]CURPRO = "USRCONNECT"
If this.USRCONNECT<0 or this.USRCONNECT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.USRCONNECT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_USRCONNECT
[L]CURPRO = "USRCONNECT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRCONNECT
[L]CURPRO = "USRCONNECT"
Return

$PROPAGATE_USRCONNECT
this.isReadonly = 0
[L]CURPRO = "USRCONNECT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRCONNECT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USRCONNECT"
$_LNKPRO_USRCONNECT
Return


####################################################################
# 6 : USRCONXTD Web services connection ( Field Local menu number 1)
####################################################################

$SET_USRCONXTD
If [L]_AOLDVAL<>this.USRCONXTD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USRCONXTD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USRCONXTD
 Gosub PROPAGATE_USRCONXTD
Endif
Return

$INIT_USRCONXTD
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USRCONXTD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USRCONXTD=0 and fmet this.AGETATTRIBUTE("USRCONXTD","$isMandatory")="true"
 this.USRCONXTD = 1
Endif
Return
 
$CONTROL_USRCONXTD
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USRCONXTD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USRCONXTD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USRCONXTD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USRCONXTD
[L]CURPRO = "USRCONXTD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USRCONXTD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USRCONXTD
[L]CURPRO = "USRCONXTD"
If this.USRCONXTD<0 or this.USRCONXTD>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.USRCONXTD)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_USRCONXTD
[L]CURPRO = "USRCONXTD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USRCONXTD
[L]CURPRO = "USRCONXTD"
Return

$PROPAGATE_USRCONXTD
this.isReadonly = 0
[L]CURPRO = "USRCONXTD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USRCONXTD
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "USRCONXTD"
$_LNKPRO_USRCONXTD
Return


####################################################################
# 7 : PASSE Password ( Field A 10)
####################################################################

$SET_PASSE
If [L]_AOLDVAL<>this.PASSE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PASSE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PASSE
 Gosub PROPAGATE_PASSE
Endif
Return

$INIT_PASSE
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PASSE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PASSE
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PASSE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PASSE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PASSE                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PASSE
[L]CURPRO = "PASSE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PASSE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PASSE
[L]CURPRO = "PASSE"
Return

$_AOTHERS_PASSE
[L]CURPRO = "PASSE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PASSE
[L]CURPRO = "PASSE"
Return

$PROPAGATE_PASSE
this.isReadonly = 0
[L]CURPRO = "PASSE"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PASSE
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PASSE"
$_LNKPRO_PASSE
Return


####################################################################
# 8 : PASSDAT Validity date ( Field D)
####################################################################

$SET_PASSDAT
If [L]_AOLDVAL<>this.PASSDAT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PASSDAT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PASSDAT
 Gosub PROPAGATE_PASSDAT
Endif
Return

$INIT_PASSDAT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PASSDAT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PASSDAT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PASSDAT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PASSDAT               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PASSDAT               : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PASSDAT
[L]CURPRO = "PASSDAT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.PASSDAT=[0/0/0]
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PASSDAT
[L]CURPRO = "PASSDAT"
Return

$_AOTHERS_PASSDAT
[L]CURPRO = "PASSDAT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PASSDAT
[L]CURPRO = "PASSDAT"
Return

$PROPAGATE_PASSDAT
this.isReadonly = 0
[L]CURPRO = "PASSDAT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PASSDAT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PASSDAT"
$_LNKPRO_PASSDAT
Return


####################################################################
# 9 : ALLACS All access codes ( Field Local menu number 1)
####################################################################

$SET_ALLACS
If [L]_AOLDVAL<>this.ALLACS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ALLACS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ALLACS
 Gosub PROPAGATE_ALLACS
Endif
Return

$INIT_ALLACS
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ALLACS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ALLACS=0 and fmet this.AGETATTRIBUTE("ALLACS","$isMandatory")="true"
 this.ALLACS = 1
Endif
Return
 
$CONTROL_ALLACS
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ALLACS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ALLACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ALLACS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ALLACS
[L]CURPRO = "ALLACS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ALLACS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ALLACS
[L]CURPRO = "ALLACS"
If this.ALLACS<0 or this.ALLACS>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ALLACS)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ALLACS
[L]CURPRO = "ALLACS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ALLACS
[L]CURPRO = "ALLACS"
Return

$PROPAGATE_ALLACS
this.isReadonly = 0
[L]CURPRO = "ALLACS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ALLACS
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ALLACS"
$_LNKPRO_ALLACS
Return


####################################################################
# 10 : INTUSR Name ( Field AX3)
####################################################################

$GET_INTUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "INTUSR"
this.INTUSR = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_INTUSR
If [L]_AOLDVAL<>this.INTUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INTUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INTUSR
 Gosub PROPAGATE_INTUSR
Endif
Return

$INIT_INTUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "INTUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_INTUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "INTUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INTUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INTUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INTUSR
[L]CURPRO = "INTUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.INTUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INTUSR
[L]CURPRO = "INTUSR"
If vireblc(fmet this.AGETTEXTRA("INTUSR"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("INTUSR")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_INTUSR
[L]CURPRO = "INTUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INTUSR
[L]CURPRO = "INTUSR"
Return

$PROPAGATE_INTUSR
this.isReadonly = 0
[L]CURPRO = "INTUSR"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.INTUSR)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INTUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "INTUSR"
$_LNKPRO_INTUSR
Return


####################################################################
# 11 : ADDEML Workflow email address ( Field MAI 80)
####################################################################

$SET_ADDEML
If [L]_AOLDVAL<>this.ADDEML
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ADDEML
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ADDEML
 Gosub PROPAGATE_ADDEML
Endif
Return

$INIT_ADDEML
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ADDEML"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ADDEML
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ADDEML"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ADDEML                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ADDEML                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ADDEML
[L]CURPRO = "ADDEML"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ADDEML,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ADDEML
[L]CURPRO = "ADDEML"
If vireblc(this.ADDEML,2)<>vireblc(format$("K:80X",this.ADDEML),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ADDEML
[L]CURPRO = "ADDEML"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ADDEML
[L]CURPRO = "ADDEML"
Return

$PROPAGATE_ADDEML
this.isReadonly = 0
[L]CURPRO = "ADDEML"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ADDEML
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ADDEML"
$_LNKPRO_ADDEML
Return


####################################################################
# 12 : NOMUSR Name ( Field DES 30)
####################################################################

$SET_NOMUSR
If [L]_AOLDVAL<>this.NOMUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_NOMUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.NOMUSR
 Gosub PROPAGATE_NOMUSR
Endif
Return

$INIT_NOMUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "NOMUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_NOMUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "NOMUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_NOMUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_NOMUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_NOMUSR
[L]CURPRO = "NOMUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.NOMUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_NOMUSR
[L]CURPRO = "NOMUSR"
If vireblc(this.NOMUSR,2)<>vireblc(format$("K:30X",this.NOMUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_NOMUSR
[L]CURPRO = "NOMUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_NOMUSR
[L]CURPRO = "NOMUSR"
Return

$PROPAGATE_NOMUSR
this.isReadonly = 0
[L]CURPRO = "NOMUSR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_NOMUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "NOMUSR"
$_LNKPRO_NOMUSR
Return


####################################################################
# 13 : CODMET Profession code ( Field AME 4)
####################################################################

$SET_CODMET
If [L]_AOLDVAL<>this.CODMET
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODMET
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODMET
 Gosub PROPAGATE_CODMET
Endif
Return

$INIT_CODMET
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CODMET"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODMET
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CODMET"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODMET                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODMET                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODMET
[L]CURPRO = "CODMET"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODMET,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODMET
[L]CURPRO = "CODMET"
If vireblc(this.CODMET,2)<>vireblc(format$("K:4c",this.CODMET),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CODMET
[L]CURPRO = "CODMET"
If vireblc(this.CODMET,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAME.ACTRLREF(this,"CODMET",this.CODMET,this.CODMET,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CODMET<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODMET
[L]CURPRO = "CODMET"
Return

$PROPAGATE_CODMET
this.isReadonly = 0
[L]CURPRO = "CODMET"
Gosub _LNKPRO_CODMET
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODMET
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CODMET"
$_LNKPRO_CODMET
If vireblc(this.CODMET,2)<>""
 # Link AMETUTI
 Local File AMETUTI [WAME]
 Read [F:WAME]AME0 = this.CODMET
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AMETUTI" & ZONE="INTMET" & IDENT1=[F:WAME]CODMET & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CODMET","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAME]
Endif
Return


####################################################################
# 14 : PRFMEN Menu profile ( Field APM 5)
####################################################################

$SET_PRFMEN
If [L]_AOLDVAL<>this.PRFMEN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRFMEN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRFMEN
 Gosub PROPAGATE_PRFMEN
Endif
Return

$INIT_PRFMEN
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRFMEN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRFMEN
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRFMEN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRFMEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRFMEN                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRFMEN
[L]CURPRO = "PRFMEN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRFMEN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRFMEN
[L]CURPRO = "PRFMEN"
If vireblc(this.PRFMEN,2)<>vireblc(format$("K:5c",this.PRFMEN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRFMEN
[L]CURPRO = "PRFMEN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRFMEN
[L]CURPRO = "PRFMEN"
If vireblc(this.PRFMEN,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAPM.ACTRLREF(this,"PRFMEN",this.PRFMEN,this.PRFMEN,0,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PRFMEN<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_PRFMEN
this.isReadonly = 0
[L]CURPRO = "PRFMEN"
Gosub _LNKPRO_PRFMEN
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRFMEN
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRFMEN"
$_LNKPRO_PRFMEN
If vireblc(this.PRFMEN,2)<>""
 # Link APROFIL
 Local File APROFIL [WAPF]
 Read [F:WAPF]APF1 = this.PRFMEN;0
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="APROFIL" & ZONE="INTPRF" & IDENT1="0" & IDENT2=[F:WAPF]CODPRF & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PRFMEN","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAPF]
Endif
Return


####################################################################
# 15 : PRFFCT Function profile ( Field AFT 5)
####################################################################

$SET_PRFFCT
If [L]_AOLDVAL<>this.PRFFCT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PRFFCT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PRFFCT
 Gosub PROPAGATE_PRFFCT
Endif
Return

$INIT_PRFFCT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRFFCT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PRFFCT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRFFCT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PRFFCT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PRFFCT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PRFFCT
[L]CURPRO = "PRFFCT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PRFFCT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PRFFCT
[L]CURPRO = "PRFFCT"
If vireblc(this.PRFFCT,2)<>vireblc(format$("K:5c",this.PRFFCT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PRFFCT
[L]CURPRO = "PRFFCT"
If vireblc(this.PRFFCT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPAFT.ACTRLREF(this,"PRFFCT",this.PRFFCT,this.PRFFCT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PRFFCT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PRFFCT
[L]CURPRO = "PRFFCT"
Return

$PROPAGATE_PRFFCT
this.isReadonly = 0
[L]CURPRO = "PRFFCT"
Gosub _LNKPRO_PRFFCT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PRFFCT
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "PRFFCT"
$_LNKPRO_PRFFCT
If vireblc(this.PRFFCT,2)<>""
 # Link AFCTFCT
 Local File AFCTFCT [WAFT]
 Read [F:WAFT]AFT0 = this.PRFFCT
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AFCTFCT" & ZONE="INTPRF" & IDENT1=[F:WAFT]PRFCOD & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PRFFCT","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAFT]
Endif
Return


####################################################################
# 16 : ENAFLG Active in selec. ( Field Local menu number 1)
####################################################################

$SET_ENAFLG
If [L]_AOLDVAL<>this.ENAFLG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ENAFLG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ENAFLG
 Gosub PROPAGATE_ENAFLG
Endif
Return

$INIT_ENAFLG
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ENAFLG"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ENAFLG=0 and fmet this.AGETATTRIBUTE("ENAFLG","$isMandatory")="true"
 this.ENAFLG = 1
Endif
Return
 
$CONTROL_ENAFLG
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ENAFLG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ENAFLG                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ENAFLG
[L]CURPRO = "ENAFLG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ENAFLG=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ENAFLG
[L]CURPRO = "ENAFLG"
If this.ENAFLG<0 or this.ENAFLG>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ENAFLG)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ENAFLG
[L]CURPRO = "ENAFLG"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ENAFLG
[L]CURPRO = "ENAFLG"
Return

$PROPAGATE_ENAFLG
this.isReadonly = 0
[L]CURPRO = "ENAFLG"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ENAFLG
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "ENAFLG"
$_LNKPRO_ENAFLG
Return


####################################################################
# 17 : TELEP Telephone ( Field TEL 20)
####################################################################

$SET_TELEP
If [L]_AOLDVAL<>this.TELEP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_TELEP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.TELEP
 Gosub PROPAGATE_TELEP
Endif
Return

$INIT_TELEP
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "TELEP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_TELEP
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "TELEP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_TELEP                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_TELEP                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_TELEP
[L]CURPRO = "TELEP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.TELEP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_TELEP
[L]CURPRO = "TELEP"
If vireblc(this.TELEP,2)<>vireblc(format$("K:20X",this.TELEP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_TELEP
[L]CURPRO = "TELEP"
[L]ASTATUS =  func ASYRTRTATY.CONTROLTEL(this,"TELEP",this.TELEP,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_TELEP
[L]CURPRO = "TELEP"
Return

$PROPAGATE_TELEP
this.isReadonly = 0
[L]CURPRO = "TELEP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_TELEP
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "TELEP"
$_LNKPRO_TELEP
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATTEL(this,"TELEP",this.TELEP,[L]AFORMAT,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("TELEP","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 18 : FAX Fax ( Field TEL 20)
####################################################################

$SET_FAX
If [L]_AOLDVAL<>this.FAX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FAX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FAX
 Gosub PROPAGATE_FAX
Endif
Return

$INIT_FAX
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "FAX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FAX
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "FAX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FAX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FAX                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FAX
[L]CURPRO = "FAX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FAX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FAX
[L]CURPRO = "FAX"
If vireblc(this.FAX,2)<>vireblc(format$("K:20X",this.FAX),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FAX
[L]CURPRO = "FAX"
[L]ASTATUS =  func ASYRTRTATY.CONTROLTEL(this,"FAX",this.FAX,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FAX
[L]CURPRO = "FAX"
Return

$PROPAGATE_FAX
this.isReadonly = 0
[L]CURPRO = "FAX"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FAX
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "FAX"
$_LNKPRO_FAX
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATTEL(this,"FAX",this.FAX,[L]AFORMAT,AVOID.ACHAR)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("FAX","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 19 : CREDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_CREDATTIM
If [L]_AOLDVAL<>this.CREDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREDATTIM
 Gosub PROPAGATE_CREDATTIM
Endif
Return

$INIT_CREDATTIM
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CREDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREDATTIM
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CREDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREDATTIM
[L]CURPRO = "CREDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.CREDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$_AOTHERS_CREDATTIM
[L]CURPRO = "CREDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREDATTIM
[L]CURPRO = "CREDATTIM"
Return

$PROPAGATE_CREDATTIM
this.isReadonly = 0
[L]CURPRO = "CREDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREDATTIM
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CREDATTIM"
$_LNKPRO_CREDATTIM
Return


####################################################################
# 20 : UPDDATTIM Date time ( Field ADATIM 0)
####################################################################

$SET_UPDDATTIM
If [L]_AOLDVAL<>this.UPDDATTIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDDATTIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDDATTIM
 Gosub PROPAGATE_UPDDATTIM
Endif
Return

$INIT_UPDDATTIM
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDDATTIM
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "UPDDATTIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDDATTIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.UPDDATTIM=AVOID.ADATTIM
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$_AOTHERS_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDDATTIM
[L]CURPRO = "UPDDATTIM"
Return

$PROPAGATE_UPDDATTIM
this.isReadonly = 0
[L]CURPRO = "UPDDATTIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDDATTIM
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "UPDDATTIM"
$_LNKPRO_UPDDATTIM
Return


####################################################################
# 21 : AUUID Single identifier ( Field  Uuident)
####################################################################

$SET_AUUID
If [L]_AOLDVAL<>this.AUUID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AUUID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AUUID
 Gosub PROPAGATE_AUUID
Endif
Return

$INIT_AUUID
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "AUUID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AUUID
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "AUUID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AUUID                 : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AUUID
[L]CURPRO = "AUUID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AUUID=NullUuid
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AUUID
[L]CURPRO = "AUUID"
Return

$_AOTHERS_AUUID
[L]CURPRO = "AUUID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AUUID
[L]CURPRO = "AUUID"
Return

$PROPAGATE_AUUID
this.isReadonly = 0
[L]CURPRO = "AUUID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AUUID
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "AUUID"
$_LNKPRO_AUUID
Return


####################################################################
# 22 : CREUSR User ( Field AUS 5)
####################################################################

$SET_CREUSR
If [L]_AOLDVAL<>this.CREUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CREUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CREUSR
 Gosub PROPAGATE_CREUSR
Endif
Return

$INIT_CREUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CREUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CREUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CREUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CREUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CREUSR
[L]CURPRO = "CREUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CREUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CREUSR
[L]CURPRO = "CREUSR"
If vireblc(this.CREUSR,2)<>vireblc(format$("K:5B",this.CREUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CREUSR
[L]CURPRO = "CREUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CREUSR
[L]CURPRO = "CREUSR"
Return

$PROPAGATE_CREUSR
this.isReadonly = 0
[L]CURPRO = "CREUSR"
Gosub _LNKPRO_CREUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CREUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "CREUSR"
$_LNKPRO_CREUSR
If vireblc(this.CREUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.CREUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CREUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return


####################################################################
# 23 : UPDUSR User ( Field AUS 5)
####################################################################

$SET_UPDUSR
If [L]_AOLDVAL<>this.UPDUSR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_UPDUSR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.UPDUSR
 Gosub PROPAGATE_UPDUSR
Endif
Return

$INIT_UPDUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "UPDUSR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_UPDUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "UPDUSR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_UPDUSR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_UPDUSR
[L]CURPRO = "UPDUSR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.UPDUSR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_UPDUSR
[L]CURPRO = "UPDUSR"
If vireblc(this.UPDUSR,2)<>vireblc(format$("K:5B",this.UPDUSR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_UPDUSR
[L]CURPRO = "UPDUSR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_UPDUSR
[L]CURPRO = "UPDUSR"
Return

$PROPAGATE_UPDUSR
this.isReadonly = 0
[L]CURPRO = "UPDUSR"
Gosub _LNKPRO_UPDUSR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_UPDUSR
Gosub DECLARE_VAR From WMC0ASYRAUS
[L]CURPRO = "UPDUSR"
$_LNKPRO_UPDUSR
If vireblc(this.UPDUSR,2)<>""
 # Link AUTILIS
 Local File AUTILIS [WAUS]
 Read [F:WAUS]CODUSR = this.UPDUSR
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="AUTILIS" & ZONE="INTUSR" & IDENT1=[F:WAUS]USR & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("UPDUSR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WAUS]
Endif
Return




