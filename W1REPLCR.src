#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management REPLCR 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$HORODAT
Local Date    A_DATE
Local Char    A_HEURE(10) , A_USER(10)
Local Char    A_STAMP(15)
A_DATE  = [28/08/2018]
A_HEURE = "00:10:52"
A_USER  = "ADMIN"
A_STAMP = "20180828001052"
Return

$TITRES
Return

$VISU
Local Integer A_REPONSE
Global Integer GPRE_VIEW
If dim(A_WINDPREV)<=0 : Local Char A_WINDPREV(30) : Endif
Local Mask REPLCR [DIA]
Gosub HORODAT
Local Inpbox "REPLCR" From GFONCTION At A_STAMP With A_WINDPREV Mask [DIA] As [SIM_]
Grizo [DIA]5
Grizo [DIA]10
Grizo [DIA]15
Boxact [SIM_]
Gosub TITRES
Boxinp [SIM_] Using A_REPONSE
Close Local Inpbox [SIM_]
Close Local Mask [DIA]
Kill GPRE_VIEW
Return

$HARDCOP
Local Integer X1(0..14),X2(0..14),Y1(0..14),Y2(0..14)
X1(0)=26 : X2(0)=87 : Y1(0)=10 : Y2(0)=12
X1(1)=26 : X2(1)=87 : Y1(1)=13 : Y2(1)=15
X1(2)=26 : X2(2)=87 : Y1(2)=16 : Y2(2)=18
Return

$ON_ALLCPY
Onevent BEFORE_INPUT Call AS_ALLCPY(zc) From W1REPLCR
Onevent INIT_AREA Call D_ALLCPY(zc) From W1REPLCR
Onevent CONTROL Call C_ALLCPY(zc) From W1REPLCR
Return

Subprog D_ALLCPY(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLCPY,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ALLCPY(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ALLCPY(VALEUR) From REPLCR
If mkstat=2
 [M]ALLCPY(INDIC) = VALEUR
 Affzo ALLCPY(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ALLCPY(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ALLCPY" : GZNUM = 6052 : Endif
Gosub _AFF
End

$ON_CPY
Onevent CONTROL Call C_CPY(zc) From W1REPLCR
Onevent BEFORE_INPUT Call AS_CPY(zc) From W1REPLCR
Onevent AFTER_CHANGE Gosub AMM_CPY From W1REPLCR
Return

Subprog AS_CPY(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_CPY(VALEUR) From REPLCR
If mkstat=2
 [M]CPY(INDIC) = VALEUR
 Affzo CPY(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action INICPY
 Call INICPY(VALEUR) From EXEFNC
 If mkstat=2
  [M]CPY(INDIC) = VALEUR
  Affzo CPY(INDIC) : mkstat = 2
 Endif
 Onkey   2 Titled GBOUTS Call S_CPY(zc) From W1REPLCR
 Onkey 144 Titled GBOUTP Call P_CPY(zc) From W1REPLCR
 Onkey 146 Titled GBOUTA Call SA_CPY(zc) From W1REPLCR
Endif
Gosub _AFF
End

Subprog C_CPY(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
If !mkstat
 ## Action ACONTCPY
 Call CONTSOC(VALEUR) From SUBAGF
 If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
 If !mkstat
  ## Action %CNTOBJ
  Call CONTSEL("CPY","A",VALEUR,"",mkstat) From CONTOBJ
  If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  If !mkstat
   ## Action CONTCPY
   Call CONTCPY(VALEUR) From EXEFNC
   If mkstat : GERR = 1 : GZONE = "CPY" : GZNUM = 1343 : Endif
  Endif
 Endif
Endif
Gosub _AFF
End

$AMM_CPY
Call AM_CPY(zc)
If !mkstat & GOBJET
 zoncou = "CPY" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_CPY(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZCPY)")>indice
 [M]CPY(indice) = VALEUR
 Affzo ZCPY(indice)
Endif
Gosub _AFF
End

Subprog S_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "CPY"
PARMSK(2) = "A"
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "CPY"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_CPY(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("CPY",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZCPY
Onevent BEFORE_AREA Gosub AV_ZCPY From W1REPLCR
Return

$AV_ZCPY
If clalev([F:CPY])=0 : Local File COMPANY [CPY] : Endif
Call LECTURE("CPY",num$([M]CPY(indice)),"") From CONTOBJ
zc = [F:CPY]CPYNAM
Gosub _AFF
Return

$ON_ALLBAN
Onevent BEFORE_INPUT Call AS_ALLBAN(zc) From W1REPLCR
Onevent INIT_AREA Call D_ALLBAN(zc) From W1REPLCR
Onevent CONTROL Call C_ALLBAN(zc) From W1REPLCR
Return

Subprog D_ALLBAN(VALEUR)
Variable Integer VALEUR
If varinit([M]ALLBAN,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_ALLBAN(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
## Action STD
Call AS_ALLBAN(VALEUR) From REPLCR
If mkstat=2
 [M]ALLBAN(INDIC) = VALEUR
 Affzo ALLBAN(INDIC) : mkstat = 2
Endif
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

Subprog C_ALLBAN(VALEUR)
Variable Integer VALEUR
## Action %OBLIG
If VALEUR=0
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "ALLBAN" : GZNUM = 8991 : Endif
Gosub _AFF
End

$ON_BAN
Onevent BEFORE_INPUT Call AS_BAN(zc) From W1REPLCR
Onevent CONTROL Call C_BAN(zc) From W1REPLCR
Onevent AFTER_CHANGE Gosub AMM_BAN From W1REPLCR
Return

Subprog AS_BAN(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Call TEXTE(12276,GBOUTP) From OBJDIV
Call TEXTE(16134,GBOUTA) From OBJDIV
## Action STD
Call AS_BAN(VALEUR) From REPLCR
If mkstat=2
 [M]BAN(INDIC) = VALEUR
 Affzo BAN(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_BAN(zc) From W1REPLCR
Onkey 144 Titled GBOUTP Call P_BAN(zc) From W1REPLCR
Onkey 146 Titled GBOUTA Call SA_BAN(zc) From W1REPLCR
Gosub _AFF
End

Subprog C_BAN(VALEUR)
Variable Char    VALEUR()
## Action %OBLIG
If vireblc(VALEUR,2)=""
 mkstat = 1 : GMESSAGE = mess(10,123,1)
Endif
If mkstat : GERR = 1 : GZONE = "BAN" : GZNUM = 7475 : Endif
If !mkstat
 ## Action %CNTOBJ
 Call CONTSEL("BAN","",VALEUR,"",mkstat) From CONTOBJ
 If mkstat : GERR = 1 : GZONE = "BAN" : GZNUM = 7475 : Endif
 If !mkstat
  ## Action STD
  Call C_BAN(VALEUR) From REPLCR
  If mkstat : GERR = 1 : GZONE = "BAN" : GZNUM = 7475 : Endif
 Endif
Endif
Gosub _AFF
End

$AMM_BAN
Call AM_BAN(zc)
If !mkstat & GOBJET
 zoncou = "BAN" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_BAN(VALEUR)
Variable Char    VALEUR()
If !mkstat & evalue("dim("+clanam([M])+"ZBAN)")>indice
 [M]BAN(indice) = VALEUR
 Affzo ZBAN(indice)
Endif
Gosub _AFF
End

Subprog S_BAN(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16)
PARMSK(1) = "BAN"
PARMSK(2) = ""
Call S_TAB_CHAR(VALEUR,PARMSK,"SELOBJ","SELOBJ","") From GACTION
Gosub _AFF
End

Subprog SA_BAN(VALEUR)
Variable Char    VALEUR()
Local Char PARMSK(250)(1..16) , SAVACT(20)
SAVACT = GACTION : GACTION = "SELOBJAW"
PARMSK(1) = "BAN"
Call SAISIE_CHAR(VALEUR,PARMSK,"DSELOBJAW","SELOBJAW","XWDSELOBJAW") From GSAISIE
GACTION = SAVACT
Gosub _AFF
End

Subprog P_BAN(VALEUR)
Variable Char    VALEUR()
Local Char PAROBJ(250)
PAROBJ = ""
Call VISU("BAN",VALEUR,PAROBJ) From SUBAOP
Gosub _AFF
End

$ON_ZBAN
Onevent BEFORE_AREA Gosub AV_ZBAN From W1REPLCR
Return

$AV_ZBAN
If clalev([F:BAN])=0 : Local File BANK [BAN] : Endif
Call LECTURE("BAN",num$([M]BAN(indice)),"") From CONTOBJ
zc = [F:BAN]DES
Gosub _AFF
Return

$ON_VCRSTR
Onevent CONTROL Call C_VCRSTR(zc) From W1REPLCR
Onevent AFTER_CHANGE Gosub AMM_VCRSTR From W1REPLCR
Onevent BEFORE_INPUT Call AS_VCRSTR(zc) From W1REPLCR
Return

Subprog AS_VCRSTR(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
Onkey   2 Titled GBOUTS Call S_VCRSTR(zc) From W1REPLCR
Gosub _AFF
End

Subprog C_VCRSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCRSTR" : GZNUM = 9802 : Endif
Endif
Gosub _AFF
End

$AMM_VCRSTR
Call AM_VCRSTR(zc)
If !mkstat & GOBJET
 zoncou = "VCRSTR" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCRSTR(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VCRSTR(VALEUR) From REPLCR
If mkstat : GERR = 1 : GZONE = "VCRSTR" : GZNUM = 9802 : Endif
Gosub _AFF
End

Subprog S_VCRSTR(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "VCRSTR"
 PARMSK(2) = "REPLCR"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_VCREND
Onevent CONTROL Call C_VCREND(zc) From W1REPLCR
Onevent BEFORE_INPUT Call AS_VCREND(zc) From W1REPLCR
Onevent AFTER_CHANGE Gosub AMM_VCREND From W1REPLCR
Return

Subprog AS_VCREND(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_VCREND(VALEUR) From REPLCR
If mkstat=2
 [M]VCREND(INDIC) = VALEUR
 Affzo VCREND(INDIC) : mkstat = 2
Endif
Onkey   2 Titled GBOUTS Call S_VCREND(zc) From W1REPLCR
Gosub _AFF
End

Subprog C_VCREND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action CONTVCR
 Call CONTVCR(VALEUR) From TRTDIV
 If mkstat : GERR = 1 : GZONE = "VCREND" : GZNUM = 9803 : Endif
Endif
If !mkstat
 ## Action STD
 Call C_VCREND(VALEUR) From REPLCR
 If mkstat : GERR = 1 : GZONE = "VCREND" : GZNUM = 9803 : Endif
Endif
Gosub _AFF
End

$AMM_VCREND
Call AM_VCREND(zc)
If !mkstat & GOBJET
 zoncou = "VCREND" : Gosub APRES_MODIF From =GPROGRAMME
Endif
Return

Subprog AM_VCREND(VALEUR)
Variable Char    VALEUR()
## Action STD
Call AM_VCREND(VALEUR) From REPLCR
If mkstat : GERR = 1 : GZONE = "VCREND" : GZNUM = 9803 : Endif
Gosub _AFF
End

Subprog S_VCREND(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GSELECT
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GSELECT"
 PARMSK(1) = "VCREND"
 PARMSK(2) = "REPLCR"
 Call S_TAB_CHAR(VALEUR,PARMSK,"GSELECT","ASELGEN","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

$ON_TRCFLG
Onevent INIT_AREA Call D_TRCFLG(zc) From W1REPLCR
Onevent BEFORE_INPUT Call AS_TRCFLG(zc) From W1REPLCR
Return

Subprog D_TRCFLG(VALEUR)
Variable Integer VALEUR
If varinit([M]TRCFLG,indice)=0
 VALEUR = 2
Endif
Gosub _AFF
End

Subprog AS_TRCFLG(VALEUR)
Variable Integer VALEUR
Local Integer INDIC : INDIC = indice
Raz mkstat
If VALEUR<1
 VALEUR = 1
Endif
Gosub _AFF
End

$CHG_STY
Return


