#<AdxTL>@(#)0.0.0.0 $Revision$Class ## ?IDENTQRY? SEARCH ##
# Supervisor
#WMSRHPREQUISD PREQUISD
# 2018-08-27 12:42:50 410

Funprog IS_IMPLEMENTED()
End 1
#---------------------------------------------------------------------------------------------------#
# List of tables to open
#---------------------------------------------------------------------------------------------------#
$ASEARCH_OPEN
If filinfo(filpath("FIL","PREQUISD","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File PREQUISD [PSD]
If filinfo(filpath("FIL","CPTANALIN","fde",-1),1) <0  : ERROR=[V]CST_AERROR : Return : Endif 
Local File CPTANALIN [CAL]
Local File PREQUISD [PSD_]
Local Char KEY_PSD(120)(1..3)
Local Char KEY_CAL(120)(1..3)
#Empty keys :
KEY_PSD(3) = "+0"
KEY_CAL(3) = "+0++0+0++0"
ACTION = "ASEARCH_OPEN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to close
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CLOSE
LogicClose File [PSD]
LogicClose File [CAL]
LogicClose File [PSD_]
ACTION = "ASEARCH_CLOSE_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN
Link [PSD] With
& [CAL]CAL0="PSD";0;[F:PSD]PSHNUM;[F:PSD]PSDLIN;0;"";1
& As [LNK_]
& Where (1=1
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# List of tables to join
#---------------------------------------------------------------------------------------------------#
$ASEARCH_JOIN_INC
Link [PSD] With
& [CAL]CAL0="PSD";0;[F:PSD]PSHNUM;[F:PSD]PSDLIN;0;"";1
& As [LNK_]
& Where (UPDDATTIM > gdatetime$(QUPDDATTIM)
& )
ACTION = "ASEARCH_JOIN_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Create an instance of
#---------------------------------------------------------------------------------------------------#
$ASEARCH_CREATEINSTANCE
Local Integer ASTATUS
Local Integer FINS
Return

#---------------------------------------------------------------------------------------------------#
# Set an instance
#---------------------------------------------------------------------------------------------------#
$ASEARCH_SETINSTANCE
KEY_PSD(2) = [F:PSD]PSHNUM+"+"+num$([F:PSD]PSDLIN)
KEY_CAL(2) = [F:CAL]ABRFIC+"+"+num$([F:CAL]VCRTYP)+"+"+[F:CAL]VCRNUM+"+"+num$([F:CAL]VCRLIN)+"+"+num$([F:CAL]VCRSEQ)+"+"+[F:CAL]CPLCLE+"+"+num$([F:CAL]ANALIG)

If (KEY_PSD(2) <> KEY_PSD(3)) & (KEY_PSD(1) <> KEY_PSD(2))
 If INS <> null
  [L]ASTATUS = fmet INS.ACTION("ASEARCH_TRANS_AFTER")
  #serialize INS
  Gosub ASEARCH_TO_JSON
 Endif
#Create a new instance
INS = NewInstance C_PREQUISD(GACTX,UIDINS,NUMLIN,null,"") AllocGroup null
INS.setaccessorEnabled = 0
SetInstance INS With [F:PSD]
FINS = 1
 KEY_PSD(1) = KEY_PSD(2)
Endif : # KEY_PSD(1) <> KEY_PSD(2)

Return

#---------------------------------------------------------------------------------------------------#
# Serialize the entity in a JSON format
#---------------------------------------------------------------------------------------------------#
$ASEARCH_TO_JSON
If FINS=0 : Return : Endif
QCOUNT += 1
Onerrgo ERROR_VALUE
Append ASND.DATA ,SEPINS1
SEPINS1 = ','+chr$(10)
Append ASND.DATA ,'{'
Append ASND.DATA ,'"PSHNUM":'          +'"'+escJson(INS.PSHNUM)+'"'
Append ASND.DATA ,',"PSDLIN":'          + num$(INS.PSDLIN)
Append ASND.DATA ,',"CPY":'            +'"'+escJson(INS.CPY)+'"'
Append ASND.DATA ,',"PSHFCY":'         +'"'+escJson(INS.PSHFCY)+'"'
Append ASND.DATA ,',"ITMREF":'         +'"'+escJson(INS.ITMREF)+'"'
Append ASND.DATA ,',"ITMDES1":'        +'"'+escJson(INS.ITMDES1)+'"'
Append ASND.DATA ,',"ITMDES":'         +'"'+escJson(INS.ITMDES)+'"'
Append ASND.DATA ,',"BPSNUM":'         +'"'+escJson(INS.BPSNUM)+'"'
Append ASND.DATA ,',"PUU":'            +'"'+escJson(INS.PUU)+'"'
Append ASND.DATA ,',"STU":'            +'"'+escJson(INS.STU)+'"'
Append ASND.DATA ,',"VACBPR":'         +'"'+escJson(INS.VACBPR)+'"'
Append ASND.DATA ,',"CUR":'            +'"'+escJson(INS.CUR)+'"'
Append ASND.DATA ,',"LINBUY":'         +'"'+escJson(INS.LINBUY)+'"'
Append ASND.DATA ,',"PJT":'            +'"'+escJson(INS.PJT)+'"'
Append ASND.DATA ,',"PRHFCY":'         +'"'+escJson(INS.PRHFCY)+'"'
Append ASND.DATA ,',"TAXRCP":'         +'"'+escJson(INS.TAXRCP)+'"'
Append ASND.DATA ,',"TAXISS":'         +'"'+escJson(INS.TAXISS)+'"'
Append ASND.DATA ,',"TAXOTH1":'        +'"'+escJson(INS.TAXOTH1)+'"'
Append ASND.DATA ,',"TAXOTH2":'        +'"'+escJson(INS.TAXOTH2)+'"'
Append ASND.DATA ,',"CMMPRPNUM":'      +'"'+escJson(INS.CMMPRPNUM)+'"'
Append ASND.DATA ,',"PQHNUM":'         +'"'+escJson(INS.PQHNUM)+'"'
Append ASND.DATA ,',"WIPNUM":'         +'"'+escJson(INS.WIPNUM)+'"'
Append ASND.DATA ,',"PSDNUMMMS":'      +'"'+escJson(INS.PSDNUMMMS)+'"'
Append ASND.DATA ,',"CREUSR":'         +'"'+escJson(INS.CREUSR)+'"'
Append ASND.DATA ,',"UPDUSR":'         +'"'+escJson(INS.UPDUSR)+'"'
Append ASND.DATA ,',"ITMLNK":'         +'"'+escJson(INS.ITMLNK)+'"'
Append ASND.DATA ,',"BPRLNK":'         +'"'+escJson(INS.BPRLNK)+'"'
Append ASND.DATA ,'}'
Onerrgo
Freegroup INS
INS = null
Raz KEY_PSD(1),KEY_CAL(1)
FINS = 0
Return

#---------------------------------------------------------------------------------------------------#
# Errors
#---------------------------------------------------------------------------------------------------#
$ERROR_VALUE
SVALUE ='"<error'-errmes$(errn)+'>"'
Resume
#---------------------------------------------------------------------------------------------------#
# Link standard key
#---------------------------------------------------------------------------------------------------#
$AQUERY_PRIMARYKEYS
Local Char ASTDKEY(250)
ASTDKEY = ""
ASTDKEY += "[F:PSD]PSHNUM"
ASTDKEY += ";[F:PSD]PSDLIN"
ACTION = "ASEARCH_PRIMARYKEYS_AFTER" : Gosub ASEARCH_ACTION
Return

#---------------------------------------------------------------------------------------------------#
# Actions
#---------------------------------------------------------------------------------------------------#
$ASEARCH_ACTION
Local Char CURPRO(250),CURPTH(250),AMETHOD(50),AEVENT(50)
[L]AEVENT = [L]ACTION
Gosub METHODS From PREQUISD_CSTD
Return

#---------------------------------------------------------------------------------------------------#
# APPEND_PROTOTYPE
#---------------------------------------------------------------------------------------------------#
Funprog APPEND_PROTOTYPE(ACTX,WCLOB,PSYR)
Variable Instance ACTX Using =[V]CST_C_NAME_CLASS_CONTEXT
Variable Clbfile   WCLOB
Variable Instance  PSYR     Using C_ASYR
Local Integer ERROR : ERROR = 0
Local Integer IND   : IND = 0
Local Char TRTNAME(80)
Local Char REPRESENTATION(80)
Local File ASHW    [ASW]
Filter [ASW] Where CODCLA="PREQUISD" & DEFREP=2
Read [ASW]ASW0 First
If !fstat
 If  [ASW]ENAFAC(0) = 2
  REPRESENTATION = [ASW]CODREP
 Else
  WCLOB ="{}"
  End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PREQUISD")) 
 Endif
Endif
Close Local File [ASW]
If len(REPRESENTATION)=0
 WCLOB ="{}"
 End ERROR = func ASYRSUB._ASETSTATUS(ACTX,"",0,[V]CST_AERROR,[V]CST_AHTTP_NOT_FOUND,func ASYRFNC.MES1(mess(62,149,1),"PREQUISD")) 
Endif
Append WCLOB,'{'
Append WCLOB,'"$baseUrl":"'+PSYR.PREFIX+'"'
Append WCLOB,',"$baseType":"'+PSYR.CNTPRE+"."+nomap+'"'
Append WCLOB,',"$classTitle":"'+func GET_RES_STRING(ACTX.LAN,2751)+'"'
Append WCLOB,',"$url":"{$baseUrl}/PREQUISD'+PSYR.URLREP+''+REPRESENTATION+'.$search"'
Append WCLOB,',"$prototype":"{$baseUrl}/$prototypes('+"'"+'{$representation}.$thumb'+"'"+')"'
Append WCLOB,',"$type":"{$baseType}.'+REPRESENTATION+'.$search"'
Append WCLOB,',"$facility":"{PSHFCY}"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"$resources":{'
Append WCLOB,'"$type":"application/x-array"'
Append WCLOB,',"$item":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2751)+' {$key}"'
Append WCLOB,',"$key":"{PSHNUM}~{PSDLIN}"'
Append WCLOB,',"$url":"{$baseUrl}/PREQUISD('+"'"+'{$key}'+"'"+')'+PSYR.URLREP+'PREQUISD.searchItem"'
Append WCLOB,',"$properties":{'
Append WCLOB,'"PSHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2741)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"PSDLIN":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,641)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-integer"'
Append WCLOB,"}"
Append WCLOB,',"CPY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1343)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PSHFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2740)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"ITMREF":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3651)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"ITMDES1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,282)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"ITMDES":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,282)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":30'
Append WCLOB,"}"
Append WCLOB,',"BPSNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3680)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":15'
Append WCLOB,"}"
Append WCLOB,',"PUU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1858)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"STU":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2076)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"VACBPR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,3673)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CUR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,323)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":3'
Append WCLOB,"}"
Append WCLOB,',"LINBUY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1752)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"PJT":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1886)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":40'
Append WCLOB,"}"
Append WCLOB,',"PRHFCY":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2552)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TAXRCP":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26428)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TAXISS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26429)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TAXOTH1":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26430)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"TAXOTH2":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,26431)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":5'
Append WCLOB,"}"
Append WCLOB,',"CMMPRPNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,11670)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"PQHNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,2640)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"WIPNUM":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,4420)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,',"$maxLength":20'
Append WCLOB,"}"
Append WCLOB,',"PSDNUMMMS":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,41438)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"CREUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1320)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"UPDUSR":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,1324)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"ITMLNK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,48562)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,',"BPRLNK":{'
Append WCLOB,'"$title":"'+func GET_RES_STRING(ACTX.LAN,48561)+'"'
Append WCLOB,',"$capabilities":"sort,filter"'
Append WCLOB,',"$type":"application/x-string"'
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,"}"
Append WCLOB,',"$links":{'
Append WCLOB,"}"
Append WCLOB,"}"
End ERROR
#---------------------------------------------------------------------------------------------------#
# GET_RES_STRING
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_STRING(_LAN,_ID)
Value Char _LAN
Value Integer _ID
Gosub  _GET_RES_STRING From WMSRHPREQUISDB
End RES

#---------------------------------------------------------------------------------------------------#
# GET_RES_MENU
#---------------------------------------------------------------------------------------------------#
Funprog GET_RES_MENU(_LAN,_ID)
Value Char _LAN
Value Char _ID
Gosub  _GET_RES_MENU From WMSRHPREQUISDB
End RES


