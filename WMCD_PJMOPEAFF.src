#<AdxTL>@(#)0.0.0.0 $Revision$Class Employee assignment
# Supervisor
## CRUD-CLASSE ## PJMOPEAFF
# 2018-08-27 12:40:11 436


############################################################################################
### Subprog _ADELETE
############################################################################################
Subprog _ADELETE(PJMOPEAFF,ASTATUS)
Variable Instance PJMOPEAFF Using C_PJMOPEAFF
Variable Integer ASTATUS

If PJMOPEAFF = null : End : Endif

Gosub _AVARIABLES From WMC00PJMOPEAFF

[L]A_STRSITE = ""
[L]A_STRACC = ""
Local Instance ALNKDELTAB Using C_ALNKDELTAB
Gosub ADELETE_PJMOPEAFF

End

############################################################################################
### Subprog ADELETE
############################################################################################
Subprog ADELETE(PJMOPEAFF,ASTATUS)
Variable Instance PJMOPEAFF Using C_PJMOPEAFF
Variable Integer ASTATUS

If PJMOPEAFF = null : End : Endif

Gosub AVARIABLES From WMC00PJMOPEAFF
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

Local Instance ALNKDELTAB Using C_ALNKDELTAB

[L]A_STRSITE = ""
[L]A_STRACC = ""
Gosub ADELETE_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Goto ADELETE_END : Endif

If !adxlog
 Gosub ADELETE_TR_PJMOPEAFF
Else
 Gosub ADELETE_PJMOPEAFF
Endif

$ADELETE_END
End


$ADELETE_CONTROL
Gosub _ADELETE_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Verification delete
[L]ASTATUS = max([L]ASTATUS,func ASYRSUB.VERIFY_INSTANCE(PJMOPEAFF,ALNKDELTAB))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _ADELETE_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_BEFORE
If PJMOPEAFF.ASTALIN = [V]CST_ANEWDEL : Return : Endif
PJMOPEAFF.ASTALIN = [V]CST_ADEL
[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.ACTION("ADELETE_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_ADELETE_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.ACTION("ADELETE_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_TR_PJMOPEAFF
Trbegin [F:PJOA]
 Gosub ADELETE_PJMOPEAFF
 If [L]ASTATUS>=[V]CST_AERROR : Gosub ADELETE_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
#-----------------------------------------------------#
$ADELETE_PJMOPEAFF
[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.ACTION("ADELETE_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = func ASYRSUB.DELETE_LINKS(PJMOPEAFF,ALNKDELTAB)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

If find( PJMOPEAFF.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMOPEAFF.ASTALIN,[V]CST_AUPD) & 
& fmet PJMOPEAFF.AGETATTRIBUTE("POALGDES","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMOPEAFF._MAJSQL_PJMOPEAFF_POALGDES(PJMOPEAFF,PJMOPEAFF.POALGDES)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
If find( PJMOPEAFF.ASTALIN,[V]CST_ANEW,[V]CST_ADEL) | 
& (find( PJMOPEAFF.ASTALIN,[V]CST_AUPD) & 
& fmet PJMOPEAFF.AGETATTRIBUTE("POALGCOM","$isLoaded")="true")
[L]ASTATUS = func WMC00PJMOPEAFF._MAJSQL_PJMOPEAFF_POALGCOM(PJMOPEAFF,PJMOPEAFF.POALGCOM)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
[L]ASTATUS = max([L]ASTATUS,func WMC00PJMOPEAFF._MAJSQL_PJMOPEAFF(PJMOPEAFF))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet PJMOPEAFF.ACTION("ADELETE_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$ADELETE_ABORT
Rollback
$_ADELETE_ABORT
If PJMOPEAFF.snapshotEnabled=1
 [L]A_RETIK = PJMOPEAFF.revertUpdTick
Endif
[L]ASTATUS = max(fmet PJMOPEAFF.ACTION("ADELETE_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#

#-----------------------------------------------------#
$_ADELETE_AFTER
Return



