#<AdxTL>@(#)0.0.0.0 $Revision$Class Invoicing terms
# Supervisor
## CRUD-CLASSE ## TABINVCND
# 2018-08-27 12:51:39 251


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABINVCND [INVCND_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABINVCND") From ASYRCOM : Endif
Local Instance TABINVCND Using C_TABINVCND

If !SILENCE : Call TRACE("3 --> New Instance C_TABINVCND") From ASYRCOM : Endif
TABINVCND = NewInstance C_TABINVCND AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [INVCND_]INVCND0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABINVCND") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.AREAD([INVCND_]INVCND,[INVCND_]LEG))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABINVCND.INVCND ="-num$(TABINVCND.INVCND)) From ASYRCOM
 Call TRACE("TABINVCND.LEG ="-num$(TABINVCND.LEG)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABINVCND.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABINVCND.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [INVCND_]
FreeGroup TABINVCND
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABINVCND,ACLE,ASTATUS,_ETAG)
Variable Instance TABINVCND Using C_TABINVCND
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _INVCND(20)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_INVCND = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
Raz [L]_ETAG
Local File TABINVCND [INVCND]
Default File [F:INVCND]
Read [F:INVCND]INVCND0 = [L]_INVCND;[L]_LEG
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:INVCND]UPDTICK)>0
 [L]_ETAG = num$([F:INVCND]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABINVCND,ACLE,ASTATUS)
Variable Instance TABINVCND Using C_TABINVCND
Value Char ACLE
Variable Integer ASTATUS
Local Char _INVCND(20)
Local Char _LEG(20)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_INVCND = num$([L]CLE(1)) : Endif
If [L]CLE(2)<>"" : [L]_LEG = num$([L]CLE(2)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.AREAD([L]_INVCND,[L]_LEG))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABINVCND,_INVCND,_LEG,ASTATUS)
Variable Instance TABINVCND Using C_TABINVCND
Value Char _INVCND
Value Char _LEG
Variable Integer ASTATUS

If TABINVCND = null : End : Endif

Gosub AVARIABLES From WMC00TABINVCND
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABINVCND.APARENT=null
 [L]A_I = TABINVCND.freeSnapshot
 TABINVCND.snapshotEnabled = 0
 TABINVCND.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABINVCND.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABINVCND._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABINVCND.APARENT=null
 TABINVCND.snapshotEnabled = 1
 TABINVCND.setAccessorEnabled = 1
Endif
LogicClose File [INVCND] ,[INVCNDD]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABINVCND._ACTION_PARAM("AREAD_BEFORE",[L]_INVCND,[L]_LEG))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:INVCND]
Read [F:INVCND]INVCND0 = [L]_INVCND;[L]_LEG
If fstat
[L]A_ERROR = [L]_INVCND+"~"+[L]_LEG
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABINVCND,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:INVCND]AUUID)>0 & [F:INVCND]AUUID=NullUuid
 [F:INVCND]AUUID = getUuid
Endif
SetInstance TABINVCND With [F:INVCND]
TABINVCND.ASTALIN = [V]CST_ALL

#-----------------------------------------------------#
If [L]A_LEVEL>=2
 Default File [F:INVCNDD]
 [L]A_N2=0
 For [F:INVCNDD]INVCNDD0 Where INVCND=[F:INVCND]INVCND & LEG=[F:INVCND]LEG
  [L]A_N2 +=1
  TABINVCND.INVCNDLIN(A_N2) = NewInstance  C_TABINVCNDLIN(TABINVCND.ACTX,NullUuid,[L]A_N2,TABINVCND,"INVCNDLIN") AllocGroup TABINVCND
  [L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.INVCNDLIN(A_N2).ADDINSTANCE_BOUND)
  Callmet TABINVCND.INVCNDLIN(A_N2).AREAD([F:INVCNDD]INVCND,[F:INVCNDD]LEG,[F:INVCNDD]INVCNDLIN)
  TABINVCND.INVCNDLIN(A_N2).ASTALIN = [V]CST_ALL
  [L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.INVCNDLIN(A_N2).ASETATTRIBUTE("INVCND","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.INVCNDLIN(A_N2).ASETATTRIBUTE("LEG","$isDisabled","true"))
  [L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.INVCNDLIN(A_N2).ASETATTRIBUTE("INVCNDLIN","$isDisabled","true"))
 Next INVCNDD
 If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Endif
#-----------------------------------------------------#

[L]ASTATUS = max([L]ASTATUS,fmet TABINVCND.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABINVCND" & ZONE="DESAXX" & IDENT1=TABINVCND.INVCND & IDENT2=TABINVCND.LEG
 Call ASETTEXTRA(TABINVCND.AXX,TABINVCND.AllocGrp(),"DESAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABINVCND.AXX(maxtab(TABINVCND.AXX)).FLG = 0
Next AXX
If !len(fmet TABINVCND.AGETTEXTRA("DESAXX"))
 Call ASETTEXTRA(TABINVCND.AXX,TABINVCND.AllocGrp(),"DESAXX",
& fmet TABINVCND.AGETTEXTRALAN("DESAXX",TABINVCND.ACTX.AFOLD.ALANGDEF),
& TABINVCND.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABINVCND" & ZONE="SHOAXX" & IDENT1=TABINVCND.INVCND & IDENT2=TABINVCND.LEG
 Call ASETTEXTRA(TABINVCND.AXX,TABINVCND.AllocGrp(),"SHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABINVCND.AXX(maxtab(TABINVCND.AXX)).FLG = 0
Next AXX
If !len(fmet TABINVCND.AGETTEXTRA("SHOAXX"))
 Call ASETTEXTRA(TABINVCND.AXX,TABINVCND.AllocGrp(),"SHOAXX",
& fmet TABINVCND.AGETTEXTRALAN("SHOAXX",TABINVCND.ACTX.AFOLD.ALANGDEF),
& TABINVCND.ACTX.LAN) From ASYRSUB
Endif

Return



