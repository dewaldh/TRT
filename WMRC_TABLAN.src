#<AdxTL>@(#)0.0.0.0 $Revision$Class Languages
# Supervisor
## CRUD-CLASSE ## TABLAN
# 2018-08-27 13:37:35 837


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(TABLAN,ASTATUS)
Variable Instance TABLAN Using R_TABLAN
Variable Integer ASTATUS

If TABLAN = null : End : Endif

Gosub AVARIABLES From WMR00TABLAN
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet TABLAN.ACTX.AGETAFCRIGHT(TABLAN,"GESTLA",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet TABLAN.ACTX.AGETAFCRIGHTC(TABLAN,"GESTLA",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_TABLAN
Else
 Gosub AINSERT_TABLAN
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = TABLAN.freeSnapshot
TABLAN.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
TABLAN.ASTALIN = [V]CST_ANEW
TABLAN.TLA.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet TABLAN._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet TABLAN._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet TABLAN._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If TABLAN.TLA.ASTALIN = [V]CST_ANEWDEL : Return : Endif
TABLAN.TLA.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.TLA.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER

[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.TLA.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_TABLAN
Trbegin [F:TLA]
 Gosub AINSERT_TABLAN
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(TABLAN.TLA.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 TABLAN.TLA.ASTALIN = [V]CST_ALL
Endif
Return

#-----------------------------------------------------#
$AINSERT_TABLAN
[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.TLA._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet TABLAN.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If TABLAN.snapshotEnabled=1
 [L]A_RETIK = TABLAN.revertUpdTick
Endif
[L]ASTATUS = max(fmet TABLAN.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



