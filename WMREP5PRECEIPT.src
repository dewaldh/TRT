#<AdxTL>@(#)0.0.0.0 $Revision$Class Receipt
# Supervisor
## WMREP REPRESENTATION ## PRECEIPT
# 2018-08-27 13:25:40 587

Gosub TEST From WMREPPRECEIPT : End

#-------------------------------------------------------#
# Propriétés exposées
# ASWLIMIT=15
#-------------------------------------------------------#
$PROPERTY_REP
REP.PRO(61) = NewInstance C_AREPPRO AllocGroup REP : # Line amount - tax
     REP.PRO(61).PRO = "LINAMT" : REP.PRO(61).PTH = "PTH.PTD.LINAMT" : REP.PRO(61).BLC = "LINES" : REP.PRO(61).TPC = 2
     REP.PRO(61).DES = 4400 : REP.PRO(61).SHO = 4400 : REP.PRO(61).TYP = 3 : REP.PRO(61).ACS = ""
     REP.PRO(61).PROTYP = "application/x-decimal" : REP.PRO(61).PROPREFLG = 1 : REP.PRO(61).ORD = 970 : REP.PRO(61).LNG = 0 : REP.PRO(61).REP = "PRECEIPT"
     REP.PRO(61).DET = 2 : REP.PRO(61).EDT = 1 : REP.PRO(61).QRY = 1 : REP.PRO(61).LOO = 1 : REP.PRO(61).SRY = 1 : REP.PRO(61).FIL = 1 : REP.PRO(61).ENT = 1 : REP.PRO(61).GRI = "PTH.PTD"
     REP.PRO(61).STAINIDET = 1 : REP.PRO(61).STAINIEDT = 1 : REP.PRO(61).STAINIQRY = 1 : REP.PRO(61).STAINILOO = 1 : REP.PRO(61).STAINISRY = 2 : 
     REP.PRO(61).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(61).ATT(1).COD = "$isReadOnly" : REP.PRO(61).ATT(1).ATT = "true"
     REP.PRO(61).PLK = 1
     
REP.PRO(62) = NewInstance C_AREPPRO AllocGroup REP : # Currency
     REP.PRO(62).PRO = "NETCUR" : REP.PRO(62).PTH = "PTH.PTD.NETCUR" : REP.PRO(62).BLC = "LINES" : REP.PRO(62).TPC = 2
     REP.PRO(62).DES = 323 : REP.PRO(62).SHO = 323 : REP.PRO(62).TYP = 7 : REP.PRO(62).ACS = ""
     REP.PRO(62).PROTYP = "application/x-string" : REP.PRO(62).PROPREFLG = 1 : REP.PRO(62).ORD = 980 : REP.PRO(62).LNG = 3 : REP.PRO(62).REP = "PRECEIPT"
     REP.PRO(62).DET = 2 : REP.PRO(62).EDT = 1 : REP.PRO(62).QRY = 1 : REP.PRO(62).LOO = 1 : REP.PRO(62).SRY = 1 : REP.PRO(62).FIL = 1 : REP.PRO(62).ENT = 1 : REP.PRO(62).GRI = "PTH.PTD"
     REP.PRO(62).STAINIDET = 1 : REP.PRO(62).STAINIEDT = 1 : REP.PRO(62).STAINIQRY = 1 : REP.PRO(62).STAINILOO = 1 : REP.PRO(62).STAINISRY = 2 : 
     REP.PRO(62).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(62).ATT(1).COD = "$isMandatory" : REP.PRO(62).ATT(1).ATT = "true"
     REP.PRO(62).ATT(2)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(62).ATT(2).COD = "$isReadOnly" : REP.PRO(62).ATT(2).ATT = "true"
     REP.PRO(62).PLK = 2
     REP.PRO(62).LNK(1) = NewInstance C_AREPLNK AllocGroup REP : # Display
          Call ASET_AREPLNK(REP.PRO(62).LNK(1),'$details',1,'','TABCUR',2,'TABCUR',49838,1,'','NETCUR',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(62).LNK(1).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(62).LNK(1).CLE(1),'CUR',7,'PTH.PTD.NETCUR','NETCUR',0,0,0,0,'CUR',1,1) From ASYRSUBREP
     REP.PRO(62).LNK(2) = NewInstance C_AREPLNK AllocGroup REP : # Selection
          Call ASET_AREPLNK(REP.PRO(62).LNK(2),'$lookup',1,'','TABCUR',9,'TABCUR',6028,1,'','NETCUR',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(62).LNK(2).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(62).LNK(2).CLE(1),'CUR',7,'PTH.PTD.NETCUR','NETCUR',0,0,0,0,'CUR',1,1) From ASYRSUBREP
     REP.PRO(62).LNK(3) = NewInstance C_AREPLNK AllocGroup REP : # Summary
          Call ASET_AREPLNK(REP.PRO(62).LNK(3),'$summary',1,'','TABCUR',10,'TABCUR',12236,1,'','NETCUR',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(62).LNK(3).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(62).LNK(3).CLE(1),'CUR',7,'PTH.PTD.NETCUR','NETCUR',0,0,0,0,'CUR',1,1) From ASYRSUBREP
     REP.PRO(62).LNK(4) = NewInstance C_AREPLNK AllocGroup REP : # List
          Call ASET_AREPLNK(REP.PRO(62).LNK(4),'$query',1,'','TABCUR',5,'TABCUR',49616,1,'','NETCUR',2,1,1,1,1) From ASYRSUBREP
     
REP.PRO(63) = NewInstance C_AREPPRO AllocGroup REP : # Landed cost coef.
     REP.PRO(63).PRO = "CPRCOE" : REP.PRO(63).PTH = "PTH.PTD.CPRCOE" : REP.PRO(63).BLC = "LINES" : REP.PRO(63).TPC = 2
     REP.PRO(63).DES = 3950 : REP.PRO(63).SHO = 4218 : REP.PRO(63).TYP = 3 : REP.PRO(63).ACS = ""
     REP.PRO(63).PROTYP = "application/x-decimal" : REP.PRO(63).PROPREFLG = 1 : REP.PRO(63).ORD = 990 : REP.PRO(63).LNG = 0 : REP.PRO(63).REP = "PRECEIPT"
     REP.PRO(63).DET = 2 : REP.PRO(63).EDT = 1 : REP.PRO(63).QRY = 1 : REP.PRO(63).LOO = 1 : REP.PRO(63).SRY = 1 : REP.PRO(63).FIL = 1 : REP.PRO(63).ENT = 1 : REP.PRO(63).GRI = "PTH.PTD"
     REP.PRO(63).STAINIDET = 1 : REP.PRO(63).STAINIEDT = 1 : REP.PRO(63).STAINIQRY = 1 : REP.PRO(63).STAINILOO = 1 : REP.PRO(63).STAINISRY = 2 : 
     REP.PRO(63).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(63).ATT(1).COD = "$isReadOnly" : REP.PRO(63).ATT(1).ATT = "true"
     REP.PRO(63).PLK = 1
     
REP.PRO(64) = NewInstance C_AREPPRO AllocGroup REP : # Fixed cost per unit
     REP.PRO(64).PRO = "CPRAMT" : REP.PRO(64).PTH = "PTH.PTD.CPRAMT" : REP.PRO(64).BLC = "LINES" : REP.PRO(64).TPC = 2
     REP.PRO(64).DES = 48557 : REP.PRO(64).SHO = 48557 : REP.PRO(64).TYP = 3 : REP.PRO(64).ACS = ""
     REP.PRO(64).PROTYP = "application/x-decimal" : REP.PRO(64).PROPREFLG = 1 : REP.PRO(64).ORD = 1000 : REP.PRO(64).LNG = 0 : REP.PRO(64).REP = "PRECEIPT"
     REP.PRO(64).DET = 2 : REP.PRO(64).EDT = 1 : REP.PRO(64).QRY = 1 : REP.PRO(64).LOO = 1 : REP.PRO(64).SRY = 1 : REP.PRO(64).FIL = 1 : REP.PRO(64).ENT = 1 : REP.PRO(64).GRI = "PTH.PTD"
     REP.PRO(64).STAINIDET = 1 : REP.PRO(64).STAINIEDT = 1 : REP.PRO(64).STAINIQRY = 1 : REP.PRO(64).STAINILOO = 1 : REP.PRO(64).STAINISRY = 2 : 
     REP.PRO(64).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(64).ATT(1).COD = "$isReadOnly" : REP.PRO(64).ATT(1).ATT = "true"
     REP.PRO(64).PLK = 1
     
REP.PRO(65) = NewInstance C_AREPPRO AllocGroup REP : # Cost structure
     REP.PRO(65).PRO = "STCNUM" : REP.PRO(65).PTH = "PTH.PTD.STCNUM" : REP.PRO(65).BLC = "LINES" : REP.PRO(65).TPC = 2
     REP.PRO(65).DES = 49730 : REP.PRO(65).SHO = 49798 : REP.PRO(65).TYP = 7 : REP.PRO(65).ACS = ""
     REP.PRO(65).PROTYP = "application/x-string" : REP.PRO(65).PROPREFLG = 1 : REP.PRO(65).ORD = 1010 : REP.PRO(65).LNG = 20 : REP.PRO(65).REP = "PRECEIPT"
     REP.PRO(65).DET = 2 : REP.PRO(65).EDT = 1 : REP.PRO(65).QRY = 1 : REP.PRO(65).LOO = 1 : REP.PRO(65).SRY = 1 : REP.PRO(65).FIL = 1 : REP.PRO(65).ENT = 1 : REP.PRO(65).GRI = "PTH.PTD"
     REP.PRO(65).STAINIDET = 1 : REP.PRO(65).STAINIEDT = 1 : REP.PRO(65).STAINIQRY = 1 : REP.PRO(65).STAINILOO = 1 : REP.PRO(65).STAINISRY = 2 : 
     REP.PRO(65).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(65).ATT(1).COD = "$isReadOnly" : REP.PRO(65).ATT(1).ATT = "true"
     REP.PRO(65).PLK = 1
     
REP.PRO(66) = NewInstance C_AREPPRO AllocGroup REP : # Purchase cost per unit
     REP.PRO(66).PRO = "CSTPUR" : REP.PRO(66).PTH = "PTH.PTD.CSTPUR" : REP.PRO(66).BLC = "LINES" : REP.PRO(66).TPC = 2
     REP.PRO(66).DES = 49788 : REP.PRO(66).SHO = 49788 : REP.PRO(66).TYP = 3 : REP.PRO(66).ACS = ""
     REP.PRO(66).PROTYP = "application/x-decimal" : REP.PRO(66).PROPREFLG = 1 : REP.PRO(66).ORD = 1020 : REP.PRO(66).LNG = 0 : REP.PRO(66).REP = "PRECEIPT"
     REP.PRO(66).DET = 2 : REP.PRO(66).EDT = 1 : REP.PRO(66).QRY = 1 : REP.PRO(66).LOO = 1 : REP.PRO(66).SRY = 1 : REP.PRO(66).FIL = 1 : REP.PRO(66).ENT = 1 : REP.PRO(66).GRI = "PTH.PTD"
     REP.PRO(66).STAINIDET = 1 : REP.PRO(66).STAINIEDT = 1 : REP.PRO(66).STAINIQRY = 1 : REP.PRO(66).STAINILOO = 1 : REP.PRO(66).STAINISRY = 2 : 
     REP.PRO(66).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(66).ATT(1).COD = "$isReadOnly" : REP.PRO(66).ATT(1).ATT = "true"
     REP.PRO(66).PLK = 1
     
REP.PRO(67) = NewInstance C_AREPPRO AllocGroup REP : # Purchase cost
     REP.PRO(67).PRO = "LINCSTPUR" : REP.PRO(67).PTH = "PTH.PTD.LINCSTPUR" : REP.PRO(67).BLC = "LINES" : REP.PRO(67).TPC = 2
     REP.PRO(67).DES = 49790 : REP.PRO(67).SHO = 49790 : REP.PRO(67).TYP = 3 : REP.PRO(67).ACS = ""
     REP.PRO(67).PROTYP = "application/x-decimal" : REP.PRO(67).PROPREFLG = 1 : REP.PRO(67).ORD = 1030 : REP.PRO(67).LNG = 0 : REP.PRO(67).REP = "PRECEIPT"
     REP.PRO(67).DET = 2 : REP.PRO(67).EDT = 1 : REP.PRO(67).QRY = 1 : REP.PRO(67).LOO = 1 : REP.PRO(67).SRY = 1 : REP.PRO(67).FIL = 1 : REP.PRO(67).ENT = 1 : REP.PRO(67).GRI = "PTH.PTD"
     REP.PRO(67).STAINIDET = 1 : REP.PRO(67).STAINIEDT = 1 : REP.PRO(67).STAINIQRY = 1 : REP.PRO(67).STAINILOO = 1 : REP.PRO(67).STAINISRY = 2 : 
     REP.PRO(67).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(67).ATT(1).COD = "$isReadOnly" : REP.PRO(67).ATT(1).ATT = "true"
     REP.PRO(67).PLK = 1
     
REP.PRO(68) = NewInstance C_AREPPRO AllocGroup REP : # Stock cost per unit
     REP.PRO(68).PRO = "CPR" : REP.PRO(68).PTH = "PTH.PTD.CPR" : REP.PRO(68).BLC = "LINES" : REP.PRO(68).TPC = 2
     REP.PRO(68).DES = 49742 : REP.PRO(68).SHO = 49742 : REP.PRO(68).TYP = 3 : REP.PRO(68).ACS = ""
     REP.PRO(68).PROTYP = "application/x-decimal" : REP.PRO(68).PROPREFLG = 1 : REP.PRO(68).ORD = 1040 : REP.PRO(68).LNG = 0 : REP.PRO(68).REP = "PRECEIPT"
     REP.PRO(68).DET = 2 : REP.PRO(68).EDT = 1 : REP.PRO(68).QRY = 1 : REP.PRO(68).LOO = 1 : REP.PRO(68).SRY = 1 : REP.PRO(68).FIL = 1 : REP.PRO(68).ENT = 1 : REP.PRO(68).GRI = "PTH.PTD"
     REP.PRO(68).STAINIDET = 1 : REP.PRO(68).STAINIEDT = 1 : REP.PRO(68).STAINIQRY = 1 : REP.PRO(68).STAINILOO = 1 : REP.PRO(68).STAINISRY = 2 : 
     REP.PRO(68).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(68).ATT(1).COD = "$isReadOnly" : REP.PRO(68).ATT(1).ATT = "true"
     REP.PRO(68).PLK = 1
     
REP.PRO(69) = NewInstance C_AREPPRO AllocGroup REP : # Stock cost
     REP.PRO(69).PRO = "LINAMTCPR" : REP.PRO(69).PTH = "PTH.PTD.LINAMTCPR" : REP.PRO(69).BLC = "LINES" : REP.PRO(69).TPC = 2
     REP.PRO(69).DES = 48631 : REP.PRO(69).SHO = 50684 : REP.PRO(69).TYP = 3 : REP.PRO(69).ACS = ""
     REP.PRO(69).PROTYP = "application/x-decimal" : REP.PRO(69).PROPREFLG = 1 : REP.PRO(69).ORD = 1050 : REP.PRO(69).LNG = 0 : REP.PRO(69).REP = "PRECEIPT"
     REP.PRO(69).DET = 2 : REP.PRO(69).EDT = 1 : REP.PRO(69).QRY = 1 : REP.PRO(69).LOO = 1 : REP.PRO(69).SRY = 1 : REP.PRO(69).FIL = 1 : REP.PRO(69).ENT = 1 : REP.PRO(69).GRI = "PTH.PTD"
     REP.PRO(69).STAINIDET = 1 : REP.PRO(69).STAINIEDT = 1 : REP.PRO(69).STAINIQRY = 1 : REP.PRO(69).STAINILOO = 1 : REP.PRO(69).STAINISRY = 2 : 
     REP.PRO(69).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(69).ATT(1).COD = "$isReadOnly" : REP.PRO(69).ATT(1).ATT = "true"
     REP.PRO(69).PLK = 1
     
REP.PRO(70) = NewInstance C_AREPPRO AllocGroup REP : # Currency
     REP.PRO(70).PRO = "CPRCUR" : REP.PRO(70).PTH = "PTH.PTD.CPRCUR" : REP.PRO(70).BLC = "LINES" : REP.PRO(70).TPC = 2
     REP.PRO(70).DES = 323 : REP.PRO(70).SHO = 323 : REP.PRO(70).TYP = 7 : REP.PRO(70).ACS = ""
     REP.PRO(70).PROTYP = "application/x-string" : REP.PRO(70).PROPREFLG = 1 : REP.PRO(70).ORD = 1060 : REP.PRO(70).LNG = 3 : REP.PRO(70).REP = "PRECEIPT"
     REP.PRO(70).DET = 2 : REP.PRO(70).EDT = 1 : REP.PRO(70).QRY = 1 : REP.PRO(70).LOO = 1 : REP.PRO(70).SRY = 1 : REP.PRO(70).FIL = 1 : REP.PRO(70).ENT = 1 : REP.PRO(70).GRI = "PTH.PTD"
     REP.PRO(70).STAINIDET = 1 : REP.PRO(70).STAINIEDT = 1 : REP.PRO(70).STAINIQRY = 1 : REP.PRO(70).STAINILOO = 1 : REP.PRO(70).STAINISRY = 2 : 
     REP.PRO(70).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(70).ATT(1).COD = "$isMandatory" : REP.PRO(70).ATT(1).ATT = "true"
     REP.PRO(70).ATT(2)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(70).ATT(2).COD = "$isReadOnly" : REP.PRO(70).ATT(2).ATT = "true"
     REP.PRO(70).PLK = 2
     REP.PRO(70).LNK(1) = NewInstance C_AREPLNK AllocGroup REP : # Display
          Call ASET_AREPLNK(REP.PRO(70).LNK(1),'$details',1,'','TABCUR',2,'TABCUR',49838,1,'','CPRCUR',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(70).LNK(1).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(70).LNK(1).CLE(1),'CUR',7,'PTH.PTD.CPRCUR','CPRCUR',0,0,0,0,'CUR',1,1) From ASYRSUBREP
     REP.PRO(70).LNK(2) = NewInstance C_AREPLNK AllocGroup REP : # Selection
          Call ASET_AREPLNK(REP.PRO(70).LNK(2),'$lookup',1,'','TABCUR',9,'TABCUR',6028,1,'','CPRCUR',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(70).LNK(2).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(70).LNK(2).CLE(1),'CUR',7,'PTH.PTD.CPRCUR','CPRCUR',0,0,0,0,'CUR',1,1) From ASYRSUBREP
     REP.PRO(70).LNK(3) = NewInstance C_AREPLNK AllocGroup REP : # Summary
          Call ASET_AREPLNK(REP.PRO(70).LNK(3),'$summary',1,'','TABCUR',10,'TABCUR',12236,1,'','CPRCUR',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(70).LNK(3).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(70).LNK(3).CLE(1),'CUR',7,'PTH.PTD.CPRCUR','CPRCUR',0,0,0,0,'CUR',1,1) From ASYRSUBREP
     REP.PRO(70).LNK(4) = NewInstance C_AREPLNK AllocGroup REP : # List
          Call ASET_AREPLNK(REP.PRO(70).LNK(4),'$query',1,'','TABCUR',5,'TABCUR',49616,1,'','CPRCUR',2,1,1,1,1) From ASYRSUBREP
     
REP.PRO(71) = NewInstance C_AREPPRO AllocGroup REP : # Txn group
     REP.PRO(71).PRO = "TRSFAM" : REP.PRO(71).PTH = "PTH.PTD.TRSFAM" : REP.PRO(71).BLC = "LINES" : REP.PRO(71).TPC = 2
     REP.PRO(71).DES = 17509 : REP.PRO(71).SHO = 17509 : REP.PRO(71).TYP = 7 : REP.PRO(71).ACS = ""
     REP.PRO(71).PROTYP = "application/x-string" : REP.PRO(71).PROPREFLG = 1 : REP.PRO(71).ORD = 1070 : REP.PRO(71).LNG = 20 : REP.PRO(71).REP = "PRECEIPT"
     REP.PRO(71).DET = 2 : REP.PRO(71).EDT = 1 : REP.PRO(71).QRY = 1 : REP.PRO(71).LOO = 1 : REP.PRO(71).SRY = 1 : REP.PRO(71).FIL = 1 : REP.PRO(71).ENT = 1 : REP.PRO(71).GRI = "PTH.PTD"
     REP.PRO(71).STAINIDET = 1 : REP.PRO(71).STAINIEDT = 1 : REP.PRO(71).STAINIQRY = 1 : REP.PRO(71).STAINILOO = 1 : REP.PRO(71).STAINISRY = 2 : 
     REP.PRO(71).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(71).ATT(1).COD = "$isReadOnly" : REP.PRO(71).ATT(1).ATT = "true"
     REP.PRO(71).PLK = 2
     REP.PRO(71).LNK(1) = NewInstance C_AREPLNK AllocGroup REP : # Display
          Call ASET_AREPLNK(REP.PRO(71).LNK(1),'$details',1,'','ATABDIV',2,'ATABDIV',49838,1,'','TRSFAM',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(71).LNK(1).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(1).CLE(1),'NUMTAB',2,'9','',0,0,0,0,'NUMTAB',1,1) From ASYRSUBREP
          REP.PRO(71).LNK(1).CLE(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(1).CLE(2),'CODE',7,'PTH.PTD.TRSFAM','TRSFAM',0,0,0,0,'CODE',1,1) From ASYRSUBREP
          REP.PRO(71).LNK(1).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(1).PAR(1),'CODE',7,'','',0,0,0,1,'',2,2) From ASYRSUBREP
          REP.PRO(71).LNK(1).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(1).PAR(2),'NUMTAB',2,'','',0,0,0,1,'',2,2) From ASYRSUBREP
     REP.PRO(71).LNK(2) = NewInstance C_AREPLNK AllocGroup REP : # Selection
          Call ASET_AREPLNK(REP.PRO(71).LNK(2),'$lookup',1,'','ATABDIV',9,'ATABDIV',6028,1,'','TRSFAM',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(71).LNK(2).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(2).CLE(1),'NUMTAB',2,'9','',0,0,0,0,'NUMTAB',1,1) From ASYRSUBREP
          REP.PRO(71).LNK(2).CLE(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(2).CLE(2),'CODE',7,'PTH.PTD.TRSFAM','TRSFAM',0,0,0,0,'CODE',1,1) From ASYRSUBREP
          REP.PRO(71).LNK(2).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(2).PAR(1),'CODE',7,'','',0,0,0,1,'',2,2) From ASYRSUBREP
          REP.PRO(71).LNK(2).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(2).PAR(2),'NUMTAB',2,'9','',0,0,0,1,'',2,2) From ASYRSUBREP
     REP.PRO(71).LNK(3) = NewInstance C_AREPLNK AllocGroup REP : # List
          Call ASET_AREPLNK(REP.PRO(71).LNK(3),'$query',1,'','ATABDIV',5,'ATABDIV',49616,1,'','TRSFAM',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(71).LNK(3).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(3).PAR(1),'CODE',7,'','',0,0,0,1,'',2,2) From ASYRSUBREP
          REP.PRO(71).LNK(3).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(71).LNK(3).PAR(2),'NUMTAB',2,'9','',0,0,0,1,'',2,2) From ASYRSUBREP
     
REP.PRO(72) = NewInstance C_AREPPRO AllocGroup REP : # Type
     REP.PRO(72).PRO = "LINPURTYP" : REP.PRO(72).PTH = "PTH.PTD.LINPURTYP" : REP.PRO(72).BLC = "LINES" : REP.PRO(72).TPC = 2
     REP.PRO(72).DES = 680 : REP.PRO(72).SHO = 680 : REP.PRO(72).TYP = 10 : REP.PRO(72).ACS = ""
     REP.PRO(72).PROTYP = "application/x-choice" : REP.PRO(72).PROPREFLG = 1 : REP.PRO(72).ORD = 1080 : REP.PRO(72).LNG = 5 : REP.PRO(72).REP = "PRECEIPT"
     REP.PRO(72).DET = 2 : REP.PRO(72).EDT = 1 : REP.PRO(72).QRY = 1 : REP.PRO(72).LOO = 1 : REP.PRO(72).SRY = 1 : REP.PRO(72).FIL = 1 : REP.PRO(72).ENT = 1 : REP.PRO(72).GRI = "PTH.PTD"
     REP.PRO(72).STAINIDET = 1 : REP.PRO(72).STAINIEDT = 1 : REP.PRO(72).STAINIQRY = 1 : REP.PRO(72).STAINILOO = 1 : REP.PRO(72).STAINISRY = 2 : 
     REP.PRO(72).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(72).ATT(1).COD = "$isReadOnly" : REP.PRO(72).ATT(1).ATT = "true"
     REP.PRO(72).MNL = 646 : REP.PRO(72).PLK = 1
     
REP.PRO(73) = NewInstance C_AREPPRO AllocGroup REP : # Matching tolerance
     REP.PRO(73).PRO = "MATTOL" : REP.PRO(73).PTH = "PTH.PTD.MATTOL" : REP.PRO(73).BLC = "LINES" : REP.PRO(73).TPC = 2
     REP.PRO(73).DES = 43884 : REP.PRO(73).SHO = 43884 : REP.PRO(73).TYP = 7 : REP.PRO(73).ACS = ""
     REP.PRO(73).PROTYP = "application/x-string" : REP.PRO(73).PROPREFLG = 1 : REP.PRO(73).ORD = 1090 : REP.PRO(73).LNG = 5 : REP.PRO(73).REP = "PRECEIPT"
     REP.PRO(73).DET = 2 : REP.PRO(73).EDT = 1 : REP.PRO(73).QRY = 1 : REP.PRO(73).LOO = 1 : REP.PRO(73).SRY = 1 : REP.PRO(73).FIL = 1 : REP.PRO(73).ENT = 1 : REP.PRO(73).GRI = "PTH.PTD"
     REP.PRO(73).STAINIDET = 1 : REP.PRO(73).STAINIEDT = 1 : REP.PRO(73).STAINIQRY = 1 : REP.PRO(73).STAINILOO = 1 : REP.PRO(73).STAINISRY = 2 : 
     REP.PRO(73).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(73).ATT(1).COD = "$isReadOnly" : REP.PRO(73).ATT(1).ATT = "true"
     REP.PRO(73).PLK = 1
     
REP.PRO(74) = NewInstance C_AREPPRO AllocGroup REP : # EU increase
     REP.PRO(74).PRO = "EECINCRAT" : REP.PRO(74).PTH = "PTH.PTD.EECINCRAT" : REP.PRO(74).BLC = "LINES" : REP.PRO(74).TPC = 2
     REP.PRO(74).DES = 4204 : REP.PRO(74).SHO = 3698 : REP.PRO(74).TYP = 3 : REP.PRO(74).ACS = ""
     REP.PRO(74).PROTYP = "application/x-decimal" : REP.PRO(74).PROPREFLG = 1 : REP.PRO(74).ORD = 1100 : REP.PRO(74).LNG = 0 : REP.PRO(74).REP = "PRECEIPT"
     REP.PRO(74).DET = 2 : REP.PRO(74).EDT = 1 : REP.PRO(74).QRY = 1 : REP.PRO(74).LOO = 1 : REP.PRO(74).SRY = 1 : REP.PRO(74).FIL = 1 : REP.PRO(74).ENT = 1 : REP.PRO(74).GRI = "PTH.PTD"
     REP.PRO(74).STAINIDET = 1 : REP.PRO(74).STAINIEDT = 1 : REP.PRO(74).STAINIQRY = 1 : REP.PRO(74).STAINILOO = 1 : REP.PRO(74).STAINISRY = 2 : 
     REP.PRO(74).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(74).ATT(1).COD = "$isReadOnly" : REP.PRO(74).ATT(1).ATT = "true"
     REP.PRO(74).PLK = 1
     
REP.PRO(75) = NewInstance C_AREPPRO AllocGroup REP : # Country of origin
     REP.PRO(75).PRO = "ORICRY" : REP.PRO(75).PTH = "PTH.PTD.ORICRY" : REP.PRO(75).BLC = "LINES" : REP.PRO(75).TPC = 2
     REP.PRO(75).DES = 2735 : REP.PRO(75).SHO = 2735 : REP.PRO(75).TYP = 7 : REP.PRO(75).ACS = ""
     REP.PRO(75).PROTYP = "application/x-string" : REP.PRO(75).PROPREFLG = 1 : REP.PRO(75).ORD = 1110 : REP.PRO(75).LNG = 3 : REP.PRO(75).REP = "PRECEIPT"
     REP.PRO(75).DET = 2 : REP.PRO(75).EDT = 1 : REP.PRO(75).QRY = 1 : REP.PRO(75).LOO = 1 : REP.PRO(75).SRY = 1 : REP.PRO(75).FIL = 1 : REP.PRO(75).ENT = 1 : REP.PRO(75).GRI = "PTH.PTD"
     REP.PRO(75).STAINIDET = 1 : REP.PRO(75).STAINIEDT = 1 : REP.PRO(75).STAINIQRY = 1 : REP.PRO(75).STAINILOO = 1 : REP.PRO(75).STAINISRY = 2 : 
     REP.PRO(75).ATT(1)= NewInstance C_AREPATT AllocGroup REP
          REP.PRO(75).ATT(1).COD = "$isReadOnly" : REP.PRO(75).ATT(1).ATT = "true"
     REP.PRO(75).PLK = 2
     REP.PRO(75).LNK(1) = NewInstance C_AREPLNK AllocGroup REP : # Display
          Call ASET_AREPLNK(REP.PRO(75).LNK(1),'$details',1,'','TABCOUNTRY',2,'TABCOUNTRY',49838,1,'','ORICRY',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(75).LNK(1).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(1).CLE(1),'CRY',7,'PTH.PTD.ORICRY','ORICRY',0,0,0,0,'CRY',1,1) From ASYRSUBREP
          REP.PRO(75).LNK(1).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(1).PAR(1),'CUR',7,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(1).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(1).PAR(2),'EECFLG',10,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(1).PAR(3)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(1).PAR(3),'LAN',7,'','',0,0,0,1,'',2,1) From ASYRSUBREP
     REP.PRO(75).LNK(2) = NewInstance C_AREPLNK AllocGroup REP : # Selection
          Call ASET_AREPLNK(REP.PRO(75).LNK(2),'$lookup',1,'','TABCOUNTRY',9,'TABCOUNTRY',6028,1,'','ORICRY',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(75).LNK(2).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(2).CLE(1),'CRY',7,'PTH.PTD.ORICRY','ORICRY',0,0,0,0,'CRY',1,1) From ASYRSUBREP
          REP.PRO(75).LNK(2).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(2).PAR(1),'CUR',7,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(2).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(2).PAR(2),'EECFLG',10,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(2).PAR(3)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(2).PAR(3),'LAN',7,'','',0,0,0,1,'',2,1) From ASYRSUBREP
     REP.PRO(75).LNK(3) = NewInstance C_AREPLNK AllocGroup REP : # Summary
          Call ASET_AREPLNK(REP.PRO(75).LNK(3),'$summary',1,'','TABCOUNTRY',10,'TABCOUNTRY',12236,1,'','ORICRY',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(75).LNK(3).CLE(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(3).CLE(1),'CRY',7,'PTH.PTD.ORICRY','ORICRY',0,0,0,0,'CRY',1,1) From ASYRSUBREP
          REP.PRO(75).LNK(3).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(3).PAR(1),'CUR',7,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(3).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(3).PAR(2),'EECFLG',10,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(3).PAR(3)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(3).PAR(3),'LAN',7,'','',0,0,0,1,'',2,1) From ASYRSUBREP
     REP.PRO(75).LNK(4) = NewInstance C_AREPLNK AllocGroup REP : # List
          Call ASET_AREPLNK(REP.PRO(75).LNK(4),'$query',1,'','TABCOUNTRY',5,'TABCOUNTRY',49616,1,'','ORICRY',2,1,1,1,1) From ASYRSUBREP
          REP.PRO(75).LNK(4).PAR(1)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(4).PAR(1),'CUR',7,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(4).PAR(2)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(4).PAR(2),'EECFLG',10,'','',0,0,0,1,'',1,2) From ASYRSUBREP
          REP.PRO(75).LNK(4).PAR(3)  = NewInstance C_AREPPAR AllocGroup REP
               Call ASET_AREPPAR(REP.PRO(75).LNK(4).PAR(3),'LAN',7,'','',0,0,0,1,'',2,1) From ASYRSUBREP
     
Gosub PROPERTY_REP From WMREP6PRECEIPT
Return



