#<AdxTL>@(#)0.0.0.0 $Revision$Class Valuation methods
# Supervisor
## CRUD-CLASSE ## TABCOSTMET
# 2018-08-27 12:51:01 652


Gosub TEST : End

############################################################################################
# Program TEST
############################################################################################
$TEST
Local Integer SILENCE
Call OUVRE_TRACE("Test program")From LECFIC

Gosub ATRT_TEST

Call LEC_TRACE From LECFIC
Call SUPP_TRACE From LECFIC


Return

#---------------------------------------------------------------#
$ATRT_TEST
Local Integer ASTATUS
If !SILENCE : Call TRACE("1 --> Open main table" ) From ASYRCOM : Endif
Local File TABCOSTMET [TCM_]

If !SILENCE : Call TRACE("2 --> Local Instance C_TABCOSTMET") From ASYRCOM : Endif
Local Instance TABCOSTMET Using C_TABCOSTMET

If !SILENCE : Call TRACE("3 --> New Instance C_TABCOSTMET") From ASYRCOM : Endif
TABCOSTMET = NewInstance C_TABCOSTMET AllocGroup null

If !SILENCE : Call TRACE("4 --> Reading main table, Read First") From ASYRCOM : Endif
Read [TCM_]TCM0 First
If !fstat
 If !SILENCE : Call TRACE("Call program read of TABCOSTMET") From ASYRCOM : Endif
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOSTMET.AREAD([TCM_]VLTCOD))
Endif

If !SILENCE
 Call TRACE("5 --> Check :"-num$([L]ASTATUS)) From ASYRCOM
 Call TRACE("TABCOSTMET.VLTCOD ="-num$(TABCOSTMET.VLTCOD)) From ASYRCOM
 Call TRACE("6 --> List of keys :") From ASYRCOM
 For I=1 To maxtab(TABCOSTMET.AKEYS)
  Call TRACE("-"-num$(I)-":"-TABCOSTMET.AKEYS(I)) From ASYRCOM
 Next
Endif
Close Local File [TCM_]
FreeGroup TABCOSTMET
Return

############################################################################################
### Funprog _AREADETAG
############################################################################################
Funprog _AREADETAG(TABCOSTMET,ACLE,ASTATUS,_ETAG)
Variable Instance TABCOSTMET Using C_TABCOSTMET
Value Char ACLE
Variable Integer ASTATUS
Variable Char _ETAG
[L]ASTATUS = [V]CST_AOK
Local Char _VLTCOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VLTCOD = num$([L]CLE(1)) : Endif
Raz [L]_ETAG
Local File TABCOSTMET [TCM]
Default File [F:TCM]
Read [F:TCM]TCM0 = [L]_VLTCOD
If fstat
 [L]ASTATUS = [V]CST_AERROR
Endif
If [L]ASTATUS=[V]CST_AOK and dim([F:TCM]UPDTICK)>0
 [L]_ETAG = num$([F:TCM]UPDTICK)
Endif
End [L]ASTATUS

############################################################################################
### Subprog _AREADSUP
############################################################################################
Subprog _AREADSUP(TABCOSTMET,ACLE,ASTATUS)
Variable Instance TABCOSTMET Using C_TABCOSTMET
Value Char ACLE
Variable Integer ASTATUS
Local Char _VLTCOD(3)
Gosub SET_CLE From ASYRSUB
If [L]CLE(1)<>"" : [L]_VLTCOD = num$([L]CLE(1)) : Endif
[L]ASTATUS = max([L]ASTATUS,fmet TABCOSTMET.AREAD([L]_VLTCOD))
End

############################################################################################
### Subprog AREAD
############################################################################################
Subprog AREAD(TABCOSTMET,_VLTCOD,ASTATUS)
Variable Instance TABCOSTMET Using C_TABCOSTMET
Value Char _VLTCOD
Variable Integer ASTATUS

If TABCOSTMET = null : End : Endif

Gosub AVARIABLES From WMC00TABCOSTMET
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If TABCOSTMET.APARENT=null
 [L]A_I = TABCOSTMET.freeSnapshot
 TABCOSTMET.snapshotEnabled = 0
 TABCOSTMET.setAccessorEnabled = 0
Endif

Gosub ATRT_AREAD
If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif

If [L]ASTATUS<[V]CST_AERROR & TABCOSTMET.APARENT=null
 # Load Link
 [L]ASTATUS = max([L]ASTATUS,fmet TABCOSTMET._ALNKPRO)
 If [L]ASTATUS>=[V]CST_AERROR : Goto AREAD_END : Endif
Endif

$AREAD_END
If TABCOSTMET.APARENT=null
 TABCOSTMET.snapshotEnabled = 1
 TABCOSTMET.setAccessorEnabled = 1
Endif
LogicClose File [TCM]
End

#-----------------------------------------------------#
$ATRT_AREAD
[L]ASTATUS = max([L]ASTATUS,fmet TABCOSTMET._ACTION_PARAM("AREAD_BEFORE",[L]_VLTCOD))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Default File [F:TCM]
Read [F:TCM]TCM0 = [L]_VLTCOD
If fstat
[L]A_ERROR = [L]_VLTCOD
& -":"-mess(23,100,1)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(TABCOSTMET,"",0,[L]ASTATUS,[V]CST_AHTTP_NOT_FOUND,[L]A_ERROR) : Goto AREAD_END
Endif
[L]A_STRSITE = ""
[L]A_STRACC = ""
If dim([F:TCM]AUUID)>0 & [F:TCM]AUUID=NullUuid
 [F:TCM]AUUID = getUuid
Endif
SetInstance TABCOSTMET With [F:TCM]
TABCOSTMET.ASTALIN = [V]CST_ALL

[L]A_NEWCOL = 0
For [L]A_I=1 To 2
 If ([F:TCM]RCPVLTCOD([L]A_I-1)<>0 or [F:TCM]RCPVLT2([L]A_I-1)<>0 or [F:TCM]ISSVLTCOD([L]A_I-1)<>0 or [F:TCM]ISSVLT2([L]A_I-1)<>0
& or [F:TCM]CUNPOS([L]A_I-1)<>0 or [F:TCM]CUNPOS2([L]A_I-1)<>0 or [F:TCM]CUNNEG([L]A_I-1)<>0 or [F:TCM]CUNNEG2([L]A_I-1)<>0
& or [F:TCM]PRIREG([L]A_I-1)<>0 or [F:TCM]NULPRI([L]A_I-1)<>0)
  [L]A_NEWCOL += 1
  TABCOSTMET.L_METHOD(A_NEWCOL) = NewInstance  C_TABCOSTMET_L_METHOD(TABCOSTMET.ACTX,NullUuid,[L]A_I,TABCOSTMET,"L_METHOD") AllocGroup TABCOSTMET
  TABCOSTMET.L_METHOD(A_NEWCOL).RCPVLTCOD = [F:TCM]RCPVLTCOD([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).RCPVLT2 = [F:TCM]RCPVLT2([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).ISSVLTCOD = [F:TCM]ISSVLTCOD([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).ISSVLT2 = [F:TCM]ISSVLT2([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).CUNPOS = [F:TCM]CUNPOS([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).CUNPOS2 = [F:TCM]CUNPOS2([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).CUNNEG = [F:TCM]CUNNEG([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).CUNNEG2 = [F:TCM]CUNNEG2([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).PRIREG = [F:TCM]PRIREG([L]A_I-1)
  TABCOSTMET.L_METHOD(A_NEWCOL).NULPRI = [F:TCM]NULPRI([L]A_I-1)
  [L]ASTATUS = max([L]ASTATUS,fmet TABCOSTMET.L_METHOD(A_NEWCOL).ACTION("AREAD_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Endif
Next
[L]ASTATUS = max([L]ASTATUS,fmet TABCOSTMET.ACTION("AREAD_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

For [AXX] Where CODFIC="TABCOSTMET" & ZONE="TCMAXX" & IDENT1=TABCOSTMET.VLTCOD & IDENT2=""
 Call ASETTEXTRA(TABCOSTMET.AXX,TABCOSTMET.AllocGrp(),"TCMAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOSTMET.AXX(maxtab(TABCOSTMET.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOSTMET.AGETTEXTRA("TCMAXX"))
 Call ASETTEXTRA(TABCOSTMET.AXX,TABCOSTMET.AllocGrp(),"TCMAXX",
& fmet TABCOSTMET.AGETTEXTRALAN("TCMAXX",TABCOSTMET.ACTX.AFOLD.ALANGDEF),
& TABCOSTMET.ACTX.LAN) From ASYRSUB
Endif
For [AXX] Where CODFIC="TABCOSTMET" & ZONE="TCMSHOAXX" & IDENT1=TABCOSTMET.VLTCOD & IDENT2=""
 Call ASETTEXTRA(TABCOSTMET.AXX,TABCOSTMET.AllocGrp(),"TCMSHOAXX",[F:AXX]TEXTE,[F:AXX]LANGUE) From ASYRSUB
 TABCOSTMET.AXX(maxtab(TABCOSTMET.AXX)).FLG = 0
Next AXX
If !len(fmet TABCOSTMET.AGETTEXTRA("TCMSHOAXX"))
 Call ASETTEXTRA(TABCOSTMET.AXX,TABCOSTMET.AllocGrp(),"TCMSHOAXX",
& fmet TABCOSTMET.AGETTEXTRALAN("TCMSHOAXX",TABCOSTMET.ACTX.AFOLD.ALANGDEF),
& TABCOSTMET.ACTX.LAN) From ASYRSUB
Endif

Return



