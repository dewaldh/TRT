#<AdxTL>@(#)0.0.0.0 $Revision$Class Plans to action
# Supervisor
## CRUD-CLASSE ## CCMPLANHF1
# 2018-08-27 13:12:58 833


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(CCMPLANHF1,ASTATUS)
Variable Instance CCMPLANHF1 Using R_CCMPLANHF1
Variable Integer ASTATUS

If CCMPLANHF1 = null : End : Endif

Gosub AVARIABLES From WMR00CCMPLANHF1
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet CCMPLANHF1.ACTX.AGETAFCRIGHT(CCMPLANHF1,"GESCCM",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet CCMPLANHF1.ACTX.AGETAFCRIGHTC(CCMPLANHF1,"GESCCM",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_CCMPLANHF1
Else
 Gosub AINSERT_CCMPLANHF1
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = CCMPLANHF1.freeSnapshot
CCMPLANHF1.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
CCMPLANHF1.ASTALIN = [V]CST_ANEW
CCMPLANHF1.CCMPH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet CCMPLANHF1._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet CCMPLANHF1._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet CCMPLANHF1._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If CCMPLANHF1.CCMPH.ASTALIN = [V]CST_ANEWDEL : Return : Endif
CCMPLANHF1.CCMPH.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.CCMPH.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMPLANHF1.CCMPH.CCMPLAND) : # CCMPLAND -- 2
 If CCMPLANHF1.CCMPH.CCMPLAND(A_N2) <> null
& and !find(CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ACTION("AINSERT_CONTROL_BEFORE"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMPLANHF1.CCMPH.CCMPSTATUS) : # CCMPSTATUS -- 3
 If CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2) <> null
& and !find(CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(CCMPLANHF1.CCMPH.CCMPLAND) : # CCMPLAND -- 2
 If CCMPLANHF1.CCMPH.CCMPLAND(A_N2) <> null
& and !find(CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ACTION("AINSERT_CONTROL_AFTER"))
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(CCMPLANHF1.CCMPH.CCMPSTATUS) : # CCMPSTATUS -- 3
 If CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2) <> null
& and !find(CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.CCMPH.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_CCMPLANHF1
Trbegin [F:CCMPH]
 Gosub AINSERT_CCMPLANHF1
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(CCMPLANHF1.CCMPH.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 CCMPLANHF1.CCMPH.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMPLANHF1.CCMPH.CCMPLAND)
 If CCMPLANHF1.CCMPH.CCMPLAND(A_N2) <> null
  If CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ASTALIN=[V]CST_ADEL or CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMPLANHF1.CCMPH.CCMPLAND(A_N2)
   CCMPLANHF1.CCMPH.CCMPLAND(A_N2) = null
  Elsif CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ASTALIN <> [V]CST_ALL
   CCMPLANHF1.CCMPH.CCMPLAND(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(CCMPLANHF1.CCMPH.CCMPSTATUS)
 If CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2) <> null
  If CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2).ASTALIN=[V]CST_ADEL or CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2)
   CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2) = null
  Elsif CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2).ASTALIN <> [V]CST_ALL
   CCMPLANHF1.CCMPH.CCMPSTATUS(A_N2).ASTALIN = [V]CST_ALL
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_CCMPLANHF1
[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.CCMPH._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet CCMPLANHF1.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If CCMPLANHF1.snapshotEnabled=1
 [L]A_RETIK = CCMPLANHF1.revertUpdTick
Endif
[L]ASTATUS = max(fmet CCMPLANHF1.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



