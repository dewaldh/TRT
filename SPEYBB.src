#<AdxTL>@(#)0.0.0.0 $Revision$
#-------------------------------------------------------------
# Script            : SPEYBB
# Creation date     : 30/08/2018
# Version           : 2.11
# Authors (Company) : DH (Leverage)
# Module            : Intercompany
# ------------------------------------------------------------
# Epic              : https://jira.leveragetech.com.au/browse/DFCX1-27
# Description       : Business Batch Screens - Hybrid Development
#-------------------------------------------------------------

$ACTION
Case ACTION
  When Default
Endcase
Return

#------------------------------------------------------------------------------------#
# Header Site Control
#------------------------------------------------------------------------------------#
Subprog C_YBATFCY(VALEUR)
Variable Char    VALEUR()
  If [M:YBB0]YBATNBR = "" and GBATNBR = "" Then
    #Generate Batch Number
    Local Char RETVAL(30)
    Local Integer STA
    Call NUMERO("YBBHS","",date$,"null",RETVAL,STA) From SUBANM
    GBATNBR = RETVAL
    [M:YBB0]YBATNBR = RETVAL
    [M:YBB0]YBATNBRTEMP = [M:YBB0]YBATNBR

    #Set Default Values
    [M:YBB0]YBATDAT = date$
    [M:YBB0]YFINSTA = 2
    [M:YBB0]YBATSTA = 1

  Endif

  Affzo [M:YBB0]

End

#------------------------------------------------------------------------------------#
# Site Control
#------------------------------------------------------------------------------------#

Subprog C_YFCY(VALEUR)
Variable Char    VALEUR()

  #Selection of Dimension values
  Local Char REQUEST(255)(0..5)

  REQUEST(0) = "SELECT CPY.CPY_0, CPY.ACM_0, LED.LED_0, LED.COA_0, LED.DIE_0, LED.DIE_1, LED.DIE_2, LED.DIE_3, LED.DIE_4, CPY.YCPYACT_0"
  #REQUEST(0) = "SELECT CPY.CPY_0, CPY.ACM_0, LED.LED_0, LED.COA_0, CPY.YCPYACT_0"
  REQUEST(1) -= "From FACILITY FCY"
  REQUEST(2) -= "INNER JOIN COMPANY CPY ON CPY.MAIFCY_0 = FCY.FCY_0 and FCY.LEGCPY_0 = CPY.CPY_0"
  REQUEST(3) -= "INNER JOIN GACM GCM ON GCM.GCM_0 = CPY.ACM_0"
  REQUEST(4) -= "INNER JOIN GLED LED ON LED.LED_0 = GCM.LED_0"
  REQUEST(5) -= "Where FCY.FCY_0 = '"+VALEUR+"'"

  For (Char CPY, Char ACM, Char LED, Char COA, Char DIE0, Char DIE1, Char DIE2, Char DIE3, Char DIE4, Integer CPYACT) From "5" Sql REQUEST As [YLNK]
    If CPY <> "" Then
      If CPYACT = 2 Then
        [M:YBB1]YCPY(nolign-1) = CPY
        [M:YBB1]YACM(nolign-1) = ACM
        [M:YBB1]YCOA(nolign-1) = COA
        [M:YBB1]YLED1(nolign-1) = LED
        [M:YBB1]YDIE0(nolign-1) = DIE0
        [M:YBB1]YDIE1(nolign-1) = DIE1
        [M:YBB1]YDIE2(nolign-1) = DIE2
        [M:YBB1]YDIE3(nolign-1) = DIE3
        [M:YBB1]YDIE4(nolign-1) = DIE4
      Else
        GMESSAGE = mess(19,6254,1)
        GOK = 0
        GERR = 1
        zonsui = "[M:YBB1]YFCY(nolign-1)"
        Break
      Endif
    Endif
  Next

  If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
  Read [F:JOU]JOU0 = [M:YBB1]YJOU(nolign-1)
  If [F:JOU]YBUSBATTYP = 1 Then
  #Check Default ELA - ALL ACTIVE ELAS Where THE RECIPIENT SITE ON THE ELA IS EQUAL To THE SITE ABOVE ARE AVAILABLE For SELECTION.
  If clalev([F:YELA]) = 0 : Local File YENTLOAAGR  [YELA] : Endif
  For [F:YELA] Where YFCYREC = VALEUR and YENAFLG = 2
    If [F:YELA]YDEFFLG = 2 : [M:YBB1]YELA(nolign-1) = [F:YELA]YLONAGR : Endif
  Next
  Affzo [M:YBB1]YELA(nolign-1)
  Endif

  #Carry over previous lig
  If nolign - 1 >= 1
    If [M:YBB1]YENTTYP(nolign-1) = "" Then
      [M:YBB1]YENTTYP(nolign-1) = [M:YBB1]YENTTYP(nolign-2)
      [M:YBB1]YJOU(nolign-1) = [M:YBB1]YJOU(nolign-2)
      #Defect DFCX1-266
      [M:YBB1]YDETDES(nolign-1) = [M:YBB1]YDETDES(nolign-2)
      [M:YBB1]YREF(nolign-1) = [M:YBB1]YREF(nolign-2)
      #[M:YBB1]YELA(nolign-1) = [M:YBB1]YELA(nolign-2)
      Affzo [M:YBB1]YENTTYP(nolign-1)
      Affzo [M:YBB1]YJOU(nolign-1)
      #Affzo [M:YBB1]YELA(nolign-1)
    Endif
  Endif

  #Set Field Value
  [M:YBB1]YLIGDES(nolign-1) = [M:YBB0]YBATDES

End

#------------------------------------------------------------------------------------#
# ELA Control
#------------------------------------------------------------------------------------#
Subprog C_YELA(VALEUR)
Variable Char    VALEUR()

  #Check entered ELA value
  Local Integer RETVAL
  If VALEUR <> ""
    If [M:YBB1]YBATTYP(nolign-1) = 1 #Check Batch Type = 1 as IE
      Call C_YELA(VALEUR) From YBBSELELA
    Endif
  Endif
End

#------------------------------------------------------------------------------------#
# Debit/Credit Controls
#------------------------------------------------------------------------------------#
# -- Debit
Subprog C_YDEB(VALEUR) #Control Field
Variable Decimal VALEUR
  If VALEUR > 0
    Diszo [M:YBB1]YCDT(nolign-1)
    [M:YBB1]YCDT(nolign-1) = 0
    #[M:YBB1]YTOTDEB += VALEUR
    #[M:YBB1]YTOTDEB -= [M:YBB1]YDEB(nolign-1)
  Elsif VALEUR < 0
    GMESSAGE = mess(29,6254,1)
    GOK = 0
    GERR = 1
  Endif
  Affzo [M:YBB1]YCDT(nolign-1) #: Affzo [M:YBB1]YTOTCRE : Affzo [M:YBB1]YTOTDEB
End

Subprog AM_YDEB(VALEUR) #After Change
Variable Decimal VALEUR
  #Zero Value Check
#  If VALEUR < 0
#    GMESSAGE = mess(11,6254,1)
#    GOK = 0
#    GERR = 1
#    zonsui = "[M:YBB1]YDEB(nolign-1)"
#    End
#  Endif
  If VALEUR = 0
    Actzo [M:YBB1]YCDT(nolign-1)
  Endif
  If VALEUR < 0
    zonsui = "[M:YBB1]YDEB(nolign-1)"
  Endif

End

# -- Credit
Subprog C_YCDT(VALEUR) #Control Field
Variable Decimal VALEUR
  If VALEUR > 0
    Diszo [M:YBB1]YDEB(nolign-1)
    [M:YBB1]YDEB(nolign-1) = 0
    #[M:YBB1]YTOTCRE += VALEUR
    #[M:YBB1]YTOTCRE -= [M:YBB1]YCDT(nolign-1)
  Elsif VALEUR < 0
    GMESSAGE = mess(30,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YBB1]YCDT(nolign-1)"
  Elsif VALEUR = 0 and [M:YBB1]YDEB(nolign-1) = 0
    GMESSAGE = mess(9,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YBB1]YCDT(nolign-1)"
    End
  Endif
  Affzo [M:YBB1]YDEB(nolign-1) #: Affzo [M:YBB1]YTOTCRE : Affzo [M:YBB1]YTOTDEB
End

Subprog AM_YCDT(VALEUR) #After Change
Variable Decimal VALEUR
#  #Zero Value Check
#  If VALEUR < 0
#    GMESSAGE = mess(11,6254,1)
#    GOK = 0
#    GERR = 1
#    zonsui = "[M:YBB1]YDEB(nolign-1)"
#    End
#  Endif
  If VALEUR = 0
    Actzo [M:YBB1]YDEB(nolign-1)
  Elsif VALEUR < 0
    zonsui = "[M:YBB1]YCDT(nolign-1)"
  Endif
End

#------------------------------------------------------------------------------------#
# Before Field - BP
#------------------------------------------------------------------------------------#
Subprog AV_YBP(VALEUR)
Variable Char    VALEUR()
#  If [M:YBB1]YCTRL <> ""
#    GMESSAGE = mess(11,6254,1)
#    GOK = 0
#    GERR = 1
#    zonsui = "[M:YBB1]YBP(nolign-1)"
#    End
#  Endif
End

#------------------------------------------------------------------------------------#
# Account Control
#------------------------------------------------------------------------------------#
Subprog C_YACC(VALEUR)
Variable Char    VALEUR()

  If VALEUR <> "" Then
    Local Integer I : I = 0

    If clalev([F:GAC]) = 0 : Local File GACCOUNT [GAC] : Endif
    Read [F:GAC]GAC0 = [M:YBB1]YCOA(nolign-1);VALEUR
    #Check VAT based on Account
    If [F:GAC]FLGVAT <> 1 Then
      [M:YBB1]YTAX(nolign-1) = [F:GAC]VAT
      #Get VAT and VAT Rates for GST Amount
      If clalev([F:TVT]) = 0 : Local File TABVAT [TVT] : Endif
      Read [F:TVT]TVT1 = [F:GAC]VAT
      [M:YBB1]YGSTAMT(nolign-1) = [F:TVT]VATRAT
    Endif
   #Check PJM Fields
    If [F:GAC]YPJM = 2 Then
      Actzo [M:YBB1]YPJT(nolign-1)
    Else
      Diszo [M:YBB1]YPJT(nolign-1)
    Endif
  Endif

  #Journal check for Bank Validations
  If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
  Read [F:JOU]JOU0 = [M:YBB1]YJOU(nolign-1)
  If [F:JOU]YBUSBATTYP = 2 Then #Journal Type Cash
    #Check Bank Code
    Call VAL_BBANACC(VALEUR) From YBBACCSEL
  Endif

  Call TAXRULEVAL(VALEUR)
  Local Char ENT(20) : ENT = "ACT"
  Call GET_DIM(VALEUR,ENT)

  Affzo [M:YBB1]YCTRL(nolign-1) : Affzo [M:YBB1]YBP(nolign-1)   : Affzo [M:YBB1]YBAN(nolign-1)
  Affzo [M:YBB1]YCCE0(nolign-1) : Affzo [M:YBB1]YCCE1(nolign-1) : Affzo [M:YBB1]YCCE2(nolign-1)
  Affzo [M:YBB1]YCCE3(nolign-1) : Affzo [M:YBB1]YCCE4(nolign-1) : Affzo [M:YBB1]YTAX(nolign-1)

End

Subprog AM_YACC(VALEUR)
Variable Char    VALEUR()
# #Journal check for Bank Validations
#  If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
#  Read [F:JOU]JOU0 = [M:YBB1]YJOU(nolign-1)
#  If [F:JOU]YBUSBATTYP = 2 Then #Journal Type Cash
#    #Check Bank Code
#    Call VAL_BBANACC(VALEUR) From YBBACCSEL
#  Endif
  #Set Tax Fields
  Call TAXRULEVAL(VALEUR)
  Local Integer RETACCVAL
  If VALEUR <> "" Then
  RETACCVAL = func YBBACCSEL.YBBACCSEL_VAL(VALEUR)
    If RETACCVAL = 0 Then
      GMESSAGE = mess(20,6254,1)
      GERR = 1
      mkstat = 2
      zonsui = "[M:YBB1]YACC(nolign-1)"
      End
    Endif
  Endif
  Local Char ENTPOP(3) : ENTPOP = "ACC"
  Call POP_CTRL(ENTPOP)
  Affzo [M:YBB1]YTAX(nolign-1)

End

Subprog POP_CTRL(ENTRY)
Variable Char ENTRY()

  If ENTRY = "ACC"
    [M:YBB1]YCTRL(nolign-1) = ""
    [M:YBB1]YBP(nolign-1) = ""
  Endif

End

#------------------------------------------------------------------------------------#
# Entry Type Control
#------------------------------------------------------------------------------------#
Subprog C_YENTTYP(VALEUR)
Variable Char    VALEUR()

  #Check entered value
  Call C_YENTTYP(VALEUR) From YBBSELGTE

  #Poplulate Description and Reference for first line only
  If nolign - 1 = 0
    If [M:YBB1]YDETDES(0) = "" : [M:YBB1]YDETDES(0) = [M:YBB0]YBATDES : Endif
    If [M:YBB1]YREF(0) = ""    : [M:YBB1]YREF(0)    = [M:YBB0]YBATREF : Endif
  Endif

#Defect - DFCX1-271
  If nolign - 1 >= 1
    If VALEUR = [M:YBB1]YENTTYP(nolign-2)
      #Populate Transaction Number
      [M:YBB1]YTRANSNBR(nolign-1) = [M:YBB1]YTRANSNBR(nolign-2)
    Endif
    If VALEUR <> [M:YBB1]YENTTYP(nolign-2)
      #Populate Transaction Number
      [M:YBB1]YTRANSNBR(nolign-1) = [M:YBB1]YTRANSNBR(nolign-2) + 1
      [M:YBB1]YELA(nolign-1) = ""
      [M:YBB1]YACC(nolign-1) = ""
      [M:YBB1]YDETDES(nolign-1) = ""
      [M:YBB1]YREF(nolign-1) = ""
      [M:YBB1]YBP(nolign-1) = ""
      [M:YBB1]YCTRL(nolign-1) = ""
      #update rest of transaction numbers
      Local Integer I
      For I = nolign To [M:YBB1]NBLIG
        [M:YBB1]YTRANSNBR(I) = [M:YBB1]YTRANSNBR(nolign-1) + 1
      Next
    Endif
  Endif

  Affzo [M:YBB1]

  #Use Default Journal code when available
  If clalev([F:GTE]) = 0 : Local File GTYPACCENT [GTE] : Endif
  Read [F:GTE]GTE0 = VALEUR
  If [F:GTE]DEFJOU <> "" #and [M:YBB1]YJOU <> ""
    #Check Default Journal marked as Business batch
    If [F:GTE]YBUSBAT = 2
      #Check Default Journal Type = Entry Type
      If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
      Read [F:JOU]JOU0 = [F:GTE]DEFJOU
      If [F:GTE]YBUSBATTYP = [F:JOU]YBUSBATTYP Then
        [M:YBB1]YJOU(nolign-1) = [F:GTE]DEFJOU
         Affzo [M:YBB1]YJOU
      Endif
      # DEWALD - Removed due to issue and rule type mismatch
      #If [F:GTE]YBUSBATTYP <> [F:JOU]YBUSBATTYP Then
      #  GMESSAGE = mess(12,6254,1)
      #  GERR = 1
      #  mkstat = 2
      #  zonsui = "[M:YBB1]YENTTYP(nolign-1)"
      #  End
      #Else
        [M:YBB1]YBATTYP(nolign-1) = [F:JOU]YBUSBATTYP
      #Endif
    Endif
  Endif

  If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
  Read [F:JOU]JOU0 = [M:YBB1]YJOU(nolign-1)
  If [F:JOU]YBUSBATTYP = 1 Then
  #Check Default ELA - ALL ACTIVE ELAS Where THE RECIPIENT SITE ON THE ELA IS EQUAL To THE SITE ABOVE ARE AVAILABLE For SELECTION.
  If clalev([F:YELA]) = 0 : Local File YENTLOAAGR  [YELA] : Endif
  For [F:YELA] Where YFCYREC = [M:YBB1]YFCY(nolign-1) and YENAFLG = 2
    If [F:YELA]YDEFFLG = 2 : [M:YBB1]YELA(nolign-1) = [F:YELA]YLONAGR : Endif
  Next
  Affzo [M:YBB1]YELA(nolign-1)
  Endif

End

#------------------------------------------------------------------------------------#
# Journal Control
#------------------------------------------------------------------------------------#
Subprog C_YJOU(VALEUR)
Variable Char    VALEUR()

  #Use Default Journal code when available
  If clalev([F:GTE]) = 0 : Local File GTYPACCENT [GTE] : Endif
  Read [F:GTE]GTE0 = [M:YBB1]YENTTYP(nolign-1)
  If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
  Read [F:JOU]JOU0 = VALEUR
  #Check Default Journal marked as Business batch
  If [F:GTE]YBUSBATTYP <> [F:JOU]YBUSBATTYP Then
    GMESSAGE = mess(12,6254,1)
    GERR = 1
    mkstat = 2
    zonsui = "[M:YBB1]YJOU(nolign-1)"
    End
  Endif

  #Check entered value
  Call C_YJOU(VALEUR) From YBBSELJOU

  #Hide/Display Fields based on Journal Type Selection (IE/Cash/Jou)
  Call CTR_FLD(VALEUR)

  #Transaction Number Validations
  If nolign - 1 >= 1 Then
    If [M:YBB1]YJOU(nolign-2) = VALEUR and [M:YBB1]YENTTYP(nolign-2) = [M:YBB1]YENTTYP(nolign-1) Then
      [M:YBB1]YTRANSNBR(nolign-1) = [M:YBB1]YTRANSNBR(nolign-2)
    Else
      [M:YBB1]YTRANSNBR(nolign-1) = [M:YBB1]YTRANSNBR(nolign-2) + 1
      #Defect - DFCX1-271
      [M:YBB1]YELA(nolign-1) = ""
      [M:YBB1]YDETDES(nolign-1) = ""
      [M:YBB1]YREF(nolign-1) = ""
    Endif
  Else
    [M:YBB1]YTRANSNBR(nolign-1) = 1
  Endif

#  For I = 0 To [M:YBB1]NBLIG - 1
#    #If [M:YBB1]YTRANSNBR(nolign-N) = 0 : Break : Endif
#    If [M:YBB1]YFCY(nolign-1) <> [M:YBB1]YTRANSNBR(nolign-N) Then
#      Infbox num$([M:YBB1]YTRANSNBR(nolign-1)),num$([M:YBB1]YTRANSNBR(nolign-N))
#      Break
#    Endif
#    #Endif
#    N += 1
#  Next

End

#------------------------------------------------------------------------------------#
# Hide/Display Fields based on Journal
#------------------------------------------------------------------------------------#
Subprog CTR_FLD(YJOU)
Value Char YJOU()

  Local Integer YJOUTYP : YJOUTYP = 0
  If clalev([F:JOU]) = 0 : Local File GJOURNAL [JOU] : Endif
  Read [F:JOU]JOU0 = YJOU
  YJOUTYP = [F:JOU]YBUSBATTYP

  #1 - Inter Entity
  If YJOUTYP = 1
    Actzo [M:YBB1]YELA(nolign-1)
    Diszo [M:YBB1]YBAN(nolign-1)
    [M:YBB1]YBAN(nolign-1) = ""
  Endif
  #2 - Cash
  If YJOUTYP = 2
     Diszo [M:YBB1]YELA(nolign-1)
     Actzo [M:YBB1]YBAN(nolign-1)
     [M:YBB1]YELA(nolign-1) = ""
  Endif
  #3 - Journal
  If YJOUTYP = 3
     Diszo [M:YBB1]YELA(nolign-1)
     Diszo [M:YBB1]YBAN(nolign-1)
    [M:YBB1]YBAN(nolign-1) = ""
    [M:YBB1]YELA(nolign-1) = ""
  Endif
  #User mistake
  If YJOUTYP = 0
    GMESSAGE = mess(1,6254,1)+[M:YBB1]YJOU(nolign-1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YBB1]YJOU(nolign-1)"
    End
  Endif

Affzo [M:YBB1]YELA(nolign-1)
Affzo [M:YBB1]YBAN(nolign-1)

End

#------------------------------------------------------------------------------------#
# Batch Number Control
#------------------------------------------------------------------------------------#
Subprog C_YBATNBR(VALEUR)
Variable Char    VALEUR()
#Template Creation
  If VALEUR = "" Then
    VALEUR = "T"+[M:YBB0]YBATNBRTEMP
    [M:YBB0]YBATCAT = 2
  Endif
  #Templates requried to be handled different
  If left$(VALEUR,1) = "T"
    GMESSAGE = mess(16,6254,1)
  Endif
End

#------------------------------------------------------------------------------------#
# Batch Number Control
#------------------------------------------------------------------------------------#
Subprog C_YBATCAT(VALEUR)
Variable Integer VALEUR
#Template Creation Continued
  If VALEUR = 2 Then
    [M:YBB0]YBATNBR = "T"+[M:YBB0]YBATNBRTEMP
    #[M:YBB0]YBATNBRTEMP = [M:YBB0]YBATNBR
    #Infbox [M:YBB0]YBATNBR,[M:YBB0]YBATNBRTEMP
  Endif
End

#------------------------------------------------------------------------------------#
# New Transaction number - Action Button
#------------------------------------------------------------------------------------#
Subprog B1_NBLIG

  Local Integer CNTM, OK
  CNT = 0
  Local Char MESSAGE(255) : MESSAGE = mess(23,6254,1)-num$(nolign)+"?"
  Call OUINON(MESSAGE,OK)  From GESECRAN
  Case OK
     When 2 : CNT = 1

  Endcase
  If CNT = 1 Then
    #Check Index
    If nolign-1 = 0 Then
      Call ADDMESSERR(mess(24,6254,1)) From AWEB
      End
    Else
      #Re-Order from Current line
      Local Integer CUR_INDEX, PREV_INDEX, POST_INDEX, COUNT_INDEX, PREV_TRANSNO, CUR_TRANSNO, NEXT_TRANSNO, CTR
      Local Integer I : I = 0
      CUR_INDEX = nolign - 1
      COUNT_INDEX = [M:YBB1]NBLIG - 1
      POST_INDEX = COUNT_INDEX - CUR_INDEX
      PREV_INDEX = COUNT_INDEX - POST_INDEX
      CUR_TRANSNO = [M:YBB1]YTRANSNBR(nolign-1)
      PREV_TRANSNO = CUR_TRANSNO - 1
      For I = 0 To POST_INDEX
        [M:YBB1]YTRANSNBR(CUR_INDEX) = [M:YBB1]YTRANSNBR(CUR_INDEX) + 1
        CUR_INDEX += 1
      Next
      Affzo [M:YBB1]YTRANSNBR

    Endif
  Endif

End

#------------------------------------------------------------------------------------#
# Tax Invoice - Action Button
#------------------------------------------------------------------------------------#
Subprog B2_NBLIG
  Infbox("Business batch transaction not posted")

End

#------------------------------------------------------------------------------------#
# Tax Control
#------------------------------------------------------------------------------------#
Subprog C_YTAX(VALEUR)
Variable Char    VALEUR()
#TODO: Revise so that it is calculated in the engine
#  If VALEUR <> "" or VALEUR = "N/A" Then
#    #Get VAT and VAT Rates for GST Amount
#    If clalev([F:TVT]) = 0 : Local File TABVAT [TVT] : Endif
#    Read [F:TVT]TVT1 = VALEUR
#    [M:YBB1]YGSTAMT(nolign-1) = [F:TVT]VATRAT
#    Affzo [M:YBB1]YGSTAMT
#    If [F:TVT]VATRAT <> 0 Then
#      If [M:YBB1]YDEB(nolign-1) <> 0 : [M:YBB1]YAMTTAX(nolign-1) = [M:YBB1]YDEB(nolign-1) + [M:YBB1]YGSTAMT(nolign-1) : Endif
#      If [M:YBB1]YCDT(nolign-1) <> 0 : [M:YBB1]YAMTTAX(nolign-1) = [M:YBB1]YCDT(nolign-1) + [M:YBB1]YGSTAMT(nolign-1) : Endif
#    Endif
#  Endif

End


#------------------------------------------------------------------------------------#
# BP Control
#------------------------------------------------------------------------------------#
Subprog C_YBP(VALEUR)
Variable Char    VALEUR()
  #Account or BP is required
  If [M:YBB1]YACC(nolign-1) = "" and VALEUR = "" Then
    GMESSAGE = "Account or "+mess(13,6254,1)
    GOK = 0
    GERR = 1
    mkstat = 2
    zonsui = "[M:YBB1]YBP(nolign-1)"
    End
  Elsif VALEUR <> ""
    #Get Account and Ctrl where applicable
    If clalev([F:BPR]) = 0 : Local File BPARTNER [BPR] : Endif
    Read [F:BPR]BPR0 = VALEUR
    Local Integer RETVAL
    RETVAL = func VAL_BP([F:BPR]BRGOBJ, VALEUR)
    If RETVAL = 0
      GMESSAGE = mess(25,6254,1)
      GOK = 0
      GERR = 1
      mkstat = 2
      zonsui = "[M:YBB1]YBP(nolign-1)"
      End
    Else
      Affzo [M:YBB1]YBAN(nolign-1)
      Affzo [M:YBB1]YCTRL(nolign-1)
      Affzo [M:YBB1]YACC(nolign-1)
    Endif
    #Affzo [M:YBB1]YACC(nolign-1)
    Local Char ENT(20) : ENT = "ACT"
    Call GET_DIM([M:YBB1]YACC(nolign-1),ENT)
  Endif
End

Funprog VAL_BP(BPTYP, BPR)
Variable Char BPTYP()
Variable Char BPR()
Local Char STAFLD(15)
Local Integer I : I = 0
Local Integer BP : BP = 0
Local Char REQUEST(255)(0..5)

  REQUEST(0) = "SELECT GAC.ACCSHO_0, GCOD.ACC_0"
  If BPTYP = "BPS" Then #Suppliers
    REQUEST(1) -= "From BPSUPPLIER BP"
    STAFLD = "ENAFLG_0"
    BP = 3
  Endif
  If BPTYP = "BPC" Then #Customers
    REQUEST(1) -= "From BPCUSTOMER BP"
    STAFLD = "BPCSTA_0"
    BP = 2
  Endif
  If BPTYP = "" Then
    GMESSAGE = mess(25,6254,1)
    GOK = 0
    GERR = 1
    zonsui = "[M:YBB1]YBP(nolign-1)"
    End
  Endif
  REQUEST(2) -= "INNER JOIN GACCCODE GCOD ON BP.ACCCOD_0 = GCOD.ACCCOD_0 and GCOD.TYP_0 = "+ num$(BP)
  REQUEST(3) -= "INNER JOIN GACCOUNT GAC on GCOD.ACC_0 = GAC.ACC_0 and GCOD.COA_0 = GAC.COA_0 and GAC.SAC_0 = 2"
  REQUEST(4) -= "WHERE BP."+STAFLD+" = 2 AND BP."+BPTYP+"NUM_0 = '"+BPR+"' AND GCOD.COA_0 = '"+[M:YBB1]YCOA(nolign-1)+"'"
  If BPTYP = "BPS" Then : REQUEST(5) -= "and BP.ENAFLG_0 = 2" : Endif
  If BPTYP = "BPC" Then : REQUEST(5) -= "and BP.BPCSTA_0 = 2" : Endif

  For (Char ACCSHO, Char ACC) From "5" Sql REQUEST As [YLNK]
    I += 1
    If ACCSHO = "" or ACC = ""
      I = 0 : Break : End
    Else
      [M:YBB1]YBAN(nolign-1) = ""
      [M:YBB1]YCTRL(nolign-1) = ACCSHO
      If  ACC <> ""
        [M:YBB1]YACC(nolign-1) = ACC
        Call C_YACC(ACC)
        [M:YBB1]YBP(nolign-1) = BPR
        Affzo [M:YBB1]YBP(nolign-1)
      Else
        [M:YBB1]YACC(nolign-1) = ""
      Endif
    Endif
  Next

End I

#------------------------------------------------------------------------------------#
# Bank Control
#------------------------------------------------------------------------------------#
Subprog C_YBAN(VALEUR)
Variable Char VALEUR()
  If VALEUR <> ""
    #Check entered value against CPY
    #Call VAL_BBBAN(VALEUR, [M:YBB1]YFCY(nolign-1)) From YBBBANSEL
    [M:YBB1]YBP(nolign-1) = ""
    #Diszo [M:YBB1]YACC(nolign-1)
  #Elsif VALEUR = ""
    #Actzo [M:YBB1]YACC(nolign-1)
  Endif
  #Affzo [M:YBB1]YACC(nolign-1)

End

Subprog TAXRULEVAL(VALEUR)
Variable Char VALEUR() #Account
Local Integer I : I = 0
Local Char REQUEST(255)(0..3)

REQUEST(0) = "SELECT FLGVAT_0 From GACCOUNT Where COA_0 = '"+[M:YBB1]YCOA(nolign-1)+"' and ACC_0 = '"+VALEUR+"'"

For (Integer FLGVAT) From "5" Sql REQUEST As [YLNK]
  I += 1
  If FLGVAT = 1 : Diszo [M:YBB1]YTAX(nolign-1) : [M:YBB1]YTAX(nolign-1) = "" : Endif
  If FLGVAT = 2 : Actzo [M:YBB1]YTAX(nolign-1) : Endif
Next

Affzo [M:YBB1]YTAX(nolign-1)

End

#------------------------------------------------------------------------------------#
# Project Control
#------------------------------------------------------------------------------------#
Subprog C_YPJT(VALEUR)
Variable Char    VALEUR()

    If clalev([F:GAC]) = 0 : Local File GACCOUNT [GAC] : Endif
    Read [F:GAC]GAC0 = [M:YBB1]YCOA(nolign-1);[M:YBB1]YACC(nolign-1)
    If [F:GAC]YPJM = 2 and VALEUR = "" Then
      GMESSAGE = mess(26,6254,1)
      GOK = 0
      GERR = 1
      zonsui = "[M:YBB1]YPJT(nolign-1)"
      End
    Endif

End

#------------------------------------------------------------------------------------#
# Get Dimensions
#------------------------------------------------------------------------------------#
Subprog GET_DIM(VALEUR, ENT)
Variable Char VALEUR()
Variable Char ENT()
#DECLARE @DIE VARCHAR() (YDIE0 ... YDIE4)
#SET @DIE = COLUMN Value

#If EXISTS (SELECT * From DEVTST2.GACCOUNT
#Where LINE SITE = COA_0 and LINE ACC = ACC_0 and (@DIE = DIE_0 or @DIE = DIE_1 or @DIE = DIE_2 or @DIE = DIE_3 or @DIE = DIE_4 ))

#Then USE EXISTING DIMENSION/ACCOUNT VALIDATION (PER AP/AR ETC CUSTOMISATION)
#Infbox [M:YBB1]YDIE0(nolign-1), [M:YBB1]YDIE1(nolign-1), [M:YBB1]YDIE2(nolign-1), [M:YBB1]YDIE3(nolign-1), [M:YBB1]YDIE4(nolign-1)

#Clear all fields based on Account selection
Diszo [M:YBB1]YCCE0(nolign-1)
Diszo [M:YBB1]YCCE1(nolign-1)
Diszo [M:YBB1]YCCE2(nolign-1)
Diszo [M:YBB1]YCCE3(nolign-1)
Diszo [M:YBB1]YCCE4(nolign-1)

If ENT <> "LIENS"
  [M:YBB1]YCCE0(nolign-1) = ""
  [M:YBB1]YCCE1(nolign-1) = ""
  [M:YBB1]YCCE2(nolign-1) = ""
  [M:YBB1]YCCE3(nolign-1) = ""
  [M:YBB1]YCCE4(nolign-1) = ""
Endif

  #Selection of Dimension values
  Local Integer I, J
  I = 0 : DIENO = 0
  Local Char REQUEST(255)(0..5)
  Local Char DIE(10)(0..4)
  Local Char COA(10), ACC(10)
  DIE(0) = [M:YBB1]YDIE0(nolign-1)
  DIE(1) = [M:YBB1]YDIE1(nolign-1)
  DIE(2) = [M:YBB1]YDIE2(nolign-1)
  DIE(3) = [M:YBB1]YDIE3(nolign-1)
  DIE(4) = [M:YBB1]YDIE4(nolign-1)
  COA = [M:YBB1]YCOA(nolign-1)
  #Assing each dimension to DIE type dynamically
  For DIENO = 0 To 4
    For J = 0 To 4
      REQUEST(0) = "SELECT DIE_"+num$(DIENO)+" [DIE], "+num$(J)+" [NUM] From GACCOUNT Where COA_0 = '"+COA+"' and ACC_0 = '"+VALEUR+"'"
      REQUEST(1) = "and DIE_"+num$(DIENO)+" = '"+DIE(J)+"'"
      For (Char DIETYP, Integer NUM) From "5" Sql REQUEST As [YLNK]
        #Infbox num$(NUM)
        Assign "[M:YBB1]YDIE"+num$(J)+"(nolign-1)" With DIETYP
        If NUM = 0
          Actzo [M:YBB1]YCCE0(nolign-1)
        Elsif NUM = 1
          Actzo [M:YBB1]YCCE1(nolign-1)
        Elsif NUM = 2
          Actzo [M:YBB1]YCCE2(nolign-1)
        Elsif NUM = 3
          Actzo [M:YBB1]YCCE3(nolign-1)
        Elsif NUM = 4
          Actzo [M:YBB1]YCCE4(nolign-1)
        Endif
      Next
    Next
  Next DIENO
  #Hide or display fields based on outcome

End

######################################################################################

######################################################################################
## Section automatically added (screen YBUSBAT1) 09/10/2018 16:47:37 (DH)
######################################################################################
Subprog C_YCCE0(VALEUR)
Variable Char    VALEUR()
Local Integer OBYDIE
Local Char DIE : DIE = [M:YBB1]YDIE0(nolign-1)
Local Char DIEFLD : DIEFLD = "DIE_0"
Local Char OBFLD  : OBFLD = "OBYDIE_0"

OBYDIE = func MANDAT_DIE(DIE, DIEFLD, OBFLD)
If OBYDIE = 2 and VALEUR = "" Then
  GMESSAGE = mess(27,6254,1)
  GOK = 0
  GERR = 1
  zonsui = "[M:YBB1]YCCE0(nolign-1)"
Endif

End

Subprog C_YCCE1(VALEUR)
Variable Char    VALEUR()
Local Integer OBYDIE
Local Char DIE : DIE = [M:YBB1]YDIE1(nolign-1)
Local Char DIEFLD : DIEFLD = "DIE_1"
Local Char OBFLD  : OBFLD = "OBYDIE_1"

OBYDIE = func MANDAT_DIE(DIE, DIEFLD, OBFLD)
If OBYDIE = 2 and VALEUR = "" Then
  GMESSAGE = mess(27,6254,1)
  GOK = 0
  GERR = 1
  zonsui = "[M:YBB1]YCCE1(nolign-1)"
  End
Endif

End

Subprog C_YCCE2(VALEUR)
Variable Char    VALEUR()
Local Integer OBYDIE
Local Char DIE : DIE = [M:YBB1]YDIE2(nolign-1)
Local Char DIEFLD : DIEFLD = "DIE_2"
Local Char OBFLD  : OBFLD = "OBYDIE_2"

OBYDIE = func MANDAT_DIE(DIE, DIEFLD, OBFLD)
If OBYDIE = 2 and VALEUR = "" Then
  GMESSAGE = mess(27,6254,1)
  GOK = 0
  GERR = 1
  zonsui = "[M:YBB1]YCCE2(nolign-1)"
  End
Endif

End

Subprog C_YCCE3(VALEUR)
Variable Char    VALEUR()
Local Integer OBYDIE
Local Char DIE : DIE = [M:YBB1]YDIE3(nolign-1)
Local Char DIEFLD : DIEFLD = "DIE_3"
Local Char OBFLD  : OBFLD = "OBYDIE_3"

OBYDIE = func MANDAT_DIE(DIE, DIEFLD, OBFLD)
If OBYDIE = 2 and VALEUR = "" Then
  GMESSAGE = mess(27,6254,1)
  GOK = 0
  GERR = 1
  zonsui = "[M:YBB1]YCCE3(nolign-1)"
  End
Endif

End

Subprog C_YCCE4(VALEUR)
Variable Char    VALEUR()
Local Integer OBYDIE
Local Char DIE : DIE = [M:YBB1]YDIE4(nolign-1)
Local Char DIEFLD : DIEFLD = "DIE_4"
Local Char OBFLD  : OBFLD = "OBYDIE_4"

OBYDIE = func MANDAT_DIE(DIE, DIEFLD, OBFLD)
If OBYDIE = 2 and VALEUR = "" Then
  GMESSAGE = "mess(27,6254,1)"
  GOK = 0
  GERR = 1
  zonsui = "[M:YBB1]YCCE4(nolign-1)"
  End
Endif

End

Funprog MANDAT_DIE(DIE, DIEFLD, OBFLD)
Variable Char DIE()
Variable Char DIEFLD()
Variable Char OBFLD()
Local Integer IRET : IRET = 0

  #Selection of Dimension values
  Local Char REQUEST(255)(0..5)

  REQUEST(0) = "SELECT "+OBFLD
  REQUEST(1) -= "From COMPANY"
  REQUEST(5) -= "Where CPY_0 = '"+[M:YBB1]YCPY(nolign-1)+"' and "+DIEFLD+" = '"+DIE+"'"

  For (Integer OBDIE) From "5" Sql REQUEST As [YLNK]
    IRET = OBDIE
  Next

End IRET

End

#----------------------------
# Calculate totals
#----------------------------
Subprog CALC_TOTALS()

  Local Char REQUEST(255)(0..5)
  Local Integer I : I = 0

  REQUEST(0) = "select YFCY_0,sum(YDEB_0), sum(YCDT_0), sum(YDEB_0) - sum(YCDT_0)"
  REQUEST(1) -= "from YBBDETAIL Where YBATNBR_0 = '"+[M:YBB0]YBATNBR+"'"
  REQUEST(2) -= "GROUP By YFCY_0, YTRANSNBR_0"

  nolign = 1
  For (Char TSITE, Decimal SUMDEB, Decimal SUMCDT, Decimal TOTBAL) From "5" Sql REQUEST As [YLNK]
    [M:YBB1]YTOTFCY(nolign-1) = [F:YLNK]TSITE
    [M:YBB1]YTOTDEB(nolign-1) = [F:YLNK]SUMDEB
    [M:YBB1]YTOTCRE(nolign-1) = [F:YLNK]SUMCDT
    [M:YBB1]YTOTBAL(nolign-1) = [F:YLNK]TOTBAL
    #Infbox num$([F:YLNK]TOTBAL)
    nolign += 1
  Next
  [M:YBB1]NBTOT = nolign - 1


  Affzo [M:YBB1]

End

#----------------------------
# Display Totals
#----------------------------
Subprog C_YBALTOT(VALEUR)
Variable Integer VALEUR

  If VALEUR = 1 Then
     #Chgfmt [M:YBB1]NBTOT With "-N:1"
    Local Char REQUEST(255)(0..5)
    Local Integer I : I = 0

    REQUEST(0) = "select sum(YDEB_0), sum(YCDT_0), sum(YDEB_0) - sum(YCDT_0)"
    REQUEST(1) -= "from YBBDETAIL Where YBATNBR_0 = '"+[M:YBB0]YBATNBR+"'"
    #REQUEST(2) -= "GROUP By YFCY_0, YTRANSNBR_0"

    nolign = 1
    For (Decimal SUMDEB, Decimal SUMCDT, Decimal TOTBAL) From "5" Sql REQUEST As [YLNK]
      [M:YBB1]YTOTFCY = "ALL"
      [M:YBB1]YTOTDEB = [F:YLNK]SUMDEB
      [M:YBB1]YTOTCRE = [F:YLNK]SUMCDT
      [M:YBB1]YTOTBAL = [F:YLNK]TOTBAL
      #Infbox num$([F:YLNK]TOTBAL)
      nolign += 1
    Next
    [M:YBB1]NBTOT = nolign - 1

    Affzo [M:YBB1]
  Else
     #Chgfmt [M:YBB1]NBTOT With "N:1"
     Call CALC_TOTALS()
  Endif

End

