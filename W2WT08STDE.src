#<AdxTL>@(#)0.0.0.0 $Revision$
# Supervisor
# Mask management WT08STDE 

$_AFF
If GIMPORT
 Gosub AFF From GSAISIE
Else
 If GMESSAGE <>""
  Gosub ERR From GSAISIE
 Else
  Raz GERR , GZNUM
 Endif
Endif
Return

$ON_QTYSTU
Onevent BEFORE_AREA Gosub AV_QTYSTU From W2WT08STDE
Return

$AV_QTYSTU
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYSTU(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_SERNUM
Onevent BEFORE_AREA Gosub AV_SERNUM From W2WT08STDE
Return

$AV_SERNUM
If GWSINVSER<>""
 Chgfmt [M]SERNUM(indice) With GWSINVSER
Else
 Chgfmt [M]SERNUM(indice) With "-K:1X"
Endif
Gosub _AFF
Return

$ON_PCUDES
Return

$ON_QTYPCUDES
Onevent BEFORE_AREA Gosub AV_QTYPCUDES From W2WT08STDE
Return

$AV_QTYPCUDES
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M:SMP]PCU(nolign-1),GUNITE(1..GNBUNT)),1))
Endif
Chgfmt [M]QTYPCUDES(indice) With "NPz:"+GUNTFMT
Gosub _AFF
Return

$ON_STADES
Return

$ON_WRHDES
Return

$ON_LOCTYPDES
Onevent CONTROL Call C_LOCTYPDES(zc) From W2WT08STDE
Onevent BEFORE_INPUT Call AS_LOCTYPDES(zc) From W2WT08STDE
Onevent BEFORE_AREA Gosub AV_LOCTYPDES From W2WT08STDE
Return

$AV_LOCTYPDES
If GWSINVEMPT<>""
 Chgfmt [M]LOCTYPDES(indice) With GWSINVEMPT
Else
 Chgfmt [M]LOCTYPDES(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(735,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_LOCTYPDES(VALEUR) From TRTSTOSMP
If mkstat=2
 [M]LOCTYPDES(INDIC) = VALEUR
 Affzo LOCTYPDES(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STKSUGTLO
 Call STKSUGTLO([M:SMP]WLOCSEQ(nolign-1),[M:SMP]TRSTYP,[M:SMP]TRSCOD,[M:SMP]STOFCY,[M:SMP]ITMREF,[M:SMP]PCU(nolign-1),[M:SMP]QTYPCU(nolign-1),[M:SMP]STADES(nolign-1)
& ,VALEUR,string$([M:SMP]LOCTYP=VALEUR,"QU"),"",string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SMP]WRHDES(nolign-1)))),[M:SMP]LOCDES(nolign-1)) From STKLOC
 If mkstat=2
  [M]LOCTYPDES(INDIC) = VALEUR
  Affzo LOCTYPDES(INDIC) : mkstat = 2
 Endif
 Onkey 129 Titled GBOUT1 Call B1_LOCTYPDES(zc) From W2WT08STDE
 Onkey   2 Titled GBOUTS Call S_LOCTYPDES(zc) From W2WT08STDE
Endif
Gosub _AFF
End

Subprog C_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
## Action CTLTEMFMT
Call CTLTEMFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCTYPDES" : GZNUM = 3197 : Endif
If !mkstat
 ## Action STKCTRTLO
 Call STKCTRTLO([M:SMP]WLOCSEQ(nolign-1),[M:SMP]TRSTYP,[M:SMP]TRSCOD,[M:SMP]STOFCY,[M:SMP]ITMREF,[M:SMP]PCU(nolign-1),[M:SMP]QTYPCU(nolign-1),[M:SMP]STADES(nolign-1)
& ,1,VALEUR,mkstat,string$([M:SMP]LOCTYP=VALEUR,"QU"),"",string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SMP]WRHDES(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCTYPDES" : GZNUM = 3197 : Endif
 If !mkstat
  ## Action STD
  Call C_LOCTYPDES(VALEUR) From TRTSTOSMP
  If mkstat : GERR = 1 : GZONE = "LOCTYPDES" : GZNUM = 3197 : Endif
 Endif
Endif
Gosub _AFF
End

Subprog S_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action STKSELTLO1
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "STKSELTLO1"
 PARMSK(1) = num$([M:SMP]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:SMP]TRSTYP)
 PARMSK(3) = [M:SMP]TRSCOD
 PARMSK(4) = [M:SMP]STOFCY
 PARMSK(5) = [M:SMP]ITMREF
 PARMSK(6) = [M:SMP]PCU(nolign-1)
 PARMSK(7) = num$([M:SMP]QTYPCU(nolign-1))
 PARMSK(8) = [M:SMP]STADES(nolign-1)
 PARMSK(9) = string$([M:SMP]LOCTYP=VALEUR,"QU")
 PARMSK(10) = ""
 Call S_TAB_CHAR(VALEUR,PARMSK,"STKSELTLO1","STKLOC","") From GACTION
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOCTYPDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJET
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJET"
 Call OBJET_CHAR(VALEUR,"TLO",[M:SMP]STOFCY) From GOBJET
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LOCDES
Onevent CONTROL Call C_LOCDES(zc) From W2WT08STDE
Onevent BEFORE_INPUT Call AS_LOCDES(zc) From W2WT08STDE
Onevent BEFORE_AREA Gosub AV_LOCDES From W2WT08STDE
Return

$AV_LOCDES
If GWSINVEMP<>""
 Chgfmt [M]LOCDES(indice) With GWSINVEMP
Else
 Chgfmt [M]LOCDES(indice) With "-K:1X"
Endif
Gosub _AFF
Return

Subprog AS_LOCDES(VALEUR)
Variable Char    VALEUR()
Local Integer INDIC : INDIC = indice
Raz mkstat
Call TEXTE(3623,GBOUT1) From OBJDIV
Call TEXTE(15597,GBOUTS) From OBJDIV
## Action STD
Call AS_LOCDES(VALEUR) From TRTSTOSMP
If mkstat=2
 [M]LOCDES(INDIC) = VALEUR
 Affzo LOCDES(INDIC) : mkstat = 2
Endif
If !mkstat
 ## Action STKMODREMP
 Call STKMODREMP([M:SMP]WLOCSEQ(nolign-1),[M:SMP]STOFCY,[M:SMP]ITMREF,[M:SMP]PCU(nolign-1),[M:SMP]QTYPCU(nolign-1),[M:SMP]STA(nolign-1),[M:SMP]LOC(nolign-1),""
& ,mkstat,string$([M:SMP]LOC=VALEUR,"QU")) From STKLOC
 If mkstat=2
  [M]LOCDES(INDIC) = VALEUR
  Affzo LOCDES(INDIC) : mkstat = 2
 Endif
 If !mkstat
  ## Action STKSUGEMP
  Call STKSUGEMP([M:SMP]WLOCSEQ(nolign-1),[M:SMP]TRSTYP,[M:SMP]TRSCOD,[M:SMP]STOFCY,[M:SMP]ITMREF,[M:SMP]PCU(nolign-1),[M:SMP]QTYPCU(nolign-1),[M:SMP]STADES(nolign-1)
&  ,[M:SMP]LOCTYPDES(nolign-1),VALEUR,"",string$([M:SMP]LOC=VALEUR,"QU"),"",string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SMP]WRHDES(nolign-1))))) From STKLOC
  If mkstat=2
   [M]LOCDES(INDIC) = VALEUR
   Affzo LOCDES(INDIC) : mkstat = 2
  Endif
  Onkey 129 Titled GBOUT1 Call B1_LOCDES(zc) From W2WT08STDE
  Onkey   2 Titled GBOUTS Call S_LOCDES(zc) From W2WT08STDE
 Endif
Endif
Gosub _AFF
End

Subprog C_LOCDES(VALEUR)
Variable Char    VALEUR()
## Action CTLEMPFMT
Call CTLEMPFMT(VALEUR,"") From STKACT
If mkstat : GERR = 1 : GZONE = "LOCDES" : GZNUM = 22892 : Endif
If !mkstat
 ## Action STKCTREMP
 Call STKCTREMP([M:SMP]WLOCSEQ(nolign-1),[M:SMP]TRSTYP,[M:SMP]TRSCOD,[M:SMP]STOFCY,[M:SMP]ITMREF,[M:SMP]PCU(nolign-1),[M:SMP]QTYPCU(nolign-1),[M:SMP]STADES(nolign-1)
& ,[M:SMP]LOCTYPDES(nolign-1),VALEUR,"",1,mkstat,GBIDD1,string$([M:SMP]LOC=VALEUR,"QU"),""
& ,string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SMP]WRHDES(nolign-1))))) From STKLOC
 If mkstat : GERR = 1 : GZONE = "LOCDES" : GZNUM = 22892 : Endif
Endif
Gosub _AFF
End

Subprog S_LOCDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action SAIEMPLIB
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "SAIEMPLIB"
 PARMSK(1) = num$([M:SMP]WLOCSEQ(nolign-1))
 PARMSK(2) = num$([M:SMP]TRSTYP)
 PARMSK(3) = [M:SMP]TRSCOD
 PARMSK(4) = [M:SMP]STOFCY
 PARMSK(5) = [M:SMP]ITMREF
 PARMSK(6) = [M:SMP]PCU(nolign-1)
 PARMSK(7) = num$([M:SMP]QTYPCU(nolign-1))
 PARMSK(8) = [M:SMP]STADES(nolign-1)
 PARMSK(9) = [M:SMP]LOCTYPDES(nolign-1)
 PARMSK(10) = VALEUR
 PARMSK(11) = ""
 PARMSK(12) = string$([M:SMP]LOC=VALEUR,"QU")
 PARMSK(13) = ""
 PARMSK(14) = string$(GWRHACT-1,num$(sigma(1,min(1,dim([M]WRHDES)),[M:SMP]WRHDES(nolign-1))))
 Call SAISIE_CHAR(VALEUR,PARMSK,"ISELEMP","STKLOC","XWISELEMP") From GSAISIE
 [M:SMP]WLOCSEQ(nolign-1) = val(PARMSK(1))
 [M:SMP]LOCTYPDES(nolign-1) = PARMSK(9)
 VALEUR = PARMSK(10)
 GACTION = SAVACT
Endif
Gosub _AFF
End

Subprog B1_LOCDES(VALEUR)
Variable Char    VALEUR()
If !GWEBSERV
 ## Action GOBJETA
 Local Char    PARMSK(250)(1..20) , SAVACT(20)
 SAVACT = GACTION : GACTION = "GOBJETA"
 Local Char ACTION(20), PROGSUB(GLONADC), PROGSPE(GLONADC), PROGSPV(GLONADC)
 ACTION = "AB1_LOCDES" : PROGSUB = "TRTSTOSMP" : PROGSPE = "SPESTOSMP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 Call OBJET_CHAR(VALEUR,"LOC",[M:SMP]STOFCY) From GOBJET
 ACTION = "BB1_LOCDES" : PROGSUB = "TRTSTOSMP" : PROGSPE = "SPESTOSMP" : PROGSPV = ""
 Gosub ACTSUB From GOBJSUB
 GACTION = SAVACT
Endif
If mkstat=99 : mkstat = 0 : Elsif mkstat=0 : mkstat = 2 : Endif
Gosub _AFF
End

$ON_LBEFMT
Return

$ON_QTYSTUDES
Onevent BEFORE_AREA Gosub AV_QTYSTUDES From W2WT08STDE
Return

$AV_QTYSTUDES
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$ON_QTYSMPREFLIG
Onevent BEFORE_AREA Gosub AV_QTYSMPREFLIG From W2WT08STDE
Return

$AV_QTYSMPREFLIG
If !GWEBSERV
 ## Action FMTQTY
 GUNTFMT="15F" : GUNTFMT = GUNTFMT1(max(find([M]STU,GUNITE(1..GNBUNT)),1))
Endif
Gosub _AFF
Return

$CHG_STY
Return


