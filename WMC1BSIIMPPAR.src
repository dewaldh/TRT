#<AdxTL>@(#)0.0.0.0 $Revision$Class Bank import settings
# Supervisor
## ACLA-CLASSE ## BSIIMPPAR
# 2018-08-27 12:27:05 451


####################################################################
# Labels of the main class and methods 
####################################################################

####################################################################
# 1 : CODIMPPAR Code ( Field A 20)
####################################################################

$SET_CODIMPPAR
If [L]_AOLDVAL<>this.CODIMPPAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CODIMPPAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CODIMPPAR
 Gosub PROPAGATE_CODIMPPAR
Endif
Return

$INIT_CODIMPPAR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CODIMPPAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CODIMPPAR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CODIMPPAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CODIMPPAR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CODIMPPAR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CODIMPPAR
[L]CURPRO = "CODIMPPAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CODIMPPAR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CODIMPPAR
[L]CURPRO = "CODIMPPAR"
Return

$_AOTHERS_CODIMPPAR
[L]CURPRO = "CODIMPPAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CODIMPPAR
[L]CURPRO = "CODIMPPAR"
Return

$PROPAGATE_CODIMPPAR
this.isReadonly = 0
[L]CURPRO = "CODIMPPAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CODIMPPAR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CODIMPPAR"
$_LNKPRO_CODIMPPAR
Return

$_ALOADATTRIBUTE_CODIMPPAR
[L]ASTATUS = fmet this.ASETATTRIBUTE("CODIMPPAR","$isMandatory","true")
Return


####################################################################
# 2 : CPY Company ( Field CPY 5)
####################################################################

$SET_CPY
If [L]_AOLDVAL<>this.CPY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CPY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CPY
 Gosub PROPAGATE_CPY
Endif
Return

$INIT_CPY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CPY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CPY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CPY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CPY                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CPY
[L]CURPRO = "CPY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CPY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>vireblc(format$("K:5c",this.CPY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CPY
[L]CURPRO = "CPY"
If vireblc(this.CPY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCPY.ACTRLREF(this,"CPY",this.CPY,this.CPY,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CPY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CPY
[L]CURPRO = "CPY"
Return

$PROPAGATE_CPY
this.isReadonly = 0
[L]CURPRO = "CPY"
Gosub _LNKPRO_CPY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CPY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CPY"
$_LNKPRO_CPY
If vireblc(this.CPY,2)<>""
 # Link COMPANY
 Local File COMPANY [WCPY]
 Read [F:WCPY]CPY0 = this.CPY
 If !fstat
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$title",[F:WCPY]CPYSHO)
  [L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$description",[F:WCPY]CPYNAM)
 Endif
 LogicClose File [WCPY]
Endif
Return

$_ALOADATTRIBUTE_CPY
[L]ASTATUS = fmet this.ASETATTRIBUTE("CPY","$isMandatory","true")
Return


####################################################################
# 3 : LEG Legislation ( Field Miscellaneous table number)
####################################################################

$SET_LEG
If [L]_AOLDVAL<>this.LEG
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_LEG
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.LEG
 Gosub PROPAGATE_LEG
Endif
Return

$INIT_LEG
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_INI(this,"LEG",this.LEG,909)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_LEG
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "LEG"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_LEG                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_LEG
[L]CURPRO = "LEG"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.LEG,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_LEG
[L]CURPRO = "LEG"
If vireblc(this.LEG,2)<>vireblc(format$("K:20B",this.LEG),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_LEG
[L]CURPRO = "LEG"
[L]ASTATUS =  func ADI_TOOL.ADI_CONT(this,"LEG",this.LEG,909,this.LEG)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_LEG
[L]CURPRO = "LEG"
Return

$PROPAGATE_LEG
this.isReadonly = 0
[L]CURPRO = "LEG"
Gosub _LNKPRO_LEG
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_LEG
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "LEG"
$_LNKPRO_LEG
If vireblc(this.LEG,2)<>""
 # Link ATABDIV
 Local File ATABDIV [WADI]
 Read [F:WADI]CODE = 909;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="SHODES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="ATABDIV" & ZONE="LNGDES" & IDENT1=num$([F:WADI]NUMTAB) & IDENT2=[F:WADI]CODE & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("LEG","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WADI]
Endif
Return


####################################################################
# 4 : COA Chart of accounts ( Field COA 3)
####################################################################

$SET_COA
If [L]_AOLDVAL<>this.COA
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_COA
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.COA
 Gosub PROPAGATE_COA
Endif
Return

$INIT_COA
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "COA"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_COA
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "COA"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_COA                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_COA
[L]CURPRO = "COA"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.COA,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>vireblc(format$("K:3c",this.COA),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_COA
[L]CURPRO = "COA"
If vireblc(this.COA,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCOA.ACTRLREF(this,"COA",this.COA,this.COA,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.COA<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_COA
[L]CURPRO = "COA"
Return

$PROPAGATE_COA
this.isReadonly = 0
[L]CURPRO = "COA"
Gosub _LNKPRO_COA
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_COA
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "COA"
$_LNKPRO_COA
If vireblc(this.COA,2)<>""
 # Link GCOA
 Local File GCOA [WCOA]
 Read [F:WCOA]COA0 = this.COA
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="SHOTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GCOA" & ZONE="DESTRA" & IDENT1=[F:WCOA]COA & IDENT2="" & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("COA","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCOA]
Endif
Return


####################################################################
# 5 : DESAXX Description ( Field AX3)
####################################################################

$GET_DESAXX
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DESAXX"
this.DESAXX = fmet this.AGETTEXTRA(CURPRO)
[L]ARULE = "GET" : [L]ACTION = "GET" : Gosub ACTION From ASYRSUB
Return

$SET_DESAXX
If [L]_AOLDVAL<>this.DESAXX
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DESAXX
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DESAXX
 Gosub PROPAGATE_DESAXX
Endif
Return

$INIT_DESAXX
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DESAXX"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DESAXX
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DESAXX"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DESAXX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DESAXX                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DESAXX
[L]CURPRO = "DESAXX"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.DESAXX,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DESAXX
[L]CURPRO = "DESAXX"
If vireblc(fmet this.AGETTEXTRA("DESAXX"),2)<>vireblc(format$("K:30X",fmet this.AGETTEXTRA("DESAXX")),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_DESAXX
[L]CURPRO = "DESAXX"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DESAXX
[L]CURPRO = "DESAXX"
Return

$PROPAGATE_DESAXX
this.isReadonly = 0
[L]CURPRO = "DESAXX"
[L]ASTATUS = fmet this.ASETTEXTRA(CURPRO,this.DESAXX)
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DESAXX
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DESAXX"
$_LNKPRO_DESAXX
Return


####################################################################
# 6 : BAN Bank ( Field BAN 5)
####################################################################

$SET_BAN
If [L]_AOLDVAL<>this.BAN
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BAN
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BAN
 Gosub PROPAGATE_BAN
Endif
Return

$INIT_BAN
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BAN"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_BAN
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BAN"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BAN                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BAN
[L]CURPRO = "BAN"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.BAN,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BAN
[L]CURPRO = "BAN"
If vireblc(this.BAN,2)<>vireblc(format$("K:5c",this.BAN),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_BAN
[L]CURPRO = "BAN"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BAN
[L]CURPRO = "BAN"
Return

$PROPAGATE_BAN
this.isReadonly = 0
[L]CURPRO = "BAN"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BAN
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BAN"
$_LNKPRO_BAN
Return


####################################################################
# 7 : FILFMT File format ( Field BSIBFF 10)
####################################################################

$SET_FILFMT
If [L]_AOLDVAL<>this.FILFMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FILFMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FILFMT
 Gosub PROPAGATE_FILFMT
Endif
Return

$INIT_FILFMT
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FILFMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_FILFMT
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FILFMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FILFMT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FILFMT                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FILFMT
[L]CURPRO = "FILFMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.FILFMT,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FILFMT
[L]CURPRO = "FILFMT"
If vireblc(this.FILFMT,2)<>vireblc(format$("K:10X",this.FILFMT),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_FILFMT
[L]CURPRO = "FILFMT"
If vireblc(this.FILFMT,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPBSIBFF.ACTRLREF(this,"FILFMT",this.FILFMT,this.FILFMT,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.FILFMT<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FILFMT
[L]CURPRO = "FILFMT"
Return

$PROPAGATE_FILFMT
this.isReadonly = 0
[L]CURPRO = "FILFMT"
Gosub _LNKPRO_FILFMT
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FILFMT
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FILFMT"
$_LNKPRO_FILFMT
If vireblc(this.FILFMT,2)<>""
 # Link BSIFILFMT
 Local File BSIFILFMT [WBSIFFM]
 Read [F:WBSIFFM]BSIFFM0 = this.FILFMT
 If !fstat
 Endif
 LogicClose File [WBSIFFM]
Endif
Return


####################################################################
# 8 : FLOTYP Flow type ( Field Local menu number 3694)
####################################################################

$SET_FLOTYP
If [L]_AOLDVAL<>this.FLOTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLOTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLOTYP
 Gosub PROPAGATE_FLOTYP
Endif
Return

$INIT_FLOTYP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FLOTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLOTYP=0 and fmet this.AGETATTRIBUTE("FLOTYP","$isMandatory")="true"
 this.FLOTYP = 1
Endif
Return
 
$CONTROL_FLOTYP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FLOTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLOTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLOTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLOTYP
[L]CURPRO = "FLOTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLOTYP=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLOTYP
[L]CURPRO = "FLOTYP"
If this.FLOTYP<0 or this.FLOTYP>len(mess(0,3694,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3694 ->"-num$(this.FLOTYP)-mess(99,123,1)):  Return : # Local menu "3694 -> Invalid option
Endif
Return

$_AOTHERS_FLOTYP
[L]CURPRO = "FLOTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLOTYP
[L]CURPRO = "FLOTYP"
Return

$PROPAGATE_FLOTYP
this.isReadonly = 0
[L]CURPRO = "FLOTYP"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLOTYP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FLOTYP"
$_LNKPRO_FLOTYP
Return


####################################################################
# 9 : PAYTYP Payment entry type ( Field TPY 5)
####################################################################

$SET_PAYTYP
If [L]_AOLDVAL<>this.PAYTYP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_PAYTYP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.PAYTYP
 Gosub PROPAGATE_PAYTYP
Endif
Return

$INIT_PAYTYP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "PAYTYP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_PAYTYP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "PAYTYP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_PAYTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_PAYTYP                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_PAYTYP
[L]CURPRO = "PAYTYP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.PAYTYP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_PAYTYP
[L]CURPRO = "PAYTYP"
If vireblc(this.PAYTYP,2)<>vireblc(format$("K:5c",this.PAYTYP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_PAYTYP
[L]CURPRO = "PAYTYP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_PAYTYP
[L]CURPRO = "PAYTYP"
If vireblc(this.PAYTYP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPTPY.ACTRLREF(this,"PAYTYP",this.PAYTYP,this.PAYTYP,this.LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.PAYTYP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_PAYTYP
this.isReadonly = 0
[L]CURPRO = "PAYTYP"
Gosub _LNKPRO_PAYTYP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_PAYTYP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "PAYTYP"
$_LNKPRO_PAYTYP
If vireblc(this.PAYTYP,2)<>""
 # Link TABPAYTYP
 Local File TABPAYTYP [WTPY]
 Read [F:WTPY]TPY0 = this.PAYTYP;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABPAYTYP" & ZONE="SHOTRA" & IDENT1=[F:WTPY]PAYTYP & IDENT2=[F:WTPY]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PAYTYP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="TABPAYTYP" & ZONE="DESTRA" & IDENT1=[F:WTPY]PAYTYP & IDENT2=[F:WTPY]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("PAYTYP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WTPY]
Endif
Return


####################################################################
# 10 : CDASHOPAY Payment attribute underpayment ( Field CDA 5)
####################################################################

$SET_CDASHOPAY
If [L]_AOLDVAL<>this.CDASHOPAY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CDASHOPAY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CDASHOPAY
 Gosub PROPAGATE_CDASHOPAY
Endif
Return

$INIT_CDASHOPAY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDASHOPAY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CDASHOPAY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDASHOPAY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CDASHOPAY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CDASHOPAY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CDASHOPAY
[L]CURPRO = "CDASHOPAY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CDASHOPAY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CDASHOPAY
[L]CURPRO = "CDASHOPAY"
If vireblc(this.CDASHOPAY,2)<>vireblc(format$("K:5c",this.CDASHOPAY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CDASHOPAY
[L]CURPRO = "CDASHOPAY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CDASHOPAY
[L]CURPRO = "CDASHOPAY"
If vireblc(this.CDASHOPAY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCDA.ACTRLREF(this,"CDASHOPAY",this.CDASHOPAY,this.CDASHOPAY,this.LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CDASHOPAY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CDASHOPAY
this.isReadonly = 0
[L]CURPRO = "CDASHOPAY"
Gosub _LNKPRO_CDASHOPAY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CDASHOPAY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDASHOPAY"
$_LNKPRO_CDASHOPAY
If vireblc(this.CDASHOPAY,2)<>""
 # Link GACCDENCOD
 Local File GACCDENCOD [WCDA]
 Read [F:WCDA]CDA0 = this.CDASHOPAY;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="SHOTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDASHOPAY","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="DESTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDASHOPAY","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCDA]
Endif
Return


####################################################################
# 11 : CDAEXCPAY Payment attribute overpayment ( Field CDA 5)
####################################################################

$SET_CDAEXCPAY
If [L]_AOLDVAL<>this.CDAEXCPAY
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CDAEXCPAY
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CDAEXCPAY
 Gosub PROPAGATE_CDAEXCPAY
Endif
Return

$INIT_CDAEXCPAY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAEXCPAY"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CDAEXCPAY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAEXCPAY"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CDAEXCPAY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CDAEXCPAY             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CDAEXCPAY
[L]CURPRO = "CDAEXCPAY"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CDAEXCPAY,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CDAEXCPAY
[L]CURPRO = "CDAEXCPAY"
If vireblc(this.CDAEXCPAY,2)<>vireblc(format$("K:5c",this.CDAEXCPAY),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CDAEXCPAY
[L]CURPRO = "CDAEXCPAY"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CDAEXCPAY
[L]CURPRO = "CDAEXCPAY"
If vireblc(this.CDAEXCPAY,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCDA.ACTRLREF(this,"CDAEXCPAY",this.CDAEXCPAY,this.CDAEXCPAY,this.LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CDAEXCPAY<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CDAEXCPAY
this.isReadonly = 0
[L]CURPRO = "CDAEXCPAY"
Gosub _LNKPRO_CDAEXCPAY
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CDAEXCPAY
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAEXCPAY"
$_LNKPRO_CDAEXCPAY
If vireblc(this.CDAEXCPAY,2)<>""
 # Link GACCDENCOD
 Local File GACCDENCOD [WCDA]
 Read [F:WCDA]CDA0 = this.CDAEXCPAY;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="SHOTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDAEXCPAY","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="DESTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDAEXCPAY","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCDA]
Endif
Return


####################################################################
# 12 : CDAACCSUSP Payment attribute suspense account ( Field CDA 5)
####################################################################

$SET_CDAACCSUSP
If [L]_AOLDVAL<>this.CDAACCSUSP
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CDAACCSUSP
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CDAACCSUSP
 Gosub PROPAGATE_CDAACCSUSP
Endif
Return

$INIT_CDAACCSUSP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAACCSUSP"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CDAACCSUSP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAACCSUSP"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CDAACCSUSP            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CDAACCSUSP            : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CDAACCSUSP
[L]CURPRO = "CDAACCSUSP"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CDAACCSUSP,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CDAACCSUSP
[L]CURPRO = "CDAACCSUSP"
If vireblc(this.CDAACCSUSP,2)<>vireblc(format$("K:5c",this.CDAACCSUSP),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CDAACCSUSP
[L]CURPRO = "CDAACCSUSP"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CDAACCSUSP
[L]CURPRO = "CDAACCSUSP"
If vireblc(this.CDAACCSUSP,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCDA.ACTRLREF(this,"CDAACCSUSP",this.CDAACCSUSP,this.CDAACCSUSP,this.LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CDAACCSUSP<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CDAACCSUSP
this.isReadonly = 0
[L]CURPRO = "CDAACCSUSP"
Gosub _LNKPRO_CDAACCSUSP
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CDAACCSUSP
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAACCSUSP"
$_LNKPRO_CDAACCSUSP
If vireblc(this.CDAACCSUSP,2)<>""
 # Link GACCDENCOD
 Local File GACCDENCOD [WCDA]
 Read [F:WCDA]CDA0 = this.CDAACCSUSP;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="SHOTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDAACCSUSP","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="DESTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDAACCSUSP","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCDA]
Endif
Return


####################################################################
# 13 : CDAVARCUR Payment attribute bank charge ( Field CDA 5)
####################################################################

$SET_CDAVARCUR
If [L]_AOLDVAL<>this.CDAVARCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_CDAVARCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.CDAVARCUR
 Gosub PROPAGATE_CDAVARCUR
Endif
Return

$INIT_CDAVARCUR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAVARCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_CDAVARCUR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAVARCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_CDAVARCUR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_CDAVARCUR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_CDAVARCUR
[L]CURPRO = "CDAVARCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.CDAVARCUR,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_CDAVARCUR
[L]CURPRO = "CDAVARCUR"
If vireblc(this.CDAVARCUR,2)<>vireblc(format$("K:5c",this.CDAVARCUR),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_CDAVARCUR
[L]CURPRO = "CDAVARCUR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_CDAVARCUR
[L]CURPRO = "CDAVARCUR"
If vireblc(this.CDAVARCUR,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPCDA.ACTRLREF(this,"CDAVARCUR",this.CDAVARCUR,this.CDAVARCUR,this.LEG,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.CDAVARCUR<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_CDAVARCUR
this.isReadonly = 0
[L]CURPRO = "CDAVARCUR"
Gosub _LNKPRO_CDAVARCUR
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_CDAVARCUR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "CDAVARCUR"
$_LNKPRO_CDAVARCUR
If vireblc(this.CDAVARCUR,2)<>""
 # Link GACCDENCOD
 Local File GACCDENCOD [WCDA]
 Read [F:WCDA]CDA0 = this.CDAVARCUR;this.LEG
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="SHOTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDAVARCUR","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCDENCOD" & ZONE="DESTRA" & IDENT1=[F:WCDA]COD & IDENT2=[F:WCDA]LEG & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("CDAVARCUR","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WCDA]
Endif
Return


####################################################################
# 14 : ACCSUSPENSE Suspense account ( Field GAC 15)
####################################################################

$SET_ACCSUSPENSE
If [L]_AOLDVAL<>this.ACCSUSPENSE
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ACCSUSPENSE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ACCSUSPENSE
 Gosub PROPAGATE_ACCSUSPENSE
Endif
Return

$INIT_ACCSUSPENSE
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "ACCSUSPENSE"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_ACCSUSPENSE
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "ACCSUSPENSE"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ACCSUSPENSE           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ACCSUSPENSE           : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ACCSUSPENSE
[L]CURPRO = "ACCSUSPENSE"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & vireblc(this.ACCSUSPENSE,2)=""
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ACCSUSPENSE
[L]CURPRO = "ACCSUSPENSE"
If vireblc(this.ACCSUSPENSE,2)<>vireblc(format$("K:15X",this.ACCSUSPENSE),2)
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(149,100,1)) :  Return : # Incorrect Format
Endif
Return

$_AOTHERS_ACCSUSPENSE
[L]CURPRO = "ACCSUSPENSE"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ACCSUSPENSE
[L]CURPRO = "ACCSUSPENSE"
If vireblc(this.ACCSUSPENSE,2)<>""
 If fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent")=""
  [L]ASTATUS =  func WMTYPGAC.ACTRLREF(this,"ACCSUSPENSE",this.ACCSUSPENSE,this.COA,this.ACCSUSPENSE,2,"")
  If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
 Else
  If this.ACCSUSPENSE<>evalue("this.APARENT."+fmet this.AGETATTRIBUTE([L]CURPRO,"$namProParent"))
   [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(83,123,1)) :  Return : # Invalid value
  Endif
 Endif
Endif
Return

$PROPAGATE_ACCSUSPENSE
this.isReadonly = 0
[L]CURPRO = "ACCSUSPENSE"
Gosub _LNKPRO_ACCSUSPENSE
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ACCSUSPENSE
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "ACCSUSPENSE"
$_LNKPRO_ACCSUSPENSE
If vireblc(this.ACCSUSPENSE,2)<>""
 # Link GACCOUNT
 Local File GACCOUNT [WGAC]
 Read [F:WGAC]GAC0 = this.COA;this.ACCSUSPENSE
 If !fstat
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="SHOTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACCSUSPENSE","$title",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
  Local File ATEXTRA [WAXX]
  Local Char ILAN(GLONLAN)
  For ILAN=this.ACTX.LAN, this.ACTX.AFOLD.ALANGDEF
   For [F:WAXX] Where CODFIC="GACCOUNT" & ZONE="DESTRA" & IDENT1=[F:WGAC]COA & IDENT2=[F:WGAC]ACC & LANGUE = ILAN
    [L]ASTATUS = fmet this.ASETATTRIBUTE("ACCSUSPENSE","$description",[WAXX]TEXTE)
    Break 2
   Next WAXX
  Next ILAN
  LogicClose File [WAXX]
 Endif
 LogicClose File [WGAC]
Endif
Return


####################################################################
# 15 : DEPTOL Discount allowance days ( Field C 4)
####################################################################

$SET_DEPTOL
If [L]_AOLDVAL<>this.DEPTOL
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_DEPTOL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.DEPTOL
 Gosub PROPAGATE_DEPTOL
Endif
Return

$INIT_DEPTOL
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DEPTOL"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_DEPTOL
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DEPTOL"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_DEPTOL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_DEPTOL                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_DEPTOL
[L]CURPRO = "DEPTOL"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.DEPTOL=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_DEPTOL
[L]CURPRO = "DEPTOL"
Return

$_AOTHERS_DEPTOL
[L]CURPRO = "DEPTOL"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_DEPTOL
[L]CURPRO = "DEPTOL"
Return

$PROPAGATE_DEPTOL
this.isReadonly = 0
[L]CURPRO = "DEPTOL"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_DEPTOL
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "DEPTOL"
$_LNKPRO_DEPTOL
Return


####################################################################
# 16 : AMTVAR Maximum amount variance ( Field RAT 0)
####################################################################

$SET_AMTVAR
If [L]_AOLDVAL<>this.AMTVAR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMTVAR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMTVAR
 Gosub PROPAGATE_AMTVAR
Endif
Return

$INIT_AMTVAR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVAR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AMTVAR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVAR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMTVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMTVAR                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMTVAR
[L]CURPRO = "AMTVAR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMTVAR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMTVAR
[L]CURPRO = "AMTVAR"
Return

$_AOTHERS_AMTVAR
[L]CURPRO = "AMTVAR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMTVAR
[L]CURPRO = "AMTVAR"
Return

$PROPAGATE_AMTVAR
this.isReadonly = 0
[L]CURPRO = "AMTVAR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMTVAR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVAR"
$_LNKPRO_AMTVAR
Return


####################################################################
# 17 : AMTVARLIM Amount variance limit ( Field MD1 0)
####################################################################

$SET_AMTVARLIM
If [L]_AOLDVAL<>this.AMTVARLIM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMTVARLIM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMTVARLIM
 Gosub PROPAGATE_AMTVARLIM
Endif
Return

$INIT_AMTVARLIM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVARLIM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AMTVARLIM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVARLIM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMTVARLIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMTVARLIM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMTVARLIM
[L]CURPRO = "AMTVARLIM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMTVARLIM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMTVARLIM
[L]CURPRO = "AMTVARLIM"
Return

$_AOTHERS_AMTVARLIM
[L]CURPRO = "AMTVARLIM"
[L]ASTATUS =  func ASYRTRTATY.CONTROLMD1(this,"AMTVARLIM",this.AMTVARLIM,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMTVARLIM
[L]CURPRO = "AMTVARLIM"
Return

$PROPAGATE_AMTVARLIM
this.isReadonly = 0
[L]CURPRO = "AMTVARLIM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMTVARLIM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVARLIM"
$_LNKPRO_AMTVARLIM
Local Char AFORMAT(50)
[L]ASTATUS =  func ASYRTRTATY.GETFORMATMD1(this,"AMTVARLIM",this.AMTVARLIM,[L]AFORMAT,"")
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]AFORMAT<>''
[L]AFORMAT='"'+[L]AFORMAT+'"'
[L]ASTATUS = fmet this.ASETATTRIBUTE("AMTVARLIM","$x3Format",[L]AFORMAT)
Endif
Return


####################################################################
# 18 : USESEALIS Use search term list ( Field Local menu number 3674)
####################################################################

$SET_USESEALIS
If [L]_AOLDVAL<>this.USESEALIS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USESEALIS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USESEALIS
 Gosub PROPAGATE_USESEALIS
Endif
Return

$INIT_USESEALIS
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "USESEALIS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USESEALIS=0 and fmet this.AGETATTRIBUTE("USESEALIS","$isMandatory")="true"
 this.USESEALIS = 1
Endif
Return
 
$CONTROL_USESEALIS
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "USESEALIS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USESEALIS             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USESEALIS             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USESEALIS
[L]CURPRO = "USESEALIS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USESEALIS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USESEALIS
[L]CURPRO = "USESEALIS"
If this.USESEALIS<0 or this.USESEALIS>len(mess(0,3674,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3674 ->"-num$(this.USESEALIS)-mess(99,123,1)):  Return : # Local menu "3674 -> Invalid option
Endif
Return

$_AOTHERS_USESEALIS
[L]CURPRO = "USESEALIS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USESEALIS
[L]CURPRO = "USESEALIS"
Return

$PROPAGATE_USESEALIS
this.isReadonly = 0
[L]CURPRO = "USESEALIS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USESEALIS
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "USESEALIS"
$_LNKPRO_USESEALIS
Return


####################################################################
# 19 : AMTVARCUR Maximum currency variance ( Field RAT 0)
####################################################################

$SET_AMTVARCUR
If [L]_AOLDVAL<>this.AMTVARCUR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMTVARCUR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMTVARCUR
 Gosub PROPAGATE_AMTVARCUR
Endif
Return

$INIT_AMTVARCUR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVARCUR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return
 
$CONTROL_AMTVARCUR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVARCUR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMTVARCUR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMTVARCUR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMTVARCUR
[L]CURPRO = "AMTVARCUR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMTVARCUR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMTVARCUR
[L]CURPRO = "AMTVARCUR"
Return

$_AOTHERS_AMTVARCUR
[L]CURPRO = "AMTVARCUR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMTVARCUR
[L]CURPRO = "AMTVARCUR"
Return

$PROPAGATE_AMTVARCUR
this.isReadonly = 0
[L]CURPRO = "AMTVARCUR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMTVARCUR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMTVARCUR"
$_LNKPRO_AMTVARCUR
Return


####################################################################
# 20 : FLGCLS Suppress intermediate posting ( Field Local menu number 1)
####################################################################

$SET_FLGCLS
If [L]_AOLDVAL<>this.FLGCLS
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_FLGCLS
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.FLGCLS
 Gosub PROPAGATE_FLGCLS
Endif
Return

$INIT_FLGCLS
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FLGCLS"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.FLGCLS=0 and fmet this.AGETATTRIBUTE("FLGCLS","$isMandatory")="true"
 this.FLGCLS = 1
Endif
Return
 
$CONTROL_FLGCLS
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FLGCLS"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_FLGCLS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_FLGCLS                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_FLGCLS
[L]CURPRO = "FLGCLS"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.FLGCLS=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_FLGCLS
[L]CURPRO = "FLGCLS"
If this.FLGCLS<0 or this.FLGCLS>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.FLGCLS)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_FLGCLS
[L]CURPRO = "FLGCLS"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_FLGCLS
[L]CURPRO = "FLGCLS"
Return

$PROPAGATE_FLGCLS
this.isReadonly = 0
[L]CURPRO = "FLGCLS"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_FLGCLS
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "FLGCLS"
$_LNKPRO_FLGCLS
Return


####################################################################
# 21 : BPRBANID BP bank ID ( Field Local menu number 1)
####################################################################

$SET_BPRBANID
If [L]_AOLDVAL<>this.BPRBANID
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPRBANID
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPRBANID
 Gosub PROPAGATE_BPRBANID
Endif
Return

$INIT_BPRBANID
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRBANID"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BPRBANID=0 and fmet this.AGETATTRIBUTE("BPRBANID","$isMandatory")="true"
 this.BPRBANID = 1
Endif
Return
 
$CONTROL_BPRBANID
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRBANID"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPRBANID              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPRBANID              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPRBANID
[L]CURPRO = "BPRBANID"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BPRBANID=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPRBANID
[L]CURPRO = "BPRBANID"
If this.BPRBANID<0 or this.BPRBANID>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BPRBANID)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BPRBANID
[L]CURPRO = "BPRBANID"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPRBANID
[L]CURPRO = "BPRBANID"
Return

$PROPAGATE_BPRBANID
this.isReadonly = 0
[L]CURPRO = "BPRBANID"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPRBANID
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRBANID"
$_LNKPRO_BPRBANID
Return


####################################################################
# 22 : BPRNUM BP number ( Field Local menu number 1)
####################################################################

$SET_BPRNUM
If [L]_AOLDVAL<>this.BPRNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPRNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPRNUM
 Gosub PROPAGATE_BPRNUM
Endif
Return

$INIT_BPRNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BPRNUM=0 and fmet this.AGETATTRIBUTE("BPRNUM","$isMandatory")="true"
 this.BPRNUM = 1
Endif
Return
 
$CONTROL_BPRNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPRNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPRNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPRNUM
[L]CURPRO = "BPRNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BPRNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPRNUM
[L]CURPRO = "BPRNUM"
If this.BPRNUM<0 or this.BPRNUM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BPRNUM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BPRNUM
[L]CURPRO = "BPRNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPRNUM
[L]CURPRO = "BPRNUM"
Return

$PROPAGATE_BPRNUM
this.isReadonly = 0
[L]CURPRO = "BPRNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPRNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRNUM"
$_LNKPRO_BPRNUM
Return


####################################################################
# 23 : BPRNAM BP name ( Field Local menu number 1)
####################################################################

$SET_BPRNAM
If [L]_AOLDVAL<>this.BPRNAM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BPRNAM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BPRNAM
 Gosub PROPAGATE_BPRNAM
Endif
Return

$INIT_BPRNAM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRNAM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BPRNAM=0 and fmet this.AGETATTRIBUTE("BPRNAM","$isMandatory")="true"
 this.BPRNAM = 1
Endif
Return
 
$CONTROL_BPRNAM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRNAM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BPRNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BPRNAM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BPRNAM
[L]CURPRO = "BPRNAM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BPRNAM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BPRNAM
[L]CURPRO = "BPRNAM"
If this.BPRNAM<0 or this.BPRNAM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BPRNAM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BPRNAM
[L]CURPRO = "BPRNAM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BPRNAM
[L]CURPRO = "BPRNAM"
Return

$PROPAGATE_BPRNAM
this.isReadonly = 0
[L]CURPRO = "BPRNAM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BPRNAM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BPRNAM"
$_LNKPRO_BPRNAM
Return


####################################################################
# 24 : USESUBSTR Substring search ( Field Local menu number 1)
####################################################################

$SET_USESUBSTR
If [L]_AOLDVAL<>this.USESUBSTR
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_USESUBSTR
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.USESUBSTR
 Gosub PROPAGATE_USESUBSTR
Endif
Return

$INIT_USESUBSTR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "USESUBSTR"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.USESUBSTR=0 and fmet this.AGETATTRIBUTE("USESUBSTR","$isMandatory")="true"
 this.USESUBSTR = 1
Endif
Return
 
$CONTROL_USESUBSTR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "USESUBSTR"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_USESUBSTR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_USESUBSTR             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_USESUBSTR
[L]CURPRO = "USESUBSTR"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.USESUBSTR=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_USESUBSTR
[L]CURPRO = "USESUBSTR"
If this.USESUBSTR<0 or this.USESUBSTR>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.USESUBSTR)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_USESUBSTR
[L]CURPRO = "USESUBSTR"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_USESUBSTR
[L]CURPRO = "USESUBSTR"
Return

$PROPAGATE_USESUBSTR
this.isReadonly = 0
[L]CURPRO = "USESUBSTR"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_USESUBSTR
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "USESUBSTR"
$_LNKPRO_USESUBSTR
Return


####################################################################
# 25 : INVNUM Invoice number ( Field Local menu number 1)
####################################################################

$SET_INVNUM
If [L]_AOLDVAL<>this.INVNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_INVNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.INVNUM
 Gosub PROPAGATE_INVNUM
Endif
Return

$INIT_INVNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "INVNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.INVNUM=0 and fmet this.AGETATTRIBUTE("INVNUM","$isMandatory")="true"
 this.INVNUM = 1
Endif
Return
 
$CONTROL_INVNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "INVNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_INVNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_INVNUM                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_INVNUM
[L]CURPRO = "INVNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.INVNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_INVNUM
[L]CURPRO = "INVNUM"
If this.INVNUM<0 or this.INVNUM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.INVNUM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_INVNUM
[L]CURPRO = "INVNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_INVNUM
[L]CURPRO = "INVNUM"
Return

$PROPAGATE_INVNUM
this.isReadonly = 0
[L]CURPRO = "INVNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_INVNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "INVNUM"
$_LNKPRO_INVNUM
Return


####################################################################
# 26 : SRCDOC Source document number ( Field Local menu number 1)
####################################################################

$SET_SRCDOC
If [L]_AOLDVAL<>this.SRCDOC
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_SRCDOC
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.SRCDOC
 Gosub PROPAGATE_SRCDOC
Endif
Return

$INIT_SRCDOC
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "SRCDOC"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.SRCDOC=0 and fmet this.AGETATTRIBUTE("SRCDOC","$isMandatory")="true"
 this.SRCDOC = 1
Endif
Return
 
$CONTROL_SRCDOC
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "SRCDOC"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_SRCDOC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_SRCDOC                : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_SRCDOC
[L]CURPRO = "SRCDOC"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.SRCDOC=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_SRCDOC
[L]CURPRO = "SRCDOC"
If this.SRCDOC<0 or this.SRCDOC>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.SRCDOC)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_SRCDOC
[L]CURPRO = "SRCDOC"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_SRCDOC
[L]CURPRO = "SRCDOC"
Return

$PROPAGATE_SRCDOC
this.isReadonly = 0
[L]CURPRO = "SRCDOC"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_SRCDOC
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "SRCDOC"
$_LNKPRO_SRCDOC
Return


####################################################################
# 27 : ORDERNUM Order number ( Field Local menu number 1)
####################################################################

$SET_ORDERNUM
If [L]_AOLDVAL<>this.ORDERNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_ORDERNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.ORDERNUM
 Gosub PROPAGATE_ORDERNUM
Endif
Return

$INIT_ORDERNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "ORDERNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.ORDERNUM=0 and fmet this.AGETATTRIBUTE("ORDERNUM","$isMandatory")="true"
 this.ORDERNUM = 1
Endif
Return
 
$CONTROL_ORDERNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "ORDERNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_ORDERNUM              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_ORDERNUM              : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_ORDERNUM
[L]CURPRO = "ORDERNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.ORDERNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_ORDERNUM
[L]CURPRO = "ORDERNUM"
If this.ORDERNUM<0 or this.ORDERNUM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.ORDERNUM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_ORDERNUM
[L]CURPRO = "ORDERNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_ORDERNUM
[L]CURPRO = "ORDERNUM"
Return

$PROPAGATE_ORDERNUM
this.isReadonly = 0
[L]CURPRO = "ORDERNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_ORDERNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "ORDERNUM"
$_LNKPRO_ORDERNUM
Return


####################################################################
# 28 : BVRREFNUM ISR reference number ( Field Local menu number 1)
####################################################################

$SET_BVRREFNUM
If [L]_AOLDVAL<>this.BVRREFNUM
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_BVRREFNUM
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.BVRREFNUM
 Gosub PROPAGATE_BVRREFNUM
Endif
Return

$INIT_BVRREFNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BVRREFNUM"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.BVRREFNUM=0 and fmet this.AGETATTRIBUTE("BVRREFNUM","$isMandatory")="true"
 this.BVRREFNUM = 1
Endif
Return
 
$CONTROL_BVRREFNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BVRREFNUM"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_BVRREFNUM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_BVRREFNUM             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_BVRREFNUM
[L]CURPRO = "BVRREFNUM"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.BVRREFNUM=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_BVRREFNUM
[L]CURPRO = "BVRREFNUM"
If this.BVRREFNUM<0 or this.BVRREFNUM>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.BVRREFNUM)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_BVRREFNUM
[L]CURPRO = "BVRREFNUM"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_BVRREFNUM
[L]CURPRO = "BVRREFNUM"
Return

$PROPAGATE_BVRREFNUM
this.isReadonly = 0
[L]CURPRO = "BVRREFNUM"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_BVRREFNUM
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "BVRREFNUM"
$_LNKPRO_BVRREFNUM
Return


####################################################################
# 29 : AMT Amount ( Field Local menu number 1)
####################################################################

$SET_AMT
If [L]_AOLDVAL<>this.AMT
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_AMT
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.AMT
 Gosub PROPAGATE_AMT
Endif
Return

$INIT_AMT
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMT"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.AMT=0 and fmet this.AGETATTRIBUTE("AMT","$isMandatory")="true"
 this.AMT = 1
Endif
Return
 
$CONTROL_AMT
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMT"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_AMT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_AMT                   : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_AMT
[L]CURPRO = "AMT"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.AMT=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_AMT
[L]CURPRO = "AMT"
If this.AMT<0 or this.AMT>len(mess(0,1,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"1 ->"-num$(this.AMT)-mess(99,123,1)):  Return : # Local menu "1 -> Invalid option
Endif
Return

$_AOTHERS_AMT
[L]CURPRO = "AMT"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_AMT
[L]CURPRO = "AMT"
Return

$PROPAGATE_AMT
this.isReadonly = 0
[L]CURPRO = "AMT"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_AMT
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "AMT"
$_LNKPRO_AMT
Return


####################################################################
# 30 : MRGDESFLD Merge description field ( Field Local menu number 3673)
####################################################################

$SET_MRGDESFLD
If [L]_AOLDVAL<>this.MRGDESFLD
 Call _ASTATUSPARENT(this) From ASYRSUB
Endif
Gosub CONTROL_MRGDESFLD
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If [L]_AOLDVAL<>this.MRGDESFLD
 Gosub PROPAGATE_MRGDESFLD
Endif
Return

$INIT_MRGDESFLD
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "MRGDESFLD"
[L]ARULE = "INIT" : [L]ACTION = "INIT" : Gosub ACTION From ASYRSUB
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
If this.MRGDESFLD=0 and fmet this.AGETATTRIBUTE("MRGDESFLD","$isMandatory")="true"
 this.MRGDESFLD = 1
Endif
Return
 
$CONTROL_MRGDESFLD
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "MRGDESFLD"
[L]ASTATUS = fmet this.ADELETEERROR([L]CURPRO)
Gosub _AFORMAT_MRGDESFLD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AOTHERS_MRGDESFLD             : If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

$_AMANDATORY_MRGDESFLD
[L]CURPRO = "MRGDESFLD"
If fmet this.AGETATTRIBUTE([L]CURPRO,"$isMandatory")="true" & this.MRGDESFLD=0
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(10,123,1)) :  Return : # Mandatory field
Endif
Return

$_AFORMAT_MRGDESFLD
[L]CURPRO = "MRGDESFLD"
If this.MRGDESFLD<0 or this.MRGDESFLD>len(mess(0,3673,1))
 # Pop / Invalid option
 [L]ASTATUS = func ASYRSUB._ASETSTATUS(this,[L]CURPRO,0,[V]CST_AERROR,[V]CST_AHTTP_BAD_REQUEST,mess(4,11,1)-"3673 ->"-num$(this.MRGDESFLD)-mess(99,123,1)):  Return : # Local menu "3673 -> Invalid option
Endif
Return

$_AOTHERS_MRGDESFLD
[L]CURPRO = "MRGDESFLD"
[L]ARULE = "CONTROL" : [L]ACTION = "CONTROL" : Gosub ACTION From ASYRSUB
Return

$_AOTHERS_REF_MRGDESFLD
[L]CURPRO = "MRGDESFLD"
Return

$PROPAGATE_MRGDESFLD
this.isReadonly = 0
[L]CURPRO = "MRGDESFLD"
[L]ARULE = "PROPAGATE" : [L]ACTION = "PROPAGATE" : Gosub ACTION From ASYRSUB
this.isReadonly = 1
Return

$LNKPRO_MRGDESFLD
Gosub DECLARE_VAR From WMC0BSIIMPPAR
[L]CURPRO = "MRGDESFLD"
$_LNKPRO_MRGDESFLD
Return




