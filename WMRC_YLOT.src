#<AdxTL>@(#)0.0.0.0 $Revision$Class Lot
# Supervisor
## CRUD-CLASSE ## YLOT
# 2018-09-23 19:47:56 499


############################################################################################
### Subprog AINSERT
############################################################################################
Subprog AINSERT(YLOT,ASTATUS)
Variable Instance YLOT Using R_YLOT
Variable Integer ASTATUS

If YLOT = null : End : Endif

Gosub AVARIABLES From WMR00YLOT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If fmet YLOT.ACTX.AGETAFCRIGHT(YLOT,"GESYLOT",[V]CST_ATRUE)>=[V]CST_AERROR : [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END : Endif
If fmet YLOT.ACTX.AGETAFCRIGHTC(YLOT,"GESYLOT",[L]A_STRSITE,[V]CST_ATRUE)>=[V]CST_AERROR
 [L]ASTATUS=[V]CST_AERROR : Goto AINSERT_END
Endif

Gosub AREPCONTROL_AINSERT
If [L]ASTATUS>=[V]CST_AERROR : Goto AINSERT_END : Endif

If !adxlog
 Gosub AINSERT_TR_YLOT
Else
 Gosub AINSERT_YLOT
Endif
If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_END : Return : Endif

Gosub _AINSERT_AFTER
$AINSERT_END
[L]A_I = YLOT.freeSnapshot
YLOT.snapshotEnabled = 1
End

#-----------------------------------------------------#
$AREPCONTROL_AINSERT
YLOT.ASTALIN = [V]CST_ANEW
YLOT.YLOT.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YLOT.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Gosub AINSERT_CONTROL
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLOT.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return


$AINSERT_CONTROL
Gosub _AINSERT_CONTROL_BEFORE
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
# Control mandatory
[L]ASTATUS =  max([L]ASTATUS,fmet YLOT._AMANDATORY)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control format
[L]ASTATUS =  max([L]ASTATUS,fmet YLOT._AFORMAT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

# Control other
[L]ASTATUS =  max([L]ASTATUS,fmet YLOT._AOTHERS)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Gosub _AINSERT_CONTROL_AFTER
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_BEFORE
If YLOT.YLOT.ASTALIN = [V]CST_ANEWDEL : Return : Endif
YLOT.YLOT.ASTALIN = [V]CST_ANEW
[L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.ACTION("AINSERT_CONTROL_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLOT.YLOT.YLPR) : # YLOTPRC -- 2
 If YLOT.YLOT.YLPR(A_N2) <> null
& and !find(YLOT.YLOT.YLPR(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.YLPR(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLOT.YLOT.YREL) : # YREL -- 3
 If YLOT.YLOT.YREL(A_N2) <> null
& and !find(YLOT.YLOT.YREL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.YREL(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLOT.YLOT.YLNL) : # YLOTANL -- 4
 If YLOT.YLOT.YLNL(A_N2) <> null
& and !find(YLOT.YLOT.YLNL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.YLNL(A_N2)._AINSERT_CONTROL_BEFORE)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

Return

#-----------------------------------------------------#
$_AINSERT_CONTROL_AFTER
For A_N2=1 To maxtab(YLOT.YLOT.YLPR) : # YLOTPRC -- 2
 If YLOT.YLOT.YLPR(A_N2) <> null
& and !find(YLOT.YLOT.YLPR(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.YLPR(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLOT.YLOT.YREL) : # YREL -- 3
 If YLOT.YLOT.YREL(A_N2) <> null
& and !find(YLOT.YLOT.YREL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.YREL(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
For A_N2=1 To maxtab(YLOT.YLOT.YLNL) : # YLOTANL -- 4
 If YLOT.YLOT.YLNL(A_N2) <> null
& and !find(YLOT.YLOT.YLNL(A_N2).ASTALIN,[V]CST_ANEWDEL,[V]CST_ADEL)
  [L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.YLNL(A_N2)._AINSERT_CONTROL_AFTER)
  If [L]ASTATUS>=[V]CST_AERROR : Break  : Endif
 Endif
Next A_N2
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT.ACTION("AINSERT_CONTROL_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_TR_YLOT
Trbegin [F:YLOT]
 Gosub AINSERT_YLOT
 If [L]ASTATUS>=[V]CST_AERROR : Gosub AINSERT_ABORT : Return : Endif
Commit
Return

#-----------------------------------------------------#
$_AINSERT_AFTER
If find(YLOT.YLOT.ASTALIN,[V]CST_ADEL,[V]CST_ANEWDEL,[V]CST_ALL)=0
 YLOT.YLOT.ASTALIN = [V]CST_ALL
Endif
Local Integer ASTATUS2
For A_N2=1 To maxtab(YLOT.YLOT.YLPR)
 If YLOT.YLOT.YLPR(A_N2) <> null
  [L]ASTATUS2 = fmet YLOT.YLOT.YLPR(A_N2)._AINSERT_AFTER
  If YLOT.YLOT.YLPR(A_N2).ASTALIN=[V]CST_ADEL or YLOT.YLOT.YLPR(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YLOT.YLOT.YLPR(A_N2)
   YLOT.YLOT.YLPR(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YLOT.YLOT.YREL)
 If YLOT.YLOT.YREL(A_N2) <> null
  [L]ASTATUS2 = fmet YLOT.YLOT.YREL(A_N2)._AINSERT_AFTER
  If YLOT.YLOT.YREL(A_N2).ASTALIN=[V]CST_ADEL or YLOT.YLOT.YREL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YLOT.YLOT.YREL(A_N2)
   YLOT.YLOT.YREL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Local Integer ASTATUS2
For A_N2=1 To maxtab(YLOT.YLOT.YLNL)
 If YLOT.YLOT.YLNL(A_N2) <> null
  [L]ASTATUS2 = fmet YLOT.YLOT.YLNL(A_N2)._AINSERT_AFTER
  If YLOT.YLOT.YLNL(A_N2).ASTALIN=[V]CST_ADEL or YLOT.YLOT.YLNL(A_N2).ASTALIN=[V]CST_ANEWDEL
   FreeInstance YLOT.YLOT.YLNL(A_N2)
   YLOT.YLOT.YLNL(A_N2) = null
  Endif
  [L]ASTATUS = max([L]ASTATUS2,[L]ASTATUS)
 Endif
Next A_N2
Return

#-----------------------------------------------------#
$AINSERT_YLOT
[L]ASTATUS = max([L]ASTATUS,fmet YLOT.ACTION("AINSERT_BEFORE"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLOT.YLOT._AINSERT)
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif

[L]ASTATUS = max([L]ASTATUS,fmet YLOT.ACTION("AINSERT_AFTER"))
If [L]ASTATUS>=[V]CST_AERROR : Return : Endif
Return

#-----------------------------------------------------#
$AINSERT_ABORT
Rollback
$_AINSERT_ABORT
If YLOT.snapshotEnabled=1
 [L]A_RETIK = YLOT.revertUpdTick
Endif
[L]ASTATUS = max(fmet YLOT.ACTION("AINSERT_ABORT"),[L]ASTATUS)
Return
#-----------------------------------------------------#



